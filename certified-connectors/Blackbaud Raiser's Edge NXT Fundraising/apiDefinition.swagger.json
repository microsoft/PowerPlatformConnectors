{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud Raisers Edge NXT Fun",
    "description": "Blackbaud Raiser's Edge NXT is a comprehensive cloud-based fundraising and donor management software solution built specifically for nonprofits and the entire social good community. Use the Fundraising connector to manage campaigns, funds, appeals, and packages.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-raisers-edge-nxt"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "skyApiOAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2.sky.blackbaud.com/authorization",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "skyApiOAuth": []
    }
  ],
  "paths": {
    "/constituent/v1/constituents/{constituent_id}/appeals": {
      "get": {
        "operationId": "ListConstituentAppeals",
        "summary": "List constituent appeals",
        "description": "Lists the appeals for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfConstituentAppealRead"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent appeals."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals": {
      "get": {
        "operationId": "ListAppeals",
        "summary": "List appeals",
        "description": "Returns a list of appeals.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive appeals?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to appeals created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to appeals modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfAppealRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the appeals."
          }
        }
      }
    },
    "/fundraising/v1/appeals/{appeal_id}": {
      "get": {
        "operationId": "GetAppeal",
        "summary": "Get an appeal",
        "description": "Returns information about an appeal.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appeal_id",
            "in": "path",
            "description": "The system record ID of the appeal to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Appeal ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.AppealRead"
            }
          },
          "400": {
            "description": "Returned when the specified appeal ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the appeal."
          },
          "404": {
            "description": "Returned when the specified appeal is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/{appeal_id}/attachments": {
      "get": {
        "operationId": "ListAppealAttachments",
        "summary": "List appeal attachments",
        "description": "Lists the attachments for an appeal.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appeal_id",
            "in": "path",
            "description": "The system record ID of the appeal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Appeal ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfAppealAttachmentRead"
            }
          },
          "400": {
            "description": "Returned when the specified appeal ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attachments."
          },
          "404": {
            "description": "Returned when the specified appeal is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/{appeal_id}/customfields": {
      "get": {
        "operationId": "ListAppealCustomFields",
        "summary": "List appeal custom fields",
        "description": "Lists the custom fields for an appeal.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appeal_id",
            "in": "path",
            "description": "The system record ID of the appeal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Appeal ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfAppealCustomFieldRead"
            }
          },
          "400": {
            "description": "Returned when the specified appeal ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the custom fields."
          },
          "404": {
            "description": "Returned when the specified appeal is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/attachments": {
      "post": {
        "operationId": "CreateAppealAttachment",
        "summary": "Create an appeal attachment",
        "description": "Creates a new appeal attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.AppealAttachmentAdd"
            },
            "description": "An object that represents the attachment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an attachment. The response body contains the ID of the new attachment.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedAppealAttachment"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the attachment."
          },
          "404": {
            "description": "Returned when the specified appeal is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/attachments/{attachment_id}": {
      "patch": {
        "operationId": "EditAppealAttachment",
        "summary": "Update an appeal attachment",
        "description": "Updates an appeal attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "The system record ID of the attachment to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.AppealAttachmentEdit"
            },
            "description": "An object that represents the properties of the attachment to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the attachment."
          },
          "400": {
            "description": "Returned when the specified attachment ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the attachment."
          },
          "404": {
            "description": "Returned when the specified attachment is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/customfields": {
      "post": {
        "operationId": "CreateAppealCustomField",
        "summary": "Create an appeal custom field",
        "description": "Creates a new appeal custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.AppealCustomFieldAdd"
            },
            "description": "An object that represents the custom field to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a custom field. The response body contains the ID of the new custom field.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedAppealCustomField"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the custom field."
          },
          "404": {
            "description": "Returned when the specified appeal is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/customfields/{custom_field_id}": {
      "patch": {
        "operationId": "EditAppealCustomField",
        "summary": "Update an appeal custom field",
        "description": "Updates an appeal custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "The system record ID of the custom field to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Custom field ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.AppealCustomFieldEdit"
            },
            "description": "An object that represents the properties of the custom field to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the custom field."
          },
          "400": {
            "description": "Returned when the specified custom field ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the custom field."
          },
          "404": {
            "description": "Returned when the specified custom field is not found."
          }
        }
      }
    },
    "/fundraising/v1/appeals/customfields/categories": {
      "get": {
        "operationId": "ListAppealCustomFieldCategories",
        "summary": "List appeal custom field categories",
        "description": "Lists the appeal custom field categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCustomFieldCategoryRead"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view custom field categories."
          }
        }
      }
    },
    "/fundraising/v1/campaigns": {
      "get": {
        "operationId": "ListCampaigns",
        "summary": "List campaigns",
        "description": "Returns a list of campaigns.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive campaigns?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to campaigns created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to campaigns modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCampaignRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the campaigns."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/{campaign_id}": {
      "get": {
        "operationId": "GetCampaign",
        "summary": "Get a campaign",
        "description": "Returns information about a campaign.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The system record ID of the campaign to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Campaign ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CampaignRead"
            }
          },
          "400": {
            "description": "Returned when the specified campaign ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the campaign."
          },
          "404": {
            "description": "Returned when the specified campaign is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/{campaign_id}/attachments": {
      "get": {
        "operationId": "ListCampaignAttachments",
        "summary": "List campaign attachments",
        "description": "Lists the attachments for an campaign.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The system record ID of the campaign.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Campaign ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCampaignAttachmentRead"
            }
          },
          "400": {
            "description": "Returned when the specified campaign ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attachments."
          },
          "404": {
            "description": "Returned when the specified campaign is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/{campaign_id}/customfields": {
      "get": {
        "operationId": "ListCampaignCustomFields",
        "summary": "List campaign custom fields",
        "description": "Lists the custom fields for a campaign.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The system record ID of the campaign.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Campaign ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCampaignCustomFieldRead"
            }
          },
          "400": {
            "description": "Returned when the specified campaign ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the custom fields."
          },
          "404": {
            "description": "Returned when the specified campaign is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/attachments": {
      "post": {
        "operationId": "CreateCampaignAttachment",
        "summary": "Create a campaign attachment",
        "description": "Creates a new campaign attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CampaignAttachmentAdd"
            },
            "description": "An object that represents the attachment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an attachment. The response body contains the ID of the new attachment.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedCampaignAttachment"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the attachment."
          },
          "404": {
            "description": "Returned when the specified campaign is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/attachments/{attachment_id}": {
      "patch": {
        "operationId": "EditCampaignAttachment",
        "summary": "Update a campaign attachment",
        "description": "Updates a campaign attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "The system record ID of the attachment to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CampaignAttachmentEdit"
            },
            "description": "An object that represents the properties of the attachment to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the attachment."
          },
          "400": {
            "description": "Returned when the specified attachment ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the attachment."
          },
          "404": {
            "description": "Returned when the specified attachment is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/customfields": {
      "post": {
        "operationId": "CreateCampaignCustomField",
        "summary": "Create a campaign custom field",
        "description": "Creates a new campaign custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CampaignCustomFieldAdd"
            },
            "description": "An object that represents the custom field to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a custom field. The response body contains the ID of the new custom field.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedCampaignCustomField"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the custom field."
          },
          "404": {
            "description": "Returned when the specified campaign is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/customfields/{custom_field_id}": {
      "patch": {
        "operationId": "EditCampaignCustomField",
        "summary": "Update a campaign custom field",
        "description": "Updates a campaign custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "The system record ID of the custom field to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Custom field ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CampaignCustomFieldEdit"
            },
            "description": "An object that represents the properties of the custom field to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the custom field."
          },
          "400": {
            "description": "Returned when the specified custom field ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the custom field."
          },
          "404": {
            "description": "Returned when the specified custom field is not found."
          }
        }
      }
    },
    "/fundraising/v1/campaigns/customfields/categories": {
      "get": {
        "operationId": "ListCampaignCustomFieldCategories",
        "summary": "List campaign custom field categories",
        "description": "Lists the campaign custom field categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCustomFieldCategoryRead"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view custom field categories."
          }
        }
      }
    },
    "/fundraising/v1/funds": {
      "get": {
        "operationId": "ListFunds",
        "summary": "List funds",
        "description": "Returns a list of funds.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive funds?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to funds created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to funds modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfFundRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the funds."
          }
        }
      }
    },
    "/fundraising/v1/funds/{fund_id}": {
      "get": {
        "operationId": "GetFund",
        "summary": "Get a fund",
        "description": "Returns information about a fund.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fund_id",
            "in": "path",
            "description": "The system record ID of the fund to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Fund ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.FundRead"
            }
          },
          "400": {
            "description": "Returned when the specified fund ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the fund."
          },
          "404": {
            "description": "Returned when the specified fund is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/{fund_id}/attachments": {
      "get": {
        "operationId": "ListFundAttachments",
        "summary": "List fund attachments",
        "description": "Lists the attachments for a fund.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fund_id",
            "in": "path",
            "description": "The system record ID of the fund.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Fund ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfFundAttachmentRead"
            }
          },
          "400": {
            "description": "Returned when the specified fund ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attachments."
          },
          "404": {
            "description": "Returned when the specified fund is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/{fund_id}/customfields": {
      "get": {
        "operationId": "ListFundCustomFields",
        "summary": "List fund custom fields",
        "description": "Lists the custom fields for a fund.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fund_id",
            "in": "path",
            "description": "The system record ID of the fund.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Fund ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfFundCustomFieldRead"
            }
          },
          "400": {
            "description": "Returned when the specified fund ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the custom fields."
          },
          "404": {
            "description": "Returned when the specified fund is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/attachments": {
      "post": {
        "operationId": "CreateFundAttachment",
        "summary": "Create a fund attachment",
        "description": "Creates a new fund attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.FundAttachmentAdd"
            },
            "description": "An object that represents the attachment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an attachment. The response body contains the ID of the new attachment.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedFundAttachment"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the attachment."
          },
          "404": {
            "description": "Returned when the specified fund is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/attachments/{attachment_id}": {
      "patch": {
        "operationId": "EditFundAttachment",
        "summary": "Update a fund attachment",
        "description": "Updates a fund attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "The system record ID of the attachment to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.FundAttachmentEdit"
            },
            "description": "An object that represents the properties of the attachment to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the attachment."
          },
          "400": {
            "description": "Returned when the specified attachment ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the attachment."
          },
          "404": {
            "description": "Returned when the specified attachment is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/customfields": {
      "post": {
        "operationId": "CreateFundCustomField",
        "summary": "Create a fund custom field",
        "description": "Creates a new fund custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.FundCustomFieldAdd"
            },
            "description": "An object that represents the custom field to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a custom field. The response body contains the ID of the new custom field.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.CreatedFundCustomField"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the custom field."
          },
          "404": {
            "description": "Returned when the specified fund is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/customfields/{custom_field_id}": {
      "patch": {
        "operationId": "EditFundCustomField",
        "summary": "Update a fund custom field",
        "description": "Updates a fund custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "The system record ID of the custom field to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Custom field ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.FundCustomFieldEdit"
            },
            "description": "An object that represents the properties of the custom field to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the custom field."
          },
          "400": {
            "description": "Returned when the specified custom field ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the custom field."
          },
          "404": {
            "description": "Returned when the specified custom field is not found."
          }
        }
      }
    },
    "/fundraising/v1/funds/customfields/categories": {
      "get": {
        "operationId": "ListFundCustomFieldCategories",
        "summary": "List fund custom field categories",
        "description": "Lists the fund custom field categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfCustomFieldCategoryRead"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view custom field categories."
          }
        }
      }
    },
    "/fundraising/v1/packages": {
      "get": {
        "operationId": "ListPackages",
        "summary": "List packages",
        "description": "Returns a list of packages.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appeal_id",
            "in": "query",
            "description": "Represents a comma-separated list of appeal identifiers to filter the results. For example, \"506,918\" returns only packages for appeal 506 or appeal 918.",
            "type": "string",
            "x-ms-summary": "Appeal ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive packages?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to packages created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to packages modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.ApiCollectionOfPackageRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the packages."
          }
        }
      }
    },
    "/fundraising/v1/packages/{package_id}": {
      "get": {
        "operationId": "GetPackage",
        "summary": "Get a package",
        "description": "Returns information about a package.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "description": "The system record ID of the package to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Package ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/FundraisingApi.PackageRead"
            }
          },
          "400": {
            "description": "Returned when the specified package ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the package."
          },
          "404": {
            "description": "Returned when the specified package is not found."
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues": {
      "get": {
        "operationId": "GetDynamicValues",
        "summary": "Get dynamic values",
        "description": "List dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "route",
            "in": "query",
            "description": "The route within the specified SKY API to call to produce the values for the dynamic list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues/customfields": {
      "get": {
        "operationId": "GetCustomFieldCodeTableDynamicValues",
        "summary": "Get custom field code table dynamic values",
        "description": "List custom field code table dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicproperties/customfields": {
      "get": {
        "operationId": "GetCustomFieldDynamicProperties",
        "summary": "Get custom field dynamic properties",
        "description": "List custom field dynamic properties.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the endpoint that will be used to fetch the custom field category definition.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicProperties"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConstituentApi.ApiCollectionOfConstituentAppealRead": {
      "type": "object",
      "description": "Constituent appeals",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.ConstituentAppealRead"
          }
        }
      }
    },
    "ConstituentApi.ConstituentAppealRead": {
      "type": "object",
      "description": "Constituent appeal",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the constituent appeal.",
          "x-ms-summary": "ID"
        },
        "appeal": {
          "type": "object",
          "description": "Appeal",
          "x-ms-summary": "Appeal",
          "properties": {
            "id": {
              "type": "string",
              "description": "The system record ID of the appeal.",
              "x-ms-summary": "ID"
            },
            "description": {
              "type": "string",
              "description": "The appeal description.",
              "x-ms-summary": "description"
            }
          }
        },
        "package": {
          "type": "object",
          "description": "Package",
          "x-ms-summary": "Package",
          "properties": {
            "id": {
              "type": "string",
              "description": "The system record ID of the package.",
              "x-ms-summary": "ID"
            },
            "description": {
              "type": "string",
              "description": "The package description.",
              "x-ms-summary": "description"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The constituent appeal date.",
          "x-ms-summary": "Date"
        },
        "response": {
          "type": "string",
          "description": "The response for the constituent appeal.",
          "x-ms-summary": "Response"
        },
        "marketing_segment": {
          "type": "string",
          "description": "The marketing segment for the constituent appeal.",
          "x-ms-summary": "Marketing segment"
        },
        "marketing_source_code": {
          "type": "string",
          "description": "The marketing source code for the constituent appeal.",
          "x-ms-summary": "Marketing source code"
        },
        "mailing_id": {
          "type": "string",
          "description": "The user-defined mailing identifier for the constituent appeal.",
          "x-ms-summary": "Mailing ID"
        },
        "finder_number": {
          "type": "string",
          "description": "The marketing finder number for the constituent appeal.",
          "x-ms-summary": "Finder number"
        },
        "comments": {
          "type": "string",
          "description": "User comments for the constituent appeal.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "FundraisingApi.ApiCollectionOfAppealAttachmentRead": {
      "type": "object",
      "description": "Attachments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.AppealAttachmentRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfAppealCustomFieldRead": {
      "type": "object",
      "description": "Custom fields",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.AppealCustomFieldRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfAppealRead": {
      "type": "object",
      "description": "Appeals",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.AppealRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfCampaignAttachmentRead": {
      "type": "object",
      "description": "Attachments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.CampaignAttachmentRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfCampaignCustomFieldRead": {
      "type": "object",
      "description": "Custom fields",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.CampaignCustomFieldRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfCampaignRead": {
      "type": "object",
      "description": "Campaigns",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.CampaignRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfCustomFieldCategoryRead": {
      "type": "object",
      "description": "Custom field categories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.CustomFieldCategoryRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfFundAttachmentRead": {
      "type": "object",
      "description": "Attachments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.FundAttachmentRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfFundCustomFieldRead": {
      "type": "object",
      "description": "Custom fields",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.FundCustomFieldRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfFundRead": {
      "type": "object",
      "description": "Funds",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.FundRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfFundraiserAssignmentRead": {
      "type": "object",
      "description": "Assignments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.FundraiserAssignmentRead"
          }
        }
      }
    },
    "FundraisingApi.ApiCollectionOfPackageRead": {
      "type": "object",
      "description": "Packages",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/FundraisingApi.PackageRead"
          }
        }
      }
    },
    "FundraisingApi.AppealAttachmentAdd": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "required": [
        "parent_id",
        "type"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the appeal associated with the attachment.",
          "x-ms-summary": "Appeal ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z'). This field defaults to the current date and time if not supplied.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        }
      }
    },
    "FundraisingApi.AppealAttachmentEdit": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        }
      }
    },
    "FundraisingApi.AppealAttachmentRead": {
      "type": "object",
      "description": "Attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attachment.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the appeal associated with the attachment.",
          "x-ms-summary": "Appeal ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "thumbnail_url": {
          "type": "string",
          "description": "The URL for a thumbnail. For physical attachments that are images only. Contains a time-bound signature that limits access to 60 minutes.",
          "x-ms-summary": "Thumbnail URL"
        },
        "content_type": {
          "type": "string",
          "description": "The content type. For physical attachments only.",
          "x-ms-summary": "Content type"
        },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The file size in bytes. For physical attachments only.",
          "x-ms-summary": "File size"
        }
      }
    },
    "FundraisingApi.AppealCustomFieldAdd": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "required": [
        "parent_id",
        "category"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the appeal associated with the custom field.",
          "x-ms-summary": "Appeal ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListAppealCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListAppealCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "appeals",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "appeals"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.AppealCustomFieldEdit": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The custom field category (required if updating the custom field value).",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListAppealCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListAppealCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "appeals",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "appeals"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.AppealCustomFieldRead": {
      "type": "object",
      "description": "Custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the custom field.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the appeal associated with the custom field.",
          "x-ms-summary": "Appeal ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category"
        },
        "type": {
          "type": "string",
          "description": "The type of data that the custom field represents.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        },
        "value": {
          "description": "The value of the custom field.",
          "x-ms-summary": "Value"
        },
        "text_value": {
          "type": "string",
          "description": "The text value of the custom field.",
          "x-ms-summary": "Text value"
        },
        "number_value": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric value of the custom field.",
          "x-ms-summary": "Number value"
        },
        "date_value": {
          "type": "string",
          "format": "date",
          "description": "The date value of the custom field.",
          "x-ms-summary": "Date value"
        },
        "currency_value": {
          "type": "number",
          "format": "double",
          "description": "The currency value of the custom field.",
          "x-ms-summary": "Currency value"
        },
        "boolean_value": {
          "type": "boolean",
          "description": "The boolean value of the custom field.",
          "x-ms-summary": "Boolean value"
        },
        "codetableentry_value": {
          "type": "string",
          "description": "The table entry value of the custom field.",
          "x-ms-summary": "Table entry value"
        },
        "constituentid_value": {
          "type": "string",
          "description": "The constituent ID value of the custom field.",
          "x-ms-summary": "Constituent ID value"
        },
        "fuzzydate_value": {
          "type": "object",
          "description": "The fuzzy date value of the custom field.",
          "x-ms-summary": "Fuzzy date value",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field.",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "FundraisingApi.AppealRead": {
      "type": "object",
      "description": "Appeal",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the appeal.",
          "x-ms-summary": "ID"
        },
        "category": {
          "type": "string",
          "description": "The category of the appeal.",
          "x-ms-summary": "Category"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the appeal was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the appeal was last modified.",
          "x-ms-summary": "Date modified"
        },
        "description": {
          "type": "string",
          "description": "The display name of the appeal.",
          "x-ms-summary": "Description"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the appeal.",
          "x-ms-summary": "End date"
        },
        "goal": {
          "type": "object",
          "description": "The monetary goal associated with the appeal.",
          "x-ms-summary": "Goal",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the appeal active (meaning, the current date is after any start date and before any end date)?",
          "x-ms-summary": "Inactive?"
        },
        "lookup_id": {
          "type": "string",
          "description": "The user-defined identifier for the appeal.",
          "x-ms-summary": "Lookup ID"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the appeal.",
          "x-ms-summary": "Start date"
        }
      }
    },
    "FundraisingApi.CampaignAttachmentAdd": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "required": [
        "parent_id",
        "type"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the attachment.",
          "x-ms-summary": "Campaign ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z'). This field defaults to the current date and time if not supplied.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        }
      }
    },
    "FundraisingApi.CampaignAttachmentEdit": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        }
      }
    },
    "FundraisingApi.CampaignAttachmentRead": {
      "type": "object",
      "description": "Attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attachment.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the attachment.",
          "x-ms-summary": "Campaign ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "thumbnail_url": {
          "type": "string",
          "description": "The URL for a thumbnail. For physical attachments that are images only. Contains a time-bound signature that limits access to 60 minutes.",
          "x-ms-summary": "Thumbnail URL"
        },
        "content_type": {
          "type": "string",
          "description": "The content type. For physical attachments only.",
          "x-ms-summary": "Content type"
        },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The file size in bytes. For physical attachments only.",
          "x-ms-summary": "File size"
        }
      }
    },
    "FundraisingApi.CampaignCustomFieldAdd": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "required": [
        "parent_id",
        "category"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the custom field.",
          "x-ms-summary": "Campaign ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListCampaignCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCampaignCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "campaigns",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "campaigns"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.CampaignCustomFieldEdit": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The custom field category (required if updating the custom field value).",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListCampaignCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCampaignCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "campaigns",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "campaigns"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.CampaignCustomFieldRead": {
      "type": "object",
      "description": "Custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the custom field.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the custom field.",
          "x-ms-summary": "Campaign ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category"
        },
        "type": {
          "type": "string",
          "description": "The type of data that the custom field represents.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        },
        "value": {
          "description": "The value of the custom field.",
          "x-ms-summary": "Value"
        },
        "text_value": {
          "type": "string",
          "description": "The text value of the custom field.",
          "x-ms-summary": "Text value"
        },
        "number_value": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric value of the custom field.",
          "x-ms-summary": "Number value"
        },
        "date_value": {
          "type": "string",
          "format": "date",
          "description": "The date value of the custom field.",
          "x-ms-summary": "Date value"
        },
        "currency_value": {
          "type": "number",
          "format": "double",
          "description": "The currency value of the custom field.",
          "x-ms-summary": "Currency value"
        },
        "boolean_value": {
          "type": "boolean",
          "description": "The boolean value of the custom field.",
          "x-ms-summary": "Boolean value"
        },
        "codetableentry_value": {
          "type": "string",
          "description": "The table entry value of the custom field.",
          "x-ms-summary": "Table entry value"
        },
        "constituentid_value": {
          "type": "string",
          "description": "The constituent ID value of the custom field.",
          "x-ms-summary": "Constituent ID value"
        },
        "fuzzydate_value": {
          "type": "object",
          "description": "The fuzzy date value of the custom field.",
          "x-ms-summary": "Fuzzy date value",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field.",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "FundraisingApi.CampaignRead": {
      "type": "object",
      "description": "Campaign",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the campaign.",
          "x-ms-summary": "ID"
        },
        "category": {
          "type": "string",
          "description": "The category of the campaign.",
          "x-ms-summary": "Category"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the campaign was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the campaign was last modified.",
          "x-ms-summary": "Date modified"
        },
        "description": {
          "type": "string",
          "description": "The display name of the campaign.",
          "x-ms-summary": "Description"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the campaign.",
          "x-ms-summary": "End date"
        },
        "goal": {
          "type": "object",
          "description": "The monetary goal associated with the campaign.",
          "x-ms-summary": "Goal",
          "properties": {
            "value": {
              "format": "double",
              "description": "The monetary value.",
              "type": "number"
            }
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the campaign inactive (meaning, the current date is after any start date and before any end date)?",
          "x-ms-summary": "Inactive?"
        },
        "lookup_id": {
          "type": "string",
          "description": "The user-defined identifier for the campaign.",
          "x-ms-summary": "Lookup ID"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the campaign.",
          "x-ms-summary": "Start date"
        }
      }
    },
    "FundraisingApi.CreatedAppealAttachment": {
      "type": "object",
      "description": "Created appeal attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created appeal attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedAppealCustomField": {
      "type": "object",
      "description": "Created appeal custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created appeal custom field.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedCampaignAttachment": {
      "type": "object",
      "description": "Created campaign attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created campaign attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedCampaignCustomField": {
      "type": "object",
      "description": "Created campaign custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created campaign custom field.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedFundraiserAssignment": {
      "type": "object",
      "description": "Created fundraiser assignment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created fundraiser assignment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedFundAttachment": {
      "type": "object",
      "description": "Created fund attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created fund attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CreatedFundCustomField": {
      "type": "object",
      "description": "Created fund custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created fund custom field.",
          "x-ms-summary": "ID"
        }
      }
    },
    "FundraisingApi.CustomFieldCategoryRead": {
      "type": "object",
      "description": "The system includes many different types of custom fields. Custom field categories store the metadata to appropriately match how you use a given custom field with an available type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom field category.",
          "x-ms-summary": "Name"
        },
        "type": {
          "type": "string",
          "description": "The type of data that custom fields with this category represent.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        }
      }
    },
    "FundraisingApi.FundraiserAssignmentAdd": {
      "type": "object",
      "description": "Fundraiser constituents interact with other constituents on behalf of your organization to cultivate relationships and request donations. Fundraiser assignments allow you to assign specific constituents to fundraisers for solicitation purposes.",
      "required": [
        "constituent_id",
        "fundraiser_id"
      ],
      "properties": {
        "fundraiser_id": {
          "type": "string",
          "description": "The system record ID of the fundraiser.",
          "x-ms-summary": "Fundraiser ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the assigned constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "type": {
          "type": "string",
          "description": "The type of fundraiser.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "fundraising",
              "route": "fundraisers/types"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "route": {
                "value": "fundraisers/types"
              }
            }
          }
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the assignment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Assignment starts"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the assignment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Assignment ends"
        },
        "amount": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The goal amount for the fundraiser to solicit from the assigned constituent.",
              "x-ms-summary": "Amount"
            }
          }
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign to which which resulting gifts will be applied.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund to which which resulting gifts will be applied.",
          "x-ms-summary": "Fund ID"
        },
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal to which which resulting gifts will be applied.",
          "x-ms-summary": "Appeal ID"
        }
      }
    },
    "FundraisingApi.FundraiserAssignmentRead": {
      "type": "object",
      "description": "Assignment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the fundraiser assignment.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the assigned constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "type": {
          "type": "string",
          "description": "The fundraiser type.",
          "x-ms-summary": "Type"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the assignment.",
          "x-ms-summary": "Assignment starts"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the assignment.",
          "x-ms-summary": "Assignment ends"
        },
        "amount": {
          "type": "object",
          "description": "The goal amount for the fundraiser to solicit from the assigned constituent.",
          "x-ms-summary": "Amount",
          "properties": {
            "value": {
              "format": "double",
              "description": "The monetary value.",
              "type": "number"
            }
          }
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign to which which resulting gifts will be applied.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund to which which resulting gifts will be applied.",
          "x-ms-summary": "Fund ID"
        },
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal to which which resulting gifts will be applied.",
          "x-ms-summary": "Appeal ID"
        }
      }
    },
    "FundraisingApi.FundAttachmentAdd": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "required": [
        "parent_id",
        "type"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the attachment.",
          "x-ms-summary": "Fund ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z'). This field defaults to the current date and time if not supplied.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        }
      }
    },
    "FundraisingApi.FundAttachmentEdit": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        }
      }
    },
    "FundraisingApi.FundAttachmentRead": {
      "type": "object",
      "description": "Attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attachment.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the attachment.",
          "x-ms-summary": "Fund ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "thumbnail_url": {
          "type": "string",
          "description": "The URL for a thumbnail. For physical attachments that are images only. Contains a time-bound signature that limits access to 60 minutes.",
          "x-ms-summary": "Thumbnail URL"
        },
        "content_type": {
          "type": "string",
          "description": "The content type. For physical attachments only.",
          "x-ms-summary": "Content type"
        },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The file size in bytes. For physical attachments only.",
          "x-ms-summary": "File size"
        }
      }
    },
    "FundraisingApi.FundCustomFieldAdd": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "required": [
        "parent_id",
        "category"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the custom field.",
          "x-ms-summary": "Fund ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListFundCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListFundCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "funds",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "funds"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.FundCustomFieldEdit": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The custom field category (required if updating the custom field value).",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListFundCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListFundCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "fundraising",
              "custom_field_type": "funds",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "fundraising"
              },
              "custom_field_type": {
                "value": "funds"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "FundraisingApi.FundCustomFieldRead": {
      "type": "object",
      "description": "Custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the custom field.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the custom field.",
          "x-ms-summary": "Fund ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category"
        },
        "type": {
          "type": "string",
          "description": "The type of data that the custom field represents.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        },
        "value": {
          "description": "The value of the custom field.",
          "x-ms-summary": "Value"
        },
        "text_value": {
          "type": "string",
          "description": "The text value of the custom field.",
          "x-ms-summary": "Text value"
        },
        "number_value": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric value of the custom field.",
          "x-ms-summary": "Number value"
        },
        "date_value": {
          "type": "string",
          "format": "date",
          "description": "The date value of the custom field.",
          "x-ms-summary": "Date value"
        },
        "currency_value": {
          "type": "number",
          "format": "double",
          "description": "The currency value of the custom field.",
          "x-ms-summary": "Currency value"
        },
        "boolean_value": {
          "type": "boolean",
          "description": "The boolean value of the custom field.",
          "x-ms-summary": "Boolean value"
        },
        "codetableentry_value": {
          "type": "string",
          "description": "The table entry value of the custom field.",
          "x-ms-summary": "Table entry value"
        },
        "constituentid_value": {
          "type": "string",
          "description": "The constituent ID value of the custom field.",
          "x-ms-summary": "Constituent ID value"
        },
        "fuzzydate_value": {
          "type": "object",
          "description": "The fuzzy date value of the custom field.",
          "x-ms-summary": "Fuzzy date value",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field.",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "FundraisingApi.FundRead": {
      "type": "object",
      "description": "Fund",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the fund.",
          "x-ms-summary": "ID"
        },
        "category": {
          "type": "string",
          "description": "The category of the fund.",
          "x-ms-summary": "Category"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the fund was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the fund was last modified.",
          "x-ms-summary": "Date modified"
        },
        "description": {
          "type": "string",
          "description": "The display name of the fund.",
          "x-ms-summary": "Description"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the fund.",
          "x-ms-summary": "End date"
        },
        "goal": {
          "type": "object",
          "description": "The monetary goal associated with the fund.",
          "x-ms-summary": "Goal",
          "properties": {
            "value": {
              "format": "double",
              "description": "The monetary value.",
              "type": "number"
            }
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the fund inactive (meaning, the current date is after any start date and before any end date)?",
          "x-ms-summary": "Inactive?"
        },
        "lookup_id": {
          "type": "string",
          "description": "The user-defined identifier for the fund.",
          "x-ms-summary": "Lookup ID"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the fund.",
          "x-ms-summary": "Start date"
        },
        "type": {
          "type": "string",
          "description": "The type of the fund.",
          "x-ms-summary": "Type"
        }
      }
    },
    "FundraisingApi.PackageRead": {
      "type": "object",
      "description": "Package",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the package.",
          "x-ms-summary": "ID"
        },
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal associated with this package.",
          "x-ms-summary": "Appeal ID"
        },
        "category": {
          "type": "string",
          "description": "The category of the package.",
          "x-ms-summary": "Category"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the package was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the package was last modified.",
          "x-ms-summary": "Date modified"
        },
        "default_gift_amount": {
          "type": "object",
          "description": "The default amount for gifts associated with this package.",
          "x-ms-summary": "Default gift amount",
          "properties": {
            "value": {
              "format": "double",
              "description": "The monetary value.",
              "type": "number"
            }
          }
        },
        "description": {
          "type": "string",
          "description": "The display name of the package.",
          "x-ms-summary": "Description"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the package.",
          "x-ms-summary": "End date"
        },
        "goal": {
          "type": "object",
          "description": "The monetary goal associated with the package.",
          "x-ms-summary": "Goal",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the package inactive (meaning, the current date is after any start date and before any end date)?",
          "x-ms-summary": "Inactive?"
        },
        "lookup_id": {
          "type": "string",
          "description": "The user-defined identifier for the package.",
          "x-ms-summary": "Lookup ID"
        },
        "notes": {
          "type": "string",
          "description": "The notes on the package.",
          "x-ms-summary": "Notes"
        },
        "recipient_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of recipients of the package.",
          "x-ms-summary": "Recipient count"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the package.",
          "x-ms-summary": "Start date"
        }
      }
    },
    "PowerAutomateUIApi.DynamicValue": {
      "type": "object",
      "description": "A single dynamic value item",
      "properties": {
        "id": {
          "type": "string",
          "description": "The dynamic value item identifier."
        },
        "item": {
          "type": "string",
          "description": "The dynamic value item."
        }
      }
    },
    "PowerAutomateUIApi.DynamicValuesCollection": {
      "type": "object",
      "description": "A collection of objects for use with dynamic values.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items in the list."
        },
        "value": {
          "type": "array",
          "description": "The set of objects for use with dynamic values.",
          "items": {
            "$ref": "#/definitions/PowerAutomateUIApi.DynamicValue"
          }
        }
      }
    },
    "PowerAutomateUIApi.DynamicProperties": {
      "type": "object",
      "description": "Defines some (but potentially not all) dynamic OpenApi metadata properties needed for a custom field.",
      "properties": {
        "items": {
          "type": "object",
          "description": "The OpenApi properties for the custom field value.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The OpenApi type."
            },
            "format": {
              "type": "string",
              "description": "The OpenApi format."
            },
            "description": {
              "type": "string",
              "description": "The OpenApi description."
            }
          }
        }
      }
    }
  }
}
