{
  "swagger": "2.0",
  "info": {
    "title": "Desk365",
    "description": "Desk365 is a cloud-based modern helpdesk for the Microsoft 365 workplace that lets you deliver outstanding customer service through channels like Microsoft Teams, Email, Web Forms/Widgets and more. Automate repetitive work and save time with Desk365â€™s intuitive, feature-rich web app that comes with a unified inbox to manage all your customer conversations.",
    "version": "1.0",
    "contact": {
      "name": "Desk365 Support",
      "url": "https://www.desk365.io/contact/",
      "email": "help@desk365.io"
    }
  },
  "host": "apps.desk365.io",
  "basePath": "/apis",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/power_automate/tickets/agent_list": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the agent.",
                        "title": "email"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the agent.",
                        "title": "name"
                      }
                    }
                  },
                  "description": "content"
                }
              }
            }
          }
        },
        "summary": "Get agents list",
        "description": "Get all agents list.",
        "operationId": "GetAgentsList",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          }
        ]
      }
    },
    "/power_automate/tickets/status_list": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "content"
                }
              }
            }
          }
        },
        "summary": "Get status list",
        "description": "Get all status list.",
        "operationId": "GetStatusList",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          }
        ]
      }
    },
    "/power_automate/tickets/category_list": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the category.",
                        "title": "name"
                      }
                    }
                  },
                  "description": "content"
                }
              }
            }
          }
        },
        "summary": "Get category list",
        "description": "Get all categories.",
        "operationId": "GetCategoryList",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          }
        ]
      }
    },
    "/power_automate/tickets": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total tickets count.",
                  "title": "Count"
                },
                "tickets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Ticket Number": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique Id of the ticket.",
                        "title": "Ticket Number"
                      },
                      "Contact Email": {
                        "type": "string",
                        "description": "Email address of the requester.",
                        "title": "Contact Email"
                      },
                      "Subject": {
                        "type": "string",
                        "description": "Subject of the ticket.",
                        "title": "Subject"
                      },
                      "Description": {
                        "type": "string",
                        "description": "Description of the ticket in HTML.",
                        "title": "Description"
                      },
                      "Description Text": {
                        "type": "string",
                        "description": "Description of the ticket in plain text.",
                        "title": "Description Text"
                      },
                      "Status": {
                        "type": "string",
                        "description": "Status of the ticket.",
                        "title": "Status"
                      },
                      "Source": {
                        "type": "string",
                        "description": "Channel through which the ticket was created.",
                        "title": "Source"
                      },
                      "Priority": {
                        "type": "string",
                        "description": "Priority of the ticket.",
                        "title": "Priority"
                      },
                      "Type": {
                        "type": "string",
                        "description": "Type of the ticket.",
                        "title": "Type"
                      },
                      "Agent": {
                        "type": "string",
                        "description": "Agent assigned to the ticket.",
                        "title": "Agent"
                      },
                      "Group": {
                        "type": "string",
                        "description": "Name of the group to which the ticket has been assigned.",
                        "title": "Group"
                      },
                      "Category": {
                        "type": "string",
                        "description": "Category of the ticket.",
                        "title": "Category"
                      },
                      "Subcategory": {
                        "type": "string",
                        "description": "Subcategory of the ticket.",
                        "title": "Subcategory"
                      },
                      "Created On": {
                        "type": "string",
                        "description": "Ticket creation timestamp (in format yyyy-mm-dd hh:mm:ss).",
                        "title": "Created On"
                      },
                      "Updated On": {
                        "type": "string",
                        "description": "Ticket updated timestamp (in format yyyy-mm-dd hh:mm:ss).",
                        "title": "Updated On"
                      },
                      "Resolved On": {
                        "type": "string",
                        "description": "Ticket resolved timestamp (in format yyyy-mm-dd hh:mm:ss).",
                        "title": "Resolved On"
                      },
                      "Closed On": {
                        "type": "string",
                        "description": "Ticket closed timestamp (in format yyyy-mm-dd hh:mm:ss).",
                        "title": "Closed On"
                      }
                    }
                  },
                  "description": "tickets"
                }
              }
            }
          }
        },
        "summary": "Get all tickets",
        "operationId": "GetAllTickets",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "description": "Get next 30 tickets from offset value.",
            "x-ms-summary": "offset"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_time",
            "x-ms-summary": "Order by",
            "description": "Sort tickets by created/updated time.",
            "enum": [
              "created_time",
              "updated_time"
            ]
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "desc",
            "x-ms-summary": "Order type",
            "description": "Sort tickets in ascending/descending order.",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "updated_since",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "",
            "x-ms-summary": "Updated Since",
            "description": "Get a list of tickets that have shown any activity since the specified time yyyy-mm-dd hh:mm:ss."
          },
          {
            "name": "include_description",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "No",
            "enum": [
              "Yes",
              "No"
            ],
            "x-ms-summary": "Include Description",
            "description": "Indicates if description is included or not(default is false)"
          },
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          }
        ],
        "description": "Get all tickets."
      }
    },
    "/power_automate/tickets/details": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "Agent": {
                  "type": "string",
                  "description": "Agent assigned to the ticket.",
                  "title": "Agent"
                },
                "Category": {
                  "type": "string",
                  "description": "Category of the ticket.",
                  "title": "Category"
                },
                "Closed On": {
                  "type": "string",
                  "description": "Ticket closed timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Closed On"
                },
                "Contact Email": {
                  "type": "string",
                  "description": "Email address of the requester.",
                  "title": "Contact Email"
                },
                "Created On": {
                  "type": "string",
                  "description": "Ticket creation timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Created On"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket in HTML.",
                  "title": "Description",
                  "format": "html"
                },
                "Description Text": {
                  "type": "string",
                  "description": "Description of the ticket in plain text.",
                  "title": "Description Text"
                },
                "Group": {
                  "type": "string",
                  "description": "The name of the group to which the ticket is assigned.",
                  "title": "Group"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority of the ticket.",
                  "title": "Priority"
                },
                "Resolved On": {
                  "type": "string",
                  "description": "Ticket resolved timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Resolved On"
                },
                "Source": {
                  "type": "string",
                  "description": "Channel through which the ticket was created.",
                  "title": "Source"
                },
                "Status": {
                  "type": "string",
                  "description": "Status of the ticket.",
                  "title": "Status"
                },
                "Subcategory": {
                  "type": "string",
                  "description": "Subcategory of the ticket.",
                  "title": "Subcategory"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject of the ticket.",
                  "title": "Subject"
                },
                "Ticket Number": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique Id of the ticket.",
                  "title": "Ticket Number"
                },
                "Type": {
                  "type": "string",
                  "description": "Type of the ticket."
                },
                "Updated On": {
                  "type": "string",
                  "description": "Ticket updated timestamp(in format yyyy-mm-dd hh:mm:ss)",
                  "title": "Updated On"
                }
              }
            }
          }
        },
        "summary": "Get a ticket",
        "description": "Get a ticket by Id.",
        "operationId": "GetTicket",
        "parameters": [
          {
            "name": "ticket_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Ticket Number",
            "description": "The unique Id of the ticket."
          },
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          }
        ]
      }
    },
    "/power_automate/tickets/create": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "Agent": {
                  "type": "string",
                  "description": "Agent assigned to the ticket.",
                  "title": "Agent"
                },
                "Category": {
                  "type": "string",
                  "description": "Category of the ticket.",
                  "title": "Category"
                },
                "Contact Email": {
                  "type": "string",
                  "description": "Email address of the requester.",
                  "title": "Contact Email"
                },
                "Created On": {
                  "type": "string",
                  "description": "Ticket creation timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Created On"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket in HTML.",
                  "title": "Description",
                  "format": "html"
                },
                "Description Text": {
                  "type": "string",
                  "description": "Description of the ticket in plain text.",
                  "title": "Description Text"
                },
                "Group": {
                  "type": "string",
                  "description": "The name of the group to which the ticket is assigned.",
                  "title": "Group"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority of the ticket.",
                  "title": "Priority"
                },
                "Source": {
                  "type": "string",
                  "description": "The channel through which the ticket was created.",
                  "title": "Source"
                },
                "Status": {
                  "type": "string",
                  "description": "Status of the ticket.",
                  "title": "Status"
                },
                "Subcategory": {
                  "type": "string",
                  "description": "Subcategory of the ticket.",
                  "title": "Subcategory"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject of the ticket.",
                  "title": "Subject"
                },
                "Ticket Number": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique Id of the ticket.",
                  "title": "Ticket Number"
                },
                "Type": {
                  "type": "string",
                  "description": "Type of ticket.",
                  "title": "Type"
                },
                "Updated On": {
                  "type": "string",
                  "description": "Ticket updated timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Updated On"
                },
                "Resolved On": {
                  "type": "string",
                  "description": "Ticket resolved timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Resolved On"
                },
                "Closed On": {
                  "type": "string",
                  "description": "Ticket closed timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Closed On"
                }
              }
            }
          }
        },
        "summary": "Create a ticket",
        "description": "Create a ticket.",
        "operationId": "CreateTicket",
        "parameters": [
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Agent": {
                  "type": "string",
                  "description": "Email address of the agent.",
                  "title": "Agent",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAgentsList",
                    "value-path": "email",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  },
                  "x-ms-visibility": "advanced"
                },
                "Category": {
                  "type": "string",
                  "description": "Category of the ticket.",
                  "title": "Category",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCategoryList",
                    "value-path": "name",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  },
                  "x-ms-visibility": "advanced"
                },
                "Email": {
                  "type": "string",
                  "description": "Email of the requester.",
                  "title": "Email"
                },
                "Description": {
                  "type": "string",
                  "description": "Description for the ticket.",
                  "title": "Description"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority for the ticket",
                  "title": "Priority",
                  "enum": [
                    "Low",
                    "Medium",
                    "High",
                    "Urgent"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "Status": {
                  "type": "string",
                  "description": "Status of the ticket.",
                  "title": "Status",
                  "x-ms-dynamic-values": {
                    "operationId": "GetStatusList",
                    "value-path": "name",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  },
                  "x-ms-visibility": "advanced"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject for the ticket",
                  "title": "Subject"
                },
                "Type": {
                  "type": "string",
                  "description": "Type of ticket.",
                  "title": "Type",
                  "enum": [
                    "Question",
                    "Incident",
                    "Problem",
                    "Request"
                  ],
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "Email",
                "Description",
                "Subject"
              ]
            }
          }
        ]
      }
    },
    "/power_automate/tickets/update": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "Agent": {
                  "type": "string",
                  "description": "Agent assigned to the ticket.",
                  "title": "Agent"
                },
                "Category": {
                  "type": "string",
                  "description": "Category of the ticket.",
                  "title": "Category"
                },
                "Closed On": {
                  "type": "string",
                  "description": "Ticket closed timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Closed On"
                },
                "Contact Email": {
                  "type": "string",
                  "description": "Email address of the requester.",
                  "title": "Contact Email"
                },
                "Created On": {
                  "type": "string",
                  "description": "Ticket creation timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Created On"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the ticket in HTML.",
                  "title": "Description",
                  "format": "html"
                },
                "Description Text": {
                  "type": "string",
                  "description": "Description of the ticket in plain text.",
                  "title": "Description Text"
                },
                "Group": {
                  "type": "string",
                  "description": "Name of the group to which the ticket is assigned.",
                  "title": "Group"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority of the ticket.",
                  "title": "Priority"
                },
                "Resolved On": {
                  "type": "string",
                  "description": "Ticket resolved timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Resolved On"
                },
                "Source": {
                  "type": "string",
                  "description": "The channel through which the ticket was created.",
                  "title": "Source"
                },
                "Status": {
                  "type": "string",
                  "description": "Status of the ticket.",
                  "title": "Status"
                },
                "Subcategory": {
                  "type": "string",
                  "description": "Subcategory of the ticket.",
                  "title": "Subcategory"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject of the ticket.",
                  "title": "Subject"
                },
                "Ticket Number": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The unique Id of the ticket.",
                  "title": "Ticket Number"
                },
                "Type": {
                  "type": "string",
                  "description": "Type of ticket.",
                  "title": "Type"
                },
                "Updated On": {
                  "type": "string",
                  "description": "Ticket updated timestamp (in format yyyy-mm-dd hh:mm:ss).",
                  "title": "Updated On"
                }
              }
            }
          }
        },
        "summary": "Update a ticket",
        "description": "Update a ticket.",
        "operationId": "UpdateTicket",
        "parameters": [
          {
            "name": "ticket_number",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The unique Id of the ticket.",
            "format": "int32",
            "x-ms-summary": "Ticket number"
          },
          {
            "name": "src",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 2,
            "description": "Source",
            "x-ms-visibility": "internal",
            "x-ms-summary": "The source type of the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "Subject of the ticket.",
                  "title": "Subject"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the ticket.",
                  "title": "Description"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the ticket.",
                  "title": "Status",
                  "x-ms-dynamic-values": {
                    "operationId": "GetStatusList",
                    "value-path": "name",
                    "value-collection": "content",
                    "value-title": "name"
                  }
                },
                "priority": {
                  "type": "string",
                  "description": "Priority of the ticket.",
                  "title": "Priority",
                  "enum": [
                    "Low",
                    "Medium",
                    "High",
                    "Urgent"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type of ticket.",
                  "title": "Type",
                  "enum": [
                    "Question",
                    "Incident",
                    "Problem",
                    "Request"
                  ]
                },
                "assign_to": {
                  "type": "string",
                  "description": "Email address of the agent.",
                  "title": "Agent",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAgentsList",
                    "value-path": "email",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  }
                },
                "category": {
                  "type": "string",
                  "description": "Category of the ticket.",
                  "title": "Category",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCategoryList",
                    "value-path": "name",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/power_automate/tickets/add_note": {
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "description": "Content of the note.",
                  "title": "Content"
                },
                "Agent Email": {
                  "type": "string",
                  "description": "Email address of the agent who added the note.",
                  "title": "Agent Email"
                },
                "Notify Agent": {
                  "type": "string",
                  "description": "Email addresses of agents who are notified about this note.",
                  "title": "Notify Agent"
                },
                "Private": {
                  "type": "boolean",
                  "description": "Set to true if the note is private.",
                  "title": "Private",
                  "enum": [
                    true,
                    false
                  ]
                }
              }
            }
          }
        },
        "summary": "Add a note to a ticket",
        "description": "Add a note to a ticket.",
        "operationId": "AddNote",
        "parameters": [
          {
            "name": "Ticket Number",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "The ticket number to add a note to.",
            "x-ms-summary": "Ticket Number"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Content": {
                  "type": "string",
                  "description": "The content of the note.",
                  "title": "Content"
                },
                "Agent Email": {
                  "type": "string",
                  "description": "Email address of the agent who is adding the note.",
                  "title": "Agent Email",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAgentsList",
                    "value-path": "email",
                    "value-collection": "content",
                    "value-title": "name",
                    "parameters": {
                      "src": 2
                    }
                  },
                  "x-ms-visibility": "advanced"
                },
                "Notify Agent": {
                  "type": "string",
                  "description": "Email addresses of agents(separated by comma) who need to be notified about this note.",
                  "title": "Notify Agent",
                  "x-ms-visibility": "advanced"
                },
                "Private": {
                  "type": "string",
                  "description": "Indicates if this is a private note (default is true).",
                  "title": "Private",
                  "default": "Yes",
                  "enum": [
                    "Yes",
                    "No"
                  ]
                }
              },
              "required": [
                "Content"
              ]
            }
          }
        ]
      }
    },
    "/power_automate/tickets/delete_webhook": {
      "delete": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Webhook",
        "description": "Delete Webhook",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/power_automate/tickets/create_ticket_webhook": {
      "x-ms-notification-content": {
        "description": "Response from Create Ticket Webhook",
        "schema": {
          "type": "object",
          "properties": {
            "Agent": {
              "type": "string",
              "description": "Agent"
            },
            "Category": {
              "type": "string",
              "description": "Category"
            },
            "Closed On": {
              "type": "string",
              "description": "Closed On"
            },
            "Contact Email": {
              "type": "string",
              "description": "Contact Email"
            },
            "Created On": {
              "type": "string",
              "description": "Created On"
            },
            "Description": {
              "type": "string",
              "description": "Description"
            },
            "Description Text": {
              "type": "string",
              "description": "Description Text"
            },
            "Group": {
              "type": "string",
              "description": "Group"
            },
            "Priority": {
              "type": "string",
              "description": "Priority"
            },
            "Resolved On": {
              "type": "string",
              "description": "Resolved On"
            },
            "Source": {
              "type": "integer",
              "format": "int32",
              "description": "Source"
            },
            "Status": {
              "type": "string",
              "description": "Status"
            },
            "Subcategory": {
              "type": "string",
              "description": "Subcategory"
            },
            "Subject": {
              "type": "string",
              "description": "Subject"
            },
            "Ticket Number": {
              "type": "integer",
              "format": "int32",
              "description": "Ticket Number"
            },
            "Type": {
              "type": "string",
              "description": "Type"
            },
            "Updated On": {
              "type": "string",
              "description": "Updated On"
            }
          }
        }
      },
      "post": {
        "responses": {},
        "summary": "When a ticket is created",
        "description": "When a ticket is created.",
        "operationId": "CreateTicketWebhook",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Contact Email": {
                  "type": "string",
                  "description": "Email address of the requesters separated by comma (If left blank, the trigger will run for all contacts)"
                },
                "Subject": {
                  "type": "string",
                  "description": "String to look for in the Subject(If left blank, the trigger will run for all subjects)."
                },
                "Status": {
                  "type": "string",
                  "description": "Statuses separated by comma (If left blank, the trigger will run for all statuses)"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priorities separated by comma (If left blank, the trigger will run for all priorities)"
                },
                "Agent": {
                  "type": "string",
                  "description": "Email address of the agents separated by comma (If left blank, the trigger will run for all agents)"
                },
                "Group": {
                  "type": "string",
                  "description": "Groups separated by comma (If left blank, the trigger wil run for all groups)"
                },
                "Include Description": {
                  "type": "string",
                  "description": "Indicates if description is included or not(default is false)"
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "url"
                }
              },
              "required": [
                "url"
              ]
            }
          }
        ]
      }
    },
    "/power_automate/tickets/update_ticket_webhook": {
      "x-ms-notification-content": {
        "description": "Response from Update Ticket Webhook",
        "schema": {
          "type": "object",
          "properties": {
            "Agent": {
              "type": "string",
              "description": "Agent"
            },
            "Category": {
              "type": "string",
              "description": "Category"
            },
            "Closed On": {
              "type": "string",
              "description": "Closed On"
            },
            "Contact Email": {
              "type": "string",
              "description": "Contact Email"
            },
            "Created On": {
              "type": "string",
              "description": "Created On"
            },
            "Description": {
              "type": "string",
              "description": "Description"
            },
            "Description Text": {
              "type": "string",
              "description": "Description Text"
            },
            "Group": {
              "type": "string",
              "description": "Group"
            },
            "Priority": {
              "type": "string",
              "description": "Priority"
            },
            "Resolved On": {
              "type": "string",
              "description": "Resolved On"
            },
            "Source": {
              "type": "integer",
              "format": "int32",
              "description": "Source"
            },
            "Status": {
              "type": "string",
              "description": "Status"
            },
            "Subcategory": {
              "type": "string",
              "description": "Subcategory"
            },
            "Subject": {
              "type": "string",
              "description": "Subject"
            },
            "Ticket Number": {
              "type": "integer",
              "format": "int32",
              "description": "Ticket Number"
            },
            "Type": {
              "type": "string",
              "description": "Type"
            },
            "Updated On": {
              "type": "string",
              "description": "Updated On"
            }
          }
        }
      },
      "post": {
        "responses": {},
        "summary": "When a ticket is updated",
        "description": "When a ticket is updated.",
        "operationId": "UpdateTicketWebhook",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Contact Email": {
                  "type": "string",
                  "description": "Email address of the requesters separated by comma (If left blank, the trigger will run for all contacts)"
                },
                "Subject": {
                  "type": "string",
                  "description": "String to look for in the Subject(If left blank, the trigger will run for all subjects)."
                },
                "Status": {
                  "type": "string",
                  "description": "Statuses separated by comma (If left blank, the trigger will run for all statuses)"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priorities separated by comma (If left blank, the trigger will run for all priorities)"
                },
                "Agent": {
                  "type": "string",
                  "description": "Email address of the agents separated by comma (If left blank, the trigger will run for all agents)"
                },
                "Group": {
                  "type": "string",
                  "description": "Groups separated by comma (If left blank, the trigger wil run for all groups)"
                },
                "Include Description": {
                  "type": "string",
                  "description": "Indicates if description is included or not(default is false)"
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "title": "url",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "required": [
                "url"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.desk365.io/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.desk365.io/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations; Productivity"
    }
  ]
}