{
  "swagger": "2.0",
  "info": {
    "title": "IA-Connect Dynamic Code",
    "description": "IA-Connect is a Robotic Process Automation (RPA) platform which adds RPA functionality from the Cloud to on-premises virtual machines or over Citrix or Microsoft Remote Desktop (RDS) connections. This is the module for developing dynamic code modules.",
    "version": "9.0",
    "contact": {
      "name": "Ultima Labs",
      "url": "https://www.ultima.com/ultima-labs",
      "email": "IAConnect@ultima.com"
    }
  },
  "host": "DefinedInConnectionParameters",
  "basePath": "/IAConnectRESTClient",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.ultima.com/ultima-labs"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.ultima.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Productivity"
    }
  ],
  "paths": {
    "/DynamicCode/ImportAssemblyFromLocalFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Import assembly from local file",
        "description": "Uploads a DotNet assembly from the computer where the IA-Connect Director is running to the IA-Connect Agent where it is loaded into memory and will be used if referenced by dynamic DotNet code.",
        "parameters": [
          {
            "in": "body",
            "name": "ImportAssemblyFromLocalFile",
            "description": "Inputs for IA-Connect ImportAssemblyFromLocalFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "LocalAssemblyFilePath": {
                  "type": "string",
                  "title": "Local assembly file path",
                  "description": "The file path to the local assembly file in the local session (where the IA-Connect Director is running)."
                },
                "AssemblyName": {
                  "type": "string",
                  "title": "Assembly name",
                  "description": "The name of the assembly to be imported."
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the assembly be compressed before uploading?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "LocalAssemblyFilePath",
                "AssemblyName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ImportAssemblyFromLocalFile"
      }
    },
    "/DynamicCode/AddAssemblySearchFolder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add assembly search folder",
        "description": "Adds a folder path (on the computer where the IA-Connect Agent is running) to the list of folders for the IA-Connect Agent to scan when it tries to load an external reference.",
        "parameters": [
          {
            "in": "body",
            "name": "AddAssemblySearchFolder",
            "description": "Inputs for IA-Connect AddAssemblySearchFolder action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The path to the folder to be added to the list of folders for the IA-Connect Agent to scan when it tries to load an external reference."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "AddAssemblySearchFolder"
      }
    },
    "/DynamicCode/ClearAssemblySearchFolders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clear assembly search folders",
        "description": "Reset the additional list of folders for the IA-Connect Agent to scan when it tries to load an external reference.",
        "parameters": [
          {
            "in": "body",
            "name": "ClearAssemblySearchFolders",
            "description": "Inputs for IA-Connect ClearAssemblySearchFolders action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ClearAssemblySearchFolders"
      }
    },
    "/PowerShellAutomation/isPowerShellAutomationInstalled": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is PowerShell automation installed",
        "description": "Reports whether PowerShell automation is available on the computer where the IA-Connect Agent is running. If PowerShell automation is not available, PowerShell automation actions will not work.",
        "parameters": [
          {
            "in": "body",
            "name": "IsPowerShellAutomationInstalled",
            "description": "Inputs for IA-Connect IsPowerShellAutomationInstalled action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellAutomationIsInstalled": {
                  "type": "boolean",
                  "title": "Is PowerShell automation installed",
                  "description": "Returns true if PowerShell automation is available, or false if not."
                }
              }
            }
          }
        },
        "operationId": "IsPowerShellAutomationInstalled"
      }
    },
    "/PowerShellAutomation/isPowerShellModuleInstalled": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is PowerShell module installed",
        "description": "Searches for a specified PowerShell module on the computer where the IA-Connect Agent is running and returns whether it is installed.",
        "parameters": [
          {
            "in": "body",
            "name": "IsPowerShellModuleInstalled",
            "description": "Inputs for IA-Connect IsPowerShellModuleInstalled action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellModuleName": {
                  "type": "string",
                  "title": "PowerShell module",
                  "description": "The name of the PowerShell module to search for."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellModuleName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellModuleIsInstalled": {
                  "type": "boolean",
                  "title": "Is PowerShell module installed",
                  "description": "Returns true if the specified PowerShell module is installed, or false if not."
                }
              }
            }
          }
        },
        "operationId": "IsPowerShellModuleInstalled"
      }
    },
    "/PowerShellAutomation/RunPowerShellScript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run PowerShell script",
        "description": "Runs a PowerShell script in the session where the IA-Connect Agent is running, where the script contents are passed to the IA-Connect Agent as part of the command. This is the recommended action for running your own custom PowerShell code.",
        "parameters": [
          {
            "in": "body",
            "name": "RunPowerShellAutomationScript",
            "description": "Inputs for IA-Connect RunPowerShellAutomationScript action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellScriptContents": {
                  "type": "string",
                  "title": "PowerShell script contents"
                },
                "ComputerName": {
                  "type": "string",
                  "title": "Computer name",
                  "description": "The name of the computer to run the PowerShell script on. If left blank, the script will be ran on the computer where the IA-Connect Agent is running."
                },
                "IsNoResultAnError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Is no result an error",
                  "description": "If no data is returned by the PowerShell command, does this suggest an error?"
                },
                "ReturnComplexTypes": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return complex types",
                  "description": "Should properties which have complex types (as opposed to a simple type such as System.String or System.Boolean or System.Date) be returned?"
                },
                "ReturnBooleanAsBoolean": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return boolean as boolean",
                  "description": "Should Boolean properties be returned as a Booleans? If false, these are returned as strings."
                },
                "ReturnNumericAsDecimal": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return numeric as decimal",
                  "description": "Should Numeric properties be returned as a Numerics? If false, these are returned as strings."
                },
                "ReturnDateAsDate": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return date as date",
                  "description": "Should Date properties be returned as a Dates? If false, these are returned as strings."
                },
                "PropertiesToReturnAsCollectionJSON": {
                  "type": "string",
                  "title": "Properties to return as collection JSON",
                  "description": "Some members (in the PowerShell return results) are collections of values (often Deserialized). This variable allows you to specify which ones are returned as a collection (within the return JSON, if possible)."
                },
                "AuthenticationMechanism": {
                  "type": "string",
                  "title": "Authentication mechanism",
                  "description": "The authentication mechanism to be used if connecting to a remote computer or running the script as an alternative user. Supported values are 'Basic', 'Credssp', 'Default', 'Digest', 'Kerberos' and 'Negotiate'."
                },
                "ConnectionAttempts": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Connection attempts",
                  "description": "The number of connections to attempt if connecting to a remote computer."
                },
                "Username": {
                  "type": "string",
                  "title": "Username",
                  "description": "The username to be used if running the script as an alternative user."
                },
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password to be used if running the script as an alternative user."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "PowerShellScriptContents",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PowerShellJSONOutput": {
                  "type": "string",
                  "title": "Powershell output JSON",
                  "description": "The output of the PowerShell script, formatted as JSON."
                }
              }
            }
          }
        },
        "operationId": "RunPowerShellAutomationScript"
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "RESTAPIKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}