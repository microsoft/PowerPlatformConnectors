{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Thomson Reuters Support",
      "url": "https://legal.thomsonreuters.com/en/support"
    },
    "title": "3E Events",
    "description": "3E is a SaaS practice and financial management platform that connects all critical areas of a law firm to streamline tasks and provide timely information",
    "version": "1.0"
  },
  "x-ms-connector-metadata":[
    {
      "propertyName": "Website",
      "propertyValue": "https://legal.thomsonreuters.com/en/products/3e"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.thomsonreuters.com/en/privacy-statement.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Business Management"
    }
  ],
  "host": "api.us.3e.thomsonreuters.com",
  "basePath": "/webhook",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/plain"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/subscriptions/event/dataobject": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "DataObject notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when an object is created, updated, deleted or read. Please, select the object name and state to subscribe to particular events",
        "summary": "When an object is created, updated deleted or read",
        "operationId": "DataObjectEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "important",
            "schema": {
              "type": "object",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object (Matter, Client, etc.).",
                  "title": "Object",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchDataObjectEventsInfo",
                    "value-path": "code",
                    "value-title": "code"
                  }
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object (Updated, Created, Deleted, Run).",
                  "title": "State",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchDataObjectEventDetails",
                    "value-collection": "states",
                    "parameters": {
                      "code": {
                        "parameter": "object"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchDataObjectEventDetails",
                    "itemsPath": "states",
                    "parameters": {
                      "code": {
                        "parameterReference": "body/object"
                      }
                    }
                  }
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/dataobjectattribute": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "type": "object",
                  "properties": {
                    "item_id": {
                      "type": "string",
                      "description": "The ID attribute value of the DataObjectAttribute.",
                      "title": "Item ID"
                    },
                    "data_object_event": {
                      "type": "string",
                      "description": "The 3E internal event type that fired the DataObjectAttribute event.",
                      "title": "Data Object Event"
                    },
                    "object_id": {
                      "type": "string",
                      "description": "The unique object name",
                      "title": "Object ID"
                    },
                    "object_attribute_id": {
                      "type": "string",
                      "description": "The Name of the attribute.",
                      "title": "Object Attribute ID"
                    },
                    "process_id": {
                      "type": "string",
                      "description": "The ID of the process from which the event has been fired.",
                      "title": "Process ID"
                    },
                    "original_value": {
                      "type": "string",
                      "description": "The value of the attribute before the event was generated.",
                      "title": "Original Value"
                    },
                    "current_value": {
                      "type": "string",
                      "description": "The new value of the attribute.",
                      "title": "Current Value"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "The ID of the user fired the DataObjectAttribute event.",
                      "title": "User ID"
                    },
                    "product": {
                      "type": "string",
                      "description": "The name of the product.",
                      "title": "Product"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "The date when the DataObjectAttribute was fired.",
                      "title": "Timestamp"
                    },
                    "user_network_alias": {
                      "type": "string",
                      "description": "The network alias of the user fired the DataObjectAttribute event.",
                      "title": "User Network Alias"
                    },
                    "user_email_address": {
                      "type": "string",
                      "description": "The email of the user fired the DataObjectAttribute event.",
                      "title": "User Email Address"
                    },
                    "enterprise_user_id": {
                      "type": "string",
                      "description": "The enterprise user ID of the user fired the DataObjectAttribute event.",
                      "title": "Enteprise User ID"
                    }
                  },
                  "description": "The type of the affected object for the triggered event."
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "DataObjectAttribute notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "summary": "When an attribute state is updated",
        "description": "This operation triggers a flow when an existed attribute state is updated.",
        "operationId": "DataObjectAttributeEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "important",
            "schema": {
              "type": "object",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object (Matter, Client, etc.).",
                  "title": "Object",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchDataObjectAttributeEventsInfo",
                    "value-path": "code",
                    "value-title": "code"
                  }
                },
                "attribute": {
                  "type": "string",
                  "description": "The ID of the attribute.",
                  "title": "Attribute",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchDataObjectAttributeEventDetails",
                    "value-collection": "attributes",
                    "parameters": {
                      "code": {
                        "parameter": "object"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchDataObjectAttributeEventDetails",
                    "itemsPath": "attributes",
                    "parameters": {
                      "code": {
                        "parameterReference": "body/object"
                      }
                    }
                  }
                }
              },
              "required": [
                "application",
                "attribute",
                "callbackUrl",
                "object"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/workflowaction": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "type": "object",
                  "properties": {
                    "current_user_id": {
                      "type": "string",
                      "description": "The ID of the current user in the workflow.",
                      "title": "Current User ID"
                    },
                    "current_user_email": {
                      "type": "string",
                      "description": "The email of the current user in the workflow.",
                      "title": "Current User Email"
                    },
                    "product": {
                      "type": "string",
                      "description": "The name of the product.",
                      "title": "Product"
                    },
                    "current_step_state": {
                      "type": "string",
                      "description": "The state of the current workflow step.",
                      "title": "Current Step State"
                    },
                    "workflow_step_item_id": {
                      "type": "string",
                      "description": "The ID of the workflow step item.",
                      "title": "Workflow Step Item ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The workflow name.",
                      "title": "Name"
                    },
                    "description": {
                      "type": "string",
                      "description": "The workflow description.",
                      "title": "Description"
                    },
                    "current_step": {
                      "type": "string",
                      "description": "The description of the current step.",
                      "title": "Current Step"
                    },
                    "next_step": {
                      "type": "string",
                      "description": "The description of the next step.",
                      "title": "Next Step"
                    },
                    "url": {
                      "type": "string",
                      "description": "The worflow dashboard Url.",
                      "title": "URL"
                    },
                    "is_complete": {
                      "type": "boolean",
                      "description": "A value indicating whether the process is completed.",
                      "title": "Is Complete"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "The date when the WorkflowAction event was fired.",
                      "title": "Timestamp"
                    },
                    "wf_step_index": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The index of the workflow step.",
                      "title": "Workflow Step Index"
                    },
                    "next_step_pi_id": {
                      "type": "string",
                      "description": "The PI ID of the next step.",
                      "title": "Next Step PI ID"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "The ID of the user fired the WorkflowAction event.",
                      "title": "User ID"
                    },
                    "user_network_alias": {
                      "type": "string",
                      "description": "The network alias of the user fired the WorkflowAction event.",
                      "title": "User Network Alias"
                    },
                    "user_email_address": {
                      "type": "string",
                      "description": "The email of the user fired the WorkflowAction event.",
                      "title": "User Email Address"
                    },
                    "enterprise_user_id": {
                      "type": "string",
                      "description": "The enterprise user ID of the user fired the WorkflowAction event.",
                      "title": "Enteprise User ID"
                    }
                  },
                  "description": "The type of the affected object for the triggered event."
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "WorkflowAction notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "summary": "When workflow action is requested or completed",
        "description": "This operation triggers a flow when workflow action is requested or workflow action is done.",
        "operationId": "WorkflowActionTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "important",
            "schema": {
              "type": "object",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "code": {
                  "type": "string",
                  "description": "code",
                  "title": "Code",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchWorkflowActionEventsInfo",
                    "value-path": "code",
                    "value-title": "description"
                  }
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "code"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/matter_created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "DataObject notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a new matter is created.",
        "summary": "When a new matter is created",
        "operationId": "MatterCreatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "Matter"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Created"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/matter_updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "Matter Updated notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a matter is updated.",
        "summary": "When a matter is updated",
        "operationId": "MatterUpdatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "Matter"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Updated"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/client_created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "Client Created notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a new client is created.",
        "summary": "When a new client is created",
        "operationId": "ClientCreatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "Client"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Created"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/client_updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "Client Updated notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a client is updated.",
        "summary": "When a client is updated",
        "operationId": "ClientUpdatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "Client"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Updated"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/timekeeper_updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "Timekeeper Updated notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a timekeeper is updated.",
        "summary": "When a timekeeper is updated",
        "operationId": "TimekeeperUpdatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "Timekeeper"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Updated"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/rcptmaster_created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "RcptMaster Created notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a payment is received.",
        "summary": "When a payment is received",
        "operationId": "RcptMasterCreatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "RcptMaster"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Created"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/trustreceipt_created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "$ref":"#/definitions/data_object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "TrustReceipt Created notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "description": "This operation triggers a flow when a trust receipt is received.",
        "summary": "When a trust receipt is received",
        "operationId": "TrustReceiptCreatedEventTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                },
                "object": {
                  "type": "string",
                  "description": "The ID of the object.",
                  "title": "Object",
                  "x-ms-visibility": "internal",
                  "default": "TrustReceipt"
                },
                "state": {
                  "type": "string",
                  "description": "The state of the object.",
                  "title": "State",
                  "x-ms-visibility": "internal",
                  "default": "Created"
                }
              },
              "required": [
                "application",
                "callbackUrl",
                "object",
                "state"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/event/cdsdocument": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "description": "The ID of the tenant this notification belongs to.",
              "title": "Tenant ID"
            },
            "event_type": {
              "type": "string",
              "description": "The type of the event.",
              "title": "Event Type"
            },
            "event_state": {
              "type": "string",
              "description": "The field describing the state of the event.",
              "title": "Event State"
            },
            "event_id": {
              "type": "string",
              "description": "A unique event ID",
              "title": "Event ID"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp of when the event was generated.",
              "title": "Created At"
            },
            "data": {
              "type": "object",
              "properties": {
                "object_type": {
                  "type": "string",
                  "description": "The type of the affected object for the triggered event.",
                  "title": "Object Type"
                },
                "object": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "The ID of the job for the generated document.",
                      "title": "Job ID"
                    }
                  },
                  "description": "object"
                }
              },
              "description": "The data associated with the event."
            }
          }
        },
        "description": "CdsDocument notification received."
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/okCreateSubscription"
          },
          "400": {
            "$ref": "#/responses/badRequestCreateSubscription"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "summary": "When a new 3E Templates document is generated",
        "description": "This operation triggers a flow when a new 3E Templates document is generated for a template that has been enabled in 3E’s Distribution Setup for 3rd party distribution.",
        "operationId": "CdsDocumentTrigger",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "application": {
                  "$ref": "#/definitions/application"
                },
                "callbackUrl": {
                  "$ref": "#/definitions/callbackUrl"
                }
              },
              "required": [
                "application",
                "callbackUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/{subscriptionId}/event/{type}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Subscription not found"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          }
        },
        "summary": "Delete a subscription",
        "description": "Delete a subscription to 3E events.",
        "operationId": "DeleteSubscription",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "tenantId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/events/dataobject": {
      "get": {
        "responses": {
          "200": {
            "description": "Registered DataObject events in 3E.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dataObjectEventInfo"
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "$ref": "#/responses/notFoundGetEvents"
          },
          "503":{
            "$ref": "#/responses/serviceUnavailableGetEvents"
          }
        },
        "summary": "Get DataObject events info",
        "operationId": "FetchDataObjectEventsInfo",
        "x-ms-visibility": "internal",
        "description": "Get brief information about configured DataObject events from the 3E database."
      }
    },
    "/v1/events/dataobject/{code}": {
      "get": {
        "responses": {
          "200": {
            "description": "List of registered states in 3E for provided DataObject code.",
            "schema": {
              "$ref": "#/definitions/dataObjectEventInfo"
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "$ref": "#/responses/notFoundGetEvents"
          },
          "503":{
            "$ref": "#/responses/serviceUnavailableGetEvents"
          }
        },
        "summary": "Get dataobject states",
        "operationId": "FetchDataObjectEventDetails",
        "description": "Get all available configured states for provided data object code.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/v1/events/dataobjectattribute": {
      "get": {
        "responses": {
          "200": {
            "description": "Registered DataObjectAttribute events in 3E.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/attributeEventInfo"
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "$ref": "#/responses/notFoundGetEvents"
          },
          "503":{
            "$ref": "#/responses/serviceUnavailableGetEvents"
          }
        },
        "summary": "Get DataObjectAttribute events info",
        "description": "Get brief information about configured DataObjectAttribute events from the 3E database.",
        "operationId": "FetchDataObjectAttributeEventsInfo",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/v1/events/dataobjectattribute/{code}": {
      "get": {
        "responses": {
          "200": {
            "description": "Registered DataObjectAttribute for provided DataObject code.",
            "schema": {
              "$ref": "#/definitions/attributeEventInfo"
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "$ref": "#/responses/notFoundGetEvents"
          },
          "503":{
            "$ref": "#/responses/serviceUnavailableGetEvents"
          }
        },
        "summary": "Get DataObjectAttribute details",
        "operationId": "FetchDataObjectAttributeEventDetails",
        "description": "Get all available configured attributes for provided DataObject code.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/v1/events/workflowaction": {
      "get": {
        "responses": {
          "200": {
            "description": "Registered WorkflowAction models in 3E.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The code of the workflow.",
                    "title": "Code"
                  },
                  "description": {
                    "type": "string",
                    "description": "The workflow description.",
                    "title": "Description"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "$ref": "#/responses/notFoundGetEvents"
          },
          "503":{
            "$ref": "#/responses/serviceUnavailableGetEvents"
          }
        },
        "summary": "Get WorkflowAction events info",
        "operationId": "FetchWorkflowActionEventsInfo",
        "x-ms-visibility": "internal",
        "description": "Get brief information about configured WorkflowAction events from the 3E database."
      }
    },
    "/v1/template/job/{jobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "The response model contains a metadata of the file stored on the Templates Platform service.",
            "schema": {
              "$ref": "#/definitions/fileMetadataModel"
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404":{
            "description": "The job not found."
          }
        },
        "summary": "Get 3E Templates document metadata",
        "operationId": "GetFileMetadata",
        "x-ms-visibility": "important",
        "description": "Obtain the metadata associated with a 3E Templates document .",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Job ID",
            "description": "Enter ID of the job of generated document. Available in trigger data."
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "400":{
            "description": "The issue was occurred on Platform side."
          }
        },
        "summary": "Delete 3E Templates document",
        "operationId": "CompleteJob",
        "x-ms-visibility": "important",
        "description": "Notify the platform to delete all 3E Templates temporary files and complete the operation.",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Job ID",
            "description": "Enter ID of the job of generated document. Available in trigger data."
          }
        ]
      }
    },
    "/v1/template/file/{fileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK, Success",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            },
            "headers": {
              "Content-Type": {
                "description": "The mime type of the downloaded file.",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "Content Disposition.",
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "400":{
            "description": "The issue was occurred on Platform side."
          }
        },
        "summary": "Download 3E Templates document",
        "operationId": "DownloadFile",
        "x-ms-visibility": "important",
        "description": "Download the 3E Templates generated document.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "File ID",
            "description": "Enter ID of the file of generated document. Available in file metadata."
          }
        ]
      }
    }
  },
  "definitions": {
    "tracked_attribute": {
      "type": "object",
      "properties": {
        "attribute_key": {
          "type": "string",
          "description": "The ID of the attribute.",
          "title": "Attribute Key"
        },
        "original_value": {
          "type": "string",
          "description": "The value of the attribute before the event was generated.",
          "title": "Original Value"
        },
        "current_value": {
          "type": "string",
          "description": "The new value of the attribute.",
          "title": "Current Value"
        }
      }
    },
    "data_object":{
      "type": "object",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID attribute value of the DataObject.",
          "title": "Item ID"
        },
        "data_object_event": {
          "type": "string",
          "description": "The 3E internal event type that fired the DataObject event.",
          "title": "Data Object Event"
        },
        "object_id": {
          "type": "string",
          "description": "The unique DataObject name",
          "title": "Object ID"
        },
        "process_id": {
          "type": "string",
          "description": "The ID of the process from which the event has been fired.",
          "title": "Process ID"
        },
        "key_attribute_value": {
          "type": "string",
          "description": "The value of the key attribute.",
          "title": "Key Attribute Value"
        },
        "alias_attribute_value": {
          "type": "string",
          "description": "The value of the alias attribute.",
          "title": "Alias Attribute Value"
        },
        "tracked_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tracked_attribute"
          },
          "description": "The collection of attributes that are supposed to be tracked."
        },
        "user_id": {
          "type": "string",
          "description": "The ID of the user fired the DataObject event.",
          "title": "User ID"
        },
        "product": {
          "type": "string",
          "description": "The name of the product.",
          "title": "Product"
        },
        "timestamp": {
          "type": "string",
          "description": "The date when the DataObject was fired.",
          "title": "Timestamp"
        },
        "user_network_alias": {
          "type": "string",
          "description": "The network alias of the user fired the DataObject event.",
          "title": "User Network Alias"
        },
        "user_email_address": {
          "type": "string",
          "description": "The email of the user fired the DataObject event.",
          "title": "User Email Address"
        },
        "enterprise_user_id": {
          "type": "string",
          "description": "The enterprise user ID of the user fired the DataObject event.",
          "title": "Enteprise User ID"
        }
      },
      "description": "DataObject Event Payload"
    },
    "dataObjectEventInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the DataObject (Matter, Client, etc.).",
          "title": "Code"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Registered DataObject states (Updated, Created, Deleted, Read).",
          "title": "States"
        }
      }
    },
    "attributeEventInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the DataObject (Matter, Client, etc.).",
          "title": "Code"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List with names of tracked attributes.",
            "title": "Tracked attribute names"
          }
        }
      }
    },
    "subscriptionModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the subscription"
        },
        "application": {
          "type": "string",
          "description": "The client's application unique name in the Events Webhook service.",
          "default": "MsPowerPlatform"
        },
        "eventType": {
          "type": "string",
          "description": "The type of the event"
        },
        "callbackUrl": {
          "type": "string",
          "description": "The callback URL"
        },
        "unsubscribeUrl": {
          "type": "string",
          "description": "The URL to delete the subscription"
        }
      }
    },
    "application": {
      "type": "string",
      "description": "The client's application unique name in the Events Webhook service.",
      "title": "Destination Application",
      "default": "MsPowerPlatform",
      "x-ms-visibility": "internal"
    },
    "callbackUrl": {
      "type": "string",
      "description": "The callback URL to deliver events.",
      "title": "Callback URL",
      "x-ms-visibility": "internal",
      "x-ms-notification-url": true
    },
    "fileMetadataModel": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "The ID of the generated file.",
          "title": "FileID"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the generated file.",
          "title": "FileName"
        },
        "batchId": {
          "type": "string",
          "description": "The ID of a batch if file is a part of a batch.",
          "title": "BatchId"
        },
        "batchSize": {
          "type": "string",
          "description": "The size of a batch if file is a part of a batch.",
          "title": "BatchSize"
        },
        "batchOrdinal": {
          "type": "string",
          "description": "The ordinal of a file in a batch if file is a part of a batch.",
          "title": "BatchOrdinal"
        },
        "data": {
          "type": "string",
          "description": "The metadata of a file.",
          "title": "Data"
        },
        "copyFileId": {
          "type": "string",
          "description": "The ID of a copy of generated file.",
          "title": "CopyFileId"
        },
        "copyFileName": {
          "type": "string",
          "description": "The name of a copy of generated file.",
          "title": "CopyFileName"
        },
        "copyData": {
          "type": "string",
          "description": "The metadata of a copy of a file.",
          "title": "CopyData"
        }
      }
    }
  },
  "parameters": {},
  "responses": {
    "unauthorized": {
      "description": "Unauthorized"
    },
    "forbidden": {
      "description": "Forbidden"
    },
    "okCreateSubscription": {
      "description": "Subscription model with URL to unsubscribe.",
      "schema": {
        "$ref": "#/definitions/subscriptionModel"
        }
    },
    "badRequestCreateSubscription": {
      "description": "Request validation errors separated by comma.",
      "schema": {
        "type": "string"
      }
    },
    "notFoundGetEvents": {
      "description": "The configuration data not found.",
      "schema": {
        "type": "string"
      }
    },
    "serviceUnavailableGetEvents": {
      "description": "The configuration data for could not be fetched from 3E.",
      "schema": {
        "type": "string"
      }
    }
  },
  "tags": []
}