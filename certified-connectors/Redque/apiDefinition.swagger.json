{
    "swagger": "2.0",
    "basePath": "/",
    "consumes": [],
    "host": "demoidentity.redque.com",
    "info": {
        "title": "Redque",
        "description": "Accessing and managing the Redque system.",
        "contact": {
            "name": "Redque s.r.o.",
            "url": "https://redque.com",
            "email": "info@redque.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/v1/configuration/return-to-issuer": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Return to sender configuration",
                "description": "Retrieve current configuration for return to sender action.",
                "operationId": "ReturnDocumentConfiguration",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Update return to sender configuration",
                "description": "Updates return to sender configuration.",
                "operationId": "StoreReturnDocumentConfiguration",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Update configuration values",
                        "x-ms-summary": "Configuration values",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentReturnConfiguration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}/page/{pageIndex}/image": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Image for a given page",
                "description": "Returns an image for a given page.",
                "operationId": "GetImage",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "path",
                        "name": "pageIndex",
                        "description": "Page index",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Page index",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "query",
                        "name": "isPreview",
                        "description": "True if reduced size image should be returned.",
                        "type": "boolean",
                        "default": false,
                        "x-ms-summary": "Preview"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "uri",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}/return-to-issuer": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Return document to issuer for corrections",
                "description": "Returns document to issuer for corrections to provided e-mail address.",
                "operationId": "ReturnDocument",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Return document request",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentReturnRequest"
                        },
                        "x-ms-summary": "Document request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/list": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Filter documents",
                "description": "Returns list of documents based on parameters.",
                "operationId": "ListAllDocuments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentListRequest"
                        },
                        "x-ms-summary": "Filter",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentApiListResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}/file": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Download document's file",
                "description": "Downloads document's file.",
                "operationId": "DownloadFileAsync",
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns document's file to download"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}": {
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Remove existing document",
                "description": "Removes existing document.",
                "operationId": "DeleteDocument",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "document id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document's metadata",
                "description": "Gets document's metadata.",
                "operationId": "GetDocument",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "document id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "query",
                        "name": "isExternalId",
                        "description": "Is document ID external ID ?",
                        "type": "boolean",
                        "default": false,
                        "x-ms-summary": "Is document ID external ID ?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns document's metadata",
                        "schema": {
                            "$ref": "#/definitions/ApiDocument"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update document",
                "description": "Updates document.",
                "operationId": "UpdateDocuments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document Id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Document update",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentUpdate"
                        },
                        "x-ms-summary": "Document update"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/RedQueStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}/lock": {
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Lock document",
                "description": "Locks (opens) document preventing other users from modifying it.",
                "operationId": "LockDocument",
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locked"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Unlock locked document",
                "description": "Unlocks locked (closes) document to allow other users to modify its contents.",
                "operationId": "UnlockDocumentAsync",
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unlocked"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents/{documentId}/users/{userId}": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Grant document access to specified user",
                "description": "Grants document access to specified user.",
                "operationId": "GrantDocumentAccess",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request data",
                        "schema": {
                            "$ref": "#/definitions/ApiDocumentAccessRequest"
                        },
                        "x-ms-summary": "Request data"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Granted"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Remove access to the document for specified user",
                "description": "Removes access to the document for specified user.",
                "operationId": "RemoveDocumentAccess",
                "parameters": [
                    {
                        "in": "path",
                        "name": "documentId",
                        "description": "Document identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revoked"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/documents": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload a document and schedules it for processing",
                "description": "Uploads the document and schedules it for processing.",
                "operationId": "UploadDocumentAsync",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "File",
                        "description": "File",
                        "type": "file",
                        "x-ms-summary": "File"
                    },
                    {
                        "in": "formData",
                        "name": "DocumentId",
                        "description": "External document id",
                        "type": "string",
                        "x-ms-summary": "External ID of document"
                    },
                    {
                        "in": "formData",
                        "name": "FolderId",
                        "description": "Folder id",
                        "type": "string",
                        "x-ms-summary": "Folder ID"
                    },
                    {
                        "in": "formData",
                        "name": "Date",
                        "description": "Date",
                        "type": "string",
                        "format": "date-time",
                        "x-ms-summary": "Date"
                    },
                    {
                        "in": "formData",
                        "name": "Ordinal",
                        "description": "Order used for keeping order of documents which are uploaded in parallel",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Order"
                    },
                    {
                        "in": "formData",
                        "name": "IsAttachment",
                        "description": "True if document is an attachment",
                        "type": "boolean",
                        "x-ms-summary": "Is document an attachment"
                    },
                    {
                        "in": "formData",
                        "name": "DocumentClass",
                        "description": "Document class",
                        "type": "string",
                        "x-ms-summary": "Document class"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Uploaded",
                        "schema": {
                            "$ref": "#/definitions/ApiUploadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/enums": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "summary": "Return all enums",
                "description": "Returns list of all enums.",
                "operationId": "GetAllEnums",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiEnum"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Enums"
                ],
                "summary": "Create new enum",
                "description": "Note that enum key is auto generated and value keys must only contain lowercase letter, uppercase letters, numbers, underscore, dash",
                "operationId": "CreateEnum",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Enum value",
                        "schema": {
                            "$ref": "#/definitions/ApiEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StringApiValue"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/enums/{id}": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "summary": "Return enum",
                "description": "Returns specific enum.",
                "operationId": "GetEnum",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Enum identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Enum identifier",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiEnum"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Enums"
                ],
                "summary": "Update specific enum",
                "description": "Updates a specific enum.",
                "operationId": "UpdateEnum",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Enum identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Enum identifier",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Enum value",
                        "schema": {
                            "$ref": "#/definitions/ApiEnum"
                        },
                        "x-ms-summary": "Enum value"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Enums"
                ],
                "summary": "Deletes enum with specific id",
                "operationId": "DeleteEnum",
                "description": "Deletes a specific enum.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Enum identifier/key",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Enum key",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/extract/{id}": {
            "get": {
                "tags": [
                    "Extraction"
                ],
                "summary": "Get extracted document",
                "description": "Extracted document is marked for removal and will be deleted within several hours of being accessed. This gives users time to retry retrieving the result if they happen to fail.",
                "operationId": "GetExtractDocument",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Document ID (provided by RedQue or external)",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Document ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/extract": {
            "post": {
                "tags": [
                    "Extraction"
                ],
                "summary": "Extract document",
                "description": "Requests extraction of a document. After document is retrieved it is scheduled for deletion.",
                "operationId": "ExtractDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "externalDocumentId",
                        "description": "Document ID (optional - your external document ID)",
                        "type": "string",
                        "x-ms-summary": "Document ID"
                    },
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "File",
                        "type": "file",
                        "x-ms-summary": "File"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/folder": {
            "post": {
                "tags": [
                    "Folder"
                ],
                "summary": "Create folder",
                "description": "Creates a new folder.",
                "operationId": "CreateFolder",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ApiFolderCreationResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v1/folder/{folderId}/archived": {
            "get": {
                "tags": [
                    "Folder"
                ],
                "summary": "Download folder",
                "description": "Downloads all documents in a folder as a single archive.",
                "operationId": "DownloadFolderArchived",
                "parameters": [
                    {
                        "in": "path",
                        "name": "folderId",
                        "description": "Folder identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Folder ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/folder/{folderId}": {
            "delete": {
                "tags": [
                    "Folder"
                ],
                "summary": "Remove folder",
                "description": "Removes existing folder.",
                "operationId": "DeleteFolder",
                "parameters": [
                    {
                        "in": "path",
                        "name": "folderId",
                        "description": "Folder identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Folder ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "get": {
                "tags": [
                    "Folder"
                ],
                "summary": "Find folder",
                "description": "Finds folder by ID.",
                "operationId": "GetFolder",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "folderId",
                        "description": "Folder identifier",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Folder ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "query",
                        "name": "withMembers",
                        "description": "True if document with members",
                        "type": "boolean",
                        "default": false,
                        "x-ms-summary": "With members"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiFolderWithMembers"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Folder"
                ],
                "summary": "Update folder data",
                "description": "Updates folder data.",
                "operationId": "UpdateContainerData",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "folderId",
                        "description": "Folder id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Folder ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Folder data",
                        "x-ms-summary": "Folder data",
                        "schema": {
                            "$ref": "#/definitions/ApiFolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/tenant/license": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "License information",
                "description": "Returns license information.",
                "operationId": "GetLicenseInfo",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MLicense"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/tenant/token": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Return token",
                "description": "Returns current registration token or nothing if token is not active.",
                "operationId": "GetRegisterToken",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/StringApiValue"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Generate token",
                "description": "Generates new registration token.",
                "operationId": "GenerateRegistrationToken",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StringApiValue"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Removes token",
                "description": "Removes registration token.",
                "operationId": "DisableRegistrationToken",
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/users/list": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Filter users",
                "description": "Gets the list of user by criteria.",
                "operationId": "ListOfUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Filter parameters",
                        "schema": {
                            "$ref": "#/definitions/ApiUserListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiUserApiListResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v1/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "description": "Creates a new user.",
                "operationId": "CreateUser",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ApiUserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/users/{userId}/password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change password",
                "description": "Changes user's password.",
                "operationId": "ChangePassword",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Password of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Changed"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Change user's password",
                "description": "Changes password for specified user. Requires user management permission.",
                "operationId": "ForceUserPasswordChange",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Object with parameters for resetting the user",
                        "schema": {
                            "$ref": "#/definitions/ApiUserResetPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Changed"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/users/{userId}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Deletes a user.",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User Id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find user",
                "description": "Finds a user.",
                "operationId": "GetUser",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Partially updates a specified user.",
                "operationId": "UpdateUser",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User id",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Users other informations",
                        "schema": {
                            "$ref": "#/definitions/ApiUserUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        },
        "/v1/users/{userId}/permission": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Add permissions",
                "description": "Adds permissions to the user.",
                "operationId": "AddUserPermissions",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Object with list of permissions",
                        "schema": {
                            "$ref": "#/definitions/ApiUserAddPermissionsPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove permissions",
                "description": "Revokes user's permissions.",
                "operationId": "RemoveUserPermissions",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Object with list of permissions",
                        "schema": {
                            "$ref": "#/definitions/ApiUserRemovePermissionsPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revoked"
                    },
                    "401": {
                        "description": "Unauthorized client"
                    },
                    "403": {
                        "description": "You don't have permission to access this resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "AccountingProviderType": {
            "enum": [
                "iDoklad",
                "Fakturoid",
                "Pohoda"
            ],
            "type": "string"
        },
        "ApiApproval": {
            "type": "object",
            "properties": {
                "approver": {
                    "$ref": "#/definitions/ApiUser"
                },
                "approvalStepTime": {
                    "format": "date-time",
                    "description": "Assignment time to the current approver´.",
                    "type": "string"
                },
                "approvalState": {
                    "$ref": "#/definitions/ApprovalState"
                },
                "delegatedTo": {
                    "$ref": "#/definitions/ApiUser"
                },
                "note": {
                    "description": "Approver note",
                    "type": "string"
                }
            }
        },
        "ApiApprovalReminder": {
            "type": "object",
            "properties": {
                "fromUser": {
                    "$ref": "#/definitions/ApiUser"
                },
                "toUser": {
                    "$ref": "#/definitions/ApiUser"
                },
                "sentTime": {
                    "format": "date-time",
                    "description": "Time of sending",
                    "type": "string"
                },
                "note": {
                    "description": "Urgency note",
                    "type": "string"
                }
            }
        },
        "ApiApprove": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/ApprovalState"
                }
            }
        },
        "ApiApproveApiValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ApiApprove"
                }
            }
        },
        "ApiDocument": {
            "type": "object",
            "properties": {
                "documentId": {
                    "description": "Document id",
                    "type": "string",
                    "readOnly": true
                },
                "externalDocumentId": {
                    "description": "External document ID",
                    "type": "string"
                },
                "folderId": {
                    "description": "Document container id",
                    "type": "string"
                },
                "contentHash": {
                    "description": "Hash of the content",
                    "type": "string"
                },
                "pageCount": {
                    "format": "int32",
                    "description": "Total number of pages in the document, first index is 1. This number might not be equal\r\nto number of Pages, because if document has too many pages, some of them may be skipped\r\ndue to performance reasons",
                    "type": "integer"
                },
                "fileName": {
                    "description": "File name of the document",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/ApiUser"
                },
                "state": {
                    "$ref": "#/definitions/DocumentState"
                },
                "error": {
                    "description": "Error code of the document",
                    "type": "string"
                },
                "isImagesGenerated": {
                    "description": "Were images generated",
                    "type": "boolean"
                },
                "isReturned": {
                    "description": "True if documents was returned to the sender.",
                    "type": "boolean"
                },
                "returnReason": {
                    "description": "Reason for the return.",
                    "type": "string"
                },
                "creationTime": {
                    "format": "date-time",
                    "description": "Creation date",
                    "type": "string"
                },
                "size": {
                    "format": "int32",
                    "description": "Size of the document in KB",
                    "type": "integer"
                },
                "contentType": {
                    "description": "Content type",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/DocumentSource"
                },
                "sourceInfo": {
                    "description": "Source details (in general email address)",
                    "type": "string"
                },
                "extractionTime": {
                    "format": "date-time",
                    "description": "Classification date",
                    "type": "string"
                },
                "model": {
                    "description": "Type of this document",
                    "type": "string"
                },
                "isAttachment": {
                    "description": "Indicates if document is an attachment",
                    "type": "boolean"
                },
                "isValidated": {
                    "description": "Indicator if document has been validated",
                    "type": "boolean"
                },
                "isEdited": {
                    "description": "Indicator, if this document has been edited (at least one field, note or tag has been changed)",
                    "type": "boolean"
                },
                "note": {
                    "description": "Custom user note",
                    "type": "string"
                },
                "fields": {
                    "description": "List of extracted fields",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ApiField"
                    }
                },
                "items": {
                    "description": "List of extracted items",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/ApiField"
                        }
                    }
                },
                "pages": {
                    "description": "List of all pages that are part of an extraction.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiPage"
                    }
                },
                "pluginResults": {
                    "description": "General results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiPluginResult"
                    }
                },
                "isPostProcessCompleted": {
                    "description": "Indicator, if the post processing has completed",
                    "type": "boolean"
                },
                "isPrevalidated": {
                    "description": "Whether or not a doc has some prevalidation pp scripts",
                    "type": "boolean"
                },
                "lastOpenTime": {
                    "format": "date-time",
                    "description": "Last open date",
                    "type": "string"
                },
                "lastOpenUserId": {
                    "description": "Id of the user that last opened this document",
                    "type": "string"
                },
                "isLocked": {
                    "description": "Determines whether document is locked or not",
                    "type": "boolean"
                },
                "validationTime": {
                    "format": "date-time",
                    "description": "The time the document has been validated",
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "description": "Version number, incremented with every update",
                    "type": "integer"
                },
                "approvalState": {
                    "$ref": "#/definitions/ApprovalState"
                },
                "currentApproverId": {
                    "description": "Id of user that has to approve this document",
                    "type": "string"
                },
                "lastApprovalStepTime": {
                    "format": "date-time",
                    "description": "Assignment time to the current approver",
                    "type": "string"
                },
                "isCurrentApproverNotificationSent": {
                    "description": "Notification was sent to the current approver",
                    "type": "boolean"
                },
                "approvalHistory": {
                    "description": "Approval history",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiApproval"
                    }
                },
                "approvalReminderHistory": {
                    "description": "Approve history",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiApprovalReminder"
                    }
                },
                "authorizedUserIds": {
                    "description": "Users authorized to access the document",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duplicateDocIds": {
                    "description": "Duplicate document IDs (based on fields values)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "approvedBy": {
                    "$ref": "#/definitions/ApiUser"
                },
                "validatedBy": {
                    "$ref": "#/definitions/ApiUser"
                }
            }
        },
        "ApiDocumentAccessRequest": {
            "description": "Grant document access request",
            "type": "object",
            "properties": {
                "documentId": {
                    "description": "Document id",
                    "type": "string"
                },
                "userId": {
                    "description": "User id",
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/ApiDocumentGrantAccessRequest"
                }
            }
        },
        "ApiDocumentApiListResult": {
            "description": "Search result",
            "type": "object",
            "properties": {
                "list": {
                    "description": "List of all found values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDocument"
                    }
                },
                "hasMore": {
                    "description": "True if search can return more values",
                    "type": "boolean"
                },
                "offset": {
                    "format": "int32",
                    "description": "Offset value (Number of skipped values)",
                    "type": "integer"
                }
            }
        },
        "ApiDocumentFieldFilter": {
            "description": "Filter for document fields",
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "ApiDocumentFilter": {
            "description": "Document filter for api",
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "state": {
                    "$ref": "#/definitions/DocumentStateApiFilterMultipleChoice"
                },
                "approvalState": {
                    "$ref": "#/definitions/ApprovalStateApiFilterMultipleChoice"
                },
                "type": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "sourceInfo": {
                    "$ref": "#/definitions/StringApiFilterNotEqual"
                },
                "isPostProcessCompleted": {
                    "$ref": "#/definitions/BooleanApiFilterEqual"
                },
                "isReturnedToSender": {
                    "$ref": "#/definitions/BooleanApiFilterEqual"
                },
                "source": {
                    "$ref": "#/definitions/DocumentSourceApiFilterMultipleChoice"
                },
                "ownerId": {
                    "$ref": "#/definitions/StringApiFilterMultipleChoice"
                },
                "validatorId": {
                    "$ref": "#/definitions/StringApiFilterMultipleChoice"
                },
                "createdDate": {
                    "$ref": "#/definitions/DateTimeNullableApiFilterEqualRange"
                },
                "validatedDate": {
                    "$ref": "#/definitions/DateTimeNullableApiFilterEqualRange"
                },
                "approvedDate": {
                    "$ref": "#/definitions/DateTimeNullableApiFilterEqualRange"
                },
                "fields": {
                    "description": "Field filters",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ApiDocumentFieldFilter"
                    }
                }
            }
        },
        "ApiDocumentGrantAccessRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "ApiDocumentListRequest": {
            "description": "List request for documents. Searches documents to find all that match criteria.",
            "type": "object",
            "properties": {
                "text": {
                    "description": "Search text used for general searches",
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/ApiDocumentFilter"
                },
                "control": {
                    "$ref": "#/definitions/ApiListControl"
                },
                "sort": {
                    "$ref": "#/definitions/ApiDocumentListSortFieldsApiListSort"
                },
                "scopes": {
                    "description": "List of all scopes that should be retrieved.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDocumentScope"
                    }
                }
            }
        },
        "ApiDocumentListSortFields": {
            "description": "List of properties on which the results can be sorted",
            "enum": [
                "FileName",
                "CreationTime",
                "TotalAmount",
                "IssuedByName"
            ],
            "type": "string"
        },
        "ApiDocumentListSortFieldsApiListSort": {
            "description": "Sort information for listing operation",
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/definitions/ApiDocumentListSortFields"
                },
                "direction": {
                    "$ref": "#/definitions/ApiListSortDirection"
                }
            }
        },
        "ApiDocumentReturnConfiguration": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "ApiDocumentReturnRequest": {
            "type": "object",
            "properties": {
                "additionalDocuments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recipientEmail": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "requestedByUserId": {
                    "type": "string"
                }
            }
        },
        "ApiDocumentScope": {
            "description": "Document scope that filters what parts of the document should be returned",
            "enum": [
                "Metadata",
                "Approval",
                "PluginResults",
                "Fields",
                "Words",
                "Users"
            ],
            "type": "string"
        },
        "ApiDocumentTypeDefinition": {
            "type": "object",
            "properties": {
                "className": {
                    "description": "Name of the document type",
                    "type": "string"
                },
                "language": {
                    "description": "Language",
                    "type": "string"
                },
                "fieldDef": {
                    "description": "Field definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiFieldDefinition"
                    }
                },
                "itemFieldDef": {
                    "description": "Item field definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiFieldDefinition"
                    }
                },
                "localization": {
                    "description": "Field localization",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDocumentTypeLocalization"
                    }
                }
            }
        },
        "ApiDocumentTypeLocalization": {
            "description": "Crate for document type localization",
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/LocFieldType"
                },
                "culture": {
                    "description": "Culture for selected key-value pair",
                    "type": "string"
                },
                "key": {
                    "description": "Key of the localized value",
                    "type": "string"
                },
                "value": {
                    "description": "Localized value",
                    "type": "string"
                }
            }
        },
        "ApiDocumentUpdate": {
            "type": "object",
            "properties": {
                "documentId": {
                    "type": "string"
                },
                "externalDocumentId": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "containerId": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "fileName": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "contentType": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "source": {
                    "$ref": "#/definitions/DocumentSourceApiValueUpdate"
                },
                "sourceInfo": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "documentClass": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "isAttachment": {
                    "$ref": "#/definitions/BooleanApiValueUpdate"
                },
                "edited": {
                    "$ref": "#/definitions/BooleanApiValueUpdate"
                },
                "note": {
                    "$ref": "#/definitions/StringApiValueUpdate"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiFieldValueUpdate"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ApiFieldValueUpdate"
                        }
                    }
                },
                "validate": {
                    "$ref": "#/definitions/ApiValidateApiValueUpdate"
                },
                "approve": {
                    "$ref": "#/definitions/ApiApproveApiValueUpdate"
                },
                "authorizeUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringApiListValueUpdate"
                    }
                },
                "duplicateDocIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringApiListValueUpdate"
                    }
                }
            }
        },
        "ApiEmailAccount": {
            "type": "object",
            "properties": {
                "mailAddress": {
                    "description": "E-Mail address",
                    "type": "string"
                },
                "host": {
                    "description": "Host address",
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "description": "Port on which the host server is exposing the service",
                    "type": "integer"
                },
                "securityOption": {
                    "$ref": "#/definitions/SecureSocketOptions"
                },
                "username": {
                    "description": "Username for the account",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the account",
                    "type": "string"
                }
            }
        },
        "ApiEnum": {
            "description": "Enum data for field type enum",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Enum identifier",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "User friendly enum name",
                    "type": "string"
                },
                "values": {
                    "description": "List of enum values",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isEditable": {
                    "description": "Indicates whether enum can be edited",
                    "type": "boolean"
                }
            }
        },
        "ApiFakturoidSettings": {
            "type": "object",
            "properties": {
                "apiEmail": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiAccountName": {
                    "type": "string"
                }
            }
        },
        "ApiField": {
            "description": "Fields for public API",
            "type": "object",
            "properties": {
                "fieldName": {
                    "description": "Field name",
                    "type": "string"
                },
                "fieldType": {
                    "description": "Type of the field",
                    "type": "string",
                    "example": "TEXT, NUMBER, ENUM, DATE, BINARY"
                },
                "fieldValue": {
                    "description": "Value to the field formatted as string",
                    "type": "string"
                },
                "enumName": {
                    "description": "Name of the enum. Only present if field type has the value ENUM.",
                    "type": "string"
                },
                "pluginResults": {
                    "description": "List of plugin results in key-value format where key is plugin id and value contains\r\ninformation about the plugin.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ApiPluginResult"
                    }
                },
                "isModifiedByPlugin": {
                    "description": "Whether the field was changed by a plugin",
                    "type": "boolean"
                },
                "isNotValidated": {
                    "description": "Field was hidden at time of validation",
                    "type": "boolean"
                },
                "words": {
                    "description": "Field was hidden at time of validation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiWord"
                    }
                }
            }
        },
        "ApiFieldDefinition": {
            "type": "object",
            "properties": {
                "fieldUniqueName": {
                    "description": "Fields identifier",
                    "type": "string"
                },
                "fieldName": {
                    "description": "Field name",
                    "type": "string"
                },
                "fieldType": {
                    "description": "Field type",
                    "type": "string"
                },
                "isRequired": {
                    "description": "Indicator, if this field is mandatory",
                    "type": "boolean"
                },
                "isTenantSpecific": {
                    "description": "True if field comes from the model",
                    "type": "boolean"
                },
                "orderIndex": {
                    "format": "int32",
                    "description": "Ordering index",
                    "type": "integer"
                },
                "provideValueListToCore": {
                    "description": "Indicator, if the list of unique values of this field can be loaded into core and be\r\nused for OCR (which creates its word \"dictionary\" and is used for spell-check)",
                    "type": "boolean"
                },
                "localization": {
                    "description": "Field localization",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDocumentTypeLocalization"
                    }
                },
                "enumName": {
                    "description": "Enum name",
                    "type": "string"
                },
                "isHidden": {
                    "description": "Exclude from learning",
                    "type": "boolean"
                },
                "pluginResults": {
                    "description": "Plugin results",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ApiPluginResult"
                    }
                }
            }
        },
        "ApiFieldValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "operation": {
                    "$ref": "#/definitions/ApiListValueOperation"
                },
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "isWarning": {
                    "type": "boolean"
                },
                "wordIds": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "ApiFolder": {
            "description": "Container metadata",
            "type": "object",
            "properties": {
                "folderId": {
                    "description": "Document id.",
                    "type": "string",
                    "readOnly": true
                },
                "ownerId": {
                    "description": "Container owner id",
                    "type": "string"
                },
                "created": {
                    "format": "date-time",
                    "description": "Time of container creation",
                    "type": "string",
                    "readOnly": true
                },
                "metadata": {
                    "description": "All headers attached to the container",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiFolderCreationResult": {
            "description": "Result from container creation",
            "type": "object",
            "properties": {
                "folderId": {
                    "description": "Container ID",
                    "type": "string"
                }
            }
        },
        "ApiFolderWithMembers": {
            "description": "Container metadata with metadata of documents inside the container",
            "type": "object",
            "properties": {
                "folderId": {
                    "description": "Document id.",
                    "type": "string",
                    "readOnly": true
                },
                "ownerId": {
                    "description": "Container owner id",
                    "type": "string"
                },
                "created": {
                    "format": "date-time",
                    "description": "Time of container creation",
                    "type": "string",
                    "readOnly": true
                },
                "metadata": {
                    "description": "All headers attached to the container",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "members": {
                    "description": "List of all container members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDocument"
                    }
                }
            }
        },
        "ApiIDokladSettings": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apiSecret": {
                    "type": "string"
                }
            }
        },
        "ApiItemCell": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Cell value",
                    "type": "string"
                },
                "modifiedByPostProcessing": {
                    "description": "Indicates if this value was modified by post processing",
                    "type": "boolean"
                },
                "pluginResults": {
                    "description": "Results from plugins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiPluginResult"
                    }
                }
            }
        },
        "ApiItemColumn": {
            "description": "Defines item table column.",
            "type": "object",
            "properties": {
                "field": {
                    "description": "Field",
                    "type": "string"
                },
                "width": {
                    "format": "double",
                    "description": "Height of the row.",
                    "type": "number"
                }
            }
        },
        "ApiItemRow": {
            "description": "Defines item table row.",
            "type": "object",
            "properties": {
                "height": {
                    "format": "double",
                    "description": "Height of the row.",
                    "type": "number"
                },
                "cells": {
                    "description": "List of all cells in this column. Count should be always equal to number of columns.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiItemCell"
                    }
                }
            }
        },
        "ApiItemTable": {
            "description": "Table of items",
            "type": "object",
            "properties": {
                "pageIndex": {
                    "format": "int32",
                    "description": "Index of page to which the table belongs.",
                    "type": "integer"
                },
                "offset": {
                    "$ref": "#/definitions/Offset"
                },
                "columns": {
                    "description": "List of column definitions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiItemColumn"
                    }
                },
                "rows": {
                    "description": "List of row definitions and cells in each row.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiItemRow"
                    }
                }
            }
        },
        "ApiListControl": {
            "description": "List controlling attributes",
            "type": "object",
            "properties": {
                "skip": {
                    "format": "int32",
                    "description": "How many items to skip from the start of the list. Allows for pagination.",
                    "type": "integer"
                },
                "take": {
                    "format": "int32",
                    "description": "Maximum number of list items that will be returned",
                    "type": "integer"
                }
            }
        },
        "ApiListSortDirection": {
            "description": "Direction in which list values are sorted",
            "enum": [
                "Ascending",
                "Descending"
            ],
            "type": "string"
        },
        "ApiListValueOperation": {
            "enum": [
                "Undefined",
                "Add",
                "AddIfNotExists",
                "Set",
                "Remove"
            ],
            "type": "string"
        },
        "ApiMoveFolders": {
            "type": "object",
            "properties": {
                "processedFolder": {
                    "description": "Folder for processed emails",
                    "type": "string"
                },
                "invalidFolder": {
                    "description": "Folder for invalid emails",
                    "type": "string"
                },
                "unknownUserFolder": {
                    "description": "Folder for emails from unknown users",
                    "type": "string"
                },
                "allowMailDeletion": {
                    "description": "Allow mail deletion",
                    "type": "boolean"
                },
                "allowUnknownUsers": {
                    "description": "Allow moving mail to invalid user. This prevents misconfiguration to cause unwanted\r\nmovements of email.",
                    "type": "boolean"
                }
            }
        },
        "ApiNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Notification identifier",
                    "type": "string"
                },
                "creationTime": {
                    "format": "date-time",
                    "description": "Timestamp of creation",
                    "type": "string"
                },
                "userId": {
                    "description": "User ID",
                    "type": "string"
                },
                "senderId": {
                    "description": "User who sent the notification",
                    "type": "string"
                },
                "notificationType": {
                    "description": "Notification type",
                    "type": "string"
                },
                "message": {
                    "description": "Notification message",
                    "type": "string"
                },
                "isRead": {
                    "description": "Is notification read",
                    "type": "boolean"
                },
                "readTime": {
                    "format": "date-time",
                    "description": "Read timestamp",
                    "type": "string"
                }
            }
        },
        "ApiPage": {
            "description": "Document page",
            "type": "object",
            "properties": {
                "index": {
                    "format": "int32",
                    "description": "Document page index. Indexed from 1.",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Width of the page in pixels.",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Height of the page in pixels.",
                    "type": "integer"
                },
                "rotation": {
                    "format": "double",
                    "description": "Rotation of the page in degrees.",
                    "type": "number"
                },
                "words": {
                    "description": "List of all words present on the page.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiWord"
                    }
                },
                "itemTable": {
                    "$ref": "#/definitions/ApiItemTable"
                }
            }
        },
        "ApiPluginResult": {
            "type": "object",
            "properties": {
                "pluginName": {
                    "description": "Gets or sets name of script that has validated this document",
                    "type": "string"
                },
                "resultCode": {
                    "$ref": "#/definitions/PostProcessResult"
                },
                "value": {
                    "description": "Gets or sets the collection of localized messages",
                    "type": "string"
                },
                "extraInformationRequired": {
                    "description": "Gets or sets whether extra information is needed",
                    "type": "boolean"
                },
                "extraInformationMessage": {
                    "description": "Gets or sets the extra information requirements message",
                    "type": "string"
                }
            }
        },
        "ApiPohodaSettings": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "companyId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ApiSender": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Sender's address",
                    "type": "string"
                },
                "documentType": {
                    "description": "DocumentType",
                    "type": "string"
                },
                "replyTo": {
                    "description": "Optional reply address",
                    "type": "string"
                }
            }
        },
        "ApiTenantCreateEmailServer": {
            "description": "Email server for creation of Tenant",
            "type": "object",
            "properties": {
                "host": {
                    "description": "Host",
                    "type": "string"
                },
                "username": {
                    "description": "User name",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "port": {
                    "description": "Port",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol",
                    "type": "string"
                },
                "encryption": {
                    "description": "Encryption",
                    "type": "string"
                },
                "isDisabled": {
                    "description": "Info about disabled email server",
                    "type": "boolean"
                }
            }
        },
        "ApiTenantCreateExport": {
            "description": "Export for creation of tenant",
            "type": "object",
            "properties": {
                "eventList": {
                    "description": "list of events",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exportsInOwnFolder": {
                    "description": "Exports in own folder",
                    "type": "boolean"
                },
                "format": {
                    "description": "Format",
                    "type": "string"
                },
                "archivationFormat": {
                    "description": "Archivation format",
                    "type": "string"
                },
                "exportData": {
                    "description": "Export data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "platform": {
                    "description": "Platform",
                    "type": "string"
                },
                "fileNameSource": {
                    "description": "File name source",
                    "type": "string"
                },
                "fileNameStyle": {
                    "description": "File name style",
                    "type": "string"
                },
                "directoryNameSource": {
                    "description": "Directory name source",
                    "type": "string"
                },
                "directoryNameStyle": {
                    "description": "Directory name style",
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/Configuration"
                }
            }
        },
        "ApiTenantCreateGeneral": {
            "type": "object",
            "properties": {
                "ares": {
                    "type": "boolean"
                },
                "approval": {
                    "type": "boolean"
                },
                "duplicateDetection": {
                    "type": "boolean"
                },
                "signDocuments": {
                    "type": "boolean"
                }
            }
        },
        "ApiTenantCreateUser": {
            "description": "User for creation of tenant",
            "type": "object",
            "properties": {
                "tenantId": {
                    "description": "Tenant Id",
                    "type": "string"
                },
                "firstName": {
                    "description": "First name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "email": {
                    "description": "Email",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                }
            }
        },
        "ApiTenantFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "idn": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "vat": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "address": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                }
            }
        },
        "ApiTenantSortListFields": {
            "enum": [
                "Name",
                "Idn",
                "Vat",
                "Address"
            ],
            "type": "string"
        },
        "ApiTenantSortListFieldsApiListSort": {
            "description": "Sort information for listing operation",
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/definitions/ApiTenantSortListFields"
                },
                "direction": {
                    "$ref": "#/definitions/ApiListSortDirection"
                }
            }
        },
        "ApiUploadResponse": {
            "description": "Result of an file upload",
            "type": "object",
            "properties": {
                "documentId": {
                    "description": "Document Id",
                    "type": "string"
                },
                "folderId": {
                    "description": "Folder id",
                    "type": "string"
                }
            }
        },
        "ApiUser": {
            "description": "User information",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of user",
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "description": "First name of user",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of user",
                    "type": "string"
                }
            }
        },
        "ApiUserAddPermissionsPayload": {
            "description": "Object with list of permission",
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Access data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiUserApiListResult": {
            "description": "Search result",
            "type": "object",
            "properties": {
                "list": {
                    "description": "List of all found values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "hasMore": {
                    "description": "True if search can return more values",
                    "type": "boolean"
                },
                "offset": {
                    "format": "int32",
                    "description": "Offset value (Number of skipped values)",
                    "type": "integer"
                }
            }
        },
        "ApiUserCreateRequest": {
            "description": "Request for creating the user",
            "type": "object",
            "properties": {
                "firstName": {
                    "description": "First name of user",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of user",
                    "type": "string"
                },
                "password": {
                    "description": "Password of account",
                    "type": "string"
                },
                "email": {
                    "description": "Email (Login name) of user",
                    "type": "string"
                }
            }
        },
        "ApiUserFilter": {
            "type": "object",
            "properties": {
                "firstName": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "lastName": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                },
                "email": {
                    "$ref": "#/definitions/StringApiFilterEqual"
                }
            }
        },
        "ApiUserListRequest": {
            "description": "List request for users. Searches users to find all that match criteria.",
            "type": "object",
            "properties": {
                "text": {
                    "description": "Search text used for general searches",
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/ApiUserFilter"
                },
                "control": {
                    "$ref": "#/definitions/ApiListControl"
                },
                "sort": {
                    "$ref": "#/definitions/ApiUserSortListFieldsApiListSort"
                }
            }
        },
        "ApiUserRemovePermissionsPayload": {
            "description": "Object with list of permission",
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Access data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiUserResetPayload": {
            "description": "Object with parameters for resetting the user",
            "type": "object",
            "properties": {
                "password": {
                    "description": "Password of user",
                    "type": "string"
                },
                "accountId": {
                    "description": "Account Id of user",
                    "type": "string"
                },
                "activationkey": {
                    "description": "Activation key of user",
                    "type": "string"
                }
            }
        },
        "ApiUserSortListFields": {
            "description": "Enum for declaring sorting parameters of user",
            "enum": [
                "FirstName",
                "LastName",
                "Email"
            ],
            "type": "string"
        },
        "ApiUserSortListFieldsApiListSort": {
            "description": "Sort information for listing operation",
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/definitions/ApiUserSortListFields"
                },
                "direction": {
                    "$ref": "#/definitions/ApiListSortDirection"
                }
            }
        },
        "ApiUserUpdatePayload": {
            "description": "Object with parameters for resetting the user",
            "type": "object",
            "properties": {
                "firstName": {
                    "description": "First name of user",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of user",
                    "type": "string"
                }
            }
        },
        "ApiValidate": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "ApiValidateApiValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ApiValidate"
                }
            }
        },
        "ApiWord": {
            "type": "object",
            "properties": {
                "wordId": {
                    "format": "int32",
                    "description": "Id of the word, unique for one document",
                    "type": "integer",
                    "readOnly": true
                },
                "pageIndex": {
                    "format": "int32",
                    "description": "Index of the page the word is presented",
                    "type": "integer"
                },
                "text": {
                    "description": "Text of the word",
                    "type": "string"
                },
                "locX": {
                    "format": "int32",
                    "description": "X-coordinate of the word",
                    "type": "integer"
                },
                "locY": {
                    "format": "int32",
                    "description": "Y-coordinate of the word",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Word's width",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Word's height",
                    "type": "integer"
                }
            }
        },
        "ApprovalState": {
            "description": "State of the document",
            "enum": [
                "UNAPPROVED",
                "PREAPPROVED",
                "PREREJECTED",
                "DELEGATED",
                "ABANDONED",
                "APPROVED",
                "REJECTED"
            ],
            "type": "string"
        },
        "ApprovalStateApiFilterMultipleChoice": {
            "description": "Multiple choice filter implementation",
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApprovalState"
                    }
                }
            }
        },
        "BooleanApiFilterEqual": {
            "description": "Equal filter implementation",
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "BooleanApiValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "Configuration": {
            "description": "Email configuration",
            "type": "object",
            "properties": {
                "userName": {
                    "description": "User name",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "host": {
                    "description": "Host",
                    "type": "string"
                },
                "port": {
                    "description": "Port",
                    "type": "string"
                },
                "folder": {
                    "description": "Folder",
                    "type": "string"
                }
            }
        },
        "DateTimeNullableApiFilterEqualRange": {
            "description": "Filter which combines equal and range filters",
            "type": "object",
            "properties": {
                "from": {
                    "format": "date-time",
                    "type": "string"
                },
                "to": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "DocumentSource": {
            "enum": [
                "WebApp",
                "Mail",
                "API",
                "Plugin"
            ],
            "type": "string"
        },
        "DocumentSourceApiFilterMultipleChoice": {
            "description": "Multiple choice filter implementation",
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentSource"
                    }
                }
            }
        },
        "DocumentSourceApiValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DocumentSource"
                }
            }
        },
        "DocumentState": {
            "description": "State of the document",
            "enum": [
                "Uploading",
                "Uploaded",
                "PreProcessed",
                "Extracting",
                "Extracted",
                "Validated",
                "Exported",
                "Failed",
                "UnsupportedType",
                "NoLicense"
            ],
            "type": "string"
        },
        "DocumentStateApiFilterMultipleChoice": {
            "description": "Multiple choice filter implementation",
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentState"
                    }
                }
            }
        },
        "LicenseTimePeriod": {
            "description": "Time period for licenses",
            "enum": [
                "Day",
                "Week",
                "Month",
                "Quarter",
                "Year",
                "Eternity"
            ],
            "type": "string"
        },
        "LocFieldType": {
            "description": "Localization field type",
            "enum": [
                "DOC_TYPE",
                "FIELD",
                "BATCH_EXPORT_HEADER_FIELD",
                "ENUM"
            ],
            "type": "string"
        },
        "MLicense": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "$ref": "#/definitions/ResponseCode"
                },
                "responseMessage": {
                    "type": "string"
                },
                "validFrom": {
                    "format": "date-time",
                    "type": "string"
                },
                "validTo": {
                    "format": "date-time",
                    "type": "string"
                },
                "nextPeriod": {
                    "format": "date-time",
                    "type": "string"
                },
                "usageLimit": {
                    "format": "int32",
                    "type": "integer"
                },
                "usageLimitPeriod": {
                    "$ref": "#/definitions/LicenseTimePeriod"
                },
                "isTrial": {
                    "type": "boolean"
                },
                "usageCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MailboxType": {
            "description": "Type of mailbox",
            "enum": [
                "Imap"
            ],
            "type": "string"
        },
        "Offset": {
            "description": "Defines two-dimensional offset with X and Y coordinates.",
            "type": "object",
            "properties": {
                "x": {
                    "format": "double",
                    "description": "Offset at X coordinate.",
                    "type": "number"
                },
                "y": {
                    "format": "double",
                    "description": "Offset at Y coordinate.",
                    "type": "number"
                }
            }
        },
        "PostProcessResult": {
            "description": "Post processing result",
            "enum": [
                "SUCCESS",
                "FAILURE"
            ],
            "type": "string"
        },
        "RedQueStatus": {
            "description": "Status response data. Used as a response when request returns no data.",
            "type": "object",
            "properties": {
                "statusCode": {
                    "format": "int32",
                    "description": "Status code",
                    "type": "integer"
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                }
            }
        },
        "ResponseCode": {
            "enum": [
                "NONE",
                "OK",
                "NO_CONFIG_FILE",
                "INCOMPLETE_CONFIG_FILE",
                "INVALID_CONFIG_FILE",
                "UNREADABLE_CONFIG_FILE",
                "DATABASE_NOT_AVAILABLE",
                "DOCUMENT_STORAGE_NOT_AVAILABLE",
                "UNKNOWN_USER",
                "INTERNAL_ERROR",
                "USER_ALREADY_EXISTS",
                "LICENSE_SERVER_ERROR",
                "MODEL_CANT_BE_READ",
                "NOT_AUTHENTICATED",
                "GROUP_ALREADY_EXISTS",
                "UNKNOWN_GROUP",
                "MODEL_BUILDING",
                "MODEL_CANT_BE_BUILT",
                "MODEL_STORAGE_NOT_AVAILABLE",
                "UNDEFINED_LANGUAGE",
                "FORMAT_NOT_SUPPORTED",
                "DOCUMENT_SIZE_EXCEEDED",
                "DOCUMENT_NOT_FOUND",
                "DPI_NOT_SUFFICIENT",
                "DOCUMENT_ALREADY_EXISTS",
                "MODEL_NOT_SPECIFIED",
                "CLASS_NOT_EXISTS",
                "MODEL_NOT_FOUND",
                "USER_NOT_REGISTERED",
                "PAGE_NOT_EXIST",
                "ATTACHMENT_NOT_VALID",
                "PLUGINS_CANT_BE_LOADED",
                "PLUGIN_NOT_FOUND",
                "DISABLED_FEATURE",
                "METADATA_NOT_VALID",
                "TRANSACTION_ABORTED",
                "AUTHBACKEND_INITIALIZATION_FAILED",
                "OUT_OF_MEMORY",
                "ENTITY_COULD_NOT_BE_SAVED",
                "ENTITY_COULD_NOT_BE_LOADED",
                "EXTRACTION_ERROR",
                "TRANSACTION_INVALIDATED",
                "SERVICE_NOT_AVAILABLE",
                "BACKEND_NOT_FOUND",
                "INCORRECT_DATA",
                "USER_NOT_FOUND",
                "PERMISSION_ALREADY_ASSIGNED",
                "PERMISSION_NOT_FOUND",
                "ENTITY_ALREADY_EXISTS",
                "ENTITY_NOT_FOUND",
                "POSTPROCESSING_INITIALIZATION_FAILED",
                "DOCUMENT_ALREADY_OPENED",
                "DOCUMENT_OPENED_BY_ANOTHER_USER",
                "DOCUMENT_OLD_VERSION",
                "DOCUMENT_FILE_CORRUPTED",
                "DOCUMENT_FILE_PROTECTED",
                "POSTPROCESSING_PREVALIDATION_FAILED",
                "TENANT_ALREADY_EXISTS",
                "NOT_AUTHORIZED",
                "EXPORT_NO_TEMPLATE",
                "EXPORT_FILL_ERROR",
                "EXPORT_SAVE_ERROR",
                "EXPORT_REQUIRED_FIELD_MISSING",
                "EXPORT_TEMPLATE_INVALID",
                "BATCH_EXPORT_NO_ROOT",
                "BATCH_EXPORT_NO_DOCS",
                "BATCH_EXPORT_TOO_MANY_DOCS",
                "TENANT_NOT_FOUND",
                "AUTH_BACKEND_ERROR",
                "REQUEST_INVALID",
                "FIELD_INVALID",
                "REQUIRED_FIELD_MISSING",
                "FIELD_VALUE_INVALID",
                "FIELD_UNKNOWN",
                "REQUEST_TIMEOUT",
                "NO_CHANGES",
                "ENUM_UNKNOWN_KEY",
                "ENUM_MISSING_KEY",
                "ENUM_DUPLICATE_KEY",
                "VALIDATION_THRESHOLD_MET",
                "VALIDATION_THRESHOLD_EXCEEDED",
                "USER_NOT_APPROVED",
                "WHITELIST_ADDRESS_INVALID",
                "WHITELIST_USER_ANOTHER_TENANT",
                "LICENSE_MISSING",
                "LICENSE_EXPIRED",
                "LICENSE_NOT_VALID_YET",
                "LICENSE_USAGE_EXCEEDED",
                "CONTAINER_PARTIALLY_REMOVED",
                "CONTAINER_CREATION_FAILED",
                "CONTAINER_NOT_FOUND",
                "CONTAINER_NOT_REMOVED",
                "DOCUMENT_NOT_RETURNED",
                "DOCUMENT_RETURNED_NOT_SAVED",
                "DOCUMENT_NOT_READY",
                "DOCUMENT_UNSUPPORTED_TYPE",
                "DOCUMENT_EXTRACT_RESULT_NOT_FOUND",
                "DOCUMENT_FILE_NOT_FOUND",
                "DOCUMENT_FILE_UPLOAD_FAILED",
                "DOCUMENT_FORBIDDEN_TYPE",
                "ATTACHMENT_NOT_ATTACHED",
                "PASSWORD_NOT_ACCEPTED",
                "EMAIL_NOT_FOUND",
                "NO_TEXT_DETECTED",
                "ENTITY_DELETE_FAILED"
            ],
            "type": "string"
        },
        "SecureSocketOptions": {
            "description": "Secure socket options.",
            "enum": [
                "None",
                "Auto",
                "SslOnConnect",
                "StartTls",
                "StartTlsWhenAvailable"
            ],
            "type": "string"
        },
        "StringApiFilterEqual": {
            "description": "Equal filter implementation",
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "StringApiFilterMultipleChoice": {
            "description": "Multiple choice filter implementation",
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StringApiFilterNotEqual": {
            "description": "Equal filter implementation",
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "StringApiListValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "operation": {
                    "$ref": "#/definitions/ApiListValueOperation"
                }
            }
        },
        "StringApiValue": {
            "description": "Generic response value",
            "type": "object",
            "properties": {
                "value": {
                    "description": "Value",
                    "type": "string"
                }
            }
        },
        "StringApiValueUpdate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://redque.cz/en/"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://redque.cz/policy.html"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "AI;Finance"
        }
    ],
    "schemes": [
        "https"
    ],
    "security": [
        {
            "oauth2_auth": []
        }
    ],
    "securityDefinitions": {
      "oauth2_auth": {
        "authorizationUrl": "https://demoidentity.redque.com/connect/authorize",
        "flow": "accessCode",
        "scopes": {
          "v1.public offline_access": "v1.public offline_access"
        },
        "tokenUrl": "https://demoidentity.redque.com/connect/token",
        "type": "oauth2"
      }
    }
}