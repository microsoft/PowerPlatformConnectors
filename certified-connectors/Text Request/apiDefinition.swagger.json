{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Text Request",
    "description": "Text Request is a business texting platform that helps businesses turn conversations into customers.",
    "contact": {
      "name": "Text Request API Support",
      "email": "apidev@textrequest.com",
      "url": "https://www.textrequest.com/contact"
    }
  },
  "host": "api.textrequest.com",
  "basePath": "/api/v3",
  "schemes": [
    "https"
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/dashboards/{dashboard_id}/contacts/{phone_number}/messages": {
      "get": {
        "summary": "Get a conversation's messages by a contact's phone number",
        "description": "Retrieves the conversation between the specified dashboard and phone number.",
        "operationId": "GetMessagesByContactPhone",
        "parameters": [
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Id of the dashboard to make this call on",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers."
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Contact's phone number to search by",
            "description": "Phone number of the contact to get messages for."
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message_id": {
                        "type": "string",
                        "description": "Id of the message. This value is unique for each message."
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of this message."
                      },
                      "message_direction": {
                        "type": "string",
                        "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                      },
                      "response_by_username": {
                        "type": "string",
                        "description": "Username of the Text Request user that last sent a message to this user."
                      },
                      "message_timestamp_utc": {
                        "type": "string",
                        "description": "Timestamp of when the message was sent or received by Text Request."
                      },
                      "delivery_status": {
                        "type": "string",
                        "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                      },
                      "delivery_error": {
                        "type": "string",
                        "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                      },
                      "mms_media": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                      }
                    }
                  },
                  "description": "List of message entities gotten from Text Request."
                }
              }
            }
          },
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return."
          }
        }
      },
      "post": {
        "summary": "Send a message to the contact with the given phone number",
        "description": "Sends a message (starting a new conversation if the given phone number has no message history).",
        "operationId": "SendMessageByPhoneNumber",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the contact to send a message to.",
            "x-ms-summary": "Phone Number to Message"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "description": "Content of the message to send.",
                  "x-ms-summary": "Message body"
                },
                "sender_name": {
                  "type": "string",
                  "description": "The name of the message sender. This is shown in the TextRequest web app and api when retrieving this message.",
                  "x-ms-summary": "Name of the sender"
                },
                "status_callback": {
                  "type": "string",
                  "description": "Url for the web app to hit with a POST command whenever this message's status goes from undelivered to sent (or error).",
                  "x-ms-summary": "Callback url for when the message status updates"
                },
                "location_callback": {
                  "type": "string",
                  "description": "Location callback url to hit with a POST command when the user accesses and approves sharing their location with the sender. To include the link, add [Location Request] to the message body. This callback is not required for location requests, but it can be useful for APIs.",
                  "x-ms-summary": "Callback url for location requests if this message includes one"
                },
                "mms_media": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of MMS Media attachments for this message. Attachments must be urls gotten from the post /mms endpoint (not included in this connector). External attachment links will not be accepted.",
                  "x-ms-summary": "MMS Media attachments for this message"
                }
              },
              "default": {
                "body": "I am reaching back out.",
                "sender_name": "Bill Cassidy"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "message_id": {
                  "type": "string",
                  "description": "Id of the message. This value is unique for each message."
                },
                "body": {
                  "type": "string",
                  "description": "Content of this message."
                },
                "message_direction": {
                  "type": "string",
                  "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                },
                "response_by_username": {
                  "type": "string",
                  "description": "Username of the Text Request user that last sent a message to this user."
                },
                "message_timestamp_utc": {
                  "type": "string",
                  "description": "Timestamp of when the message was sent or received by Text Request."
                },
                "delivery_status": {
                  "type": "string",
                  "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                },
                "delivery_error": {
                  "type": "string",
                  "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                },
                "mms_media": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/contacts/{phone_number}/conversations/archive": {
      "put": {
        "summary": "Archive a Conversation",
        "description": "Archiving a conversation removes it from the results of all conversation retrieval endpoints. A conversation will be automatically unarchived if the customer sends a text to your Text Request number, or if you send the customer a text from your Text Request number. Archiving conversations is a good way to remove clutter from customers you don’t plan on talking to in the future. Note that if a customer texts in \"STOP\" to prevent you from sending them any further SMS messages, the conversation is automatically archived.",
        "operationId": "ArchiveConversation",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the conversation to archive.",
            "x-ms-summary": "Phone Number of conversation"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/contacts/{phone_number}/conversations/unarchive": {
      "put": {
        "summary": "Unarchive a Conversation",
        "description": "Unarchive a conversation. Once a conversation is unarchived, it will once again appear in the queue. it will also appear in conversations returned by the /conversations endpoint. If a conversation is already unarchived, this method has no effect.",
        "operationId": "UnarchiveConversation",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the conversation to archive.",
            "x-ms-summary": "Phone Number of conversation"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/contacts/{phone_number}": {
      "get": {
        "summary": "Retrieves the contact with the specified phone number",
        "description": "If a contact does not yet exist with this phone number in this dashboard, no content will be returned, and no error will be thrown. Only the dashboard specified will be searched; contacts are organized by dashboard, and there is no account level search for a number available.",
        "operationId": "GetContactByPhoneNumber",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the contact to get.",
            "x-ms-summary": "Phone Number of the contact"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of this contact."
                },
                "first_name": {
                  "type": "string",
                  "description": "First name of this contact."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name of this contact."
                },
                "display_name": {
                  "type": "string",
                  "description": "Full name of this contact. This is the default name displayed in the web app when viewing contacts."
                },
                "is_suppressed": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are suppressed, and therefore not pushed to the top of the message queue when received."
                },
                "is_archived": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are archived, and therefore cannot be seen when querying conversations (by default)."
                },
                "is_blocked": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are blocked, and therefore not received or stored."
                },
                "suppressed_reason": {
                  "type": "string",
                  "description": "Phrase describing the reason for suppressing contact. If is_suppressed is false, this will be null."
                },
                "note": {
                  "type": "string",
                  "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact."
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "Array of integer ids referring to groups this contact belongs to."
                },
                "contact_tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of guids referring to tags attached to this contact."
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Guid referring to a custom field."
                      },
                      "value": {
                        "type": "string",
                        "description": "This contact's value for this custom field."
                      }
                    }
                  },
                  "description": "Array of custom field ids and values defined for this contact."
                },
                "is_resolved": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact is resolved. Any new texts received by this contact will set this false."
                },
                "first_contact_utc": {
                  "type": "string",
                  "description": "Timestamp of when the first message was sent to this contact."
                },
                "opted_out_utc": {
                  "type": "string",
                  "description": "Timestamp of when this contact opted out to receiving messages."
                },
                "last_msg_sent_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last message was sent to this contact."
                },
                "last_msg_received_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last message was received from this contact."
                },
                "total_msgs_sent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of total messages sent to this contact."
                },
                "total_msgs_received": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of total messages received from this contact."
                },
                "response_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total number of response messages from the contact."
                },
                "date_created_utc": {
                  "type": "string",
                  "description": "The timestamp of when ths contact was created."
                },
                "last_contact_date_utc": {
                  "type": "string",
                  "description": "The timestamp of when the last message was sent or received from this contact."
                },
                "last_message": {
                  "type": "object",
                  "properties": {
                    "message_id": {
                      "type": "string",
                      "description": "Id of the message. This value is unique for each message."
                    },
                    "body": {
                      "type": "string",
                      "description": "Content of this message."
                    },
                    "message_direction": {
                      "type": "string",
                      "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                    },
                    "response_by_username": {
                      "type": "string",
                      "description": "Username of the Text Request user that last sent a message to this user."
                    },
                    "message_timestamp_utc": {
                      "type": "string",
                      "description": "Timestamp of when the message was sent or received by Text Request."
                    },
                    "delivery_status": {
                      "type": "string",
                      "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                    },
                    "delivery_error": {
                      "type": "string",
                      "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                    },
                    "mms_media": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                    }
                  },
                  "description": "Last message sent to or from this contact."
                }
              }
            }
          },
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return."
          }
        }
      },
      "delete": {
        "summary": "Deletes the contact with the specified phone number",
        "description": "If a contact does not exist with this phone number in this dashboard, no content will be returned. If a contact does exist, but has no message history, no content will be returned, and a successful status code will indicate it was deleted. If a contact has any message history, it cannot be deleted, then a Bad Request error will be returned.",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the contact to delete.",
            "x-ms-summary": "Phone Number of contact"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          },
          "404": {
            "description": "The return payload when the requested entity could not be found."
          }
        }
      },
      "post": {
        "summary": "Create or update a contact",
        "description": "Creates or updates a contact (depending on whether one already exists with the given phone number).",
        "operationId": "CreateContact",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "phone_number",
            "default": "4239876543",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Phone number of the contact to create or update.",
            "x-ms-summary": "Phone Number of contact"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "The new first name of the contact.",
                  "x-ms-summary": "First name of contact"
                },
                "last_name": {
                  "type": "string",
                  "description": "The new last name of the contact.",
                  "x-ms-summary": "Last name of contact"
                },
                "display_name": {
                  "type": "string",
                  "description": "The new full name of the contact. This is the default name displayed in the web app when viewing contacts.",
                  "x-ms-summary": "Full name of contact"
                },
                "is_suppressed": {
                  "type": "boolean",
                  "description": "Determines whether conversations with this contact are suppressed, and therefore not pushed to the top of the message queue when received.",
                  "x-ms-summary": "Whether messages from this contact are suppressed"
                },
                "is_archived": {
                  "type": "boolean",
                  "description": "Determines whether conversations with this contact are archived, and therefore cannot be seen when querying conversations (by default).",
                  "x-ms-summary": "Whether messages from this contact are archived"
                },
                "is_blocked": {
                  "type": "boolean",
                  "description": "Determines whether conversations with this contact are blocked, and therefore not received or stored.",
                  "x-ms-summary": "Whether messages from this contact are blocked"
                },
                "suppressed_reason": {
                  "type": "string",
                  "description": "Phrase describing the reason for suppressing contact.",
                  "x-ms-summary": "Reason for suppressing this contact"
                },
                "note": {
                  "type": "string",
                  "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact.",
                  "x-ms-summary": "Contact Note"
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "Array of integer ids referring to groups this contact will belong to.",
                  "x-ms-summary": "Contact Groups"
                },
                "contact_tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of guids referring to tags attached to this contact.",
                  "x-ms-summary": "Contact Tags"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Guid referring to a custom field.",
                        "x-ms-summary": "Custom field id"
                      },
                      "value": {
                        "type": "string",
                        "description": "This contact's value for this custom field.",
                        "x-ms-summary": "Custom field value"
                      }
                    }
                  },
                  "description": "Array of custom field ids and values defined for this contact.",
                  "x-ms-summary": "Contact Custom Fields"
                },
                "is_resolved": {
                  "type": "boolean",
                  "description": "Determines whether the current conversation with this contact is resolved. Any new texts received by this contact will set this false.",
                  "x-ms-summary": "Whether the current conversation with this contact has been resolved"
                }
              },
              "default": {
                "first_name": "John",
                "last_name": "Smith",
                "display_name": "John Smith",
                "is_suppressed": false,
                "is_archived": false,
                "is_blocked": false,
                "suppressed_reason": "minim officia nulla non",
                "note": "Contact from newsletter.",
                "is_resolved": false
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of this contact."
                },
                "first_name": {
                  "type": "string",
                  "description": "First name of this contact."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name of this contact."
                },
                "display_name": {
                  "type": "string",
                  "description": "Full name of this contact. This is the default name displayed in the web app when viewing contacts."
                },
                "is_suppressed": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are suppressed, and therefore not pushed to the top of the message queue when received."
                },
                "is_archived": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are archived, and therefore cannot be seen when querying conversations (by default)."
                },
                "is_blocked": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact are blocked, and therefore not received or stored."
                },
                "suppressed_reason": {
                  "type": "string",
                  "description": "Phrase describing the reason for suppressing contact. If is_suppressed is false, this will be null."
                },
                "note": {
                  "type": "string",
                  "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact."
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "Array of integer ids referring to groups this contact belongs to."
                },
                "contact_tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of guids referring to tags attached to this contact."
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Guid referring to a custom field."
                      },
                      "value": {
                        "type": "string",
                        "description": "This contact's value for this custom field."
                      }
                    }
                  },
                  "description": "Array of custom field ids and values defined for this contact."
                },
                "is_resolved": {
                  "type": "boolean",
                  "description": "Whether the conversation with this contact is resolved. Any new texts received by this contact will set this false."
                },
                "first_contact_utc": {
                  "type": "string",
                  "description": "Timestamp of when the first message was sent to this contact."
                },
                "opted_out_utc": {
                  "type": "string",
                  "description": "Timestamp of when this contact opted out to receiving messages."
                },
                "last_msg_sent_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last message was sent to this contact."
                },
                "last_msg_received_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last message was received from this contact."
                },
                "total_msgs_sent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of total messages sent to this contact."
                },
                "total_msgs_received": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of total messages received from this contact."
                },
                "response_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of response messages from the contact."
                },
                "date_created_utc": {
                  "type": "string",
                  "description": "Timestamp of when ths contact was created."
                },
                "last_contact_date_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last message was sent or received from this contact."
                },
                "last_message": {
                  "type": "object",
                  "properties": {
                    "message_id": {
                      "type": "string",
                      "description": "Id of the message. This value is unique for each message."
                    },
                    "body": {
                      "type": "string",
                      "description": "Content of this message."
                    },
                    "message_direction": {
                      "type": "string",
                      "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                    },
                    "response_by_username": {
                      "type": "string",
                      "description": "Username of the Text Request user that last sent a message to this user."
                    },
                    "message_timestamp_utc": {
                      "type": "string",
                      "description": "Timestamp of when the message was sent or received by Text Request."
                    },
                    "delivery_status": {
                      "type": "string",
                      "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                    },
                    "delivery_error": {
                      "type": "string",
                      "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                    },
                    "mms_media": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                    }
                  },
                  "description": "Last message sent to or from this contact."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/contacts": {
      "get": {
        "summary": "Retrieves all contacts that match the specified filtering criterion",
        "description": "Retrieves all contacts that match the specified filtering criterion. Only the dashboard specified will be searched; there is no account level search for a number available.",
        "operationId": "GetContacts",
        "parameters": [
          {
            "name": "contact_phone_number",
            "default": "4239876543",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Phone number to filter contacts by.",
            "x-ms-summary": "Contact's phone number to search by"
          },
          {
            "name": "last_message_timestamp_before_utc",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by the last message sent or received. No contacts who sent messages after this time will be shown.",
            "x-ms-summary": "'Last-message-time sent before' search timestamp in UTC time"
          },
          {
            "name": "last_message_timestamp_after_utc",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by the last message sent or received. No contacts whose last sent message is before this time will be shown.",
            "x-ms-summary": "'Last-message-time sent after' search timestamp in UTC time"
          },
          {
            "name": "contact_created_before",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by when they were created. No contacts created after this time will be shown.",
            "x-ms-summary": "'Created before' search timestamp"
          },
          {
            "name": "contact_created_after",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by when they were created. No contacts created before this time will be shown.",
            "x-ms-summary": "'Created after' search timestamp"
          },
          {
            "name": "is_resolved",
            "default": false,
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Whether to search for contacts whose conversations have been resolved.",
            "x-ms-summary": "Whether contact's conversation is resolved"
          },
          {
            "name": "is_blocked",
            "default": false,
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Whether to search for contacts who have been blocked.",
            "x-ms-summary": "Whether contact is blocked"
          },
          {
            "name": "is_archived",
            "default": false,
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Whether to search for contacts who have been archived.",
            "x-ms-summary": "Whether contact is archived"
          },
          {
            "name": "is_suppressed",
            "default": false,
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Whether to search for contacts who have been suppressed.",
            "x-ms-summary": "Whether contact is suppressed"
          },
          {
            "name": "has_opted_out",
            "default": false,
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Whether to search for contacts who have opted out of receiving texts.",
            "x-ms-summary": "Whether contact has opted out"
          },
          {
            "name": "last_message_sent_before",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by when the last message was sent to the customer. No contacts who sent messages after this time will be shown. Uses timestamp as local time. To filter by time stamp in UTC time, use last_message_sent_before_utc",
            "x-ms-summary": "'Last-message-time sent before' search timestamp"
          },
          {
            "name": "last_message_sent_after",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by when the last message was sent to the customer. No contacts whose last sent message is before this time will be shown. Uses timestamp as local time. To filter by time stamp in UTC time, use last_message_sent_after_utc",
            "x-ms-summary": "'Last-message-time sent after' search timestamp"
          },
          {
            "name": "last_message_received_before",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by the last message received from the customer. No contacts who received messages after this time will be shown. Uses timestamp as local time. To filter by time stamp in UTC time, use last_message_sent_before_utc",
            "x-ms-summary": "'Last-message-time received before' search timestamp"
          },
          {
            "name": "last_message_received_after",
            "in": "query",
            "type": "string",
            "required": false,
            "format": "date-time",
            "description": "Cutoff time for searching contacts by the last message received from the customer. No contacts whose last sent message is before this time will be shown. Uses timestamp as local time. To filter by time stamp in UTC time, use last_message_sent_before_utc",
            "x-ms-summary": "'Last-message-time received after' search timestamp"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Comma-separated list of guids referring to tags to filter contacts by.",
            "x-ms-summary": "Contact Tags"
          },
          {
            "name": "groups",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Comma-separated list of integer ids referring to groups to filter contacts by.",
            "x-ms-summary": "Contact Groups"
          },
          {
            "name": "custom_field_id_1",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Guid referring to custom field to filter contacts by.",
            "x-ms-summary": "Id of custom field to filter by"
          },
          {
            "name": "custom_field_value_1",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Value referring to custom field to filter contacts by.",
            "x-ms-summary": "Value of custom field to filter by"
          },
          {
            "name": "custom_field_id_2",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Guid referring to second custom field to filter contacts by.",
            "x-ms-summary": "Id of second custom field to filter by"
          },
          {
            "name": "custom_field_value_2",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Value referring to second custom field to filter contacts by.",
            "x-ms-summary": "Value of second custom field to filter by"
          },
          {
            "name": "custom_field_id_3",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Guid referring to third custom field to filter contacts by.",
            "x-ms-summary": "Id of third custom field to filter by"
          },
          {
            "name": "custom_field_value_3",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Value referring to third custom field to filter contacts by.",
            "x-ms-summary": "Value of third custom field to filter by"
          },
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "phone_number": {
                        "type": "string",
                        "description": "Phone number of this contact."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of this contact."
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of this contact."
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Full name of this contact. This is the default name displayed in the web app when viewing contacts."
                      },
                      "is_suppressed": {
                        "type": "boolean",
                        "description": "Whether the conversation with this contact are suppressed, and therefore not pushed to the top of the message queue when received."
                      },
                      "is_archived": {
                        "type": "boolean",
                        "description": "Whether the conversation with this contact are archived, and therefore cannot be seen when querying conversations (by default)."
                      },
                      "is_blocked": {
                        "type": "boolean",
                        "description": "Whether the conversation with this contact are blocked, and therefore not received or stored."
                      },
                      "suppressed_reason": {
                        "type": "string",
                        "description": "Phrase describing the reason for suppressing contact. If is_suppressed is false, this will be null."
                      },
                      "note": {
                        "type": "string",
                        "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "Array of integer ids referring to groups this contact belongs to."
                      },
                      "contact_tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Array of guids referring to tags attached to this contact."
                      },
                      "custom_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Guid referring to a custom field."
                            },
                            "value": {
                              "type": "string",
                              "description": "This contact's value for this custom field."
                            }
                          }
                        },
                        "description": "Array of custom field ids and values defined for this contact."
                      },
                      "is_resolved": {
                        "type": "boolean",
                        "description": "Whether the conversation with this contact is resolved. Any new texts received by this contact will set this false."
                      },
                      "first_contact_utc": {
                        "type": "string",
                        "description": "Timestamp of when the first message was sent to this contact."
                      },
                      "opted_out_utc": {
                        "type": "string",
                        "description": "Timestamp of when this contact opted out to receiving messages."
                      },
                      "last_msg_sent_utc": {
                        "type": "string",
                        "description": "Timestamp of when the last message was sent to this contact."
                      },
                      "last_msg_received_utc": {
                        "type": "string",
                        "description": "Timestamp of when the last message was received from this contact."
                      },
                      "total_msgs_sent": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of total messages sent to this contact."
                      },
                      "total_msgs_received": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of total messages received from this contact."
                      },
                      "response_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of response messages from the contact."
                      },
                      "date_created_utc": {
                        "type": "string",
                        "description": "Timestamp of when ths contact was created."
                      },
                      "last_contact_date_utc": {
                        "type": "string",
                        "description": "Timestamp of when the last message was sent or received from this contact."
                      },
                      "last_message": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "description": "Id of the message. This value is unique for each message."
                          },
                          "body": {
                            "type": "string",
                            "description": "Content of this message."
                          },
                          "message_direction": {
                            "type": "string",
                            "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                          },
                          "response_by_username": {
                            "type": "string",
                            "description": "Username of the Text Request user that last sent a message to this user."
                          },
                          "message_timestamp_utc": {
                            "type": "string",
                            "description": "Timestamp of when the message was sent or received by Text Request."
                          },
                          "delivery_status": {
                            "type": "string",
                            "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                          },
                          "delivery_error": {
                            "type": "string",
                            "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                          },
                          "mms_media": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                          }
                        },
                        "description": "Last message sent to or from this contact."
                      }
                    }
                  },
                  "description": "List of contact entities gotten from Text Request."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      },
      "post": {
        "summary": "Bulk update contacts",
        "description": "Only the dashboard specified will have contacts added; contacts are organized by dashboard, and there is no account level search for a number available.",
        "operationId": "BulkUpdateContacts",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "description": "Phone number of the contact to create or update.",
                    "x-ms-summary": "Phone Number of contact"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The new first name of the contact.",
                    "x-ms-summary": "First name of contact"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The new last name of the contact.",
                    "x-ms-summary": "Last name of contact"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The new full name of the contact. This is the default name displayed in the web app when viewing contacts.",
                    "x-ms-summary": "Full name of contact"
                  },
                  "is_suppressed": {
                    "type": "boolean",
                    "description": "Determines whether conversations with this contact are suppressed, and therefore not pushed to the top of the message queue when received.",
                    "x-ms-summary": "Whether messages from this contact are suppressed"
                  },
                  "is_archived": {
                    "type": "boolean",
                    "description": "Determines whether conversations with this contact are archived, and therefore cannot be seen when querying conversations (by default).",
                    "x-ms-summary": "Whether messages from this contact are archived"
                  },
                  "is_blocked": {
                    "type": "boolean",
                    "description": "Determines whether conversations with this contact are blocked, and therefore not received or stored.",
                    "x-ms-summary": "Whether messages from this contact are blocked"
                  },
                  "suppressed_reason": {
                    "type": "string",
                    "description": "Phrase describing the reason for suppressing contact.",
                    "x-ms-summary": "Reason for suppressing this contact"
                  },
                  "note": {
                    "type": "string",
                    "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact.",
                    "x-ms-summary": "Contact note"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Array of integer ids referring to groups this contact will belong to.",
                    "x-ms-summary": "Contact groups"
                  },
                  "contact_tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of guids referring to tags attached to this contact.",
                    "x-ms-summary": "Contact tags"
                  },
                  "custom_fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Guid referring to a custom field.",
                          "x-ms-summary": "Custom field id"
                        },
                        "value": {
                          "type": "string",
                          "description": "This contact's value for this custom field.",
                          "x-ms-summary": "Custom field value"
                        }
                      }
                    },
                    "description": "Array of custom field ids and values defined for this contact.",
                    "x-ms-summary": "Contact Custom Fields"
                  },
                  "is_resolved": {
                    "type": "boolean",
                    "description": "Determines whether the current conversation with this contact is resolved. Any new texts received by this contact will set this false.",
                    "x-ms-summary": "Whether the current conversation with this contact has been resolved"
                  }
                },
                "default": {
                  "phone_number": "321-654-7890",
                  "first_name": "John",
                  "last_name": "Smith",
                  "display_name": "John Smith",
                  "is_resolved": false
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "description": "Phone number of this contact."
                  },
                  "first_name": {
                    "type": "string",
                    "description": "First name of this contact."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Last name of this contact."
                  },
                  "display_name": {
                    "type": "string",
                    "description": "Full name of this contact. This is the default name displayed in the web app when viewing contacts."
                  },
                  "is_suppressed": {
                    "type": "boolean",
                    "description": "Whether the conversation with this contact are suppressed, and therefore not pushed to the top of the message queue when received."
                  },
                  "is_archived": {
                    "type": "boolean",
                    "description": "Whether the conversation with this contact are archived, and therefore cannot be seen when querying conversations (by default)."
                  },
                  "is_blocked": {
                    "type": "boolean",
                    "description": "Whether the conversation with this contact are blocked, and therefore not received or stored."
                  },
                  "suppressed_reason": {
                    "type": "string",
                    "description": "Phrase describing the reason for suppressing contact. If is_suppressed is false, this will be null."
                  },
                  "note": {
                    "type": "string",
                    "description": "Short phrase describing contact. Used for convenience. This is never shown to the contact."
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Array of integer ids referring to groups this contact belongs to."
                  },
                  "contact_tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of guids referring to tags attached to this contact."
                  },
                  "custom_fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Guid referring to a custom field."
                        },
                        "value": {
                          "type": "string",
                          "description": "This contact's value for this custom field."
                        }
                      }
                    },
                    "description": "Array of custom field ids and values defined for this contact."
                  },
                  "is_resolved": {
                    "type": "boolean",
                    "description": "Whether the conversation with this contact is resolved. Any new texts received by this contact will set this false."
                  },
                  "first_contact_utc": {
                    "type": "string",
                    "description": "Timestamp of when the first message was sent to this contact."
                  },
                  "opted_out_utc": {
                    "type": "string",
                    "description": "Timestamp of when this contact opted out to receiving messages."
                  },
                  "last_msg_sent_utc": {
                    "type": "string",
                    "description": "Timestamp of when the last message was sent to this contact."
                  },
                  "last_msg_received_utc": {
                    "type": "string",
                    "description": "Timestamp of when the last message was received from this contact."
                  },
                  "total_msgs_sent": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of total messages sent to this contact."
                  },
                  "total_msgs_received": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of total messages received from this contact."
                  },
                  "response_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of response messages from the contact."
                  },
                  "date_created_utc": {
                    "type": "string",
                    "description": "Timestamp of when ths contact was created."
                  },
                  "last_contact_date_utc": {
                    "type": "string",
                    "description": "Timestamp of when the last message was sent or received from this contact."
                  },
                  "last_message": {
                    "type": "object",
                    "properties": {
                      "message_id": {
                        "type": "string",
                        "description": "Id of the message. This value is unique for each message."
                      },
                      "body": {
                        "type": "string",
                        "description": "Content of this message."
                      },
                      "message_direction": {
                        "type": "string",
                        "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                      },
                      "response_by_username": {
                        "type": "string",
                        "description": "Username of the Text Request user that last sent a message to this user."
                      },
                      "message_timestamp_utc": {
                        "type": "string",
                        "description": "Timestamp of when the message was sent or received by Text Request."
                      },
                      "delivery_status": {
                        "type": "string",
                        "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                      },
                      "delivery_error": {
                        "type": "string",
                        "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                      },
                      "mms_media": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                      }
                    },
                    "description": "Last message sent to or from this contact."
                  }
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/groups/{group_id}": {
      "get": {
        "summary": "Retrieves a group by its id",
        "description": "Retrieves the group with the specified id.",
        "operationId": "GetGroupById",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "group_id",
            "default": 40472,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the group to get.",
            "x-ms-summary": "Id of the group"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the group."
                },
                "group_member_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of members of the group."
                },
                "is_keyword": {
                  "type": "boolean",
                  "description": "Wheter this group is a keyword group. Such groups are autogenerated when a user sets up a keyword. Contacts are automatically added when they enroll."
                },
                "name": {
                  "type": "string",
                  "description": "The name of this group."
                },
                "notes": {
                  "type": "string",
                  "description": "Any notes on this group."
                },
                "last_message_sent_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last group message was sent for this group."
                }
              }
            }
          },
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return."
          }
        }
      },
      "delete": {
        "summary": "Deletes the group with the specified id",
        "description": "Deletes the group with the specified id. This will succeed even if there are contacts that are members of the group (the contacts will not be deleted).",
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "group_id",
            "default": 40472,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the group to delete.",
            "x-ms-summary": "Id of the group"
          }
        ],
        "responses": {
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          },
          "404": {
            "description": "The return payload when the requested entity could not be found."
          }
        }
      },
      "put": {
        "summary": "Updates a group with the given id",
        "description": "Updates a group's name using the group's numerical id. If the passed in group id does not exist, the call will fail.",
        "operationId": "UpdateGroup",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "group_id",
            "default": 40472,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the group to update.",
            "x-ms-summary": "Id of the group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the group.",
                  "x-ms-summary": "Group name"
                },
                "notes": {
                  "type": "string",
                  "description": "Short phrase describing group. Used for convenience.",
                  "x-ms-summary": "Group note"
                }
              },
              "default": {
                "name": "Employees",
                "notes": "This list will hold all current employees."
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the group."
                },
                "group_member_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of members of the group."
                },
                "is_keyword": {
                  "type": "boolean",
                  "description": "Wheter this group is a keyword group. Such groups are autogenerated when a user sets up a keyword. Contacts are automatically added when they enroll."
                },
                "name": {
                  "type": "string",
                  "description": "The name of this group."
                },
                "notes": {
                  "type": "string",
                  "description": "Any notes on this group."
                },
                "last_message_sent_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last group message was sent for this group."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/groups": {
      "get": {
        "summary": "Retrieves all groups",
        "description": "Retrieves all groups for the user's account.",
        "operationId": "GetGroups",
        "parameters": [
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The numerical id of the group."
                      },
                      "group_member_count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of members of the group."
                      },
                      "is_keyword": {
                        "type": "boolean",
                        "description": "Wheter this group is a keyword group. Such groups are autogenerated when a user sets up a keyword. Contacts are automatically added when they enroll."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of this group."
                      },
                      "notes": {
                        "type": "string",
                        "description": "Any notes on this group."
                      },
                      "last_message_sent_utc": {
                        "type": "string",
                        "description": "The timestamp of when the last group message was sent for this group."
                      }
                    }
                  },
                  "description": "List of group entities gotten from Text Request."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new group",
        "description": "Creates a new group with the provided name.",
        "operationId": "CreateGroup",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the group.",
                  "x-ms-summary": "Group name"
                },
                "notes": {
                  "type": "string",
                  "description": "Short phrase describing group. Used for convenience.",
                  "x-ms-summary": "Group note"
                }
              },
              "default": {
                "name": "Employees",
                "notes": "This list will hold all current employees."
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the group."
                },
                "group_member_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of members of the group."
                },
                "is_keyword": {
                  "type": "boolean",
                  "description": "Wheter this group is a keyword group. Such groups are autogenerated when a user sets up a keyword. Contacts are automatically added when they enroll."
                },
                "name": {
                  "type": "string",
                  "description": "The name of this group."
                },
                "notes": {
                  "type": "string",
                  "description": "Any notes on this group."
                },
                "last_message_sent_utc": {
                  "type": "string",
                  "description": "Timestamp of when the last group message was sent for this group."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/tags": {
      "get": {
        "summary": "Retrieves all tags",
        "description": "Retrieves all the tags for this dashboard. Tags are unique between dashboards.",
        "operationId": "GetTags",
        "parameters": [
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The numerical id of the tag."
                      },
                      "tag_color": {
                        "type": "string",
                        "description": "The color of the tag. This should be a valid hexadecimal color code."
                      },
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag."
                      }
                    }
                  },
                  "description": "List of tag entities gotten from Text Request."
                }
              }
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/fields": {
      "get": {
        "summary": "Retrieves all custom fields",
        "description": "Retrieves all custom fields for this dashboard. Custom fields are unique between dashboards.",
        "operationId": "GetCustomFields",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The numerical id of the field."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the custom field."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/payments/{payment_id}": {
      "get": {
        "summary": "Retrieves the payment with the specified id",
        "description": "Retrieves the payment with the specified id.",
        "operationId": "GetPayment",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "payment_id",
            "default": 2510,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the payment to get.",
            "x-ms-summary": "Id of the payment"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the payment."
                },
                "request_date": {
                  "type": "string",
                  "description": "The timestamp of when this payment's initial message was queued to be sent."
                },
                "recipient": {
                  "type": "string",
                  "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                },
                "customer_phone": {
                  "type": "string",
                  "description": "The phone number of the contact who is being sent this payment."
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment."
                },
                "is_past_due": {
                  "type": "boolean",
                  "description": "Whether this payment is past the request date."
                },
                "reminder_was_sent": {
                  "type": "boolean",
                  "description": "Whether a text reminder has already been sent for this payment."
                },
                "transaction_status": {
                  "type": "string",
                  "description": "The status of the transaction in authvia. This value starts as Unknown."
                },
                "textrequest_payment_status": {
                  "type": "string",
                  "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                },
                "reference_number": {
                  "type": "string",
                  "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                }
              }
            }
          },
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return."
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/payments/{payment_id}/mark_as_paid": {
      "post": {
        "summary": "Mark a payment as paid",
        "description": "Closes a payment as \"paid\". Use this endpoint for when the payment is paid through a means other than the payment request portal. This will close the payment and add its payment amount to your statistics. This endpoint is not required for payments paid through the payments-portal sent through Text Request; that will automatically mark a payment as paid.",
        "operationId": "MarkPaymentPaid",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "payment_id",
            "default": 2510,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the payment to update.",
            "x-ms-summary": "Id of the payment"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the payment."
                },
                "request_date": {
                  "type": "string",
                  "description": "The timestamp of when this payment's initial message was queued to be sent."
                },
                "recipient": {
                  "type": "string",
                  "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                },
                "customer_phone": {
                  "type": "string",
                  "description": "The phone number of the contact who is being sent this payment."
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment."
                },
                "is_past_due": {
                  "type": "boolean",
                  "description": "Whether this payment is past the request date."
                },
                "reminder_was_sent": {
                  "type": "boolean",
                  "description": "Whether a text reminder has already been sent for this payment."
                },
                "transaction_status": {
                  "type": "string",
                  "description": "The status of the transaction in authvia. This value starts as Unknown."
                },
                "textrequest_payment_status": {
                  "type": "string",
                  "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                },
                "reference_number": {
                  "type": "string",
                  "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/payments/{payment_id}/resend": {
      "post": {
        "summary": "Send a follow-up text reminding the user to pay the specified payment",
        "description": "Sends a reminder to the contact to pay the specified payment. The content of the message is auto-generated. To avoid spam, only one reminder can be sent per payment",
        "operationId": "SendPaymentReminder",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "payment_id",
            "default": 2510,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the payment to update.",
            "x-ms-summary": "Id of the payment"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the payment."
                },
                "request_date": {
                  "type": "string",
                  "description": "The timestamp of when this payment's initial message was queued to be sent."
                },
                "recipient": {
                  "type": "string",
                  "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                },
                "customer_phone": {
                  "type": "string",
                  "description": "The phone number of the contact who is being sent this payment."
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment."
                },
                "is_past_due": {
                  "type": "boolean",
                  "description": "Whether this payment is past the request date."
                },
                "reminder_was_sent": {
                  "type": "boolean",
                  "description": "Whether a text reminder has already been sent for this payment."
                },
                "transaction_status": {
                  "type": "string",
                  "description": "The status of the transaction in authvia. This value starts as Unknown."
                },
                "textrequest_payment_status": {
                  "type": "string",
                  "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                },
                "reference_number": {
                  "type": "string",
                  "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/payments/{payment_id}/cancel": {
      "post": {
        "summary": "Cancels the specified payment",
        "description": "Cancels the specified payment, texting the user that the payment has been canceled. Payments cannot be edited, so canceling and issuing a new payment is the best way to correct a payment.",
        "operationId": "CancelPayment",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "payment_id",
            "default": 2510,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The numerical id of the payment to update.",
            "x-ms-summary": "Id of the payment"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the payment."
                },
                "request_date": {
                  "type": "string",
                  "description": "The timestamp of when this payment's initial message was queued to be sent."
                },
                "recipient": {
                  "type": "string",
                  "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                },
                "customer_phone": {
                  "type": "string",
                  "description": "The phone number of the contact who is being sent this payment."
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment."
                },
                "is_past_due": {
                  "type": "boolean",
                  "description": "Whether this payment is past the request date."
                },
                "reminder_was_sent": {
                  "type": "boolean",
                  "description": "Whether a text reminder has already been sent for this payment."
                },
                "transaction_status": {
                  "type": "string",
                  "description": "The status of the transaction in authvia. This value starts as Unknown."
                },
                "textrequest_payment_status": {
                  "type": "string",
                  "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                },
                "reference_number": {
                  "type": "string",
                  "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/payments": {
      "get": {
        "summary": "Retrieves all payments",
        "description": "Retrieves all payments, including canceled and paid payments. These can be filtered using the query parameters.",
        "operationId": "GetPayments",
        "parameters": [
          {
            "name": "reference_number",
            "default": "receipt-chicago",
            "in": "query",
            "type": "string",
            "description": "User-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference.",
            "x-ms-summary": "Reference string of the payment"
          },
          {
            "name": "phone_number",
            "default": "anim nostrud",
            "in": "query",
            "type": "string",
            "description": "Phone number of the contact this payment was sent to.",
            "x-ms-summary": "Payment phone number"
          },
          {
            "name": "sort_type",
            "default": "date",
            "in": "query",
            "type": "string",
            "description": "Property to sort payments by. Can be \"amount\", \"contact\", \"date\", \"status\".",
            "x-ms-summary": "Sort-by"
          },
          {
            "name": "sort_direction",
            "default": "desc",
            "in": "query",
            "type": "string",
            "description": "Direction to sort payments in. Can be \"desc\" for greatest to smallest, or \"asc\" for smallest to greatest.",
            "x-ms-summary": "Sort direction"
          },
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payment_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The numerical id of the payment."
                      },
                      "request_date": {
                        "type": "string",
                        "description": "The timestamp of when this payment's initial message was queued to be sent."
                      },
                      "recipient": {
                        "type": "string",
                        "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                      },
                      "customer_phone": {
                        "type": "string",
                        "description": "The phone number of the contact who is being sent this payment."
                      },
                      "amount_requested": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount in dollars requested by this payment."
                      },
                      "is_past_due": {
                        "type": "boolean",
                        "description": "Whether this payment is past the request date."
                      },
                      "reminder_was_sent": {
                        "type": "boolean",
                        "description": "Whether a text reminder has already been sent for this payment."
                      },
                      "transaction_status": {
                        "type": "string",
                        "description": "The status of the transaction in authvia. This value starts as Unknown."
                      },
                      "textrequest_payment_status": {
                        "type": "string",
                        "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                      },
                      "reference_number": {
                        "type": "string",
                        "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                      }
                    }
                  },
                  "description": "List of payment entities gotten from Text Request."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      },
      "post": {
        "summary": "Creates a new payment",
        "description": "Creates a new payment with the provided message to the provided contact.",
        "operationId": "CreatePayment",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Description of the payment. Description is not shown to the contact and is only used by internal users for context about payments.",
                  "x-ms-summary": "Payment description"
                },
                "customer_phone": {
                  "type": "string",
                  "description": "Phone number of the contact this payment will be sent to.",
                  "x-ms-summary": "Recipient phone number"
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment. ",
                  "x-ms-summary": "Amount requested in dollars"
                },
                "message": {
                  "type": "string",
                  "description": "Message text to send to contact along with payment link.",
                  "x-ms-summary": "Payment message text body"
                },
                "reference_number": {
                  "type": "string",
                  "description": "User-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference.",
                  "x-ms-summary": "Reference string of the payment"
                }
              },
              "default": {
                "description": "Housecall for plumbing services",
                "customer_phone": "321-654-7890",
                "amount_requested": 220.5,
                "message": "Thank you for choosing Generic Plumbing! Please click the link below to pay the balance for today's appointment.",
                "reference_number": "receipt-chicago"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the payment."
                },
                "request_date": {
                  "type": "string",
                  "description": "The timestamp of when this payment's initial message was queued to be sent."
                },
                "recipient": {
                  "type": "string",
                  "description": "The name of the payment recipient. This may be null if the contact does not have a name associated with their phone number."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the payment. This is not shown to the contact. It is only used by internal users for context about payments."
                },
                "customer_phone": {
                  "type": "string",
                  "description": "The phone number of the contact who is being sent this payment."
                },
                "amount_requested": {
                  "type": "number",
                  "format": "float",
                  "description": "The amount in dollars requested by this payment."
                },
                "is_past_due": {
                  "type": "boolean",
                  "description": "Whether this payment is past the request date."
                },
                "reminder_was_sent": {
                  "type": "boolean",
                  "description": "Whether a text reminder has already been sent for this payment."
                },
                "transaction_status": {
                  "type": "string",
                  "description": "The status of the transaction in authvia. This value starts as Unknown."
                },
                "textrequest_payment_status": {
                  "type": "string",
                  "description": "The status of the transaction in Text Request. This represents that status shown in the payments page on the Text Request app. It starts as Sent."
                },
                "reference_number": {
                  "type": "string",
                  "description": "The user-defined id defined when payments are created that can be used to quickly find payments. Reference numbers are not unique; many payments can have the same reference."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    },
    "/dashboards/{dashboard_id}": {
      "get": {
        "summary": "Get info on this specific dashboard",
        "description": "Returns the name and phone of the dashboard.",
        "operationId": "GetDashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the dashboard."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard."
                },
                "phone": {
                  "type": "string",
                  "description": "The texting number associated with this dashboard."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified dashboard",
        "description": "Deletes the specified dashboard.",
        "operationId": "DeleteDashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          },
          "404": {
            "description": "The return payload when the requested entity could not be found."
          }
        }
      },
      "put": {
        "summary": "Update a specific dashboard's name",
        "description": "Updates a dashboard. This does not change a dashboard's phone number. If you want a new number with another dashboard's contacts, you will have to create a new dashboard with a POST and add the contacts with a bulk export/import.",
        "operationId": "UpdateDashboardsName",
        "parameters": [
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the dashboard.",
                  "x-ms-summary": "Dashboard name"
                }
              },
              "default": {
                "name": "John Doe's Line"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the dashboard."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard."
                },
                "phone": {
                  "type": "string",
                  "description": "The texting number associated with this dashboard."
                }
              }
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/conversations": {
      "get": {
        "summary": "Retrieves all conversations for this dashboard",
        "description": "Retrieves all conversations for this dashboard, and includes info on the last message for each conversation.",
        "operationId": "GetConversations",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "type": "string",
            "description": "Comma-separated list of guids referring to tags to filter conversations by.",
            "x-ms-summary": "Contact Tags"
          },
          {
            "name": "show_unresolved_only",
            "default": "true",
            "in": "query",
            "type": "string",
            "description": "Whether to only search for contacts whose conversations have been resolved. If this is false, both resolved and unresolved conversations will be shown.",
            "x-ms-summary": "Whether to show only resolved conversations"
          },
          {
            "name": "include_archived",
            "default": "true",
            "in": "query",
            "type": "string",
            "description": "Whether to include conversations with contacts that have been archived.",
            "x-ms-summary": "Whether to include archived conversations"
          },
          {
            "name": "search",
            "default": "321-654-7890",
            "in": "query",
            "type": "string",
            "description": "Search term for filtering conversations by phone number or display name. If the search term is less than a full name or phone number, the search will return all conversations that partially match it.",
            "x-ms-summary": "Term to filter by for phone numbers and contact name"
          },
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          },
          {
            "name": "dashboard_id",
            "default": 121,
            "in": "path",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "The phone number dashboard to work on. A single account can have several dashboards, representing different phone lines for customers.",
            "x-ms-summary": "Id of the dashboard to make this call on"
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "phone_number": {
                        "type": "string",
                        "description": "The contact's phone number."
                      },
                      "last_message": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "description": "Id of the message. This value is unique for each message."
                          },
                          "body": {
                            "type": "string",
                            "description": "Content of this message."
                          },
                          "message_direction": {
                            "type": "string",
                            "description": "Singular character, either R or S, denoting whether this message was received from the contact or sent to them, respectively."
                          },
                          "response_by_username": {
                            "type": "string",
                            "description": "Username of the Text Request user that last sent a message to this user."
                          },
                          "message_timestamp_utc": {
                            "type": "string",
                            "description": "Timestamp of when the message was sent or received by Text Request."
                          },
                          "delivery_status": {
                            "type": "string",
                            "description": "Current status of this message. This can be 'sending', 'delivered', 'error', or 'send'."
                          },
                          "delivery_error": {
                            "type": "string",
                            "description": "Error that caused this message to not be delivered. If the delivery_status is not 'error', this value will be null."
                          },
                          "mms_media": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of urls pointing to this message's attachments. All urls will be text-request generated urls."
                          }
                        },
                        "description": "Last message sent to or from this contact."
                      }
                    }
                  },
                  "description": "List of conversation entities gotten from Text Request."
                }
              }
            }
          },
          "204": {
            "description": "The return payload when the request succeeds, but found no content to return."
          }
        }
      }
    },
    "/dashboards": {
      "get": {
        "summary": "Get all dashboards in an account",
        "description": "Returns all dashboards in an account.",
        "operationId": "GetDashboards",
        "parameters": [
          {
            "name": "page",
            "default": 0,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Number page to get",
            "description": "The page of entities to get. When getting values, there is a max size per page, defined by page_size. If page is greater than the last page, an empty array will be returned."
          },
          {
            "name": "page_size",
            "default": 50,
            "in": "query",
            "type": "integer",
            "required": true,
            "x-ms-summary": "Amount of each entity to get per page",
            "description": "The size of each page to get. When getting values, this is a max size per page, with accessing subsequent pages done by the page parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The page of entities gotten. The amount of entities in this page is defined by page_size."
                    },
                    "page_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities gotten in this page."
                    },
                    "total_items": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of entities available in the database, regardless of the page size or number. To see the other pages, change the page number in the request."
                    }
                  },
                  "description": "Metadata about the data returned by this request. This data is returned by all bulk GET requests."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The numerical id of the dashboard."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the dashboard."
                      },
                      "phone": {
                        "type": "string",
                        "description": "The texting number associated with this dashboard."
                      }
                    }
                  },
                  "description": "List of dashboard entities gotten from Text Request."
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new dashboard with the given name and phone number",
        "description": "Creates a new dashboard in the account. Once the dashboard is created, admins will be emailed about the change and can begin assigning users. This endpoint can make a dashboard for any provisioned numbers. You can search for provisioned numbers in a specific area code using GET /dashboards/provisioning. If the phone number is already in use, a Bad Request exception will be thrown.",
        "operationId": "CreateDashboard",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard."
                },
                "phone": {
                  "type": "string",
                  "description": "The texting number associated with this dashboard."
                }
              },
              "default": {
                "name": "John Doe's Line",
                "phone": "+1(555)-123-4567"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The return payload when the request succeeds without any errors.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The numerical id of the dashboard."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard."
                },
                "phone": {
                  "type": "string",
                  "description": "The texting number associated with this dashboard."
                }
              }
            }
          },
          "400": {
            "description": "The return payload when the request has bad, missing, or invalid data."
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "x-api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.textrequest.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.textrequest.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication;Sales and CRM"
    }
  ]
}