{
  "swagger": "2.0",
  "info": {
    "title": "Elead Sales Opportunities",
    "version": "1.0",
    "description": "Elead Sales Opportunities API searches for and retrieves existing sales opportunity information in the Elead CRM. Opportunity information includes details related to the sales team, source, vehicle of interest and vehicle trade information.This API includes the following capabilities and features for managing opportunity-related information.",
    "contact": {
      "name": "CDK Global",
      "url": "https://serviceconnect.support.cdk.com",
      "email": "mbd_support@cdk.com"
    }
  },
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://fortellis.io"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://fortellis.io/privacy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Data"
      }
  ],
  "host": "cdkapi.azure-api.net",
  "basePath": "/elead-sales-opportunities",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/search": {
      "get": {
        "description": "Retrieve sales opportunities by date range",
        "operationId": "Opportunities_Search",
        "summary": "Query sales opportunities by date range",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page Size"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339).",
            "type": "string",
            "x-ms-summary": "Date From"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339).",
            "type": "string",
            "x-ms-summary": "Date To"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SearchOpportunitiesResponse"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/searchDelta": {
      "get": {
        "description": "Retrieve sales opportunities by the provided date/time (within the past 7 days)",
        "operationId": "Opportunities_SearchDelta",
        "summary": "Query sales opportunities since the provided date and time",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page Size"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339).",
            "type": "string",
            "x-ms-summary": "Date From"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SearchDeltaOpportunitiesResponse"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sendEmail": {
      "post": {
        "description": "Sends an email and creates the corresponding activity",
        "operationId": "Opportunities_SendEmail",
        "summary": "Send an email and create the corresponding activity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "sendEmailRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SendEmailRequest"
            },
            "description": "Email request body",
            "x-ms-summary": "Send Email Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SendEmailResponse"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "description": "Creates a new opportunity",
        "operationId": "Opportunities_CreateOpportunity",
        "summary": "Create new opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "createOpportunityRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateOpportunityRequest"
            },
            "description": "Create Opportunity Request Body",
            "x-ms-summary": "Create Opportunity Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CreateOpportunityResponse"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/comment": {
      "post": {
        "description": "Adds a comment to the specified opportunity",
        "operationId": "Opportunities_AddComment",
        "summary": "Add comment to opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "addOpportunityCommentRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOpportunityCommentRequest"
            },
            "description": "Add opportunity comment request body",
            "x-ms-summary": "Add Opportunity Comment Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tradein": {
      "post": {
        "description": "Adds a trade-in to the specified opportunity",
        "operationId": "Opportunities_AddTradeIn",
        "summary": "Add trade-in to opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "addOpportunityTradeInRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOpportunityTradeInRequest"
            },
            "description": "Add opportunity tradeIn request body",
            "x-ms-summary": "Add Opportunity TradeIn Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OpportunityVehicleTradeIn"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tradein/{tradeInId}": {
      "delete": {
        "description": "Removes the specified trade-in from the opportunity",
        "operationId": "Opportunities_DeleteTradeIn",
        "summary": "Remove trade-in from opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "tradeInId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "TradeIn Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleSought": {
      "post": {
        "description": "Adds a vehicle sought to the specified opportunity",
        "operationId": "Opportunities_AddVehicleSought",
        "summary": "Add vehicle sought to opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "addOpportunityVehicleSoughtRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOpportunityVehicleSoughtRequest"
            },
            "description": "Add opportunity vehicle sought request body",
            "x-ms-summary": "Add Opportunity Vehicle Sought Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OpportunityVehicleSought"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleSought/{vehicleSoughtId}": {
      "delete": {
        "description": "Removes the specified vehicle sought from the opportunity",
        "operationId": "Opportunities_DeleteVehicleSought",
        "summary": "Remove vehicle sought from opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "vehicleSoughtId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Vehicle Sought Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/reassignPrimarySalesperson": {
      "post": {
        "description": "Reassigns the primary salesperson for the specified opportunity",
        "operationId": "Opportunities_ReassignPrimarySalesPerson",
        "summary": "Reassign the primary salesperson for the specified opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "reassignPrimarySalesPersonRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReassignPrimarySalesPersonRequest"
            },
            "description": "reassign primary sales person request body",
            "x-ms-summary": "Reassign Primary Sales Person Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/reassignPrimaryBdcAgent": {
      "post": {
        "description": "Reassigns the primary bdc agent for the specified opportunity",
        "operationId": "Opportunities_ReassignPrimaryBDCAgent",
        "summary": "Reassign the primary bdc agent for the specified opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "reassignPrimaryBDCAgentRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReassignPrimaryBDCAgentRequest"
            },
            "description": "reassign primary BDC agent request body",
            "x-ms-summary": "Reassign Primary BDC Agent Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{opportunityId}/salesteam/add": {
      "post": {
        "description": "Adds a salesperson to the specified opportunity",
        "operationId": "Opportunities_AddSalesperson",
        "summary": "Add salesperson to opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "salesperson",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Salesperson"
            },
            "description": "sales person body",
            "x-ms-summary": "Sales Person"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Salesperson"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{opportunityId}/salesteam/remove": {
      "post": {
        "description": "Removes a salesperson from the specified opportunity",
        "operationId": "Opportunities_RemoveSalesperson",
        "summary": "Remove salesperson from opportunity",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "removeOpportunitySalespersonRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemoveOpportunitySalespersonRequest"
            },
            "description": "remove opportunity sales person request body",
            "x-ms-summary": "Remove Opportunity Sales Person Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "204 - No Content",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "405 - Method Not Allowed",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActivityMessage": {
      "type": "object",
      "properties": {
        "from": {
          "description": "Sender's Email address",
          "type": "string"
        },
        "recipients": {
          "description": "A collection of recipient email addresses",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "carbonCopies": {
          "description": "A collection of carbon copy email addresses",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "description": "Subject of the email",
          "type": "string"
        },
        "body": {
          "description": "Body of the email",
          "type": "string"
        },
        "isHtml": {
          "description": "Is the body in HTML format?",
          "type": "boolean"
        }
      },
      "required": [
        "from",
        "recipients",
        "subject",
        "body",
        "isHtml"
      ],
      "example": {
        "from": "first.last@email.com",
        "recipients": [
          "first.person@email.com",
          "next.person@email.com"
        ],
        "carbonCopies": [
          "first.ccperson@email.com"
        ],
        "subject": "Example Email Subject",
        "body": "<h1>Headline</h1><p>Example email body</p>",
        "isHtml": true
      }
    },
    "LinkDescriptionObject": {
      "type": "object",
      "properties": {
        "href": {
          "description": "The target URI",
          "type": "string"
        },
        "rel": {
          "description": "The link relation type",
          "type": "string",
          "example": "create"
        },
        "method": {
          "description": "The HTTP verb that MUST be used to make a request to the target of the link",
          "type": "string",
          "example": "POST"
        },
        "title": {
          "description": "The title that describes the object",
          "type": "string",
          "example": "Create Opportunity"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "title"
      ],
      "example": {
        "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
        "rel": "self",
        "method": "GET",
        "title": "Get Customer"
      }
    },
    "SearchOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of opportunities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opportunity"
          }
        },
        "totalItems": {
          "description": "Total number of opportunities for the given query",
          "format": "int32",
          "type": "integer",
          "example": 80
        },
        "totalPages": {
          "description": "Total number of pages of opportunities for the given query",
          "format": "int32",
          "type": "integer",
          "example": 8
        },
        "pageNumber": {
          "description": "Current page number for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 1
        },
        "pageSize": {
          "description": "Page size for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 10
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "totalItems",
        "totalPages",
        "pageNumber",
        "pageSize",
        "links"
      ],
      "example": {
        "items": [
          {
            "id": "5030b3a4-214e-4b72-a64a-f958e31cf219",
            "customer": {
              "id": "89b07974-eb5b-441e-a7f8-d364a81430bc",
              "links": [
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                  "rel": "self",
                  "method": "GET",
                  "title": "Get Customer"
                },
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers",
                  "rel": "create",
                  "method": "POST",
                  "title": "Create Customer"
                },
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                  "rel": "update",
                  "method": "POST",
                  "title": "Update Customer"
                }
              ]
            },
            "dateIn": "2020-05-04T10:39:51.402Z",
            "source": "Source 1",
            "subSource": "SubSource 1",
            "status": "Status 1",
            "subStatus": "SubStatus 1",
            "upType": "Internet",
            "soughtVehicles": [
              {
                "id": "1f3ac8de-c5ce-4b9b-82a2-103df242c32f",
                "isNew": true,
                "yearFrom": 2019,
                "yearTo": 2021,
                "make": "Make 1",
                "model": "Model 1",
                "trim": "Trim 1",
                "vin": "1GJGG25U441140658",
                "priceFrom": 20000,
                "priceTo": 30000,
                "maxMileage": 1000,
                "stockNumber": "12345",
                "isPrimary": true
              }
            ],
            "tradeIns": [
              {
                "id": "4cd68c09-eeca-4fb2-a775-baee1b8dfab9",
                "year": 2015,
                "make": "Make 1",
                "model": "Model 1",
                "trim": "Trim 1",
                "vin": "4A32B2FF0CE049620",
                "estimatedMileage": 100000,
                "interiorColor": "Color 1",
                "exteriorColor": "Color 2"
              }
            ],
            "salesTeam": [
              {
                "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
                "firstName": "Zack",
                "lastName": "Morris",
                "isPrimary": true,
                "isPositionPrimary": true,
                "positionName": "Position 1",
                "positionCode": "PositionCode1"
              },
              {
                "id": "af9c3298-3401-46c8-9ac5-212a34285321",
                "firstName": "Kelly",
                "lastName": "Kapowski",
                "isPrimary": false,
                "isPositionPrimary": true,
                "positionName": "Position 2",
                "positionCode": "PositionCode2"
              }
            ]
          }
        ],
        "totalItems": 50,
        "totalPages": 5,
        "pageNumber": 2,
        "pageSize": 10,
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/search?page=1&pageSize=10&dateFrom=2020-05-01&dateTo=2020-05-05",
            "rel": "first",
            "method": "GET",
            "title": "first page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/search?page=5&pageSize=10&dateFrom=2020-05-01&dateTo=2020-05-05",
            "rel": "last",
            "method": "GET",
            "title": "last page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/search?page=3&pageSize=10&dateFrom=2020-05-01&dateTo=2020-05-05",
            "rel": "next",
            "method": "GET",
            "title": "next page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/search?page=1&pageSize=10&dateFrom=2020-05-01&dateTo=2020-05-05",
            "rel": "prev",
            "method": "GET",
            "title": "previous page"
          }
        ]
      }
    },
    "SearchDeltaOpportunitiesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of opportunities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opportunity"
          }
        },
        "totalItems": {
          "description": "Total number of opportunities for the given query",
          "format": "int32",
          "type": "integer",
          "example": 80
        },
        "totalPages": {
          "description": "Total number of pages of opportunities for the given query",
          "format": "int32",
          "type": "integer",
          "example": 8
        },
        "pageNumber": {
          "description": "Current page number for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 1
        },
        "pageSize": {
          "description": "Page size for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 10
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "totalItems",
        "totalPages",
        "pageNumber",
        "pageSize",
        "links"
      ],
      "example": {
        "items": [
          {
            "id": "5030b3a4-214e-4b72-a64a-f958e31cf219",
            "customer": {
              "id": "89b07974-eb5b-441e-a7f8-d364a81430bc",
              "links": [
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                  "rel": "self",
                  "method": "GET",
                  "title": "Get Customer"
                },
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers",
                  "rel": "create",
                  "method": "POST",
                  "title": "Create Customer"
                },
                {
                  "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                  "rel": "update",
                  "method": "POST",
                  "title": "Update Customer"
                }
              ]
            },
            "dateIn": "2020-05-04T10:39:51.402Z",
            "source": "Source 1",
            "subSource": "SubSource 1",
            "status": "Status 1",
            "subStatus": "SubStatus 1",
            "upType": "Internet",
            "soughtVehicles": [
              {
                "id": "1f3ac8de-c5ce-4b9b-82a2-103df242c32f",
                "isNew": true,
                "yearFrom": 2019,
                "yearTo": 2021,
                "make": "Make 1",
                "model": "Model 1",
                "trim": "Trim 1",
                "vin": "1GJGG25U441140658",
                "priceFrom": 20000,
                "priceTo": 30000,
                "maxMileage": 1000,
                "stockNumber": "12345",
                "isPrimary": true
              }
            ],
            "tradeIns": [
              {
                "id": "4cd68c09-eeca-4fb2-a775-baee1b8dfab9",
                "year": 2015,
                "make": "Make 1",
                "model": "Model 1",
                "trim": "Trim 1",
                "vin": "4A32B2FF0CE049620",
                "estimatedMileage": 100000,
                "interiorColor": "Color 1",
                "exteriorColor": "Color 2"
              }
            ],
            "salesTeam": [
              {
                "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
                "firstName": "Zack",
                "lastName": "Morris",
                "isPrimary": true,
                "isPositionPrimary": true,
                "positionName": "Position 1",
                "positionCode": "PositionCode1"
              },
              {
                "id": "af9c3298-3401-46c8-9ac5-212a34285321",
                "firstName": "Kelly",
                "lastName": "Kapowski",
                "isPrimary": false,
                "isPositionPrimary": true,
                "positionName": "Position 2",
                "positionCode": "PositionCode2"
              }
            ]
          }
        ],
        "totalItems": 50,
        "totalPages": 5,
        "pageNumber": 2,
        "pageSize": 10,
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/searchDelta?page=1&pageSize=10&dateFrom=2020-05-01",
            "rel": "first",
            "method": "GET",
            "title": "first page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/searchDelta?page=5&pageSize=10&dateFrom=2020-05-01",
            "rel": "last",
            "method": "GET",
            "title": "last page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/searchDelta?page=3&pageSize=10&dateFrom=2020-05-01",
            "rel": "next",
            "method": "GET",
            "title": "next page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/opportunities/searchDelta?page=1&pageSize=10&dateFrom=2020-05-01",
            "rel": "prev",
            "method": "GET",
            "title": "previous page"
          }
        ]
      }
    },
    "Opportunity": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this opportunity",
          "format": "uuid",
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/OpportunityCustomer"
        },
        "dateIn": {
          "description": "Date and time that the opportunity came in",
          "format": "date-time",
          "type": "string"
        },
        "source": {
          "description": "Source name for this opportunity",
          "type": "string"
        },
        "subSource": {
          "description": "Subsource name for this opportunity",
          "type": "string"
        },
        "status": {
          "description": "Current status of this opportunity",
          "type": "string"
        },
        "subStatus": {
          "description": "Substatus of this opportunity",
          "type": "string"
        },
        "upType": {
          "description": "Up type for this opportunity",
          "enum": [
            "Unknown",
            "Campaign",
            "Internet",
            "Phone",
            "Showroom"
          ],
          "type": "string"
        },
        "soughtVehicles": {
          "description": "A collection of vehicles sought for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunityVehicleSought"
          }
        },
        "tradeIns": {
          "description": "A collection of vehicle trade-ins for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunityVehicleTradeIn"
          }
        },
        "salesTeam": {
          "description": "A collection of sales team members and their positions for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunitySalesperson"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "id",
        "customer",
        "source",
        "status",
        "upType",
        "links"
      ],
      "example": {
        "id": "5030b3a4-214e-4b72-a64a-f958e31cf219",
        "customer": {
          "id": "89b07974-eb5b-441e-a7f8-d364a81430bc",
          "links": [
            {
              "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
              "rel": "self",
              "method": "GET",
              "title": "Get Customer"
            },
            {
              "href": "https://api.fortellis.io/sales/v1/elead/customers",
              "rel": "create",
              "method": "POST",
              "title": "Create Customer"
            },
            {
              "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
              "rel": "update",
              "method": "POST",
              "title": "Update Customer"
            }
          ]
        },
        "dateIn": "2020-05-04T10:39:51.402Z",
        "source": "Source 1",
        "subSource": "SubSource 1",
        "status": "Status 1",
        "subStatus": "SubStatus 1",
        "upType": "Internet",
        "soughtVehicles": [
          {
            "id": "1f3ac8de-c5ce-4b9b-82a2-103df242c32f",
            "isNew": true,
            "yearFrom": 2019,
            "yearTo": 2021,
            "make": "Make 1",
            "model": "Model 1",
            "trim": "Trim 1",
            "vin": "1GJGG25U441140658",
            "priceFrom": 20000,
            "priceTo": 30000,
            "maxMileage": 1000,
            "stockNumber": "12345",
            "isPrimary": true
          }
        ],
        "tradeIns": [
          {
            "id": "4cd68c09-eeca-4fb2-a775-baee1b8dfab9",
            "year": 2015,
            "make": "Make 1",
            "model": "Model 1",
            "trim": "Trim 1",
            "vin": "4A32B2FF0CE049620",
            "estimatedMileage": 100000,
            "interiorColor": "Color 1",
            "exteriorColor": "Color 2"
          }
        ],
        "salesTeam": [
          {
            "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
            "firstName": "Zack",
            "lastName": "Morris",
            "isPrimary": true,
            "isPositionPrimary": true,
            "positionName": "Position 1",
            "positionCode": "PositionCode1"
          },
          {
            "id": "af9c3298-3401-46c8-9ac5-212a34285321",
            "firstName": "Kelly",
            "lastName": "Kapowski",
            "isPrimary": false,
            "isPositionPrimary": true,
            "positionName": "Position 2",
            "positionCode": "PositionCode2"
          }
        ]
      }
    },
    "OpportunityCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this customer",
          "format": "uuid",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links for this customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "id",
        "links"
      ],
      "example": {
        "id": "89b07974-eb5b-441e-a7f8-d364a81430bc",
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
            "rel": "self",
            "method": "GET",
            "title": "Get Customer"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers",
            "rel": "create",
            "method": "POST",
            "title": "Create Customer"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
            "rel": "update",
            "method": "POST",
            "title": "Update Customer"
          }
        ]
      }
    },
    "OpportunityVehicleSought": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this vehicle sought",
          "format": "uuid",
          "type": "string"
        },
        "isNew": {
          "description": "true/false whether the vehicle sought is new",
          "type": "boolean"
        },
        "yearFrom": {
          "description": "Starting year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "yearTo": {
          "description": "Ending year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of the vehicle sought",
          "type": "string"
        },
        "model": {
          "description": "Model of the vehicle sought",
          "type": "string"
        },
        "trim": {
          "description": "Trim of the vehicle sought",
          "type": "string"
        },
        "vin": {
          "description": "VIN of the vehicle sought",
          "type": "string"
        },
        "priceFrom": {
          "description": "Starting price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "priceTo": {
          "description": "Ending price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "maxMileage": {
          "description": "Max mileage of the vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "stockNumber": {
          "description": "Stock number of the vehicle sought",
          "type": "string"
        },
        "isPrimary": {
          "description": "true/false whether this vehicle sought is the primary for the given opportunity",
          "type": "boolean"
        }
      },
      "example": {
        "id": "1f3ac8de-c5ce-4b9b-82a2-103df242c32f",
        "isNew": true,
        "yearFrom": 2019,
        "yearTo": 2021,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "1GJGG25U441140658",
        "priceFrom": 20000,
        "priceTo": 30000,
        "maxMileage": 1000,
        "stockNumber": "12345",
        "isPrimary": true
      }
    },
    "AddOpportunityVehicleTradeIn": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of this vehicle trade-in",
          "type": "string"
        },
        "model": {
          "description": "Model of this vehicle trade-in",
          "type": "string"
        },
        "trim": {
          "description": "Trim of this vehicle trade-in",
          "type": "string"
        },
        "vin": {
          "description": "VIN of this vehicle trade-in",
          "type": "string"
        },
        "estimatedMileage": {
          "description": "Estimated mileage of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "interiorColor": {
          "description": "Interior color of this vehicle trade-in",
          "type": "string"
        },
        "exteriorColor": {
          "description": "Exterior color of this vehicle trade-in",
          "type": "string"
        }
      },
      "example": {
        "year": 2015,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "4A32B2FF0CE049620",
        "estimatedMileage": 100000,
        "interiorColor": "Color 1",
        "exteriorColor": "Color 2"
      }
    },
    "OpportunityVehicleTradeIn": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this vehicle trade-in",
          "format": "uuid",
          "type": "string"
        },
        "year": {
          "description": "Year of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of this vehicle trade-in",
          "type": "string"
        },
        "model": {
          "description": "Model of this vehicle trade-in",
          "type": "string"
        },
        "trim": {
          "description": "Trim of this vehicle trade-in",
          "type": "string"
        },
        "vin": {
          "description": "VIN of this vehicle trade-in",
          "type": "string"
        },
        "estimatedMileage": {
          "description": "Estimated mileage of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "interiorColor": {
          "description": "Interior color of this vehicle trade-in",
          "type": "string"
        },
        "exteriorColor": {
          "description": "Exterior color of this vehicle trade-in",
          "type": "string"
        }
      },
      "example": {
        "id": "4cd68c09-eeca-4fb2-a775-baee1b8dfab9",
        "year": 2015,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "4A32B2FF0CE049620",
        "estimatedMileage": 100000,
        "interiorColor": "Color 1",
        "exteriorColor": "Color 2"
      }
    },
    "OpportunitySalesperson": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of this salesperson",
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "description": "First name of this salesperson",
          "type": "string"
        },
        "lastName": {
          "description": "Last name of this salesperson",
          "type": "string"
        },
        "isPrimary": {
          "description": "true/false whether this is the primary salesperson for the given opportunity",
          "type": "boolean"
        },
        "isPositionPrimary": {
          "description": "true/false whether this is the primary salesperson for this position on the given opportunity",
          "type": "boolean"
        },
        "positionName": {
          "description": "Position name for this salesperson on the given opportunity",
          "type": "string"
        },
        "positionCode": {
          "description": "Position code for this salesperson on the given opportunity",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links for this salesperson",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "isPrimary",
        "isPositionPrimary",
        "positionName",
        "positionCode"
      ],
      "example": {
        "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
        "firstName": "Zack",
        "lastName": "Morris",
        "isPrimary": true,
        "isPositionPrimary": true,
        "positionName": "Position 1",
        "positionCode": "PositionCode1"
      }
    },
    "Salesperson": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of this salesperson",
          "format": "uuid",
          "type": "string"
        },
        "isPrimary": {
          "description": "true/false whether this is the primary salesperson for the given opportunity",
          "type": "boolean"
        },
        "isPositionPrimary": {
          "description": "true/false whether this is the primary salesperson for this position on the given opportunity",
          "type": "boolean"
        },
        "positionCode": {
          "description": "Position code for this salesperson on the given opportunity",
          "type": "string"
        }
      },
      "required": [
        "id",
        "isPrimary",
        "isPositionPrimary",
        "positionCode"
      ],
      "example": {
        "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
        "isPrimary": true,
        "isPositionPrimary": true,
        "positionCode": "PositionCode1"
      }
    },
    "SendEmailRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "description": "Unique idenitifer of the opportunity",
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/ActivityMessage"
        }
      },
      "required": [
        "opportunityId",
        "message"
      ],
      "example": {
        "opportunityId": "ef1394cd-0f56-4a21-a15b-0cfe4c41989f",
        "message": {
          "from": "first.last@email.com",
          "recipients": [
            "first.person@email.com",
            "next.person@email.com"
          ],
          "carbonCopies": [
            "first.ccperson@email.com"
          ],
          "subject": "Example Email Subject",
          "body": "<h1>Headline</h1><p>Example email body</p>",
          "isHtml": true
        }
      }
    },
    "SendEmailResponse": {
      "type": "object",
      "properties": {
        "activityId": {
          "description": "Unique identifier of the activity",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "activityId"
      ],
      "example": {
        "activityId": "73211bbf-0046-41f9-9157-271489459f56"
      }
    },
    "CreateOpportunityRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Unique identifier of the customer",
          "format": "uuid",
          "type": "string"
        },
        "dateIn": {
          "description": "Date and time that the opportunity came in",
          "format": "date-time",
          "type": "string"
        },
        "source": {
          "description": "Source name for this opportunity",
          "type": "string"
        },
        "subSource": {
          "description": "Subsource name for this opportunity",
          "type": "string"
        },
        "status": {
          "description": "Current status of this opportunity",
          "type": "string"
        },
        "subStatus": {
          "description": "Substatus of this opportunity",
          "type": "string"
        },
        "upType": {
          "description": "Up type for this opportunity",
          "enum": [
            "Unknown",
            "Campaign",
            "Internet",
            "Phone",
            "Showroom"
          ],
          "type": "string"
        },
        "comments": {
          "type": "string",
          "maxLength": 1500
        },
        "soughtVehicles": {
          "description": "A collection of vehicles sought for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOpportunityVehicleSought"
          }
        },
        "tradeIns": {
          "description": "A collection of vehicle trade-ins for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOpportunityVehicleTradeIn"
          }
        },
        "salesSteps": {
          "description": "A collection of sales steps for this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesStep"
          }
        },
        "salesTeam": {
          "description": "A collection of sales team members and their positions associated with this opportunity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Salesperson"
          }
        }
      },
      "required": [
        "customerId",
        "source",
        "upType"
      ],
      "example": {
        "customerId": "89b07974-eb5b-441e-a7f8-d364a81430bc",
        "dateIn": "2020-05-04T10:39:51.402Z",
        "source": "Source 1",
        "subSource": "SubSource 1",
        "status": "Status 1",
        "subStatus": "SubStatus 1",
        "upType": "Internet",
        "soughtVehicles": {
          "isNew": true,
          "yearFrom": 2019,
          "yearTo": 2021,
          "make": "Make 1",
          "model": "Model 1",
          "trim": "Trim 1",
          "vin": "1GJGG25U441140658",
          "priceFrom": 20000,
          "priceTo": 30000,
          "maxMileage": 1000,
          "stockNumber": "12345",
          "isPrimary": true
        },
        "tradeIns": {
          "year": 2015,
          "make": "Make 1",
          "model": "Model 1",
          "trim": "Trim 1",
          "vin": "4A32B2FF0CE049620",
          "estimatedMileage": 100000,
          "interiorColor": "Color 1",
          "exteriorColor": "Color 2"
        }
      }
    },
    "CreateOpportunityResponse": {
      "type": "object",
      "properties": {
        "opportunity": {
          "$ref": "#/definitions/Opportunity"
        },
        "isDuplicate": {
          "description": "true/false whether the given opportunity was determined to be a duplicate",
          "type": "boolean"
        },
        "opportunityActivityId": {
          "description": "Unique identifier of the activity for the specified opportunity",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "opportunity",
        "isDuplicate",
        "opportunityActivityId"
      ],
      "example": {
        "opportunity": {
          "id": "5030b3a4-214e-4b72-a64a-f958e31cf219",
          "customer": {
            "id": "89b07974-eb5b-441e-a7f8-d364a81430bc",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                "rel": "self",
                "method": "GET",
                "title": "Get Customer"
              },
              {
                "href": "https://api.fortellis.io/sales/v1/elead/customers",
                "rel": "create",
                "method": "POST",
                "title": "Create Customer"
              },
              {
                "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
                "rel": "update",
                "method": "POST",
                "title": "Update Customer"
              }
            ]
          },
          "dateIn": "2020-05-04T10:39:51.402Z",
          "source": "Source 1",
          "subSource": "SubSource 1",
          "status": "Status 1",
          "subStatus": "SubStatus 1",
          "upType": "Internet",
          "soughtVehicles": [
            {
              "id": "1f3ac8de-c5ce-4b9b-82a2-103df242c32f",
              "isNew": true,
              "yearFrom": 2019,
              "yearTo": 2021,
              "make": "Make 1",
              "model": "Model 1",
              "trim": "Trim 1",
              "vin": "1GJGG25U441140658",
              "priceFrom": 20000,
              "priceTo": 30000,
              "maxMileage": 1000,
              "stockNumber": "12345",
              "isPrimary": true
            }
          ],
          "tradeIns": [
            {
              "id": "4cd68c09-eeca-4fb2-a775-baee1b8dfab9",
              "year": 2015,
              "make": "Make 1",
              "model": "Model 1",
              "trim": "Trim 1",
              "vin": "4A32B2FF0CE049620",
              "estimatedMileage": 100000,
              "interiorColor": "Color 1",
              "exteriorColor": "Color 2"
            }
          ],
          "salesTeam": [
            {
              "id": "f4aefbbe-de90-4f88-9f28-ba5a949c143f",
              "firstName": "Zack",
              "lastName": "Morris",
              "isPrimary": true,
              "isPositionPrimary": true,
              "positionName": "Position 1",
              "positionCode": "PositionCode1"
            },
            {
              "id": "af9c3298-3401-46c8-9ac5-212a34285321",
              "firstName": "Kelly",
              "lastName": "Kapowski",
              "isPrimary": false,
              "isPositionPrimary": true,
              "positionName": "Position 2",
              "positionCode": "PositionCode2"
            }
          ]
        },
        "isDuplicate": false,
        "opportunityActivityId": "9ecdf46c-c03a-4507-b6c2-06e795218a61"
      }
    },
    "SalesStep": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sales step",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "example": {
        "name": "Sales Step 1"
      }
    },
    "AddOpportunityCommentRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "description": "Unique identifier of the opportunity",
          "format": "uuid",
          "type": "string"
        },
        "comment": {
          "description": "Comments to be added to the specified opportunity",
          "type": "string",
          "maxLength": 1500
        }
      },
      "required": [
        "opportunityId",
        "comment"
      ],
      "example": {
        "opportunityId": "2a68b2d2-026e-4270-adc9-e89be02d6fa1",
        "comment": "Comments go here"
      }
    },
    "AddOpportunityTradeInRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "description": "Unique identifier for the opportunity",
          "format": "uuid",
          "type": "string"
        },
        "year": {
          "description": "Year of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of this vehicle trade-in",
          "type": "string"
        },
        "model": {
          "description": "Model of this vehicle trade-in",
          "type": "string"
        },
        "trim": {
          "description": "Trim of this vehicle trade-in",
          "type": "string"
        },
        "vin": {
          "description": "VIN of this vehicle trade-in",
          "type": "string"
        },
        "estimatedMileage": {
          "description": "Estimated mileage of this vehicle trade-in",
          "format": "int32",
          "type": "integer"
        },
        "interiorColor": {
          "description": "Interior color of this vehicle trade-in",
          "type": "string"
        },
        "exteriorColor": {
          "description": "Exterior color of this vehicle trade-in",
          "type": "string"
        }
      },
      "required": [
        "opportunityId"
      ],
      "example": {
        "opportunityId": "b980f525-803c-4339-a2bd-caf0896bf599",
        "year": 2015,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "4A32B2FF0CE049620",
        "estimatedMileage": 100000,
        "interiorColor": "Color 1",
        "exteriorColor": "Color 2"
      }
    },
    "AddOpportunityVehicleSought": {
      "type": "object",
      "properties": {
        "isNew": {
          "description": "true/false whether the vehicle sought is new",
          "type": "boolean"
        },
        "yearFrom": {
          "description": "Starting year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "yearTo": {
          "description": "Ending year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of the vehicle sought",
          "type": "string"
        },
        "model": {
          "description": "Model of the vehicle sought",
          "type": "string"
        },
        "trim": {
          "description": "Trim of the vehicle sought",
          "type": "string"
        },
        "vin": {
          "description": "VIN of the vehicle sought",
          "type": "string"
        },
        "priceFrom": {
          "description": "Starting price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "priceTo": {
          "description": "Ending price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "maxMileage": {
          "description": "Max mileage of the vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "stockNumber": {
          "description": "Stock number of the vehicle sought",
          "type": "string"
        },
        "isPrimary": {
          "description": "true/false whether this vehicle sought is the primary for the specified opportunity",
          "type": "boolean"
        }
      },
      "required": [
        "isNew",
        "isPrimary"
      ],
      "example": {
        "isNew": true,
        "yearFrom": 2019,
        "yearTo": 2021,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "1GJGG25U441140658",
        "priceFrom": 20000,
        "priceTo": 30000,
        "maxMileage": 1000,
        "stockNumber": "12345",
        "isPrimary": true
      }
    },
    "AddOpportunityVehicleSoughtRequest": {
      "type": "object",
      "properties": {
        "opportunityId": {
          "description": "Unique opportunity identifier",
          "format": "uuid",
          "type": "string"
        },
        "isNew": {
          "description": "true/false whether the vehicle sought is new",
          "type": "boolean"
        },
        "yearFrom": {
          "description": "Starting year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "yearTo": {
          "description": "Ending year range for this vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "make": {
          "description": "Make of the vehicle sought",
          "type": "string"
        },
        "model": {
          "description": "Model of the vehicle sought",
          "type": "string"
        },
        "trim": {
          "description": "Trim of the vehicle sought",
          "type": "string"
        },
        "vin": {
          "description": "VIN of the vehicle sought",
          "type": "string"
        },
        "priceFrom": {
          "description": "Starting price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "priceTo": {
          "description": "Ending price range of the vehicle sought",
          "format": "double",
          "type": "number"
        },
        "maxMileage": {
          "description": "Max mileage of the vehicle sought",
          "format": "int32",
          "type": "integer"
        },
        "stockNumber": {
          "description": "Stock number of the vehicle sought",
          "type": "string"
        },
        "isPrimary": {
          "description": "true/false whether this vehicle sought is the primary for the specified opportunity",
          "type": "boolean"
        }
      },
      "required": [
        "opportunityId",
        "isNew",
        "isPrimary"
      ],
      "example": {
        "opportunityId": "2c48803e-17bc-4dcd-a206-080bcb208b1c",
        "isNew": true,
        "yearFrom": 2019,
        "yearTo": 2021,
        "make": "Make 1",
        "model": "Model 1",
        "trim": "Trim 1",
        "vin": "1GJGG25U441140658",
        "priceFrom": 20000,
        "priceTo": 30000,
        "maxMileage": 1000,
        "stockNumber": "12345",
        "isPrimary": true
      }
    },
    "RemoveOpportunitySalespersonRequest": {
      "type": "object",
      "properties": {
        "salespersonId": {
          "description": "Unique identifier of the salesperson",
          "format": "uuid",
          "type": "string"
        },
        "positionCode": {
          "description": "Position code for this salesperson on the given opportunity",
          "type": "string"
        }
      },
      "required": [
        "salespersonId",
        "positionCode"
      ],
      "example": {
        "salespersonId": "17f690f7-3335-467d-b012-4297400da87a",
        "positionCode": "PositionCode1"
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code further identifying the error."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "link": {
          "type": "string",
          "description": "An optional link with further information about the error type."
        },
        "referenceId": {
          "type": "string",
          "format": "uuid",
          "description": "A reference identifier used for correlation puproses."
        }
      },
      "required": [
        "code",
        "message",
        "referenceId"
      ],
      "example": {
        "code": "ExampleErrorCode",
        "message": "Example of an error message.",
        "referenceId": "9e88d251-9b50-3dfb-00ef-00c5009b003d"
      }
    },
    "ReassignPrimarySalesPersonRequest": {
      "properties": {
        "opportunityId": {
          "description": "Unique identifier for the specific opportunity",
          "format": "uuid",
          "type": "string"
        },
        "salesPersonId": {
          "description": "Unique identifier for the newly-assigned primary salesperson",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "opportunityId",
        "salesPersonId"
      ],
      "example": {
        "opportunityId": "2c48803e-17bc-4dcd-a206-080bcb208b1c",
        "salesPersonId": "f4aefbbe-de90-4f88-9f28-ba5a949c143f"
      }
    },
    "ReassignPrimaryBDCAgentRequest": {
      "properties": {
        "opportunityId": {
          "description": "Unique identifier for the specific opportunity",
          "format": "uuid",
          "type": "string"
        },
        "primaryBDCAgentId": {
          "description": "Unique identifier for the newly-assigned primary bdc agent",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "opportunityId",
        "primaryBDCAgentId"
      ],
      "example": {
        "opportunityId": "2c48803e-17bc-4dcd-a206-080bcb208b1c",
        "primaryBDCAgentId": "f4aefbbe-de90-4f88-9f28-ba5a949c143f"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "tags": []
}

