{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Alkymi",
    "description": "Programmatic interface for the Alkymi Data Inbox",
    "contact": {
      "name": "Alkymi Support",
      "url": "https://www.alkymi.io/contact",
      "email": "tori@alkymi.io"
    }
  },
  "host": "www.example.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/datasets/": {
      "get": {
        "description": "Lists all of the datasets available on the tenant.\\nhttps://alkymi-api.readme.io/reference#get-dataset-list",
        "summary": "List All Datasets",
        "tags": [
          "datasets"
        ],
        "operationId": "datasets_list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedDatasetList"
            },
            "headers": {},
            "x-ms-summary": "Paginated Dataset List"
          }
        }
      }
    },
    "/api/v2/datasets/{uuid}/": {
      "get": {
        "description": "Retrieve a specific dataset instance. The returned dataset record may require additional parsing before using downstream in the workflow.\\nhttps://alkymi-api.readme.io/reference#get-dataset-list-1",
        "summary": "Get Dataset Information",
        "x-ms-summary": "Retrieve a specific dataset instance. The returned dataset record may require additional parsing before using downstream in the workflow.\\nhttps://alkymi-api.readme.io/reference#get-dataset-list-1",
        "tags": [
          "datasets"
        ],
        "operationId": "datasets_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Dataset UUID",
            "x-ms-summary": "Dataset UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedDatasetList"
            }
          }
        }
      }
    },
    "/api/v2/documents/": {
      "post": {
        "description": "Uploads a file to a Data Inbox tenant for processing.",
        "x-ms-summary": "Uploads a file to a Data Inbox tenant for processing.",
        "summary": "Upload Document File",
        "tags": [
          "documents"
        ],
        "operationId": "documents_create",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "removed",
            "in": "formData",
            "type": "boolean",
            "description": "removed",
            "x-ms-summary": "Removed Boolean"
          },
          {
            "name": "dataset",
            "in": "formData",
            "type": "string",
            "description": "This should usually be the dataset uuid for Inbox.",
            "x-ms-summary": "Dataset UUID"
          },
          {
            "name": "subject",
            "in": "formData",
            "type": "string",
            "description": "subject",
            "x-ms-summary": "Subject"
          },
          {
            "name": "sender",
            "in": "formData",
            "type": "string",
            "description": "sender",
            "x-ms-summary": "Sender"
          },
          {
            "name": "folder",
            "in": "formData",
            "type": "string",
            "description": "folder",
            "x-ms-summary": "Folder"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "File Name",
            "x-ms-summary": "File Name"
          },
          {
            "name": "targets",
            "in": "formData",
            "type": ["array", "null"],
            "items": {
              "type": "string"
            },
            "description": "targeted pattern names",
            "x-ms-dynamic-values": {
              "operationId": "pipelines_list",
              "value-collection": "results",
              "value-path": "name",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "pipelines_list",
              "itemsPath": "results",
              "itemValuePath": "name",
              "itemTitlePath": "name"
            },
            "x-ms-summary": "Targeted Patterns"
          }
        ],
        "responses": {
          "201": {
            "description": "No response body",
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Lists all of the documents available on the tenant.\\nhttps://alkymi-api.readme.io/reference#get-document-list",
        "summary": "List All Documents",
        "tags": [
          "documents"
        ],
        "operationId": "documents_list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List all documents",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "count"
                },
                "next": {
                  "type": "string",
                  "description": "next"
                },
                "previous": {
                  "type": "string",
                  "description": "previous"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/documents/{uuid}/": {
      "get": {
        "description": "Retrieve a specific document instance.\\nhttps://alkymi-api.readme.io/reference#get-document-detail",
        "summary": "Get Document Information",
        "tags": [
          "documents"
        ],
        "operationId": "documents_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Document uuid",
            "x-ms-summary": "Document UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Single Document Information",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        }
      }
    },
    "/api/v2/documents/{uuid}/download_original/": {
      "get": {
        "description": "Downloads a copy of the document file posted to Data Inbox in its original format.",
        "summary": "Get Document File (Original Format)",
        "tags": [
          "documents"
        ],
        "operationId": "documents_download_original_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Document UUID",
            "x-ms-summary": "Document UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The original document file",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    },
    "/api/v2/documents/{uuid}/download_pdf/": {
      "get": {
        "description": "Downloads a copy of the document file posted to Data Inbox in a converted PDF format.",
        "summary": "Get Document File (PDF Format)",
        "tags": [
          "documents"
        ],
        "operationId": "documents_download_pdf_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Document UUID",
            "x-ms-summary": "Document UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The document pdf file",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    },
    "/api/v2/executions/": {
      "get": {
        "description": "Lists all of the executions available on the tenant.\\nhttps://alkymi-api.readme.io/reference#get-execution-list-1",
        "summary": "List All Executions",
        "tags": [
          "executions"
        ],
        "operationId": "executions_list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "document_status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "completed",
                "error",
                "processing",
                "uploaded"
              ]
            },
            "description": "Document status",
            "x-ms-summary": "Document Status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedExecutionList"
            }
          }
        }
      }
    },
    "/api/v2/executions/{uuid}/": {
      "get": {
        "description": "Retrieve a specific execution instance.\\nhttps://alkymi-api.readme.io/reference#get-execution-list",
        "summary": "Get Execution Information",
        "tags": [
          "executions"
        ],
        "operationId": "executions_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Execution UUID",
            "x-ms-summary": "Execution UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Execution"
            }
          }
        }
      }
    },
    "/api/v2/pipelines/": {
      "get": {
        "description": "List all patterns on tenant",
        "summary": "List Patterns",
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines_list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "A page number within the paginated result set.",
            "x-ms-summary": "A page number within the paginated result set.",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedPipelineConfigurationList"
            }
          }
        }
      }
    },
    "/api/v2/pipelines/{name}/": {
      "get": {
        "description": "Retrieve a specific pattern instance. The returned pattern record may require additional parsing before using downstream in the workflow.",
        "summary": "Get Pattern Information",
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pattern Name",
            "x-ms-summary": "Pattern Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PipelineConfiguration"
            },
            "headers": {}
          }
        }
      }
    },
    "/api/v2/records/": {
      "post": {
        "description": "Create a record on a document",
        "summary": "Create Record",
        "tags": [
          "records"
        ],
        "operationId": "records_create",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Record UUID",
            "x-ms-summary": "Record UUID"
          },
          {
            "name": "created",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Minimum created time for record"
          },
          {
            "name": "modified",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Minimum modified time for record"
          },
          {
            "name": "document_uuid",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document UUID"
          },
          {
            "name": "document",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document"
          },
          {
            "name": "dataset",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Dataset"
          },
          {
            "name": "pipeline",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Pattern"
          },
          {
            "name": "status",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record Status"
          },
          {
            "name": "schema_name",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Schema Name"
          },
          {
            "name": "data",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record Data"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {},
            "headers": {}
          }
        },
        "x-ms-visibility": "internal"
      },
      "get": {
        "description": "Lists all of the executions available on the tenant. For example, you can return all records for a specific pattern if the tenant is configured with multiple patterns.\\nhttps://alkymi-api.readme.io/reference#records-api-v2",
        "summary": "List All Records",
        "tags": [
          "records"
        ],
        "operationId": "records_list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Dataset UUID",
            "x-ms-summary": "Dataset UUID"
          },
          {
            "name": "document_status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "completed",
                "error",
                "processing",
                "uploaded"
              ]
            },
            "description": "Processing status",
            "x-ms-summary": "Processing Status"
          },
          {
            "name": "pipeline",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pattern name",
            "x-ms-summary": "Pattern"
          },
          {
            "name": "removed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Removed status",
            "x-ms-summary": "Removed Status"
          },
          {
            "name": "reviewed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Reviewed status",
            "x-ms-summary": "Reviewed Status"
          },
          {
            "name": "schema",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Schema",
            "x-ms-summary": "Schema"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedRecordList"
            }
          }
        }
      }
    },
    "/api/v2/records/{uuid}/": {
      "get": {
        "description": "Retrieve a specific record instance. The returned record object may require additional parsing before using downstream in the workflow.\\nhttps://alkymi-api.readme.io/reference#get-record-detail",
        "summary": "Get Record Information",
        "tags": [
          "records"
        ],
        "operationId": "records_retrieve",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Record UUID",
            "x-ms-summary": "Record UUID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Record"
            },
            "headers": {}
          }
        }
      }
    },
    "/api/v2/webhooks/": {
      "x-ms-notification-content": {
        "description": "Details for Alkymi WebHook",
        "schema": {
          "$ref": "#/definitions/WebHookEvent"
        }
      },
      "post": {
        "description": "This trigger is executed when any of the selected Alkymi events occur",
        "operationId": "EventListener",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string",
                  "description": "target",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "display_name": {
                  "type": "string",
                  "description": "display_name"
                },
                "events": {
                  "title": "Events",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "on_execution_upload_start",
                      "on_execution_processing_start",
                      "on_execution_processing_complete",
                      "on_execution_review_status_change",
                      "on_execution_remove_status_change",
                      "on_execution_error",
                      "document_save",
                      "record_create",
                      "record_delete",
                      "record_modified"
                    ]
                  }
                }
              },
              "required": [
                "target"
              ]
            },
            "x-ms-summary": "Creates a listener for events within the Alkymi app"
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebHookCreatedResponse"
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "When an Alkymi event triggers",
        "x-ms-trigger": "single"
      }
    },
    "/api/v2/webhooks/{webhook_uuid}/": {
      "delete": {
        "description": "Unsubscribe a specific webhook",
        "operationId": "DeleteWebHook",
        "parameters": [
          {
            "description": "ID of the webhook being deleted",
            "in": "path",
            "name": "webhook_uuid",
            "required": true,
            "type": "string",
            "x-ms-summary": "ID of the webhook being deleted",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "WebHook successfully deleted"
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "Deletes a webhook",
        "x-ms-visibility": "internal"
      }
    }
  },
  "definitions": {
    "Dataset": {
      "title": "Dataset",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "pipeline": {
          "type": "string"
        },
        "documents": {
          "type": "string"
        },
        "records": {
          "type": "string"
        }
      },
      "required": [
        "uuid",
        "name",
        "pipeline",
        "documents",
        "records"
      ]
    },
    "Document": {
      "title": "Document",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "uuid"
        },
        "created": {
          "type": "string",
          "description": "created"
        },
        "modified": {
          "type": "string",
          "description": "modified"
        },
        "status": {
          "type": "string",
          "description": "status"
        },
        "archived": {
          "type": "boolean",
          "description": "archived"
        },
        "removed": {
          "type": "boolean",
          "description": "removed"
        },
        "file_name": {
          "type": "string",
          "description": "file_name"
        },
        "page_count": {
          "type": "integer",
          "format": "int32",
          "description": "page_count"
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "format": "int32",
                "description": "number"
              },
              "width": {
                "type": "integer",
                "format": "int32",
                "description": "width"
              },
              "height": {
                "type": "integer",
                "format": "int32",
                "description": "height"
              }
            }
          },
          "description": "pages"
        },
        "dataset": {
          "type": "string",
          "description": "dataset"
        },
        "records": {
          "type": "array",
          "items": {},
          "description": "records"
        },
        "pipeline_records": {
          "type": "object",
          "properties": {},
          "description": "pipeline_records"
        },
        "_s3_key": {
          "type": "string",
          "description": "_s3_key"
        },
        "_replaced_by": {
          "type": "string",
          "description": "_replaced_by"
        },
        "subject": {
          "type": "string",
          "description": "subject"
        },
        "sender": {
          "type": "string",
          "description": "sender"
        },
        "folder": {
          "type": "string",
          "description": "folder"
        },
        "targets": {
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          },
          "description": "targets"
        },
        "watermark_removed": {
          "type": "boolean",
          "description": "watermark_removed"
        }
      },
      "description": "results"
    },
    "Execution": {
      "title": "Execution",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "reviewed": {
          "type": "boolean"
        },
        "archived": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pipeline_records": {
          "type": "object"
        },
        "file_name": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "uuid",
        "created",
        "reviewed",
        "archived",
        "status",
        "records",
        "pipeline_records",
        "file_name",
        "documents"
      ]
    },
    "PaginatedDatasetList": {
      "title": "PaginatedDatasetList",
      "type": "object",
      "properties": {
        "count": {
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "example": "http://api.example.org/accounts/?page=4",
          "type": "string"
        },
        "previous": {
          "example": "http://api.example.org/accounts/?page=2",
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dataset"
          }
        }
      }
    },
    "PaginatedExecutionList": {
      "title": "PaginatedExecutionList",
      "type": "object",
      "properties": {
        "count": {
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "example": "http://api.example.org/accounts/?page=4",
          "type": "string"
        },
        "previous": {
          "example": "http://api.example.org/accounts/?page=2",
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Execution"
          }
        }
      }
    },
    "PaginatedPipelineConfigurationList": {
      "title": "PaginatedPipelineConfigurationList",
      "type": "object",
      "properties": {
        "count": {
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "example": "http://api.example.org/accounts/?page=4",
          "type": "string"
        },
        "previous": {
          "example": "http://api.example.org/accounts/?page=2",
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineConfiguration"
          }
        }
      }
    },
    "PaginatedRecordList": {
      "title": "PaginatedRecordList",
      "type": "object",
      "properties": {
        "count": {
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "example": "http://api.example.org/accounts/?page=4",
          "type": "string"
        },
        "previous": {
          "example": "http://api.example.org/accounts/?page=2",
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Record"
          }
        }
      }
    },
    "PipelineConfiguration": {
      "title": "PipelineConfiguration",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "records": {
          "type": "string"
        },
        "schemas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schema"
          }
        }
      },
      "required": [
        "name",
        "records",
        "schemas"
      ]
    },
    "Record": {
      "title": "Record",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "document_uuid": {
          "type": "string"
        },
        "document": {
          "type": "string"
        },
        "dataset": {
          "type": "string"
        },
        "pipeline": {
          "type": "string"
        },
        "schema_name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "required": [
        "uuid",
        "created",
        "document_uuid",
        "document",
        "dataset",
        "pipeline",
        "status",
        "data"
      ]
    },
    "Schema": {
      "title": "Schema",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[-a-zA-Z0-9_]+$"
        },
        "primary": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaField"
          }
        }
      },
      "required": [
        "name",
        "primary",
        "fields"
      ]
    },
    "SchemaField": {
      "title": "SchemaField",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[-a-zA-Z0-9_]+$"
        },
        "field_type": {
          "type": "string"
        },
        "sub_schema": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "field_type"
      ]
    },
    "WebHookCreatedResponse": {
      "description": "WebHookCreatedResponse",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "required": [
        "uuid"
      ],
      "title": "WebHookCreatedResponse",
      "type": "object"
    },
    "WebHookEvent": {
      "title": "WebhookEvent",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "uuid"
        },
        "status": {
          "type": "string",
          "description": "status"
        },
        "created": {
          "type": "string",
          "description": "created"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "records"
        },
        "archived": {
          "type": "boolean",
          "description": "archived"
        },
        "reviewed": {
          "type": "boolean",
          "description": "reviewed"
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "documents"
        },
        "file_name": {
          "type": "string",
          "description": "file_name"
        },
        "pipeline_records": {
          "type": "object",
          "description": "pipeline_records"
        },
        "trigger_event_list": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "trigger_event_list"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [
    {
      "name": "datasets",
      "description": ""
    },
    {
      "name": "documents",
      "description": ""
    },
    {
      "name": "executions",
      "description": ""
    },
    {
      "name": "pipelines",
      "description": ""
    },
    {
      "name": "records",
      "description": ""
    },
    {
      "name": "webhooks",
      "description": ""
    }
  ],
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://alkymi.io"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.alkymi.io/privacy-policy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Content and Files"
      }
    ]
}