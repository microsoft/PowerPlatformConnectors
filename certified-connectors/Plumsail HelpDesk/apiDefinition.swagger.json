{
  "swagger": "2.0",
  "info": {
    "version": "v4",
    "title": "Plumsail HelpDesk",
    "description": "It allows you to interact with Plumsail HelpDesk ticketing system. Visit https://plumsail.com/docs/help-desk-o365/v1.x/API/ms-flow.html for more information.",
    "contact": {
      "name": "Plumsail",
      "url": "https://plumsail.com/sharepoint-helpdesk",
      "email": "support@plumsail.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://plumsail.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://plumsail.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Business Management"
    }
  ],
  "schemes": [
    "https"
  ],
  "host": "helpdesk-services.plumsail.com",
  "paths": {
    "/_flow/v4/Tickets": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get tickets",
        "description": "Get tickets list",
        "operationId": "_flowV4TicketsGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An ODATA $filter query option to restrict the entries returned",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$filter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "An ODATA $orderBy query option for specifying the order of entries.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$orderBy"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$top"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$skiptoken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/TicketRead"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create a ticket",
        "description": "Creates new ticket and returns created ticket.",
        "operationId": "_flowV4TicketsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticket",
            "in": "body",
            "description": "Ticket model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TicketWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Tickets/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a single ticket",
        "description": "Gets a ticket by Id and returns it",
        "operationId": "_flowV4TicketsByIdGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Update a ticket",
        "description": "Gets a ticket by Id and updates it. Returns updated ticket.",
        "operationId": "_flowV4TicketsByIdPut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "ticket",
            "in": "body",
            "description": "Ticket model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TicketWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Delete a ticket",
        "description": "Deletes ticket by Id.",
        "operationId": "_flowV4TicketsByIdDelete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Tickets/{id}/Attachments/{filename}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Download attachment",
        "description": "Returns attachment file for specific ticket by its name, or returns error code",
        "operationId": "_flowV4TicketsByIdAttachmentsByFilenameGet",
        "consumes": [],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "Attachment Filename",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Attachment Filename",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file"
          },
          "400": {
            "description": "Couldn't retrieve requested file"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Tickets/{ticketId}/Comments": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get all comments for a ticket",
        "description": "Gets all comments for a ticket with specified Id.",
        "operationId": "_flowV4TicketsByTicketIdCommentsGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An ODATA $filter query option to restrict the entries returned",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$filter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "An ODATA $orderBy query option for specifying the order of entries.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$orderBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommentRead"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create a comment",
        "description": "Creates new comment for a ticket with specified ID and returns it.",
        "operationId": "_flowV4TicketsByTicketIdCommentsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "body",
            "description": "Comment",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommentWrite"
            }
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommentRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Tickets/{ticketId}/Comments/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a single comment",
        "description": "Gets a comment by ID and returns it.",
        "operationId": "_flowV4TicketsByTicketIdCommentsByIdGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "Ticket Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Ticket Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Comment ID",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Comment Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommentRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contacts",
        "description": "Get contacts list",
        "operationId": "_flowV4ContactsGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An ODATA $filter query option to restrict the entries returned",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$filter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "An ODATA $orderBy query option for specifying the order of entries.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$orderBy"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$top"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$skiptoken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactRead"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a contact",
        "description": "Creates new contact and returns it.",
        "operationId": "_flowV4ContactsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Contact model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactWrite"
            }
          },
          {
            "name": "updateIfExists",
            "in": "query",
            "description": "Update contact if it already exists",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Update Contact if exists"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a single contact by Id",
        "description": "Gets a contact by Id and returs it.",
        "operationId": "_flowV4ContactsByIdGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact",
        "description": "Finds a contact by Id and updates it. Returns updated contact.",
        "operationId": "_flowV4ContactsByIdPut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "contact",
            "in": "body",
            "description": "Contact model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "description": "Deletes contact by Id",
        "operationId": "_flowV4ContactsByIdDelete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Contacts/ByEmail/{email}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a single contact by Email",
        "description": "Gets a contact by email and returns it.",
        "operationId": "_flowV4ContactsByEmailByEmailGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Contact Email",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Email",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact by Email",
        "description": "Finds a contact by email and updates it. Returns updated contact.",
        "operationId": "_flowV4ContactsByEmailByEmailPut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Contact email",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Email",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "contact",
            "in": "body",
            "description": "Contact model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organizations",
        "description": "Get organizations list",
        "operationId": "_flowV4OrganizationsGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An ODATA $filter query option to restrict the entries returned",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$filter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "An ODATA $orderBy query option for specifying the order of entries.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$orderBy"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$top"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$skiptoken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationRead"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Create an organization",
        "description": "Creates new item in Organizations list and return it",
        "operationId": "_flowV4OrganizationsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrganizationWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Organizations/{id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get a single organization",
        "description": "Gets organization by Id and returns it",
        "operationId": "_flowV4OrganizationsByIdGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update an organization",
        "description": "Gets an organization by Id and returns it.",
        "operationId": "_flowV4OrganizationsByIdPut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "organization",
            "in": "body",
            "description": "Organization model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrganizationWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete an organization",
        "description": "Deletes organization by Id.",
        "operationId": "_flowV4OrganizationsByIdDelete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/_flow/v4/Organizations/ByTitle/{title}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get a single organization by title",
        "description": "Gets an organization by title and returns it.",
        "operationId": "_flowV4OrganizationsByTitleByTitleGet",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "Organization title",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization title",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$select"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "$expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationRead"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update an organization by title",
        "description": "Gets an organization by title and updates it. Returns updated organization.",
        "operationId": "_flowV4OrganizationsByTitleByTitlePut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "Organization title",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization title",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "organization",
            "in": "body",
            "description": "Organization model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrganizationWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationRead"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete an organization by title",
        "description": "Deletes organization by title",
        "operationId": "_flowV4OrganizationsByTitleByTitleDelete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "Organization title",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Organization title",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "TicketWrite": {
      "required": [
        "subject",
        "body",
        "requesterEmail"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Ticket Subject"
        },
        "body": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Ticket Body"
        },
        "requesterEmail": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Ticket Requester Email"
        },
        "assignedToEmail": {
          "type": "string",
          "x-ms-summary": "Ticket Assignee Email or SharePoint Group Name"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Ticket Status"
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Ticket Category"
        },
        "priority": {
          "type": "string",
          "x-ms-summary": "Ticket Priority"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Ticket DueDate"
        },
        "ccEmails": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Ticket Cc Emails"
        },
        "tagTitles": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Ticket Tags Titles"
        },
        "supportChannel": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Ticket SupportChannel"
        },
        "attachments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "x-ms-summary": "Ticket Attachments"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Ticket Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "Attachment": {
      "required": [
        "Name",
        "AttachmentContent"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "x-ms-summary": "Attachment File Name"
        },
        "AttachmentContent": {
          "format": "binary",
          "description": "File Content",
          "type": "string"
        }
      }
    },
    "FileContent": {
      "type": "object",
      "properties": {
        "$content-type": {
          "type": "string"
        },
        "$content": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "TicketRead": {
      "type": "object",
      "properties": {
        "ticketID": {
          "type": "string",
          "x-ms-summary": "Custom Ticket ID"
        },
        "subject": {
          "type": "string",
          "x-ms-summary": "Ticket Subject"
        },
        "requester": {
          "$ref": "#/definitions/Requester",
          "x-ms-summary": "Ticket Requester"
        },
        "assignedTo": {
          "$ref": "#/definitions/Assignee",
          "x-ms-summary": "Ticket Assignee"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Ticket Status"
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Ticket Category"
        },
        "priority": {
          "type": "string",
          "x-ms-summary": "Ticket Priority"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Ticket Due Date"
        },
        "created": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Ticket Creation Date"
        },
        "resolutionDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Ticket Resolution Date"
        },
        "cc": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cc"
          },
          "x-ms-summary": "Ticket Cc"
        },
        "tags": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagRead"
          },
          "x-ms-summary": "Ticket Tags"
        },
        "attachments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Ticket Attachments"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Ticket ID"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Ticket Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "Requester": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Requester ID"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Requester Full Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Requester Email"
        },
        "spUserId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Requester SPUserId"
        },
        "role": {
          "type": "string",
          "x-ms-summary": "Requester Role"
        },
        "emailAlternate": {
          "type": "string",
          "x-ms-summary": "Requester Alternate Email"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Requester CustomFields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "Assignee": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Assignee ID"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Assignee Full Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Assignee Email"
        },
        "spUserId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Assignee SPUserId"
        },
        "role": {
          "type": "string",
          "x-ms-summary": "Assignee Role"
        },
        "emailAlternate": {
          "type": "string",
          "x-ms-summary": "Assignee Alternate Email"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Assignee CustomFields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "Cc": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Cc ID"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Cc Full Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Cc Email"
        },
        "spUserId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Cc SPUserId"
        },
        "role": {
          "type": "string",
          "x-ms-summary": "Cc Role"
        },
        "emailAlternate": {
          "type": "string",
          "x-ms-summary": "Cc Alternate Email"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Cc CustomFields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "TagRead": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Tag Title"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Tag ID"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Tag Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "CommentWrite": {
      "required": [
        "body",
        "fromEmail"
      ],
      "type": "object",
      "properties": {
        "attachments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "body": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Comment Body"
        },
        "fromEmail": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Comment Author Email"
        },
        "messageId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comment MessageId"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comment Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "CommentRead": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "x-ms-summary": "Comment Body"
        },
        "created": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Comment Creation Date"
        },
        "fromEmail": {
          "type": "string",
          "x-ms-summary": "Comment Author Email"
        },
        "fromName": {
          "type": "string",
          "x-ms-summary": "Comment Author Name"
        },
        "messageId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comment MessageId"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Comment ID"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Comment Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "ContactRead": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Contact Full Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Contact Email"
        },
        "spUserId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Contact SPUserId"
        },
        "role": {
          "type": "string",
          "x-ms-summary": "Contact Role"
        },
        "emailAlternate": {
          "type": "string",
          "x-ms-summary": "Contact Alternate Email"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Contact ID"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contact Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "ContactWrite": {
      "required": [
        "title",
        "email"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Contact Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Contact Email"
        },
        "spUserId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Contact SPUserId"
        },
        "role": {
          "type": "string",
          "x-ms-summary": "Contact Role"
        },
        "emailAlternate": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contact Alternate Email"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contact Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "OrganizationWrite": {
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Organization Title"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Organization Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    },
    "OrganizationRead": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-summary": "Organization Title"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Organization ID"
        },
        "customFields": {
          "type": "object",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Organization Custom Fields",
          "description": "JSON string containing custom field values"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "name": "X-HD-ApiKey",
      "in": "header",
      "type": "apiKey",
      "description": "API Key generated by HelpDesk"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}