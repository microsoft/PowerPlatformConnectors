{
    "basePath": "/",
    "consumes": [],
    "definitions": {
        "Assignee": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Assignee CustomFields",
                    "x-ms-visibility": "advanced"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Assignee Email"
                },
                "emailAlternate": {
                    "type": "string",
                    "x-ms-summary": "Assignee Alternate Email"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Assignee ID"
                },
                "role": {
                    "type": "string",
                    "x-ms-summary": "Assignee Role"
                },
                "spUserId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Assignee SPUserId"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Assignee Full Name"
                }
            },
            "type": "object",
            "x-ms-summary": "Ticket Assignee"
        },
        "Attachment": {
            "properties": {
                "AttachmentContent": {
                    "description": "File Content",
                    "format": "binary",
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "x-ms-summary": "Attachment File Name"
                }
            },
            "required": [
                "Name",
                "AttachmentContent"
            ],
            "type": "object"
        },
        "Cc": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Cc CustomFields",
                    "x-ms-visibility": "advanced"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Cc Email"
                },
                "emailAlternate": {
                    "type": "string",
                    "x-ms-summary": "Cc Alternate Email"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Cc ID"
                },
                "role": {
                    "type": "string",
                    "x-ms-summary": "Cc Role"
                },
                "spUserId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Cc SPUserId"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Cc Full Name"
                }
            },
            "type": "object"
        },
        "CommentRead": {
            "properties": {
                "body": {
                    "type": "string",
                    "x-ms-summary": "Comment Body"
                },
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Comment Creation Date"
                },
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Comment Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "fromEmail": {
                    "type": "string",
                    "x-ms-summary": "Comment Author Email"
                },
                "fromName": {
                    "type": "string",
                    "x-ms-summary": "Comment Author Name"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Comment ID"
                },
                "messageId": {
                    "type": "string",
                    "x-ms-summary": "Comment MessageId",
                    "x-ms-visibility": "advanced"
                }
            },
            "type": "object"
        },
        "CommentWrite": {
            "properties": {
                "attachments": {
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    },
                    "type": "array",
                    "uniqueItems": false
                },
                "body": {
                    "type": "string",
                    "x-ms-summary": "Comment Body",
                    "x-ms-visibility": "important"
                },
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Comment Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "fromEmail": {
                    "type": "string",
                    "x-ms-summary": "Comment Author Email",
                    "x-ms-visibility": "important"
                },
                "messageId": {
                    "type": "string",
                    "x-ms-summary": "Comment MessageId",
                    "x-ms-visibility": "advanced"
                }
            },
            "required": [
                "body",
                "fromEmail"
            ],
            "type": "object"
        },
        "ContactRead": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Contact Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Contact Email"
                },
                "emailAlternate": {
                    "type": "string",
                    "x-ms-summary": "Contact Alternate Email"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Contact ID"
                },
                "role": {
                    "type": "string",
                    "x-ms-summary": "Contact Role"
                },
                "spUserId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Contact SPUserId"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Contact Full Name"
                }
            },
            "type": "object"
        },
        "ContactWrite": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Contact Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Contact Email"
                },
                "emailAlternate": {
                    "type": "string",
                    "x-ms-summary": "Contact Alternate Email",
                    "x-ms-visibility": "advanced"
                },
                "role": {
                    "type": "string",
                    "x-ms-summary": "Contact Role"
                },
                "spUserId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Contact SPUserId"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Contact Name"
                }
            },
            "required": [
                "title",
                "email"
            ],
            "type": "object"
        },
        "FileContent": {
            "properties": {
                "$content": {
                    "format": "byte",
                    "type": "string"
                },
                "$content-type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrganizationRead": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Organization Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Organization ID"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Organization Title"
                }
            },
            "type": "object"
        },
        "OrganizationWrite": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Organization Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Organization Title"
                }
            },
            "required": [
                "title"
            ],
            "type": "object"
        },
        "Requester": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Requester CustomFields",
                    "x-ms-visibility": "advanced"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Requester Email"
                },
                "emailAlternate": {
                    "type": "string",
                    "x-ms-summary": "Requester Alternate Email"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Requester ID"
                },
                "role": {
                    "type": "string",
                    "x-ms-summary": "Requester Role"
                },
                "spUserId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Requester SPUserId"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Requester Full Name"
                }
            },
            "type": "object",
            "x-ms-summary": "Ticket Requester"
        },
        "TagRead": {
            "properties": {
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Tag Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Tag ID"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Tag Title"
                }
            },
            "type": "object"
        },
        "TicketRead": {
            "properties": {
                "assignedTo": {
                    "$ref": "#/definitions/Assignee"
                },
                "attachments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Attachments"
                },
                "category": {
                    "type": "string",
                    "x-ms-summary": "Ticket Category"
                },
                "cc": {
                    "items": {
                        "$ref": "#/definitions/Cc"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Cc"
                },
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Ticket Creation Date"
                },
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Ticket Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Ticket Due Date"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Ticket ID"
                },
                "priority": {
                    "type": "string",
                    "x-ms-summary": "Ticket Priority"
                },
                "requester": {
                    "$ref": "#/definitions/Requester"
                },
                "resolutionDate": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Ticket Resolution Date"
                },
                "status": {
                    "type": "string",
                    "x-ms-summary": "Ticket Status"
                },
                "subject": {
                    "type": "string",
                    "x-ms-summary": "Ticket Subject"
                },
                "tags": {
                    "items": {
                        "$ref": "#/definitions/TagRead"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Tags"
                },
                "ticketID": {
                    "type": "string",
                    "x-ms-summary": "Custom Ticket ID"
                }
            },
            "type": "object"
        },
        "TicketWrite": {
            "properties": {
                "assignedToEmail": {
                    "type": "string",
                    "x-ms-summary": "Ticket Assignee Email or SharePoint Group Name"
                },
                "attachments": {
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Attachments"
                },
                "body": {
                    "type": "string",
                    "x-ms-summary": "Ticket Body",
                    "x-ms-visibility": "important"
                },
                "category": {
                    "type": "string",
                    "x-ms-summary": "Ticket Category"
                },
                "ccEmails": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Cc Emails"
                },
                "customFields": {
                    "description": "JSON string containing custom field values",
                    "type": "object",
                    "x-ms-summary": "Ticket Custom Fields",
                    "x-ms-visibility": "advanced"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Ticket DueDate"
                },
                "priority": {
                    "type": "string",
                    "x-ms-summary": "Ticket Priority"
                },
                "requesterEmail": {
                    "type": "string",
                    "x-ms-summary": "Ticket Requester Email",
                    "x-ms-visibility": "important"
                },
                "status": {
                    "type": "string",
                    "x-ms-summary": "Ticket Status"
                },
                "subject": {
                    "type": "string",
                    "x-ms-summary": "Ticket Subject",
                    "x-ms-visibility": "important"
                },
                "supportChannel": {
                    "type": "string",
                    "x-ms-summary": "Ticket SupportChannel",
                    "x-ms-visibility": "advanced"
                },
                "tagTitles": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": false,
                    "x-ms-summary": "Ticket Tags Titles"
                }
            },
            "required": [
                "subject",
                "body",
                "requesterEmail"
            ],
            "type": "object"
        }
    },
    "host": "helpdesk-services.plumsail.com",
    "info": {
        "contact": {
            "email": "support@plumsail.com",
            "name": "Plumsail",
            "url": "https://plumsail.com/sharepoint-helpdesk"
        },
        "description": "The API allows interact with Plumsail HelpDesk ticketing system. Visit https://plumsail.com/docs/help-desk-o365/v1.x/API/ms-flow.html for more information.",
        "title": "Plumsail HelpDesk",
        "version": "v4"
    },
    "parameters": {},
    "paths": {
        "/_flow/v4/Contacts": {
            "get": {
                "consumes": [],
                "description": "Get contacts list",
                "operationId": "_flowV4ContactsGet",
                "parameters": [
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $filter query option to restrict the entries returned",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$filter",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $orderBy query option for specifying the order of entries.",
                        "in": "query",
                        "name": "$orderBy",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$orderBy",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "type": "integer",
                        "x-ms-summary": "$top",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
                        "in": "query",
                        "name": "$skiptoken",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$skiptoken",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ContactRead"
                            },
                            "type": "array",
                            "uniqueItems": false
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get contacts",
                "tags": [
                    "Contacts"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Creates new contact and returns it.",
                "operationId": "_flowV4ContactsPost",
                "parameters": [
                    {
                        "description": "Contact model",
                        "in": "body",
                        "name": "contact",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactWrite"
                        }
                    },
                    {
                        "default": false,
                        "description": "Update contact if it already exists",
                        "in": "query",
                        "name": "updateIfExists",
                        "required": false,
                        "type": "boolean",
                        "x-ms-summary": "Update Contact if exists"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create a contact",
                "tags": [
                    "Contacts"
                ]
            }
        },
        "/_flow/v4/Contacts/ByEmail/{email}": {
            "get": {
                "consumes": [],
                "description": "Gets a contact by email and returns it.",
                "operationId": "_flowV4ContactsByEmailByEmailGet",
                "parameters": [
                    {
                        "description": "Contact Email",
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Contact Email",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single contact by Email",
                "tags": [
                    "Contacts"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Finds a contact by email and updates it. Returns updated contact.",
                "operationId": "_flowV4ContactsByEmailByEmailPut",
                "parameters": [
                    {
                        "description": "Contact email",
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Contact Email",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Contact model",
                        "in": "body",
                        "name": "contact",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update a contact by Email",
                "tags": [
                    "Contacts"
                ]
            }
        },
        "/_flow/v4/Contacts/{id}": {
            "delete": {
                "consumes": [],
                "description": "Deletes contact by Id",
                "operationId": "_flowV4ContactsByIdDelete",
                "parameters": [
                    {
                        "description": "Contact Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Contact Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a contact",
                "tags": [
                    "Contacts"
                ]
            },
            "get": {
                "consumes": [],
                "description": "Gets a contact by Id and returs it.",
                "operationId": "_flowV4ContactsByIdGet",
                "parameters": [
                    {
                        "description": "Contact Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Contact Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single contact by Id",
                "tags": [
                    "Contacts"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Finds a contact by Id and updates it. Returns updated contact.",
                "operationId": "_flowV4ContactsByIdPut",
                "parameters": [
                    {
                        "description": "Contact Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Contact Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Contact model",
                        "in": "body",
                        "name": "contact",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update a contact",
                "tags": [
                    "Contacts"
                ]
            }
        },
        "/_flow/v4/Organizations": {
            "get": {
                "consumes": [],
                "description": "Get organizations list",
                "operationId": "_flowV4OrganizationsGet",
                "parameters": [
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $filter query option to restrict the entries returned",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$filter",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $orderBy query option for specifying the order of entries.",
                        "in": "query",
                        "name": "$orderBy",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$orderBy",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "type": "integer",
                        "x-ms-summary": "$top",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
                        "in": "query",
                        "name": "$skiptoken",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$skiptoken",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/OrganizationRead"
                            },
                            "type": "array",
                            "uniqueItems": false
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get organizations",
                "tags": [
                    "Organizations"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Creates new item in Organizations list and return it",
                "operationId": "_flowV4OrganizationsPost",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganizationWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create an organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/_flow/v4/Organizations/ByTitle/{title}": {
            "delete": {
                "consumes": [],
                "description": "Deletes organization by title",
                "operationId": "_flowV4OrganizationsByTitleByTitleDelete",
                "parameters": [
                    {
                        "description": "Organization title",
                        "in": "path",
                        "name": "title",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Organization title",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete an organization by title",
                "tags": [
                    "Organizations"
                ]
            },
            "get": {
                "consumes": [],
                "description": "Gets an organization by title and returns it.",
                "operationId": "_flowV4OrganizationsByTitleByTitleGet",
                "parameters": [
                    {
                        "description": "Organization title",
                        "in": "path",
                        "name": "title",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Organization title",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single organization by title",
                "tags": [
                    "Organizations"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Gets an organization by title and updates it. Returns updated organization.",
                "operationId": "_flowV4OrganizationsByTitleByTitlePut",
                "parameters": [
                    {
                        "description": "Organization title",
                        "in": "path",
                        "name": "title",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Organization title",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Organization model",
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganizationWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update an organization by title",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/_flow/v4/Organizations/{id}": {
            "delete": {
                "consumes": [],
                "description": "Deletes organization by Id.",
                "operationId": "_flowV4OrganizationsByIdDelete",
                "parameters": [
                    {
                        "description": "Organization Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Organization Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete an organization",
                "tags": [
                    "Organizations"
                ]
            },
            "get": {
                "consumes": [],
                "description": "Gets organization by Id and returns it",
                "operationId": "_flowV4OrganizationsByIdGet",
                "parameters": [
                    {
                        "description": "Organization Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Organization Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single organization",
                "tags": [
                    "Organizations"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Gets an organization by Id and returns it.",
                "operationId": "_flowV4OrganizationsByIdPut",
                "parameters": [
                    {
                        "description": "Organization Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Organization Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Organization model",
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganizationWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update an organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/_flow/v4/Tickets": {
            "get": {
                "consumes": [],
                "description": "Get tickets list",
                "operationId": "_flowV4TicketsGet",
                "parameters": [
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $filter query option to restrict the entries returned",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$filter",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $orderBy query option for specifying the order of entries.",
                        "in": "query",
                        "name": "$orderBy",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$orderBy",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $top query option to select the first n items of the return set for return (default = 50, maximum = 100).",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "type": "integer",
                        "x-ms-summary": "$top",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $skiptoken query option to skip over items until the specified item is reached and return the rest.",
                        "in": "query",
                        "name": "$skiptoken",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$skiptoken",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TicketRead"
                            },
                            "type": "array",
                            "uniqueItems": false
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get tickets",
                "tags": [
                    "Tickets"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Creates new ticket and returns created ticket.",
                "operationId": "_flowV4TicketsPost",
                "parameters": [
                    {
                        "description": "Ticket model",
                        "in": "body",
                        "name": "ticket",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TicketWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TicketRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create a ticket",
                "tags": [
                    "Tickets"
                ]
            }
        },
        "/_flow/v4/Tickets/{id}": {
            "delete": {
                "consumes": [],
                "description": "Deletes ticket by Id.",
                "operationId": "_flowV4TicketsByIdDelete",
                "parameters": [
                    {
                        "description": "Ticket Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a ticket",
                "tags": [
                    "Tickets"
                ]
            },
            "get": {
                "consumes": [],
                "description": "Gets a ticket by Id and returns it",
                "operationId": "_flowV4TicketsByIdGet",
                "parameters": [
                    {
                        "description": "Ticket Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TicketRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single ticket",
                "tags": [
                    "Tickets"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Gets a ticket by Id and updates it. Returns updated ticket.",
                "operationId": "_flowV4TicketsByIdPut",
                "parameters": [
                    {
                        "description": "Ticket Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Ticket model",
                        "in": "body",
                        "name": "ticket",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TicketWrite"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TicketRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update a ticket",
                "tags": [
                    "Tickets"
                ]
            }
        },
        "/_flow/v4/Tickets/{id}/Attachments/{filename}": {
            "get": {
                "consumes": [],
                "description": "Returns attachment file for specific ticket by its name, or returns error code",
                "operationId": "_flowV4TicketsByIdAttachmentsByFilenameGet",
                "parameters": [
                    {
                        "description": "Ticket Id",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Attachment Filename",
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Attachment Filename",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested file",
                        "schema": {
                            "format": "binary",
                            "title": "Result file",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Couldn't retrieve requested file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Download attachment",
                "tags": [
                    "Tickets"
                ]
            }
        },
        "/_flow/v4/Tickets/{ticketId}/Comments": {
            "get": {
                "consumes": [],
                "description": "Gets all comments for a ticket with specified Id.",
                "operationId": "_flowV4TicketsByTicketIdCommentsGet",
                "parameters": [
                    {
                        "description": "Ticket ID",
                        "format": "int32",
                        "in": "path",
                        "name": "ticketId",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $filter query option to restrict the entries returned",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$filter",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $orderBy query option for specifying the order of entries.",
                        "in": "query",
                        "name": "$orderBy",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$orderBy",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CommentRead"
                            },
                            "type": "array",
                            "uniqueItems": false
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get all comments for a ticket",
                "tags": [
                    "Tickets"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Creates new comment for a ticket with specified ID and returns it.",
                "operationId": "_flowV4TicketsByTicketIdCommentsPost",
                "parameters": [
                    {
                        "description": "Comment",
                        "in": "body",
                        "name": "comment",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CommentWrite"
                        }
                    },
                    {
                        "description": "Ticket ID",
                        "format": "int32",
                        "in": "path",
                        "name": "ticketId",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommentRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create a comment",
                "tags": [
                    "Tickets"
                ]
            }
        },
        "/_flow/v4/Tickets/{ticketId}/Comments/{id}": {
            "get": {
                "consumes": [],
                "description": "Gets a comment by ID and returns it.",
                "operationId": "_flowV4TicketsByTicketIdCommentsByIdGet",
                "parameters": [
                    {
                        "description": "Ticket Id",
                        "format": "int32",
                        "in": "path",
                        "name": "ticketId",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Ticket Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "Comment ID",
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "integer",
                        "x-ms-summary": "Comment Id",
                        "x-ms-url-encoding": "single",
                        "x-ms-visibility": "important"
                    },
                    {
                        "description": "An ODATA $select query option to specify which fields to return for a list item. You can use * to return all available fields.",
                        "in": "query",
                        "name": "$select",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$select",
                        "x-ms-visibility": "advanced"
                    },
                    {
                        "description": "An ODATA $expand query option to specify that the request returns the values of lookups.",
                        "in": "query",
                        "name": "$expand",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "$expand",
                        "x-ms-visibility": "advanced"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommentRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a single comment",
                "tags": [
                    "Tickets"
                ]
            }
        }
    },
    "produces": [],
    "responses": {},
    "schemes": [
        "https"
    ],
    "security": [
        {
            "apiKey": []
        }
    ],
    "securityDefinitions": {
        "apiKey": {
            "description": "API Key generated by HelpDesk",
            "in": "header",
            "name": "X-HD-ApiKey",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [],
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://plumsail.com"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://plumsail.com/privacy-policy/"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Collaboration;Business Management"
        }
    ]
}