{
  "swagger": "2.0",
  "info": {
    "title": "Zoho Sign",
    "description": "Zoho Sign Custom API Connector",
    "version": "1.0",
    "contact": {
      "name": "Zoho Sign API Support",
      "email": "support@zohosign.com",
      "url": "https://www.zoho.com/sign/contact.html"
    }
  },
  "host": "sign.zoho.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "summary": "Account Details",
        "description": "Specify the account details to get to know the account details of the current user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "accounts": {
                  "type": "object",
                  "properties": {
                    "created_time": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Displays the time when the account was created"
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "approver": {
                          "type": "boolean",
                          "description": "approver"
                        },
                        "reports": {
                          "type": "boolean",
                          "description": "reports"
                        },
                        "templates": {
                          "type": "boolean",
                          "description": "Templates corresponding to the particular account will be displayed",
                          "x-ms-visibility": "important",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "branding": {
                          "type": "boolean",
                          "description": "branding"
                        },
                        "custom_domains": {
                          "type": "boolean",
                          "description": "custom_domains"
                        },
                        "in_person_signing": {
                          "type": "boolean",
                          "description": "Role of the Signer (In-person Signer)"
                        },
                        "attachment_field": {
                          "type": "boolean",
                          "description": "Use this field in case you want to attachments to be added to your document"
                        },
                        "trusted_domains": {
                          "type": "boolean",
                          "description": "trusted_domains"
                        },
                        "bulk_send": {
                          "type": "boolean",
                          "description": "This allows you to send the document to bulk recipients varying from two to 300"
                        },
                        "signforms": {
                          "type": "boolean",
                          "description": "signforms"
                        },
                        "blockchain": {
                          "type": "boolean",
                          "description": "blockchain"
                        },
                        "embedded_signing": {
                          "type": "boolean",
                          "description": "embedded_signing"
                        },
                        "redirection": {
                          "type": "boolean",
                          "description": "redirection"
                        },
                        "cloud_backup": {
                          "type": "boolean",
                          "description": "cloud_backup"
                        }
                      },
                      "description": "features"
                    },
                    "account_id": {
                      "type": "string",
                      "description": "This field displays the ID of the particular account"
                    },
                    "license_type": {
                      "type": "string",
                      "description": "license_type"
                    },
                    "ZSOID": {
                      "type": "string",
                      "description": "This field displays the Zoho Sign User ID of the particular account"
                    },
                    "org_name": {
                      "type": "string",
                      "description": "Displays the Organistaion Name"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_time": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Displays the time the document was created"
                          },
                          "user_status": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user_status"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Shows the email id of the particular user"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Shows the user id of the particular user"
                          },
                          "last_name": {
                            "type": "string",
                            "description": "Displays the Last Name (if provided) of the user"
                          },
                          "ZUID": {
                            "type": "string",
                            "description": "Showcases the Zoho User ID"
                          },
                          "first_name": {
                            "type": "string",
                            "description": "Displays the First Name of the user"
                          }
                        },
                        "description": "Shows the total number of users assosicated."
                      }
                    }
                  },
                  "description": "accounts"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "operationId": "get-account-details"
      }
    },
    "/users/invite": {
      "post": {
        "operationId": "invite-users",
        "summary": "Invite the users whom you want to join",
        "description": "Invite users with email id",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email_id",
            "type": "string",
            "description": "[\"Enter the email ids of all the invitees whom you want to to be added\"]",
            "x-ms-summary": "Email ID's of the invitees"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Users List",
        "operationId": "get-users",
        "description": "Helps to fetch the list of users who are associated with the account",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "page_context": {
                  "type": "object",
                  "properties": {
                    "sort_column": {
                      "type": "string",
                      "description": "Helps to sort the column based upon the parameter that is given."
                    },
                    "has_more_rows": {
                      "type": "boolean",
                      "description": "has_more_rows"
                    },
                    "start_index": {
                      "type": "integer",
                      "format": "int32",
                      "description": "start_index"
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "total_count"
                    },
                    "sort_order": {
                      "type": "string",
                      "description": "Helps to sort either in ascending/descending order"
                    },
                    "row_count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Displays the number of rows present in the list."
                    }
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_email": {
                        "type": "string",
                        "description": "Displays the email id of the user"
                      },
                      "is_payment_owner": {
                        "type": "boolean",
                        "description": "is_payment_owner"
                      },
                      "role": {
                        "type": "string",
                        "description": "role"
                      }
                    }
                  }
                },
                "confirmed_email_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Reconfirm the email id"
                },
                "user_id": {
                  "type": "string",
                  "description": "User ID"
                },
                "user_name": {
                  "type": "string",
                  "description": "user_name"
                },
                "is_allowed": {
                  "type": "string",
                  "description": "is_allowed",
                  "enum": [
                    "true",
                    "false"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "put": {
        "operationId": "update-user",
        "summary": "Update the user access and roles of Zoho Sign users",
        "description": "You can update the access and role of a Zoho Sign User, one at a time",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Zoho Sign ID of the user",
            "description": "Zoho Sign ID of the user"
          },
          {
            "in": "formData",
            "name": "allowed_access",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-summary": "Is allowed to access Zoho Sign ?,",
            "description": "Is allowed to access Zoho Sign ?"
          },
          {
            "in": "formData",
            "name": "role",
            "type": "string",
            "enum": [
              "Admin",
              "User"
            ],
            "x-ms-summary": "Role of the user to be updated,",
            "description": "Role of the user to be updated"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    0
                  ]
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message",
                "status"
              ]
            }
          }
        }
      }
    },
    "/users/{user_id}/delete": {
      "put": {
        "operationId": "delete-user",
        "summary": "Remove the specified user",
        "description": "Remove the specified user",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Zoho Sign ID of the user to be removed",
            "description": "Zoho Sign ID of the user to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    0
                  ]
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message",
                "status"
              ]
            }
          }
        }
      }
    },
    "/requests/{request_id}/completioncertificate": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "HTTP/1.1": {
                "description": "",
                "type": "string"
              },
              "Content-Type:application/pdf;": {
                "description": "Content-Type:application/pdf;",
                "type": "string"
              }
            }
          }
        },
        "summary": "Download Completion Certificate",
        "description": "Download the completion certificate",
        "operationId": "download-completion-certificate",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "Request ID of the completed document",
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/requests/{request_id}/pdf": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "HTTP/1.1": {
                "description": "",
                "type": "string"
              },
              "Content-Type:application/pdf;": {
                "description": "Content-Type:application/pdf;",
                "type": "string"
              }
            }
          }
        },
        "summary": "Download Document",
        "description": "Download the selected document",
        "operationId": "download-document",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Request ID",
            "description": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/requests/{request_id}/documents/{document_id}/pdf": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "HTTP/1.1": {
                "description": "",
                "type": "string"
              },
              "Content-Type:application/pdf;": {
                "description": "Content-Type:application/pdf;",
                "type": "string"
              }
            }
          }
        },
        "summary": "Download File",
        "description": "Downloads the particular document that is selected.",
        "operationId": "download-file",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single",
            "description": "Request ID"
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single",
            "description": "document ID"
          }
        ]
      }
    },
    "/accounts/webhooks": {
      "get": {
        "summary": "Get list of webhooks",
        "operationId": "get-webhooks-list",
        "description": "get list of webhooks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "webhooks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "webhook_url": {
                        "type": "string",
                        "description": "webhook_url"
                      },
                      "webhook_id": {
                        "type": "string",
                        "description": "webhook_id"
                      },
                      "purpose": {
                        "type": "string",
                        "description": "purpose"
                      },
                      "webhook_status": {
                        "type": "string",
                        "description": "webhook_status"
                      },
                      "webhook_actions": {
                        "type": "string",
                        "description": "webhook_actions"
                      }
                    }
                  },
                  "description": "webhooks"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/webhooks/{webhookId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "webhookId",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-url-encoding": "single",
            "description": "Webhook ID will be fetched",
            "x-ms-summary": "webhook id to be fetched"
          }
        ],
        "summary": "Get Webhook details",
        "operationId": "get-webhook",
        "description": "get detailed information of webhooks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "webhook": {
                  "type": "object",
                  "properties": {
                    "webhook_url": {
                      "type": "string",
                      "description": "Enter the URL of the webhook"
                    },
                    "webhook_id": {
                      "type": "string",
                      "description": "Enter the ID of the webhook"
                    },
                    "purpose": {
                      "type": "string",
                      "description": "purpose"
                    },
                    "webhook_status": {
                      "type": "string",
                      "description": "webhook_status"
                    },
                    "webhook_actions": {
                      "type": "string",
                      "description": "webhook_actions"
                    }
                  },
                  "description": "webhook"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "webhookId",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-url-encoding": "single",
            "description": "webhook id to be deleted",
            "x-ms-summary": "webhook id to be deleted"
          }
        ],
        "x-ms-visibility": "internal",
        "summary": "Delete Webhook",
        "description": "Internal endpoint for deleting a webhook",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "operationId": "delete-webhook"
      }
    },
    "/internal/accounts/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "requests": {
              "type": "object",
              "properties": {
                "request_status": {
                  "type": "string",
                  "description": "request_status"
                },
                "notes": {
                  "type": "string",
                  "description": "notes"
                },
                "reminder_period": {
                  "type": "integer",
                  "format": "int32",
                  "description": "reminder_period"
                },
                "owner_id": {
                  "type": "string",
                  "description": "owner_id"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "request_name": {
                  "type": "string",
                  "description": "request_name"
                },
                "modified_time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "modified_time"
                },
                "action_time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "action_time"
                },
                "is_deleted": {
                  "type": "boolean",
                  "description": "is_deleted"
                },
                "expiration_days": {
                  "type": "integer",
                  "format": "int32",
                  "description": "expiration_days"
                },
                "is_sequential": {
                  "type": "boolean",
                  "description": "is_sequential"
                },
                "sign_submitted_time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "sign_submitted_time"
                },
                "owner_first_name": {
                  "type": "string",
                  "description": "owner_first_name"
                },
                "sign_percentage": {
                  "type": "integer",
                  "format": "int32",
                  "description": "sign_percentage"
                },
                "expire_by": {
                  "type": "integer",
                  "format": "int32",
                  "description": "expire_by"
                },
                "owner_email": {
                  "type": "string",
                  "description": "owner_email"
                },
                "created_time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "created_time"
                },
                "email_reminders": {
                  "type": "boolean",
                  "description": "email_reminders"
                },
                "document_ids": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "document_name": {
                        "type": "string",
                        "description": "Enter the document name"
                      },
                      "document_size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the document"
                      },
                      "document_order": {
                        "type": "string",
                        "description": "document_order"
                      },
                      "total_pages": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of pages in the document"
                      },
                      "document_id": {
                        "type": "string",
                        "description": "Document ID"
                      }
                    }
                  },
                  "description": "document_ids"
                },
                "self_sign": {
                  "type": "boolean",
                  "description": "self_sign"
                },
                "in_process": {
                  "type": "boolean",
                  "description": "in_process"
                },
                "validity": {
                  "type": "integer",
                  "format": "int32",
                  "description": "validity"
                },
                "request_type_name": {
                  "type": "string",
                  "description": "request_type_name"
                },
                "decline_reason": {
                  "type": "string",
                  "description": "decline_reason"
                },
                "request_id": {
                  "type": "string",
                  "description": "request_id"
                },
                "request_type_id": {
                  "type": "string",
                  "description": "request_type_id"
                },
                "owner_last_name": {
                  "type": "string",
                  "description": "owner_last_name"
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "verify_recipient": {
                        "type": "boolean",
                        "description": "verify_recipient"
                      },
                      "action_type": {
                        "type": "string",
                        "description": "action_type"
                      },
                      "private_notes": {
                        "type": "string",
                        "description": "private_notes"
                      },
                      "recipient_email": {
                        "type": "string",
                        "description": "recipient_email"
                      },
                      "allow_signing": {
                        "type": "boolean",
                        "description": "allow_signing"
                      },
                      "recipient_phonenumber": {
                        "type": "string",
                        "description": "recipient_phonenumber"
                      },
                      "is_bulk": {
                        "type": "boolean",
                        "description": "is_bulk"
                      },
                      "action_id": {
                        "type": "string",
                        "description": "action_id"
                      },
                      "is_revoked": {
                        "type": "boolean",
                        "description": "is_revoked"
                      },
                      "is_embedded": {
                        "type": "boolean",
                        "description": "is_embedded"
                      },
                      "signing_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "signing_order"
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "recipient_name"
                      },
                      "action_status": {
                        "type": "string",
                        "description": "action_status"
                      },
                      "recipient_countrycode": {
                        "type": "string",
                        "description": "Country Code of the recipient"
                      }
                    }
                  },
                  "description": "actions"
                }
              },
              "description": "requests"
            },
            "notifications": {
              "type": "object",
              "properties": {
                "performed_by_email": {
                  "type": "string",
                  "description": "performed_by_email"
                },
                "performed_at": {
                  "type": "integer",
                  "format": "int32",
                  "description": "performed_at"
                },
                "reason": {
                  "type": "string",
                  "description": "reason"
                },
                "activity": {
                  "type": "string",
                  "description": "activity"
                },
                "operation_type": {
                  "type": "string",
                  "description": "operation_type"
                },
                "action_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "action_id"
                },
                "performed_by_name": {
                  "type": "string",
                  "description": "performed_by_name"
                },
                "signing_order": {
                  "type": "integer",
                  "format": "int32",
                  "description": "signing_order"
                },
                "ip_address": {
                  "type": "string",
                  "description": "ip_address"
                }
              },
              "description": "notifications"
            }
          }
        },
        "description": "Zoho Sign webhooks callback payload"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhook_url": {
                  "type": "string",
                  "description": "webhook_url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "Callback URL"
                },
                "webhook_actions": {
                  "type": "string",
                  "description": "webhook_actions",
                  "title": "Actions",
                  "enum": [
                    "Sign",
                    "Decline",
                    "Forward",
                    "Completed",
                    "Recalled",
                    "Expired",
                    "Viewed"
                  ],
                  "x-ms-visibility": "important"
                },
                "purpose": {
                  "type": "string",
                  "description": "purpose",
                  "title": "Purpose",
                  "default": "Microsoft PowerAutomate",
                  "x-ms-visibility": "internal"
                },
                "appname": {
                  "type": "string",
                  "description": "appname",
                  "title": "Application Name",
                  "default": "Microsoft PowerAutomate",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "appname",
                "purpose",
                "webhook_actions",
                "webhook_url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Zoho Sign Triggers",
        "description": "Register a callback for a particular event",
        "operationId": "zoho-sign-triggers",
        "x-ms-trigger": "single"
      }
    },
    "/requests/{request_id}/fielddata": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "request id details",
            "description": "request id details"
          }
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "document_form_data": {
                  "type": "object",
                  "properties": {
                    "request_name": {
                      "type": "string",
                      "description": "request_name"
                    },
                    "zsdocumentid": {
                      "type": "string",
                      "description": "zsdocumentid"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "signed_time": {
                            "type": "string",
                            "description": "signed_time"
                          },
                          "action_type": {
                            "type": "string",
                            "description": "action_type"
                          },
                          "recipient_email": {
                            "type": "string",
                            "description": "recipient_email"
                          },
                          "recipient_name": {
                            "type": "string",
                            "description": "recipient_name"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field_label": {
                                  "type": "string",
                                  "description": "field_label"
                                },
                                "field_value": {
                                  "type": "string",
                                  "description": "field_value"
                                },
                                "field_name": {
                                  "type": "string",
                                  "description": "field_name"
                                }
                              }
                            },
                            "description": "fields"
                          }
                        }
                      },
                      "description": "actions"
                    }
                  },
                  "description": "document_form_data"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "summary": "Form Data for all completed Requests",
        "description": "Form Data for all completed Requests",
        "operationId": "get-form-data"
      }
    },
    "/requests/{request_id}/recall": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "request_id",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "request id details",
            "description": "request id details"
          }
        ],
        "summary": "Recall a particular document",
        "operationId": "recall-document",
        "description": "Recall a particular document",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/requests/{request_id}/remind": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "request_id",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "request id details",
            "description": "request id details"
          }
        ],
        "summary": "Reminder for recipients",
        "operationId": "remind-document-recipients",
        "description": "Send a reminder to recipients of a particular document.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/requests/{request_id}/delete": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "request_id",
            "type": "integer",
            "required": true,
            "x-ms-url-encoding": "single",
            "x-ms-summary": "request id details",
            "description": "request id details"
          }
        ],
        "summary": "Delete Document",
        "operationId": "delete-document",
        "description": "Delete a particular document",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/templates/{template_id}": {
      "get": {
        "summary": "Get particular template details",
        "description": "Get particular template details",
        "operationId": "get-template-details",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "path",
            "name": "template_id",
            "required": true,
            "x-ms-summary": "List of Templates",
            "description": "List of Templates",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "template_id",
              "value-collection": "templates",
              "value-title": "template_name"
            },
            "type": "string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "abbc"
          }
        }
      }
    },
    "/templates": {
      "get": {
        "summary": "Get list of templates",
        "description": "List of Templates",
        "x-ms-visibility": "important",
        "operationId": "GetTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "templates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "template_id": {
                        "type": "string",
                        "title": "template_id"
                      },
                      "template_name": {
                        "type": "string",
                        "description": "template_name",
                        "title": "template_name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/requests": {
      "post": {
        "operationId": "Create-Document",
        "summary": "Create a document for signing",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "required": true,
            "x-ms-summary": "create a document",
            "description": "create a document"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "request_status": {
                      "type": "string",
                      "description": "Status of the request"
                    },
                    "owner_email": {
                      "type": "string",
                      "description": "Owner email"
                    },
                    "created_time": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Created time"
                    },
                    "document_ids": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "image_string": {
                            "type": "string",
                            "description": "Image string"
                          },
                          "document_name": {
                            "type": "string",
                            "description": "Document name"
                          },
                          "pages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "image_string": {
                                  "type": "string",
                                  "description": "Image string"
                                },
                                "page": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "page"
                                },
                                "is_thumbnail": {
                                  "type": "boolean",
                                  "description": "is_thumbnail"
                                }
                              }
                            },
                            "description": "pages"
                          },
                          "document_size": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Document size"
                          },
                          "document_order": {
                            "type": "string",
                            "description": "Document order"
                          },
                          "total_pages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total pages"
                          },
                          "document_id": {
                            "type": "string",
                            "description": "Document id"
                          }
                        }
                      },
                      "description": "document_ids"
                    },
                    "notes": {
                      "type": "string",
                      "description": "notes"
                    },
                    "self_sign": {
                      "type": "boolean",
                      "description": "self sign"
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "owner id"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description"
                    },
                    "folder_name": {
                      "type": "string",
                      "description": "Folder name"
                    },
                    "request_name": {
                      "type": "string",
                      "description": "Request Name"
                    },
                    "modified_time": {
                      "type": "integer",
                      "format": "int32",
                      "description": "modified time"
                    },
                    "is_deleted": {
                      "type": "boolean",
                      "description": "Status of deletion"
                    },
                    "expiration_days": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Expiration days"
                    },
                    "in_process": {
                      "type": "boolean",
                      "description": "In process"
                    },
                    "is_sequential": {
                      "type": "boolean",
                      "description": "Sequential status"
                    },
                    "request_type_name": {
                      "type": "string",
                      "description": "Request type name"
                    },
                    "owner_first_name": {
                      "type": "string",
                      "description": "Owner first name"
                    },
                    "folder_id": {
                      "type": "string",
                      "description": "Folder id"
                    },
                    "request_id": {
                      "type": "string",
                      "description": "Request id"
                    },
                    "request_type_id": {
                      "type": "string",
                      "description": "Request type id"
                    },
                    "owner_last_name": {
                      "type": "string",
                      "description": "Owner Last name"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "verify_recipient": {
                            "type": "boolean",
                            "description": "Verify recipient"
                          },
                          "action_type": {
                            "type": "string",
                            "description": "Action type"
                          },
                          "private_notes": {
                            "type": "string",
                            "description": "Private notes"
                          },
                          "recipient_name": {
                            "type": "string",
                            "description": "Recipient name"
                          },
                          "recipient_email": {
                            "type": "string",
                            "description": "Recipient email"
                          },
                          "verification_type": {
                            "type": "string",
                            "description": "Verification type"
                          },
                          "allow_signing": {
                            "type": "boolean",
                            "description": "Allow signing"
                          },
                          "recipient_phonenumber": {
                            "type": "string",
                            "description": "Recipient Phonenumber"
                          },
                          "action_id": {
                            "type": "string",
                            "description": "Action id"
                          },
                          "signing_order": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Signing Order"
                          },
                          "fields": {
                            "type": "array",
                            "items": {},
                            "description": "fields"
                          },
                          "action_status": {
                            "type": "string",
                            "description": "Status of action"
                          },
                          "recipient_countrycode": {
                            "type": "string",
                            "description": "Recipient countrycode"
                          }
                        }
                      },
                      "description": "actions"
                    },
                    "sign_percentage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Sign percentage"
                    }
                  },
                  "description": "requests"
                },
                "message": {
                  "type": "string",
                  "description": "Message"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "charset": {
                "description": "charset",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "description": "An action to create a document for signing by uploading a file."
      }
    },
    "/requests/{RequestId}": {
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "UpdateDocument",
        "summary": "Update the properties of a created request",
        "description": "Update the properties of a created request",
        "parameters": [
          {
            "name": "RequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the request to be updated.",
            "x-ms-summary": "RequestId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "object",
                  "properties": {
                    "request_type_id": {
                      "type": "string",
                      "description": "request_type_id",
                      "title": "Document Type",
                      "x-ms-dynamic-values": {
                        "operationId": "GetDocumentTypelList",
                        "value-path": "request_type_id",
                        "value-collection": "request_types",
                        "value-title": "request_type_name"
                      }
                    },
                    "request_name": {
                      "type": "string",
                      "description": "Name of the document (request)",
                      "title": "Document Name"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recipient_name": {
                            "type": "string",
                            "description": "Recipient name",
                            "title": "Recipient Name"
                          },
                          "recipient_email": {
                            "type": "string",
                            "description": "Recipient email",
                            "title": "Recipient Email"
                          },
                          "recipient_phonenumber": {
                            "type": "string",
                            "description": "Phone Number of recipient for SMS mode of authentication.",
                            "title": "Phone Number"
                          },
                          "recipient_countrycode": {
                            "type": "string",
                            "description": "Country Code of recipient's phone number for SMS mode of authentication.",
                            "title": "Country Code"
                          },
                          "action_type": {
                            "type": "string",
                            "description": "Select whether the recipient is a Signer or a viewer or an approver or an inpersonSigner.",
                            "title": "ActionType",
                            "enum": [
                              "SIGN",
                              "VIEW",
                              "INPERSONSIGN",
                              "APPROVER"
                            ],
                            "default": "SIGN"
                          },
                          "private_notes": {
                            "type": "string",
                            "description": "Private notes",
                            "title": "Private Notes"
                          },
                          "signing_order": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Signing order",
                            "title": "Signing Order"
                          },
                          "verify_recipient": {
                            "type": "boolean",
                            "description": "Whether the recipient needs to be verified by one of the authentication modes.",
                            "title": "Need Authentication For Recipient",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "verification_type": {
                            "type": "string",
                            "description": "Verification type",
                            "title": "Authentication Delivery Type",
                            "enum": [
                              "NONE",
                              "OFFLINE",
                              "EMAIL",
                              "SMS"
                            ],
                            "default": "NONE"
                          },
                          "verification_code": {
                            "type": "string",
                            "description": "6 digit Verification Code for OFFLINE verification mode.",
                            "title": "Verification Code"
                          }
                        }
                      },
                      "description": "actions"
                    },
                    "expiration_days": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of days left for the document to get expired.",
                      "title": "Days to complete",
                      "x-ms-visibility": "advanced",
                      "default": 15
                    },
                    "is_sequential": {
                      "type": "boolean",
                      "description": "Allow recipients to sign in the specified order.",
                      "title": "Send in order",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "email_reminders": {
                      "type": "boolean",
                      "description": "Enable periodic reminders for the recipients to sign the document.",
                      "title": "Automatic reminders",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced",
                      "default": true
                    },
                    "reminder_period": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Specify the time interval at which a reminder for signing is to be sent to the recipients.",
                      "title": "Send a remainder every - (days)",
                      "x-ms-visibility": "advanced",
                      "default": 5
                    },
                    "folder_id": {
                      "type": "string",
                      "description": "folder unique id",
                      "title": "Folder",
                      "x-ms-dynamic-values": {
                        "operationId": "GetFolderList",
                        "value-path": "folder_id",
                        "value-collection": "folders",
                        "value-title": "folder_name"
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes for all recipients.",
                      "title": "Notes",
                      "format": "html"
                    }
                  },
                  "description": "requests",
                  "required": [
                    "request_name"
                  ]
                }
              },
              "required": [
                "requests"
              ]
            }
          }
        ]
      }
    },
    "/requests/{RequestId}/submit": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "SendSignRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Send the uploaded document out for signature",
        "operationId": "SendSignRequest",
        "parameters": [
          {
            "name": "RequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the request(document) to be sent out for signature.",
            "x-ms-summary": "RequestId"
          }
        ]
      }
    },
    "/folders": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "folder_name": {
                        "type": "string",
                        "description": "folder_name"
                      },
                      "folder_id": {
                        "type": "string",
                        "description": "folder unique id"
                      }
                    }
                  },
                  "description": "folders"
                }
              }
            }
          }
        },
        "summary": "GetFolderList",
        "description": "Get the list of folders",
        "operationId": "GetFolderList",
        "parameters": []
      }
    },
    "/requesttypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "request_types": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "request_type_description": {
                        "type": "string",
                        "description": "request_type description"
                      },
                      "request_type_name": {
                        "type": "string",
                        "description": "request_type name"
                      },
                      "request_type_id": {
                        "type": "string",
                        "description": "request_type unique id"
                      }
                    }
                  },
                  "description": "request_types"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "summary": "GetDocumentTypeList",
        "description": "Get the list of  document types available.",
        "operationId": "GetDocumentTypelList",
        "parameters": []
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.zoho.com/oauth/v2/auth",
      "tokenUrl": "https://accounts.zoho.com/oauth/v2/token",
      "scopes": {
        "ZohoSign.documents.all": "ZohoSign.documents.all",
        "ZohoSign.account.all": "ZohoSign.account.all",
        "ZohoSign.templates.all": "ZohoSign.templates.all"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "ZohoSign.documents.all",
        "ZohoSign.account.all",
        "ZohoSign.templates.all"
      ]
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.zoho.com/sign/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.zoho.com/privacy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ]
}