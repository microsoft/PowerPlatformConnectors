{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "HrFlow.ai",
    "description": "HrFlow.ai is the 1st multi-layer AI powered API that brings intelligence to your HR Data and bridges the gap between all your data Sources and Destinations.",
    "contact": {
        "name" : "HrFlow.ai",
        "url" : "https://www.hrflow.ai",
        "email" : "support@riminder.net"
      }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.hrflow.ai"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://security.hrflow.ai/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Website"
    }
  ],
  "host": "api.hrflow.ai",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/profile/parsing/file": {
      "post": {
        "summary": "Post a document Profile for sync or async parsing",
        "description": "The Profile API helps you connect HrFlow.ai with the applications of your choice. Mainly, the API allows you to POST profiles and GET outbound data after the processing of choice is done.",
        "operationId": "PostProfile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-email",
            "in": "header",
            "required": true,
            "type": "string",
            "format": "email",
            "default": "",
            "description": "HrFlow.ai user's email.",
            "x-ms-summary": "x-user-email."
          },
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "required": true,
            "description": "The file to upload.",
            "x-ms-summary": "file.",
            "x-ms-visibility": "important"
          },
          {
            "in": "formData",
            "name": "source_key",
            "type": "string",
            "required": true,
            "description": "The key of the source in which the Profile will be added.",
            "x-ms-summary": "source_key.",
            "x-ms-visibility": "important"
          },
          {
            "in": "formData",
            "name": "key",
            "type": "string",
            "required": false,
            "description": "Profile's unique identifier it is used when you want to override an existing Parsing object.",
            "x-ms-summary": "key.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "reference",
            "type": "string",
            "required": false,
            "description": "Profile's reference it is a unique value for a given source.",
            "x-ms-summary": "reference.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "created_at",
            "type": "string",
            "format": "date-time",
            "required": false,
            "description": "The Creation datetime in iso format",
            "x-ms-summary": "created_at.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "sync_parsing",
            "type": "integer",
            "format": "int32",
            "required": false,
            "description": "To enable sync parsing you set this value to 1 otherwise the value is 0.",
            "x-ms-summary": "sync_parsing.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "sync_parsing_indexing",
            "type": "integer",
            "format": "int32",
            "required": false,
            "description": "This parameter is used when you are using sync parsing it enables Profile indexing so this object will be available using search engine. The default value is 0",
            "x-ms-summary": "sync_parsing_indexing.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "webhook_parsing_sending",
            "type": "integer",
            "format": "int32",
            "required": false,
            "description": "To enable the reception of webhook notification after parsing and before indexing you set the value to 1. The default value is 0.",
            "x-ms-summary": "webhook_parsing_sending.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "labels",
            "type": "string",
            "required": false,
            "description": "The Profile's labels to include with the object.",
            "x-ms-summary": "labels.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "tags",
            "type": "string",
            "required": false,
            "description": "The Profile's tags aims to mark uploaded object.",
            "x-ms-summary": "tags.",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "formData",
            "name": "metadatas",
            "type": "string",
            "required": false,
            "description": "The Profile's metadata.",
            "x-ms-summary": "metadatas.",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "201": {
            "description": "Profile successfully Created using sync parsing.",
            "schema": {
              "$ref": "#/definitions/ProfileSyncParsingResponse"
            }
          },
          "202": {
            "description": "Profile successfully Created using async parsing.",
            "schema": {
              "$ref": "#/definitions/ProfileAsyncParsingResponse"
            }
          },
          "401": {
            "description": "Invalid secret key.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          }
        }
      }
    },
    "/v1/document/parsing": {
      "post": {
        "summary": "Post an HR document for parsing",
        "description": "The Document API is a general purpose API design for real-time processing of HR documents.",
        "operationId": "DocumentParsing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-email",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "",
            "description": "HrFlow.ai user's email.",
            "x-ms-summary": "HrFlow.ai user's email."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Text to be parsed.",
                  "x-ms-summary": "Text to be parsed.",
                  "title": "text"
                }
              },
              "default": {
                "text": "Text to be parsed"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Parsing is succuessfully generated,",
            "schema": {
              "$ref": "#/definitions/DocumentParsingResponse"
            }
          },
          "401": {
            "description": "Invalid secret key.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Date": {
      "type": "object",
      "properties": {
        "iso8601": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime in iso8601 format.",
          "title": "iso8601"
        },
        "text": {
          "type": "string",
          "description": "The parsed date as found in the document.",
          "title": "text"
        },
        "timestamp": {
          "type": "integer",
          "description": "The date as timestamp. Measured in seconds since the Unix epoch.",
          "title": "timestamp"
        }
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string",
          "description": "The person's full name.",
          "title": "full_name"
        },
        "first_name": {
          "type": "string",
          "description": "The person's first name.",
          "title": "first_name"
        },
        "last_name": {
          "type": "string",
          "description": "The person's last name.",
          "title": "last_name"
        }
      }
    },
    "Skill": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The skill's name.",
          "title": "name"
        },
        "type": {
          "type": "string",
          "description": "Either hard or soft.",
          "title": "type"
        },
        "value": {
          "type": "integer",
          "description": "It measures the confidence level of expertise.",
          "title": "value"
        }
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The language's name.",
          "title": "name"
        },
        "value": {
          "type": "integer",
          "description": "The language's value measuring language's expertise'.",
          "title": "value"
        }
      }
    },
    "Interest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The interest's name.",
          "title": "name"
        },
        "value": {
          "type": "integer",
          "description": "The interest's value it measures the confidence level of expertise.",
          "title": "value"
        }
      }
    },
    "Label": {
      "type": "object",
      "properties": {
        "job_key": {
          "type": "string",
          "description": "The Job's key that you want to record the stage.",
          "title": "name"
        },
        "job_reference": {
          "type": "string",
          "description": "The Job's reference.",
          "title": "job_reference"
        },
        "stage": {
          "type": "string",
          "description": "The stage (ie. yes/no/later/new) for the given job.",
          "title": "stage"
        },
        "rating": {
          "type": "string",
          "description": "The interest's value it measures the confidence level of expertise.",
          "title": "rating"
        },
        "date_stage": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the stage was last updated.",
          "title": "date_stage"
        },
        "date_rating": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the rating was last updated.",
          "title": "date_rating"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The tag's name.",
          "title": "name"
        },
        "value": {
          "type": "string",
          "description": "The tag's value.",
          "title": "value"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The metadata's name.",
          "title": "name"
        },
        "value": {
          "type": "string",
          "description": "The metadata's value.",
          "title": "value"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The detected location information as found in the document.",
          "title": "text"
        },
        "lat": {
          "type": "string",
          "description": "The location's latitude.",
          "title": "lat"
        },
        "lng": {
          "type": "string",
          "description": "The location's longitude.",
          "title": "lng"
        },
        "geojson": {
          "type": "object",
          "description": "The geojson object gives more details about location street number / city / country ....",
          "title": "geojson"
        }
      }
    },
    "Education": {
      "type": "object",
      "properties": {
        "content_uid": {
          "type": "string",
          "description": "The object's content uid.",
          "title": "content_uid"
        },
        "title": {
          "type": "string",
          "description": "The education's title.",
          "title": "title"
        },
        "school": {
          "type": "string",
          "description": "The education's school.",
          "title": "school"
        },
        "description": {
          "type": "string",
          "description": "The education's description.",
          "title": "description"
        },
        "date_start": {
          "$ref": "#/definitions/Date"
        },
        "date_end": {
          "$ref": "#/definitions/Date"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "Experience": {
      "type": "object",
      "properties": {
        "content_uid": {
          "type": "string",
          "description": "The experience's content uid.",
          "title": "content_uid"
        },
        "title": {
          "type": "string",
          "description": "The experience's title.",
          "title": "title"
        },
        "company": {
          "type": "string",
          "description": "The experience's school.",
          "title": "company"
        },
        "description": {
          "type": "string",
          "description": "The experience's description.",
          "title": "description"
        },
        "date_start": {
          "$ref": "#/definitions/Date"
        },
        "date_end": {
          "$ref": "#/definitions/Date"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "alt": {
          "type": "string",
          "description": "The file hash id the value is calculated based on the file's binary.",
          "title": "content_uid"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the object was last updated.",
          "title": "updated_at"
        },
        "created_at": {
          "type": "string",
          "description": "Time at which the object was created.",
          "title": "created_at"
        },
        "extension": {
          "type": "string",
          "description": "The attachment's extension.",
          "title": "extension"
        },
        "file_name": {
          "type": "string",
          "description": "The attachment's name.",
          "title": "file_name"
        },
        "file_size": {
          "type": "string",
          "description": "The attachment's size.",
          "title": "file_size"
        },
        "original_file_name": {
          "type": "string",
          "description": "The attachment's original name.",
          "title": "original_file_name"
        },
        "public_url": {
          "type": "string",
          "description": "The attachment's url One of \"resume\"/\"cover\"/\"other\".",
          "title": "public_url"
        },
        "type": {
          "type": "string",
          "description": "The attachment's type its value can be one from this set (resume/cover/other).",
          "title": "type"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The object's id.",
          "title": "id"
        },
        "key": {
          "type": "string",
          "description": "Unique identifier for the object.",
          "title": "key"
        },
        "reference": {
          "type": "string",
          "description": "The profile's reference it must be unique for a given source.",
          "title": "reference"
        },
        "archive": {
          "type": "string",
          "format": "date-time",
          "description": "The date when a profile is archived if the profile is not archived archive will be null.",
          "title": "archive"
        },
        "consent_algorithmic": {
          "type": "object",
          "description": "The user's algorithmic consent it tells to the algorithm what are the allowed actions in order to use personal data.",
          "title": "consent_algorithmic"
        },
        "source": {
          "type": "object",
          "description": "The source to which the profile belongs.",
          "title": "source"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the object was last updated.",
          "title": "updated_at"
        },
        "created_at": {
          "type": "string",
          "description": "Time at which the object was created.",
          "title": "created_at"
        },
        "info": {
          "type": "object",
          "description": "The Profile's info it contains all personal information such as first/last name email phone.",
          "title": "info"
        },
        "text": {
          "type": "string",
          "description": "The Profile's text it contains a long resume of a profile it is generated based on parsed text.",
          "title": "text"
        },
        "text_language": {
          "type": "string",
          "description": "The original language of the document.",
          "title": "text_language"
        },
        "educations": {
          "type": "array",
          "description": "A list of Educations object education is identified by a unique key.",
          "title": "educations",
          "items": {
            "$ref": "#/definitions/Education"
          }
        },
        "educations_duration": {
          "type": "number",
          "description": "Education's duration.",
          "title": "educations_duration"
        },
        "experiences": {
          "type": "array",
          "description": "A list of Experiences object experience is identified by a unique key.",
          "title": "experiences",
          "items": {
            "$ref": "#/definitions/Experience"
          }
        },
        "experiences_duration": {
          "type": "number",
          "description": "Experience's duration it calculates the profile's seniority.",
          "title": "experiences_duration"
        },
        "attachments": {
          "type": "array",
          "description": "A list of profile's Attachments object.",
          "title": "attachments",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "skills": {
          "type": "array",
          "description": "A list of profile's Skills object.",
          "title": "skills",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "languages": {
          "type": "array",
          "description": "A list of profile's Languagse object.",
          "title": "languages",
          "items": {
            "$ref": "#/definitions/Language"
          }
        },
        "interests": {
          "type": "array",
          "description": "A list of profile's Interests object.",
          "title": "interests",
          "items": {
            "$ref": "#/definitions/Interest"
          }
        },
        "labels": {
          "type": "array",
          "description": "A list of Labels object that you can attach to an object.",
          "title": "labels",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "tags": {
          "type": "array",
          "description": "A list of Tags object that you can include with an object. This can be helpful in attaching tags to a profile.",
          "title": "tags",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "metadatas": {
          "type": "array",
          "description": "A list of Metadata object that you can include with an object. This can be useful for storing additional information about the object in a structured forma.",
          "title": "metadatas",
          "items": {
            "$ref": "#/definitions/Metadata"
          }
        }
      }
    },
    "Parsing": {
      "type": "object",
      "properties": {
        "content_uid": {
          "type": "string",
          "description": "The object's content uid.",
          "title": "content_uid"
        },
        "key": {
          "type": "string",
          "description": "Unique identifier for the object.",
          "title": "key"
        },
        "file name": {
          "type": "string",
          "description": "The original uploaded file name.",
          "title": "file name"
        },
        "file size": {
          "type": "string",
          "description": "The original uploaded file size.",
          "title": "file size"
        },
        "persons": {
          "type": "array",
          "description": "A list of all parsed Persons.",
          "title": "persons",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "emails": {
          "type": "array",
          "description": "This field records all existing emails in a document..",
          "title": "emails",
          "items": {
            "type": "string",
            "format": "email"
          }
        },
        "phones": {
          "type": "array",
          "description": "Time at which the object was last updated.",
          "title": "phones",
          "items": {
            "type": "string"
          }
        },
        "birthdate": {
          "$ref": "#/definitions/Date"
        },
        "certifications": {
          "type": "array",
          "description": "A list of Profile's certifications.",
          "title": "certifications",
          "items": {
            "type": "string"
          }
        },
        "courses": {
          "type": "array",
          "description": "A list of followed courses.",
          "title": "courses",
          "items": {
            "type": "string"
          }
        },
        "tasks": {
          "type": "array",
          "description": "A list of Profile's tasks through every educations / experiences.",
          "title": "tasks",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "images": {
          "type": "array",
          "description": "A list of URLs for all detected images.",
          "title": "images",
          "items": {
            "type": "string"
          }
        },
        "picture": {
          "type": "string",
          "description": "The url of profile's picture.",
          "title": "picture"
        },
        "urls": {
          "type": "array",
          "description": "The urls for linkedin / twitter / facebook / github if they exist.",
          "title": "urls",
          "items": {
            "type": "object"
          }
        },
        "gender": {
          "type": "string",
          "description": "The Profile's gender.",
          "title": "gender"
        },
        "driving_license": {
          "type": "string",
          "description": "The Profile's driving license if exits otherwise the default value is null.",
          "title": "driving_license"
        },
        "summary": {
          "type": "string",
          "description": "The Profile's summary.",
          "title": "summary"
        },
        "text": {
          "type": "string",
          "description": "The Profile's text it contains a long resume of a profile it is generated based on parsed text.",
          "title": "text"
        },
        "text_language": {
          "type": "string",
          "description": "The original language of the document.",
          "title": "text_language"
        },
        "educations": {
          "type": "array",
          "description": "A list of Educations object education is identified by a unique key.",
          "title": "educations",
          "items": {
            "$ref": "#/definitions/Education"
          }
        },
        "educations_duration": {
          "type": "number",
          "description": "Education's duration.",
          "title": "educations_duration"
        },
        "experiences": {
          "type": "array",
          "description": "A list of Experiences object experience is identified by a unique key.",
          "title": "experiences",
          "items": {
            "$ref": "#/definitions/Experience"
          }
        },
        "experiences_duration": {
          "type": "number",
          "description": "Experience's duration it calculates the profile's seniority.",
          "title": "experiences_duration"
        },
        "skills": {
          "type": "array",
          "description": "A list of profile's Skills object.",
          "title": "skills",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "languages": {
          "type": "array",
          "description": "A list of profile's Languagse object.",
          "title": "languages",
          "items": {
            "$ref": "#/definitions/Language"
          }
        },
        "interests": {
          "type": "array",
          "description": "A list of profile's Interests object.",
          "title": "interests",
          "items": {
            "$ref": "#/definitions/Interest"
          }
        },
        "processed_pages": {
          "type": "integer",
          "format": "int32",
          "description": "Number of processed pages.",
          "title": "processed_pages"
        },
        "total_pages": {
          "type": "integer",
          "format": "int32",
          "description": "Document total pages.",
          "title": "total_pages"
        }
      }
    },
    "Entity": {
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "end.",
          "title": "end"
        },
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "start.",
          "title": "start"
        },
        "label": {
          "type": "string",
          "description": "label.",
          "title": "label"
        }
      }
    },
    "ProfileSyncParsingResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code.",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "Profile parsed successfully. Profile extraction finished x.xx seconds.",
          "title": "message"
        },
        "data": {
          "type": "object",
          "properties": {
            "parsing": {
              "$ref": "#/definitions/Parsing"
            },
            "profile": {
              "$ref": "#/definitions/Profile"
            }
          }
        }
      }
    },
    "ProfileAsyncParsingResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code.",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "Your profile as been sent successfully to the Parsing Queue.",
          "title": "message"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DocumentParsingResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code.",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "Parsing results.",
          "title": "message"
        },
        "data": {
          "type": "object",
          "properties": {
            "ents": {
              "type": "array",
              "description": "All parsed entities.",
              "title": "ents",
              "items": {
                "$ref": "#/definitions/Entity"
              }
            },
            "text": {
              "type": "string",
              "description": "Original text.",
              "title": "text"
            }
          }
        }
      }
    },
    "Unauthorized": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code.",
          "title": "code"
        },
        "message": {
          "type": "string",
          "description": "Unauthorized. Invalid secret key xxxx for permission write.",
          "title": "message"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "x-api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}