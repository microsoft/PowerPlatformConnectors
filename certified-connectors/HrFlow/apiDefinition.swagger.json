{
  "swagger": "2.0",
  "info": {
    "version": "1.1.0",
    "title": "HrFlow.ai",
    "description": "HrFlow.ai is the 1st multi-layer AI powered API that brings intelligence to your HR Data and bridges the gap between all your data Sources and Destinations.",
    "contact": {
      "name": "HrFlow.ai",
      "url": "https://www.hrflow.ai",
      "email": "support@riminder.net"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.hrflow.ai"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://security.hrflow.ai/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Website"
    }
  ],
  "host": "api.hrflow.ai",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/text/parsing": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Text parsing results"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "end": {
                              "type": "integer",
                              "format": "int32",
                              "description": "end"
                            },
                            "label": {
                              "type": "string",
                              "description": "label"
                            },
                            "start": {
                              "type": "integer",
                              "format": "int32",
                              "description": "start"
                            }
                          }
                        },
                        "description": "entities"
                      },
                      "parsing": {
                        "type": "object",
                        "properties": {
                          "certifications": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "certifications"
                          },
                          "companies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "companies"
                          },
                          "courses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "courses"
                          },
                          "dates": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "dates"
                          },
                          "durations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "durations"
                          },
                          "education_titles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "education_titles"
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "emails"
                          },
                          "first_names": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "first_names"
                          },
                          "interests": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "interests"
                          },
                          "job_titles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "job_titles"
                          },
                          "languages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "languages"
                          },
                          "last_names": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "last_names"
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "locations"
                          },
                          "phones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "phones"
                          },
                          "schools": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "schools"
                          },
                          "skills_hard": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "skills_hard"
                          },
                          "skills_soft": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "skills_soft"
                          },
                          "tasks": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "tasks"
                          }
                        },
                        "description": "parsing"
                      },
                      "text": {
                        "type": "string",
                        "description": "text"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Parse a Raw Text",
        "description": "Extracts over 50 data point from any raw input text.",
        "operationId": "TextParsingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "texts"
              ],
              "properties": {
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "x-ms-summary": "Texts",
                  "description": "Each text can be: the full text of a Job, a Resume, a Profile, an experience, a Job and more. For **optimum speed** the amount of given texts should be less than 16 and a multiple of 2.\n",
                  "example": [
                    "A professional responsible for overseeing a team of salespeople and sales",
                    "Heading an enterprise data science division requires strong skills in NLP and ML"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/v1/text/tagging": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Tagging predictions ended successfully in 1.63 seconds!"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "ids"
                      },
                      "predictions": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        },
                        "description": "predictions"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "tags"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Tag a Text",
        "description": "Predicts tags for a text with our library of AI algorithms.",
        "operationId": "TextTaggingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "algorithm_key",
                "texts"
              ],
              "properties": {
                "algorithm_key": {
                  "type": "string",
                  "pattern": "^[a-f0-9]{40}$",
                  "x-ms-summary": "Algorithm Key",
                  "description": "AI tagging algorithm you want to apply to the input text. More information about each tagger on [here](https://developers.hrflow.ai/reference/tag-a-text).",
                  "default": "tagger-hrflow-labels",
                  "enum": [
                    "tagger-rome-family",
                    "tagger-rome-subfamily",
                    "tagger-rome-category",
                    "tagger-rome-jobtitle",
                    "tagger-hrflow-skills",
                    "tagger-hrflow-labels"
                  ]
                },
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-ms-summary": "Texts",
                  "description": "Each text can be: the full text of a Job, a Resume, a Profile, an experience, a Job and more. For **optimum speed** the amount of given texts should be less than 16 and a multiple of 2.\n",
                  "example": [
                    "Data Insights Corp. is seeking a Senior Data Scientist for a contract-to-direct position. You will be responsible for designing and implementing advanced machine learning algorithms and playing a key role in shaping our data science initiatives. The CDI arrangement offers a pathway to a full-time role",
                    "DataTech Solutions is hiring a Data Scientist for a fixed-term contract of 12 months. You will work on various data analysis and modeling projects and assisting in short-term projects; with the possibility of extension or permanent roles"
                  ]
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of output tags if algorithm_key =\"tagger-hrflow-labels\".",
                  "x-ms-summary": "Labels",
                  "example": [
                    "CDI",
                    "CDD"
                  ]
                },
                "context": {
                  "type": "string",
                  "x-ms-summary": "Context",
                  "description": "A context for given labels if algorithm_key=\"tagger-hrflow-labels\".",
                  "example": "The CDI is a Contrat \u00e0 Dur\u00e9e Indetermin\u00e9e - essentially an open-ended or permanent employment contract.  The CDD is a Contrat \u00e0 Dur\u00e9e Determin\u00e9e - a fixed-term or temporary employment contract.  These are the two most common types but by no means the only form of French employment contract. The contracts have to be drawn up by the employer, who must ensure that it's legally the correct type for the circumstances."
                },
                "output_lang": {
                  "type": "string",
                  "description": "Language of the returned tags.",
                  "x-ms-summary": "Output Language",
                  "default": "en",
                  "enum": [
                    "en",
                    "fr"
                  ]
                },
                "top_n": {
                  "type": "integer",
                  "description": "Number of predicted tags that will be returned.",
                  "x-ms-summary": "N",
                  "default": 1
                }
              }
            }
          }
        ]
      }
    },
    "/v1/text/imaging": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Image generation ended successfully."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "description": "image_url"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Generate a Job Portrait",
        "description": "Generates an image from a job description.",
        "operationId": "TextImagingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "x-ms-summary": "Job title",
                  "example": "data scientist",
                  "description": "Job text that describes the image to be generated. Ideally it should include a \"Job title\"."
                },
                "width": {
                  "type": "integer",
                  "x-ms-summary": "Image width",
                  "description": "Width of the image. The width of the image should be among the following pixel values: **[256, 512].**",
                  "default": 256,
                  "enum": [
                    256,
                    512
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/v1/text/linking": {
      "post": {
        "responses": {
          "default": {
            "description": "default"
          }
        },
        "summary": "Find Synonyms for a Word",
        "description": "Finds synonyms or the top n most similar words to a word.",
        "operationId": "TextLinkingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "word"
              ],
              "properties": {
                "word": {
                  "type": "string",
                  "example": "machine learning",
                  "description": "Target input word",
                  "x-ms-summary": "Word"
                },
                "top_n": {
                  "type": "integer",
                  "description": "Number of similar words",
                  "x-ms-summary": "N",
                  "default": 5
                }
              }
            }
          }
        ]
      }
    },
    "/v1/text/geocoding": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Geocoding Text finished in 0.24 seconds."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "object",
                        "properties": {
                          "category": {
                            "type": "string",
                            "description": "category"
                          },
                          "city": {
                            "type": "string",
                            "description": "city"
                          },
                          "city_district": {
                            "type": "string",
                            "description": "city_district"
                          },
                          "country": {
                            "type": "string",
                            "description": "country"
                          },
                          "country_region": {
                            "type": "string",
                            "description": "country_region"
                          },
                          "entrance": {
                            "type": "string",
                            "description": "entrance"
                          },
                          "house": {
                            "type": "string",
                            "description": "house"
                          },
                          "house_number": {
                            "type": "string",
                            "description": "house_number"
                          },
                          "island": {
                            "type": "string",
                            "description": "island"
                          },
                          "level": {
                            "type": "string",
                            "description": "level"
                          },
                          "near": {
                            "type": "string",
                            "description": "near"
                          },
                          "po_box": {
                            "type": "string",
                            "description": "po_box"
                          },
                          "postcode": {
                            "type": "string",
                            "description": "postcode"
                          },
                          "road": {
                            "type": "string",
                            "description": "road"
                          },
                          "staircase": {
                            "type": "string",
                            "description": "staircase"
                          },
                          "state": {
                            "type": "string",
                            "description": "state"
                          },
                          "state_district": {
                            "type": "string",
                            "description": "state_district"
                          },
                          "suburb": {
                            "type": "string",
                            "description": "suburb"
                          },
                          "text": {
                            "type": "string",
                            "description": "text"
                          },
                          "unit": {
                            "type": "string",
                            "description": "unit"
                          },
                          "world_region": {
                            "type": "string",
                            "description": "world_region"
                          }
                        },
                        "description": "fields"
                      },
                      "gmaps": {
                        "type": "string",
                        "description": "gmaps"
                      },
                      "is_correct": {
                        "type": "boolean",
                        "description": "is_correct"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "lat"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "lng"
                      },
                      "text": {
                        "type": "string",
                        "description": "text"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Geocode a Location",
        "description": "Retrieves geojson data for any textual location input.",
        "operationId": "TextGeocodingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "texts"
              ],
              "properties": {
                "texts": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-ms-summary": "Location"
                  },
                  "x-ms-summary": "Texts",
                  "description": "Geocode a list of locations. For **optimum speed** the amount of given texts should be less than 16 and a multiple of 2.",
                  "example": [
                    "112 avenue charles de gaulle 92200 neuilly-sur-seine",
                    "7 rue 4 septembre Paris"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "/v1/text/ocr": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Document OCR finished in 0.93 seconds."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "text_language": {
                      "type": "string",
                      "description": "text_language"
                    },
                    "text": {
                      "type": "string",
                      "description": "text"
                    },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "page_number": {
                            "type": "integer",
                            "format": "int32",
                            "description": "page_number"
                          },
                          "sections": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "sections"
                          }
                        }
                      },
                      "description": "pages"
                    },
                    "base64_pdf": {
                      "type": "string",
                      "description": "base64_pdf"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "OCR a Text",
        "description": "Extracts text from a document across all formats.",
        "operationId": "TextOCRPost",
        "x-ms-visibility": "important",
        "tags": [
          "TEXT API"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "file",
            "type": "file",
            "in": "formData",
            "required": true,
            "x-ms-summary": "File",
            "description": "File in binary format"
          }
        ]
      }
    },
    "/v1/text/embedding": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Text Encoder results"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "embedding": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        },
                        "description": "embedding"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Vectorize a Text",
        "description": "This endpoint allows you to vectorize a text.",
        "operationId": "TextEmbeddingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "TEXT API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "x-ms-summary": "Text",
                  "description": "Text to be vectorized",
                  "example": "I love using embeddings in order do transfer learning with my AI algorithms"
                }
              }
            }
          }
        ]
      }
    },
    "/v1/profile/indexing": {
      "post": {
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Profile created"
                },
                "data": {
                  "$ref": "#/definitions/ResponseProfile"
                }
              }
            }
          }
        },
        "summary": "Index a Profile into a Source",
        "description": "This endpoint allows you to Index a Profile object.",
        "operationId": "ProfileIndexingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "PROFILE API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "source_key",
                "profile"
              ],
              "properties": {
                "source_key": {
                  "$ref": "#/definitions/SourceKey"
                },
                "profile": {
                  "$ref": "#/definitions/Profile"
                }
              }
            }
          }
        ]
      }
    },
    "/v1/profile/parsing/file": {
      "post": {
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Profile parsed successfully. Profile extraction finished in 1.94 seconds."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "profile": {
                      "$ref": "#/definitions/ResponseProfile"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Parse a Resume into a Source",
        "description": "Parses a resume and creates a profile from it.",
        "operationId": "ProfileParsingFilePost",
        "x-ms-visibility": "important",
        "tags": [
          "PROFILE API"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "source_key",
            "in": "formData",
            "type": "string",
            "pattern": "^[a-f0-9]{40}$",
            "required": true,
            "x-ms-summary": "Source Key",
            "description": "The key of the source attached to the profile"
          },
          {
            "name": "file",
            "type": "file",
            "in": "formData",
            "required": true,
            "x-ms-summary": "File",
            "description": "Profile's resume file in binary format"
          },
          {
            "name": "content_type",
            "in": "formData",
            "type": "string",
            "x-ms-summary": "File extension",
            "x-ms-visibility": "advanced",
            "description": "The file content type"
          },
          {
            "name": "key",
            "in": "formData",
            "type": "string",
            "pattern": "^[a-f0-9]{40}$",
            "x-ms-summary": "Key",
            "x-ms-visibility": "advanced",
            "description": "Identification key of the profile, it is used for overriding"
          },
          {
            "name": "reference",
            "in": "formData",
            "type": "string",
            "x-ms-summary": "Reference",
            "x-ms-visibility": "advanced",
            "description": "Custom identifier of the profile"
          },
          {
            "name": "tags",
            "in": "formData",
            "x-ms-summary": "Tags",
            "x-ms-visibility": "advanced",
            "description": "[{\"name\": \"xxx\", \"value\": \"yyy\"}]",
            "type": "string"
          },
          {
            "name": "metadatas",
            "in": "formData",
            "x-ms-summary": "Metadatas",
            "x-ms-visibility": "advanced",
            "description": "[{\"name\": \"xxx\", \"value\": \"yyy\"}]",
            "type": "string"
          },
          {
            "name": "created_at",
            "in": "formData",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Created at",
            "x-ms-visibility": "advanced",
            "description": "Creation date (iso8601)"
          },
          {
            "name": "debugger",
            "in": "formData",
            "type": "integer",
            "default": 0,
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Debugger",
            "x-ms-visibility": "advanced",
            "description": "Select **1** to get the raw parsing object"
          }
        ]
      }
    },
    "/v1/profiles/searching": {
      "get": {
        "responses": {
          "default": {
            "description": "default"
          }
        },
        "summary": "Search Profiles indexed in Sources",
        "description": "Searches profiles indexed in sources.",
        "operationId": "ProfilesSearchingGet",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "tags": [
          "PROFILE API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "$ref": "#/parameters/SourceKeys"
          },
          {
            "$ref": "#/parameters/Stage"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/OrderBy"
          },
          {
            "$ref": "#/parameters/SortBy"
          },
          {
            "$ref": "#/parameters/CreatedAtMin"
          },
          {
            "$ref": "#/parameters/CreatedAtMax"
          },
          {
            "$ref": "#/parameters/Name"
          },
          {
            "$ref": "#/parameters/Email"
          },
          {
            "$ref": "#/parameters/LocationGeopoint"
          },
          {
            "$ref": "#/parameters/LocationDistance"
          },
          {
            "$ref": "#/parameters/SummaryKeywords"
          },
          {
            "$ref": "#/parameters/TextKeywords"
          },
          {
            "$ref": "#/parameters/ExperienceKeywords"
          },
          {
            "$ref": "#/parameters/ExperienceLocationGeopoint"
          },
          {
            "$ref": "#/parameters/ExperienceLocationDistance"
          },
          {
            "$ref": "#/parameters/ExperienceDurationMin"
          },
          {
            "$ref": "#/parameters/ExperienceDurationMax"
          },
          {
            "$ref": "#/parameters/EducationKeywords"
          },
          {
            "$ref": "#/parameters/EducationLocationGeopoint"
          },
          {
            "$ref": "#/parameters/EducationLocationDistance"
          },
          {
            "$ref": "#/parameters/EducationDurationMin"
          },
          {
            "$ref": "#/parameters/EducationDurationMax"
          },
          {
            "$ref": "#/parameters/Skills"
          },
          {
            "$ref": "#/parameters/Languages"
          },
          {
            "$ref": "#/parameters/Interests"
          },
          {
            "$ref": "#/parameters/TagsIncluded"
          },
          {
            "$ref": "#/parameters/TagsExcluded"
          }
        ]
      }
    },
    "/v1/profiles/scoring": {
      "get": {
        "responses": {
          "default": {
            "description": "default"
          }
        },
        "summary": "Score Profiles indexed in Sources for a Job",
        "description": "Scores profiles indexed in sources for a job.",
        "operationId": "ProfilesScoringGet",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "tags": [
          "PROFILE API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "$ref": "#/parameters/AlgorithmKey"
          },
          {
            "$ref": "#/parameters/UseAlgorithm"
          },
          {
            "$ref": "#/parameters/JobKey"
          },
          {
            "$ref": "#/parameters/JobReference"
          },
          {
            "$ref": "#/parameters/BoardKey"
          },
          {
            "$ref": "#/parameters/SourceKeys"
          },
          {
            "$ref": "#/parameters/Stage"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/OrderBy"
          },
          {
            "$ref": "#/parameters/SortBy"
          },
          {
            "$ref": "#/parameters/CreatedAtMin"
          },
          {
            "$ref": "#/parameters/CreatedAtMax"
          },
          {
            "$ref": "#/parameters/Name"
          },
          {
            "$ref": "#/parameters/Email"
          },
          {
            "$ref": "#/parameters/LocationGeopoint"
          },
          {
            "$ref": "#/parameters/LocationDistance"
          },
          {
            "$ref": "#/parameters/SummaryKeywords"
          },
          {
            "$ref": "#/parameters/TextKeywords"
          },
          {
            "$ref": "#/parameters/ExperienceKeywords"
          },
          {
            "$ref": "#/parameters/ExperienceLocationGeopoint"
          },
          {
            "$ref": "#/parameters/ExperienceLocationDistance"
          },
          {
            "$ref": "#/parameters/ExperienceDurationMin"
          },
          {
            "$ref": "#/parameters/ExperienceDurationMax"
          },
          {
            "$ref": "#/parameters/EducationKeywords"
          },
          {
            "$ref": "#/parameters/EducationLocationGeopoint"
          },
          {
            "$ref": "#/parameters/EducationLocationDistance"
          },
          {
            "$ref": "#/parameters/EducationDurationMin"
          },
          {
            "$ref": "#/parameters/EducationDurationMax"
          },
          {
            "$ref": "#/parameters/Skills"
          },
          {
            "$ref": "#/parameters/Languages"
          },
          {
            "$ref": "#/parameters/Interests"
          },
          {
            "$ref": "#/parameters/TagsIncluded"
          },
          {
            "$ref": "#/parameters/TagsExcluded"
          }
        ]
      }
    },
    "/v1/job/indexing": {
      "post": {
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "example": "Job created"
                },
                "data": {
                  "$ref": "#/definitions/ResponseJob"
                }
              }
            }
          }
        },
        "summary": "Index a Job into a Board",
        "description": "Indexes a job object into a board.",
        "operationId": "JobIndexingPost",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "JOB API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "board_key",
                "job"
              ],
              "properties": {
                "board_key": {
                  "$ref": "#/definitions/BoardKey"
                },
                "job": {
                  "$ref": "#/definitions/Job"
                }
              }
            }
          }
        ]
      }
    },
    "/v1/jobs/searching": {
      "get": {
        "responses": {
          "default": {
            "description": "default"
          }
        },
        "summary": "Search Jobs indexed in Boards",
        "description": "This endpoint allows you to Search Jobs.",
        "operationId": "JobsSearchingGet",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "tags": [
          "JOB API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "$ref": "#/parameters/BoardKeys"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/OrderBy"
          },
          {
            "$ref": "#/parameters/SortBy"
          },
          {
            "$ref": "#/parameters/CreatedAtMin"
          },
          {
            "$ref": "#/parameters/CreatedAtMax"
          },
          {
            "$ref": "#/parameters/Names"
          },
          {
            "$ref": "#/parameters/LocationGeopoint"
          },
          {
            "$ref": "#/parameters/LocationDistance"
          },
          {
            "$ref": "#/parameters/SummaryKeywords"
          },
          {
            "$ref": "#/parameters/TextKeywords"
          },
          {
            "$ref": "#/parameters/Skills"
          },
          {
            "$ref": "#/parameters/Languages"
          },
          {
            "$ref": "#/parameters/RangesFloat"
          },
          {
            "$ref": "#/parameters/RangesDate"
          },
          {
            "$ref": "#/parameters/TagsIncluded"
          },
          {
            "$ref": "#/parameters/TagsExcluded"
          }
        ]
      }
    },
    "/v1/jobs/scoring": {
      "get": {
        "responses": {
          "default": {
            "description": "default"
          }
        },
        "summary": "Score Jobs indexed in Boards for a Profile",
        "description": "This endpoint allows you to Score Jobs for Profile.",
        "operationId": "JobsScoringGet",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "tags": [
          "JOB API"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-USER-EMAIL"
          },
          {
            "$ref": "#/parameters/AlgorithmKey"
          },
          {
            "$ref": "#/parameters/UseAlgorithm"
          },
          {
            "$ref": "#/parameters/ProfileKey"
          },
          {
            "$ref": "#/parameters/ProfileReference"
          },
          {
            "$ref": "#/parameters/SourceKey"
          },
          {
            "$ref": "#/parameters/BoardKeys"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/OrderBy"
          },
          {
            "$ref": "#/parameters/SortBy"
          },
          {
            "$ref": "#/parameters/CreatedAtMin"
          },
          {
            "$ref": "#/parameters/CreatedAtMax"
          },
          {
            "$ref": "#/parameters/Names"
          },
          {
            "$ref": "#/parameters/LocationGeopoint"
          },
          {
            "$ref": "#/parameters/SummaryKeywords"
          },
          {
            "$ref": "#/parameters/TextKeywords"
          },
          {
            "$ref": "#/parameters/Skills"
          },
          {
            "$ref": "#/parameters/Languages"
          },
          {
            "$ref": "#/parameters/RangesFloat"
          },
          {
            "$ref": "#/parameters/RangesDate"
          },
          {
            "$ref": "#/parameters/TagsIncluded"
          },
          {
            "$ref": "#/parameters/TagsExcluded"
          }
        ]
      }
    }
  },
  "definitions": {
    "Key": {
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "example": "00ebcbd8200f26000cf558946f5f6fd56b72057e",
      "x-ms-summary": "Key",
      "x-ms-visibility": "advanced",
      "description": "Identification Key"
    },
    "BoardKey": {
      "type": "string",
      "x-ms-summary": "Board Key",
      "description": "The key of the board",
      "pattern": "^[a-f0-9]{40}$",
      "example": "56ecf0f02da68764fef99416e0554b33b97bd3ec"
    },
    "SourceKey": {
      "type": "string",
      "x-ms-summary": "Source Key",
      "description": "The key of the source",
      "pattern": "^[a-f0-9]{40}$",
      "example": "6a4eee5cec4d9538286c3c0b7a508ed833b852f8"
    },
    "Reference": {
      "type": "string",
      "x-ms-summary": "Reference",
      "x-ms-visibility": "advanced",
      "description": "Custom identifier",
      "example": "object#42"
    },
    "CreatedAt": {
      "type": "string",
      "format": "date-time",
      "x-ms-summary": "Created at",
      "x-ms-visibility": "advanced",
      "description": "Creation date (iso8601)",
      "example": "2023-09-01T00:00:00+0000"
    },
    "Profile": {
      "type": "object",
      "required": [
        "info"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/Key"
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "text_language": {
          "type": "string",
          "x-ms-summary": "Text Language",
          "x-ms-visibility": "advanced",
          "description": "Code language of the Profile",
          "example": "en"
        },
        "text": {
          "type": "string",
          "x-ms-summary": "Text",
          "x-ms-visibility": "advanced",
          "description": "Full text of the Profile",
          "title": "Text"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "info": {
          "$ref": "#/definitions/Info"
        },
        "experiences_duration": {
          "type": "number",
          "x-ms-summary": "Experiences duration",
          "x-ms-visibility": "advanced",
          "description": "Total number of years of experience",
          "example": 0.25
        },
        "educations_duration": {
          "type": "number",
          "x-ms-summary": "Educations duration",
          "x-ms-visibility": "advanced",
          "description": "Total number of years of education",
          "example": 1.11
        },
        "experiences": {
          "type": "array",
          "x-ms-summary": "Experiences",
          "x-ms-visibility": "advanced",
          "default": [],
          "items": {
            "$ref": "#/definitions/Experience"
          }
        },
        "educations": {
          "type": "array",
          "x-ms-summary": "Educations",
          "x-ms-visibility": "advanced",
          "default": [],
          "items": {
            "$ref": "#/definitions/Education"
          }
        },
        "attachments": {
          "type": "array",
          "x-ms-summary": "Attachments",
          "x-ms-visibility": "advanced",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "interests": {
          "$ref": "#/definitions/Interests"
        },
        "tags": {
          "$ref": "#/definitions/Tags"
        },
        "metadatas": {
          "$ref": "#/definitions/Metadatas"
        }
      }
    },
    "Job": {
      "type": "object",
      "required": [
        "name",
        "location",
        "sections"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/Key"
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Job Title",
          "description": "The name of the Job",
          "example": "R&D Engineer"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "sections": {
          "type": "array",
          "x-ms-summary": "Sections",
          "description": "Job custom sections",
          "items": {
            "$ref": "#/definitions/Section"
          },
          "x-ms-visibility": "advanced",
          "default": []
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url",
          "description": "Job post original Url",
          "example": "https://www.linkedin.com/jobs/search/?currentJobId=3718625295",
          "x-ms-visibility": "advanced"
        },
        "summary": {
          "type": "string",
          "x-ms-summary": "Summary",
          "x-ms-visibility": "advanced",
          "description": "Brief summary of the Job",
          "example": "As an AI Researcher Intern at HrFlow.ai, you'll play a vital role in driving the next phase of our exciting expansion. Your role involves developing innovative AI models and algorithms to tackle intricate HR challenges. Collaborating with fellow researchers and engineers, you'll help guide the technical direction and architecture of our AI solutions."
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "tags": {
          "$ref": "#/definitions/Tags"
        },
        "metadatas": {
          "$ref": "#/definitions/Metadatas"
        },
        "ranges_float": {
          "$ref": "#/definitions/RangesFloat"
        },
        "ranges_date": {
          "$ref": "#/definitions/RangesDate"
        },
        "culture": {
          "type": "string",
          "description": "Company culture description",
          "example": "We love AI engineering, problem-solving, and business.",
          "x-ms-summary": "Culture",
          "x-ms-visibility": "advanced"
        },
        "responsibilities": {
          "type": "string",
          "x-ms-summary": "Responsibilities",
          "description": "Job opening responsibilities",
          "example": "Designing, implementing, and optimizing AI models and algorithms that solve complex HR challenges.",
          "x-ms-visibility": "advanced"
        },
        "requirements": {
          "type": "string",
          "x-ms-summary": "Requirements",
          "description": "Job opening requirements",
          "example": "Enrolled in an advanced degree in Computer Science, Artificial Intelligence, or a related field.",
          "x-ms-visibility": "advanced"
        },
        "interviews": {
          "type": "string",
          "x-ms-summary": "Interviews",
          "description": "Job opening interviews",
          "example": "Interview with one of our lead AI Researcher to discuss your experience and qualifications in more detail.",
          "x-ms-visibility": "advanced"
        },
        "benefits": {
          "type": "string",
          "x-ms-summary": "Benefits",
          "description": "Job opening benefits",
          "example": "Go fast and learn a lot. High-impact position and responsibilities without any day being the same.",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ResponseJob": {
      "type": "object",
      "description": "job",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "id"
        },
        "key": {
          "type": "string",
          "description": "key"
        },
        "reference": {
          "type": "string",
          "description": "reference"
        },
        "board_key": {
          "type": "string",
          "description": "board_key"
        },
        "board": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "key"
            },
            "name": {
              "type": "string",
              "description": "name"
            },
            "type": {
              "type": "string",
              "description": "type"
            },
            "subtype": {
              "type": "string",
              "description": "subtype"
            },
            "environment": {
              "type": "string",
              "description": "environment"
            }
          },
          "description": "board"
        },
        "name": {
          "type": "string",
          "description": "name"
        },
        "url": {
          "type": "string",
          "description": "url"
        },
        "picture": {
          "type": "string",
          "description": "picture"
        },
        "summary": {
          "type": "string",
          "description": "summary"
        },
        "location": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "text"
            },
            "lat": {
              "type": "number",
              "format": "float",
              "description": "lat"
            },
            "lng": {
              "type": "number",
              "format": "float",
              "description": "lng"
            },
            "gmaps": {
              "type": "string",
              "description": "gmaps"
            },
            "fields": {
              "$ref": "#/definitions/Fields"
            }
          },
          "description": "location"
        },
        "archive": {
          "type": "string",
          "description": "archive"
        },
        "archived_at": {
          "type": "string",
          "description": "archived_at"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at"
        },
        "created_at": {
          "type": "string",
          "description": "created_at"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          },
          "description": "sections"
        },
        "culture": {
          "type": "string",
          "description": "culture"
        },
        "responsibilities": {
          "type": "string",
          "description": "responsibilities"
        },
        "requirements": {
          "type": "string",
          "description": "requirements"
        },
        "benefits": {
          "type": "string",
          "description": "benefits"
        },
        "interviews": {
          "type": "string",
          "description": "interviews"
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "interests": {
          "$ref": "#/definitions/Interests"
        },
        "tags": {
          "$ref": "#/definitions/Tags"
        },
        "metadatas": {
          "$ref": "#/definitions/Metadatas"
        },
        "ranges_float": {
          "$ref": "#/definitions/RangesFloat"
        },
        "ranges_date": {
          "$ref": "#/definitions/RangesDate"
        }
      }
    },
    "ResponseProfile": {
      "type": "object",
      "description": "profile",
      "properties": {
        "source_key": {
          "type": "string",
          "description": "source_key"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "id"
        },
        "key": {
          "type": "string",
          "description": "key"
        },
        "reference": {
          "type": "string",
          "description": "reference"
        },
        "consent_algorithmic": {
          "type": "object",
          "properties": {
            "owner": {
              "type": "object",
              "properties": {
                "parsing": {
                  "type": "boolean",
                  "description": "parsing"
                },
                "revealing": {
                  "type": "boolean",
                  "description": "revealing"
                },
                "embedding": {
                  "type": "boolean",
                  "description": "embedding"
                },
                "searching": {
                  "type": "boolean",
                  "description": "searching"
                },
                "scoring": {
                  "type": "boolean",
                  "description": "scoring"
                },
                "reasoning": {
                  "type": "boolean",
                  "description": "reasoning"
                }
              },
              "description": "owner"
            },
            "controller": {
              "type": "object",
              "properties": {
                "parsing": {
                  "type": "boolean",
                  "description": "parsing"
                },
                "revealing": {
                  "type": "boolean",
                  "description": "revealing"
                },
                "embedding": {
                  "type": "boolean",
                  "description": "embedding"
                },
                "searching": {
                  "type": "boolean",
                  "description": "searching"
                },
                "scoring": {
                  "type": "boolean",
                  "description": "scoring"
                },
                "reasoning": {
                  "type": "boolean",
                  "description": "reasoning"
                }
              },
              "description": "controller"
            }
          },
          "description": "consent_algorithmic"
        },
        "source": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "key"
            },
            "name": {
              "type": "string",
              "description": "name"
            },
            "type": {
              "type": "string",
              "description": "type"
            },
            "subtype": {
              "type": "string",
              "description": "subtype"
            },
            "environment": {
              "type": "string",
              "description": "environment"
            }
          },
          "description": "source"
        },
        "archive": {
          "type": "string",
          "description": "archive"
        },
        "archived_at": {
          "type": "string",
          "description": "archived_at"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at"
        },
        "created_at": {
          "type": "string",
          "description": "created_at"
        },
        "info": {
          "type": "object",
          "properties": {
            "full_name": {
              "type": "string",
              "description": "full_name"
            },
            "first_name": {
              "type": "string",
              "description": "first_name"
            },
            "last_name": {
              "type": "string",
              "description": "last_name"
            },
            "email": {
              "type": "string",
              "description": "email"
            },
            "phone": {
              "type": "string",
              "description": "phone"
            },
            "driving_license": {
              "type": "string",
              "description": "driving_license"
            },
            "date_birth": {
              "type": "string",
              "description": "date_birth"
            },
            "location": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "text"
                },
                "lat": {
                  "type": "number",
                  "format": "float",
                  "description": "lat"
                },
                "lng": {
                  "type": "number",
                  "format": "float",
                  "description": "lng"
                },
                "gmaps": {
                  "type": "string",
                  "description": "gmaps"
                },
                "fields": {
                  "$ref": "#/definitions/Fields"
                }
              },
              "description": "location"
            },
            "urls": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Url"
              },
              "description": "urls"
            },
            "picture": {
              "type": "string",
              "description": "picture"
            },
            "gender": {
              "type": "string",
              "description": "gender"
            },
            "summary": {
              "type": "string",
              "description": "summary"
            }
          },
          "description": "info"
        },
        "text_language": {
          "type": "string",
          "description": "text_language"
        },
        "text": {
          "type": "string",
          "description": "text"
        },
        "experiences_duration": {
          "type": "number",
          "format": "float",
          "description": "experiences_duration"
        },
        "educations_duration": {
          "type": "number",
          "format": "float",
          "description": "educations_duration"
        },
        "experiences": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "key"
              },
              "logo": {
                "type": "string",
                "description": "logo"
              },
              "title": {
                "type": "string",
                "description": "title"
              },
              "description": {
                "type": "string",
                "description": "description"
              },
              "location": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "text"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "description": "lat"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "description": "lng"
                  },
                  "gmaps": {
                    "type": "string",
                    "description": "gmaps"
                  },
                  "fields": {
                    "$ref": "#/definitions/Fields"
                  }
                },
                "description": "location"
              },
              "date_start": {
                "type": "string",
                "description": "date_start"
              },
              "date_end": {
                "type": "string",
                "description": "date_end"
              },
              "skills": {
                "$ref": "#/definitions/Skills"
              },
              "certifications": {
                "$ref": "#/definitions/Certifications"
              },
              "courses": {
                "$ref": "#/definitions/Courses"
              },
              "tasks": {
                "$ref": "#/definitions/Tasks"
              },
              "languages": {
                "$ref": "#/definitions/Languages"
              },
              "interests": {
                "$ref": "#/definitions/Interests"
              },
              "company": {
                "type": "string",
                "description": "company"
              }
            }
          },
          "description": "experiences"
        },
        "educations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "key"
              },
              "logo": {
                "type": "string",
                "description": "logo"
              },
              "title": {
                "type": "string",
                "description": "title"
              },
              "description": {
                "type": "string",
                "description": "description"
              },
              "location": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "text"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "description": "lat"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "description": "lng"
                  },
                  "gmaps": {
                    "type": "string",
                    "description": "gmaps"
                  },
                  "fields": {
                    "$ref": "#/definitions/Fields"
                  }
                },
                "description": "location"
              },
              "date_start": {
                "type": "string",
                "description": "date_start"
              },
              "date_end": {
                "type": "string",
                "description": "date_end"
              },
              "skills": {
                "$ref": "#/definitions/Skills"
              },
              "certifications": {
                "$ref": "#/definitions/Certifications"
              },
              "courses": {
                "$ref": "#/definitions/Courses"
              },
              "tasks": {
                "$ref": "#/definitions/Tasks"
              },
              "languages": {
                "$ref": "#/definitions/Languages"
              },
              "interests": {
                "$ref": "#/definitions/Interests"
              },
              "school": {
                "type": "string",
                "description": "school"
              }
            }
          },
          "description": "educations"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "type"
              },
              "alt": {
                "type": "string",
                "description": "alt"
              },
              "file_size": {
                "type": "string",
                "description": "file_size"
              },
              "file_name": {
                "type": "string",
                "description": "file_name"
              },
              "original_file_name": {
                "type": "string",
                "description": "original_file_name"
              },
              "extension": {
                "type": "string",
                "description": "extension"
              },
              "public_url": {
                "type": "string",
                "description": "public_url"
              },
              "updated_at": {
                "type": "string",
                "description": "updated_at"
              },
              "created_at": {
                "type": "string",
                "description": "created_at"
              }
            }
          },
          "description": "attachments"
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "interests": {
          "$ref": "#/definitions/Interests"
        },
        "tags": {
          "$ref": "#/definitions/Tags"
        },
        "metadatas": {
          "$ref": "#/definitions/Metadatas"
        }
      }
    },
    "ResponseMeta": {
      "type": "object",
      "description": "meta",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "page"
        },
        "maxPage": {
          "type": "integer",
          "format": "int32",
          "description": "maxPage"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "count"
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "total"
        }
      }
    },
    "Attachment": {
      "type": "object",
      "required": [
        "type",
        "alt",
        "file_name",
        "original_file_name",
        "extension"
      ],
      "properties": {
        "text": {
          "type": "string",
          "example": "Harry James Potter was born on June 26th 1997",
          "x-ms-summary": "Text"
        },
        "type": {
          "type": "string",
          "example": "resume",
          "x-ms-summary": "Type"
        },
        "alt": {
          "type": "string",
          "example": "91078543fea53b674f2787caa1d38355e2c649ac",
          "x-ms-summary": "Alt"
        },
        "file_size": {
          "type": "string",
          "example": "777TB",
          "x-ms-summary": "File size"
        },
        "file_name": {
          "type": "string",
          "example": "resume",
          "x-ms-summary": "File name"
        },
        "original_file_name": {
          "type": "string",
          "example": "resume",
          "x-ms-summary": "Original file name"
        },
        "extension": {
          "type": "string",
          "example": "pdf",
          "x-ms-summary": "Extension"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url",
          "example": "https://hogwarts.net/harry/james/potter/resume.pdf"
        }
      }
    },
    "Education": {
      "type": "object",
      "required": [
        "school",
        "title",
        "description",
        "location",
        "date_start",
        "date_end"
      ],
      "properties": {
        "school": {
          "type": "string",
          "x-ms-summary": "School",
          "example": "Hogwarts School of Witchcraft and Wizardry",
          "description": "Name of the school"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Title",
          "example": "Sorcerer Apprentice",
          "description": "Title of the education"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "example": "First year of study",
          "description": "Description of the education"
        },
        "logo": {
          "type": "string",
          "x-ms-summary": "Logo Url",
          "example": "https://path.to/logo",
          "description": "Url of the logo of the school"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "date_start": {
          "$ref": "#/definitions/DateStart"
        },
        "date_end": {
          "$ref": "#/definitions/DateEnd"
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "interests": {
          "$ref": "#/definitions/Interests"
        }
      }
    },
    "Experience": {
      "type": "object",
      "required": [
        "company",
        "title",
        "location",
        "description",
        "date_start",
        "date_end"
      ],
      "properties": {
        "company": {
          "type": "string",
          "x-ms-summary": "Company",
          "example": "Hogwarts School of Witchcraft and Wizardry",
          "description": "Name of the company"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Title",
          "example": "Magic Investigator",
          "description": "Title of the experience"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "example": "Solving mysteries about the Sorcerer's stone",
          "description": "Description of the experience"
        },
        "logo": {
          "type": "string",
          "x-ms-summary": "Logo Url",
          "example": "https://path.to/logo",
          "description": "Url of the logo of the company"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "date_start": {
          "$ref": "#/definitions/DateStart"
        },
        "date_end": {
          "$ref": "#/definitions/DateEnd"
        },
        "skills": {
          "$ref": "#/definitions/Skills"
        },
        "certifications": {
          "$ref": "#/definitions/Certifications"
        },
        "courses": {
          "$ref": "#/definitions/Courses"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "languages": {
          "$ref": "#/definitions/Languages"
        },
        "interests": {
          "$ref": "#/definitions/Interests"
        }
      }
    },
    "Info": {
      "type": "object",
      "required": [
        "full_name",
        "first_name",
        "last_name",
        "email",
        "location"
      ],
      "properties": {
        "full_name": {
          "type": "string",
          "x-ms-summary": "Full Name",
          "example": "Harry James Potter"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "First Name",
          "example": "Harry James"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Last Name",
          "example": "Potter"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Email",
          "example": "harry.potter@hogwarts.net"
        },
        "phone": {
          "type": "string",
          "x-ms-summary": "Phone",
          "x-ms-visibility": "advanced",
          "example": 747532699,
          "description": "Contact number"
        },
        "driving_license": {
          "type": "string",
          "x-ms-summary": "Driving License",
          "x-ms-visibility": "advanced",
          "example": "Class B",
          "description": "Type of driving license"
        },
        "date_birth": {
          "type": "string",
          "format": "date-time",
          "x-ms-summary": "Date of Birth",
          "description": "The birth date (iso8601)",
          "x-ms-visibility": "advanced",
          "example": "1997-06-26T00:00:00+0000"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "urls": {
          "type": "array",
          "x-ms-summary": "Urls",
          "x-ms-visibility": "advanced",
          "items": {
            "$ref": "#/definitions/Url"
          }
        },
        "picture": {
          "type": "string",
          "x-ms-summary": "Picture Url",
          "x-ms-visibility": "advanced",
          "example": "https://path.to/image"
        },
        "gender": {
          "type": "string",
          "x-ms-summary": "Gender",
          "x-ms-visibility": "advanced",
          "example": "male"
        },
        "summary": {
          "type": "string",
          "example": "Sorcerer Apprentice",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Summary"
        }
      }
    },
    "Url": {
      "type": "object",
      "required": [
        "type",
        "url"
      ],
      "properties": {
        "type": {
          "type": "string",
          "x-ms-summary": "Type",
          "example": "Github Url",
          "description": "Type of the url"
        },
        "url": {
          "type": "string",
          "title": "Url",
          "example": "https://github.com/Riminder",
          "description": "The url"
        }
      }
    },
    "RangeDate": {
      "type": "object",
      "required": [
        "name",
        "value_min",
        "value_max"
      ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "example": "Dates",
          "x-ms-summary": "Name"
        },
        "value_min": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-01T23:00:00.000Z",
          "x-ms-summary": "From",
          "description": "Start date (iso8601)"
        },
        "value_max": {
          "type": "string",
          "format": "date-time",
          "example": "2023-09-01T23:00:00.000Z",
          "x-ms-summary": "To",
          "description": "End date (iso8601)"
        }
      }
    },
    "RangeFloat": {
      "type": "object",
      "required": [
        "name",
        "value_min",
        "value_max",
        "unit"
      ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "example": "Salary",
          "x-ms-summary": "Name"
        },
        "value_min": {
          "type": "number",
          "format": "float",
          "example": 1234.56,
          "x-ms-summary": "Min",
          "description": "Range lower bound"
        },
        "value_max": {
          "type": "number",
          "format": "float",
          "example": 6543.21,
          "x-ms-summary": "Max",
          "description": "Range upper bound"
        },
        "unit": {
          "type": "string",
          "example": "euros",
          "x-ms-summary": "Unit",
          "description": "Range unit"
        }
      }
    },
    "Interest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "example": "Levitation"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "example": "Amateur"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Defeat the Basilisk",
          "x-ms-summary": "Name"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "default": null,
          "example": "To defeat the Basilisk, a few key elements: a weapon, courage and determination, quick reflexes and support."
        }
      }
    },
    "Tag": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Referrer",
          "x-ms-summary": "Name"
        },
        "value": {
          "type": "string",
          "default": null,
          "example": "Linkedin",
          "x-ms-summary": "Value"
        }
      }
    },
    "Language": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "example": "French"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "example": "Native",
          "default": null
        }
      }
    },
    "Skill": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "example": "Deep Learning"
        },
        "type": {
          "type": "string",
          "x-ms-summary": "Type",
          "example": "Hard"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "default": null,
          "example": "93/100"
        }
      }
    },
    "Task": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Defeat the Basilisk",
          "x-ms-summary": "Name"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "example": "Bravery",
          "default": null
        }
      }
    },
    "Course": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Statistical Learning",
          "x-ms-summary": "Name"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "example": "On campus",
          "default": null
        }
      }
    },
    "Certification": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "example": "ISO 27001"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "example": "Individual",
          "default": null
        }
      }
    },
    "Section": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Description",
          "x-ms-summary": "Name"
        },
        "title": {
          "type": "string",
          "example": "Description",
          "x-ms-summary": "Title"
        },
        "description": {
          "type": "string",
          "example": "As an AI Researcher Intern at HrFlow.ai, you'll play a vital role in driving the next phase of our exciting expansion. Your role involves developing innovative AI models and algorithms to tackle intricate HR challenges. Collaborating with fellow researchers and engineers, you'll help guide the technical direction and architecture of our AI solutions.",
          "x-ms-summary": "Description"
        }
      }
    },
    "Location": {
      "type": "object",
      "x-ms-summary": "Location",
      "required": [
        "text",
        "lat",
        "lng"
      ],
      "properties": {
        "text": {
          "type": "string",
          "x-ms-summary": "Text",
          "description": "Location's text",
          "example": "7 rue 4 septembre Paris"
        },
        "lng": {
          "type": "number",
          "format": "float",
          "x-ms-summary": "Longitude",
          "description": "Location's longitude, must be between -180 and 180",
          "example": 2.33814,
          "default": null
        },
        "lat": {
          "type": "number",
          "format": "float",
          "title": "Latitude",
          "description": "Location's latitude, must be between -90 and 90",
          "example": 48.869179,
          "default": null
        }
      }
    },
    "Fields": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category"
        },
        "city": {
          "type": "string",
          "description": "city"
        },
        "city_district": {
          "type": "string",
          "description": "city_district"
        },
        "country": {
          "type": "string",
          "description": "country"
        },
        "country_region": {
          "type": "string",
          "description": "country_region"
        },
        "entrance": {
          "type": "string",
          "description": "entrance"
        },
        "house": {
          "type": "string",
          "description": "house"
        },
        "house_number": {
          "type": "string",
          "description": "house_number"
        },
        "island": {
          "type": "string",
          "description": "island"
        },
        "level": {
          "type": "string",
          "description": "level"
        },
        "near": {
          "type": "string",
          "description": "near"
        },
        "po_box": {
          "type": "string",
          "description": "po_box"
        },
        "postcode": {
          "type": "string",
          "description": "postcode"
        },
        "road": {
          "type": "string",
          "description": "road"
        },
        "staircase": {
          "type": "string",
          "description": "staircase"
        },
        "state": {
          "type": "string",
          "description": "state"
        },
        "state_district": {
          "type": "string",
          "description": "state_district"
        },
        "suburb": {
          "type": "string",
          "description": "suburb"
        },
        "text": {
          "type": "string",
          "description": "text"
        },
        "unit": {
          "type": "string",
          "description": "unit"
        },
        "world_region": {
          "type": "string",
          "description": "world_region"
        }
      },
      "description": "fields"
    },
    "Languages": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Languages",
      "items": {
        "$ref": "#/definitions/Language"
      }
    },
    "Skills": {
      "type": "array",
      "x-ms-summary": "Skills",
      "x-ms-visibility": "advanced",
      "items": {
        "$ref": "#/definitions/Skill"
      }
    },
    "Certifications": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Certifications",
      "items": {
        "$ref": "#/definitions/Certification"
      }
    },
    "Courses": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Courses",
      "items": {
        "$ref": "#/definitions/Course"
      }
    },
    "Tasks": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Tasks",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "Tags": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Tags",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "Metadatas": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Metadatas",
      "items": {
        "$ref": "#/definitions/Metadata"
      }
    },
    "RangesFloat": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Float Ranges",
      "items": {
        "$ref": "#/definitions/RangeFloat"
      }
    },
    "RangesDate": {
      "type": "array",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Date Ranges",
      "items": {
        "$ref": "#/definitions/RangeDate"
      }
    },
    "Interests": {
      "type": "array",
      "x-ms-summary": "Interests",
      "x-ms-visibility": "advanced",
      "items": {
        "$ref": "#/definitions/Interest"
      }
    },
    "DateStart": {
      "type": "string",
      "format": "date-time",
      "x-ms-summary": "Start Date",
      "x-ms-visibility": "advanced",
      "example": "2023-09-01T09:00:00+0000",
      "description": "The start date (iso8601)"
    },
    "DateEnd": {
      "type": "string",
      "format": "date-time",
      "x-ms-summary": "End Date",
      "x-ms-visibility": "advanced",
      "example": "2024-01-26T17:00:00+0000",
      "description": "The end date (iso8601)"
    }
  },
  "parameters": {
    "X-USER-EMAIL": {
      "name": "X-USER-EMAIL",
      "type": "string",
      "in": "header",
      "x-ms-summary": "User E-mail",
      "description": "HrFlow.ai's account e-mail",
      "required": true
    },
    "AlgorithmKey": {
      "name": "algorithm_key",
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "required": true,
      "x-ms-summary": "Algorithm Key",
      "description": "The key of the scoring algorithm",
      "in": "query"
    },
    "BoardKeys": {
      "name": "board_keys",
      "type": "string",
      "x-ms-summary": "Board Keys",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "required": true,
      "in": "query"
    },
    "BoardKey": {
      "name": "board_key",
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "required": true,
      "x-ms-summary": "Board Key",
      "description": "The board key attached to the job",
      "in": "query"
    },
    "JobKey": {
      "name": "job_key",
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "x-ms-summary": "Job Key",
      "description": "The job key",
      "in": "query"
    },
    "JobReference": {
      "name": "job_reference",
      "type": "string",
      "x-ms-summary": "Job Reference",
      "description": "The job reference",
      "in": "query"
    },
    "SourceKeys": {
      "name": "source_keys",
      "type": "string",
      "x-ms-summary": "Source Keys",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "required": true,
      "in": "query"
    },
    "SourceKey": {
      "name": "source_key",
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "required": true,
      "x-ms-summary": "Source Key",
      "description": "The source key attachted to the profile",
      "in": "query"
    },
    "ProfileKey": {
      "name": "profile_key",
      "type": "string",
      "pattern": "^[a-f0-9]{40}$",
      "x-ms-summary": "Profile Key",
      "description": "The profile key",
      "in": "query"
    },
    "ProfileReference": {
      "name": "profile_reference",
      "type": "string",
      "x-ms-summary": "Profile Reference",
      "description": "The profile reference",
      "in": "query"
    },
    "ExperienceKeywords": {
      "name": "experience_keywords",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Experience Keywords",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "in": "query"
    },
    "EducationKeywords": {
      "name": "education_keywords",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Education Keywords",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "in": "query"
    },
    "EducationLocationGeopoint": {
      "name": "education_location_geopoint",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Education Location Geopoint",
      "description": "{\"lat\": x.xx, \"lon\": y.yy}",
      "in": "query"
    },
    "ExperienceLocationGeopoint": {
      "name": "experience_location_geopoint",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Experience Location Geopoint",
      "description": "{\"lat\": x.xx, \"lon\": y.yy}",
      "in": "query"
    },
    "EducationLocationDistance": {
      "name": "education_location_distance",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Education Location Distance",
      "description": "Set a radius around educations locations (in Km)",
      "in": "query"
    },
    "ExperienceLocationDistance": {
      "name": "experience_location_distance",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Experience Location Distance",
      "description": "Set a radius around experiences locations (in Km)",
      "in": "query"
    },
    "EducationDurationMin": {
      "name": "education_duration_min",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Education Min Duration",
      "description": "Minimum number of years of education",
      "in": "query"
    },
    "ExperienceDurationMin": {
      "name": "experience_duration_min",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Experience Min Duration",
      "description": "Minimum number of years of experience",
      "in": "query"
    },
    "EducationDurationMax": {
      "name": "education_duration_max",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Education Max Duration",
      "description": "Maximum number of years of education",
      "in": "query"
    },
    "ExperienceDurationMax": {
      "name": "experience_duration_max",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Experience Max Duration",
      "description": "Maximum number of years of experience",
      "in": "query"
    },
    "LocationDistance": {
      "name": "location_distance",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Location Distance",
      "description": "Set a radius around location address (in Km)",
      "in": "query"
    },
    "LocationGeopoint": {
      "name": "location_geopoint",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Location Geopoint",
      "description": "{\"lat\": x.xx, \"lng\": y.yy}",
      "in": "query"
    },
    "OrderBy": {
      "name": "order_by",
      "type": "string",
      "default": "desc",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Order By",
      "description": "Order results by",
      "in": "query",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "SortBy": {
      "name": "sort_by",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Sort By",
      "description": "Sort results by",
      "in": "query",
      "enum": [
        "searching",
        "scoring",
        "created_at",
        "updated_at",
        "location",
        "location_experience",
        "location_education"
      ]
    },
    "Stage": {
      "name": "stage",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Stage",
      "description": "Filter profiles by their stage",
      "in": "query",
      "enum": [
        "new",
        "yes",
        "later",
        "no"
      ]
    },
    "Page": {
      "name": "page",
      "type": "integer",
      "default": 1,
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Page",
      "description": "The number of the current results' page",
      "in": "query"
    },
    "Limit": {
      "name": "limit",
      "type": "integer",
      "default": 30,
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Limit",
      "description": "Maximum number of results",
      "in": "query"
    },
    "CreatedAtMin": {
      "name": "created_at_min",
      "type": "string",
      "format": "date-time",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Created At Min",
      "description": "Minimum creation date (iso8601)",
      "in": "query"
    },
    "CreatedAtMax": {
      "name": "created_at_max",
      "type": "string",
      "format": "date-time",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Created At Max",
      "description": "Maximum creation date (iso8601)",
      "in": "query"
    },
    "Names": {
      "name": "names",
      "type": "string",
      "x-ms-summary": "Names",
      "x-ms-visibility": "advanced",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "in": "query"
    },
    "TextKeywords": {
      "name": "text_keywords",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Text Keywords",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "in": "query"
    },
    "SummaryKeywords": {
      "name": "summary_keywords",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Summary Keywords",
      "description": "[\"xxx\", \"yyy\", \"zzz\"]",
      "in": "query"
    },
    "Skills": {
      "name": "skills",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Skills",
      "description": "[{\"name\": \"xxx\", \"value\": \"yyy\"}]",
      "in": "query"
    },
    "Languages": {
      "name": "languages",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Languages",
      "description": "[{\"name\": \"xxx\", \"value\": \"yyy\"}]",
      "in": "query"
    },
    "Interests": {
      "name": "interests",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Interests",
      "description": "[{\"name\": \"xxx\", \"value\": \"yyy\"}]",
      "in": "query"
    },
    "TagsIncluded": {
      "name": "tags_included",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Included Tags",
      "description": "[ [... OR ...] AND [... OR ...] ]",
      "in": "query"
    },
    "TagsExcluded": {
      "name": "tags_excluded",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Excluded Tags",
      "description": "[ [... OR ...] AND [... OR ...] ]",
      "in": "query"
    },
    "RangesFloat": {
      "name": "ranges_float",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Float Ranges",
      "description": "[{\"name\": \"xxx\", \"value_min\": y.yy, \"value_max\": z.zz}]",
      "in": "query"
    },
    "RangesDate": {
      "name": "ranges_date",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Date Ranges",
      "description": "[{\"name\": \"xxx\", \"value_min\": \"Y\", \"value_max\": \"Z\"}]",
      "in": "query"
    },
    "Name": {
      "name": "name",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Name",
      "description": "Filter profiles by their name",
      "in": "query"
    },
    "Email": {
      "name": "email",
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "E-mail",
      "description": "Filter profiles by their e-mail",
      "in": "query"
    },
    "UseAlgorithm": {
      "name": "use_algorithm",
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Use Algorithm",
      "description": "Turn 0 to switch the Scoring to the Searching only mode",
      "default": 1,
      "in": "query",
      "enum": [
        0,
        1
      ]
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY"
    }
  },
  "tags": [],
  "security": [
    {
      "API Key": []
    }
  ]
}