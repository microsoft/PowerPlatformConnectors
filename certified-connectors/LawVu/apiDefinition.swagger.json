{
    "swagger": "2.0",
    "info": {
        "title": "LawVu",
        "description": "LawVu is a connected legal workspace, providing advanced matter and contract management capabilities and connecting in-house legal teams to the rest of the business.",
        "contact": {
            "name": "LawVu Support",
            "url": "https://help.lawvu.com/",
            "email": "support@lawvu.com"
        },
        "version": "1.0"
    },
    "host": "au.public-api.lawvu.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/power-platform-apis/v1/contracts-power-platform/{contractId}/files": {
            "post": {
                "tags": [
                    "ContractFiles"
                ],
                "summary": "Upload file to a contract",
                "description": "Uploads a file to the contract",
                "operationId": "Contracts_UploadFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "The ID of the contract",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The file to be uploaded",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.ClientModels.ContractFileUpload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-ms-summary": "File ID"
                        }
                    }
                }
            }
        },
        "/contract-apis/v1/contracts/{contractId}/keyDates": {
            "get": {
                "tags": [
                    "ContractKeyDate"
                ],
                "summary": "Get contract key dates",
                "description": "Returns a list of contract key dates",
                "operationId": "Contracts_GetKeyDates",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "Enter a contract ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContractKeyDateModelArray"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/contracts-power-platform/wizard": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Create contract by wizard",
                "description": "Creates a new contract, using the contract template wizard",
                "operationId": "Contracts_CreateByWizard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of the contract to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.ClientModels.CreateContractByWizard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-ms-summary": "Contract ID"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/contracts-power-platform": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Create contract by upload",
                "description": "Creates a new contract, with the main contract file being sent as base64 string",
                "operationId": "Contracts_CreateByUpload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of the contract to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.ClientModels.CreateContractByUpload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-ms-summary": "Contract ID"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/contracts-power-platform/{contractId}": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get contract",
                "description": "Gets the details of the selected contract",
                "operationId": "Contracts_GetContract",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "Enter a contract ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/contracts-power-platform/{contractId}/fields": {
            "put": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Update contract field",
                "description": "Update a field in the selected contract",
                "operationId": "PowerPlatform_ContractFields_Update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "Enter the ID of the contract to update (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The field update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.UpdateContractFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/contract-apis/v1/contracts/entities": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Contract entities",
                "description": "Gets contract entities (other parties)",
                "operationId": "Contracts_GetEntities",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContractEntityArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/contract-apis/v1/contracts/{contractId}/statusMessages": {
            "post": {
                "tags": [
                    "ContractStatusMessage"
                ],
                "summary": "Add a status message to a contract",
                "description": "Add status message to a contract",
                "operationId": "Contracts_AddStatusMessage",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "Enter a contract ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The status message to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.ContractStatusMessageModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/power-platform-apis/v1/contractsTemplates-power-platform": {
            "get": {
                "tags": [
                    "ContractTemplates"
                ],
                "summary": "Get contract templates",
                "description": "Gets a list of contract templates",
                "operationId": "Contracts_GetTemplates",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "hasWizard",
                        "type": "boolean",
                        "x-ms-summary": "Has Wizard"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.ContractTemplate"
                            }
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/contractsTemplates-power-platform/{templateId}/createSchema": {
            "get": {
                "tags": [
                    "ContractTemplates"
                ],
                "summary": "Get contract creation schema",
                "description": "Gets the schema for creating a new contract",
                "operationId": "Contracts_GetUploadSchema",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "templateId",
                        "description": "The ID of the contract template",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Template ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/contracts-power-platform/{contractId}/users": {
            "get": {
                "tags": [
                    "ContractUser"
                ],
                "summary": "Get members of a contract",
                "description": "Returns users that are added as members of the contract",
                "operationId": "PowerPlatform_Contracts_GetContractUsers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "The contract ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContractUserArray"
                        }
                    }
                }
            }
        },
        "/contract-apis/v1/contracts/{contractId}/users": {
            "post": {
                "tags": [
                    "ContractUser"
                ],
                "summary": "Add user to a contract",
                "description": "Adds a user to a contract as a member",
                "operationId": "Contracts_AddContractUser",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "contractId",
                        "description": "Enter a contract ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contract ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The ID of the user to add into a contract",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.AssignContractUser"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/power-platform-apis/v1/fields-power-platform": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get fields schema",
                "description": "All fields in the organisation",
                "operationId": "PowerPlatform_Fields_Get",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "forRecordType",
                        "description": "Restrict field list to fields only used in Matters or Contracts",
                        "type": "string",
                        "enum": [
                            "Matter",
                            "Milestone",
                            "Task",
                            "Organisation",
                            "Contract",
                            "File",
                            "InvoiceBatch",
                            "KnowledgeArticle",
                            "Folder",
                            "FolderTemplate",
                            "KnowledgeLibrary",
                            "InboundEmail",
                            "User",
                            "MessageThread",
                            "TimelineEntry",
                            "MatterStatus",
                            "ContractStatus",
                            "Message",
                            "Comment"
                        ],
                        "x-ms-enum-values": [
                            {
                                "displayName": "Matter",
                                "value": "Matter"
                            },
                            {
                                "displayName": "Milestone",
                                "value": "Milestone"
                            },
                            {
                                "displayName": "Task",
                                "value": "Task"
                            },
                            {
                                "displayName": "Organisation",
                                "value": "Organisation"
                            },
                            {
                                "displayName": "Contract",
                                "value": "Contract"
                            },
                            {
                                "displayName": "File",
                                "value": "File"
                            },
                            {
                                "displayName": "Invoice Batch",
                                "value": "InvoiceBatch"
                            },
                            {
                                "displayName": "Knowledge Article",
                                "value": "KnowledgeArticle"
                            },
                            {
                                "displayName": "Folder",
                                "value": "Folder"
                            },
                            {
                                "displayName": "Folder Template",
                                "value": "FolderTemplate"
                            },
                            {
                                "displayName": "Knowledge Library",
                                "value": "KnowledgeLibrary"
                            },
                            {
                                "displayName": "Inbound Email",
                                "value": "InboundEmail"
                            },
                            {
                                "displayName": "User",
                                "value": "User"
                            },
                            {
                                "displayName": "Message Thread",
                                "value": "MessageThread"
                            },
                            {
                                "displayName": "Timeline Entry",
                                "value": "TimelineEntry"
                            },
                            {
                                "displayName": "Matter Status",
                                "value": "MatterStatus"
                            },
                            {
                                "displayName": "Contract Status",
                                "value": "ContractStatus"
                            },
                            {
                                "displayName": "Message",
                                "value": "Message"
                            },
                            {
                                "displayName": "Comment",
                                "value": "Comment"
                            }
                        ],
                        "x-ms-summary": "For Record Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Libs.Business.Models.LawVu.Grids.DataSourceResult`1[System.Object]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/fields-power-platform/{fieldId}/schema": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get field schema",
                "operationId": "PowerPlatform_Field_GetSchema",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fieldId",
                        "description": "e.g. field_1",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Field ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "query",
                        "name": "includeDefaultValues",
                        "description": "Include the default values for the field in the schema<p>Default: True</p>",
                        "type": "boolean",
                        "default": true,
                        "x-ms-summary": "Include Default Values"
                    },
                    {
                        "in": "query",
                        "name": "fieldTitleOverride",
                        "description": "Override the title of the field, normally the friendly field name",
                        "type": "string",
                        "x-ms-summary": "Field Title Override"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Libs.Business.Models.LawVu.Grids.DataSourceResult`1[System.Object]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/fields-power-platform/list": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get field list",
                "description": "All fields in the organisation",
                "operationId": "PowerPlatform_FieldList_Get",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "forRecordType",
                        "description": "Restrict field list to fields only used in Matters or Contracts",
                        "type": "string",
                        "enum": [
                            "Matter",
                            "Milestone",
                            "Task",
                            "Organisation",
                            "Contract",
                            "File",
                            "InvoiceBatch",
                            "KnowledgeArticle",
                            "Folder",
                            "FolderTemplate",
                            "KnowledgeLibrary",
                            "InboundEmail",
                            "User",
                            "MessageThread",
                            "TimelineEntry",
                            "MatterStatus",
                            "ContractStatus",
                            "Message",
                            "Comment"
                        ],
                        "x-ms-enum-values": [
                            {
                                "displayName": "Matter",
                                "value": "Matter"
                            },
                            {
                                "displayName": "Milestone",
                                "value": "Milestone"
                            },
                            {
                                "displayName": "Task",
                                "value": "Task"
                            },
                            {
                                "displayName": "Organisation",
                                "value": "Organisation"
                            },
                            {
                                "displayName": "Contract",
                                "value": "Contract"
                            },
                            {
                                "displayName": "File",
                                "value": "File"
                            },
                            {
                                "displayName": "Invoice Batch",
                                "value": "InvoiceBatch"
                            },
                            {
                                "displayName": "Knowledge Article",
                                "value": "KnowledgeArticle"
                            },
                            {
                                "displayName": "Folder",
                                "value": "Folder"
                            },
                            {
                                "displayName": "Folder Template",
                                "value": "FolderTemplate"
                            },
                            {
                                "displayName": "Knowledge Library",
                                "value": "KnowledgeLibrary"
                            },
                            {
                                "displayName": "Inbound Email",
                                "value": "InboundEmail"
                            },
                            {
                                "displayName": "User",
                                "value": "User"
                            },
                            {
                                "displayName": "Message Thread",
                                "value": "MessageThread"
                            },
                            {
                                "displayName": "Timeline Entry",
                                "value": "TimelineEntry"
                            },
                            {
                                "displayName": "Matter Status",
                                "value": "MatterStatus"
                            },
                            {
                                "displayName": "Contract Status",
                                "value": "ContractStatus"
                            },
                            {
                                "displayName": "Message",
                                "value": "Message"
                            },
                            {
                                "displayName": "Comment",
                                "value": "Comment"
                            }
                        ],
                        "x-ms-summary": "For Record Type"
                    },
                    {
                        "in": "query",
                        "name": "includeRecordProperties",
                        "description": "Includes items in the field list which don't map back to fields e.g. name, record owner, etc.<p>Default: True</p>",
                        "type": "boolean",
                        "default": true,
                        "x-ms-summary": "Include Record Properties"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/fields-power-platform/{fieldId}/options": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get the possible options for an options field",
                "operationId": "PowerPlatform_Field_GetFieldSchemaOptions",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fieldId",
                        "description": "e.g. field_1",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Field ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVuFieldOptionArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/files-power-platform/{fileId}/content": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Get file content",
                "description": "Returns the content of a file.",
                "operationId": "PowerPlatform_Files_GetFileContent",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fileId",
                        "description": "Enter the ID of the file to get content for (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "File ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "type": "string",
                            "x-ms-summary": "File content"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/files-power-platform/{fileId}": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Get file",
                "description": "Gets a file in LawVu",
                "operationId": "PowerPlatform_Files_GetFile",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fileId",
                        "description": "Enter the ID of the file to get metadata for (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "File ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.FileDetail"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/files-power-platform": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Get files",
                "description": "Gets a list of files in LawVu (with filters)",
                "operationId": "PowerPlatform_Files_GetFiles",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "getfiles.filesparentrecordtype",
                        "description": "Select the record type which contains the files",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Matter",
                            "Contract"
                        ],
                        "x-ms-summary": "Record Type",
                        "x-ms-enum-values": [
                            {
                                "displayName": "Matter",
                                "value": "Matter"
                            },
                            {
                                "displayName": "Contract",
                                "value": "Contract"
                            }
                        ]
                    },
                    {
                        "in": "query",
                        "name": "getfiles.recordid",
                        "description": "The record ID which contains the files (e.g. matter ID)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Record ID"
                    },
                    {
                        "in": "query",
                        "name": "getfiles.recursive",
                        "description": "Include files in nested folders",
                        "required": true,
                        "type": "boolean",
                        "x-ms-summary": "Include Nested"
                    },
                    {
                        "in": "query",
                        "name": "getfiles.parentfolderid",
                        "description": "Optionally select the subfolder which contains the files",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Sub folder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FileListItemArray"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/files-power-platform/{fileId}/download": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Get temporary file download link",
                "description": "Gets a temporary link where the file can be downloaded",
                "operationId": "PowerPlatform_Files_GetFileDownload",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fileId",
                        "description": "Enter the ID of the file to get temporary download link for (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "File ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.DownloadFile"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/folders-power-platform/picker": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Get folders for folder picker only",
                "description": "Gets a list of folders in LawVu, with the ID as a string for compatability with folder picker",
                "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "recordId",
                        "description": "The record ID the folders are linked to",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Record ID"
                    },
                    {
                        "in": "query",
                        "name": "recordType",
                        "description": "The record type the folders are linked to (Matter, Contract, Organisation etc)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Matter",
                            "Milestone",
                            "Task",
                            "Organisation",
                            "Contract",
                            "File",
                            "InvoiceBatch",
                            "KnowledgeArticle",
                            "Folder",
                            "FolderTemplate",
                            "KnowledgeLibrary",
                            "InboundEmail",
                            "User",
                            "MessageThread",
                            "TimelineEntry",
                            "MatterStatus",
                            "ContractStatus",
                            "Message",
                            "Comment"
                        ],
                        "x-ms-enum-values": [
                            {
                                "displayName": "Matter",
                                "value": "Matter"
                            },
                            {
                                "displayName": "Milestone",
                                "value": "Milestone"
                            },
                            {
                                "displayName": "Task",
                                "value": "Task"
                            },
                            {
                                "displayName": "Organisation",
                                "value": "Organisation"
                            },
                            {
                                "displayName": "Contract",
                                "value": "Contract"
                            },
                            {
                                "displayName": "File",
                                "value": "File"
                            },
                            {
                                "displayName": "Invoice Batch",
                                "value": "InvoiceBatch"
                            },
                            {
                                "displayName": "Knowledge Article",
                                "value": "KnowledgeArticle"
                            },
                            {
                                "displayName": "Folder",
                                "value": "Folder"
                            },
                            {
                                "displayName": "Folder Template",
                                "value": "FolderTemplate"
                            },
                            {
                                "displayName": "Knowledge Library",
                                "value": "KnowledgeLibrary"
                            },
                            {
                                "displayName": "Inbound Email",
                                "value": "InboundEmail"
                            },
                            {
                                "displayName": "User",
                                "value": "User"
                            },
                            {
                                "displayName": "Message Thread",
                                "value": "MessageThread"
                            },
                            {
                                "displayName": "Timeline Entry",
                                "value": "TimelineEntry"
                            },
                            {
                                "displayName": "Matter Status",
                                "value": "MatterStatus"
                            },
                            {
                                "displayName": "Contract Status",
                                "value": "ContractStatus"
                            },
                            {
                                "displayName": "Message",
                                "value": "Message"
                            },
                            {
                                "displayName": "Comment",
                                "value": "Comment"
                            }
                        ],
                        "x-ms-summary": "Record Type"
                    },
                    {
                        "in": "query",
                        "name": "parentFolderId",
                        "description": "Returns folders under the specified parentd folder ID otherwise it returns them from the root folder",
                        "type": "string",
                        "x-ms-summary": "Parent Folder ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FolderModelForPickerArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/file-apis/v1/folders": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "summary": "Get folders",
                "description": "Gets a list of folders in LawVu",
                "operationId": "PowerPlatform_Files_GetFolders",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "recordId",
                        "description": "Enter a record ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Record ID"
                    },
                    {
                        "in": "query",
                        "name": "recordType",
                        "description": "Select or enter a record type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Matter",
                            "Milestone",
                            "Task",
                            "Organisation",
                            "Contract",
                            "File",
                            "InvoiceBatch",
                            "KnowledgeArticle",
                            "Folder",
                            "FolderTemplate",
                            "KnowledgeLibrary",
                            "InboundEmail",
                            "User",
                            "MessageThread",
                            "TimelineEntry",
                            "MatterStatus",
                            "ContractStatus",
                            "Message",
                            "Comment"
                        ],
                        "x-ms-enum-values": [
                            {
                                "displayName": "Matter",
                                "value": "Matter"
                            },
                            {
                                "displayName": "Milestone",
                                "value": "Milestone"
                            },
                            {
                                "displayName": "Task",
                                "value": "Task"
                            },
                            {
                                "displayName": "Organisation",
                                "value": "Organisation"
                            },
                            {
                                "displayName": "Contract",
                                "value": "Contract"
                            },
                            {
                                "displayName": "File",
                                "value": "File"
                            },
                            {
                                "displayName": "Invoice Batch",
                                "value": "InvoiceBatch"
                            },
                            {
                                "displayName": "Knowledge Article",
                                "value": "KnowledgeArticle"
                            },
                            {
                                "displayName": "Folder",
                                "value": "Folder"
                            },
                            {
                                "displayName": "Folder Template",
                                "value": "FolderTemplate"
                            },
                            {
                                "displayName": "Knowledge Library",
                                "value": "KnowledgeLibrary"
                            },
                            {
                                "displayName": "Inbound Email",
                                "value": "InboundEmail"
                            },
                            {
                                "displayName": "User",
                                "value": "User"
                            },
                            {
                                "displayName": "Message Thread",
                                "value": "MessageThread"
                            },
                            {
                                "displayName": "Timeline Entry",
                                "value": "TimelineEntry"
                            },
                            {
                                "displayName": "Matter Status",
                                "value": "MatterStatus"
                            },
                            {
                                "displayName": "Contract Status",
                                "value": "ContractStatus"
                            },
                            {
                                "displayName": "Message",
                                "value": "Message"
                            },
                            {
                                "displayName": "Comment",
                                "value": "Comment"
                            }
                        ],
                        "x-ms-summary": "Record Type"
                    },
                    {
                        "in": "query",
                        "name": "parentFolderId",
                        "description": "Optional. Enter a folder ID to return folders under the specified folder ID, otherwise returns them from the root folder",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Parent Folder ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FolderModelArray"
                        }
                    }
                }
            }
        },
        "/field-apis/v1/lookupFields/{id}/choices": {
            "get": {
                "tags": [
                    "LookupFields"
                ],
                "summary": "Get available choices for a multi lookup field",
                "operationId": "LookupFields_GetChoices",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the field",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "Number of results to skip<p>Default: 0</p>",
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "x-ms-summary": "Skip"
                    },
                    {
                        "in": "query",
                        "name": "take",
                        "description": "The maximum number of choices to return<p>Default: 25</p>",
                        "type": "integer",
                        "format": "int32",
                        "default": 25,
                        "x-ms-summary": "Take"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Text filter",
                        "type": "string",
                        "x-ms-summary": "Search"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Fields.v1.ClientModels.PaganationResult`1[LawVu.PublicApi.Fields.v1.ClientModels.LookupOption]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/matters-power-platform/{matterId}/files": {
            "post": {
                "tags": [
                    "MatterFiles"
                ],
                "summary": "Upload file to a matter",
                "description": "Uploads a file to the matter",
                "operationId": "Matters_UploadFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "The ID of the matter",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The file to be uploaded",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.ClientModels.FileUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-ms-summary": "File ID"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/matters-power-platform/{matterId}": {
            "get": {
                "tags": [
                    "Matters"
                ],
                "summary": "Get matter",
                "description": "Gets the details of the selected matter",
                "operationId": "PowerPlatform_Matters_GetMatter",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/matters-power-platform": {
            "post": {
                "tags": [
                    "Matters"
                ],
                "summary": "Create matter",
                "description": "Creates a new matter with the supplied values",
                "operationId": "Matters_CreateMatter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.CreateMatter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-ms-summary": "Matter ID"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/matters-power-platform/{matterId}/users": {
            "get": {
                "tags": [
                    "Matters"
                ],
                "summary": "Get members of a matter",
                "description": "Returns users that are added as members of the matter",
                "operationId": "PowerPlatform_Matters_GetMatterUsers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MatterUserArray"
                        }
                    }
                }
            }
        },
        "/power-platform-apis/v1/matters-power-platform/{matterId}/fields": {
            "put": {
                "tags": [
                    "Matters"
                ],
                "summary": "Update matter field",
                "description": "Update a field in the selected matter",
                "operationId": "PowerPlatform_MatterFields_Update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The field update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.UpdateMatterFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/matter-apis/v1/matters/quickfind": {
            "get": {
                "tags": [
                    "Matters"
                ],
                "summary": "Find matters",
                "description": "Quickly find and filter matters",
                "operationId": "Matters_QuickFind",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "term",
                        "description": "A term to search matters by",
                        "type": "string",
                        "x-ms-summary": "Term"
                    },
                    {
                        "in": "query",
                        "name": "includeRestricted",
                        "description": "Include restricted matters in the search<p>Default: False</p>",
                        "type": "boolean",
                        "default": false,
                        "x-ms-summary": "Include Restricted",
                        "x-ms-visibility": "internal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/QuickFindMatterArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/matter-apis/v1/matters/{matterId}/users": {
            "post": {
                "tags": [
                    "Matters"
                ],
                "summary": "Add user to a matter",
                "description": "Adds a user to the matter (as owner, manager or regular matter member)",
                "operationId": "Matters_AddMatterUser",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details about how to assign the user to the matter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.AssignMatterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/matter-apis/v1/matters/{matterId}/statusMessages": {
            "post": {
                "tags": [
                    "MatterStatusMessage"
                ],
                "summary": "Add a status message to a matter",
                "description": "Adds a status message to a matter",
                "operationId": "Matters_AddStatusMessage",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The status message to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.MatterStatusMessageModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/matter-apis/v1/matters/tasktemplates": {
            "get": {
                "tags": [
                    "MatterTaskTemplates"
                ],
                "summary": "Get task templates",
                "description": "Gets task templates",
                "operationId": "Matters_GetTaskTemplates",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TaskTemplatesArray"
                        }
                    }
                }
            }
        },
        "/matter-apis/v1/matters/{matterId}/taskTemplates": {
            "post": {
                "tags": [
                    "MatterTaskTemplates"
                ],
                "summary": "Add a task template to matter",
                "description": "Adds a task template to a matter",
                "operationId": "Matters_AddTaskTemplate",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterId",
                        "description": "Enter a matter ID (number)",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The ID of the task template",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.AddTaskFromTemplateModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/power-platform-apis/v1/mattertypes-power-platform": {
            "get": {
                "tags": [
                    "MatterTypes"
                ],
                "summary": "Matter types",
                "description": "Gets the configured types for a matter",
                "operationId": "PowerPlatform_MatterTypes_GetTypes",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MatterCategoryArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/power-platform-apis/v1/mattertypes-power-platform/{matterTypeId}/createSchema": {
            "get": {
                "tags": [
                    "MatterTypes"
                ],
                "summary": "Matter creation schema",
                "description": "Get the form and fields for rendering a create matter form",
                "operationId": "PowerPlatform_MatterTypes_GetCreateSchema",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "matterTypeId",
                        "description": "The matter type to get the create form for",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Matter Type ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/account-apis/v1/organisations/{organisationId}/departments": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get departments",
                "description": "Returns an array of departments for the given organisation",
                "operationId": "Organisations_GetDepartments",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organisationId",
                        "description": "The organisation to get departments",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Organisation ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DepartmentArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/account-apis/v1/organisations/{organisationId}/regions": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get regions",
                "description": "Returns an array of regions for the given organisation",
                "operationId": "Organisations_GetRegions",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organisationId",
                        "description": "The organisation to get regions",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Organisation ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RegionArray"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/account-apis/v1/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get teams",
                "description": "Get teams",
                "operationId": "Teams_Get",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allowAssigment",
                        "description": "Only return teams that allow work assignment<p>Default: False</p>",
                        "type": "boolean",
                        "default": false,
                        "x-ms-summary": "Allow Assigment",
                        "x-ms-visibility": "internal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TeamArray"
                        }
                    }
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a matter is created",
                "description": "This operation is triggered when a new matter is created",
                "operationId": "Triggers_CreateSubscriptionMatterCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The created matter",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-status-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a matter state changes",
                "description": "This operation is triggered when a matter state is updated",
                "operationId": "Triggers_CreateSubscriptionMatterStatusUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The updated matter",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a matter is updated",
                "description": "This operation is triggered when a matter is updated",
                "operationId": "Triggers_CreateSubscriptionMatterUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The updated matter",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract is created",
                "description": "This operation is triggered when a new contract is created",
                "operationId": "Triggers_CreateSubscriptionContractCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The created contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-status-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract state changes",
                "description": "This operation is triggered when a contract state is updated",
                "operationId": "Triggers_CreateSubscriptionContractStatusUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The updated contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract is updated",
                "description": "This operation is triggered when a contract is updated",
                "operationId": "Triggers_CreateSubscriptionContractUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The updated contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-file-created-or-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a file is added or updated in a matter",
                "description": "This operation is triggered when a matter file is created or updated",
                "operationId": "Triggers_CreateSubscriptionMatterFileCreatedOrUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The added or updated matter file",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterFileCreatedOrUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-file-created-or-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a file is added or updated in a contract",
                "description": "This operation is triggered when a contract file is added or updated",
                "operationId": "Triggers_CreateSubscriptionContractFileCreatedOrUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The created or updated contract file",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractFileCreatedOrUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-document-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract document is updated",
                "description": "This operation is triggered when a contract document is updated",
                "operationId": "Triggers_CreateSubscriptionContractDocumentUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The added or updated contract document",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractDocumentUpdated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-tag-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a tag is added to a matter",
                "description": "This operation is triggered when a matter tag is added",
                "operationId": "Triggers_CreateSubscriptionMatterTagCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The tag added to the matter",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterTagCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/matter-status-message-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a status message is posted to a matter",
                "description": "This operation is triggered when a matter status message is posted",
                "operationId": "Triggers_CreateSubscriptionMatterStatusMessageCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The status message posted in the matter",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusMessageCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-status-message-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a status message is posted to a contract",
                "description": "This operation is triggered when a contract status message is posted",
                "operationId": "Triggers_CreateSubscriptionContractStatusMessageCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The status message posted in the contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusMessageCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-key-date-created": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract key date is created",
                "description": "This operation is triggered when a contract key date is created",
                "operationId": "Triggers_CreateSubscriptionContractKeyDateCreated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The key date added in the contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateCreated"
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/contract-key-date-updated": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a contract key date is updated",
                "description": "This operation is triggered when a contract key date is updated",
                "operationId": "Triggers_CreateSubscriptionContractKeyDateUpdated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "x-ms-trigger": "single"
            },
            "x-ms-notification-content": {
                "description": "The key date updated in the contract",
                "schema": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateUpdated"
                }
            }
        },
        "/account-apis/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Search users",
                "description": "Returns a list of users based on the filter criteria",
                "operationId": "Users_Get",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter.search",
                        "description": "Search text (applies to: name & email address)",
                        "type": "string",
                        "x-ms-summary": "Search Term"
                    },
                    {
                        "in": "query",
                        "name": "filter.permission",
                        "type": "string",
                        "enum": [
                            "CreateMatters",
                            "ContractCreator"
                        ],
                        "x-ms-summary": "Permission",
                        "x-ms-enum-values": [
                            {
                                "displayName": "Create Matters",
                                "value": "CreateMatters"
                            },
                            {
                                "displayName": "Contract Creator",
                                "value": "ContractCreator"
                            }
                        ],
                        "x-ms-visibility": "internal"
                    },
                    {
                        "in": "query",
                        "name": "filter.activeandinvitedusersonly",
                        "description": "Only users that are active or invited",
                        "type": "boolean",
                        "x-ms-summary": "Active And Invited Users Only",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "in": "query",
                        "name": "filter.primaryorganisationid",
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Primary Organisation ID",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "in": "query",
                        "name": "filter.activeusersonly",
                        "description": "Only users that are active",
                        "type": "boolean",
                        "x-ms-summary": "Active Users Only",
                        "x-ms-visibility": "internal"
                    },
                    {
                        "in": "query",
                        "name": "filter.uselitequery",
                        "description": "Use a lite query\r\nWhen enabled the response will return only partial information about the user:\r\nUserId, FirstName, LastName, UserFullName and OrganisationName",
                        "type": "boolean",
                        "x-ms-summary": "Use Lite Query",
                        "x-ms-visibility": "internal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserArray"
                        }
                    }
                }
            }
        },
        "/account-apis/v1/users/{id}/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "description": "Returns the profile of a specific user.",
                "operationId": "Users_GetProfile",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "User Id (e.g. e1bf0987-8844-49ab-a6b6-10562b58e230)",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "User ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.UserProfile"
                        }
                    }
                }
            }
        },
        "/account-apis/v1/webhooks/subscriptions/{id}": {
            "delete": {
                "tags": [
                    "WebhookSubscriptions"
                ],
                "summary": "Delete a subscription",
                "description": "Deleting a webhook subscription will stop notifications for that subscription",
                "operationId": "WebhookSubscriptions_DeleteWebHookSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the subscription",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "x-ms-visibility": "internal"
            }
        }
    },
    "definitions": {
        "ContractEntityArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.ContractEntity"
            }
        },
        "ContractKeyDateModelArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.InternalModels.ContractKeyDateModel"
            }
        },
        "ContractUserArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.ContractUser"
            }
        },
        "DepartmentArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.Department"
            }
        },
        "FieldArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.Fields.Field"
            }
        },
        "FileListItemArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Files.v1.ClientModels.FileListItem"
            }
        },
        "FolderModelArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Files.v1.ClientModels.FolderModel"
            }
        },
        "FolderModelForPickerArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Files.v1.ClientModels.FolderModelForPicker"
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the created contract",
                    "type": "integer",
                    "x-ms-summary": "Contract ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractDocumentUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the contract document file",
                    "type": "integer",
                    "x-ms-summary": "File ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractDocumentUpdated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractDocumentUpdated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractFileCreatedOrUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the file created or updated in the contract",
                    "type": "integer",
                    "x-ms-summary": "File ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractFileCreatedOrUpdated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractFileCreatedOrUpdated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the key date added to the contract",
                    "type": "integer",
                    "x-ms-summary": "Key Date ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateCreated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateCreated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the key date updated in the contract",
                    "type": "integer",
                    "x-ms-summary": "Key Date ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateUpdated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractKeyDateUpdated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusMessageCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the status message created in the contract",
                    "type": "integer",
                    "x-ms-summary": "Status Message ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusMessageCreated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusMessageCreated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractStatusUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the contract where the state was updated",
                    "type": "integer",
                    "x-ms-summary": "Contract ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ContractUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the updated contract",
                    "type": "integer",
                    "x-ms-summary": "Contract ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the created matter",
                    "type": "integer",
                    "x-ms-summary": "Matter ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterFileCreatedOrUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the file created or updated in the matter",
                    "type": "integer",
                    "x-ms-summary": "File ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterFileCreatedOrUpdated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterFileCreatedOrUpdated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent matter",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Matter ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusMessageCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the status message created in the matter",
                    "type": "integer",
                    "x-ms-summary": "Status Message ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusMessageCreated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusMessageCreated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent matter",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Matter ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterStatusUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the matter where the state was updated",
                    "type": "integer",
                    "x-ms-summary": "Matter ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterTagCreated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the tag created in the matter",
                    "type": "integer",
                    "x-ms-summary": "Tag ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                },
                "parentResource": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterTagCreated.ParentResource"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterTagCreated.ParentResource": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent matter",
                    "type": "integer",
                    "x-ms-summary": "Parent Resource: Matter ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.MatterUpdated": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the updated matter",
                    "type": "integer",
                    "x-ms-summary": "Matter ID"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Timestamp"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ParentContract": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent contract",
                    "type": "integer",
                    "x-ms-summary": "Contract ID"
                }
            }
        },
        "LawVu.PowerPlatform.Business.Model.WebhookMessage.ParentMatter": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "format": "int32",
                    "description": "The ID of the parent matter",
                    "type": "integer",
                    "x-ms-summary": "Matter ID"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.ClientModels.ContractFileUpload": {
            "description": "A contract file upload request",
            "required": [
                "conflictResolution",
                "fileContent",
                "fileName"
            ],
            "type": "object",
            "properties": {
                "folderId": {
                    "format": "int32",
                    "description": "Select the sub folder or enter the ID (number) to upload the file to (optional - leave blank to upload to the root folder)",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "capability": "file-picker",
                        "parameters": {
                            "isFolder": true,
                            "fileFilter": [],
                            "dataset": null
                        }
                    },
                    "x-ms-dynamic-tree": {
                        "settings": {
                            "canSelectParentNodes": true,
                            "canSelectLeafNodes": true
                        },
                        "open": {
                            "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                            "itemValuePath": "id",
                            "itemTitlePath": "name",
                            "itemIsParent": "true",
                            "itemFullTitlePath": "name",
                            "parameters": {
                                "recordType": {
                                    "value": "Contract"
                                },
                                "recordId": {
                                    "parameterReference": "contractId"
                                }
                            }
                        },
                        "browse": {
                            "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                            "itemValuePath": "id",
                            "itemTitlePath": "name",
                            "itemIsParent": "true",
                            "itemFullTitlePath": "name",
                            "parameters": {
                                "recordType": {
                                    "value": "Contract"
                                },
                                "recordId": {
                                    "parameterReference": "contractId"
                                },
                                "parentFolderId": {
                                    "selectedItemValuePath": "id"
                                }
                            }
                        }
                    },
                    "x-ms-summary": "Sub Folder"
                },
                "fileName": {
                    "description": "The name of the file, e.g. document.docx",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "File Name"
                },
                "fileContent": {
                    "format": "byte",
                    "description": "The content of the file",
                    "type": "string",
                    "x-ms-summary": "File Content"
                },
                "conflictResolution": {
                    "description": "Select an option for what to do if file already exists",
                    "enum": [
                        "Replace",
                        "KeepBoth",
                        "SaveVersion",
                        "Skip"
                    ],
                    "type": "string",
                    "x-ms-summary": "Conflict Resolution",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Replace",
                            "value": "Replace"
                        },
                        {
                            "displayName": "Keep Both",
                            "value": "KeepBoth"
                        },
                        {
                            "displayName": "Save Version",
                            "value": "SaveVersion"
                        },
                        {
                            "displayName": "Skip",
                            "value": "Skip"
                        }
                    ]
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.ClientModels.CreateContractByUpload": {
            "required": [
                "contractFile",
                "contractFileName",
                "contractTemplateId",
                "fields",
                "name"
            ],
            "type": "object",
            "properties": {
                "contractTemplateId": {
                    "format": "int32",
                    "description": "Select the template for the contract",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Contracts_GetTemplates",
                        "value-path": "id",
                        "value-title": "name"
                    },
                    "x-ms-summary": "Contract template"
                },
                "matterId": {
                    "format": "int32",
                    "description": "Enter the ID of the parent matter (number)",
                    "type": "integer",
                    "x-ms-summary": "Matter"
                },
                "parentContractId": {
                    "format": "int32",
                    "description": "Enter the ID of the parent contract (number)",
                    "type": "integer",
                    "x-ms-summary": "Parent Contract"
                },
                "fields": {
                    "description": "Select the template for the contract",
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "Contracts_GetUploadSchema",
                        "parameters": {
                            "templateId": {
                                "parameterReference": "body/contractTemplateId"
                            }
                        }
                    },
                    "x-ms-summary": "Contract template"
                },
                "name": {
                    "description": "Enter a contract name",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "externalId": {
                    "description": "Enter an ID from an external system (optional)",
                    "type": "string",
                    "x-ms-summary": "External Identifier"
                },
                "teamId": {
                    "format": "int32",
                    "description": "Select the team assignment (optional)",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Teams_Get",
                        "value-path": "id",
                        "value-title": "name",
                        "parameters": {
                            "allowAssigment": true
                        }
                    },
                    "x-ms-summary": "Teams"
                },
                "contractFile": {
                    "format": "byte",
                    "description": "The content of the contract file",
                    "type": "string",
                    "x-ms-summary": "Contract File"
                },
                "contractFileName": {
                    "description": "The filename of the Contract File",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "Contract File Name"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.ClientModels.CreateContractByWizard": {
            "required": [
                "contractTemplateId",
                "fields",
                "name"
            ],
            "type": "object",
            "properties": {
                "contractTemplateId": {
                    "format": "int32",
                    "description": "Select the template for the contract",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Contracts_GetTemplates",
                        "value-path": "id",
                        "value-title": "name",
                        "parameters": {
                            "hasWizard": true
                        }
                    },
                    "x-ms-summary": "Contract template"
                },
                "matterId": {
                    "format": "int32",
                    "description": "Enter the ID of the parent matter (number)",
                    "type": "integer",
                    "x-ms-summary": "Matter"
                },
                "parentContractId": {
                    "format": "int32",
                    "description": "Enter the ID of the parent contract (number)",
                    "type": "integer",
                    "x-ms-summary": "Parent Contract"
                },
                "fields": {
                    "description": "Select the template for the contract",
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "Contracts_GetUploadSchema",
                        "parameters": {
                            "templateId": {
                                "parameterReference": "body/contractTemplateId"
                            }
                        }
                    },
                    "x-ms-summary": "Contract template"
                },
                "name": {
                    "description": "Enter a contract name",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "externalId": {
                    "description": "Enter an ID from an external system (optional)",
                    "type": "string",
                    "x-ms-summary": "External Identifier"
                },
                "teamId": {
                    "format": "int32",
                    "description": "Select the team assignment (optional)",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Teams_Get",
                        "value-path": "id",
                        "value-title": "name",
                        "parameters": {
                            "allowAssigment": true
                        }
                    },
                    "x-ms-summary": "Teams"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.ClientModels.FileUploadRequest": {
            "description": "A file upload request",
            "required": [
                "conflictResolution",
                "fileContent",
                "fileName"
            ],
            "type": "object",
            "properties": {
                "folderId": {
                    "format": "int32",
                    "description": "Select the sub folder or enter the ID (number) to upload the file to (optional - leave blank to upload to the root folder)",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "capability": "file-picker",
                        "parameters": {
                            "isFolder": true,
                            "fileFilter": [],
                            "dataset": null
                        }
                    },
                    "x-ms-dynamic-tree": {
                        "settings": {
                            "canSelectParentNodes": true,
                            "canSelectLeafNodes": true
                        },
                        "open": {
                            "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                            "itemValuePath": "id",
                            "itemTitlePath": "name",
                            "itemIsParent": "true",
                            "itemFullTitlePath": "name",
                            "parameters": {
                                "recordType": {
                                    "value": "Matter"
                                },
                                "recordId": {
                                    "parameterReference": "matterId"
                                }
                            }
                        },
                        "browse": {
                            "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                            "itemValuePath": "id",
                            "itemTitlePath": "name",
                            "itemIsParent": "true",
                            "itemFullTitlePath": "name",
                            "parameters": {
                                "recordType": {
                                    "value": "Matter"
                                },
                                "recordId": {
                                    "parameterReference": "matterId"
                                },
                                "parentFolderId": {
                                    "selectedItemValuePath": "id"
                                }
                            }
                        }
                    },
                    "x-ms-summary": "Sub Folder"
                },
                "fileName": {
                    "description": "The name of the file, e.g. document.docx",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "File Name"
                },
                "fileContent": {
                    "format": "byte",
                    "description": "The content of the file",
                    "type": "string",
                    "x-ms-summary": "File Content"
                },
                "conflictResolution": {
                    "description": "Select an option for what to do if file already exists",
                    "enum": [
                        "Replace",
                        "KeepBoth",
                        "SaveVersion",
                        "Skip"
                    ],
                    "type": "string",
                    "x-ms-summary": "Conflict Resolution",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Replace",
                            "value": "Replace"
                        },
                        {
                            "displayName": "Keep Both",
                            "value": "KeepBoth"
                        },
                        {
                            "displayName": "Save Version",
                            "value": "SaveVersion"
                        },
                        {
                            "displayName": "Skip",
                            "value": "Skip"
                        }
                    ]
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "PowerPlatform_Fields_Get",
                        "parameters": {
                            "forRecordType": {
                                "value": "Contract"
                            }
                        }
                    },
                    "x-ms-summary": "Fields"
                },
                "teamName": {
                    "type": "string",
                    "x-ms-summary": "Team Name"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "status": {
                    "enum": [
                        "Draft",
                        "Negotiating",
                        "Approval",
                        "Signing",
                        "Executed",
                        "Expired",
                        "Void"
                    ],
                    "type": "string",
                    "x-ms-summary": "Status",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Draft",
                            "value": "Draft"
                        },
                        {
                            "displayName": "Negotiating",
                            "value": "Negotiating"
                        },
                        {
                            "displayName": "Approval",
                            "value": "Approval"
                        },
                        {
                            "displayName": "Signing",
                            "value": "Signing"
                        },
                        {
                            "displayName": "Executed",
                            "value": "Executed"
                        },
                        {
                            "displayName": "Expired",
                            "value": "Expired"
                        },
                        {
                            "displayName": "Void",
                            "value": "Void"
                        }
                    ]
                },
                "category": {
                    "enum": [
                        "Sales",
                        "Purchasing",
                        "Commercial"
                    ],
                    "type": "string",
                    "x-ms-summary": "Category",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Sales",
                            "value": "Sales"
                        },
                        {
                            "displayName": "Purchasing",
                            "value": "Purchasing"
                        },
                        {
                            "displayName": "Commercial",
                            "value": "Commercial"
                        }
                    ]
                },
                "templateId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Template ID"
                },
                "templateName": {
                    "type": "string",
                    "x-ms-summary": "Template Name"
                },
                "typeName": {
                    "type": "string",
                    "x-ms-summary": "Type Name"
                },
                "createdBy": {
                    "type": "string",
                    "x-ms-summary": "Created By"
                },
                "createdByUserId": {
                    "type": "string",
                    "x-ms-summary": "Created By User ID"
                },
                "ownerId": {
                    "type": "string",
                    "x-ms-summary": "Owner ID"
                },
                "matterId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Matter ID"
                },
                "matterName": {
                    "type": "string",
                    "x-ms-summary": "Matter Name"
                },
                "matterNumber": {
                    "type": "string",
                    "x-ms-summary": "Matter Number"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date Utc"
                },
                "restricted": {
                    "type": "boolean",
                    "x-ms-summary": "Restricted"
                },
                "hasSow": {
                    "type": "boolean",
                    "x-ms-summary": "Has Sow"
                },
                "parentContractId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Parent Contract ID"
                },
                "documentFileId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Document File ID"
                },
                "parentIsRestricted": {
                    "type": "boolean",
                    "x-ms-summary": "Parent Is Restricted"
                },
                "onContract": {
                    "type": "boolean",
                    "x-ms-summary": "On Contract"
                },
                "onMatter": {
                    "type": "boolean",
                    "x-ms-summary": "On Matter"
                },
                "contractSpecificEmail": {
                    "type": "string",
                    "x-ms-summary": "Contract Specific Email"
                },
                "expiry": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Expiry"
                },
                "teamId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Team ID"
                },
                "externalId": {
                    "type": "string",
                    "x-ms-summary": "External ID"
                },
                "lastStatusMessage": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract.LastStatusMessage"
                },
                "owner": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract.Owner"
                },
                "executedDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Executed Date Utc"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract.LastStatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: Message"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Last Status Message: Created Date Utc"
                },
                "userId": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Last Status Message: User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Initials"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Contract.Owner": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string",
                    "x-ms-summary": "Owner: User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Owner: User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Initials"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.DownloadFile": {
            "type": "object",
            "properties": {
                "downloadLink": {
                    "type": "string",
                    "x-ms-summary": "Download Link"
                },
                "expiryDate": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Expiry Date"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.FileDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "type": {
                    "type": "string",
                    "x-ms-summary": "Type"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Description"
                },
                "version": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Version"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date (UTC)"
                },
                "isPrivate": {
                    "type": "boolean",
                    "x-ms-summary": "Is Private"
                },
                "uploadedBy": {
                    "type": "string",
                    "x-ms-summary": "Uploaded By"
                },
                "documentId": {
                    "type": "string",
                    "x-ms-summary": "Document ID"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "PowerPlatform_Fields_Get",
                        "parameters": {
                            "forRecordType": {
                                "value": "Matter"
                            }
                        }
                    },
                    "x-ms-summary": "Fields"
                },
                "matterTypeName": {
                    "type": "string",
                    "x-ms-summary": "Matter Type"
                },
                "teamName": {
                    "type": "string",
                    "x-ms-summary": "Team Name"
                },
                "statusId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Status ID"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "matterNumber": {
                    "type": "string",
                    "x-ms-summary": "Matter Number"
                },
                "matterUrl": {
                    "type": "string",
                    "x-ms-summary": "Matter Url"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date Utc"
                },
                "managerOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Manager Organisation ID"
                },
                "owner": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Owner"
                },
                "manager": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Manager"
                },
                "organisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Organisation ID"
                },
                "organisationName": {
                    "type": "string",
                    "x-ms-summary": "Organisation Name"
                },
                "lastStatusMessage": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.LastStatusMessage"
                },
                "terms": {
                    "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Terms"
                },
                "matterSpecificEmail": {
                    "type": "string",
                    "x-ms-summary": "Matter Specific Email"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.InternalModels.MatterTagModel"
                    },
                    "x-ms-summary": "Tags"
                },
                "categoryId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Matter Type ID"
                },
                "externalId": {
                    "type": "string",
                    "x-ms-summary": "External ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "parentId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Parent ID"
                },
                "restricted": {
                    "type": "boolean",
                    "x-ms-summary": "Restricted"
                },
                "status": {
                    "type": "string",
                    "x-ms-summary": "Status"
                },
                "teamId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Team ID"
                },
                "urgent": {
                    "type": "boolean",
                    "x-ms-summary": "Urgent"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.LastStatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: Message"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Last Status Message: Created Date Utc"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Last Status Message: ID"
                },
                "userId": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Last Status Message: User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Organisation Name"
                },
                "role": {
                    "enum": [
                        "Administrator",
                        "InhouseLegal",
                        "Contributor",
                        "Standard",
                        "External",
                        "MatterManager"
                    ],
                    "type": "string",
                    "x-ms-summary": "Last Status Message: Role",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Administrator",
                            "value": "Administrator"
                        },
                        {
                            "displayName": "Inhouse Legal",
                            "value": "InhouseLegal"
                        },
                        {
                            "displayName": "Contributor",
                            "value": "Contributor"
                        },
                        {
                            "displayName": "Standard",
                            "value": "Standard"
                        },
                        {
                            "displayName": "External",
                            "value": "External"
                        },
                        {
                            "displayName": "Matter Manager",
                            "value": "MatterManager"
                        }
                    ]
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "Last Status Message: User Initials"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Manager": {
            "type": "object",
            "properties": {
                "userId": {
                    "description": "ID of the user",
                    "type": "string",
                    "x-ms-summary": "Manager: User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "Manager: User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "Manager: User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Manager: User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "Manager: User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "Manager: User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "Manager: User Initials"
                },
                "permissions": {
                    "description": "The permissions that the user has for the matter",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-ms-summary": "Manager: Permissions"
                },
                "isDelegateOwner": {
                    "description": "User has been assigned delegate owner",
                    "type": "boolean",
                    "x-ms-summary": "Manager: Is Delegate Owner"
                },
                "isDelegateManager": {
                    "description": "User is a delegate manager",
                    "type": "boolean",
                    "x-ms-summary": "Manager: Is Delegate Manager"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Owner": {
            "type": "object",
            "properties": {
                "userId": {
                    "description": "ID of the user",
                    "type": "string",
                    "x-ms-summary": "Owner: User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Owner: User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "Owner: User Initials"
                },
                "permissions": {
                    "description": "The permissions that the user has for the matter",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-ms-summary": "Owner: Permissions"
                },
                "isDelegateOwner": {
                    "description": "User has been assigned delegate owner",
                    "type": "boolean",
                    "x-ms-summary": "Owner: Is Delegate Owner"
                },
                "isDelegateManager": {
                    "description": "User is a delegate manager",
                    "type": "boolean",
                    "x-ms-summary": "Owner: Is Delegate Manager"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.Matter.Terms": {
            "type": "object",
            "properties": {
                "fileId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Terms: File ID"
                },
                "code": {
                    "type": "string",
                    "x-ms-summary": "Terms: Code"
                },
                "fileName": {
                    "type": "string",
                    "x-ms-summary": "Terms: File Name"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.UpdateContractFieldRequest": {
            "required": [
                "fieldId",
                "newValue"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "Select the field to update or enter the field ID",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "PowerPlatform_FieldList_Get",
                        "value-path": "fieldId",
                        "value-title": "title",
                        "parameters": {
                            "forRecordType": "Contract"
                        }
                    },
                    "x-ms-summary": "Field"
                },
                "newValue": {
                    "description": "The value to update the field with",
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "PowerPlatform_Field_GetSchema",
                        "parameters": {
                            "fieldId": {
                                "parameterReference": "body/fieldId"
                            },
                            "includeDefaultValues": {
                                "value": false
                            },
                            "fieldTitleOverride": {
                                "value": "Value"
                            }
                        }
                    },
                    "x-ms-summary": "New Value"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.ClientModels.UpdateMatterFieldRequest": {
            "required": [
                "fieldId",
                "newValue"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "Select the field to update or enter the field ID",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "PowerPlatform_FieldList_Get",
                        "value-path": "fieldId",
                        "value-title": "title",
                        "parameters": {
                            "forRecordType": "Matter"
                        }
                    },
                    "x-ms-summary": "Field"
                },
                "newValue": {
                    "description": "The value to update the field with",
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "PowerPlatform_Field_GetSchema",
                        "parameters": {
                            "fieldId": {
                                "parameterReference": "body/fieldId"
                            },
                            "includeDefaultValues": {
                                "value": false
                            },
                            "fieldTitleOverride": {
                                "value": "Value"
                            }
                        }
                    },
                    "x-ms-summary": "New Value"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.Fields.Field": {
            "type": "object",
            "properties": {
                "fieldId": {
                    "type": "string",
                    "x-ms-summary": "Field ID"
                },
                "title": {
                    "type": "string",
                    "x-ms-summary": "Title"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Description"
                },
                "lawvuType": {
                    "enum": [
                        "ShortText",
                        "LongText",
                        "Slider",
                        "Currency",
                        "Decimal",
                        "Checkbox",
                        "Date",
                        "Dropdown",
                        "Department",
                        "Region",
                        "BillingMethod",
                        "BillingIntention",
                        "Priority",
                        "ContractEntity",
                        "ConflictCheck",
                        "CheckboxList",
                        "RadioGroup",
                        "SectionHeader",
                        "ContractOwner",
                        "Restricted",
                        "List",
                        "InvoiceRecipient",
                        "User",
                        "Lookup"
                    ],
                    "type": "string",
                    "x-ms-summary": "Lawvu Type",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Short Text",
                            "value": "ShortText"
                        },
                        {
                            "displayName": "Long Text",
                            "value": "LongText"
                        },
                        {
                            "displayName": "Slider",
                            "value": "Slider"
                        },
                        {
                            "displayName": "Currency",
                            "value": "Currency"
                        },
                        {
                            "displayName": "Decimal",
                            "value": "Decimal"
                        },
                        {
                            "displayName": "Checkbox",
                            "value": "Checkbox"
                        },
                        {
                            "displayName": "Date",
                            "value": "Date"
                        },
                        {
                            "displayName": "Dropdown",
                            "value": "Dropdown"
                        },
                        {
                            "displayName": "Department",
                            "value": "Department"
                        },
                        {
                            "displayName": "Region",
                            "value": "Region"
                        },
                        {
                            "displayName": "Billing Method",
                            "value": "BillingMethod"
                        },
                        {
                            "displayName": "Billing Intention",
                            "value": "BillingIntention"
                        },
                        {
                            "displayName": "Priority",
                            "value": "Priority"
                        },
                        {
                            "displayName": "Contract Entity",
                            "value": "ContractEntity"
                        },
                        {
                            "displayName": "Conflict Check",
                            "value": "ConflictCheck"
                        },
                        {
                            "displayName": "Checkbox List",
                            "value": "CheckboxList"
                        },
                        {
                            "displayName": "Radio Group",
                            "value": "RadioGroup"
                        },
                        {
                            "displayName": "Section Header",
                            "value": "SectionHeader"
                        },
                        {
                            "displayName": "Contract Owner",
                            "value": "ContractOwner"
                        },
                        {
                            "displayName": "Restricted",
                            "value": "Restricted"
                        },
                        {
                            "displayName": "List",
                            "value": "List"
                        },
                        {
                            "displayName": "Invoice Recipient",
                            "value": "InvoiceRecipient"
                        },
                        {
                            "displayName": "User",
                            "value": "User"
                        },
                        {
                            "displayName": "Lookup",
                            "value": "Lookup"
                        }
                    ]
                },
                "isReadonly": {
                    "type": "boolean",
                    "x-ms-summary": "Is Readonly"
                },
                "lawvuName": {
                    "type": "string",
                    "x-ms-summary": "Lawvu Name"
                },
                "type": {
                    "type": "string",
                    "x-ms-summary": "Type"
                },
                "default": {
                    "x-ms-summary": "Default"
                }
            }
        },
        "LawVu.PowerPlatform.MiddlewareApi.Model.Fields.LawVuFieldOption": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "x-ms-summary": "Label"
                },
                "value": {
                    "x-ms-summary": "Value"
                },
                "isDeleted": {
                    "type": "boolean",
                    "x-ms-summary": "Is Deleted"
                },
                "isHidden": {
                    "type": "boolean",
                    "x-ms-summary": "Is Hidden"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.Department": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "parentId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Parent ID"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.Region": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel": {
            "required": [
                "subscriptionUrl"
            ],
            "type": "object",
            "properties": {
                "subscriptionUrl": {
                    "format": "uri",
                    "description": "The publicly accessible URL of the endpoint which will be notified",
                    "maxLength": 2048,
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "Subscription Url",
                    "x-ms-notification-url": true,
                    "x-ms-visibility": "internal"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.SaveWebhookSubscriptionModel.Topics": {
            "type": "array",
            "items": {
                "enum": [
                    "matter.created",
                    "matter.updated",
                    "contract.created",
                    "contract.updated",
                    "matter.status.updated",
                    "contract.status.updated",
                    "matter.file.created",
                    "contract.file.created",
                    "matter.file.updated",
                    "contract.file.updated",
                    "contract.document.updated",
                    "matter.statusmessage.created",
                    "contract.statusmessage.created",
                    "matter.tag.created",
                    "contract.keydate.created",
                    "contract.keydate.updated"
                ],
                "type": "string",
                "x-ms-enum-values": [
                    {
                        "displayName": "Matter Created",
                        "value": "matter.created"
                    },
                    {
                        "displayName": "Matter Updated",
                        "value": "matter.updated"
                    },
                    {
                        "displayName": "Contract Created",
                        "value": "contract.created"
                    },
                    {
                        "displayName": "Contract Updated",
                        "value": "contract.updated"
                    },
                    {
                        "displayName": "Matter Status Updated",
                        "value": "matter.status.updated"
                    },
                    {
                        "displayName": "Contract Status Updated",
                        "value": "contract.status.updated"
                    },
                    {
                        "displayName": "Matter File Created",
                        "value": "matter.file.created"
                    },
                    {
                        "displayName": "Contract File Created",
                        "value": "contract.file.created"
                    },
                    {
                        "displayName": "Matter File Updated",
                        "value": "matter.file.updated"
                    },
                    {
                        "displayName": "Contract File Updated",
                        "value": "contract.file.updated"
                    },
                    {
                        "displayName": "Contract Document Updated",
                        "value": "contract.document.updated"
                    },
                    {
                        "displayName": "Matter Status Message Created",
                        "value": "matter.statusmessage.created"
                    },
                    {
                        "displayName": "Contract Status Message Created",
                        "value": "contract.statusmessage.created"
                    },
                    {
                        "displayName": "Matter Tag Created",
                        "value": "matter.tag.created"
                    },
                    {
                        "displayName": "Contract Key Date Created",
                        "value": "contract.keydate.created"
                    },
                    {
                        "displayName": "Contract Key Date Updated",
                        "value": "contract.keydate.updated"
                    }
                ]
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "x-ms-summary": "ID"
                },
                "userName": {
                    "type": "string",
                    "x-ms-summary": "User Name"
                },
                "firstName": {
                    "type": "string",
                    "x-ms-summary": "First Name"
                },
                "lastName": {
                    "type": "string",
                    "x-ms-summary": "Last Name"
                },
                "organisationName": {
                    "type": "string",
                    "x-ms-summary": "Organisation Name"
                },
                "directPhone": {
                    "type": "string",
                    "x-ms-summary": "Direct Phone"
                },
                "mobilePhone": {
                    "type": "string",
                    "x-ms-summary": "Mobile Phone"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Email"
                },
                "hasPicture": {
                    "type": "boolean",
                    "x-ms-summary": "Has Picture"
                },
                "invitationSentUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Invitation Sent Utc"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "User Initials"
                },
                "isDisabled": {
                    "type": "boolean",
                    "x-ms-summary": "Is Disabled"
                },
                "hourlyRate": {
                    "format": "double",
                    "type": "number",
                    "x-ms-summary": "Hourly Rate"
                }
            }
        },
        "LawVu.PublicApi.Accounts.v1.ClientModels.UserProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "x-ms-summary": "ID"
                },
                "firstName": {
                    "type": "string",
                    "x-ms-summary": "First Name"
                },
                "lastName": {
                    "type": "string",
                    "x-ms-summary": "Last Name"
                },
                "email": {
                    "type": "string",
                    "x-ms-summary": "Email"
                },
                "mobilePhone": {
                    "type": "string",
                    "x-ms-summary": "Mobile Phone"
                },
                "directPhone": {
                    "type": "string",
                    "x-ms-summary": "Direct Phone"
                },
                "jobTitle": {
                    "type": "string",
                    "x-ms-summary": "Job Title"
                },
                "departmentId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Department ID"
                },
                "specialityIds": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-ms-summary": "Speciality Ids"
                },
                "biography": {
                    "type": "string",
                    "x-ms-summary": "Biography"
                },
                "linkedInUrl": {
                    "type": "string",
                    "x-ms-summary": "Linked In Url"
                },
                "organisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Organisation ID"
                },
                "organisationName": {
                    "type": "string",
                    "x-ms-summary": "Organisation Name"
                },
                "organisationType": {
                    "enum": [
                        "ServiceProvider",
                        "Customer"
                    ],
                    "type": "string",
                    "x-ms-summary": "Organisation Type",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Service Provider",
                            "value": "ServiceProvider"
                        },
                        {
                            "displayName": "Customer",
                            "value": "Customer"
                        }
                    ]
                },
                "role": {
                    "enum": [
                        "Administrator",
                        "InhouseLegal",
                        "Contributor",
                        "Standard",
                        "External",
                        "MatterManager"
                    ],
                    "type": "string",
                    "x-ms-summary": "Role",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Administrator",
                            "value": "Administrator"
                        },
                        {
                            "displayName": "Inhouse Legal",
                            "value": "InhouseLegal"
                        },
                        {
                            "displayName": "Contributor",
                            "value": "Contributor"
                        },
                        {
                            "displayName": "Standard",
                            "value": "Standard"
                        },
                        {
                            "displayName": "External",
                            "value": "External"
                        },
                        {
                            "displayName": "Matter Manager",
                            "value": "MatterManager"
                        }
                    ]
                },
                "departmentName": {
                    "type": "string",
                    "x-ms-summary": "Department Name"
                },
                "invitationSentUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Invitation Sent Utc"
                },
                "status": {
                    "enum": [
                        "Listed",
                        "Active",
                        "Invited",
                        "LockedOut",
                        "Disabled"
                    ],
                    "type": "string",
                    "x-ms-summary": "Status",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Listed",
                            "value": "Listed"
                        },
                        {
                            "displayName": "Active",
                            "value": "Active"
                        },
                        {
                            "displayName": "Invited",
                            "value": "Invited"
                        },
                        {
                            "displayName": "Locked Out",
                            "value": "LockedOut"
                        },
                        {
                            "displayName": "Disabled",
                            "value": "Disabled"
                        }
                    ]
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.AssignContractUser": {
            "required": [
                "userId"
            ],
            "type": "object",
            "properties": {
                "userId": {
                    "description": "Search for a user or enter the user's ID (string)",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "Users_Get",
                        "value-path": "id",
                        "value-title": "userFullName"
                    },
                    "x-ms-summary": "User"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.ContractEntity": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.ContractStatusMessageModel": {
            "required": [
                "statusMessage"
            ],
            "type": "object",
            "properties": {
                "statusMessage": {
                    "description": "Status message to display",
                    "type": "string",
                    "x-ms-summary": "Status Message"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.ContractTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "hasWizard": {
                    "type": "boolean",
                    "x-ms-summary": "Has Wizard"
                },
                "team": {
                    "$ref": "#/definitions/LawVu.PublicApi.Contracts.v1.ClientModels.ContractTemplate.Team"
                },
                "teamRequired": {
                    "type": "boolean",
                    "x-ms-summary": "Team Required"
                },
                "hasRules": {
                    "type": "boolean",
                    "x-ms-summary": "Has Rules"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.ContractTemplate.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Team: ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Team: Name"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Team: Description"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.ContractUser": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string",
                    "x-ms-summary": "User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "User Initials"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.StatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-ms-summary": "Message"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date Utc"
                },
                "userId": {
                    "type": "string",
                    "x-ms-summary": "User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "User Initials"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.ClientModels.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Description"
                }
            }
        },
        "LawVu.PublicApi.Contracts.v1.InternalModels.ContractKeyDateModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "date": {
                    "type": "string",
                    "x-ms-summary": "Date"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "value": {
                    "format": "double",
                    "type": "number",
                    "x-ms-summary": "Value"
                }
            }
        },
        "LawVu.PublicApi.Fields.v1.ClientModels.LookupOption": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "label": {
                    "type": "string",
                    "x-ms-summary": "Label"
                }
            }
        },
        "LawVu.PublicApi.Fields.v1.ClientModels.PaganationResult`1[LawVu.PublicApi.Fields.v1.ClientModels.LookupOption]": {
            "type": "object",
            "properties": {
                "skip": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Skip"
                },
                "take": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Take"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LawVu.PublicApi.Fields.v1.ClientModels.LookupOption"
                    },
                    "x-ms-summary": "Results"
                }
            }
        },
        "LawVu.PublicApi.Files.v1.ClientModels.FileListItem": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "type": {
                    "enum": [
                        "Folder",
                        "File"
                    ],
                    "type": "string",
                    "x-ms-summary": "Type",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Folder",
                            "value": "Folder"
                        },
                        {
                            "displayName": "File",
                            "value": "File"
                        }
                    ]
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "size": {
                    "format": "int64",
                    "type": "integer",
                    "x-ms-summary": "Size"
                },
                "version": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Version"
                },
                "uploadedDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Uploaded Date (UTC)"
                },
                "isPrivate": {
                    "type": "boolean",
                    "x-ms-summary": "Is Private"
                },
                "uploadedBy": {
                    "type": "string",
                    "x-ms-summary": "Uploaded By"
                },
                "uploadedByOrganisation": {
                    "type": "string",
                    "x-ms-summary": "Uploaded By Organisation"
                },
                "fileModifiedDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "File Modified Date Utc"
                },
                "documentId": {
                    "type": "string",
                    "x-ms-summary": "Document ID"
                },
                "path": {
                    "type": "string",
                    "x-ms-summary": "Path"
                }
            }
        },
        "LawVu.PublicApi.Files.v1.ClientModels.FolderModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "Folder ID",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "description": "Folder Name",
                    "type": "string",
                    "x-ms-summary": "Name"
                }
            }
        },
        "LawVu.PublicApi.Files.v1.ClientModels.FolderModelForPicker": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Folder ID",
                    "type": "string",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "description": "Folder Name",
                    "type": "string",
                    "x-ms-summary": "Name"
                }
            }
        },
        "LawVu.PublicApi.Libs.Business.Models.LawVu.Grids.DataSourceResult`1[System.Object]": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Represents a single page of processed data.",
                    "type": "array",
                    "items": {},
                    "x-ms-summary": "Data"
                },
                "total": {
                    "format": "int32",
                    "description": "The total number of records available.",
                    "type": "integer",
                    "x-ms-summary": "Total"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.AddTaskFromTemplateModel": {
            "required": [
                "templateId"
            ],
            "type": "object",
            "properties": {
                "templateId": {
                    "format": "int32",
                    "description": "Select a task template",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Matters_GetTaskTemplates",
                        "value-path": "id",
                        "value-title": "name"
                    },
                    "x-ms-summary": "Task Template"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.AssignMatterUser": {
            "required": [
                "target",
                "userId"
            ],
            "type": "object",
            "properties": {
                "userId": {
                    "description": "Search for a user or enter the user's ID (string)",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "Users_Get",
                        "value-path": "id",
                        "value-title": "userFullName"
                    },
                    "x-ms-summary": "User"
                },
                "target": {
                    "description": "Specify the assignment for the user and the matter",
                    "enum": [
                        "Matter",
                        "MatterOwner",
                        "MatterManager"
                    ],
                    "type": "string",
                    "x-ms-summary": "Assignment",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Member",
                            "value": "Matter"
                        },
                        {
                            "displayName": "Owner",
                            "value": "MatterOwner"
                        },
                        {
                            "displayName": "Manager",
                            "value": "MatterManager"
                        }
                    ]
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.CreateMatter": {
            "required": [
                "categoryId",
                "fields"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the matter",
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "categoryId": {
                    "format": "int32",
                    "description": "Select the type of the matter",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "PowerPlatform_MatterTypes_GetTypes",
                        "value-path": "id",
                        "value-title": "name"
                    },
                    "x-ms-summary": "Matter Type"
                },
                "fields": {
                    "description": "Select the type of the matter",
                    "type": "object",
                    "x-ms-dynamic-properties": {
                        "operationId": "PowerPlatform_MatterTypes_GetCreateSchema",
                        "parameters": {
                            "matterTypeId": {
                                "parameterReference": "body/categoryId"
                            }
                        }
                    },
                    "x-ms-summary": "Matter Type"
                },
                "restricted": {
                    "description": "Is the matter restricted",
                    "type": "boolean",
                    "x-ms-summary": "Restricted"
                },
                "urgent": {
                    "description": "Is the matter urgent",
                    "type": "boolean",
                    "x-ms-summary": "Urgent"
                },
                "parentId": {
                    "format": "int32",
                    "description": "The ID of the parent matter (number)",
                    "type": "integer",
                    "x-ms-summary": "Parent Matter ID"
                },
                "managerId": {
                    "description": "Search for a user or enter the user's ID (string)",
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "Users_Get",
                        "value-path": "id",
                        "value-title": "userFullName"
                    },
                    "x-ms-summary": "Manager"
                },
                "ownerId": {
                    "description": "Search for a user or enter the user's ID (string)",
                    "type": "string",
                    "x-ms-dynamic-values": {
                        "operationId": "Users_Get",
                        "value-path": "id",
                        "value-title": "userFullName"
                    },
                    "x-ms-summary": "Owner"
                },
                "externalId": {
                    "description": "Optionally set an ID from an external system. Uniqueness is enforced for your organisation",
                    "type": "string",
                    "x-ms-summary": "External ID"
                },
                "teamId": {
                    "format": "int32",
                    "description": "Search for a team or enter the team's ID (number)",
                    "type": "integer",
                    "x-ms-dynamic-values": {
                        "operationId": "Teams_Get",
                        "value-path": "id",
                        "value-title": "name",
                        "parameters": {
                            "allowAssigment": true
                        }
                    },
                    "x-ms-summary": "Team"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.MatterCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "parentId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Parent ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.MatterCategory"
                    },
                    "x-ms-summary": "Children"
                },
                "teamId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Team ID"
                },
                "isDeleted": {
                    "type": "boolean",
                    "x-ms-summary": "Is Deleted"
                },
                "teamRequired": {
                    "type": "boolean",
                    "x-ms-summary": "Team Required"
                },
                "hasRules": {
                    "type": "boolean",
                    "x-ms-summary": "Has Rules"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.MatterStatusMessageModel": {
            "required": [
                "statusMessage"
            ],
            "type": "object",
            "properties": {
                "statusMessage": {
                    "description": "Status message to display",
                    "minLength": 1,
                    "type": "string",
                    "x-ms-summary": "Status Message"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.MatterUser": {
            "type": "object",
            "properties": {
                "userId": {
                    "description": "ID of the user",
                    "type": "string",
                    "x-ms-summary": "User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "User Organisation Name"
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "User Initials"
                },
                "permissions": {
                    "description": "The permissions that the user has for the matter",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-ms-summary": "Permissions"
                },
                "isDelegateOwner": {
                    "description": "User has been assigned delegate owner",
                    "type": "boolean",
                    "x-ms-summary": "Is Delegate Owner"
                },
                "isDelegateManager": {
                    "description": "User is a delegate manager",
                    "type": "boolean",
                    "x-ms-summary": "Is Delegate Manager"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.QuickFindMatter": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "matterNumber": {
                    "type": "string",
                    "x-ms-summary": "Matter Number"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "organisationName": {
                    "type": "string",
                    "x-ms-summary": "Organisation Name"
                },
                "reference": {
                    "type": "string",
                    "x-ms-summary": "Reference"
                },
                "managerReference": {
                    "type": "string",
                    "x-ms-summary": "Manager Reference"
                },
                "purchaseOrderNumber": {
                    "type": "string",
                    "x-ms-summary": "Purchase Order Number"
                },
                "parentId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Parent ID"
                },
                "organisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "Organisation ID"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.StatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-ms-summary": "Message"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date Utc"
                },
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "userId": {
                    "type": "string",
                    "x-ms-summary": "User ID"
                },
                "userFirstname": {
                    "type": "string",
                    "x-ms-summary": "User Firstname"
                },
                "userLastname": {
                    "type": "string",
                    "x-ms-summary": "User Lastname"
                },
                "userOrganisationId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "User Organisation ID"
                },
                "userOrganisationName": {
                    "type": "string",
                    "x-ms-summary": "User Organisation Name"
                },
                "role": {
                    "enum": [
                        "Administrator",
                        "InhouseLegal",
                        "Contributor",
                        "Standard",
                        "External",
                        "MatterManager"
                    ],
                    "type": "string",
                    "x-ms-summary": "Role",
                    "x-ms-enum-values": [
                        {
                            "displayName": "Administrator",
                            "value": "Administrator"
                        },
                        {
                            "displayName": "Inhouse Legal",
                            "value": "InhouseLegal"
                        },
                        {
                            "displayName": "Contributor",
                            "value": "Contributor"
                        },
                        {
                            "displayName": "Standard",
                            "value": "Standard"
                        },
                        {
                            "displayName": "External",
                            "value": "External"
                        },
                        {
                            "displayName": "Matter Manager",
                            "value": "MatterManager"
                        }
                    ]
                },
                "userFullName": {
                    "type": "string",
                    "x-ms-summary": "User Full Name"
                },
                "userInitials": {
                    "type": "string",
                    "x-ms-summary": "User Initials"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.TaskTemplates": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Description"
                },
                "createdDateUtc": {
                    "format": "date-time",
                    "type": "string",
                    "x-ms-summary": "Created Date (UTC)"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.ClientModels.TermsAndConditions": {
            "type": "object",
            "properties": {
                "fileId": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "File ID"
                },
                "code": {
                    "type": "string",
                    "x-ms-summary": "Code"
                },
                "fileName": {
                    "type": "string",
                    "x-ms-summary": "File Name"
                }
            }
        },
        "LawVu.PublicApi.Matters.v1.InternalModels.MatterTagModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-ms-summary": "ID"
                },
                "description": {
                    "type": "string",
                    "x-ms-summary": "Description"
                }
            }
        },
        "LawVuFieldOptionArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PowerPlatform.MiddlewareApi.Model.Fields.LawVuFieldOption"
            }
        },
        "MatterCategoryArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.MatterCategory"
            }
        },
        "MatterUserArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.MatterUser"
            }
        },
        "QuickFindMatterArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.QuickFindMatter"
            }
        },
        "RegionArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.Region"
            }
        },
        "TaskTemplatesArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Matters.v1.ClientModels.TaskTemplates"
            }
        },
        "TeamArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.Team"
            }
        },
        "UserArray": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/LawVu.PublicApi.Accounts.v1.ClientModels.User"
            }
        },
        "WebhookTopicArray": {
            "type": "array",
            "items": {
                "enum": [
                    "matter.created",
                    "matter.updated",
                    "contract.created",
                    "contract.updated",
                    "matter.status.updated",
                    "contract.status.updated",
                    "matter.file.created",
                    "contract.file.created",
                    "matter.file.updated",
                    "contract.file.updated",
                    "contract.document.updated",
                    "matter.statusmessage.created",
                    "contract.statusmessage.created",
                    "matter.tag.created",
                    "contract.keydate.created",
                    "contract.keydate.updated"
                ],
                "type": "string",
                "x-ms-enum-values": [
                    {
                        "displayName": "Matter Created",
                        "value": "matter.created"
                    },
                    {
                        "displayName": "Matter Updated",
                        "value": "matter.updated"
                    },
                    {
                        "displayName": "Contract Created",
                        "value": "contract.created"
                    },
                    {
                        "displayName": "Contract Updated",
                        "value": "contract.updated"
                    },
                    {
                        "displayName": "Matter Status Updated",
                        "value": "matter.status.updated"
                    },
                    {
                        "displayName": "Contract Status Updated",
                        "value": "contract.status.updated"
                    },
                    {
                        "displayName": "Matter File Created",
                        "value": "matter.file.created"
                    },
                    {
                        "displayName": "Contract File Created",
                        "value": "contract.file.created"
                    },
                    {
                        "displayName": "Matter File Updated",
                        "value": "matter.file.updated"
                    },
                    {
                        "displayName": "Contract File Updated",
                        "value": "contract.file.updated"
                    },
                    {
                        "displayName": "Contract Document Updated",
                        "value": "contract.document.updated"
                    },
                    {
                        "displayName": "Matter Status Message Created",
                        "value": "matter.statusmessage.created"
                    },
                    {
                        "displayName": "Contract Status Message Created",
                        "value": "contract.statusmessage.created"
                    },
                    {
                        "displayName": "Matter Tag Created",
                        "value": "matter.tag.created"
                    },
                    {
                        "displayName": "Contract Key Date Created",
                        "value": "contract.keydate.created"
                    },
                    {
                        "displayName": "Contract Key Date Updated",
                        "value": "contract.keydate.updated"
                    }
                ]
            }
        }
    },
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://lawvu.com/"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://lawvu.com/trust-center/privacy"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Business Management;Collaboration"
        }
    ],
    "x-ms-capabilities": {
        "file-picker": {
            "open": {
                "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                "parameters": {
                    "recordId": {
                        "parameter": "recordId"
                    },
                    "recordType": {
                        "parameter": "recordType"
                    }
                }
            },
            "browse": {
                "operationId": "PowerPlatform_Files_GetFoldersForPicker",
                "parameters": {
                    "parentFolderId": {
                        "value-property": "Id"
                    },
                    "recordId": {
                        "parameter": "recordId"
                    },
                    "recordType": {
                        "parameter": "recordType"
                    }
                }
            },
            "value-title": "Name"
        }
    }
}