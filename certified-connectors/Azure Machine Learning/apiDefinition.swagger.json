{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning",
    "description": "Azure Machine Learning REST CLI (v2)",
    "version": "1.0",
    "contact": {
      "name": "Microsoft",
      "url": "https://azure.microsoft.com/",
      "email": "amlassetsdev@microsoft.com"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "List batch endpoints",
        "operationId": "BatchEndpointsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Count"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "count": 1
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "properties": {
                          "string": "string"
                        },
                        "scoringUri": "https://www.contoso.com/example",
                        "swaggerUri": "https://www.contoso.com/example",
                        "authMode": "AMLToken",
                        "defaults": {
                          "deploymentName": "string"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      },
                      "tags": {
                      },
                      "location": "string",
                      "kind": "string",
                      "identity": {
                        "type": "SystemAssigned",
                        "principalId": "<Principal Id>",
                        "tenantId": "<Tenant Id>",
                        "userAssignedIdentities": {
                          "string": {
                            "principalId": "<Principal Id>",
                            "clientId": "<Client Id>"
                          }
                        }
                      },
                      "sku": {
                        "name": "string",
                        "tier": "Free",
                        "size": "string",
                        "family": "string",
                        "capacity": 1
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List batch endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "List resource groups",
        "description": "Lists all the resource groups within the subscription. The results are paginated at 1,000+ records.",
        "operationId": "ListResourceGroups",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroupListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Delete batch endpoints",
        "operationId": "BatchEndpointsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "resourceGroup-1234",
              "workspaceName": "testworkspace",
              "endpointName": "testBatchEndpoint",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "202": {
              },
              "204": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Delete batch endpoints"
      },
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Get batch endpoints",
        "operationId": "BatchEndpointsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch Endpoint.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "defaults": {
                      "deploymentName": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "description": "Get batch endpoints"
      },
      "patch": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Update batch endpoints",
        "operationId": "BatchEndpointsUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Mutable batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "body": {
                "tags": {
                },
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "defaults": {
                      "deploymentName": "string"
                    },
                    "provisioningState": "Creating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update batch endpoints"
      },
      "put": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Create or update batch endpoints",
        "operationId": "BatchEndpointsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "properties": {
                    "string": "string"
                  },
                  "authMode": "AMLToken",
                  "defaults": {
                    "deploymentName": "string"
                  }
                },
                "tags": {
                },
                "location": "string",
                "kind": "string",
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "defaults": {
                      "deploymentName": "string"
                    },
                    "provisioningState": "Succeeded"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "defaults": {
                      "deploymentName": "string"
                    },
                    "provisioningState": "Updating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update batch endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "List batch deployments",
        "operationId": "BatchDeploymentsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "properties": {
                          "string": "string"
                        },
                        "codeConfiguration": {
                          "codeId": "string",
                          "scoringScript": "string"
                        },
                        "environmentId": "string",
                        "environmentVariables": {
                          "string": "string"
                        },
                        "compute": "string",
                        "errorThreshold": 1,
                        "retrySettings": {
                          "maxRetries": 1,
                          "timeout": "PT5M"
                        },
                        "miniBatchSize": 1,
                        "loggingLevel": "Info",
                        "model": {
                          "referenceType": "Id",
                          "assetId": "string"
                        },
                        "maxConcurrencyPerInstance": 1,
                        "outputAction": "SummaryOnly",
                        "outputFileName": "string",
                        "resources": {
                          "instanceCount": 1,
                          "instanceType": "string",
                          "properties": {
                            "string": {
                              "<Resource Id>": ""
                            }
                          }
                        },
                        "provisioningState": "Creating"
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      },
                      "tags": {
                      },
                      "location": "string",
                      "kind": "string",
                      "identity": {
                        "type": "SystemAssigned",
                        "principalId": "<Principal Id>",
                        "tenantId": "<Tenant Id>",
                        "userAssignedIdentities": {
                          "string": {
                            "principalId": "<Principal Id>",
                            "clientId": "<Client Id>"
                          }
                        }
                      },
                      "sku": {
                        "name": "string",
                        "tier": "Free",
                        "size": "string",
                        "family": "string",
                        "capacity": 1
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List batch deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Delete batch deployments",
        "operationId": "BatchDeploymentsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference deployment identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Batch Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "202": {
              },
              "204": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Delete batch deployments"
      },
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Get batch deployments",
        "operationId": "BatchDeploymentsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch deployments.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "compute": "string",
                    "errorThreshold": 1,
                    "retrySettings": {
                      "maxRetries": 1,
                      "timeout": "PT5M"
                    },
                    "miniBatchSize": 1,
                    "loggingLevel": "Info",
                    "model": {
                      "referenceType": "Id",
                      "assetId": "string"
                    },
                    "maxConcurrencyPerInstance": 1,
                    "outputAction": "SummaryOnly",
                    "outputFileName": "string",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "provisioningState": "Creating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "description": "Get batch deployments"
      },
      "patch": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Update batch deployments",
        "operationId": "BatchDeploymentsUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Batch Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string"
                },
                "tags": {
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "compute": "string",
                    "errorThreshold": 1,
                    "retrySettings": {
                      "maxRetries": 1,
                      "timeout": "PT5M"
                    },
                    "miniBatchSize": 1,
                    "loggingLevel": "Info",
                    "model": {
                      "referenceType": "Id",
                      "assetId": "string"
                    },
                    "maxConcurrencyPerInstance": 1,
                    "outputAction": "SummaryOnly",
                    "outputFileName": "string",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "provisioningState": "Creating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update batch deployments"
      },
      "put": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Create or update batch deployments",
        "operationId": "BatchDeploymentsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "properties": {
                    "string": "string"
                  },
                  "codeConfiguration": {
                    "codeId": "string",
                    "scoringScript": "string"
                  },
                  "environmentId": "string",
                  "environmentVariables": {
                    "string": "string"
                  },
                  "compute": "string",
                  "errorThreshold": 1,
                  "retrySettings": {
                    "maxRetries": 1,
                    "timeout": "PT5M"
                  },
                  "miniBatchSize": 1,
                  "loggingLevel": "Info",
                  "model": {
                    "referenceType": "Id",
                    "assetId": "string"
                  },
                  "maxConcurrencyPerInstance": 1,
                  "outputAction": "SummaryOnly",
                  "outputFileName": "string",
                  "resources": {
                    "instanceCount": 1,
                    "instanceType": "string",
                    "properties": {
                      "string": {
                        "<Resource Id>": ""
                      }
                    }
                  }
                },
                "tags": {
                },
                "location": "string",
                "kind": "string",
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "compute": "string",
                    "errorThreshold": 1,
                    "retrySettings": {
                      "maxRetries": 1,
                      "timeout": "PT5M"
                    },
                    "miniBatchSize": 1,
                    "loggingLevel": "Info",
                    "model": {
                      "referenceType": "Id",
                      "assetId": "string"
                    },
                    "maxConcurrencyPerInstance": 1,
                    "outputAction": "SummaryOnly",
                    "outputFileName": "string",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "provisioningState": "Creating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "compute": "string",
                    "errorThreshold": 1,
                    "retrySettings": {
                      "maxRetries": 1,
                      "timeout": "PT5M"
                    },
                    "miniBatchSize": 1,
                    "loggingLevel": "Info",
                    "model": {
                      "referenceType": "Id",
                      "assetId": "string"
                    },
                    "maxConcurrencyPerInstance": 1,
                    "outputAction": "SummaryOnly",
                    "outputFileName": "string",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "provisioningState": "Creating"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update batch deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
      "post": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "List keys batch endpoints",
        "operationId": "BatchEndpointsListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Batch Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "primaryKey": "string",
                  "secondaryKey": "string"
                }
              }
            }
          }
        },
        "description": "List keys batch endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List code containers",
        "operationId": "CodeContainersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "$skipToken": "skiptoken"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/testContainer",
                      "name": "testContainer",
                      "type": "Microsoft.MachineLearningServices/workspaces/codes",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "property1": "string",
                          "property2": "string"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-08-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-08-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    },
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/testContainer2",
                      "name": "testContainer2",
                      "type": "Microsoft.MachineLearningServices/workspaces/codes",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "property1": "string",
                          "property2": "string"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-08-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-08-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List code containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete code containers",
        "operationId": "CodeContainersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Code Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete code containers"
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get code containers",
        "operationId": "CodeContainersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/codes",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "property1": "string",
                      "property2": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-08-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get code containers"
      },
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update code containers",
        "operationId": "CodeContainersCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testContainer",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "tag1": "value1",
                    "tag2": "value2"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/codes",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "property1": "string",
                      "property2": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/codes",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "property1": "string",
                      "property2": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update code containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List code versions",
        "operationId": "CodeVersionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "isAnonymous": false,
                        "codeUri": "https://blobStorage/folderName"
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List code versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete code versions",
        "operationId": "CodeVersionsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Code Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete code versions"
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get code versions",
        "operationId": "CodeVersionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "codeUri": "https://blobStorage/folderName"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get code versions"
      },
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update code versions",
        "operationId": "CodeVersionsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "isAnonymous": false,
                  "codeUri": "https://blobStorage/folderName"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "codeUri": "https://blobStorage/folderName"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "codeUri": "https://blobStorage/folderName"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update code versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components": {
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "List component containers",
        "operationId": "ComponentContainersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Component Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List component containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}": {
      "delete": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Delete component containers",
        "operationId": "ComponentContainersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Component Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete component containers"
      },
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Get component containers",
        "operationId": "ComponentContainersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Component Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get component containers"
      },
      "put": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Create or update component containers",
        "operationId": "ComponentContainersCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Component Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update component containers"
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "List subscriptions",
        "description": "Gets a list of all the subscriptions to which the principal has access.",
        "operationId": "ListSubscriptions",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubscriptionListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions": {
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "List component versions",
        "operationId": "ComponentVersionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Component name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Component Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "isAnonymous": false,
                        "componentSpec": {
                          "<Component Id>": ""
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List component versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Delete component versions",
        "operationId": "ComponentVersionsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Component Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete component versions"
      },
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Get component versions",
        "operationId": "ComponentVersionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Component Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "componentSpec": {
                      "<Component Id>": ""
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get component versions"
      },
      "put": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Create or update component versions",
        "operationId": "ComponentVersionsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Component Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "isAnonymous": false,
                  "componentSpec": {
                    "<Component Id>": ""
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "componentSpec": {
                      "<Component Id>": ""
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "componentSpec": {
                      "<Component Id>": ""
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update component versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List data containers",
        "operationId": "DataContainersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/data/datacontainer123",
                      "name": "datastore123",
                      "type": "Microsoft.MachineLearningServices/workspaces/data",
                      "properties": {
                        "dataType": "UriFile",
                        "description": "string",
                        "tags": {
                          "tag1": "value1",
                          "tag2": "value2"
                        },
                        "properties": {
                          "properties1": "value1",
                          "properties2": "value2"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-12-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    },
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/data/datacontainer124",
                      "name": "datastore124",
                      "type": "Microsoft.MachineLearningServices/workspaces/data",
                      "properties": {
                        "dataType": "UriFile",
                        "description": "string",
                        "tags": {
                          "tag1": "value1",
                          "tag2": "value2"
                        },
                        "properties": {
                          "properties1": "value1",
                          "properties2": "value2"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-12-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "nextlink"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List data containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete data containers",
        "operationId": "DataContainersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Data Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "datacontainer123"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete data containers"
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get data containers",
        "operationId": "DataContainersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "datacontainer123"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/data/datacontainer123",
                  "name": "datacontainer123",
                  "type": "Microsoft.MachineLearningServices/workspaces/data",
                  "properties": {
                    "dataType": "UriFile",
                    "description": "string",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    },
                    "properties": {
                      "properties1": "value1",
                      "properties2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get data containers"
      },
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update data containers",
        "operationId": "DataContainersCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "datacontainer123",
              "body": {
                "properties": {
                  "dataType": "UriFile",
                  "description": "string",
                  "tags": {
                    "tag1": "value1",
                    "tag2": "value2"
                  },
                  "properties": {
                    "properties1": "value1",
                    "properties2": "value2"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/data/datacontainer123",
                  "name": "datacontainer123",
                  "type": "Microsoft.MachineLearningServices/workspaces/data",
                  "properties": {
                    "dataType": "UriFile",
                    "description": "string",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    },
                    "properties": {
                      "properties1": "value1",
                      "properties2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/data/datacontainer123",
                  "name": "datacontainer123",
                  "type": "Microsoft.MachineLearningServices/workspaces/data",
                  "properties": {
                    "dataType": "UriFile",
                    "description": "string",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    },
                    "properties": {
                      "properties1": "value1",
                      "properties2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update data containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List data versions",
        "operationId": "DataVersionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Data container's name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Please choose OrderBy value from ['createdtime', 'modifiedtime']",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top count of results, top count cannot be greater than the page size.\r\n                              If topCount > page size, results with be default page size count will be returned",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string",
            "x-ms-summary": "Tags"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Version Base.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string",
              "$tags": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "dataType": "uri_file",
                        "dataUri": "string",
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "isAnonymous": false
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List data versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete data versions",
        "operationId": "DataVersionsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Data Version Base.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete data versions"
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get data versions",
        "operationId": "DataVersionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Version Base.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "dataType": "uri_file",
                    "dataUri": "string",
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get data versions"
      },
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update data versions",
        "operationId": "DataVersionsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Version Base.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "dataType": "uri_file",
                  "dataUri": "string",
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "isAnonymous": false
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "dataType": "uri_file",
                    "dataUri": "string",
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "dataType": "uri_file",
                    "dataUri": "string",
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update data versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores",
        "operationId": "DatastoresList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30,
            "x-ms-summary": "Count"
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean",
            "x-ms-summary": "Is default"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "Names"
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string",
            "x-ms-summary": "Search text"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Order by asc"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "count": 1,
              "isDefault": false,
              "names": [
                "string"
              ],
              "searchText": "string",
              "orderBy": "string",
              "orderByAsc": false
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "isDefault": false,
                        "properties": "",
                        "credentials": {
                          "credentialsType": "AccountKey"
                        },
                        "datastoreType": "AzureBlob",
                        "accountName": "string",
                        "containerName": "string",
                        "endpoint": "core.windows.net",
                        "protocol": "https"
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List datastores"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastores",
        "operationId": "DatastoresDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete datastores"
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastores",
        "operationId": "DatastoresGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "isDefault": false,
                    "properties": "",
                    "credentials": {
                      "credentialsType": "AccountKey"
                    },
                    "datastoreType": "AzureBlob",
                    "accountName": "string",
                    "containerName": "string",
                    "endpoint": "core.windows.net",
                    "protocol": "https"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get datastores"
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastores",
        "operationId": "DatastoresCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "skipValidation",
            "description": "Flag to skip validation.",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Skip validation"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate datastore (AzureBlob w/ AccountKey).": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "skipValidation": false,
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": "",
                  "credentials": {
                    "credentialsType": "AccountKey",
                    "secrets": {
                      "secretsType": "AccountKey",
                      "key": "string"
                    }
                  },
                  "datastoreType": "AzureBlob",
                  "accountName": "string",
                  "containerName": "string",
                  "endpoint": "core.windows.net",
                  "protocol": "https"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "isDefault": false,
                    "properties": "",
                    "credentials": {
                      "credentialsType": "AccountKey"
                    },
                    "datastoreType": "AzureBlob",
                    "accountName": "string",
                    "containerName": "string",
                    "endpoint": "core.windows.net",
                    "protocol": "https"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "isDefault": false,
                    "properties": "",
                    "credentials": {
                      "credentialsType": "AccountKey"
                    },
                    "datastoreType": "AzureBlob",
                    "accountName": "string",
                    "containerName": "string",
                    "endpoint": "core.windows.net",
                    "protocol": "https"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "CreateOrUpdate datastore (Azure Data Lake Gen1 w/ ServicePrincipal).": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "skipValidation": false,
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": "",
                  "credentials": {
                    "credentialsType": "ServicePrincipal",
                    "authorityUrl": "string",
                    "resourceUrl": "string",
                    "tenantId": "<Tenant Id>",
                    "clientId": "<Client Id>",
                    "secrets": {
                      "secretsType": "ServicePrincipal",
                      "clientSecret": "string"
                    }
                  },
                  "datastoreType": "AzureDataLakeGen1",
                  "storeName": "string"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "ServicePrincipal",
                      "authorityUrl": "string",
                      "resourceUrl": "string",
                      "tenantId": "<Tenant Id>",
                      "clientId": "<Client Id>"
                    },
                    "datastoreType": "AzureDataLakeGen1",
                    "storeName": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "ServicePrincipal",
                      "authorityUrl": "string",
                      "resourceUrl": "string",
                      "tenantId": "<Tenant Id>",
                      "clientId": "<Client Id>"
                    },
                    "datastoreType": "AzureDataLakeGen1",
                    "storeName": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "CreateOrUpdate datastore (Azure Data Lake Gen2 w/ Service Principal).": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "skipValidation": false,
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": "",
                  "credentials": {
                    "credentialsType": "ServicePrincipal",
                    "authorityUrl": "string",
                    "resourceUrl": "string",
                    "tenantId": "<Tenant Id>",
                    "clientId": "<Client Id>",
                    "secrets": {
                      "secretsType": "ServicePrincipal",
                      "clientSecret": "string"
                    }
                  },
                  "datastoreType": "AzureDataLakeGen2",
                  "filesystem": "string",
                  "accountName": "string",
                  "endpoint": "string",
                  "protocol": "string"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "ServicePrincipal",
                      "authorityUrl": "string",
                      "resourceUrl": "string",
                      "tenantId": "<Tenant Id>",
                      "clientId": "<Client Id>"
                    },
                    "datastoreType": "AzureDataLakeGen2",
                    "filesystem": "string",
                    "accountName": "string",
                    "endpoint": "string",
                    "protocol": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "ServicePrincipal",
                      "authorityUrl": "string",
                      "resourceUrl": "string",
                      "tenantId": "<Tenant Id>",
                      "clientId": "<Client Id>"
                    },
                    "datastoreType": "AzureDataLakeGen2",
                    "filesystem": "string",
                    "accountName": "string",
                    "endpoint": "string",
                    "protocol": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "CreateOrUpdate datastore (Azure File store w/ AccountKey).": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "skipValidation": false,
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": "",
                  "credentials": {
                    "credentialsType": "AccountKey",
                    "secrets": {
                      "secretsType": "AccountKey",
                      "key": "string"
                    }
                  },
                  "datastoreType": "AzureFile",
                  "accountName": "string",
                  "fileShareName": "string",
                  "endpoint": "string",
                  "protocol": "string"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "AccountKey"
                    },
                    "datastoreType": "AzureFile",
                    "accountName": "string",
                    "fileShareName": "string",
                    "endpoint": "string",
                    "protocol": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": "",
                    "credentials": {
                      "credentialsType": "AccountKey"
                    },
                    "datastoreType": "AzureFile",
                    "accountName": "string",
                    "fileShareName": "string",
                    "endpoint": "string",
                    "protocol": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update datastores"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "List secrets datastores",
        "operationId": "DatastoresListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "description": "Base definition for datastore secrets.",
              "$ref": "#/definitions/DatastoreSecrets"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "secretsType": "AccountKey",
                  "key": "string"
                }
              }
            }
          }
        },
        "description": "List secrets datastores"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List environment containers",
        "operationId": "EnvironmentContainersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "$skipToken": "skiptoken"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/testEnvironment",
                      "name": "testEnvironment",
                      "type": "Microsoft.MachineLearningServices/workspaces/environments",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "tag1": "value1",
                          "tag2": "value2"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-12-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List environment containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete environment containers",
        "operationId": "EnvironmentContainersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Environment Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete environment containers"
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get environment containers",
        "operationId": "EnvironmentContainersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testEnvironment"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/testEnvironment",
                  "name": "testEnvironment",
                  "type": "Microsoft.MachineLearningServices/workspaces/environments",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get environment containers"
      },
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update environment containers",
        "operationId": "EnvironmentContainersCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "testworkspace",
              "api-version": "2022-05-01",
              "name": "testEnvironment",
              "body": {
                "properties": {
                  "properties": {
                    "additionalProp1": "string",
                    "additionalProp2": "string",
                    "additionalProp3": "string"
                  },
                  "tags": {
                    "additionalProp1": "string",
                    "additionalProp2": "string",
                    "additionalProp3": "string"
                  },
                  "description": "string"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/testEnvironment",
                  "name": "testEnvironment",
                  "type": "Microsoft.MachineLearningServices/workspaces/environments",
                  "properties": {
                    "properties": {
                      "additionalProp1": "string",
                      "additionalProp2": "string",
                      "additionalProp3": "string"
                    },
                    "tags": {
                      "additionalProp1": "string",
                      "additionalProp2": "string",
                      "additionalProp3": "string"
                    },
                    "description": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-12-04T03:39:11.300Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-04T03:39:11.300Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/testEnvironment",
                  "name": "testEnvironment",
                  "type": "Microsoft.MachineLearningServices/workspaces/environments",
                  "properties": {
                    "properties": {
                      "additionalProp1": "string",
                      "additionalProp2": "string",
                      "additionalProp3": "string"
                    },
                    "tags": {
                      "additionalProp1": "string",
                      "additionalProp2": "string",
                      "additionalProp3": "string"
                    },
                    "description": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-12-04T03:39:11.301Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-04T03:39:11.301Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update environment containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "List environment versions",
        "operationId": "EnvironmentVersionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "isAnonymous": false,
                        "environmentType": "Curated",
                        "image": "docker.io/tensorflow/serving:latest",
                        "condaFile": "string",
                        "build": {
                          "contextUri": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
                          "dockerfilePath": "prod/Dockerfile"
                        },
                        "inferenceConfig": {
                          "livenessRoute": {
                            "path": "string",
                            "port": 1
                          },
                          "readinessRoute": {
                            "path": "string",
                            "port": 1
                          },
                          "scoringRoute": {
                            "path": "string",
                            "port": 1
                          }
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List environment versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Delete environment versions",
        "operationId": "EnvironmentVersionsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Environment Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete environment versions"
      },
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Get environment versions",
        "operationId": "EnvironmentVersionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "environmentType": "Curated",
                    "image": "docker.io/tensorflow/serving:latest",
                    "condaFile": "string",
                    "build": {
                      "contextUri": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
                      "dockerfilePath": "prod/Dockerfile"
                    },
                    "inferenceConfig": {
                      "livenessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "readinessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "scoringRoute": {
                        "path": "string",
                        "port": 1
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get environment versions"
      },
      "put": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Create or update environment versions",
        "operationId": "EnvironmentVersionsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Name of EnvironmentVersion. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version of EnvironmentVersion.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Definition of EnvironmentVersion.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "isAnonymous": false,
                  "image": "docker.io/tensorflow/serving:latest",
                  "condaFile": "string",
                  "build": {
                    "contextUri": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
                    "dockerfilePath": "prod/Dockerfile"
                  },
                  "inferenceConfig": {
                    "livenessRoute": {
                      "path": "string",
                      "port": 1
                    },
                    "readinessRoute": {
                      "path": "string",
                      "port": 1
                    },
                    "scoringRoute": {
                      "path": "string",
                      "port": 1
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "environmentType": "Curated",
                    "image": "docker.io/tensorflow/serving:latest",
                    "condaFile": "string",
                    "build": {
                      "contextUri": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
                      "dockerfilePath": "prod/Dockerfile"
                    },
                    "inferenceConfig": {
                      "livenessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "readinessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "scoringRoute": {
                        "path": "string",
                        "port": 1
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "environmentType": "Curated",
                    "image": "docker.io/tensorflow/serving:latest",
                    "condaFile": "string",
                    "build": {
                      "contextUri": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
                      "dockerfilePath": "prod/Dockerfile"
                    },
                    "inferenceConfig": {
                      "livenessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "readinessRoute": {
                        "path": "string",
                        "port": 1
                      },
                      "scoringRoute": {
                        "path": "string",
                        "port": 1
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update environment versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "List jobs",
        "operationId": "JobsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Type of job to be returned.",
            "type": "string",
            "x-ms-summary": "Job type"
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Jobs returned will have this tag key.",
            "type": "string",
            "x-ms-summary": "Tag"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "jobType": "string",
              "tag": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "displayName": "string",
                        "status": "NotStarted",
                        "experimentName": "string",
                        "services": {
                          "string": {
                            "jobServiceType": "string",
                            "port": 1,
                            "endpoint": "string",
                            "status": "string",
                            "errorMessage": "string",
                            "properties": {
                              "string": "string"
                            }
                          }
                        },
                        "computeId": "string",
                        "jobType": "Command",
                        "resources": {
                          "instanceCount": 1,
                          "instanceType": "string",
                          "properties": {
                            "string": {
                              "<Resource Id>": ""
                            }
                          }
                        },
                        "codeId": "string",
                        "command": "string",
                        "environmentId": "string",
                        "inputs": {
                          "string": {
                            "description": "string",
                            "jobInputType": "literal",
                            "value": "string"
                          }
                        },
                        "outputs": {
                          "string": {
                            "description": "string",
                            "jobOutputType": "uri_file",
                            "mode": "ReadWriteMount",
                            "uri": "string"
                          }
                        },
                        "distribution": {
                          "distributionType": "TensorFlow",
                          "workerCount": 1,
                          "parameterServerCount": 1
                        },
                        "limits": {
                          "timeout": "PT5M",
                          "jobLimitsType": "Command"
                        },
                        "environmentVariables": {
                          "string": "string"
                        },
                        "identity": {
                          "identityType": "AMLToken"
                        },
                        "parameters": {
                          "string": "string"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "List Sweep Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "jobType": "string",
              "tag": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "displayName": "string",
                        "status": "NotStarted",
                        "experimentName": "string",
                        "services": {
                          "string": {
                            "jobServiceType": "string",
                            "port": 1,
                            "endpoint": "string",
                            "status": "string",
                            "errorMessage": "string",
                            "properties": {
                              "string": "string"
                            }
                          }
                        },
                        "computeId": "string",
                        "jobType": "Sweep",
                        "samplingAlgorithm": {
                          "samplingAlgorithmType": "Grid"
                        },
                        "limits": {
                          "jobLimitsType": "Sweep",
                          "maxTotalTrials": 1,
                          "maxConcurrentTrials": 1,
                          "trialTimeout": "PT1S"
                        },
                        "earlyTermination": {
                          "evaluationInterval": 1,
                          "delayEvaluation": 1,
                          "policyType": "MedianStopping"
                        },
                        "objective": {
                          "primaryMetric": "string",
                          "goal": "Minimize"
                        },
                        "trial": {
                          "codeId": "string",
                          "command": "string",
                          "environmentId": "string",
                          "environmentVariables": {
                            "string": "string"
                          },
                          "distribution": {
                            "distributionType": "Mpi",
                            "processCountPerInstance": 1
                          },
                          "resources": {
                            "instanceCount": 1,
                            "instanceType": "string",
                            "properties": {
                              "string": {
                                "<Resource Id>": ""
                              }
                            }
                          }
                        },
                        "searchSpace": {
                          "string": {
                          }
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "List Pipeline Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "jobType": "string",
              "tag": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "displayName": "string",
                        "status": "NotStarted",
                        "experimentName": "string",
                        "services": {
                          "string": {
                            "jobServiceType": "string",
                            "port": 1,
                            "endpoint": "string",
                            "status": "string",
                            "errorMessage": "string",
                            "properties": {
                              "string": "string"
                            }
                          }
                        },
                        "computeId": "string",
                        "jobType": "Pipeline",
                        "settings": {
                        },
                        "inputs": {
                          "string": {
                            "description": "string",
                            "jobInputType": "literal",
                            "value": "string"
                          }
                        },
                        "outputs": {
                          "string": {
                            "description": "string",
                            "jobOutputType": "uri_file",
                            "mode": "Upload",
                            "uri": "string"
                          }
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List jobs"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete jobs",
        "operationId": "JobsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "202": {
              },
              "204": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Delete jobs"
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get jobs",
        "operationId": "JobsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Command",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "codeId": "string",
                    "command": "string",
                    "environmentId": "string",
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "ReadWriteMount",
                        "uri": "string"
                      }
                    },
                    "distribution": {
                      "distributionType": "TensorFlow",
                      "workerCount": 1,
                      "parameterServerCount": 1
                    },
                    "limits": {
                      "timeout": "PT5M",
                      "jobLimitsType": "Command"
                    },
                    "environmentVariables": {
                      "string": "string"
                    },
                    "identity": {
                      "identityType": "AMLToken"
                    },
                    "parameters": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "Get Sweep Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Sweep",
                    "samplingAlgorithm": {
                      "samplingAlgorithmType": "Grid"
                    },
                    "limits": {
                      "jobLimitsType": "Sweep",
                      "maxTotalTrials": 1,
                      "maxConcurrentTrials": 1,
                      "trialTimeout": "PT1S"
                    },
                    "earlyTermination": {
                      "evaluationInterval": 1,
                      "delayEvaluation": 1,
                      "policyType": "MedianStopping"
                    },
                    "objective": {
                      "primaryMetric": "string",
                      "goal": "Minimize"
                    },
                    "trial": {
                      "codeId": "string",
                      "command": "string",
                      "environmentId": "string",
                      "environmentVariables": {
                        "string": "string"
                      },
                      "distribution": {
                        "distributionType": "Mpi",
                        "processCountPerInstance": 1
                      },
                      "resources": {
                        "instanceCount": 1,
                        "instanceType": "string",
                        "properties": {
                          "string": {
                            "<Resource Id>": ""
                          }
                        }
                      }
                    },
                    "searchSpace": {
                      "string": {
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "Get Pipeline Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Pipeline",
                    "settings": {
                    },
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "Upload",
                        "uri": "string"
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get jobs"
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Create or update jobs",
        "operationId": "JobsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Id"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "displayName": "string",
                  "experimentName": "string",
                  "services": {
                    "string": {
                      "jobServiceType": "string",
                      "port": 1,
                      "endpoint": "string",
                      "properties": {
                        "string": "string"
                      }
                    }
                  },
                  "computeId": "string",
                  "jobType": "Command",
                  "resources": {
                    "instanceCount": 1,
                    "instanceType": "string",
                    "properties": {
                      "string": {
                        "<Resource Id>": ""
                      }
                    }
                  },
                  "codeId": "string",
                  "command": "string",
                  "environmentId": "string",
                  "inputs": {
                    "string": {
                      "description": "string",
                      "jobInputType": "literal",
                      "value": "string"
                    }
                  },
                  "outputs": {
                    "string": {
                      "description": "string",
                      "jobOutputType": "uri_file",
                      "mode": "ReadWriteMount",
                      "uri": "string"
                    }
                  },
                  "distribution": {
                    "distributionType": "TensorFlow",
                    "workerCount": 1,
                    "parameterServerCount": 1
                  },
                  "limits": {
                    "timeout": "PT5M",
                    "jobLimitsType": "Command"
                  },
                  "environmentVariables": {
                    "string": "string"
                  },
                  "identity": {
                    "identityType": "AMLToken"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Command",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "codeId": "string",
                    "command": "string",
                    "environmentId": "string",
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "ReadWriteMount",
                        "uri": "string"
                      }
                    },
                    "distribution": {
                      "distributionType": "TensorFlow",
                      "workerCount": 1,
                      "parameterServerCount": 1
                    },
                    "limits": {
                      "timeout": "PT5M",
                      "jobLimitsType": "Command"
                    },
                    "environmentVariables": {
                      "string": "string"
                    },
                    "identity": {
                      "identityType": "AMLToken"
                    },
                    "parameters": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Command",
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    },
                    "codeId": "string",
                    "command": "string",
                    "environmentId": "string",
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "ReadWriteMount",
                        "uri": "string"
                      }
                    },
                    "distribution": {
                      "distributionType": "TensorFlow",
                      "workerCount": 1,
                      "parameterServerCount": 1
                    },
                    "limits": {
                      "timeout": "PT5M",
                      "jobLimitsType": "Command"
                    },
                    "environmentVariables": {
                      "string": "string"
                    },
                    "identity": {
                      "identityType": "AMLToken"
                    },
                    "parameters": {
                      "string": "string"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "CreateOrUpdate Sweep Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "displayName": "string",
                  "experimentName": "string",
                  "services": {
                    "string": {
                      "jobServiceType": "string",
                      "port": 1,
                      "endpoint": "string",
                      "properties": {
                        "string": "string"
                      }
                    }
                  },
                  "computeId": "string",
                  "jobType": "Sweep",
                  "samplingAlgorithm": {
                    "samplingAlgorithmType": "Grid"
                  },
                  "limits": {
                    "jobLimitsType": "Sweep",
                    "maxTotalTrials": 1,
                    "maxConcurrentTrials": 1,
                    "trialTimeout": "PT1S"
                  },
                  "earlyTermination": {
                    "evaluationInterval": 1,
                    "delayEvaluation": 1,
                    "policyType": "MedianStopping"
                  },
                  "objective": {
                    "primaryMetric": "string",
                    "goal": "Minimize"
                  },
                  "trial": {
                    "codeId": "string",
                    "command": "string",
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "distribution": {
                      "distributionType": "Mpi",
                      "processCountPerInstance": 1
                    },
                    "resources": {
                      "instanceCount": 1,
                      "instanceType": "string",
                      "properties": {
                        "string": {
                          "<Resource Id>": ""
                        }
                      }
                    }
                  },
                  "searchSpace": {
                    "string": {
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Sweep",
                    "samplingAlgorithm": {
                      "samplingAlgorithmType": "Grid"
                    },
                    "limits": {
                      "jobLimitsType": "Sweep",
                      "maxTotalTrials": 1,
                      "maxConcurrentTrials": 1,
                      "trialTimeout": "PT1S"
                    },
                    "earlyTermination": {
                      "evaluationInterval": 1,
                      "delayEvaluation": 1,
                      "policyType": "MedianStopping"
                    },
                    "objective": {
                      "primaryMetric": "string",
                      "goal": "Minimize"
                    },
                    "trial": {
                      "codeId": "string",
                      "command": "string",
                      "environmentId": "string",
                      "environmentVariables": {
                        "string": "string"
                      },
                      "distribution": {
                        "distributionType": "Mpi",
                        "processCountPerInstance": 1
                      },
                      "resources": {
                        "instanceCount": 1,
                        "instanceType": "string",
                        "properties": {
                          "string": {
                            "<Resource Id>": ""
                          }
                        }
                      }
                    },
                    "searchSpace": {
                      "string": {
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Sweep",
                    "samplingAlgorithm": {
                      "samplingAlgorithmType": "Grid"
                    },
                    "limits": {
                      "jobLimitsType": "Sweep",
                      "maxTotalTrials": 1,
                      "maxConcurrentTrials": 1,
                      "trialTimeout": "PT1S"
                    },
                    "earlyTermination": {
                      "evaluationInterval": 1,
                      "delayEvaluation": 1,
                      "policyType": "MedianStopping"
                    },
                    "objective": {
                      "primaryMetric": "string",
                      "goal": "Minimize"
                    },
                    "trial": {
                      "codeId": "string",
                      "command": "string",
                      "environmentId": "string",
                      "environmentVariables": {
                        "string": "string"
                      },
                      "distribution": {
                        "distributionType": "Mpi",
                        "processCountPerInstance": 1
                      },
                      "resources": {
                        "instanceCount": 1,
                        "instanceType": "string",
                        "properties": {
                          "string": {
                            "<Resource Id>": ""
                          }
                        }
                      }
                    },
                    "searchSpace": {
                      "string": {
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          },
          "CreateOrUpdate Pipeline Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "displayName": "string",
                  "experimentName": "string",
                  "services": {
                    "string": {
                      "jobServiceType": "string",
                      "port": 1,
                      "endpoint": "string",
                      "properties": {
                        "string": "string"
                      }
                    }
                  },
                  "computeId": "string",
                  "jobType": "Pipeline",
                  "settings": {
                  },
                  "inputs": {
                    "string": {
                      "description": "string",
                      "jobInputType": "literal",
                      "value": "string"
                    }
                  },
                  "outputs": {
                    "string": {
                      "description": "string",
                      "jobOutputType": "uri_file",
                      "mode": "Upload",
                      "uri": "string"
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Pipeline",
                    "settings": {
                    },
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "Upload",
                        "uri": "string"
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "displayName": "string",
                    "status": "NotStarted",
                    "experimentName": "string",
                    "services": {
                      "string": {
                        "jobServiceType": "string",
                        "port": 1,
                        "endpoint": "string",
                        "status": "string",
                        "errorMessage": "string",
                        "properties": {
                          "string": "string"
                        }
                      }
                    },
                    "computeId": "string",
                    "jobType": "Pipeline",
                    "settings": {
                    },
                    "inputs": {
                      "string": {
                        "description": "string",
                        "jobInputType": "literal",
                        "value": "string"
                      }
                    },
                    "outputs": {
                      "string": {
                        "description": "string",
                        "jobOutputType": "uri_file",
                        "mode": "Upload",
                        "uri": "string"
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update jobs"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancel jobs",
        "operationId": "JobsCancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Cancel Job.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "id": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "description": "Cancel jobs"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers",
        "operationId": "ModelContainersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Count"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/models/testContainer",
                      "name": "testContainer",
                      "type": "Microsoft.MachineLearningServices/workspaces/models",
                      "properties": {
                        "description": "Model container description",
                        "tags": {
                          "tag1": "value1",
                          "tag2": "value2"
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-12-01T12:00:00.000Z",
                        "createdBy": "John Smith",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                        "lastModifiedBy": "John Smith",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "nextlink"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List model containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete model containers",
        "operationId": "ModelContainersDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Model Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete model containers"
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get model containers",
        "operationId": "ModelContainersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "testContainer"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/models/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/models",
                  "properties": {
                    "description": "Model container description",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get model containers"
      },
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update model containers",
        "operationId": "ModelContainersCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Container.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "name": "testContainer",
              "body": {
                "properties": {
                  "description": "Model container description",
                  "tags": {
                    "tag1": "value1",
                    "tag2": "value2"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/models/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/models",
                  "properties": {
                    "description": "Model container description",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/<Subscription Id>/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspace123/models/testContainer",
                  "name": "testContainer",
                  "type": "Microsoft.MachineLearningServices/workspaces/models",
                  "properties": {
                    "description": "Model container description",
                    "tags": {
                      "tag1": "value1",
                      "tag2": "value2"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-12-01T12:00:00.000Z",
                    "createdBy": "John Smith",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-12-01T12:00:00.000Z",
                    "lastModifiedBy": "John Smith",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update model containers"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions",
        "operationId": "ModelVersionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string",
            "x-ms-summary": "Description"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string",
            "x-ms-summary": "Tags"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string",
            "x-ms-summary": "Properties"
          },
          {
            "in": "query",
            "name": "feed",
            "description": "Name of the feed.",
            "type": "string",
            "x-ms-summary": "Feed"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            },
            "x-ms-summary": "List view type"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "$orderBy": "string",
              "$top": 1,
              "version": "string",
              "description": "string",
              "offset": 1,
              "tags": "string",
              "properties": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "tags": {
                          "string": "string"
                        },
                        "properties": {
                          "string": "string"
                        },
                        "isAnonymous": false,
                        "flavors": {
                          "string": {
                            "data": {
                              "string": "string"
                            }
                          }
                        },
                        "modelType": "CustomModel",
                        "modelUri": "string"
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List model versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete model versions",
        "operationId": "ModelVersionsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Model Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "204": {
              }
            }
          }
        },
        "description": "Delete model versions"
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get model versions",
        "operationId": "ModelVersionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "flavors": {
                      "string": {
                        "data": {
                          "string": "string"
                        }
                      }
                    },
                    "modelType": "CustomModel",
                    "modelUri": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Get model versions"
      },
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update model versions",
        "operationId": "ModelVersionsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Name"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Version.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "name": "string",
              "version": "string",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "tags": {
                    "string": "string"
                  },
                  "properties": {
                    "string": "string"
                  },
                  "isAnonymous": false,
                  "flavors": {
                    "string": {
                      "data": {
                        "string": "string"
                      }
                    }
                  },
                  "modelType": "CustomModel",
                  "modelUri": "string"
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "flavors": {
                      "string": {
                        "data": {
                          "string": "string"
                        }
                      }
                    },
                    "modelType": "CustomModel",
                    "modelUri": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "tags": {
                      "string": "string"
                    },
                    "properties": {
                      "string": "string"
                    },
                    "isAnonymous": false,
                    "flavors": {
                      "string": {
                        "data": {
                          "string": "string"
                        }
                      }
                    },
                    "modelType": "CustomModel",
                    "modelUri": "string"
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  }
                }
              }
            }
          }
        },
        "description": "Create or update model versions"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List online endpoints",
        "operationId": "OnlineEndpointsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the endpoint.",
            "type": "string",
            "x-ms-summary": "Name"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Count"
          },
          {
            "in": "query",
            "name": "computeType",
            "description": "EndpointComputeType to be filtered by.",
            "type": "string",
            "enum": [
              "Managed",
              "Kubernetes",
              "AzureMLCompute"
            ],
            "x-ms-enum": {
              "name": "EndpointComputeType",
              "modelAsString": true
            },
            "x-ms-summary": "Compute type"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .",
            "type": "string",
            "x-ms-summary": "Tags"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
            "type": "string",
            "x-ms-summary": "Properties"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The option to order the response.",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            },
            "x-ms-summary": "Order by"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "name": "string",
              "count": 1,
              "computeType": "Managed",
              "tags": "string",
              "properties": "string",
              "orderBy": "CreatedAtDesc"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "properties": {
                          "string": "string"
                        },
                        "scoringUri": "https://www.contoso.com/example",
                        "swaggerUri": "https://www.contoso.com/example",
                        "authMode": "AMLToken",
                        "provisioningState": "Creating",
                        "compute": "string",
                        "traffic": {
                          "string": 1
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      },
                      "tags": {
                      },
                      "location": "string",
                      "kind": "string",
                      "identity": {
                        "type": "SystemAssigned",
                        "principalId": "<Principal Id>",
                        "tenantId": "<Tenant Id>",
                        "userAssignedIdentities": {
                          "string": {
                            "principalId": "<Principal Id>",
                            "clientId": "<Client Id>"
                          }
                        }
                      },
                      "sku": {
                        "name": "string",
                        "tier": "Free",
                        "size": "string",
                        "family": "string",
                        "capacity": 1
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List online endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Delete online endpoints",
        "operationId": "OnlineEndpointsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "204": {
            "description": "No Content"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
              },
              "202": {
              },
              "204": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Delete online endpoints"
      },
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get online endpoints",
        "operationId": "OnlineEndpointsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "provisioningState": "Creating",
                    "compute": "string",
                    "traffic": {
                      "string": 1
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "description": "Get online endpoints"
      },
      "patch": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Update online endpoints",
        "operationId": "OnlineEndpointsUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "body": {
                "tags": {
                },
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "provisioningState": "Creating",
                    "compute": "string",
                    "traffic": {
                      "string": 1
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update online endpoints"
      },
      "put": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Create or update online endpoints",
        "operationId": "OnlineEndpointsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "properties": {
                    "string": "string"
                  },
                  "authMode": "AMLToken",
                  "compute": "string",
                  "traffic": {
                    "string": 1
                  }
                },
                "tags": {
                },
                "location": "string",
                "kind": "string",
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "provisioningState": "Creating",
                    "compute": "string",
                    "traffic": {
                      "string": 1
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "scoringUri": "https://www.contoso.com/example",
                    "swaggerUri": "https://www.contoso.com/example",
                    "authMode": "AMLToken",
                    "provisioningState": "Creating",
                    "compute": "string",
                    "traffic": {
                      "string": 1
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update online endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List online deployments",
        "operationId": "OnlineDeploymentsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string",
            "x-ms-summary": "Order by"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Top"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployments.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "$orderBy": "string",
              "$top": 1,
              "$skipToken": "string"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "id": "string",
                      "name": "string",
                      "type": "string",
                      "properties": {
                        "description": "string",
                        "properties": {
                          "string": "string"
                        },
                        "codeConfiguration": {
                          "codeId": "string",
                          "scoringScript": "string"
                        },
                        "environmentId": "string",
                        "environmentVariables": {
                          "string": "string"
                        },
                        "scaleSettings": {
                          "scaleType": "Default"
                        },
                        "requestSettings": {
                          "maxQueueWait": "PT5M",
                          "requestTimeout": "PT5M",
                          "maxConcurrentRequestsPerInstance": 1
                        },
                        "modelMountPath": "string",
                        "appInsightsEnabled": false,
                        "livenessProbe": {
                          "failureThreshold": 1,
                          "successThreshold": 1,
                          "timeout": "PT5M",
                          "period": "PT5M",
                          "initialDelay": "PT5M"
                        },
                        "provisioningState": "Creating",
                        "instanceType": "string",
                        "model": "string",
                        "endpointComputeType": "Kubernetes",
                        "containerResourceRequirements": {
                          "containerResourceRequests": {
                            "cpu": "\"1\"",
                            "memory": "\"2Gi\"",
                            "gpu": "\"1\""
                          },
                          "containerResourceLimits": {
                            "cpu": "\"1\"",
                            "memory": "\"2Gi\"",
                            "gpu": "\"1\""
                          }
                        }
                      },
                      "systemData": {
                        "createdAt": "2020-01-01T12:34:56.999Z",
                        "createdBy": "string",
                        "createdByType": "User",
                        "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                        "lastModifiedBy": "string",
                        "lastModifiedByType": "User"
                      },
                      "tags": {
                      },
                      "location": "string",
                      "kind": "string",
                      "identity": {
                        "type": "SystemAssigned",
                        "principalId": "<Principal Id>",
                        "tenantId": "<Tenant Id>",
                        "userAssignedIdentities": {
                          "string": {
                            "principalId": "<Principal Id>",
                            "clientId": "<Client Id>"
                          }
                        }
                      },
                      "sku": {
                        "name": "string",
                        "tier": "Free",
                        "size": "string",
                        "family": "string",
                        "capacity": 1
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List online deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Delete online deployments",
        "operationId": "OnlineDeploymentsDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "endpointName": "testEndpoint",
              "deploymentName": "testDeployment"
            },
            "responses": {
              "200": {
              },
              "202": {
              },
              "204": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Delete online deployments"
      },
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get online deployments",
        "operationId": "OnlineDeploymentsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Managed",
                    "modelMountPath": "string",
                    "readinessProbe": {
                      "failureThreshold": 30,
                      "successThreshold": 1,
                      "timeout": "PT2S",
                      "period": "PT10S",
                      "initialDelay": "PT1S"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          },
          "Get Kubernetes Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "modelMountPath": "string",
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Kubernetes",
                    "containerResourceRequirements": {
                      "containerResourceRequests": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      },
                      "containerResourceLimits": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "description": "Get online deployments"
      },
      "patch": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Update online deployments",
        "operationId": "OnlineDeploymentsUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSku"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Managed Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "tags": {
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Managed",
                    "modelMountPath": "string",
                    "readinessProbe": {
                      "failureThreshold": 30,
                      "successThreshold": 1,
                      "timeout": "PT2S",
                      "period": "PT10S",
                      "initialDelay": "PT1S"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "202": {
              }
            }
          },
          "Update Kubernetes Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "tags": {
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "modelMountPath": "string",
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Kubernetes",
                    "containerResourceRequirements": {
                      "containerResourceRequests": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      },
                      "containerResourceLimits": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update online deployments"
      },
      "put": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Create or update online deployments",
        "operationId": "OnlineDeploymentsCreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Managed Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "properties": {
                    "string": "string"
                  },
                  "codeConfiguration": {
                    "codeId": "string",
                    "scoringScript": "string"
                  },
                  "environmentId": "string",
                  "environmentVariables": {
                    "string": "string"
                  },
                  "scaleSettings": {
                    "scaleType": "Default"
                  },
                  "requestSettings": {
                    "maxQueueWait": "PT5M",
                    "requestTimeout": "PT5M",
                    "maxConcurrentRequestsPerInstance": 1
                  },
                  "appInsightsEnabled": false,
                  "livenessProbe": {
                    "failureThreshold": 1,
                    "successThreshold": 1,
                    "timeout": "PT5M",
                    "period": "PT5M",
                    "initialDelay": "PT5M"
                  },
                  "instanceType": "string",
                  "model": "string",
                  "endpointComputeType": "Managed",
                  "modelMountPath": "string",
                  "readinessProbe": {
                    "failureThreshold": 30,
                    "successThreshold": 1,
                    "timeout": "PT2S",
                    "period": "PT10S",
                    "initialDelay": "PT1S"
                  }
                },
                "tags": {
                },
                "location": "string",
                "kind": "string",
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Managed",
                    "modelMountPath": "string",
                    "readinessProbe": {
                      "failureThreshold": 30,
                      "successThreshold": 1,
                      "timeout": "PT2S",
                      "period": "PT10S",
                      "initialDelay": "PT1S"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Managed",
                    "modelMountPath": "string",
                    "readinessProbe": {
                      "failureThreshold": 30,
                      "successThreshold": 1,
                      "timeout": "PT2S",
                      "period": "PT10S",
                      "initialDelay": "PT1S"
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          },
          "CreateOrUpdate Kubernetes Online Deployment.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "body": {
                "properties": {
                  "description": "string",
                  "properties": {
                    "string": "string"
                  },
                  "codeConfiguration": {
                    "codeId": "string",
                    "scoringScript": "string"
                  },
                  "environmentId": "string",
                  "environmentVariables": {
                    "string": "string"
                  },
                  "scaleSettings": {
                    "scaleType": "Default"
                  },
                  "requestSettings": {
                    "maxQueueWait": "PT5M",
                    "requestTimeout": "PT5M",
                    "maxConcurrentRequestsPerInstance": 1
                  },
                  "modelMountPath": "string",
                  "appInsightsEnabled": false,
                  "livenessProbe": {
                    "failureThreshold": 1,
                    "successThreshold": 1,
                    "timeout": "PT5M",
                    "period": "PT5M",
                    "initialDelay": "PT5M"
                  },
                  "instanceType": "string",
                  "model": "string",
                  "endpointComputeType": "Kubernetes",
                  "containerResourceRequirements": {
                    "containerResourceRequests": {
                      "cpu": "\"1\"",
                      "memory": "\"2Gi\"",
                      "gpu": "\"1\""
                    },
                    "containerResourceLimits": {
                      "cpu": "\"1\"",
                      "memory": "\"2Gi\"",
                      "gpu": "\"1\""
                    }
                  }
                },
                "tags": {
                },
                "location": "string",
                "kind": "string",
                "identity": {
                  "type": "SystemAssigned",
                  "userAssignedIdentities": {
                    "string": {
                    }
                  }
                },
                "sku": {
                  "name": "string",
                  "tier": "Free",
                  "size": "string",
                  "family": "string",
                  "capacity": 1
                }
              }
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "modelMountPath": "string",
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Kubernetes",
                    "containerResourceRequirements": {
                      "containerResourceRequests": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      },
                      "containerResourceLimits": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              },
              "201": {
                "headers": {
                },
                "body": {
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "properties": {
                    "description": "string",
                    "properties": {
                      "string": "string"
                    },
                    "codeConfiguration": {
                      "codeId": "string",
                      "scoringScript": "string"
                    },
                    "environmentId": "string",
                    "environmentVariables": {
                      "string": "string"
                    },
                    "scaleSettings": {
                      "scaleType": "Default"
                    },
                    "requestSettings": {
                      "maxQueueWait": "PT5M",
                      "requestTimeout": "PT5M",
                      "maxConcurrentRequestsPerInstance": 1
                    },
                    "modelMountPath": "string",
                    "appInsightsEnabled": false,
                    "livenessProbe": {
                      "failureThreshold": 1,
                      "successThreshold": 1,
                      "timeout": "PT5M",
                      "period": "PT5M",
                      "initialDelay": "PT5M"
                    },
                    "provisioningState": "Creating",
                    "instanceType": "string",
                    "model": "string",
                    "endpointComputeType": "Kubernetes",
                    "containerResourceRequirements": {
                      "containerResourceRequests": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      },
                      "containerResourceLimits": {
                        "cpu": "\"1\"",
                        "memory": "\"2Gi\"",
                        "gpu": "\"1\""
                      }
                    }
                  },
                  "systemData": {
                    "createdAt": "2020-01-01T12:34:56.999Z",
                    "createdBy": "string",
                    "createdByType": "User",
                    "lastModifiedAt": "2020-01-01T12:34:56.999Z",
                    "lastModifiedBy": "string",
                    "lastModifiedByType": "User"
                  },
                  "tags": {
                  },
                  "location": "string",
                  "kind": "string",
                  "identity": {
                    "type": "SystemAssigned",
                    "principalId": "<Principal Id>",
                    "tenantId": "<Tenant Id>",
                    "userAssignedIdentities": {
                      "string": {
                        "principalId": "<Principal Id>",
                        "clientId": "<Client Id>"
                      }
                    }
                  },
                  "sku": {
                    "name": "string",
                    "tier": "Free",
                    "size": "string",
                    "family": "string",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update online deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get logs online deployments",
        "operationId": "OnlineDeploymentsGetLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing parameters for retrieving logs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment Logs.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "testrg123",
              "workspaceName": "workspace123",
              "api-version": "2022-05-01",
              "endpointName": "testEndpoint",
              "deploymentName": "testDeployment",
              "body": {
                "containerType": "StorageInitializer",
                "tail": 0
              }
            },
            "responses": {
              "200": {
                "body": {
                  "content": "string"
                }
              }
            }
          }
        },
        "description": "Get logs online deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/skus": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List skus online deployments",
        "operationId": "OnlineDeploymentsListSkus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Deployment name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of Skus to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Count"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SkuResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Managed Online Deployment Skus.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "count": 1
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "resourceType": "Microsoft.MachineLearning.Services/endpoints/deployments",
                      "sku": {
                        "name": "string",
                        "tier": "Free"
                      },
                      "capacity": {
                        "minimum": 1,
                        "maximum": 1,
                        "default": 1,
                        "scaleType": "Automatic"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "List Kubernetes Online Deployment Skus.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "deploymentName": "testDeploymentName",
              "api-version": "2022-05-01",
              "$skipToken": "string",
              "count": 1
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "value": [
                    {
                      "resourceType": "Microsoft.MachineLearning.Services/endpoints/deployments",
                      "sku": {
                        "name": "string",
                        "tier": "Free"
                      },
                      "capacity": {
                        "minimum": 1,
                        "maximum": 1,
                        "default": 1,
                        "scaleType": "Automatic"
                      }
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "List skus online deployments"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List keys online endpoints",
        "operationId": "OnlineEndpointsListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "primaryKey": "string",
                  "secondaryKey": "string"
                }
              }
            }
          }
        },
        "description": "List keys online endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Regenerate keys online endpoints",
        "operationId": "OnlineEndpointsRegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01",
              "body": {
                "keyType": "Primary",
                "keyValue": "string"
              }
            },
            "responses": {
              "200": {
              },
              "202": {
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "description": "Regenerate keys online endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get token online endpoints",
        "operationId": "OnlineEndpointsGetToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Endpoint name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthToken"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Online Endpoint.": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "test-rg",
              "workspaceName": "my-aml-workspace",
              "endpointName": "testEndpointName",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "headers": {
                },
                "body": {
                  "accessToken": "string",
                  "tokenType": "string",
                  "expiryTimeUtc": 1,
                  "refreshAfterTimeUtc": 1
                }
              }
            }
          }
        },
        "description": "Get token online endpoints"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "WorkspacesListByResourceGroup",
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "parameters": {
              "subscriptionId": "<Subscription Id>",
              "resourceGroupName": "workspace-1234",
              "api-version": "2022-05-01"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace",
                      "name": "testworkspace",
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "location": "eastus2euap",
                      "properties": {
                        "containerRegistry": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.ContainerRegistry/registries/testRegistry",
                        "keyVault": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.KeyVault/vaults/testkv",
                        "applicationInsights": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/microsoft.insights/components/testinsights",
                        "storageAccount": "/subscriptions/<Subscription Id>/resourceGroups/accountcrud-1234/providers/Microsoft.Storage/storageAccounts/testStorageAccount",
                        "discoveryUrl": "http://example.com",
                        "friendlyName": "HelloName",
                        "description": "test description"
                      }
                    },
                    {
                      "id": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace1",
                      "name": "testworkspace1",
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "location": "eastus2euap",
                      "properties": {
                        "containerRegistry": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.ContainerRegistry/registries/testRegistryNew",
                        "keyVault": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/Microsoft.KeyVault/vaults/testkvNew",
                        "applicationInsights": "/subscriptions/<Subscription Id>/resourceGroups/workspace-1234/providers/microsoft.insights/components/testinsights",
                        "storageAccount": "/subscriptions/<Subscription Id>/resourceGroups/accountcrud-1234/providers/Microsoft.Storage/storageAccounts/testStorageAccountOld",
                        "discoveryUrl": "http://example.com",
                        "friendlyName": "HelloName 1",
                        "description": "test description"
                      }
                    }
                  ],
                  "nextLink": "nextLink"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-visibility": "internal",
        "summary": "List by resource group workspaces"
      }
    }
  },
  "definitions": {
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "description": "the data plane resourceId that used to initialize notebook component"
        },
        "notebookPreparationError": {
          "$ref": "#/definitions/NotebookPreparationError",
          "description": "The error that occurs when preparing notebook.",
          "x-nullable": true
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings",
          "description": "The settings for the service managed cosmosdb account."
        }
      }
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "The throughput of the collections in cosmosdb database"
        }
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the private link.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "type": "object",
      "properties": {
        "privateLinkResourceId": {
          "description": "The resource id that private link links to.",
          "type": "string"
        },
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "Properties of a shared private link resource."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        },
        "subnetArmId": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Subnet resource that private endpoint links to"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "EncryptionKeyVaultProperties": {
      "properties": {
        "keyVaultArmId": {
          "description": "The ArmId of the keyVault where the customer owned encryption key is present.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identityClientId": {
          "description": "For future use - The client id of the identity which will be used to access key vault.",
          "type": "string"
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object"
    },
    "IdentityForCmk": {
      "description": "Identity that will be used to access key vault for encryption at rest",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "The ArmId of the user assigned identity that will be used to access the customer managed key vault",
          "type": "string"
        }
      }
    },
    "EncryptionProperty": {
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for the workspace.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityForCmk",
          "description": "The identity that will be used to access the key vault for encryption at rest."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultProperties",
          "description": "Customer Key vault properties."
        }
      },
      "required": [
        "status",
        "keyVaultProperties"
      ],
      "type": "object"
    },
    "Workspace": {
      "type": "object",
      "description": "An object that represents a machine learning workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the machine learning workspace.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string",
          "x-nullable": true
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of Azure ML workspace."
        },
        "hbiWorkspace": {
          "type": "boolean",
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "default": false
        },
        "serviceProvisionedResourceGroup": {
          "type": "string",
          "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
          "readOnly": true
        },
        "privateLinkCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of private connections in the workspace",
          "readOnly": true
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "allowPublicAccessWhenBehindVnet": {
          "type": "boolean",
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "default": false
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of private endpoint connections in the workspace."
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of shared private link resources in this workspace."
        },
        "notebookInfo": {
          "readOnly": true,
          "$ref": "#/definitions/NotebookResourceInfo",
          "description": "The notebook info of Azure ML workspace."
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "storageHnsEnabled": {
          "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled.",
          "type": "boolean",
          "readOnly": true
        },
        "mlFlowTrackingUri": {
          "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking.",
          "type": "string",
          "readOnly": true
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The result of a request to list machine learning workspaces.",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of machine learning workspaces.",
          "type": "string"
        }
      }
    },
    "ResourceGroupListResult": {
      "description": "List of resource groups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resource groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "ResourceGroup": {
      "description": "Resource group information.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the resource group (e.g. /subscriptions/XXX/resourceGroups/YYY).",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Id"
        },
        "name": {
          "description": "The Name of the resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Name"
        },
        "location": {
          "description": "The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.",
          "type": "string",
          "x-ms-summary": "Location"
        },
        "managedBy": {
          "description": "Id of the resource that manages this resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Managed By"
        },
        "tags": {
          "description": "The tags attached to the resource group.",
          "type": "object",
          "additionalProperties": {
            "description": "The additional properties. ",
            "type": "string"
          },
          "x-ms-summary": "Tags"
        },
        "properties": {
          "$ref": "#/definitions/ResourceGroupProperties"
        }
      }
    },
    "ResourceGroupProperties": {
      "description": "The resource group properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Provisioning State"
        }
      },
      "readOnly": true
    },
    "SubscriptionListResult": {
      "description": "Subscription list operation response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "Subscription": {
      "description": "Subscription information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The fully qualified Id. For example, /subscriptions/<Subscription Id>.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Id"
        },
        "subscriptionId": {
          "description": "The subscription Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Subscription Id"
        },
        "tenantId": {
          "description": "The tenant Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Tenant Id"
        },
        "displayName": {
          "description": "The subscription display name.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Display Name"
        },
        "state": {
          "description": "The subscription state.",
          "enum": [
            "Enabled",
            "Warned",
            "PastDue",
            "Disabled",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "State",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "subscriptionPolicies": {
          "$ref": "#/definitions/SubscriptionPolicies"
        },
        "authorizationSource": {
          "description": "The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.",
          "type": "string",
          "x-ms-summary": "Authorization Source",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "SubscriptionPolicies": {
      "description": "Subscription policies.",
      "type": "object",
      "properties": {
        "locationPlacementId": {
          "description": "The subscription location placement Id. The Id indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Location Placement Id",
          "x-ms-visibility": "advanced"
        },
        "quotaId": {
          "description": "The subscription quota Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Quota Id",
          "x-ms-visibility": "advanced"
        },
        "spendingLimit": {
          "description": "The subscription spending limit.",
          "enum": [
            "On",
            "Off",
            "CurrentPeriodOff"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "spendingLimit",
            "modelAsString": false
          },
          "x-ms-summary": "Spending Limit",
          "x-ms-visibility": "advanced"
        }
      },
      "x-ms-summary": "Subscription Policies",
      "x-ms-visibility": "advanced"
    },
    "AccountKeyDatastoreCredentials": {
      "description": "Account key datastore credentials configuration.",
      "required": [
        "secrets"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "secrets": {
          "description": "[Required] Storage account secrets.",
          "$ref": "#/definitions/AccountKeyDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "x-ms-discriminator-value": "AccountKey",
      "additionalProperties": false
    },
    "AccountKeyDatastoreSecrets": {
      "description": "Datastore account key secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "AccountKey",
      "additionalProperties": false
    },
    "AmlToken": {
      "description": "AML Token identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AMLToken",
      "additionalProperties": false
    },
    "AssetBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "AssetContainer": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "latestVersion": {
          "description": "The latest version inside this container.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "nextVersion": {
          "description": "The next auto incremental version",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AssetJobInput": {
      "description": "Asset input type.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "Input Asset Delivery Mode.",
          "default": "ReadOnlyMount",
          "$ref": "#/definitions/InputDeliveryMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AssetJobOutput": {
      "description": "Asset output type.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Output Asset Delivery Mode.",
          "default": "ReadWriteMount",
          "$ref": "#/definitions/OutputDeliveryMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "description": "Output Asset URI.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AssetReferenceBase": {
      "description": "Base definition for asset references.",
      "required": [
        "referenceType"
      ],
      "type": "object",
      "properties": {
        "referenceType": {
          "description": "[Required] Specifies the type of asset reference.",
          "$ref": "#/definitions/ReferenceType"
        }
      },
      "discriminator": "referenceType"
    },
    "AzureBlobDatastore": {
      "description": "Azure Blob datastore configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "Storage account name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "containerName": {
          "description": "Storage account container name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureBlob",
      "additionalProperties": false
    },
    "AzureDataLakeGen1Datastore": {
      "description": "Azure Data Lake Gen1 datastore configuration.",
      "required": [
        "storeName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storeName": {
          "description": "[Required] Azure Data Lake store name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataLakeGen1",
      "additionalProperties": false
    },
    "AzureDataLakeGen2Datastore": {
      "description": "Azure Data Lake Gen2 datastore configuration.",
      "required": [
        "accountName",
        "filesystem"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "[Required] Storage account name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "filesystem": {
          "description": "[Required] The name of the Data Lake Gen2 filesystem.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataLakeGen2",
      "additionalProperties": false
    },
    "AzureFileDatastore": {
      "description": "Azure File datastore configuration.",
      "required": [
        "accountName",
        "fileShareName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "[Required] Storage account name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "fileShareName": {
          "description": "[Required] The name of the Azure file share that the datastore points to.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureFile",
      "additionalProperties": false
    },
    "BanditPolicy": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "properties": {
        "slackAmount": {
          "format": "float",
          "description": "Absolute distance allowed from the best performing run.",
          "default": 0,
          "type": "number"
        },
        "slackFactor": {
          "format": "float",
          "description": "Ratio of the allowed distance from the best performing run.",
          "default": 0,
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Bandit",
      "additionalProperties": false
    },
    "BatchDeployment": {
      "description": "Batch inference settings per deployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "properties": {
        "compute": {
          "description": "Compute target for batch inference operation.",
          "type": "string",
          "x-nullable": true
        },
        "errorThreshold": {
          "format": "int32",
          "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored.",
          "default": -1,
          "type": "integer"
        },
        "loggingLevel": {
          "description": "Logging level for batch inference operation.",
          "default": "Info",
          "$ref": "#/definitions/BatchLoggingLevel"
        },
        "maxConcurrencyPerInstance": {
          "format": "int32",
          "description": "Indicates maximum number of parallelism per instance.",
          "default": 1,
          "type": "integer"
        },
        "miniBatchSize": {
          "format": "int64",
          "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
          "default": 10,
          "type": "integer"
        },
        "model": {
          "description": "Reference to the model asset for the endpoint deployment.",
          "$ref": "#/definitions/AssetReferenceBase",
          "x-nullable": true
        },
        "outputAction": {
          "description": "Indicates how the output will be organized.",
          "default": "AppendRow",
          "$ref": "#/definitions/BatchOutputAction"
        },
        "outputFileName": {
          "description": "Customized output file name for append_row output action.",
          "default": "predictions.csv",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "$ref": "#/definitions/DeploymentProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "resources": {
          "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration.",
          "$ref": "#/definitions/ResourceConfiguration",
          "x-nullable": true
        },
        "retrySettings": {
          "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings.",
          "$ref": "#/definitions/BatchRetrySettings",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "BatchDeploymentProperties",
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/BatchDeployment"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/Sku"
        }
      },
      "x-ms-client-name": "BatchDeployment",
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchDeployment entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of BatchDeployment objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type BatchDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchDeploymentTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "BatchEndpoint": {
      "description": "Batch endpoint configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "properties": {
        "defaults": {
          "description": "Default values for Batch Endpoint",
          "$ref": "#/definitions/BatchEndpointDefaults",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "BatchEndpointProperties",
      "additionalProperties": false
    },
    "BatchEndpointDefaults": {
      "description": "Batch endpoint default values",
      "type": "object",
      "properties": {
        "deploymentName": {
          "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "BatchEndpointTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/BatchEndpoint"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/Sku"
        }
      },
      "x-ms-client-name": "BatchEndpoint",
      "additionalProperties": false
    },
    "BatchEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchEndpoint entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of BatchEndpoint objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type BatchEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchEndpointTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "BatchLoggingLevel": {
      "description": "Log verbosity for batch inferencing.\r\nIncreasing verbosity order for logging is : Warning, Info and Debug.\r\nThe default value is Info.",
      "enum": [
        "Info",
        "Warning",
        "Debug"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BatchLoggingLevel",
        "modelAsString": true,
        "values": [
          {
            "value": "Info"
          },
          {
            "value": "Warning"
          },
          {
            "value": "Debug"
          }
        ]
      },
      "additionalProperties": false
    },
    "BatchOutputAction": {
      "description": "Enum to determine how batch inferencing will handle output",
      "enum": [
        "SummaryOnly",
        "AppendRow"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BatchOutputAction",
        "modelAsString": true,
        "values": [
          {
            "value": "SummaryOnly"
          },
          {
            "value": "AppendRow"
          }
        ]
      },
      "additionalProperties": false
    },
    "BatchRetrySettings": {
      "description": "Retry settings for a batch inference operation.",
      "type": "object",
      "properties": {
        "maxRetries": {
          "format": "int32",
          "description": "Maximum retry count for a mini-batch",
          "default": 3,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "Invocation timeout for a mini-batch, in ISO 8601 format.",
          "default": "PT30S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BayesianSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that generates values based on previous values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Bayesian",
      "additionalProperties": false
    },
    "BuildContext": {
      "description": "Configuration settings for Docker build context",
      "required": [
        "contextUri"
      ],
      "type": "object",
      "properties": {
        "contextUri": {
          "description": "[Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\r\n<seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerfilePath": {
          "description": "Path to the Dockerfile in the build context.\r\n<seealso href=\"https://docs.docker.com/engine/reference/builder/\" />",
          "default": "Dockerfile",
          "type": "string",
          "example": "prod/Dockerfile",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "CertificateDatastoreCredentials": {
      "description": "Certificate datastore credentials configuration.",
      "required": [
        "clientId",
        "secrets",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "format": "uuid",
          "description": "[Required] Service principal client ID.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Resource the service principal has access to.",
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "description": "[Required] Service principal secrets.",
          "$ref": "#/definitions/CertificateDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "format": "uuid",
          "description": "[Required] ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "thumbprint": {
          "description": "[Required] Thumbprint of the certificate used for authentication.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Certificate",
      "additionalProperties": false
    },
    "CertificateDatastoreSecrets": {
      "description": "Datastore certificate secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Certificate",
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "description": "Configuration for a scoring code asset.",
      "required": [
        "scoringScript"
      ],
      "type": "object",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "scoringScript": {
          "description": "[Required] The script to execute on startup. eg. \"score.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "CodeContainer": {
      "description": "Container for code asset versions.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "CodeContainerProperties",
      "additionalProperties": false
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/CodeContainer"
        }
      },
      "x-ms-client-name": "CodeContainer",
      "additionalProperties": false
    },
    "CodeContainerResourceArmPaginatedResult": {
      "description": "A paginated list of CodeContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of CodeContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type CodeContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "CodeVersion": {
      "description": "Code asset version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "codeUri": {
          "description": "Uri where code is located",
          "type": "string",
          "example": "https://blobStorage/folderName",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "CodeVersionProperties",
      "additionalProperties": false
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/CodeVersion"
        }
      },
      "x-ms-client-name": "CodeVersion",
      "additionalProperties": false
    },
    "CodeVersionResourceArmPaginatedResult": {
      "description": "A paginated list of CodeVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of CodeVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type CodeVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "CommandJob": {
      "description": "Command job definition.",
      "required": [
        "command",
        "environmentId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "command": {
          "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "$ref": "#/definitions/DistributionConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentId": {
          "description": "[Required] The ARM resource ID of the Environment specification for the job.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "inputs": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "limits": {
          "description": "Command Job limit.",
          "$ref": "#/definitions/CommandJobLimits",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "parameters": {
          "description": "Input parameters.",
          "type": "object",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "default": "{}",
          "$ref": "#/definitions/ResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "CommandJobLimits": {
      "description": "Command Job limit class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "ComponentContainer": {
      "description": "Component container definition.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "ComponentContainerProperties",
      "additionalProperties": false
    },
    "ComponentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentContainer"
        }
      },
      "x-ms-client-name": "ComponentContainer",
      "additionalProperties": false
    },
    "ComponentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ComponentContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ComponentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ComponentVersion": {
      "description": "Definition of a component version: defines resources that span component types.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "componentSpec": {
          "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
          "type": "object",
          "example": {
            "name": "Hello_Python_World",
            "display_name": "Hello_Python_World",
            "version": 1,
            "type": "command",
            "code": "azureml:/subscriptions/<Subscription Id>/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/mycode/versions/1",
            "environment": "azureml:/subscriptions/<Subscription Id>/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/AzureML-Tutorial/versions/1",
            "command": "python hello.py"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-client-name": "ComponentVersionProperties",
      "additionalProperties": false
    },
    "ComponentVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentVersion"
        }
      },
      "x-ms-client-name": "ComponentVersion",
      "additionalProperties": false
    },
    "ComponentVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ComponentVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ComponentVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ContainerResourceRequirements": {
      "description": "Resource requirements for each container instance within an online deployment.",
      "type": "object",
      "properties": {
        "containerResourceLimits": {
          "description": "Container resource limit info:",
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        },
        "containerResourceRequests": {
          "description": "Container resource request info:",
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ContainerResourceSettings": {
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "1",
          "x-nullable": true
        },
        "gpu": {
          "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "1",
          "x-nullable": true
        },
        "memory": {
          "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "2Gi",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ContainerType": {
      "enum": [
        "StorageInitializer",
        "InferenceServer"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true,
        "values": [
          {
            "value": "StorageInitializer"
          },
          {
            "value": "InferenceServer"
          }
        ]
      },
      "additionalProperties": false
    },
    "CredentialsType": {
      "description": "Enum to determine the datastore credentials type.",
      "enum": [
        "AccountKey",
        "Certificate",
        "None",
        "Sas",
        "ServicePrincipal"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CredentialsType",
        "modelAsString": true,
        "values": [
          {
            "value": "AccountKey"
          },
          {
            "value": "Certificate"
          },
          {
            "value": "None"
          },
          {
            "value": "Sas"
          },
          {
            "value": "ServicePrincipal"
          }
        ]
      },
      "additionalProperties": false
    },
    "CustomModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "custom_model",
      "additionalProperties": false
    },
    "CustomModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "custom_model",
      "additionalProperties": false
    },
    "DataContainer": {
      "description": "Container for data asset versions.",
      "required": [
        "dataType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "$ref": "#/definitions/DataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-client-name": "DataContainerProperties",
      "additionalProperties": false
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/DataContainer"
        }
      },
      "x-ms-client-name": "DataContainer",
      "additionalProperties": false
    },
    "DataContainerResourceArmPaginatedResult": {
      "description": "A paginated list of DataContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of DataContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type DataContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "DataPathAssetReference": {
      "description": "Reference to an asset via its path in a datastore.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "datastoreId": {
          "description": "ARM resource ID of the datastore where the asset is located.",
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "description": "The path of the file/directory in the datastore.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "DataPath",
      "additionalProperties": false
    },
    "Datastore": {
      "description": "Base definition for datastore contents configuration.",
      "required": [
        "credentials",
        "datastoreType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "credentials": {
          "description": "[Required] Account credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "datastoreType": {
          "description": "[Required] Storage type backing the datastore.",
          "$ref": "#/definitions/DatastoreType"
        },
        "isDefault": {
          "description": "Readonly property to indicate if datastore is the workspace default datastore",
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "datastoreType",
      "x-ms-client-name": "DatastoreProperties"
    },
    "DatastoreCredentials": {
      "description": "Base definition for datastore credentials.",
      "required": [
        "credentialsType"
      ],
      "type": "object",
      "properties": {
        "credentialsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/CredentialsType"
        }
      },
      "discriminator": "credentialsType"
    },
    "DatastoreResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/Datastore"
        }
      },
      "x-ms-client-name": "Datastore",
      "additionalProperties": false
    },
    "DatastoreResourceArmPaginatedResult": {
      "description": "A paginated list of Datastore entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of Datastore objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type Datastore.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastoreResource"
          }
        }
      },
      "additionalProperties": false
    },
    "DatastoreSecrets": {
      "description": "Base definition for datastore secrets.",
      "required": [
        "secretsType"
      ],
      "type": "object",
      "properties": {
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/SecretsType"
        }
      },
      "discriminator": "secretsType"
    },
    "DatastoreType": {
      "description": "Enum to determine the datastore contents type.",
      "enum": [
        "AzureBlob",
        "AzureDataLakeGen1",
        "AzureDataLakeGen2",
        "AzureFile"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DatastoreType",
        "modelAsString": true,
        "values": [
          {
            "value": "AzureBlob"
          },
          {
            "value": "AzureDataLakeGen1"
          },
          {
            "value": "AzureDataLakeGen2"
          },
          {
            "value": "AzureFile"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataType": {
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder",
        "mltable"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataType",
        "modelAsString": true,
        "values": [
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataVersionBase": {
      "description": "Data version base definition",
      "required": [
        "dataType",
        "dataUri"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "$ref": "#/definitions/DataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataUri": {
          "description": "[Required] Uri of the data. Usage/meaning depends on Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20220501.Assets.DataVersionBase.DataType",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "x-ms-client-name": "DataVersionBaseProperties"
    },
    "DataVersionBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/DataVersionBase"
        }
      },
      "x-ms-client-name": "DataVersionBase",
      "additionalProperties": false
    },
    "DataVersionBaseResourceArmPaginatedResult": {
      "description": "A paginated list of DataVersionBase entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of DataVersionBase objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type DataVersionBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionBaseResource"
          }
        }
      },
      "additionalProperties": false
    },
    "DefaultScaleSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "x-ms-discriminator-value": "Default",
      "additionalProperties": false
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "description": "The retrieved online deployment logs.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "description": "The type of container to retrieve logs from.",
          "default": "InferenceServer",
          "$ref": "#/definitions/ContainerType"
        },
        "tail": {
          "format": "int32",
          "description": "The maximum number of lines to tail.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "DeploymentProvisioningState": {
      "description": "Possible values for DeploymentProvisioningState.",
      "enum": [
        "Creating",
        "Deleting",
        "Scaling",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DeploymentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Scaling"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "DistributionConfiguration": {
      "description": "Base definition for job distribution configuration.",
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "[Required] Specifies the type of distribution framework.",
          "$ref": "#/definitions/DistributionType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType"
    },
    "DistributionType": {
      "description": "Enum to determine the job distribution type.",
      "enum": [
        "PyTorch",
        "TensorFlow",
        "Mpi"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DistributionType",
        "modelAsString": true,
        "values": [
          {
            "value": "PyTorch"
          },
          {
            "value": "TensorFlow"
          },
          {
            "value": "Mpi"
          }
        ]
      },
      "additionalProperties": false
    },
    "EarlyTerminationPolicy": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "delayEvaluation": {
          "format": "int32",
          "description": "Number of intervals by which to delay the first evaluation.",
          "default": 0,
          "type": "integer"
        },
        "evaluationInterval": {
          "format": "int32",
          "description": "Interval (number of runs) between policy evaluations.",
          "default": 0,
          "type": "integer"
        },
        "policyType": {
          "description": "[Required] Name of policy configuration",
          "$ref": "#/definitions/EarlyTerminationPolicyType"
        }
      },
      "discriminator": "policyType"
    },
    "EarlyTerminationPolicyType": {
      "enum": [
        "Bandit",
        "MedianStopping",
        "TruncationSelection"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EarlyTerminationPolicyType",
        "modelAsString": true,
        "values": [
          {
            "value": "Bandit"
          },
          {
            "value": "MedianStopping"
          },
          {
            "value": "TruncationSelection"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointAuthKeys": {
      "description": "Keys for endpoint authentication.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointAuthMode": {
      "description": "Enum to determine endpoint authentication mode.",
      "enum": [
        "AMLToken",
        "Key",
        "AADToken"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointAuthMode",
        "modelAsString": true,
        "values": [
          {
            "value": "AMLToken"
          },
          {
            "value": "Key"
          },
          {
            "value": "AADToken"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointAuthToken": {
      "description": "Service Token",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Access token for endpoint authentication.",
          "type": "string",
          "x-nullable": true
        },
        "expiryTimeUtc": {
          "format": "int64",
          "description": "Access token expiry time (UTC).",
          "default": 0,
          "type": "integer"
        },
        "refreshAfterTimeUtc": {
          "format": "int64",
          "description": "Refresh access token after time (UTC).",
          "default": 0,
          "type": "integer"
        },
        "tokenType": {
          "description": "Access token type.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointComputeType": {
      "description": "Enum to determine endpoint compute type.",
      "enum": [
        "Managed",
        "Kubernetes",
        "AzureMLCompute"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointComputeType",
        "modelAsString": true,
        "values": [
          {
            "value": "Managed"
          },
          {
            "value": "Kubernetes"
          },
          {
            "value": "AzureMLCompute"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointDeploymentPropertiesBase": {
      "description": "Base definition for endpoint deployment.",
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "description": "Code configuration for the endpoint deployment.",
          "$ref": "#/definitions/CodeConfiguration",
          "x-nullable": true
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        },
        "environmentId": {
          "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointPropertiesBase": {
      "description": "Inference Endpoint base definition",
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "authMode": {
          "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
          "$ref": "#/definitions/EndpointAuthMode"
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string",
          "x-nullable": true
        },
        "keys": {
          "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.",
          "$ref": "#/definitions/EndpointAuthKeys",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true,
          "x-nullable": true
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "scoringUri": {
          "format": "uri",
          "description": "Endpoint URI.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "swaggerUri": {
          "format": "uri",
          "description": "Endpoint Swagger URI.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointProvisioningState": {
      "description": "State of endpoint provisioning.",
      "enum": [
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "EnvironmentContainer": {
      "description": "Container for environment specification versions.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "EnvironmentContainerProperties",
      "additionalProperties": false
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentContainer"
        }
      },
      "x-ms-client-name": "EnvironmentContainer",
      "additionalProperties": false
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of EnvironmentContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type EnvironmentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentType": {
      "description": "Environment type is either user created or curated by Azure ML service",
      "enum": [
        "Curated",
        "UserCreated"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EnvironmentType",
        "modelAsString": true,
        "values": [
          {
            "value": "Curated"
          },
          {
            "value": "UserCreated"
          }
        ]
      },
      "additionalProperties": false
    },
    "EnvironmentVersion": {
      "description": "Environment version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "build": {
          "description": "Configuration settings for Docker build context.",
          "$ref": "#/definitions/BuildContext",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "condaFile": {
          "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentType": {
          "description": "Environment type is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "$ref": "#/definitions/EnvironmentType",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "image": {
          "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
          "type": "string",
          "example": "docker.io/tensorflow/serving:latest",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inferenceConfig": {
          "description": "Defines configuration specific to inference.",
          "$ref": "#/definitions/InferenceContainerProperties",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "osType": {
          "description": "The OS type of the environment.",
          "default": "Linux",
          "$ref": "#/definitions/OperatingSystemType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-client-name": "EnvironmentVersionProperties",
      "additionalProperties": false
    },
    "EnvironmentVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentVersion"
        }
      },
      "x-ms-client-name": "EnvironmentVersion",
      "additionalProperties": false
    },
    "EnvironmentVersionResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of EnvironmentVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type EnvironmentVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FlavorData": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Model flavor-specific data.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "Goal": {
      "description": "Defines supported metric goals for hyperparameter tuning",
      "enum": [
        "Minimize",
        "Maximize"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "Goal",
        "modelAsString": true,
        "values": [
          {
            "value": "Minimize"
          },
          {
            "value": "Maximize"
          }
        ]
      },
      "additionalProperties": false
    },
    "GridSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that exhaustively generates every value combination in the space",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Grid",
      "additionalProperties": false
    },
    "IdAssetReference": {
      "description": "Reference to an asset via its ARM resource ID.",
      "required": [
        "assetId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "assetId": {
          "description": "[Required] ARM resource ID of the asset.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Id",
      "additionalProperties": false
    },
    "IdentityConfiguration": {
      "description": "Base definition for identity configuration.",
      "required": [
        "identityType"
      ],
      "type": "object",
      "properties": {
        "identityType": {
          "description": "[Required] Specifies the type of identity framework.",
          "$ref": "#/definitions/IdentityConfigurationType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType"
    },
    "IdentityConfigurationType": {
      "description": "Enum to determine identity framework.",
      "enum": [
        "Managed",
        "AMLToken",
        "UserIdentity"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IdentityConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "value": "Managed"
          },
          {
            "value": "AMLToken"
          },
          {
            "value": "UserIdentity"
          }
        ]
      },
      "additionalProperties": false
    },
    "InferenceContainerProperties": {
      "type": "object",
      "properties": {
        "livenessRoute": {
          "description": "The route to check the liveness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "readinessRoute": {
          "description": "The route to check the readiness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "scoringRoute": {
          "description": "The port to send the scoring requests to, within the inference server container.",
          "$ref": "#/definitions/Route"
        }
      },
      "additionalProperties": false
    },
    "InputDeliveryMode": {
      "description": "Enum to determine the input data delivery mode.",
      "enum": [
        "ReadOnlyMount",
        "ReadWriteMount",
        "Download",
        "Direct",
        "EvalMount",
        "EvalDownload"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InputDeliveryMode",
        "modelAsString": true,
        "values": [
          {
            "value": "ReadOnlyMount"
          },
          {
            "value": "ReadWriteMount"
          },
          {
            "value": "Download"
          },
          {
            "value": "Direct"
          },
          {
            "value": "EvalMount"
          },
          {
            "value": "EvalDownload"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobBase": {
      "description": "Base definition for a job.",
      "required": [
        "jobType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "computeId": {
          "description": "ARM resource ID of the compute resource.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "displayName": {
          "description": "Display name of job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "experimentName": {
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "default": "Default",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null.",
          "$ref": "#/definitions/IdentityConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "jobType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "services": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobService",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "jobType",
      "x-ms-client-name": "JobBaseProperties"
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/JobBase"
        }
      },
      "x-ms-client-name": "JobBase",
      "additionalProperties": false
    },
    "JobBaseResourceArmPaginatedResult": {
      "description": "A paginated list of JobBase entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of JobBase objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type JobBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        }
      },
      "additionalProperties": false
    },
    "JobInput": {
      "description": "Command job definition.",
      "required": [
        "jobInputType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the input.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobInputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobInputType"
    },
    "JobInputType": {
      "description": "Enum to determine the Job Input Type.",
      "enum": [
        "literal",
        "uri_file",
        "uri_folder",
        "mltable",
        "custom_model",
        "mlflow_model",
        "triton_model"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobInputType",
        "modelAsString": true,
        "values": [
          {
            "value": "literal"
          },
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          },
          {
            "value": "custom_model"
          },
          {
            "value": "mlflow_model"
          },
          {
            "value": "triton_model"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobLimits": {
      "required": [
        "jobLimitsType"
      ],
      "type": "object",
      "properties": {
        "jobLimitsType": {
          "description": "[Required] JobLimit type.",
          "$ref": "#/definitions/JobLimitsType"
        },
        "timeout": {
          "format": "duration",
          "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
          "type": "string",
          "x-nullable": true
        }
      },
      "discriminator": "jobLimitsType"
    },
    "JobLimitsType": {
      "enum": [
        "Command",
        "Sweep"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobLimitsType",
        "modelAsString": true,
        "values": [
          {
            "value": "Command"
          },
          {
            "value": "Sweep"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobOutput": {
      "description": "Job output definition container information on where to find job output/logs.",
      "required": [
        "jobOutputType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the output.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobOutputType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobOutputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobOutputType"
    },
    "JobOutputType": {
      "description": "Enum to determine the Job Output Type.",
      "enum": [
        "uri_file",
        "uri_folder",
        "mltable",
        "custom_model",
        "mlflow_model",
        "triton_model"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobOutputType",
        "modelAsString": true,
        "values": [
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          },
          {
            "value": "custom_model"
          },
          {
            "value": "mlflow_model"
          },
          {
            "value": "triton_model"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobService": {
      "description": "Job endpoint definition",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Url for endpoint.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "errorMessage": {
          "description": "Any error in the service.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "jobServiceType": {
          "description": "Endpoint type.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "port": {
          "format": "int32",
          "description": "Port for endpoint.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "properties": {
          "description": "Additional properties to set on the endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of endpoint.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "JobStatus": {
      "description": "The status of a job.",
      "enum": [
        "NotStarted",
        "Starting",
        "Provisioning",
        "Preparing",
        "Queued",
        "Running",
        "Finalizing",
        "CancelRequested",
        "Completed",
        "Failed",
        "Canceled",
        "NotResponding",
        "Paused",
        "Unknown"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "NotStarted",
            "description": "Run hasn't started yet."
          },
          {
            "value": "Starting",
            "description": "Run has started. The user has a run ID."
          },
          {
            "value": "Provisioning",
            "description": "(Not used currently) It will be used if ES is creating the compute target."
          },
          {
            "value": "Preparing",
            "description": "The run environment is being prepared."
          },
          {
            "value": "Queued",
            "description": "The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required nodes to be ready."
          },
          {
            "value": "Running",
            "description": "The job started to run in the compute target."
          },
          {
            "value": "Finalizing",
            "description": "Job is completed in the target. It is in output collection state now."
          },
          {
            "value": "CancelRequested",
            "description": "Cancellation has been requested for the job."
          },
          {
            "value": "Completed",
            "description": "Job completed successfully. This reflects that both the job itself and output collection states completed successfully"
          },
          {
            "value": "Failed",
            "description": "Job failed."
          },
          {
            "value": "Canceled",
            "description": "Following cancellation request, the job is now successfully canceled."
          },
          {
            "value": "NotResponding",
            "description": "When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding state.\nNotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of the previous states."
          },
          {
            "value": "Paused",
            "description": "The job is paused by users. Some adjustment to labeling jobs can be made only in paused state."
          },
          {
            "value": "Unknown",
            "description": "Default job status if not mapped to all other statuses"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobType": {
      "description": "Enum to determine the type of job.",
      "enum": [
        "Command",
        "Sweep",
        "Pipeline"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true,
        "values": [
          {
            "value": "Command"
          },
          {
            "value": "Sweep"
          },
          {
            "value": "Pipeline"
          }
        ]
      },
      "additionalProperties": false
    },
    "KeyType": {
      "enum": [
        "Primary",
        "Secondary"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "value": "Primary"
          },
          {
            "value": "Secondary"
          }
        ]
      },
      "additionalProperties": false
    },
    "KubernetesOnlineDeployment": {
      "description": "Properties specific to a KubernetesOnlineDeployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "properties": {
        "containerResourceRequirements": {
          "description": "The resource requirements for the container (cpu and memory).",
          "$ref": "#/definitions/ContainerResourceRequirements",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Kubernetes",
      "additionalProperties": false
    },
    "ListViewType": {
      "enum": [
        "ActiveOnly",
        "ArchivedOnly",
        "All"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ListViewType",
        "modelAsString": true,
        "values": [
          {
            "value": "ActiveOnly"
          },
          {
            "value": "ArchivedOnly"
          },
          {
            "value": "All"
          }
        ]
      },
      "additionalProperties": false
    },
    "LiteralJobInput": {
      "description": "Literal input type.",
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "value": {
          "description": "[Required] Literal value for the input.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "literal",
      "additionalProperties": false
    },
    "ManagedIdentity": {
      "description": "Managed identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "clientId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "objectId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resourceId": {
          "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "ManagedOnlineDeployment": {
      "description": "Properties specific to a ManagedOnlineDeployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "MedianStoppingPolicy": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping",
      "additionalProperties": false
    },
    "MLFlowModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model",
      "additionalProperties": false
    },
    "MLFlowModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model",
      "additionalProperties": false
    },
    "MLTableData": {
      "description": "MLTable data definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "properties": {
        "referencedUris": {
          "description": "Uris referenced in the MLTable definition (required for lineage)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "MLTableJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "MLTableJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "ModelContainer": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "ModelContainerProperties",
      "additionalProperties": false
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ModelContainer"
        }
      },
      "x-ms-client-name": "ModelContainer",
      "additionalProperties": false
    },
    "ModelContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ModelContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ModelContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ModelContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelVersion": {
      "description": "Model asset version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "flavors": {
          "description": "Mapping of model flavors to their properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FlavorData",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "jobName": {
          "description": "Name of the training job which produced this model",
          "type": "string",
          "x-nullable": true
        },
        "modelType": {
          "description": "The storage format for this entity. Used for NCD.",
          "type": "string",
          "x-nullable": true
        },
        "modelUri": {
          "description": "The URI path to the model contents.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "ModelVersionProperties",
      "additionalProperties": false
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ModelVersion"
        }
      },
      "x-ms-client-name": "ModelVersion",
      "additionalProperties": false
    },
    "ModelVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ModelVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ModelVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ModelVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "Mpi": {
      "description": "MPI distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "description": "Number of processes per MPI node.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Mpi",
      "additionalProperties": false
    },
    "NoneDatastoreCredentials": {
      "description": "Empty/none datastore credentials.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "None",
      "additionalProperties": false
    },
    "Objective": {
      "description": "Optimization objective.",
      "required": [
        "goal",
        "primaryMetric"
      ],
      "type": "object",
      "properties": {
        "goal": {
          "description": "[Required] Defines supported metric goals for hyperparameter tuning",
          "$ref": "#/definitions/Goal"
        },
        "primaryMetric": {
          "description": "[Required] Name of the metric to optimize.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineDeployment": {
      "required": [
        "endpointComputeType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "properties": {
        "appInsightsEnabled": {
          "description": "If true, enables Application Insights logging.",
          "default": false,
          "type": "boolean"
        },
        "endpointComputeType": {
          "description": "[Required] The compute type of the endpoint.",
          "$ref": "#/definitions/EndpointComputeType"
        },
        "instanceType": {
          "description": "Compute instance type.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "livenessProbe": {
          "description": "Liveness probe monitors the health of the container regularly.",
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "model": {
          "description": "The URI path to the model.",
          "type": "string",
          "x-nullable": true
        },
        "modelMountPath": {
          "description": "The path to mount the model in custom container.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "$ref": "#/definitions/DeploymentProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "readinessProbe": {
          "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.",
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "requestSettings": {
          "description": "Request settings for the deployment.",
          "$ref": "#/definitions/OnlineRequestSettings",
          "x-nullable": true
        },
        "scaleSettings": {
          "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment.",
          "$ref": "#/definitions/OnlineScaleSettings",
          "x-nullable": true
        }
      },
      "discriminator": "endpointComputeType",
      "x-ms-client-name": "OnlineDeploymentProperties"
    },
    "OnlineDeploymentTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineDeployment"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/Sku"
        }
      },
      "x-ms-client-name": "OnlineDeployment",
      "additionalProperties": false
    },
    "OnlineDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineDeployment entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of OnlineDeployment objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type OnlineDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpoint": {
      "description": "Online endpoint configuration",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "properties": {
        "compute": {
          "description": "ARM resource ID of the compute if it exists.\r\noptional",
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "traffic": {
          "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "x-nullable": true
        }
      },
      "x-ms-client-name": "OnlineEndpointProperties",
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineEndpoint"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/Sku"
        }
      },
      "x-ms-client-name": "OnlineEndpoint",
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineEndpoint entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of OnlineEndpoint objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type OnlineEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineEndpointTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineRequestSettings": {
      "description": "Online deployment scoring requests configuration.",
      "type": "object",
      "properties": {
        "maxConcurrentRequestsPerInstance": {
          "format": "int32",
          "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.",
          "default": 1,
          "type": "integer"
        },
        "maxQueueWait": {
          "format": "duration",
          "description": "The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms.",
          "default": "PT0.5S",
          "type": "string"
        },
        "requestTimeout": {
          "format": "duration",
          "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms.",
          "default": "PT5S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineScaleSettings": {
      "description": "Online deployment scaling configuration.",
      "required": [
        "scaleType"
      ],
      "type": "object",
      "properties": {
        "scaleType": {
          "description": "[Required] Type of deployment scaling algorithm",
          "$ref": "#/definitions/ScaleType"
        }
      },
      "discriminator": "scaleType"
    },
    "OperatingSystemType": {
      "description": "The type of operating system.",
      "enum": [
        "Linux",
        "Windows"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperatingSystemType",
        "modelAsString": true,
        "values": [
          {
            "value": "Linux"
          },
          {
            "value": "Windows"
          }
        ]
      },
      "additionalProperties": false
    },
    "OrderString": {
      "enum": [
        "CreatedAtDesc",
        "CreatedAtAsc",
        "UpdatedAtDesc",
        "UpdatedAtAsc"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OrderString",
        "modelAsString": true,
        "values": [
          {
            "value": "CreatedAtDesc"
          },
          {
            "value": "CreatedAtAsc"
          },
          {
            "value": "UpdatedAtDesc"
          },
          {
            "value": "UpdatedAtAsc"
          }
        ]
      },
      "additionalProperties": false
    },
    "OutputDeliveryMode": {
      "description": "Output data delivery mode enums.",
      "enum": [
        "ReadWriteMount",
        "Upload"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OutputDeliveryMode",
        "modelAsString": true,
        "values": [
          {
            "value": "ReadWriteMount"
          },
          {
            "value": "Upload"
          }
        ]
      },
      "additionalProperties": false
    },
    "OutputPathAssetReference": {
      "description": "Reference to an asset via its path in a job output.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "jobId": {
          "description": "ARM resource ID of the job.",
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "description": "The path of the file/directory in the job output.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "OutputPath",
      "additionalProperties": false
    },
    "PartialBatchDeployment": {
      "description": "Mutable batch inference settings per deployment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/PartialBatchDeployment"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "PartialManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "type": "object",
      "properties": {
        "type": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PartialUserAssignedIdentity"
          }
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResourceWithIdentity": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/PartialManagedServiceIdentity"
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResourceWithSku": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/PartialSku"
        }
      },
      "additionalProperties": false
    },
    "PartialSku": {
      "description": "Common SKU definition.",
      "type": "object",
      "properties": {
        "capacity": {
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "type": "integer"
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code.",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "$ref": "#/definitions/SkuTier"
        }
      },
      "additionalProperties": false
    },
    "PartialUserAssignedIdentity": {
      "type": "object",
      "additionalProperties": false
    },
    "PipelineJob": {
      "description": "Pipeline Job definition: defines generic to MFE attributes.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "inputs": {
          "description": "Inputs for the pipeline job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobs": {
          "description": "Jobs construct the Pipeline Job.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Outputs for the pipeline job",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "settings": {
          "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc.",
          "type": "object",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Pipeline",
      "additionalProperties": false
    },
    "ProbeSettings": {
      "description": "Deployment container liveness/readiness probe configuration.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "format": "int32",
          "description": "The number of failures to allow before returning an unhealthy status.",
          "default": 30,
          "type": "integer"
        },
        "initialDelay": {
          "format": "duration",
          "description": "The delay before the first probe in ISO 8601 format.",
          "type": "string",
          "x-nullable": true
        },
        "period": {
          "format": "duration",
          "description": "The length of time between probes in ISO 8601 format.",
          "default": "PT10S",
          "type": "string"
        },
        "successThreshold": {
          "format": "int32",
          "description": "The number of successful probes before returning a healthy status.",
          "default": 1,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "The probe timeout in ISO 8601 format.",
          "default": "PT2S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PyTorch": {
      "description": "PyTorch distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "description": "Number of processes per node.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "PyTorch",
      "additionalProperties": false
    },
    "RandomSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that generates values randomly",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "properties": {
        "rule": {
          "description": "The specific type of random algorithm",
          "default": "Random",
          "$ref": "#/definitions/RandomSamplingAlgorithmRule"
        },
        "seed": {
          "format": "int32",
          "description": "An optional integer to use as the seed for random number generation",
          "type": "integer",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Random",
      "additionalProperties": false
    },
    "RandomSamplingAlgorithmRule": {
      "description": "The specific type of random algorithm",
      "enum": [
        "Random",
        "Sobol"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RandomSamplingAlgorithmRule",
        "modelAsString": true,
        "values": [
          {
            "value": "Random"
          },
          {
            "value": "Sobol"
          }
        ]
      },
      "additionalProperties": false
    },
    "ReferenceType": {
      "description": "Enum to determine which reference method to use for an asset.",
      "enum": [
        "Id",
        "DataPath",
        "OutputPath"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReferenceType",
        "modelAsString": true,
        "values": [
          {
            "value": "Id"
          },
          {
            "value": "DataPath"
          },
          {
            "value": "OutputPath"
          }
        ]
      },
      "additionalProperties": false
    },
    "RegenerateEndpointKeysRequest": {
      "required": [
        "keyType"
      ],
      "type": "object",
      "properties": {
        "keyType": {
          "description": "[Required] Specification for which type of key to generate. Primary or Secondary.",
          "$ref": "#/definitions/KeyType",
          "example": "Primary"
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ResourceBase": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string",
          "x-nullable": true
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ResourceConfiguration": {
      "type": "object",
      "properties": {
        "instanceCount": {
          "format": "int32",
          "description": "Optional number of instances or nodes used by the compute target.",
          "default": 1,
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "properties": {
          "description": "Additional properties bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "Route": {
      "required": [
        "path",
        "port"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "[Required] The path for the route.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "[Required] The port for the route.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "SamplingAlgorithm": {
      "description": "The Sampling Algorithm used to generate hyperparameter values, along with properties to\r\nconfigure the algorithm",
      "required": [
        "samplingAlgorithmType"
      ],
      "type": "object",
      "properties": {
        "samplingAlgorithmType": {
          "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties",
          "$ref": "#/definitions/SamplingAlgorithmType"
        }
      },
      "discriminator": "samplingAlgorithmType"
    },
    "SamplingAlgorithmType": {
      "enum": [
        "Grid",
        "Random",
        "Bayesian"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SamplingAlgorithmType",
        "modelAsString": true,
        "values": [
          {
            "value": "Grid"
          },
          {
            "value": "Random"
          },
          {
            "value": "Bayesian"
          }
        ]
      },
      "additionalProperties": false
    },
    "SasDatastoreCredentials": {
      "description": "SAS datastore credentials configuration.",
      "required": [
        "secrets"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "secrets": {
          "description": "[Required] Storage container secrets.",
          "$ref": "#/definitions/SasDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "x-ms-discriminator-value": "Sas",
      "additionalProperties": false
    },
    "SasDatastoreSecrets": {
      "description": "Datastore SAS secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Sas",
      "additionalProperties": false
    },
    "ScaleType": {
      "enum": [
        "Default",
        "TargetUtilization"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "Default"
          },
          {
            "value": "TargetUtilization"
          }
        ]
      },
      "additionalProperties": false
    },
    "SecretsType": {
      "description": "Enum to determine the datastore secrets type.",
      "enum": [
        "AccountKey",
        "Certificate",
        "Sas",
        "ServicePrincipal"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SecretsType",
        "modelAsString": true,
        "values": [
          {
            "value": "AccountKey"
          },
          {
            "value": "Certificate"
          },
          {
            "value": "Sas"
          },
          {
            "value": "ServicePrincipal"
          }
        ]
      },
      "additionalProperties": false
    },
    "ServiceDataAccessAuthIdentity": {
      "enum": [
        "None",
        "WorkspaceSystemAssignedIdentity",
        "WorkspaceUserAssignedIdentity"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ServiceDataAccessAuthIdentity",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "Do not use any identity for service data access."
          },
          {
            "value": "WorkspaceSystemAssignedIdentity",
            "description": "Use the system assigned managed identity of the Workspace to authenticate service data access."
          },
          {
            "value": "WorkspaceUserAssignedIdentity",
            "description": "Use the user assigned managed identity of the Workspace to authenticate service data access."
          }
        ]
      },
      "additionalProperties": false
    },
    "ServicePrincipalDatastoreCredentials": {
      "description": "Service Principal datastore credentials configuration.",
      "required": [
        "clientId",
        "secrets",
        "tenantId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "format": "uuid",
          "description": "[Required] Service principal client ID.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Resource the service principal has access to.",
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "description": "[Required] Service principal secrets.",
          "$ref": "#/definitions/ServicePrincipalDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "format": "uuid",
          "description": "[Required] ID of the tenant to which the service principal belongs.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "ServicePrincipalDatastoreSecrets": {
      "description": "Datastore Service Principal secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "SkuCapacity": {
      "description": "SKU capacity information",
      "type": "object",
      "properties": {
        "default": {
          "format": "int32",
          "description": "Gets or sets the default capacity.",
          "default": 0,
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Gets or sets the maximum.",
          "default": 0,
          "type": "integer"
        },
        "minimum": {
          "format": "int32",
          "description": "Gets or sets the minimum.",
          "default": 0,
          "type": "integer"
        },
        "scaleType": {
          "description": "Gets or sets the type of the scale.",
          "default": "Automatic",
          "$ref": "#/definitions/SkuScaleType"
        }
      },
      "additionalProperties": false
    },
    "SkuResource": {
      "description": "Fulfills ARM Contract requirement to list all available SKUS for a resource.",
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Gets or sets the Sku Capacity.",
          "$ref": "#/definitions/SkuCapacity",
          "x-nullable": true
        },
        "resourceType": {
          "description": "The resource type name.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "sku": {
          "description": "Gets or sets the Sku.",
          "$ref": "#/definitions/SkuSetting",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "SkuResourceArmPaginatedResult": {
      "description": "A paginated list of SkuResource entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of SkuResource objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type SkuResource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuResource"
          },
          "x-ms-identifiers": [
          ]
        }
      },
      "additionalProperties": false
    },
    "SkuScaleType": {
      "description": "Node scaling setting for the compute sku.",
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "Automatic",
            "description": "Automatically scales node count."
          },
          {
            "value": "Manual",
            "description": "Node count scaled upon user request."
          },
          {
            "value": "None",
            "description": "Fixed set of nodes."
          }
        ]
      },
      "additionalProperties": false
    },
    "SkuSetting": {
      "description": "SkuSetting fulfills the need for stripped down SKU info in ARM contract.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "[Required] The name of the SKU. Ex - P3. It is typically a letter+number code.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "default": "Basic",
          "$ref": "#/definitions/SkuTier"
        }
      },
      "additionalProperties": false
    },
    "SweepJob": {
      "description": "Sweep job definition.",
      "required": [
        "objective",
        "samplingAlgorithm",
        "searchSpace",
        "trial"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "earlyTermination": {
          "description": "Early termination policies enable canceling poor-performing runs before they complete",
          "$ref": "#/definitions/EarlyTerminationPolicy",
          "x-nullable": true
        },
        "inputs": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "limits": {
          "description": "Sweep Job limit.",
          "default": "{}",
          "$ref": "#/definitions/SweepJobLimits",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "objective": {
          "description": "[Required] Optimization objective.",
          "$ref": "#/definitions/Objective"
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "samplingAlgorithm": {
          "description": "[Required] The hyperparameter sampling algorithm",
          "$ref": "#/definitions/SamplingAlgorithm"
        },
        "searchSpace": {
          "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
          "type": "object"
        },
        "trial": {
          "description": "[Required] Trial component definition.",
          "$ref": "#/definitions/TrialComponent"
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "SweepJobLimits": {
      "description": "Sweep Job limit class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "properties": {
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Sweep Job max concurrent trials.",
          "type": "integer",
          "x-nullable": true
        },
        "maxTotalTrials": {
          "format": "int32",
          "description": "Sweep Job max total trials.",
          "type": "integer",
          "x-nullable": true
        },
        "trialTimeout": {
          "format": "duration",
          "description": "Sweep Job Trial timeout value.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "TargetUtilizationScaleSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "properties": {
        "maxInstances": {
          "format": "int32",
          "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.",
          "default": 1,
          "type": "integer"
        },
        "minInstances": {
          "format": "int32",
          "description": "The minimum number of instances to always be present.",
          "default": 1,
          "type": "integer"
        },
        "pollingInterval": {
          "format": "duration",
          "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
          "default": "PT1S",
          "type": "string"
        },
        "targetUtilizationPercentage": {
          "format": "int32",
          "description": "Target CPU usage for the autoscaler.",
          "default": 70,
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "TargetUtilization",
      "additionalProperties": false
    },
    "TensorFlow": {
      "description": "TensorFlow distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "parameterServerCount": {
          "format": "int32",
          "description": "Number of parameter server tasks.",
          "default": 0,
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "workerCount": {
          "format": "int32",
          "description": "Number of workers. If not specified, will default to the instance count.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "TensorFlow",
      "additionalProperties": false
    },
    "TrialComponent": {
      "description": "Trial component definition.",
      "required": [
        "command",
        "environmentId"
      ],
      "type": "object",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "command": {
          "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "$ref": "#/definitions/DistributionConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentId": {
          "description": "[Required] The ARM resource ID of the Environment specification for the job.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "default": "{}",
          "$ref": "#/definitions/ResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "TritonModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "triton_model",
      "additionalProperties": false
    },
    "TritonModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "triton_model",
      "additionalProperties": false
    },
    "TruncationSelectionPolicy": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "properties": {
        "truncationPercentage": {
          "format": "int32",
          "description": "The percentage of runs to cancel at each evaluation interval.",
          "default": 0,
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "TruncationSelection",
      "additionalProperties": false
    },
    "UriFileDataVersion": {
      "description": "uri-file data version entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFileJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFileJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFolderDataVersion": {
      "description": "uri-folder data version entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UriFolderJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UriFolderJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UserIdentity": {
      "description": "User identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "UserIdentity",
      "additionalProperties": false
    },
    "ErrorResponse": {
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "x-ms-identifiers": [
          ],
          "description": "The error additional info."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "TrackedResource": {
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "#/definitions/systemData"
        }
      },
      "x-ms-azure-resource": true
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "format": "uuid",
          "type": "string",
          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "format": "uuid",
          "type": "string",
          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentities"
        }
      },
      "required": [
        "type"
      ]
    },
    "ManagedServiceIdentityType": {
      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "UserAssignedIdentities": {
      "title": "User-Assigned Identities",
      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentity"
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User assigned identity properties",
      "properties": {
        "principalId": {
          "description": "The principal ID of the assigned identity.",
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "description": "The client ID of the assigned identity.",
          "format": "uuid",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      },
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1,
      "x-ms-summary": "Subscription",
      "x-ms-dynamic-values": {
        "operationId": "ListSubscriptions",
        "value-collection": "value",
        "value-path": "subscriptionId",
        "value-title": "displayName",
        "parameters": {
          "x-ms-api-version": "2016-06-01"
        }
      }
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive",
      "required": true,
      "x-ms-summary": "Resource Group",
      "x-ms-dynamic-values": {
        "operationId": "ListResourceGroups",
        "value-collection": "value",
        "value-path": "name",
        "value-title": "name",
        "parameters": {
          "x-ms-api-version": "2016-06-01",
          "subscriptionId": {
            "parameter": "subscriptionId"
          }
        }
      },
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method",
      "x-ms-summary": "Workspace Name"
    },
    "ApiVersionParameter": {
      "name": "x-ms-api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-visibility": "internal",
      "default": "2022-05-01",
      "enum": [
        "2022-05-01"
      ],
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skip",
      "type": "string",
      "description": "Continuation token for pagination.",
      "x-ms-summary": "Pagination Token",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The filter to apply on the operation.",
      "required": false,
      "x-ms-summary": "Filter",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "description": "Query parameters. If nothing is passed returns all values.",
      "required": false,
      "x-ms-summary": "Top",
      "x-ms-visibility": "advanced",
      "type": "integer",
      "format": "int32"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/en-us/services/machine-learning/"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://privacy.microsoft.com/en-us/privacystatement"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Website"
    }
  ]
}