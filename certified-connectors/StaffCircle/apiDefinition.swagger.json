{
  "swagger": "2.0",
  "info": {
    "title": "StaffCircle",
    "description": "StaffCircle is an employee success platform which combines company culture with Performance Management in order to create high performing teams even in distributed work environments. StafffCircle includes Objective, Reviews, Values and Feedback linked to your competency framework. Drive engagement and performance with deep insight.",
    "version": "1.0",
    "contact": {
      "name": "StaffCircle Support",
      "url": "https://www.staffcircle.com/contact-us/",
      "email": "support@staffcircle.com"
    }
  },
  "host": "gateway.scp.staffcircle.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.staffcircle.com/"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.staffcircle.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication;Human Resources"
    }
  ],
  "paths": {
    "/public/Performance/v1/Categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The category identifier",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The category title",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the category",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Categories",
        "description": "Gets the list of objective categories",
        "operationId": "GetCategories",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/public/directory/v1/persons": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns a list of people",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The person's ID",
                        "title": "ID"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The person's first name",
                        "title": "First Name"
                      },
                      "secondName": {
                        "type": "string",
                        "description": "The person's surname",
                        "title": "Surname"
                      },
                      "knownAs": {
                        "type": "string",
                        "description": "What name the person likes to be known as",
                        "title": "Known As"
                      },
                      "email": {
                        "type": "string",
                        "description": "The Person's email address",
                        "title": "Email"
                      },
                      "dialingCode": {
                        "type": "string",
                        "description": "The dialing code for the person's phone number",
                        "title": "Dialing Code"
                      },
                      "mobile": {
                        "type": "string",
                        "description": "The person's mobile phone number",
                        "title": "Mobile Number"
                      },
                      "mainSite": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The id of the main site that the person is associated to",
                            "title": "Main Site ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to the main site",
                            "title": "Main Site Name"
                          },
                          "description": {
                            "type": "string",
                            "description": "description"
                          },
                          "manager": {
                            "type": "string",
                            "description": "manager"
                          }
                        },
                        "description": "Main Site that the person is associated to"
                      },
                      "manager": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The mangers id",
                            "title": "Manager ID"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The managers first name",
                            "title": "Managers First Name"
                          },
                          "secondName": {
                            "type": "string",
                            "description": "The managers second name",
                            "title": "Managers Second Name"
                          }
                        },
                        "description": "The person's manager"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "whether the person is currently active or not",
                        "title": "Active"
                      },
                      "department": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The id of the department associated to the person",
                            "title": "Department ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to the department",
                            "title": "Department Name"
                          }
                        },
                        "description": "The person's department"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The tag that represnts the person",
                        "title": "Tag"
                      },
                      "role": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The Role ID",
                            "title": "Role ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Role Name",
                            "title": "Role Name"
                          }
                        },
                        "description": "The person's role"
                      },
                      "avatarURL": {
                        "type": "string",
                        "description": "The URL to the person's profile picture",
                        "title": "Profile Picture"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The record Status ID",
                            "title": "Status ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The record Status Name",
                            "title": "Status Name"
                          }
                        },
                        "description": "The record status that the person is currently in. EG the record is currently activated"
                      },
                      "personStatus": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The Person Status ID",
                            "title": "Person Status ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The Person Status Name",
                            "title": "Person Status Name"
                          }
                        },
                        "description": "The person's status. EG They are an ex-employee"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "When the person first started work at the organisation",
                        "title": "Start Date"
                      }
                    }
                  },
                  "description": "results"
                }
              }
            }
          }
        },
        "summary": "Get Person by email",
        "operationId": "GetPerson",
        "description": "Attempts to find a person record by email",
        "parameters": [
          {
            "name": "SearchEmail",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Email",
            "description": "Search By Email",
            "x-ms-visibility": "important"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the person",
                  "title": "Person ID"
                }
              }
            }
          }
        },
        "summary": "Create a new Person",
        "operationId": "CreatePerson",
        "description": "Creates a Person",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "The person's first name",
                  "title": "First Name",
                  "x-ms-visibility": ""
                },
                "secondName": {
                  "type": "string",
                  "description": "The person's second name",
                  "title": "Second Name",
                  "x-ms-visibility": ""
                },
                "email": {
                  "type": "string",
                  "description": "The person's work email address",
                  "title": "Email",
                  "x-ms-visibility": ""
                },
                "mobile": {
                  "type": "string",
                  "description": "The person's mobile phone number",
                  "title": "Mobile",
                  "x-ms-visibility": "important"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "The person's date of birth",
                  "title": "Date of Birth",
                  "format": "date",
                  "x-ms-visibility": "important"
                },
                "startDate": {
                  "type": "string",
                  "description": "When the person's employment started",
                  "title": "Start Date",
                  "x-ms-visibility": "important"
                },
                "addressLine1": {
                  "type": "string",
                  "description": "The person's first line of their home address",
                  "title": "Address Line 1",
                  "x-ms-visibility": "important"
                },
                "addressLine2": {
                  "type": "string",
                  "description": "The person's second line of their home address",
                  "title": "Address Line 2",
                  "x-ms-visibility": "important"
                },
                "town": {
                  "type": "string",
                  "description": "The person's town of residence",
                  "title": "Town",
                  "x-ms-visibility": "important"
                },
                "postCode": {
                  "type": "string",
                  "description": "The person's postcode",
                  "title": "Postcode",
                  "x-ms-visibility": "important"
                },
                "countyName": {
                  "type": "string",
                  "description": "The person's county of residence",
                  "title": "County Name",
                  "x-ms-visibility": "important"
                },
                "countryName": {
                  "type": "string",
                  "description": "The person's country of residence",
                  "title": "Country Name",
                  "x-ms-visibility": "important"
                },
                "titleName": {
                  "type": "string",
                  "description": "The person's title",
                  "title": "Title Name",
                  "x-ms-visibility": "important"
                },
                "middleName": {
                  "type": "string",
                  "description": "The person's middle name",
                  "title": "Middle Name"
                },
                "homeEmail": {
                  "type": "string",
                  "description": "The person's personal email address",
                  "title": "Personal Email",
                  "x-ms-visibility": "important"
                },
                "homeTelephone": {
                  "type": "string",
                  "description": "The person's home phone number",
                  "title": "Home Phone",
                  "x-ms-visibility": "important"
                },
                "tag": {
                  "type": "string",
                  "description": "The tag that can be used to reference the person throughout the StaffCircle platform",
                  "title": "Tag"
                },
                "managerEmail": {
                  "type": "string",
                  "description": "The person's manager email address. This can be used to link a manager to a person",
                  "title": "Manager Email"
                },
                "departmentName": {
                  "type": "string",
                  "description": "The name of the department that the person belongs to",
                  "title": "Department Name"
                },
                "roleName": {
                  "type": "string",
                  "description": "The person's role. This can be used to link a role to a person",
                  "title": "Role Name"
                },
                "knownAs": {
                  "type": "string",
                  "description": "The name the person's prefers to be known as",
                  "title": "Known As",
                  "x-ms-visibility": "advanced"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "The person's profile picture",
                  "title": "Profile Picture URL",
                  "x-ms-visibility": "advanced"
                },
                "titleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's title",
                  "title": "Title ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTitles",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "countyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's county of residence",
                  "title": "County ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCounties",
                    "value-path": "id",
                    "value-title": "name"
                  },
                  "x-ms-visibility": "advanced"
                },
                "countryId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's country of residence",
                  "title": "Country ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCountries",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "genderId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's gender identifier",
                  "title": "Gender ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGenders",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "nationalityId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's nationality",
                  "title": "Nationality ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetNationalities",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "ethnicityId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's ethnicity",
                  "title": "Ethnicity ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEthnicities",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "maritalStatusId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's Marital Status",
                  "title": "Marital Status ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetMaritalStatus",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "managerId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's manager identifier (Only Manager ID or Manager Email can be entered)",
                  "title": "Manager ID",
                  "x-ms-visibility": "advanced"
                },
                "departmentId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's department identifier (Only Department ID or Department Name can be entered)",
                  "title": "Department ID",
                  "x-ms-visibility": "advanced"
                },
                "roleId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's employment role identifier (Only Role ID or Role Name can be entered)",
                  "title": "Role ID",
                  "x-ms-visibility": "advanced"
                },
                "mainSiteId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The site identifier that the person belongs to",
                  "title": "Site ID",
                  "x-ms-visibility": "advanced"
                },
                "emergencyContactConsent": {
                  "type": "boolean",
                  "description": "Whether the emergency contact has given consent to save their details",
                  "title": "Emergency Contact Consent",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "advanced"
                },
                "emergencyContactName": {
                  "type": "string",
                  "description": "The name of the person's emergency contact",
                  "title": "Emergency Contact Name",
                  "x-ms-visibility": "advanced"
                },
                "emergencyRelationshipId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The relationship between the emergency contact and the person",
                  "title": "Emergency Contact Relationship ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetRelationships",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "emergencyContactTelephone": {
                  "type": "string",
                  "description": "The telephone number of the person's emergency contact",
                  "title": "Emergency Contact Telephone",
                  "x-ms-visibility": "advanced"
                },
                "emergencyAddress": {
                  "type": "string",
                  "description": "The persons emergency address",
                  "title": "Emergency Address",
                  "x-ms-visibility": "advanced"
                },
                "nextOfKinName": {
                  "type": "string",
                  "description": "The name of the person's next of kin",
                  "title": "Next Of Kin Name",
                  "x-ms-visibility": "advanced"
                },
                "nextOfKinRelationshipId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The relationship between the next of kin and the person",
                  "title": "Next Of Kin Relationship ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetRelationships",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "nextOfKinTelephone": {
                  "type": "string",
                  "description": "The person's next of kin telephone number",
                  "title": "Next Of Kin Telephone",
                  "x-ms-visibility": "advanced"
                },
                "dialingCode": {
                  "type": "string",
                  "description": "International dialing code for the person's telephone number",
                  "title": "Dialing Code",
                  "x-ms-visibility": "advanced"
                },
                "workExtension": {
                  "type": "string",
                  "description": "The person's work extension number",
                  "title": "Work Extension",
                  "x-ms-visibility": "advanced"
                },
                "telephone": {
                  "type": "string",
                  "description": "The person's work telephone number",
                  "title": "Work Telephone",
                  "x-ms-visibility": "advanced"
                },
                "personalMobile": {
                  "type": "string",
                  "description": "The person's personal mobile number",
                  "title": "Personal Mobile",
                  "x-ms-visibility": "advanced"
                },
                "statusId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's StaffCircle account status",
                  "title": "Status ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetStatus",
                    "value-path": "id",
                    "value-title": "name"
                  },
                  "default": 1
                },
                "employmentTypeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's employment type",
                  "title": "Employment Type ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEmploymentTypes",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "contractTypeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's contract",
                  "title": "Contract Type ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContractTypes",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "contractExpiry": {
                  "type": "string",
                  "description": "The date the people's employment contract expires",
                  "title": "Contract Expiry",
                  "format": "date",
                  "x-ms-visibility": "advanced"
                },
                "employmentStatusId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's employment status",
                  "title": "Employment Status",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEmploymentStatus",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "secondaryEmploymentStatusId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The linked secondary employment status",
                  "title": "Secondary Employment Status",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetSecondaryEmploymentStatus",
                    "value-path": "id",
                    "value-title": "name"
                  }
                },
                "employmentNotes": {
                  "type": "string",
                  "description": "Employment notes regarding the person",
                  "title": "Employment Notes",
                  "x-ms-visibility": "advanced"
                },
                "medicalNotes": {
                  "type": "string",
                  "description": "Any important medical notes associated to the person",
                  "title": "Medical Notes",
                  "x-ms-visibility": "advanced"
                },
                "isPersonalDataEnabled": {
                  "type": "boolean",
                  "description": "Whether personal data is enabled or not",
                  "title": "Is Personal Data Enabled",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "advanced"
                },
                "isContactDataEnabled": {
                  "type": "boolean",
                  "description": "Whether Contact Data is enabled or not",
                  "title": "Is Contact Data Enabled",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "advanced"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The time zone that the person lives in",
                  "title": "Time Zone",
                  "enum": [
                    "(GMT-11:00) Niue",
                    "(GMT-11:00) Pago Pago",
                    "(GMT-10:00) Hawaii Time",
                    "(GMT-10:00) Rarotonga",
                    "(GMT-10:00) Tahiti",
                    "(GMT-09:30) Marquesas",
                    "(GMT-09:00) Alaska Time",
                    "(GMT-09:00) Gambier",
                    "(GMT-08:00) Pacific Time",
                    "(GMT-08:00) Pacific Time - Tijuana",
                    "(GMT-08:00) Pacific Time - Vancouver",
                    "(GMT-08:00) Pacific Time - Whitehorse",
                    "(GMT-08:00) Pitcairn",
                    "(GMT-07:00) Mountain Time",
                    "(GMT-07:00) Mountain Time - Arizona",
                    "(GMT-07:00) Mountain Time - Chihuahua, Mazatlan",
                    "(GMT-07:00) Mountain Time - Dawson Creek",
                    "(GMT-07:00) Mountain Time - Edmonton",
                    "(GMT-07:00) Mountain Time - Hermosillo",
                    "(GMT-07:00) Mountain Time - Yellowknife",
                    "(GMT-06:00) Belize",
                    "(GMT-06:00) Central Time",
                    "(GMT-06:00) Central Time - Mexico City",
                    "(GMT-06:00) Central Time - Regina",
                    "(GMT-06:00) Central Time - Tegucigalpa",
                    "(GMT-06:00) Central Time - Winnipeg",
                    "(GMT-06:00) Costa Rica",
                    "(GMT-06:00) El Salvador",
                    "(GMT-06:00) Galapagos",
                    "(GMT-06:00) Guatemala",
                    "(GMT-06:00) Managua",
                    "(GMT-05:00) America Cancun",
                    "(GMT-05:00) Bogota",
                    "(GMT-05:00) Easter Island",
                    "(GMT-05:00) Eastern Time",
                    "(GMT-05:00) Eastern Time - Iqaluit",
                    "(GMT-05:00) Eastern Time - Toronto",
                    "(GMT-05:00) Guayaquil",
                    "(GMT-05:00) Havana",
                    "(GMT-05:00) Jamaica",
                    "(GMT-05:00) Lima",
                    "(GMT-05:00) Nassau",
                    "(GMT-05:00) Panama",
                    "(GMT-05:00) Port-au-Prince",
                    "(GMT-05:00) Rio Branco",
                    "(GMT-04:00) Atlantic Time - Halifax",
                    "(GMT-04:00) Barbados",
                    "(GMT-04:00) Bermuda",
                    "(GMT-04:00) Boa Vista",
                    "(GMT-04:00) Caracas",
                    "(GMT-04:00) Curacao",
                    "(GMT-04:00) Grand Turk",
                    "(GMT-04:00) Guyana",
                    "(GMT-04:00) La Paz",
                    "(GMT-04:00) Manaus",
                    "(GMT-04:00) Martinique",
                    "(GMT-04:00) Port of Spain",
                    "(GMT-04:00) Porto Velho",
                    "(GMT-04:00) Puerto Rico",
                    "(GMT-04:00) Santo Domingo",
                    "(GMT-04:00) Thule",
                    "(GMT-03:30) Newfoundland Time - St. Johns",
                    "(GMT-03:00) Araguaina",
                    "(GMT-03:00) Asuncion",
                    "(GMT-03:00) Belem",
                    "(GMT-03:00) Buenos Aires",
                    "(GMT-03:00) Campo Grande",
                    "(GMT-03:00) Cayenne",
                    "(GMT-03:00) Cuiaba",
                    "(GMT-03:00) Fortaleza",
                    "(GMT-03:00) Godthab",
                    "(GMT-03:00) Maceio",
                    "(GMT-03:00) Miquelon",
                    "(GMT-03:00) Montevideo",
                    "(GMT-03:00) Palmer",
                    "(GMT-03:00) Paramaribo",
                    "(GMT-03:00) Punta Arenas",
                    "(GMT-03:00) Recife",
                    "(GMT-03:00) Rothera",
                    "(GMT-03:00) Salvador",
                    "(GMT-03:00) Santiago",
                    "(GMT-03:00) Stanley",
                    "(GMT-02:00) Noronha",
                    "(GMT-02:00) Sao Paulo",
                    "(GMT-02:00) South Georgia",
                    "(GMT-01:00) Azores",
                    "(GMT-01:00) Cape Verde",
                    "(GMT-01:00) Scoresbysund",
                    "(GMT+00:00) Abidjan",
                    "(GMT+00:00) Accra",
                    "(GMT+00:00) Bissau",
                    "(GMT+00:00) Canary Islands",
                    "(GMT+00:00) Casablanca",
                    "(GMT+00:00) Danmarkshavn",
                    "(GMT+00:00) Dublin",
                    "(GMT+00:00) El Aaiun",
                    "(GMT+00:00) Faeroe",
                    "(GMT+00:00) GMT (no daylight saving)",
                    "(GMT+00:00) Lisbon",
                    "(GMT+00:00) London",
                    "(GMT+00:00) Monrovia",
                    "(GMT+00:00) Reykjavik",
                    "(GMT+01:00) Algiers",
                    "(GMT+01:00) Amsterdam",
                    "(GMT+01:00) Andorra",
                    "(GMT+01:00) Berlin",
                    "(GMT+01:00) Brussels",
                    "(GMT+01:00) Budapest",
                    "(GMT+01:00) Central European Time - Belgrade",
                    "(GMT+01:00) Central European Time - Prague",
                    "(GMT+01:00) Ceuta",
                    "(GMT+01:00) Copenhagen",
                    "(GMT+01:00) Gibraltar",
                    "(GMT+01:00) Lagos",
                    "(GMT+01:00) Luxembourg",
                    "(GMT+01:00) Madrid",
                    "(GMT+01:00) Malta",
                    "(GMT+01:00) Monaco",
                    "(GMT+01:00) Ndjamena",
                    "(GMT+01:00) Oslo",
                    "(GMT+01:00) Paris",
                    "(GMT+01:00) Rome",
                    "(GMT+01:00) Stockholm",
                    "(GMT+01:00) Tirane",
                    "(GMT+01:00) Tunis",
                    "(GMT+01:00) Vienna",
                    "(GMT+01:00) Warsaw",
                    "(GMT+01:00) Zurich",
                    "(GMT+02:00) Amman",
                    "(GMT+02:00) Athens",
                    "(GMT+02:00) Beirut",
                    "(GMT+02:00) Bucharest",
                    "(GMT+02:00) Cairo",
                    "(GMT+02:00) Chisinau",
                    "(GMT+02:00) Damascus",
                    "(GMT+02:00) Gaza",
                    "(GMT+02:00) Helsinki",
                    "(GMT+02:00) Jerusalem",
                    "(GMT+02:00) Johannesburg",
                    "(GMT+02:00) Khartoum",
                    "(GMT+02:00) Kiev",
                    "(GMT+02:00) Maputo",
                    "(GMT+02:00) Moscow-01 - Kaliningrad",
                    "(GMT+02:00) Nicosia",
                    "(GMT+02:00) Riga",
                    "(GMT+02:00) Sofia",
                    "(GMT+02:00) Tallinn",
                    "(GMT+02:00) Tripoli",
                    "(GMT+02:00) Vilnius",
                    "(GMT+02:00) Windhoek",
                    "(GMT+03:00) Baghdad",
                    "(GMT+03:00) Istanbul",
                    "(GMT+03:00) Minsk",
                    "(GMT+03:00) Moscow+00 - Moscow",
                    "(GMT+03:00) Nairobi",
                    "(GMT+03:00) Qatar",
                    "(GMT+03:00) Riyadh",
                    "(GMT+03:00) Syowa",
                    "(GMT+03:30) Tehran",
                    "(GMT+04:00) Baku",
                    "(GMT+04:00) Dubai",
                    "(GMT+04:00) Mahe",
                    "(GMT+04:00) Mauritius",
                    "(GMT+04:00) Moscow+01 - Samara",
                    "(GMT+04:00) Reunion",
                    "(GMT+04:00) Tbilisi",
                    "(GMT+04:00) Yerevan",
                    "(GMT+04:30) Kabul",
                    "(GMT+05:00) Aqtau",
                    "(GMT+05:00) Aqtobe",
                    "(GMT+05:00) Ashgabat",
                    "(GMT+05:00) Dushanbe",
                    "(GMT+05:00) Karachi",
                    "(GMT+05:00) Kerguelen",
                    "(GMT+05:00) Maldives",
                    "(GMT+05:00) Mawson",
                    "(GMT+05:00) Moscow+02 - Yekaterinburg",
                    "(GMT+05:00) Tashkent",
                    "(GMT+05:30) Colombo",
                    "(GMT+05:30) India Standard Time",
                    "(GMT+05:45) Kathmandu",
                    "(GMT+06:00) Almaty",
                    "(GMT+06:00) Bishkek",
                    "(GMT+06:00) Chagos",
                    "(GMT+06:00) Dhaka",
                    "(GMT+06:00) Moscow+03 - Omsk",
                    "(GMT+06:00) Thimphu",
                    "(GMT+06:00) Vostok",
                    "(GMT+06:30) Cocos",
                    "(GMT+06:30) Rangoon",
                    "(GMT+07:00) Bangkok",
                    "(GMT+07:00) Christmas",
                    "(GMT+07:00) Davis",
                    "(GMT+07:00) Hanoi",
                    "(GMT+07:00) Hovd",
                    "(GMT+07:00) Jakarta",
                    "(GMT+07:00) Moscow+04 - Krasnoyarsk",
                    "(GMT+08:00) Brunei",
                    "(GMT+08:00) China Time - Beijing",
                    "(GMT+08:00) Choibalsan",
                    "(GMT+08:00) Hong Kong",
                    "(GMT+08:00) Kuala Lumpur",
                    "(GMT+08:00) Macau",
                    "(GMT+08:00) Makassar",
                    "(GMT+08:00) Manila",
                    "(GMT+08:00) Moscow+05 - Irkutsk",
                    "(GMT+08:00) Singapore",
                    "(GMT+08:00) Taipei",
                    "(GMT+08:00) Ulaanbaatar",
                    "(GMT+08:00) Western Time - Perth",
                    "(GMT+08:30) Pyongyang",
                    "(GMT+09:00) Dili",
                    "(GMT+09:00) Jayapura",
                    "(GMT+09:00) Moscow+06 - Yakutsk",
                    "(GMT+09:00) Palau",
                    "(GMT+09:00) Seoul",
                    "(GMT+09:00) Tokyo",
                    "(GMT+09:30) Central Time - Darwin",
                    "(GMT+10:00) Dumont D''Urville",
                    "(GMT+10:00) Eastern Time - Brisbane",
                    "(GMT+10:00) Guam",
                    "(GMT+10:00) Moscow+07 - Vladivostok",
                    "(GMT+10:00) Port Moresby",
                    "(GMT+10:00) Truk",
                    "(GMT+10:30) Central Time - Adelaide",
                    "(GMT+11:00) Casey",
                    "(GMT+11:00) Eastern Time - Hobart",
                    "(GMT+11:00) Eastern Time - Melbourne, Sydney",
                    "(GMT+11:00) Efate",
                    "(GMT+11:00) Guadalcanal",
                    "(GMT+11:00) Kosrae",
                    "(GMT+11:00) Moscow+08 - Magadan",
                    "(GMT+11:00) Norfolk",
                    "(GMT+11:00) Noumea",
                    "(GMT+11:00) Ponape",
                    "(GMT+12:00) Funafuti",
                    "(GMT+12:00) Kwajalein",
                    "(GMT+12:00) Majuro",
                    "(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy",
                    "(GMT+12:00) Nauru",
                    "(GMT+12:00) Tarawa",
                    "(GMT+12:00) Wake",
                    "(GMT+12:00) Wallis",
                    "(GMT+13:00) Auckland",
                    "(GMT+13:00) Enderbury",
                    "(GMT+13:00) Fakaofo",
                    "(GMT+13:00) Fiji",
                    "(GMT+13:00) Tongatapu",
                    "(GMT+14:00) Apia"
                  ],
                  "default": "(GMT+00:00) London",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "firstName",
                "secondName",
                "email",
                "mobile",
                "dateOfBirth",
                "startDate"
              ]
            }
          }
        ]
      }
    },
    "/public/Performance/v1/ObjectiveTemplates": {
      "get": {
        "responses": {
          "200": {
            "description": "A list of objective templates",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The objective template identifier",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The objective template title",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The objective template description",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Object Templates",
        "operationId": "GetObjectiveTemplates",
        "description": "Get a list of templates that can be used to create an objective",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/Performance/v1/Objectives": {
      "get": {
        "responses": {
          "200": {
            "description": "A list of objectives",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The objective identifier",
                        "title": "Objective ID"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title given to the objective",
                        "title": "Title"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description given to the objective",
                        "title": "Description"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The tag associated to the objective",
                        "title": "Tag"
                      },
                      "objectiveType": {
                        "type": "string",
                        "description": "The type of objective",
                        "title": "Objective Type"
                      },
                      "closed": {
                        "type": "boolean",
                        "description": "Whether the Objective is closed",
                        "title": "Closed",
                        "enum": [
                          "true",
                          "false"
                        ]
                      },
                      "closedReason": {
                        "type": "string",
                        "description": "The reason why the objective has been closed",
                        "title": "Closed Reason"
                      },
                      "person": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The identifier of the person that the objective is for",
                            "title": "Person ID"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the person the objective is for",
                            "title": "Person First Name"
                          },
                          "secondName": {
                            "type": "string",
                            "description": "The family name of the of the person of the objective is for",
                            "title": "Person Family Name"
                          }
                        },
                        "description": "Person"
                      },
                      "manager": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The manager's identifier",
                            "title": "Manager ID"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The manager's first name",
                            "title": "Manager First Name"
                          },
                          "secondName": {
                            "type": "string",
                            "description": "The manager's family name",
                            "title": "Manager Family Name"
                          }
                        },
                        "description": "Manager"
                      },
                      "createdBy": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The identifier of the person that created the objective",
                            "title": "Created By Person Id"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the person that created the objective",
                            "title": "Created By Person First Name"
                          },
                          "secondName": {
                            "type": "string",
                            "description": "The family name of the person that created the objective",
                            "title": "Created By Person Family Name"
                          }
                        },
                        "description": "Created By"
                      },
                      "department": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The department identifier linked to the objective",
                            "title": "Department ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the department linked to the objective",
                            "title": "Department Name"
                          }
                        },
                        "description": "The Department"
                      },
                      "departmentObjective": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "the identifier of the department objective",
                            "title": "Department Objective ID"
                          },
                          "title": {
                            "type": "string",
                            "description": "The department objective title",
                            "title": "Department Objective Title"
                          },
                          "description": {
                            "type": "string",
                            "description": "The department Objective Description",
                            "title": "Department Objective Description"
                          }
                        },
                        "description": "The Department Objective"
                      },
                      "companyObjective": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The company objective identifier",
                            "title": "Company Objective ID"
                          },
                          "title": {
                            "type": "string",
                            "description": "The company objective title",
                            "title": "Company Objective Title"
                          },
                          "description": {
                            "type": "string",
                            "description": "The company objective description",
                            "title": "Company Objective Description"
                          }
                        },
                        "description": "The Company Objective"
                      },
                      "currentProgress": {
                        "type": "number",
                        "format": "double",
                        "description": "Current progress on the objective",
                        "title": "Current Progress"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "From when the objective is being measured",
                        "title": "Start Date"
                      },
                      "endDate": {
                        "type": "string",
                        "description": "The deadline for the objective",
                        "title": "End Date"
                      }
                    }
                  },
                  "description": "results"
                }
              }
            }
          }
        },
        "summary": "Search for objectives",
        "operationId": "GetObjectives",
        "description": "Search for objectives",
        "parameters": [
          {
            "name": "SearchTitle",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search Title",
            "description": "Loose string match to search based on title"
          },
          {
            "name": "PersonEmail",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Person Email",
            "description": "The email of the person that the objective is assigned to"
          },
          {
            "name": "Tag",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Tag",
            "description": "The tag allocated to the objective"
          },
          {
            "name": "Closed",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Closed",
            "description": "If the objective is closed. True if closed otherwise false"
          },
          {
            "name": "ObjectiveType",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Objective Type",
            "description": "The type of objective",
            "enum": [
              "Personal",
              "Departmental",
              "Company"
            ]
          },
          {
            "name": "From",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "From",
            "description": "The objective is active from this time",
            "format": "date-time"
          },
          {
            "name": "To",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "To",
            "description": "The objective is active from this time",
            "format": "date-time"
          },
          {
            "name": "ActiveAt",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The objective is active at this point in time",
            "x-ms-summary": "Active At",
            "format": "date-time"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the created objective",
                  "title": "Objective ID"
                }
              }
            }
          }
        },
        "summary": "Create a new objective by template",
        "description": "Creates a new objective using an objective template",
        "operationId": "CreateObjectiveByTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "objectiveTemplateId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Creates a new objective from an objective template",
                  "title": "Objective Template",
                  "x-ms-dynamic-values": {
                    "operationId": "GetObjectiveTemplates",
                    "value-path": "id",
                    "value-title": "title"
                  }
                },
                "startDate": {
                  "type": "string",
                  "description": "From when the objective is being measured",
                  "title": "Start Date",
                  "format": "date-time",
                  "x-ms-visibility": ""
                },
                "endDate": {
                  "type": "string",
                  "description": "The deadline for the objective",
                  "title": "End Date",
                  "format": "date-time",
                  "x-ms-visibility": ""
                },
                "personEmail": {
                  "type": "string",
                  "description": "The email address of the person who the objective is for. Required to create a personal objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Person Email"
                },
                "personId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of the person who the objective is for. Required to create a personal objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Person ID",
                  "x-ms-visibility": "advanced"
                },
                "departmentName": {
                  "type": "string",
                  "description": "The name of the department who the objective is for. Required to create a departmental objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Department Name"
                },
                "departmentId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of the department who the objective is for. Required to create a departmental objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Department ID",
                  "x-ms-visibility": "advanced"
                },
                "managerEmail": {
                  "type": "string",
                  "description": "The email of the manager responsible for tracking the objective. Automatically defaults to the Persons or Departments manager. Required if the Person or Department has no manager or the objective is a company objective. Used if Manager ID not provided",
                  "title": "Manager Email"
                },
                "title": {
                  "type": "string",
                  "description": "Overrides the name of the new objective.",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "Overrides the description of the new objective.",
                  "title": "Description"
                },
                "managerId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The manager responsible for tracking the objective. Automatically defaults to the Persons or Departments manager. Required if the Person or Department has no manager or the objective is a company objective. Used if Manager Email not provided",
                  "title": "Manager ID",
                  "x-ms-visibility": "advanced"
                },
                "companyObjectiveId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An optional link to a company objective that the newly created objective relates to",
                  "title": "Company Objective ID",
                  "x-ms-visibility": "advanced"
                },
                "departmentObjectiveId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An optional link to a departmental objective that the newly created objective relates to",
                  "title": "Department Objective ID",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "startDate",
                "endDate",
                "objectiveTemplateId"
              ]
            }
          }
        ]
      }
    },
    "/public/directory/v1/Genders": {
      "get": {
        "responses": {
          "200": {
            "description": "List of genders",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The gender identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to the gender",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Genders",
        "description": "Get a list of available genders",
        "operationId": "GetGenders",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/nationalities": {
      "get": {
        "responses": {
          "200": {
            "description": "List of nationalities",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The nationality identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the nationality",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Nationalities",
        "description": "Get a list of available nationalities",
        "operationId": "GetNationalities",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/countries": {
      "get": {
        "responses": {
          "200": {
            "description": "List of countries",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The country identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the country",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Countires",
        "description": "Gets a list of countries",
        "operationId": "GetCountries",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/counties": {
      "get": {
        "responses": {
          "200": {
            "description": "List of counties",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The county identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the county",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Counties",
        "description": "Gets a list of counties",
        "operationId": "GetCounties",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/MaritalStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "List of marital status",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The martial status identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The martial status name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Marital Status",
        "description": "Get a list of marital status",
        "operationId": "GetMaritalStatus",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/ContractTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "List of contract types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The contract type identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The contract type name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Contract Types",
        "description": "Gets a list of contract types",
        "operationId": "GetContractTypes",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/Relationships": {
      "get": {
        "responses": {
          "200": {
            "description": "List of relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The relationship identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The relationship name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Relationships",
        "description": "Gets a list of relationships",
        "operationId": "GetRelationships",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/EmploymentStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "List of employment status",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The employment status identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The employment status name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Employment Status",
        "description": "Gets a list of employment status",
        "operationId": "GetEmploymentStatus",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/EmploymentTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "List of employment types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The employment type identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The employment type name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Employment Types",
        "description": "Gets a list of employment types",
        "operationId": "GetEmploymentTypes",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/ethnicities": {
      "get": {
        "responses": {
          "200": {
            "description": "List of ethnicities",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ethnicity identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the ethnicity",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Ethnicities",
        "description": "Gets a list of Ethnicities",
        "operationId": "GetEthnicities",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/status": {
      "get": {
        "responses": {
          "200": {
            "description": "List of status",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The status name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Status",
        "description": "Gets a list of status",
        "operationId": "GetStatus",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/directory/v1/titles": {
      "get": {
        "responses": {
          "200": {
            "description": "List of titles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The title identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The title name",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Titles",
        "description": "Gets a list of titles",
        "operationId": "GetTitles",
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "description": "content-type",
            "x-ms-summary": "content-type"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/public/Performance/v1/Objectives/": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The objective identifier",
                  "title": "Objective ID"
                }
              }
            }
          }
        },
        "summary": "Create a new objective",
        "description": "Creates a new objective",
        "operationId": "CreateObjective",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "categoryId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The linked objective competency",
                  "title": "Competency",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCategories",
                    "value-path": "id",
                    "value-title": "title"
                  }
                },
                "title": {
                  "type": "string",
                  "description": "The name of the new objective.",
                  "title": "Title",
                  "x-ms-visibility": ""
                },
                "description": {
                  "type": "string",
                  "description": "The description of the new objective.",
                  "title": "Description",
                  "x-ms-visibility": ""
                },
                "startDate": {
                  "type": "string",
                  "description": "From when the objective is being measured",
                  "title": "Start Date",
                  "format": "date-time",
                  "x-ms-visibility": ""
                },
                "endDate": {
                  "type": "string",
                  "description": "The deadline for the objective",
                  "title": "End Date",
                  "format": "date-time",
                  "x-ms-visibility": ""
                },
                "valueType": {
                  "type": "string",
                  "description": "Defines how the objective is measured",
                  "title": "Value Type",
                  "enum": [
                    "Number",
                    "Percentage",
                    "Financial",
                    "YesNo"
                  ],
                  "x-ms-visibility": ""
                },
                "tag": {
                  "type": "string",
                  "description": "A text tag, for use in searches and reporting.",
                  "title": "Tag"
                },
                "managerEmail": {
                  "type": "string",
                  "description": "The email of the manager responsible for tracking the objective. Automatically defaults to the Persons or Departments manager. Required if the Person or Department has no manager or the objective is a company objective. Used if Manager ID not provided",
                  "title": "Manager Email"
                },
                "managerId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The manager responsible for tracking the objective. Automatically defaults to the Persons or Departments manager. Required if the Person or Department has no manager or the objective is a company objective. Used if Manager Email not provided",
                  "title": "Manager ID",
                  "x-ms-visibility": "advanced"
                },
                "personEmail": {
                  "type": "string",
                  "description": "The email address of the person who the objective is for. Required to create a personal objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Person Email"
                },
                "personId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of the person who the objective is for. Required to create a personal objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Person ID",
                  "x-ms-visibility": "advanced"
                },
                "departmentName": {
                  "type": "string",
                  "description": "The name of the department who the objective is for. Required to create a departmental objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Department Name"
                },
                "departmentId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID of the department who the objective is for. Required to create a departmental objective. If no Department or Person is provided then the objective is assumed to be a company objective",
                  "title": "Department ID",
                  "x-ms-visibility": "advanced"
                },
                "companyObjectiveId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An optional link to a company objective that the newly created objective relates to",
                  "title": "Company Objective ID",
                  "x-ms-visibility": "advanced"
                },
                "departmentObjectiveId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An optional link to a departmental objective that the newly created objective relates to",
                  "title": "Department Objective ID",
                  "x-ms-visibility": "advanced"
                },
                "startValue": {
                  "type": "number",
                  "format": "double",
                  "description": "Defines how the objective is measured",
                  "title": "Start Value",
                  "x-ms-visibility": "advanced"
                },
                "target": {
                  "type": "number",
                  "format": "double",
                  "description": "The target value to be reached for the objective to be completed successfully",
                  "title": "Target",
                  "x-ms-visibility": "advanced"
                },
                "allowAddProgress": {
                  "type": "boolean",
                  "description": "If true allows a person to add progress themselves, otherwise only the specified manager may update the objective. Default: false.",
                  "title": "Allow Add Progress",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "advanced"
                },
                "recurType": {
                  "type": "string",
                  "description": "If provided then objective is recurring. Defines unit of time for recurrence.",
                  "title": "Recur Type",
                  "enum": [
                    "Days",
                    "Weeks",
                    "Months",
                    "Years"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "recurInterval": {
                  "type": "integer",
                  "format": "int32",
                  "description": "How many days/weeks/months/years will the objective recur. Required if objective recurs.",
                  "title": "Recur Interval",
                  "x-ms-visibility": "advanced"
                },
                "cumulativeProgress": {
                  "type": "boolean",
                  "description": "Specifies if when adding progress from the StaffCircle front end progress is added as an incremental value.",
                  "title": "Cumulative Progress",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "advanced"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Sends push notifications.",
                      "title": "Send Push Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Send SMS notifications",
                      "title": "Send SMS Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "",
                      "default": false
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Sends Email Updates",
                      "title": "Send Email Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "teams": {
                      "type": "boolean",
                      "description": "Sends updates via Microsoft teams if teams integration is enabled",
                      "title": "Send Teams Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Sends InApp notifications",
                      "title": "Send In App Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Allow users to like comments on the objective",
                      "title": "Allows Likes",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": "advanced"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Allow comments on the objective",
                      "title": "Allow Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "All images to be attached to comments.",
                      "title": "Allow Images In Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": "advanced"
                    },
                    "allowDocuments": {
                      "type": "boolean",
                      "description": "Allow documents to be attached to comments",
                      "title": "Allow Documents",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "contentSettings",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "endDate",
                "startDate",
                "categoryId",
                "title",
                "description",
                "valueType"
              ]
            }
          }
        ]
      }
    },
    "/public/security/v1/webhooks/{hook_Id}": {
      "x-ms-notification-content": {
        "description": "default"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "summary": "Delete Webhook",
        "operationId": "DeleteTrigger",
        "description": "Delete  Webhook",
        "parameters": [
          {
            "name": "hook_Id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/public/security/v1/webhooks/NewPerson": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL to the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier that represents the person",
                  "title": "Person ID"
                },
                "givenName": {
                  "type": "string",
                  "description": "The person's first name",
                  "title": "First Name"
                },
                "middleName": {
                  "type": "string",
                  "description": "The person's middle name",
                  "title": "Middle Name"
                },
                "familyName": {
                  "type": "string",
                  "description": "The person's family name",
                  "title": "Family Name"
                },
                "knownAs": {
                  "type": "string",
                  "description": "What name the person likes to be known as",
                  "title": "known As"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "The person's date of birth",
                  "title": "Date of Birth",
                  "format": "date"
                },
                "contactDetails": {
                  "type": "object",
                  "properties": {
                    "personalEmail": {
                      "type": "string",
                      "description": "The person's personal email address",
                      "title": "Personal Email"
                    },
                    "workEmail": {
                      "type": "string",
                      "description": "The person's work email address",
                      "title": "Work Email"
                    },
                    "workMobile": {
                      "type": "string",
                      "description": "The person's work mobile number",
                      "title": "Work Mobile"
                    },
                    "personalMobile": {
                      "type": "string",
                      "description": "The person's personal mobile number",
                      "title": "Personal Mobile"
                    },
                    "homeTelephone": {
                      "type": "string",
                      "description": "The person's home telephone number",
                      "title": "Home Telephone"
                    },
                    "workTelephone": {
                      "type": "string",
                      "description": "The person's work telephone number",
                      "title": "Work Telephone"
                    },
                    "workExtension": {
                      "type": "string",
                      "description": "The person's work extension number",
                      "title": "Work Telephone"
                    }
                  },
                  "description": "contactDetails"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string",
                      "description": "The person's first line of their home address",
                      "title": "Address Line 1"
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "The person's first line of their home address",
                      "title": "Address Line 2"
                    },
                    "town": {
                      "type": "string",
                      "description": "The person's town of residence",
                      "title": "Town"
                    },
                    "postCode": {
                      "type": "string",
                      "description": "The person's postcode",
                      "title": "Postcode"
                    }
                  },
                  "description": "address"
                },
                "emergencyContact": {
                  "type": "object",
                  "properties": {
                    "emergencyContactName": {
                      "type": "string",
                      "description": "The name of the person's emergency contact",
                      "title": "Emergency Contact Name",
                      "x-ms-visibility": "advanced"
                    },
                    "emergencyContactTelephone": {
                      "type": "string",
                      "description": "The telephone number of the person's emergency contact",
                      "title": "Emergency Contact Telephone",
                      "x-ms-visibility": "advanced"
                    },
                    "emergencyRelationshipId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The relationship between the emergency contact and the person",
                      "title": "Emergency Contact Relationship ID"
                    },
                    "emergencyContactConsent": {
                      "type": "boolean",
                      "description": "Whether the emergency contact has given consent to save their details",
                      "title": "Emergency Contact Consent",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "emergencyAddress": {
                      "type": "string",
                      "description": "The persons emergency contact address",
                      "title": "Emergency Contact Address",
                      "x-ms-visibility": "advanced"
                    },
                    "emergencyMedicalNotes": {
                      "type": "string",
                      "description": "Any important medical notes associated to the person",
                      "title": "Medical Notes",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "emergencyContact"
                },
                "nextOfKin": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string",
                      "description": "The of the person's next of kin",
                      "title": "Next of Kin Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Telephone": {
                      "type": "string",
                      "description": "The person's next of kin telephone number",
                      "title": "Next of Kin Telephone",
                      "x-ms-visibility": "advanced"
                    },
                    "RelationshipId": {
                      "type": "string",
                      "description": "The relationship between the next of kin and the person",
                      "title": "Next of Kin Relationship ID",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "nextOfKin"
                },
                "employeeDetails": {
                  "type": "object",
                  "properties": {
                    "employmentNotes": {
                      "type": "string",
                      "description": "Employment notes regarding the person",
                      "title": "Employment Notes",
                      "x-ms-visibility": "advanced"
                    },
                    "tag": {
                      "type": "string",
                      "description": "The tag that can be used to reference the person throughout the StaffCircle platform",
                      "title": "Tag"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "When the person's employment started",
                      "title": "Start Date"
                    },
                    "siteId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The site identifier that the person belongs to",
                      "title": "Site ID",
                      "x-ms-visibility": "advanced"
                    },
                    "groupId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The group that the person belongs to",
                      "title": "Group ID"
                    },
                    "departmentId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The department that the person belongs",
                      "title": "Department ID",
                      "x-ms-visibility": "advanced"
                    },
                    "manager": {
                      "type": "object",
                      "properties": {
                        "PersonId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identifier of the parson's manager",
                          "title": "Manager ID"
                        },
                        "FirstName": {
                          "type": "string",
                          "description": "The first name of the person's manager",
                          "title": "Manager's First Name"
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "The family name of the person's manager",
                          "title": "Manager's Family Name"
                        },
                        "Email": {
                          "type": "string",
                          "description": "The person's manager's email address",
                          "title": "Manager Email"
                        }
                      },
                      "description": "manager"
                    }
                  },
                  "description": "employeeDetails"
                },
                "accountStatus": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The person's StaffCircle account status",
                  "title": "Account Status",
                  "x-ms-visibility": "advanced"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "When a new person is added",
        "operationId": "NewPerson",
        "description": "Triggers when a new person is added",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "x-ms-visibility": "internal",
                  "title": "URL",
                  "x-ms-notification-url": true
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "People",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a Staff Cirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/public/security/v1/webhooks/NewObjective": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL to the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the objective",
                  "title": "Objective ID"
                },
                "templateId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Creates a new objective from an objective template",
                  "title": "Objective Template"
                },
                "manager": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The person's manager's identifier",
                      "title": "Manager ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The person's manager's first name",
                      "title": "Manager First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The person's manager's family name",
                      "title": "Manager Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The person's manager's email address",
                      "title": "Manager Email"
                    }
                  },
                  "description": "manager"
                },
                "person": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The person's identifier linked to the objective",
                      "title": "Person Identifier"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The person's first name linked to the objective",
                      "title": "Person First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The person's family name linked to the objective",
                      "title": "Person Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The person's email address linked to the objective",
                      "title": "Person Email"
                    }
                  },
                  "description": "person"
                },
                "title": {
                  "type": "string",
                  "description": "The name of the new objective",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the new objective",
                  "title": "Description"
                },
                "valueType": {
                  "type": "string",
                  "description": "Defines how the objective is measured",
                  "title": "Value Type"
                },
                "tag": {
                  "type": "string",
                  "description": "A text tag, for use in searches and reporting",
                  "title": "Tag"
                },
                "category": {
                  "type": "string",
                  "description": "The objectives category identifier",
                  "title": "Category"
                },
                "startDate": {
                  "type": "string",
                  "description": "From when the objective is being measured",
                  "title": "Start Date",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "description": "The deadline for the objective",
                  "title": "End Date"
                },
                "lastProgressDate": {
                  "type": "string",
                  "description": "The date on which there was progress on the objective",
                  "title": "Last Progress Date",
                  "format": "date-time"
                },
                "closed": {
                  "type": "boolean",
                  "description": "closed"
                },
                "allowAddProgress": {
                  "type": "boolean",
                  "description": "If true allows a person to add progress themselves, otherwise only the specified manager may update the objective",
                  "title": "Allow Add Progress",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "notificationSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Sends push notifications.",
                      "title": "Push Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Send SMS notifications",
                      "title": "SMS Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Sends Email Updates",
                      "title": "Email Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "microsoftTeams": {
                      "type": "boolean",
                      "description": "Sends updates via Microsoft teams if teams integration is enabled",
                      "title": "Teams Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Sends InApp notifications",
                      "title": "In App Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "notificationSettings"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Allow users to like comments on the objective",
                      "title": "Allows Likes",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Allow comments on the objective",
                      "title": "Allow Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "All images to be attached to comments.",
                      "title": "Allow Images In Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowDocuments": {
                      "type": "boolean",
                      "description": "Allow documents to be attached to comments",
                      "title": "Allow Documents",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "contentSettings"
                },
                "createdAt": {
                  "type": "string",
                  "description": "When the objective has created",
                  "title": "Created At",
                  "format": "date-time"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person that created the objective",
                      "title": "Created By Person Id"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person that created the objective",
                      "title": "Created By Person First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person that created the objective",
                      "title": "Created By Person Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person that created the objective",
                      "title": "Created By Person Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "createdByPerson"
                },
                "currentProgress": {
                  "type": "number",
                  "format": "double",
                  "description": "Current progress on the objective",
                  "title": "Current Progress"
                },
                "startValue": {
                  "type": "number",
                  "format": "double",
                  "description": "Defines how the objective is measured",
                  "title": "Start Value",
                  "x-ms-visibility": "advanced"
                },
                "targetValue": {
                  "type": "number",
                  "format": "double",
                  "description": "The target value to be reached for the objective to be completed successfully",
                  "title": "Target",
                  "x-ms-visibility": "advanced"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "When a new objective is added",
        "description": "Triggers when a new objective is added",
        "consumes": [
          "application/json"
        ],
        "operationId": "NewObjective",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "x-ms-visibility": "internal",
                  "title": "URL",
                  "x-ms-notification-url": true
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Objectives",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a Staff Cirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/public/security/v1/webhooks/UpdateObjective": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL to the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the objective progress record",
                  "title": "ID"
                },
                "objectiveId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The objective that this progress record is associated with",
                  "title": "Objective ID"
                },
                "value": {
                  "type": "number",
                  "format": "double",
                  "description": "The total progress value for the object",
                  "title": "Value"
                },
                "description": {
                  "type": "string",
                  "description": "The description added to the objective progress record",
                  "title": "Description"
                },
                "createdAt": {
                  "type": "string",
                  "description": "When the progress record was created",
                  "title": "Created On",
                  "x-ms-visibility": "advanced",
                  "format": "date-time"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person that created the progress objective record",
                      "title": "Created By Person ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person that created the objective progress record",
                      "title": "Created By First Name",
                      "x-ms-visibility": "advanced"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person that created the objective progress record",
                      "title": "Created By Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person that created the objective progress record",
                      "title": "Created By Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "createdByPerson"
                },
                "sendNotifications": {
                  "type": "boolean",
                  "description": "States whether notifications where sent",
                  "title": "Send Notifications",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-visibility": "advanced"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "UpdateObjective",
        "summary": "When an objective is updated",
        "description": "Triggers when an objective is updated",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "title": "URL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Objectives_Progress",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a StaffCirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": false
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/Public/Security/v1/Webhooks/NewArticle": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL to the article",
              "title": "Article URL",
              "x-ms-visibility": "important"
            },
            "data": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the article",
                  "title": "ID"
                },
                "Title": {
                  "type": "string",
                  "description": "The title given to the article",
                  "title": "Title",
                  "x-ms-visibility": "important"
                },
                "Summary": {
                  "type": "string",
                  "description": "The summary of the article",
                  "title": "Summary",
                  "x-ms-visibility": "important"
                },
                "Tag": {
                  "type": "string",
                  "description": "The tag associated to the article",
                  "title": "Tag"
                },
                "PriorityName": {
                  "type": "string",
                  "description": "The priority of the article",
                  "title": "Priority Name"
                },
                "CreatedAt": {
                  "type": "string",
                  "description": "The date the article was first created",
                  "title": "Created On",
                  "format": "date-time"
                },
                "AudienceDto": {
                  "type": "object",
                  "properties": {
                    "Everyone": {
                      "type": "boolean",
                      "description": "Whether the article is being published to everyone"
                    },
                    "Persons": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Tag": {
                            "type": "string",
                            "description": "Target Person Tag",
                            "title": "Person Tag"
                          },
                          "Id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tag Id"
                          }
                        }
                      }
                    },
                    "Sites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Tag": {
                            "type": "string",
                            "description": "Target Site Tag",
                            "title": "Site Tag"
                          },
                          "Id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tag Id"
                          }
                        }
                      }
                    },
                    "Departments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Tag": {
                            "type": "string",
                            "description": "Target Department Tag",
                            "title": "Department Tag"
                          },
                          "Id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tag Id"
                          }
                        }
                      }
                    }
                  }
                },
                "CreatedByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier for the person who created the article",
                      "title": "Created By ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person who created the article",
                      "title": "Created By First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person who created the article",
                      "title": "Created By Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person that created the article",
                      "title": "Created By Email"
                    }
                  },
                  "description": "CreatedByPerson"
                },
                "ModifiedAt": {
                  "type": "string",
                  "description": "When the article was last modified",
                  "title": "Modified On",
                  "format": "date-time"
                },
                "ModifiedByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person who last modified the article",
                      "title": "Modified By ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person who last modified the article",
                      "title": "Modified By First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person who last modified the article",
                      "title": "Modified By Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person who last modified the article",
                      "title": "Modified By Email"
                    }
                  },
                  "description": "ModifiedByPerson"
                },
                "PublishedDate": {
                  "type": "string",
                  "description": "When the article was published",
                  "title": "Published Date",
                  "format": "date-time",
                  "x-ms-visibility": "important"
                },
                "ArticleContent": {
                  "type": "string",
                  "description": "The HTML content of the article",
                  "title": "Article Content",
                  "x-ms-visibility": "important"
                },
                "ArticleContentText": {
                  "type": "string",
                  "description": "The plain text article content",
                  "title": "Article Content Text",
                  "x-ms-visibility": "important"
                },
                "MainImageId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The ID to an image that will be used as the articles main image in the feed.",
                  "title": "Main Image ID",
                  "x-ms-visibility": "advanced"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "PublishedArticle",
        "summary": "when a new article is published",
        "description": "Trigger when a new article is published",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "x-ms-visibility": "internal",
                  "title": "URL",
                  "x-ms-notification-url": true
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Articles",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a StaffCirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "customAction": {
                  "type": "string",
                  "description": "A custom action to register a webhook against",
                  "title": "Custom Action",
                  "default": "Publish",
                  "x-ms-visibility": "internal"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "customAction",
                "delete",
                "isActive",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/Public/Security/v1/Webhooks/UpdateArticle": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectType": {
              "type": "string",
              "description": "subjectType"
            },
            "changeType": {
              "type": "string",
              "description": "changeType"
            },
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "subjectFrontEndUrl"
            },
            "timeStamp": {
              "type": "string",
              "description": "timeStamp"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "summary": {
                  "type": "string",
                  "description": "summary"
                },
                "tag": {
                  "type": "string",
                  "description": "tag"
                },
                "articleTypeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "articleTypeId"
                },
                "priorityId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "priorityId"
                },
                "createdAt": {
                  "type": "string",
                  "description": "createdAt"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "PersonId"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "FirstName"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "FamilyName"
                    },
                    "Email": {
                      "type": "string",
                      "description": "Email"
                    }
                  },
                  "description": "createdByPerson"
                },
                "modifiedAt": {
                  "type": "string",
                  "description": "modifiedAt"
                },
                "modifiedByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "PersonId"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "FirstName"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "FamilyName"
                    },
                    "Email": {
                      "type": "string",
                      "description": "Email"
                    }
                  },
                  "description": "modifiedByPerson"
                },
                "isPublished": {
                  "type": "boolean",
                  "description": "isPublished"
                },
                "visibleToEveryone": {
                  "type": "boolean",
                  "description": "visibleToEveryone"
                },
                "hideMainImageDetail": {
                  "type": "boolean",
                  "description": "hideMainImageDetail"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "allowLikes": {
                      "type": "boolean",
                      "description": "allowLikes"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "allowComments"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "allowImagesInComments"
                    }
                  },
                  "description": "contentSettings"
                },
                "notificationSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "push"
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "sms"
                    },
                    "email": {
                      "type": "boolean",
                      "description": "email"
                    },
                    "microsoftTeams": {
                      "type": "boolean",
                      "description": "microsoftTeams"
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "inApp"
                    }
                  },
                  "description": "notificationSettings"
                },
                "engagement": {
                  "type": "object",
                  "properties": {
                    "numberOfComments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "numberOfComments"
                    },
                    "numberOfLikes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "numberOfLikes"
                    }
                  },
                  "description": "engagement"
                },
                "releatedItems": {
                  "type": "object",
                  "properties": {},
                  "description": "releatedItems"
                },
                "articleTags": {
                  "type": "array",
                  "items": {},
                  "description": "articleTags"
                },
                "isDeleted": {
                  "type": "boolean",
                  "description": "isDeleted"
                }
              },
              "description": "data"
            },
            "differences": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "path"
                  },
                  "oldValue": {
                    "type": "string",
                    "description": "oldValue"
                  },
                  "newValue": {
                    "type": "string",
                    "description": "newValue"
                  }
                }
              },
              "description": "differences"
            }
          }
        }
      }
    },
    "/public/security/v1/webhooks/articleupdate": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "summary": {
                  "type": "string",
                  "description": "summary"
                },
                "tag": {
                  "type": "string",
                  "description": "tag"
                },
                "articleTypeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "articleTypeId"
                },
                "priorityId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "priorityId"
                },
                "createdAt": {
                  "type": "string",
                  "description": "createdAt"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "PersonId"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "FirstName"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "FamilyName"
                    },
                    "Email": {
                      "type": "string",
                      "description": "Email"
                    }
                  },
                  "description": "createdByPerson"
                },
                "modifiedAt": {
                  "type": "string",
                  "description": "modifiedAt"
                },
                "modifiedByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "PersonId"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "FirstName"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "FamilyName"
                    },
                    "Email": {
                      "type": "string",
                      "description": "Email"
                    }
                  },
                  "description": "modifiedByPerson"
                },
                "isPublished": {
                  "type": "boolean",
                  "description": "isPublished"
                },
                "visibleToEveryone": {
                  "type": "boolean",
                  "description": "visibleToEveryone"
                },
                "hideMainImageDetail": {
                  "type": "boolean",
                  "description": "hideMainImageDetail"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "allowLikes": {
                      "type": "boolean",
                      "description": "allowLikes"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "allowComments"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "allowImagesInComments"
                    }
                  },
                  "description": "contentSettings"
                },
                "notificationSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "push"
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "sms"
                    },
                    "email": {
                      "type": "boolean",
                      "description": "email"
                    },
                    "microsoftTeams": {
                      "type": "boolean",
                      "description": "microsoftTeams"
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "inApp"
                    }
                  },
                  "description": "notificationSettings"
                },
                "engagement": {
                  "type": "object",
                  "properties": {
                    "numberOfComments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "numberOfComments"
                    },
                    "numberOfLikes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "numberOfLikes"
                    }
                  },
                  "description": "engagement"
                },
                "releatedItems": {
                  "type": "object",
                  "properties": {},
                  "description": "releatedItems"
                },
                "articleTags": {
                  "type": "array",
                  "items": {},
                  "description": "articleTags"
                },
                "isDeleted": {
                  "type": "boolean",
                  "description": "isDeleted"
                }
              },
              "description": "data"
            },
            "differences": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "path"
                  },
                  "oldValue": {
                    "type": "string",
                    "description": "oldValue"
                  },
                  "newValue": {
                    "type": "string",
                    "description": "newValue"
                  }
                }
              },
              "description": "differences"
            }
          }
        }
      }
    },
    "/public/security/v1/webhooks/NewTask": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL to the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the task",
                  "title": "ID"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the task",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the task",
                  "title": "Description"
                },
                "priority": {
                  "type": "string",
                  "description": "The priority of the task",
                  "title": "Priority"
                },
                "groupId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the task group",
                  "title": "Task Group ID"
                },
                "groupTitle": {
                  "type": "string",
                  "description": "The title of the task group",
                  "title": "Task Group Title",
                  "x-ms-visibility": "advanced"
                },
                "isAdhoc": {
                  "type": "boolean",
                  "description": "Whether this is an adhoc task",
                  "title": "Is Adhoc",
                  "enum": [
                    "true",
                    "false"
                  ]
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person who created the task",
                      "title": "Created By Person ID",
                      "x-ms-visibility": "advanced"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person who created the task",
                      "title": "Created By First Name",
                      "x-ms-visibility": "advanced"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person who created the task",
                      "title": "Created By Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email of the person who created the task",
                      "title": "Created By Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "createdByPerson"
                },
                "person": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person that the task is for",
                      "title": "Person ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person that the task is for",
                      "title": "Person First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person that the task is for",
                      "title": "Person Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email of the person that the task is for",
                      "title": "Person Email"
                    }
                  },
                  "description": "person"
                },
                "manager": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the manager of the task",
                      "title": "Manager ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the manager of the task",
                      "title": "Manager First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the manager of the task",
                      "title": "Manager Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email of the manager of the task",
                      "title": "Manager Email"
                    }
                  },
                  "description": "manager"
                },
                "dueDate": {
                  "type": "string",
                  "description": "When the task is due",
                  "title": "Due Date",
                  "format": "date"
                },
                "createdOn": {
                  "type": "string",
                  "description": "When the task was created",
                  "title": "Created On",
                  "format": "date-time",
                  "x-ms-visibility": "advanced"
                },
                "form": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the form used to fill out the task",
                      "title": "Form ID",
                      "x-ms-visibility": "advanced"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the form that is used to fill out the task",
                      "title": "Form Title",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "form"
                },
                "notificationSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Whether In push notifications for the task will be sent",
                      "title": "Push Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Whether In sms notifications for the task will be sent",
                      "title": "SMS Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Whether In email notifications for the task will be sent",
                      "title": "Email Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "microsoftTeams": {
                      "type": "boolean",
                      "description": "Whether In Microsoft Teams notifications for the task will be sent",
                      "title": "Microsoft Teams Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Whether In app notifications for the task will be sent",
                      "title": "In App Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "notificationSettings"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Whether the task allows likes",
                      "title": "Allow Likes",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Whether the task allows comments",
                      "title": "Allow Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "Whether the task allows images in comments",
                      "title": "Allow Images In Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowDocuments": {
                      "type": "boolean",
                      "description": "Whether the task allows documents",
                      "title": "Allow Documents",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "contentSettings"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "NewTask",
        "summary": "When a new task is added",
        "description": "Triggers when a new task is added",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "title": "URL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Task",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a StaffCirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": false
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/public/security/v1/webhooks/NewReview": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL of the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The review identifier",
                  "title": "ID"
                },
                "previousReviewId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the previous review for this reviewee",
                  "title": "Previous Review ID"
                },
                "manager": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the manager associated with the review",
                      "title": "Manager ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name  of the manager associated with the review",
                      "title": "Manager First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the manager associated with the review",
                      "title": "Manager Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the manager associated with the review",
                      "title": "Manager Email"
                    }
                  },
                  "description": "manager"
                },
                "internalReviewerPersonIds": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "description": "a list of internal reviewers",
                    "title": "Internal Reviewer IDs",
                    "x-ms-visibility": "advanced"
                  },
                  "description": "internalReviewerPersonIds"
                },
                "person": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the reviewee",
                      "title": "Reviewee ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the reviewee",
                      "title": "Reviewee First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the reviewee",
                      "title": "Reviewee Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the reviewee",
                      "title": "Reviewee Email"
                    }
                  },
                  "description": "person"
                },
                "title": {
                  "type": "string",
                  "description": "The title given to the review",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "The description given to the review",
                  "title": "Description"
                },
                "reviewType": {
                  "type": "string",
                  "description": "The type of review",
                  "title": "Review Type"
                },
                "dueOn": {
                  "type": "string",
                  "description": "When the review is due",
                  "title": "Due On",
                  "format": "date-time"
                },
                "attachedDocumentIds": {
                  "type": "array",
                  "items": {
                    "description": "A list of attached documents",
                    "title": "Attached Document IDs",
                    "type": "integer",
                    "format": "int32",
                    "x-ms-visibility": "advanced"
                  },
                  "description": "attachedDocumentIds"
                },
                "linkedObjectives": {
                  "type": "array",
                  "items": {
                    "description": "a list of linked objectives",
                    "title": "Linked Objective IDs",
                    "type": "integer",
                    "x-ms-visibility": "advanced",
                    "format": "int32"
                  },
                  "description": "linkedObjectives"
                },
                "appraisalSummary": {
                  "type": "object",
                  "properties": {
                    "personAppraisalTemplateId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The appraisal template used to create the appraisal",
                      "title": "Appraisal Template ID",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "appraisalSummary"
                },
                "scores": {
                  "type": "object",
                  "properties": {
                    "currentScore": {
                      "type": "number",
                      "format": "double",
                      "description": "The reviews current score",
                      "title": "Current Score"
                    }
                  },
                  "description": "scores"
                },
                "createdAt": {
                  "type": "string",
                  "description": "When the review was created",
                  "title": "Created On",
                  "format": "date-time",
                  "x-ms-visibility": "advanced"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The Identifier of the person who created the review",
                      "title": "Created By ID",
                      "x-ms-visibility": "advanced"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person who created the review",
                      "title": "Created By First Name",
                      "x-ms-visibility": "advanced"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person that created the review",
                      "title": "Created By Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person that created the review",
                      "title": "Created By Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "createdByPerson"
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Whether likes are allowed",
                      "title": "Allow Likes",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Whether comments are allowed on the review",
                      "title": "Allow Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "Whether images are allowed in comments",
                      "title": "Allow Images In Comments",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowDocuments": {
                      "type": "boolean",
                      "description": "Whether documents can be attached to the review",
                      "title": "Allow Documents",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "contentSettings"
                },
                "notificationSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Whether to send push notifications",
                      "title": "Push Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Whether to send sms notifications",
                      "title": "SMS Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Whether to send email notifications",
                      "title": "Email Notification",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "microsoftTeams": {
                      "type": "boolean",
                      "description": "Whether to send Microsoft Teams notifications",
                      "title": "Microsoft Teams Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Whether to send in app notifications",
                      "title": "In App Notifications",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-visibility": ""
                    }
                  },
                  "description": "notificationSettings"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "NewReview",
        "summary": "When a new review is added",
        "description": "Triggers when a new review is added",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "title": "URL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Reviews",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": false
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a StaffCirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/public/security/v1/webhooks/newabsence": {
      "x-ms-notification-content": {
        "description": "default",
        "schema": {
          "type": "object",
          "properties": {
            "subjectFrontEndUrl": {
              "type": "string",
              "description": "The URL of the record in StaffCircle",
              "title": "Record URL",
              "x-ms-visibility": "advanced"
            },
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the absence",
                  "title": "ID"
                },
                "requestedForPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person that the absence request is for",
                      "title": "Person ID"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person that the absence request is for",
                      "title": "Person First Name"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person that the absence request is for",
                      "title": "Person Family Name"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person that the absence request is for",
                      "title": "Person Email"
                    }
                  },
                  "description": "requestedForPerson"
                },
                "unitType": {
                  "type": "string",
                  "description": "The absence request unit type (Hours, Days)",
                  "title": "Unit Type"
                },
                "numberOfHours": {
                  "type": "number",
                  "format": "double",
                  "description": "The number of hours that have been request off",
                  "title": "Number of hours"
                },
                "partialDay": {
                  "type": "string",
                  "description": "Whether a partial day has been requested off (Morning, Afternoon)",
                  "title": "Partial Day",
                  "enum": [
                    "",
                    "true",
                    "false"
                  ]
                },
                "start": {
                  "type": "string",
                  "description": "When the absence starts",
                  "title": "Start Date",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "description": "When the absence comes to an end",
                  "title": "End Date",
                  "format": "date-time"
                },
                "typeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the type of absence being requested",
                  "title": "Type ID"
                },
                "type": {
                  "type": "string",
                  "description": "The type of absence that is being requested",
                  "title": "Type"
                },
                "subTypeId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the sub type of absence being requested",
                  "title": "Sub Type ID"
                },
                "policyId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier of the absence policy that the staff member is on",
                  "title": "Policy ID",
                  "x-ms-visibility": "advanced"
                },
                "reason": {
                  "type": "string",
                  "description": "The reason for the absence request",
                  "title": "Reason"
                },
                "createdAt": {
                  "type": "string",
                  "description": "When the absence request was made",
                  "title": "Created On",
                  "format": "date-time"
                },
                "createdByPerson": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the person who created the absence request",
                      "title": "Created By ID",
                      "x-ms-visibility": "advanced"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the person who created the absence request",
                      "title": "Created By First Name",
                      "x-ms-visibility": "advanced"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the person who created the absence request",
                      "title": "Created By Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the person who created the absence request",
                      "title": "Created By Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "createdByPerson"
                },
                "approvalDetails": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the approval (Pending,Approved,Declined)",
                      "title": "Approval Status",
                      "x-ms-visibility": "advanced"
                    },
                    "approvedAt": {
                      "type": "string",
                      "description": "When the absence was approved",
                      "title": "Approved On",
                      "format": "date-time",
                      "x-ms-visibility": "advanced"
                    },
                    "response": {
                      "type": "string",
                      "description": "The response given by the approver",
                      "title": "Approval Response",
                      "x-ms-visibility": "advanced"
                    },
                    "approvedByPerson": {
                      "type": "object",
                      "properties": {
                        "PersonId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identifier of the person who approved the absence",
                          "title": "Approved By ID",
                          "x-ms-visibility": "advanced"
                        },
                        "FirstName": {
                          "type": "string",
                          "description": "The first name of the person who approved the absence",
                          "title": "Approved By First Name",
                          "x-ms-visibility": "advanced"
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Thefamily name of the person who approved the absence",
                          "title": "Approved By Family Name",
                          "x-ms-visibility": "advanced"
                        },
                        "Email": {
                          "type": "string",
                          "description": "The email address of the person who approved the absence",
                          "title": "Approved By Email",
                          "x-ms-visibility": "advanced"
                        }
                      },
                      "description": "approvedByPerson"
                    }
                  },
                  "description": "approvalDetails"
                },
                "manager": {
                  "type": "object",
                  "properties": {
                    "PersonId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identifier of the manager involved in the absence request",
                      "title": "Manager ID",
                      "x-ms-visibility": "advanced"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "The first name of the manager involved in the absence request",
                      "title": "Manager First Name",
                      "x-ms-visibility": "advanced"
                    },
                    "FamilyName": {
                      "type": "string",
                      "description": "The family name of the manager involved in the absence request",
                      "title": "Manager Family Name",
                      "x-ms-visibility": "advanced"
                    },
                    "Email": {
                      "type": "string",
                      "description": "The email address of the manager involved in the absence request",
                      "title": "Manager Email",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "manager"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "NewAbsence",
        "summary": "When a new absence is added",
        "description": "Triggers when a new absence is added",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "description": "What authentication method will the webhook use for its call",
                  "title": "Auth Type",
                  "default": "none",
                  "x-ms-visibility": "internal"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the webhook",
                  "title": "Name"
                },
                "url": {
                  "type": "string",
                  "description": "The url where the webhook payload will be sent when triggered",
                  "title": "URL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Webhook can be disabled by setting to false",
                  "title": "Is Active",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "resourceType": {
                  "type": "string",
                  "description": "The type of resource the webhook is for",
                  "title": "Resource Type",
                  "default": "Absences",
                  "x-ms-visibility": "internal"
                },
                "create": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Created",
                  "title": "Create",
                  "enum": [
                    true,
                    false
                  ],
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "update": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Updated",
                  "title": "Update",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Trigger webhook when resource is Deleted",
                  "title": "Delete",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                },
                "notifications": {
                  "type": "boolean",
                  "description": "Trigger webhook when a StaffCirlce system notification is raised for the event",
                  "title": "Notifications",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "authType",
                "create",
                "delete",
                "isActive",
                "name",
                "notifications",
                "resourceType",
                "update",
                "url"
              ]
            }
          }
        ]
      }
    },
    "/public/Performance/v1/Objectives/{objectiveId}/progress": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the objective progress record",
                  "title": "ID"
                }
              }
            }
          }
        },
        "operationId": "UpdateObjectiveScore",
        "summary": "Update an objective score",
        "description": "Updates an objective with a new score and a description",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectiveId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The objective that progress score is to be updated for",
            "x-ms-summary": "Objective ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "description": "The current total progress",
                  "title": "Value"
                },
                "isIncrement": {
                  "type": "boolean",
                  "description": "If false then value passed is the current value of the objective. If true then the value should be added to the existing total",
                  "title": "Is Increment",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the progress made",
                  "title": "Description"
                }
              },
              "required": [
                "description",
                "value"
              ]
            }
          }
        ]
      }
    },
    "/public/comms/v1/Articles": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the article that has been created",
                  "title": "ID"
                }
              }
            }
          }
        },
        "operationId": "CreateArticle",
        "summary": "Create a new article",
        "description": "Creates a new article that can be distributed to StaffCircle users via multiple communication channels",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The Title of the Article. Max Length 250 characters",
                  "title": "Title",
                  "x-ms-visibility": ""
                },
                "priority": {
                  "type": "string",
                  "description": "What is the priority of the article",
                  "title": "Priority",
                  "default": "Information",
                  "enum": [
                    "Critical",
                    "Important",
                    "Highlight",
                    "Information"
                  ],
                  "x-ms-visibility": ""
                },
                "articleType": {
                  "type": "string",
                  "description": "The type of article that is to be created",
                  "title": "Article Type",
                  "default": "Social",
                  "enum": [
                    "Social",
                    "Blog"
                  ],
                  "x-ms-visibility": ""
                },
                "htmlContent": {
                  "type": "string",
                  "description": "The main HTML content for the article.",
                  "title": "HTML Content",
                  "x-ms-visibility": ""
                },
                "mainImageUrl": {
                  "type": "string",
                  "description": "The URL to an image that will be used as the articles main image in the feed.",
                  "title": "Article Image URL",
                  "x-ms-visibility": ""
                },
                "summary": {
                  "type": "string",
                  "description": "A Summary of the article. Defaults to first 500 chars of Html content if not provided.",
                  "title": "Summary",
                  "x-ms-visibility": ""
                },
                "tag": {
                  "type": "string",
                  "description": "The tag associated to the article. Max characters 250",
                  "title": "Tag",
                  "x-ms-visibility": ""
                },
                "channelId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "What channel will the article be published to. If left blank then will be set to the default feed",
                  "title": "Channel ID",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetChannels",
                    "value-path": "id",
                    "value-title": "title"
                  }
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Whether to notify users about the article by push notifications",
                      "title": "Send Push Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Whether to notify users about the article by SMS notifications",
                      "title": "Send SMS Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Whether to notify users about the article by email notifications",
                      "title": "Send Email Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Whether to notify users about the article by in app notifications",
                      "title": "Send In App Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true
                    },
                    "teams": {
                      "type": "boolean",
                      "description": "Whether to notify users about the article by Microsoft Teams notifications",
                      "title": "Send Teams Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false
                    },
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Can users like the article. Default true",
                      "title": "Allow Likes",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced",
                      "default": true
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Can users comment on the article. Default true.",
                      "title": "Allow Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "Whether images are allowed in comments",
                      "title": "Allow Images In Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced",
                      "default": true
                    }
                  },
                  "description": "contentSettings"
                },
                "publicationDetails": {
                  "type": "object",
                  "properties": {
                    "pinFromDate": {
                      "type": "string",
                      "description": "Should the article be pinned. If so give a date. Required If Pin Duration Hours provided",
                      "title": "Pin From Date",
                      "format": "date-time",
                      "x-ms-visibility": "advanced"
                    },
                    "pinDurationHours": {
                      "type": "integer",
                      "format": "int32",
                      "description": "How many hours after the Pin From Date should the article remain pinned. Required If Pin From Date is provided.",
                      "title": "Pin Duration Hours",
                      "x-ms-visibility": "advanced"
                    },
                    "scheduledDateTime": {
                      "type": "string",
                      "description": "Should this article be scheduled for publication in the future.",
                      "title": "Publication Scheduled Date Time",
                      "x-ms-visibility": "advanced"
                    },
                    "publishImmediately": {
                      "type": "boolean",
                      "description": "Should this article be published straight away",
                      "title": "Publish Immediately",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true
                    },
                    "publishAsUserId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If not the user making the API call which user should this be made on behalf of.",
                      "title": "Publish User ID",
                      "x-ms-visibility": ""
                    }
                  },
                  "description": "publicationDetails"
                }
              },
              "required": [
                "title",
                "tag",
                "articleType",
                "priority",
                "contentSettings",
                "htmlContent"
              ]
            }
          }
        ]
      }
    },
    "/public/comms/v1/Channels": {
      "get": {
        "responses": {
          "200": {
            "description": "List of channels",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The channel identifier",
                    "title": "ID",
                    "x-ms-visibility": "internal"
                  },
                  "feed": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The feed identifier",
                        "title": "Feed ID",
                        "x-ms-visibility": "internal"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title given to the feed",
                        "title": "Feed Title",
                        "x-ms-visibility": "internal"
                      }
                    },
                    "description": "feed"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title given to the channel",
                    "title": "Channel Title",
                    "x-ms-visibility": "internal"
                  },
                  "tag": {
                    "type": "string",
                    "description": "The tag that is associated to the channel",
                    "title": "Channel Tag",
                    "x-ms-visibility": "internal"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Channels",
        "operationId": "GetChannels",
        "description": "Gets a list of channels",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/comms/v1/Alerts": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the alert",
                  "title": "ID"
                }
              }
            }
          }
        },
        "summary": "Create a new alert",
        "operationId": "CreateAlert",
        "description": "Creates a new alert that can be distributed to StaffCircle users via multiple communication channels",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the alert",
                  "title": "Title",
                  "x-ms-visibility": ""
                },
                "priority": {
                  "type": "string",
                  "description": "What priority is the alert",
                  "title": "Priority",
                  "default": "Critical",
                  "enum": [
                    "Critical",
                    "Important",
                    "Highlight",
                    "Information"
                  ],
                  "x-ms-visibility": ""
                },
                "summary": {
                  "type": "string",
                  "description": "The main content of the alert",
                  "title": "Summary",
                  "x-ms-visibility": ""
                },
                "everyone": {
                  "type": "boolean",
                  "description": "Should this alert be sent to all users in the company",
                  "title": "Send To Everyone",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": ""
                },
                "audience": {
                  "type": "object",
                  "properties": {
                    "departmentTags": {
                      "type": "string",
                      "description": "A comma separated list of department tags who should receive the alert. Do not use if Send To Everyone is set to true",
                      "title": "Send To Department Tags"
                    },
                    "peopleTags": {
                      "type": "string",
                      "description": "A comma separated list of people tags who should receive the alert. Do not use if Send To Everyone is set to true",
                      "title": "Send To People Tags"
                    },
                    "groupTags": {
                      "type": "string",
                      "description": "A comma separated list of group tags who should receive the alert. Do not use if Send To Everyone is set to true",
                      "title": "Send To Group Tags"
                    },
                    "siteTags": {
                      "type": "string",
                      "description": "A comma separated list of site tags who should receive the alert. Do not use if Send To Everyone is set to true",
                      "title": "Send To Site Tags"
                    }
                  },
                  "description": "audience"
                },
                "communicationMethods": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Whether to notify users through push notifications",
                      "title": "Send Push Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Whether to notify users through SMS notifications",
                      "title": "Send SMS Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Whether to send the alert notification by email",
                      "title": "Send Email Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Whether to notify users through in app notifications",
                      "title": "Send In App Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "teams": {
                      "type": "boolean",
                      "description": "Whether to notify users through Microsoft Teams notifications",
                      "title": "Send Microsoft Teams Notification",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    }
                  },
                  "description": "communicationMethods"
                }
              },
              "required": [
                "title",
                "priority"
              ]
            }
          }
        ]
      }
    },
    "/public/tasks/v1/tasks": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identifier for the task",
                  "title": "ID"
                }
              }
            }
          }
        },
        "summary": "Create a new task",
        "operationId": "CreateTask",
        "description": "Creates a new task and assigns it to a user",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the task",
                  "title": "Title",
                  "x-ms-visibility": ""
                },
                "priorityId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Priority of the task. Required if Not derived from the Task Group",
                  "title": "Priority ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPriorities",
                    "value-path": "id",
                    "value-title": "title"
                  },
                  "x-ms-visibility": ""
                },
                "description": {
                  "type": "string",
                  "description": "Description given to the task",
                  "title": "Description",
                  "x-ms-visibility": ""
                },
                "formId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The worksheet used in the task",
                  "title": "Worksheet",
                  "x-ms-dynamic-values": {
                    "operationId": "GetForms",
                    "value-path": "id",
                    "value-title": "title"
                  }
                },
                "dueDate": {
                  "type": "string",
                  "description": "Date the task is due for completion",
                  "title": "Due Date",
                  "format": "date-time",
                  "x-ms-visibility": ""
                },
                "assignedToId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Who is the task assigned to. Can't be used if passing Assigned To Email",
                  "title": "Assigned To ID",
                  "x-ms-visibility": "advanced"
                },
                "managerId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Who is managing the task. Can't be used if passing Manager Email",
                  "title": "Manager ID",
                  "x-ms-visibility": "advanced"
                },
                "taskGroupId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The task group that the task is assigned to",
                  "title": "Task Group ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTaskGroups",
                    "value-path": "id",
                    "value-title": "title"
                  }
                },
                "assignedToEmail": {
                  "type": "string",
                  "description": "Email of who the task is assigned to. Cant be used if passing Assigned To Id",
                  "title": "Assigned To Email",
                  "x-ms-visibility": ""
                },
                "managerEmail": {
                  "type": "string",
                  "description": "Email of who is managing the task. Can't be assigned if Manager ID is passed",
                  "title": "Manager Email",
                  "x-ms-visibility": ""
                },
                "taskIntervalId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Id of the task interval. Required if the task recurs",
                  "title": "Task Interval ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetIntervals",
                    "value-path": "id",
                    "value-title": "title"
                  },
                  "x-ms-visibility": ""
                },
                "contentSettings": {
                  "type": "object",
                  "properties": {
                    "push": {
                      "type": "boolean",
                      "description": "Sends push notifications about the task",
                      "title": "Send Push Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "sms": {
                      "type": "boolean",
                      "description": "Sends sms notifications about the task",
                      "title": "Send SMS Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "email": {
                      "type": "boolean",
                      "description": "Sends email notifications about the task",
                      "title": "Send Email Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "teams": {
                      "type": "boolean",
                      "description": "Sends Microsoft Teams notifications about the task",
                      "title": "Send Microsoft Teams Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": false,
                      "x-ms-visibility": ""
                    },
                    "inApp": {
                      "type": "boolean",
                      "description": "Sends in app notifications about the task",
                      "title": "Send In App Notifications",
                      "enum": [
                        true,
                        false
                      ],
                      "default": true,
                      "x-ms-visibility": ""
                    },
                    "allowLikes": {
                      "type": "boolean",
                      "description": "Allow users to like comments on the task",
                      "title": "Allow Likes",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowComments": {
                      "type": "boolean",
                      "description": "Allow comments on the task",
                      "title": "Allow Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowImagesInComments": {
                      "type": "boolean",
                      "description": "All images to be attached to comments",
                      "title": "Allow Images In Comments",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced"
                    },
                    "allowDocuments": {
                      "type": "boolean",
                      "description": "Allow documents to be attached to comments",
                      "title": "Allow Documents",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "contentSettings"
                }
              },
              "required": [
                "title",
                "formId",
                "taskGroupId"
              ]
            }
          }
        ]
      }
    },
    "/public/tasks/v1/forms": {
      "get": {
        "responses": {
          "200": {
            "description": "List of forms",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The form identifier",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the form",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description given to the form",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Forms",
        "operationId": "GetForms",
        "x-ms-visibility": "internal",
        "description": "Gets all forms",
        "parameters": []
      }
    },
    "/public/tasks/v1/intervals": {
      "get": {
        "responses": {
          "200": {
            "description": "List of intervals",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The interval identifier",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The interval title",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The interval description",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Intervals",
        "operationId": "GetIntervals",
        "description": "Get task intervals",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/tasks/v1/priorities": {
      "get": {
        "responses": {
          "200": {
            "description": "List of priorities",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the priority",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the priority",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description given to the priority",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Priorities",
        "description": "Gets task priorities",
        "operationId": "GetPriorities",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/tasks/v1/taskgroups": {
      "get": {
        "responses": {
          "200": {
            "description": "List of task groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identifier of the task group",
                    "title": "ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the task group",
                    "title": "Title"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the task group",
                    "title": "Description"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Task Groups",
        "description": "Get all task groups",
        "operationId": "GetTaskGroups",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/public/Directory/v1/SecondaryEmploymentStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Secondary Employment Status",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Secondary Employment Status Identifier",
                    "title": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the secondary employment status",
                    "title": "Name"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Secondary Employment Status",
        "operationId": "GetSecondaryEmploymentStatus",
        "description": "Get Secondary Employment Status",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "undefined": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://security.staffcircle.net/connect/authorize",
      "tokenUrl": "https://security.staffcircle.net/connect/token",
      "scopes": {
        "offline_access": "offline_access",
        "openid": "openid",
        "profile": "profile",
        "scp.public.directory.api": "scp.public.directory.api",
        "scp.public.performance.api": "scp.public.performance.api",
        "scp.public.absence.api": "scp.public.absence.api",
        "scp.public.security.api": "scp.public.security.api",
        "scp.public.comms.api": "scp.public.comms.api",
        "scp.public.tasks.api": "scp.public.tasks.api"
      }
    }
  },
  "security": [
    {
      "undefined": [
        "offline_access",
        "openid",
        "profile",
        "scp.public.directory.api",
        "scp.public.performance.api",
        "scp.public.absence.api",
        "scp.public.security.api",
        "scp.public.comms.api",
        "scp.public.tasks.api"
      ]
    }
  ],
  "tags": []
}