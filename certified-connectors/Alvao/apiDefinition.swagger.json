{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1.2",
    "title" : "ALVAO",
    "description" : "Alvao enables you automate actions in Alvao Service Desk and Asset Management and integrate with other applications.",
    "contact" : {
      "name" : "ALVAO Support",
      "url" : "https://www.alvao.com/en/support-and-services",
      "email" : "support@alvao.com"
    }
  },
  "x-ms-connector-metadata" : [ {
    "propertyName" : "Website",
    "propertyValue" : "https://www.alvao.com"
  }, {
    "propertyName" : "Privacy policy",
    "propertyValue" : "https://www.alvao.com/en/privacystatement"
  }, {
    "propertyName" : "Categories",
    "propertyValue" : "Collaboration;IT Operations"
  } ],
  "host" : "contoso.onalvao.com",
  "basePath" : "/AlvaoRestApi",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/v1/tickets/{ticketId}/log" : {
      "post" : {
        "summary" : "Create record in ticket log",
        "description" : "Creates record in ticket log.",
        "operationId" : "CreateRecordInTicketLog",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "subject" : {
                "type" : "string",
                "x-ms-summary" : "Subject",
                "description" : "Subject of the record.",
                "title" : "Subject"
              },
              "contentHtml" : {
                "type" : "string",
                "x-ms-summary" : "Html Content",
                "description" : "Content of the record in Html."
              },
              "contentPlain" : {
                "type" : "string",
                "x-ms-summary" : "Plain Text Content",
                "description" : "Content of the record in plain text."
              },
              "kind" : {
                "type" : "string",
                "x-ms-summary" : "Kind",
                "description" : "Kind of the record.",
                "title" : "Kind",
                "enum" : [ "Email", "PhoneCall", "Meeting", "Letter", "VoiceMessage", "PaperNote", "Form", "Note", "Process", "Other", "Notification" ]
              },
              "from" : {
                "type" : "string",
                "x-ms-summary" : "From Name",
                "description" : "Name of the sender."
              },
              "emailFrom" : {
                "type" : "string",
                "x-ms-summary" : "From E-mail",
                "description" : "E-mail of the sender."
              },
              "emailTo" : {
                "type" : "string",
                "x-ms-summary" : "To",
                "description" : "Recipients of the message separated by a semicolon."
              },
              "emailCc" : {
                "type" : "string",
                "x-ms-summary" : "Copy",
                "description" : "Recipients of the message separated by a semicolon."
              },
              "fromPersonId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "From Person ID",
                "description" : "Person ID of the author (tPerson.iPersonId)."
              },
              "toPersonId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "To Person ID",
                "description" : "Person ID of the receiver (tPerson.iPersonId)."
              },
              "created" : {
                "type" : "string",
                "x-ms-summary" : "Created Date",
                "description" : "Date and time in which should be the record created. Leave empty for current."
              },
              "showToRequester" : {
                "type" : "boolean",
                "x-ms-summary" : "Show To Requester",
                "description" : "Decide whether the requester should see the record.",
                "default" : false
              },
              "attachments" : {
                "type" : "array",
                "x-ms-summary" : "Attachments",
                "description" : "Attachments of the record.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "$ref" : "#/definitions/Attachment"
                }
              }
            },
            "required" : [ "subject", "kind" ]
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Record created",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int32",
                  "x-ms-summary" : "Record ID",
                  "description" : "Log record ID (tAct.iActId)."
                },
                "subject" : {
                  "type" : "string",
                  "x-ms-summary" : "Subject",
                  "description" : "Log record subject."
                },
                "contentHtml" : {
                  "type" : "string",
                  "x-ms-summary" : "Html Content",
                  "description" : "Log record content in HTML."
                },
                "contentPlain" : {
                  "type" : "string",
                  "x-ms-summary" : "Plain Text Content",
                  "description" : "Log record content in plain text."
                },
                "created" : {
                  "type" : "string",
                  "x-ms-summary" : "Created Date",
                  "description" : "Log record created date."
                },
                "kind" : {
                  "type" : "string",
                  "x-ms-summary" : "Kind",
                  "description" : "Log record kind."
                },
                "from" : {
                  "type" : "string",
                  "x-ms-summary" : "From Name",
                  "description" : "Log record author name."
                },
                "emailFrom" : {
                  "type" : "string",
                  "x-ms-summary" : "From E-mail",
                  "description" : "Log record author e-mail."
                },
                "emailTo" : {
                  "type" : "string",
                  "x-ms-summary" : "To",
                  "description" : "Log record receivers e-mails."
                },
                "emailCc" : {
                  "type" : "string",
                  "x-ms-summary" : "Copy",
                  "description" : "Log record receivers e-mails."
                },
                "fromPersonId" : {
                  "type" : "integer",
                  "format" : "int32",
                  "x-ms-summary" : "From Person ID",
                  "description" : "Log record sender ID (tPerson.iPersonId)."
                },
                "toPersonId" : {
                  "type" : "integer",
                  "format" : "int32",
                  "x-ms-summary" : "To Person ID",
                  "description" : "Log record receiver ID (tPerson.iPersonId)."
                },
                "messageId" : {
                  "type" : "string",
                  "x-ms-summary" : "Message ID",
                  "description" : "Log record message ID."
                },
                "attachments" : {
                  "type" : "array",
                  "x-ms-summary" : "Attachments",
                  "description" : "Log record attachments.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "x-ms-summary" : "Attachment Name",
                        "description" : "Attachment name."
                      },
                      "id" : {
                        "type" : "integer",
                        "x-ms-summary" : "Attachment ID",
                        "description" : "Attachment ID (tDocument.iDocumentId)."
                      },
                      "link" : {
                        "type" : "string",
                        "x-ms-summary" : "Attachment Link",
                        "description" : "Link to the attachment."
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        }
      }
    },
    "/v1/tickets/{ticketId}" : {
      "get" : {
        "summary" : "Get ticket",
        "description" : "Returns ticket properties.",
        "operationId" : "GetTicket",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "$expand",
          "in" : "query",
          "type" : "string",
          "description" : "Include linked resources with retrieved resources with <a href=\"http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752359\" target=\"_blank\">OData v4.0 $expand</a>",
          "default" : "objects",
          "x-ms-visibility" : "internal",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SD.Ticket"
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        },
        "x-ms-visibility" : "important"
      },
      "patch" : {
        "summary" : "Update ticket",
        "description" : "Updates ticket columns. Set only properties to change. To change SLA set either slaId or slaName. To change requester set either Requester ID only or all data in requester (unregistered user).",
        "operationId" : "UpdateTicket",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "x-ms-summary" : "Name",
                "description" : "Ticket name."
              },
              "priority" : {
                "type" : "string",
                "x-ms-summary" : "Priority",
                "description" : "Ticket priority.",
                "enum" : [ "Planning", "Low", "Medium", "High", "Critical" ]
              },
              "impact" : {
                "type" : "string",
                "x-ms-summary" : "Impact",
                "description" : "Ticket impact.",
                "enum" : [ "Low", "Medium", "High" ]
              },
              "urgency" : {
                "type" : "string",
                "x-ms-summary" : "Urgency",
                "description" : "Ticket urgency.",
                "enum" : [ "Low", "Medium", "High" ]
              },
              "slaId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "SLA ID",
                "description" : "Ticket SLA ID (tSla.iSlaId)."
              },
              "slaName" : {
                "type" : "string",
                "x-ms-summary" : "SLA Name",
                "description" : "Ticket SLA name."
              },
              "deviceNumber" : {
                "type" : "string",
                "x-ms-summary" : "Device Number",
                "description" : "Ticket device number."
              },
              "relatedOrganization" : {
                "type" : "string",
                "x-ms-summary" : "Related Organization",
                "description" : "Ticket related organization name."
              },
              "internalTargetDate" : {
                "type" : "string",
                "format" : "date-time",
                "x-ms-summary" : "Internal Target Date",
                "description" : "Ticket internal target date."
              },
              "internalTarget" : {
                "type" : "string",
                "x-ms-summary" : "Internal Target",
                "description" : "Ticket internal target."
              },
              "requester" : {
                "type" : "object",
                "x-ms-summary" : "Requester",
                "description" : "Requester of the ticket.",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "x-ms-summary" : "Name",
                    "description" : "Requester name."
                  },
                  "email" : {
                    "type" : "string",
                    "x-ms-summary" : "E-mail",
                    "description" : "Requester email."
                  },
                  "email2" : {
                    "type" : "string",
                    "x-ms-summary" : "E-mail 2",
                    "description" : "Requester e-mail 2."
                  },
                  "phone" : {
                    "type" : "string",
                    "x-ms-summary" : "Phone",
                    "description" : "Requester phone."
                  },
                  "phone2" : {
                    "type" : "string",
                    "x-ms-summary" : "Phone 2",
                    "description" : "Requester phone 2."
                  },
                  "mobilePhone" : {
                    "type" : "string",
                    "x-ms-summary" : "Mobile phone",
                    "description" : "Requester mobile phone."
                  },
                  "department" : {
                    "type" : "string",
                    "x-ms-summary" : "Department",
                    "description" : "Requester department."
                  },
                  "office" : {
                    "type" : "string",
                    "x-ms-summary" : "Office",
                    "description" : "Requester office."
                  },
                  "workPosition" : {
                    "type" : "string",
                    "x-ms-summary" : "Work Position",
                    "description" : "Requester work position."
                  },
                  "organization" : {
                    "type" : "string",
                    "x-ms-summary" : "Organization",
                    "description" : "Requester organization."
                  },
                  "otherContacts" : {
                    "type" : "string",
                    "x-ms-summary" : "Other contacts",
                    "description" : "Requester's other contacts."
                  }
                }
              },
              "customItems" : {
                "type" : "object",
                "x-ms-summary" : "Custom Items",
                "description" : "Ticket custom items (tHdTicketCust).",
                "x-ms-visibility" : "advanced"
              }
            }
          },
          "required" : true
        } ],
        "responses" : {
          "204" : {
            "$ref" : "#/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        },
        "x-ms-visibility" : "important"
      }
    },
    "/v1/tickets/{ticketId}/solver" : {
      "put" : {
        "summary" : "Assign ticket to solver or solver team",
        "description" : "Assigns ticket to solver or solver team.",
        "operationId" : "AssignTicketToSolverOrSolverTeam",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "solverId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Solver ID",
                "description" : "New solver ID (tPerson.iPersonId)."
              },
              "solverTeamId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Solver Team ID",
                "description" : "New solver team ID (tRole.iPersonId)."
              },
              "messageForSolverHtml" : {
                "type" : "string",
                "x-ms-summary" : "Message",
                "description" : "Message for solver and/or for solver team in HTML."
              },
              "attachments" : {
                "type" : "array",
                "x-ms-summary" : "Attachments",
                "description" : "Attachments of the message.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "$ref" : "#/definitions/Attachment"
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Ticket assigned",
            "schema" : {
              "type" : "string"
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        }
      }
    },
    "/v1/tickets/{ticketId}/state" : {
      "put" : {
        "summary" : "Change ticket state",
        "description" : "Changes ticket state. It can be used also for resolving or reopening the ticket. Either State ID or State Name is required.",
        "operationId" : "ChangeTicketState",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "stateId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "State ID",
                "description" : "New state ID (TicketState.id)."
              },
              "stateName" : {
                "type" : "string",
                "x-ms-summary" : "State Name",
                "description" : "New state name."
              },
              "commentHtml" : {
                "type" : "string",
                "x-ms-summary" : "Comment",
                "description" : "Comment in HTML."
              },
              "commentForApprovers" : {
                "type" : "string",
                "x-ms-summary" : "Comment For Approvers",
                "description" : "Comment for approvers in HTML."
              },
              "commentForRequesters" : {
                "type" : "string",
                "x-ms-summary" : "Comment For requesters",
                "description" : "Comment for requesters in HTML."
              },
              "attachments" : {
                "type" : "array",
                "x-ms-summary" : "Attachments",
                "description" : "Attachments of the message.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "$ref" : "#/definitions/Attachment"
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "State changed",
            "schema" : {
              "type" : "string"
            }
          },
          "204" : {
            "$ref" : "#/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        }
      }
    },
    "/v1/tickets/{ticketId}/service" : {
      "put" : {
        "summary" : "Move ticket to another service",
        "description" : "Moves ticket to another service. Either Service ID or Service Name is required.",
        "operationId" : "MoveTicketToAnotherService",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "$ref" : "#/parameters/ticketId"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "serviceId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Service ID",
                "description" : "New service ID (tHdSection.iHdSectionId)."
              },
              "serviceName" : {
                "type" : "string",
                "x-ms-summary" : "Service Name",
                "description" : "New service name."
              },
              "newSolverId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Solver ID",
                "description" : "New solver ID (tPerson.iPersonId)."
              },
              "newSolverTeamId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Solver Team ID",
                "description" : "New solver team ID (tRole.iPersonId)."
              },
              "commentHtml" : {
                "type" : "string",
                "x-ms-summary" : "Comment",
                "description" : "Comment in HTML."
              },
              "attachments" : {
                "type" : "array",
                "x-ms-summary" : "Attachments",
                "description" : "Attachments of the comment.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "$ref" : "#/definitions/Attachment"
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Ticket moved",
            "schema" : {
              "type" : "string"
            }
          },
          "204" : {
            "$ref" : "#/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        }
      }
    },
    "/v1/tickets" : {
      "post" : {
        "summary" : "Create ticket",
        "description" : "Creates new ticket.",
        "operationId" : "CreateTicket",
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "serviceId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Service ID",
                "description" : "Ticket service ID (tHdSection.iHdSectionId)."
              },
              "name" : {
                "type" : "string",
                "x-ms-summary" : "Name",
                "description" : "Ticket name."
              },
              "descriptionHtml" : {
                "type" : "string",
                "x-ms-summary" : "Description",
                "description" : "Ticket description in HTML."
              },
              "slaId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "SLA ID",
                "description" : "Ticket SLA ID (tSla.iSlaId)."
              },
              "priority" : {
                "type" : "string",
                "x-ms-summary" : "Priority",
                "description" : "Ticket priority.",
                "enum" : [ "Planning", "Low", "Medium", "High", "Critical" ],
                "default" : "Medium"
              },
              "impact" : {
                "type" : "string",
                "x-ms-summary" : "Impact",
                "description" : "Ticket impact.",
                "enum" : [ "Low", "Medium", "High" ],
                "default" : "Medium"
              },
              "urgency" : {
                "type" : "string",
                "x-ms-summary" : "Urgency",
                "description" : "Ticket urgency.",
                "enum" : [ "Low", "Medium", "High" ],
                "default" : "Medium"
              },
              "deviceNumber" : {
                "type" : "string",
                "x-ms-summary" : "Device Number",
                "description" : "Ticket device number."
              },
              "relatedOrganization" : {
                "type" : "string",
                "x-ms-summary" : "Related Organization",
                "description" : "Ticket related organization name."
              },
              "requestedForPersonId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Requested For Person ID",
                "description" : "Requested for person ID (tPerson.iPersonId)."
              },
              "requester" : {
                "type" : "object",
                "x-ms-summary" : "Requester",
                "description" : "Ticket requester.",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "format" : "int32",
                    "x-ms-summary" : "ID",
                    "description" : "Requester ID (tPerson.iPersonId)."
                  },
                  "name" : {
                    "type" : "string",
                    "x-ms-summary" : "Name",
                    "description" : "Requester name."
                  },
                  "email" : {
                    "type" : "string",
                    "x-ms-summary" : "E-mail",
                    "description" : "Requester e-mail."
                  },
                  "email2" : {
                    "type" : "string",
                    "x-ms-summary" : "E-mail 2",
                    "description" : "Requester e-mail 2."
                  },
                  "phone" : {
                    "type" : "string",
                    "x-ms-summary" : "Phone",
                    "description" : "Requester phone."
                  },
                  "phone2" : {
                    "type" : "string",
                    "x-ms-summary" : "Phone 2",
                    "description" : "Requester phone 2."
                  },
                  "mobilePhone" : {
                    "type" : "string",
                    "x-ms-summary" : "Mobile Phone",
                    "description" : "Requester mobile phone."
                  },
                  "department" : {
                    "type" : "string",
                    "x-ms-summary" : "Department",
                    "description" : "Requester department."
                  },
                  "office" : {
                    "type" : "string",
                    "x-ms-summary" : "Office",
                    "description" : "Requester office."
                  },
                  "workPosition" : {
                    "type" : "string",
                    "x-ms-summary" : "Work Position",
                    "description" : "Requester work position."
                  },
                  "organization" : {
                    "type" : "string",
                    "x-ms-summary" : "Organization",
                    "description" : "Requester organization."
                  },
                  "otherContacts" : {
                    "type" : "string",
                    "x-ms-summary" : "Other Contacts",
                    "description" : "Requester other contacts."
                  }
                }
              },
              "objects" : {
                "type" : "array",
                "x-ms-summary" : "Objects",
                "description" : "Links to objects.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "type" : "integer",
                  "format" : "int32",
                  "x-ms-summary" : "Object ID",
                  "description" : "Object ID (tblNode.intNodeId)."
                }
              },
              "attachments" : {
                "type" : "array",
                "x-ms-summary" : "Attachments",
                "description" : "Attachments of the message.",
                "x-ms-visibility" : "advanced",
                "items" : {
                  "$ref" : "#/definitions/Attachment"
                }
              },
              "customItems" : {
                "type" : "object",
                "x-ms-summary" : "Custom Items",
                "description" : "Ticket custom items (tHdTicketCust).",
                "x-ms-visibility" : "advanced"
              }
            },
            "required" : [ "name", "serviceId" ]
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Ticket created",
            "schema" : {
              "$ref" : "#/definitions/SD.Ticket"
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        },
        "x-ms-visibility" : "important"
      }
    },
    "/v1/objects" : {
      "get" : {
        "summary" : "Get objects",
        "description" : "Returns objects with its properties according to OData parameters.",
        "operationId" : "GetObjects",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "$ref" : "#/parameters/odata.top"
        }, {
          "$ref" : "#/parameters/odata.search"
        }, {
          "$ref" : "#/parameters/odata.filter"
        }, {
          "$ref" : "#/parameters/odata.orderBy"
        }, {
          "name" : "$expand",
          "in" : "query",
          "type" : "string",
          "default" : "properties",
          "x-ms-visibility" : "internal",
          "required" : true,
          "description" : "To include object properties in response"
        }, {
          "name" : "$select",
          "in" : "query",
          "type" : "string",
          "x-ms-visibility" : "internal",
          "description" : "To select only specified columns"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AM.ObjectsExpandedApiResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create object",
        "description" : "Creates a new object from specified template under specified object.",
        "operationId" : "CreateObject",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "description" : "Parameters for creating an object.",
            "properties" : {
              "templateObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Template",
                "description" : "Select the object template or enter its ID (tblNode.intNodeId).",
                "title" : "Template",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              },
              "parentObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Parent Object",
                "description" : "Select the parent object or enter its ID (tblNode.intNodeId).",
                "title" : "Parent Object",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              }
            },
            "required" : [ "templateObjectId" ]
          },
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "New object URL"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AM.Object"
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        },
        "x-ms-visibility" : "important"
      }
    },
    "/v1/objects/{objectId}" : {
      "get" : {
        "summary" : "Get object",
        "description" : "Returns object with its properties.",
        "operationId" : "GetObject",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "$ref" : "#/parameters/objectId"
        }, {
          "name" : "$expand",
          "in" : "query",
          "type" : "string",
          "default" : "properties",
          "x-ms-visibility" : "internal",
          "required" : true,
          "description" : "To include object properties in response."
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AM.ObjectExpanded"
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        },
        "x-ms-visibility" : "important"
      },
      "patch" : {
        "summary" : "Move object",
        "description" : "Moves an object to a specified destination.",
        "operationId" : "MoveObject",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "$ref" : "#/parameters/objectId"
        }, {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "parentObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Destination Object",
                "description" : "Select the destination object or enter its ID (tblNode.intNodeId).",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                },
                "title" : "Destination Object"
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "$ref" : "#/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/v1/objects/{objectId}/properties" : {
      "post" : {
        "summary" : "Update object properties",
        "description" : "Updates object properties.",
        "operationId" : "UpdateObjectProperties",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "$ref" : "#/parameters/objectId"
        }, {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "x-ms-summary" : "Property",
                "description" : "Attachments of the record.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "x-ms-summary" : "Name",
                      "description" : "Select the property of the object.",
                      "title" : "Name",
                      "x-ms-dynamic-values" : {
                        "operationId" : "SuggestObjectPropertiesNames",
                        "value-path" : "name",
                        "value-title" : "name"
                      }
                    },
                    "value" : {
                      "type" : "string",
                      "x-ms-summary" : "Value",
                      "description" : "Specify the value of the property."
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "$ref" : "#/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        },
        "x-ms-visibility" : "important"
      }
    },
    "/v1/objects/importCsv" : {
      "post" : {
        "summary" : "Import objects from CSV",
        "description" : "Imports objects provided in CSV format. Similar functionality to ImportUtil utility.",
        "operationId" : "ImportObjectsFromCsv",
        "tags" : [ "Objects" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "$ref" : "#/definitions/AM.ImportCsv"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "CSV imported",
            "schema" : {
              "$ref" : "#/definitions/AM.ImportCsvResponse"
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/tickettransitionstostatus" : {
      "x-ms-notification-content" : {
        "description" : "Ticket",
        "schema" : {
          "$ref" : "#/definitions/Webhook.UpdatedTicket"
        }
      },
      "post" : {
        "summary" : "When a ticket transitions to a status",
        "description" : "This operation is triggered when a ticket transitions to a certain status.",
        "operationId" : "TicketTransitionsToStatus",
        "x-ms-visibility" : "important",
        "x-ms-trigger" : "single",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "webhookUrl" : {
                "type" : "string",
                "description" : "Webhook URL.",
                "x-ms-notification-url" : true,
                "x-ms-visibility" : "internal",
                "title" : "Webhook URL"
              },
              "process" : {
                "type" : "string",
                "x-ms-summary" : "Process name",
                "description" : "Enter the name of the process for which you want to trigger this flow.",
                "title" : "Process"
              },
              "status" : {
                "type" : "string",
                "x-ms-summary" : "Ticket status name",
                "description" : "Enter the name of the ticket status. Ticket transition to this status will trigger this flow.",
                "title" : "Ticket status"
              },
              "service" : {
                "type" : "string",
                "x-ms-summary" : "Service name",
                "description" : "Enter the name of the service for which you want to trigger this flow.",
                "title" : "Service"
              }
            },
            "required" : [ "webhookUrl", "process", "status" ]
          }
        } ],
        "responses" : {
          "201" : {
            "$ref" : "#/responses/WebhookCreated"
          }
        }
      }
    },
    "/webhooks/{webhookId}" : {
      "delete" : {
        "description" : "This action will stop the trigger that you previously registered.",
        "summary" : "Stop registered trigger",
        "operationId" : "DeleteWebhook",
        "x-ms-visibility" : "internal",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "ID of the webhook to delete.",
          "required" : true,
          "x-ms-visibility" : "important",
          "type" : "string",
          "x-ms-url-encoding" : "single"
        } ],
        "responses" : {
          "204" : {
            "description" : "Response to successfully deleting a webhook"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/responses/NotFound"
          }
        }
      }
    },
    "/webhooks/ticketfieldchanged" : {
      "x-ms-notification-content" : {
        "description" : "Ticket",
        "schema" : {
          "$ref" : "#/definitions/Webhook.UpdatedTicket"
        }
      },
      "post" : {
        "summary" : "When a ticket field value is changed",
        "description" : "This operation is triggered when a certain ticket field value is changed.",
        "operationId" : "TicketFieldChanged",
        "x-ms-visibility" : "important",
        "x-ms-trigger" : "single",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "webhookUrl" : {
                "type" : "string",
                "description" : "Webhook URL.",
                "x-ms-notification-url" : true,
                "x-ms-visibility" : "internal",
                "title" : "Webhook URL"
              },
              "fieldId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Field Name",
                "description" : "Select a ticket field.",
                "title" : "Field",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetTicketFields",
                  "value-path" : "id",
                  "value-title" : "name"
                }
              },
              "process" : {
                "type" : "string",
                "x-ms-summary" : "Process Name",
                "description" : "Enter the name of the process for which you want to trigger this flow.",
                "title" : "Process"
              },
              "service" : {
                "type" : "string",
                "x-ms-summary" : "Service Name",
                "description" : "Enter the name of the service for which you want to trigger this flow.",
                "title" : "Service"
              }
            },
            "required" : [ "webhookUrl", "fieldId" ]
          }
        } ],
        "responses" : {
          "201" : {
            "$ref" : "#/responses/WebhookCreated"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/objectcreated" : {
      "x-ms-notification-content" : {
        "description" : "Object",
        "schema" : {
          "type" : "object",
          "properties" : {
            "objectId" : {
              "type" : "integer",
              "format" : "int32",
              "x-ms-summary" : "Object ID",
              "description" : "Object ID (tblNode.intNodeId)."
            }
          }
        }
      },
      "post" : {
        "summary" : "When an object is created",
        "description" : "This operation is triggered when an object of a certain kind is created.",
        "operationId" : "ObjectCreated",
        "x-ms-visibility" : "important",
        "x-ms-trigger" : "single",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "webhookUrl" : {
                "type" : "string",
                "description" : "Webhook URL.",
                "x-ms-notification-url" : true,
                "x-ms-visibility" : "internal",
                "title" : "Webhook URL"
              },
              "kindId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Kind",
                "description" : "Select the kind of the object for which you want to trigger this flow.",
                "title" : "Kind",
                "x-ms-dynamic-values" : {
                  "operationId" : "SuggestObjectTypes",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "name",
                  "parameters" : {
                    "$top" : 99999
                  }
                }
              },
              "parentObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Parent Object",
                "description" : "Select the parent object for whose subtree you want to trigger this flow.",
                "title" : "Parent Object",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              }
            },
            "required" : [ "webhookUrl" ]
          }
        } ],
        "responses" : {
          "201" : {
            "$ref" : "#/responses/WebhookCreated"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/objectmoved" : {
      "x-ms-notification-content" : {
        "description" : "Object",
        "schema" : {
          "type" : "object",
          "properties" : {
            "objectId" : {
              "type" : "integer",
              "format" : "int32",
              "x-ms-summary" : "Object ID",
              "description" : "Object ID (tblNode.intNodeId)."
            },
            "oldParentObjectId" : {
              "type" : "integer",
              "format" : "int32",
              "x-ms-summary" : "Old Parent Object ID",
              "description" : "Old Parent Object ID (tblNode.intNodeId)."
            }
          }
        }
      },
      "post" : {
        "summary" : "When an object is moved",
        "description" : "This operation is triggered when an object of a certain kind is moved to a different position in the object tree.",
        "operationId" : "ObjectMoved",
        "x-ms-visibility" : "important",
        "x-ms-trigger" : "single",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "webhookUrl" : {
                "type" : "string",
                "description" : "Webhook URL.",
                "x-ms-notification-url" : true,
                "x-ms-visibility" : "internal",
                "title" : "Webhook URL"
              },
              "kindId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Kind",
                "description" : "Select the kind of the object for which you want to trigger this flow.",
                "title" : "Kind",
                "x-ms-dynamic-values" : {
                  "operationId" : "SuggestObjectTypes",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "name",
                  "parameters" : {
                    "$top" : 99999
                  }
                }
              },
              "fromObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Moved From",
                "description" : "Select the source object for whose subtree you want to trigger this flow.",
                "title" : "Moved From",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              },
              "toObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Moved To",
                "description" : "Select the destination object for whose subtree you want to trigger this flow.",
                "title" : "Moved To",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              }
            },
            "required" : [ "webhookUrl" ]
          }
        } ],
        "responses" : {
          "201" : {
            "$ref" : "#/responses/WebhookCreated"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/objectpropertychanged" : {
      "x-ms-notification-content" : {
        "description" : "Object",
        "schema" : {
          "type" : "object",
          "properties" : {
            "objectId" : {
              "type" : "integer",
              "format" : "int32",
              "x-ms-summary" : "Object ID",
              "description" : "Object ID (tblNode.intNodeId)."
            },
            "propertyId" : {
              "type" : "integer",
              "format" : "int32",
              "x-ms-summary" : "Property ID",
              "description" : "Changed Property ID (tblProperty.intPropertyId)."
            }
          }
        }
      },
      "post" : {
        "summary" : "When a value of an object property is changed",
        "description" : "This operation is triggered when a value of a certain object property is changed.",
        "operationId" : "ObjectPropertyChanged",
        "x-ms-visibility" : "important",
        "x-ms-trigger" : "single",
        "tags" : [ "Webhooks" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "webhookUrl" : {
                "type" : "string",
                "description" : "Webhook URL.",
                "x-ms-notification-url" : true,
                "x-ms-visibility" : "internal",
                "title" : "Webhook URL"
              },
              "propertyKindId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Property",
                "description" : "Select the property of the object for which you want to trigger this flow.",
                "title" : "Property",
                "x-ms-dynamic-values" : {
                  "operationId" : "SuggestObjectPropertiesNames",
                  "value-path" : "id",
                  "value-title" : "name"
                }
              },
              "newValue" : {
                "type" : "string",
                "x-ms-summary" : "New Value",
                "description" : "Enter the new value of the property for which you want to trigger this flow. E.g. PC123, 1.45, 14. 4. 2024.",
                "title" : "New Value"
              },
              "kindId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Object Kind",
                "description" : "Select the kind of the object for which you want to trigger this flow.",
                "title" : "Object Kind",
                "x-ms-dynamic-values" : {
                  "operationId" : "SuggestObjectTypes",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "name",
                  "parameters" : {
                    "$top" : 99999
                  }
                }
              },
              "parentObjectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Parent Object",
                "description" : "Select the parent object for whose subtree you want to trigger this flow.",
                "title" : "Parent Object",
                "x-ms-dynamic-values" : {
                  "operationId" : "GetObjects",
                  "value-path" : "id",
                  "value-collection" : "value",
                  "value-title" : "fullName",
                  "parameters" : {
                    "$top" : 99999,
                    "$expand" : "properties",
                    "$select" : "id, fullName"
                  }
                }
              }
            },
            "required" : [ "webhookUrl" ]
          }
        } ],
        "responses" : {
          "201" : {
            "$ref" : "#/responses/WebhookCreated"
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/suggestcolumnsforticket" : {
      "get" : {
        "summary" : "Get all ticket fields",
        "x-ms-visibility" : "internal",
        "operationId" : "GetTicketFields",
        "description" : "Returns all ticket fields.",
        "tags" : [ "Internal" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Common.ColumnBase"
              }
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/webhooks/suggestallobjectproperties" : {
      "get" : {
        "summary" : "Get object properties names",
        "x-ms-visibility" : "internal",
        "operationId" : "SuggestObjectPropertiesNames",
        "description" : "Returns all objects properties names.",
        "tags" : [ "Internal" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AM.PropertyKind"
              }
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/v1/objectTypes" : {
      "get" : {
        "summary" : "Get object kind names",
        "x-ms-visibility" : "internal",
        "operationId" : "SuggestObjectTypes",
        "description" : "Returns all objects kind names.",
        "tags" : [ "Internal" ],
        "parameters" : [ {
          "$ref" : "#/parameters/odata.top"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AM.ObjectTypesResponse"
            }
          },
          "403" : {
            "$ref" : "#/responses/Forbidden"
          }
        }
      }
    },
    "/v1/users" : {
      "get" : {
        "summary" : "Get users",
        "description" : "Returns users and their properties according to OData parameters.",
        "operationId" : "GetUsers",
        "tags" : [ "Users" ],
        "parameters" : [ {
          "$ref" : "#/parameters/odata.top"
        }, {
          "$ref" : "#/parameters/odata.search"
        }, {
          "$ref" : "#/parameters/odata.filter.user"
        }, {
          "$ref" : "#/parameters/odata.orderBy"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Common.UsersApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "SD.Ticket" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "ID",
          "description" : "Ticket ID (tHdTicket.iHdTicketId)."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "Ticket name."
        },
        "messageTag" : {
          "type" : "string",
          "x-ms-summary" : "Message Tag",
          "description" : "Ticket message tag."
        },
        "slaId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "SLA ID",
          "description" : "SLA ID (tSla.iSlaId)."
        },
        "slaName" : {
          "type" : "string",
          "x-ms-summary" : "SLA Name",
          "description" : "SLA name."
        },
        "priority" : {
          "type" : "string",
          "x-ms-summary" : "Priority",
          "description" : "Ticket priority."
        },
        "impact" : {
          "type" : "string",
          "x-ms-summary" : "Impact",
          "description" : "Ticket impact."
        },
        "urgency" : {
          "type" : "string",
          "x-ms-summary" : "Urgency",
          "description" : "Ticket urgency."
        },
        "deviceNumber" : {
          "type" : "string",
          "x-ms-summary" : "Device Number",
          "description" : "Ticket device number."
        },
        "relatedOrganization" : {
          "type" : "string",
          "x-ms-summary" : "Related Organization",
          "description" : "Ticket related organization name."
        },
        "internalTargetDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Internal Target Date",
          "description" : "Ticket internal target date."
        },
        "internalTarget" : {
          "type" : "string",
          "x-ms-summary" : "Internal Target",
          "description" : "Ticket internal target."
        },
        "requesterId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Requester ID",
          "description" : "Requester ID (tPerson.iPersonId)."
        },
        "requesterName" : {
          "type" : "string",
          "x-ms-summary" : "Requester Name",
          "description" : "Requester name."
        },
        "requestedForId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Requested For ID",
          "description" : "Requested for ID (tPerson.iPersonId)."
        },
        "requestedForName" : {
          "type" : "string",
          "x-ms-summary" : "Requested For Name",
          "description" : "Requested for name."
        },
        "solverId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Solver ID",
          "description" : "Ticket solver ID (tPerson.iPersonId)."
        },
        "solverName" : {
          "type" : "string",
          "x-ms-summary" : "Solver Name",
          "description" : "Ticket solver name."
        },
        "solverTeamId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Solver Team ID",
          "description" : "Ticket solver team ID (tRole.iRoleId)."
        },
        "solverTeamName" : {
          "type" : "string",
          "x-ms-summary" : "Solver Team Name",
          "description" : "Ticket solver team name."
        },
        "serviceId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Service ID",
          "description" : "Ticket service id (tHdSection.iHdSectionId)."
        },
        "serviceName" : {
          "type" : "string",
          "x-ms-summary" : "Service Name",
          "description" : "Ticket service name."
        },
        "processName" : {
          "type" : "string",
          "x-ms-summary" : "Process Name",
          "description" : "Service process name."
        },
        "stateId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Status ID",
          "description" : "Ticket status ID (TicketState.id)."
        },
        "stateName" : {
          "type" : "string",
          "x-ms-summary" : "Status Name",
          "description" : "Ticket status name."
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Created Date",
          "description" : "Date of ticket creation."
        },
        "resolvedDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Resolved Date",
          "description" : "Date of ticket resolution."
        },
        "closedDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Closed Date",
          "description" : "Date of ticket closing."
        },
        "initialActId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Initial Act ID",
          "description" : "Initial act ID (tAct.iActId)."
        },
        "removedDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Removed Date",
          "description" : "Date of ticket removing."
        },
        "inApproval" : {
          "type" : "boolean",
          "x-ms-summary" : "In Approval",
          "description" : "Whether the ticket is in approval process."
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Due Date",
          "description" : "Due date of the ticket."
        },
        "objects" : {
          "type" : "array",
          "x-ms-summary" : "Objects",
          "description" : "Links to objects.",
          "items" : {
            "type" : "object",
            "x-ms-summary" : "Object",
            "description" : "Link to object.",
            "properties" : {
              "objectId" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "ID",
                "description" : "Object ID (tblNode.intNodeId)."
              }
            }
          }
        },
        "customItems" : {
          "type" : "object",
          "x-ms-summary" : "Custom Items",
          "description" : "Ticket custom items (tHdTicketCust)."
        }
      }
    },
    "Attachment" : {
      "type" : "object",
      "x-ms-visibility" : "advanced",
      "properties" : {
        "contentBytes" : {
          "type" : "string",
          "x-ms-summary" : "Content Bytes",
          "description" : "Content encoded in Base64."
        },
        "contentType" : {
          "type" : "string",
          "x-ms-summary" : "Content Type",
          "description" : "Content type, e.g. image/png."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Content Name",
          "description" : "Content name."
        }
      }
    },
    "Webhook.UpdatedTicket" : {
      "type" : "object",
      "properties" : {
        "requestId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Ticket ID",
          "description" : "ID of the ticket (tHdTicket.iHdTicketId)."
        },
        "personId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Person ID",
          "description" : "ID of the person who made the change (tPerson.iPersonId)."
        }
      }
    },
    "Webhook.CreatedResponse" : {
      "type" : "object",
      "description" : "Response on webhook creation.",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "ID",
          "description" : "Webhook ID."
        }
      }
    },
    "Common.ColumnBase" : {
      "type" : "object",
      "description" : "Column of an entity.",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Column ID",
          "description" : "ID of the column (tColumn.iColumnId)."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "Name of the column."
        }
      }
    },
    "AM.Object" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "ID",
          "description" : "Object ID (tblNode.intNodeId)."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "Object name."
        },
        "path" : {
          "type" : "string",
          "x-ms-summary" : "Path",
          "description" : "Object path in the tree."
        },
        "fullName" : {
          "type" : "string",
          "x-ms-summary" : "Full Name",
          "description" : "Object name with path in the tree."
        },
        "kindId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Kind ID",
          "description" : "Object kind ID (tblKind.intKindId)."
        },
        "kindName" : {
          "type" : "string",
          "x-ms-summary" : "Kind Name",
          "description" : "Object kind name."
        },
        "hidden" : {
          "type" : "boolean",
          "x-ms-summary" : "Hidden",
          "description" : "Whether the object is hidden."
        },
        "parentObjectId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Parent Object ID",
          "description" : "Parent object ID (tblNode.intNodeId)."
        }
      }
    },
    "AM.ObjectExpanded" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "ID",
          "description" : "Object ID (tblNode.intNodeId)."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "Object name."
        },
        "path" : {
          "type" : "string",
          "x-ms-summary" : "Path",
          "description" : "Object path in the tree."
        },
        "fullName" : {
          "type" : "string",
          "x-ms-summary" : "Full Name",
          "description" : "Object name with path in the tree."
        },
        "kindId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Kind ID",
          "description" : "Object kind ID (tblKind.intKindId)."
        },
        "kindName" : {
          "type" : "string",
          "x-ms-summary" : "Kind Name",
          "description" : "Object kind name."
        },
        "hidden" : {
          "type" : "boolean",
          "x-ms-summary" : "Hidden",
          "description" : "Whether the object is hidden."
        },
        "parentObjectId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Parent Object ID",
          "description" : "Parent object ID (tblNode.intNodeId)."
        },
        "properties" : {
          "type" : "array",
          "x-ms-summary" : "Properties",
          "description" : "Properties of the object.",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "ID",
                "description" : "Property ID (tblProperty.intPropertyId)."
              },
              "name" : {
                "type" : "string",
                "x-ms-summary" : "Name",
                "description" : "Property name."
              },
              "value" : {
                "type" : "string",
                "x-ms-summary" : "Value",
                "description" : "Property value."
              },
              "nameOrder" : {
                "type" : "integer",
                "format" : "int32",
                "x-ms-summary" : "Name Order",
                "description" : "Property name order."
              }
            }
          }
        }
      }
    },
    "AM.ObjectsExpandedApiResponse" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AM.ObjectExpanded"
          }
        }
      }
    },
    "AM.PropertyKind" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Kind ID",
          "description" : "Object property kind ID."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "Object property name."
        }
      }
    },
    "ApiError" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "AM.ObjectType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Kind ID",
          "description" : "Object kind ID."
        },
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Kind Name",
          "description" : "Object kind name."
        },
        "isComputer" : {
          "type" : "boolean",
          "x-ms-summary" : "Is Computer",
          "description" : "Whether the kind is computer."
        }
      }
    },
    "AM.ObjectTypesResponse" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AM.ObjectType"
          }
        }
      }
    },
    "AM.ImportCsv" : {
      "type" : "object",
      "properties" : {
        "contentCsv" : {
          "type" : "string",
          "x-ms-summary" : "CSV",
          "description" : "CSV content to import."
        },
        "objectTypeId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Object Type",
          "description" : "The type of imported objects.",
          "title" : "Object Type",
          "x-ms-dynamic-values" : {
            "operationId" : "SuggestObjectTypes",
            "value-path" : "id",
            "value-collection" : "value",
            "value-title" : "name",
            "parameters" : {
              "$top" : 99999
            }
          }
        },
        "dateTimeFormat" : {
          "type" : "string",
          "x-ms-summary" : "Datetime Format",
          "description" : "Datetime format in text strings (e.g. dd/MM/yyyy)."
        },
        "separator" : {
          "type" : "string",
          "x-ms-summary" : "Separator",
          "description" : "The column separator used in the imported CSV."
        },
        "skipErrors" : {
          "type" : "boolean",
          "x-ms-summary" : "Skip Errors",
          "description" : "If enabled, data is imported even if there is an error in one of the entries."
        },
        "keyFields" : {
          "type" : "string",
          "x-ms-summary" : "Key Properties",
          "description" : "Key fields used to identify and update existing objects (e.g. Serial number, Model)."
        },
        "createUnderObjectId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Parent Object",
          "description" : "Parent object for creating new objects.",
          "title" : "Parent Object",
          "x-ms-dynamic-values" : {
            "operationId" : "GetObjects",
            "value-path" : "id",
            "value-collection" : "value",
            "value-title" : "fullName",
            "parameters" : {
              "$top" : 99999,
              "$expand" : "properties",
              "$select" : "id, fullName",
              "$filter" : "isTemplate eq 0"
            }
          }
        },
        "updateDiscardedObjects" : {
          "type" : "boolean",
          "x-ms-summary" : "Update Discarded Objects",
          "description" : "If enabled, discarded objects are also searched for and updated on import."
        }
      },
      "required" : [ "contentCsv" ]
    },
    "AM.ImportCsvResponse" : {
      "type" : "object",
      "properties" : {
        "recordsTotalCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Total Records Count",
          "description" : "Total count of records in CSV."
        },
        "recordsProcessedCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Processed Records Count",
          "description" : "Count of processed records."
        },
        "recordsSkippedCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Skipped Records Count",
          "description" : "Count of skipped records."
        },
        "recordsFailedCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Failed Records Count",
          "description" : "Count of failed records."
        },
        "objectsCreatedCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Created Objects Count",
          "description" : "Count of created objects."
        },
        "objectsUpdatedCount" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Updated Objects Count",
          "description" : "Count of updated objects."
        },
        "log" : {
          "type" : "string",
          "x-ms-summary" : "Log",
          "description" : "Import log containing detailed information."
        }
      }
    },
    "Common.Person" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "x-ms-summary" : "Name",
          "description" : "User name and surname."
        },
        "email" : {
          "type" : "string",
          "x-ms-summary" : "E-mail",
          "description" : "User e-mail."
        },
        "email2" : {
          "type" : "string",
          "x-ms-summary" : "E-mail 2",
          "description" : "User e-mail 2."
        },
        "phone" : {
          "type" : "string",
          "x-ms-summary" : "Work Phone",
          "description" : "User work phone."
        },
        "phone2" : {
          "type" : "string",
          "x-ms-summary" : "Work Phone 2",
          "description" : "User work phone 2."
        },
        "mobilePhone" : {
          "type" : "string",
          "x-ms-summary" : "Mobile Phone",
          "description" : "User mobile phone."
        },
        "department" : {
          "type" : "string",
          "x-ms-summary" : "Department",
          "description" : "User department."
        },
        "office" : {
          "type" : "string",
          "x-ms-summary" : "Office",
          "description" : "User office."
        },
        "workPosition" : {
          "type" : "string",
          "x-ms-summary" : "Position",
          "description" : "User work position."
        },
        "organization" : {
          "type" : "string",
          "x-ms-summary" : "Organization",
          "description" : "User organization."
        },
        "otherContacts" : {
          "type" : "string",
          "x-ms-summary" : "Other Contacts",
          "description" : "User other contacts."
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true,
          "x-ms-summary" : "User ID",
          "description" : "User ID (tPerson.iPersonId)."
        },
        "sAMAccountName" : {
          "type" : "string",
          "x-ms-summary" : "Username (for older systems)",
          "description" : "User username that supports previous version of Windows."
        },
        "login" : {
          "type" : "string",
          "x-ms-summary" : "Username",
          "description" : "User username."
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "x-ms-summary" : "Created",
          "description" : "User created date."
        },
        "isSystem" : {
          "type" : "boolean",
          "readOnly" : true,
          "x-ms-summary" : "Is System",
          "description" : "Whether user is the Alvao System."
        },
        "isHidden" : {
          "type" : "boolean",
          "x-ms-summary" : "Is Hidden",
          "description" : "Whether user is hidden in menus."
        },
        "isShared" : {
          "type" : "boolean",
          "x-ms-summary" : "Is Shared",
          "description" : "Whether user is a shared account."
        },
        "isDisabled" : {
          "type" : "boolean",
          "x-ms-summary" : "Is Disabled",
          "description" : "Whether user is a disabled account."
        },
        "isGuest" : {
          "type" : "boolean",
          "readOnly" : true,
          "x-ms-summary" : "Is Guest",
          "description" : "Whether user is the Guest user."
        },
        "isApp" : {
          "type" : "boolean",
          "x-ms-summary" : "Is App",
          "description" : "Whether user is an application account."
        },
        "removedDate" : {
          "type" : "string",
          "format" : "date-time",
          "x-ms-summary" : "Removed",
          "description" : "User removed date."
        },
        "managerId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Manager ID",
          "description" : "User manager ID (tPerson.iPersonId)."
        },
        "substituteId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Substitute ID",
          "description" : "User substitute ID (tPerson.iPersonId)."
        },
        "personalNumber" : {
          "type" : "string",
          "x-ms-summary" : "Personal Number",
          "description" : "User personal number."
        },
        "localeId" : {
          "type" : "integer",
          "format" : "int32",
          "x-ms-summary" : "Preferred Language ID",
          "description" : "User preferred language ID."
        },
        "timezone" : {
          "type" : "string",
          "x-ms-summary" : "Time Zone",
          "description" : "User time zone."
        },
        "customItems" : {
          "type" : "object",
          "x-ms-summary" : "Custom Items",
          "description" : "User custom items (tPersonCust).",
          "x-ms-visibility" : "advanced"
        },
        "adGuid" : {
          "type" : "string",
          "x-ms-summary" : "AD GUID",
          "description" : "User AD GUID."
        },
        "firstName" : {
          "type" : "string",
          "x-ms-summary" : "First Name",
          "description" : "User first name."
        },
        "lastName" : {
          "type" : "string",
          "x-ms-summary" : "Last Name",
          "description" : "User last name."
        },
        "sid" : {
          "type" : "string",
          "x-ms-summary" : "SID",
          "description" : "User SID."
        },
        "adPath" : {
          "type" : "string",
          "x-ms-summary" : "AD Path",
          "description" : "User AD path."
        },
        "azureAdObjectId" : {
          "type" : "string",
          "x-ms-summary" : "Azure ID",
          "description" : "User Azure ID"
        }
      }
    },
    "Common.UsersApiResponse" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Common.Person"
          }
        }
      }
    }
  },
  "parameters" : {
    "ticketId" : {
      "name" : "ticketId",
      "in" : "path",
      "type" : "integer",
      "format" : "int32",
      "x-ms-summary" : "Ticket ID",
      "description" : "Specify the ID of the ticket (tHdTicket.iHdTicketId).",
      "required" : true,
      "x-ms-url-encoding" : "single"
    },
    "objectId" : {
      "name" : "objectId",
      "in" : "path",
      "type" : "integer",
      "format" : "int32",
      "x-ms-summary" : "Object",
      "description" : "Select the object or enter its ID (tblNode.intNodeId).",
      "required" : true,
      "x-ms-dynamic-values" : {
        "operationId" : "GetObjects",
        "value-path" : "id",
        "value-collection" : "value",
        "value-title" : "fullName",
        "parameters" : {
          "$top" : 99999,
          "$expand" : "properties",
          "$select" : "id, fullName"
        }
      },
      "x-ms-url-encoding" : "single"
    },
    "odata.top" : {
      "in" : "query",
      "name" : "$top",
      "type" : "integer",
      "x-ms-summary" : "Top",
      "description" : "Specify the number of objects you want to return."
    },
    "odata.search" : {
      "in" : "query",
      "name" : "$search",
      "type" : "string",
      "x-ms-summary" : "Search",
      "description" : "Specify the fulltext search condition. OData $search."
    },
    "odata.filter" : {
      "in" : "query",
      "name" : "$filter",
      "type" : "string",
      "x-ms-summary" : "Filter",
      "description" : "Specify the filter, e.g. Name eq ‘Milk’. OData $filter."
    },
    "odata.filter.user" : {
      "in" : "query",
      "name" : "$filter",
      "type" : "string",
      "x-ms-summary" : "Filter",
      "description" : "Specify the filter, e.g. Email eq ‘james.smith@contoso.com’. OData $filter."
    },
    "odata.orderBy" : {
      "in" : "query",
      "name" : "$orderBy",
      "type" : "string",
      "x-ms-summary" : "Order  By",
      "description" : "Specify the order. OData $orderBy."
    }
  },
  "responses" : {
    "BadRequest" : {
      "description" : "Bad request",
      "schema" : {
        "$ref" : "#/definitions/ApiError"
      }
    },
    "Forbidden" : {
      "description" : "Forbidden, eg. missing permissions.",
      "schema" : {
        "$ref" : "#/definitions/ApiError"
      }
    },
    "NotFound" : {
      "description" : "Resource not found"
    },
    "NoContent" : {
      "description" : "No content"
    },
    "ServerError" : {
      "description" : "Error on the REST API endpoint."
    },
    "WebhookCreated" : {
      "description" : "Webhook created",
      "headers" : {
        "Location" : {
          "type" : "string",
          "description" : "New webhook URL"
        }
      },
      "schema" : {
        "$ref" : "#/definitions/Webhook.CreatedResponse"
      }
    }
  },
  "securityDefinitions" : {
    "basic-auth" : {
      "type" : "basic"
    }
  },
  "security" : [ {
    "basic-auth" : [ ]
  } ],
  "tags" : [ ]
}