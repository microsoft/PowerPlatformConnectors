{
  "swagger": "2.0",
  "info": {
    "title": "iManage Work for Admins",
    "description": "iManage Work for Admins connector enables administrators to automate their repetitive or integration tasks, such as adding users or updating custom fields.",
    "version": "1.0",
    "contact": {
      "name": "iManage LLC",
      "url": "https://docs.imanage.com",
      "email": "cloudsupport@imanage.com"
    }
  },
  "host": "cloudimanage.com",
  "basePath": "/automate/work",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/getLibraryRoles": {
      "get": {
        "summary": "Get library roles",
        "description": "Gets the list of user roles for a library.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "library.controllers",
        "operationId": "GetLibraryRoles",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "libraryId",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Library ID",
            "description": "Specifies the ID of the target library.",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetLibraries",
              "value-collection": "data",
              "value-title": "display_name",
              "value-path": "id"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetLibraries",
              "itemsPath": "data",
              "itemTitlePath": "display_name",
              "itemValuePath": "id"
            }
          },
          {
            "name": "is_external",
            "in": "query",
            "type": "boolean",
            "x-ms-summary": "External Library Roles",
            "description": "Specifies the library roles returned are external roles.",
            "x-ms-visibility": "important",
            "required": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "x-ms-summary": "User ID",
            "description": "Specifies the unique ID of the user, overriding the is_external query parameter to return possible roles that can be assigned to the user.",
            "x-ms-visibility": "internal",
            "required": false
          },
          {
            "$ref": "#/parameters/connectorId_header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user roles.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Role ID",
                        "description": "Indicates the ID of the role."
                      },
                      "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Indicates the description of the role."
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/getLibraries": {
      "get": {
        "summary": "Get libraries",
        "description": "Gets a list of libraries to which the user has access.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "library.controllers",
        "operationId": "GetLibraries",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "showAllLibraries",
            "in": "query",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "internal",
            "required": false
          },
          {
            "name": "hidePreferredLibrary",
            "in": "query",
            "type": "boolean",
            "default": false,
            "x-ms-visibility": "internal",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of libraries.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Library ID",
                        "description": "Indicates the name of the library."
                      },
                      "display_name": {
                        "type": "string",
                        "title": "Library Name",
                        "description": "Indicates the display name of the library."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "worksite",
                          "linksite"
                        ],
                        "title": "Library Type",
                        "description": "Indicates the type of the library. Possible values are 'worksite' or 'linksite'."
                      },
                      "is_hidden": {
                        "type": "boolean",
                        "title": "Is Hidden Library",
                        "description": "Indicates if the library is hidden."
                      }
                    },
                    "required": [
                      "id",
                      "display_name",
                      "type",
                      "is_hidden"
                    ]
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/getLookupFieldNames": {
      "get": {
        "summary": "Get lookup field names",
        "description": "Gets a list of lookup field names.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "library.controllers",
        "operationId": "GetLookupFieldNames",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of custom fields.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Lookup Field ID",
                        "description": "Indicates the ID of the lookup field."
                      },
                      "display_name": {
                        "type": "string",
                        "title": "Lookup Field Name",
                        "description": "Indicates the display name of the lookup field."
                      }
                    },
                    "required": [
                      "id",
                      "display_name"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/getCreateCustomOrPropertyLookupSchema": {
      "get": {
        "summary": "Get schema for create custom or property lookup",
        "description": "Gets the dynamic schema for CreateCustomOrPropertyLookup action.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "schema.controllers",
        "operationId": "GetCreateCustomOrPropertyLookupSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "lookupFieldId",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Lookup Field ID",
            "description": "Specifies the ID of the lookup field.",
            "x-ms-visibility": "important",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object"
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/getLookupAliases": {
      "get": {
        "summary": "Get lookup aliases",
        "description": "Gets a list of lookup aliases for the specified lookup field ID.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "library.controllers",
        "operationId": "GetLookupAliases",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "libraryId",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Library ID",
            "description": "Specifies the ID of the target library.",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetLibraries",
              "value-collection": "data",
              "value-title": "display_name",
              "value-path": "id"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetLibraries",
              "itemsPath": "data",
              "itemTitlePath": "display_name",
              "itemValuePath": "id"
            }
          },
          {
            "name": "lookupFieldId",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Lookup Field ID",
            "description": "Specifies the lookup field ID.",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetLookupFieldNames",
              "value-collection": "data",
              "value-title": "display_name",
              "value-path": "id"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetLookupFieldNames",
              "itemsPath": "data",
              "itemTitlePath": "display_name",
              "itemValuePath": "id"
            }
          },
          {
            "name": "parentAlias",
            "in": "query",
            "type": "string",
            "x-ms-summary": "Parent Alias",
            "description": "Specifies the parent of the custom property alias if custom2 or custom30 is selected.",
            "x-ms-visibility": "important",
            "required": false,
            "x-ms-dynamic-values": {
              "operationId": "GetLookupAliases",
              "value-collection": "data",
              "value-title": "description",
              "value-path": "id",
              "parameters": {
                "libraryId": {
                  "parameter": "libraryId"
                },
                "lookupFieldId": {
                  "parameter": "lookupFieldId"
                },
                "getParentAliases": true
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "GetLookupAliases",
              "itemsPath": "data",
              "itemTitlePath": "description",
              "itemValuePath": "id",
              "parameters": {
                "libraryId": {
                  "parameterReference": "libraryId"
                },
                "lookupFieldId": {
                  "parameterReference": "lookupFieldId"
                },
                "getParentAliases": {
                  "value": true
                }
              }
            }
          },
          {
            "name": "getParentAliases",
            "in": "query",
            "type": "boolean",
            "x-ms-summary": "Get Parent Aliases",
            "description": "Specifies whether to get aliases of the parent field or child field. Only applicable for custom2 and custom30.",
            "x-ms-visibility": "internal",
            "required": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Alias ID",
                        "description": "Indicates the ID of the lookup alias."
                      },
                      "description": {
                        "type": "string",
                        "title": "Alias Name",
                        "description": "Indicates the name of the lookup alias."
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/createCustomOrPropertyLookup": {
      "post": {
        "summary": "Create alias for custom or property lookup",
        "description": "Creates a custom property alias for custom1 through custom12, custom29, and custom30.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "library.controllers",
        "operationId": "CreateCustomOrPropertyLookup",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "libraryId": {
                  "type": "string",
                  "title": "Library ID",
                  "description": "Specifies the ID of the target library.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraries",
                    "value-collection": "data",
                    "value-title": "display_name",
                    "value-path": "id"
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLibraries",
                    "itemsPath": "data",
                    "itemTitlePath": "display_name",
                    "itemValuePath": "id"
                  }
                },
                "lookupFieldId": {
                  "type": "string",
                  "title": "Lookup Field ID",
                  "description": "Specifies the lookup field ID.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLookupFieldNames",
                    "value-collection": "data",
                    "value-title": "display_name",
                    "value-path": "id"
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLookupFieldNames",
                    "itemsPath": "data",
                    "itemTitlePath": "display_name",
                    "itemValuePath": "id"
                  }
                },
                "aliasInfo": {
                  "x-ms-dynamic-schema": {
                    "operationId": "GetCreateCustomOrPropertyLookupSchema",
                    "parameters": {
                      "lookupFieldId": {
                        "parameter": "lookupFieldId"
                      }
                    },
                    "value-path": "data"
                  },
                  "x-ms-dynamic-properties": {
                    "operationId": "GetCreateCustomOrPropertyLookupSchema",
                    "parameters": {
                      "lookupFieldId": {
                        "parameterReference": "body/lookupFieldId"
                      }
                    },
                    "itemValuePath": "data"
                  }
                }
              },
              "required": [
                "libraryId",
                "lookupFieldId",
                "aliasInfo"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/getCreateUserPasswordSchema": {
      "get": {
        "summary": "Get create user password schema",
        "description": "Gets the schema for the create user password operation.",
        "tags": [
          "Users"
        ],
        "x-im-controller": "schema.controllers",
        "operationId": "GetCreateUserPasswordSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "password_create_method",
            "in": "query",
            "type": "string",
            "x-ms-visibility": "important",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object"
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/createUser": {
      "post": {
        "summary": "Create user",
        "description": "Creates user and assigns the user to the preferred library.",
        "tags": [
          "Users"
        ],
        "x-im-controller": "user.controllers",
        "operationId": "CreateUser",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "full_name": {
                  "type": "string",
                  "title": "Full Name",
                  "description": "Specifies the full name of the user.",
                  "x-ms-visibility": "important"
                },
                "id": {
                  "type": "string",
                  "title": "User ID",
                  "description": "Specifies the unique ID of the user. Other than whitespace, you can use any alphanumeric value and the special characters *().&-_[]`~|@$%^?:{}!',/\\#+<>;\"=.",
                  "x-ms-visibility": "important",
                  "pattern": "^[\\u0021-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*$"
                },
                "email": {
                  "type": "string",
                  "title": "Email",
                  "description": "Specifies the email address of the user. For example, 'email1234@ajubalaw.com'.",
                  "x-ms-visibility": "important",
                  "pattern": "(?=^.{5,254}$)([a-zA-Z0-9+*.&+\\-_`~|$%\\^?!'#={}\\/])+@([a-zA-Z0-9+*.&+\\-_`~|$%\\^?!'#={}\\/]+\\.)+[a-zA-Z0-9+*.&+\\-_`~|$%\\^?!'#={}\\/]{2,}$"
                },
                "is_external": {
                  "type": "boolean",
                  "title": "External User",
                  "description": "Specifies if the user is an external user.",
                  "x-ms-visibility": "important",
                  "default": false
                },
                "preferred_library": {
                  "type": "string",
                  "title": "Preferred Library",
                  "description": "Specifies the preferred (default) library. Each user must have one preferred library.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraries",
                    "value-collection": "data",
                    "value-title": "display_name",
                    "value-path": "id",
                    "parameters": {
                      "hidePreferredLibrary": true
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLibraries",
                    "itemsPath": "data",
                    "itemTitlePath": "display_name",
                    "itemValuePath": "id",
                    "parameters": {
                      "hidePreferredLibrary": {
                        "value": true
                      }
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "description": "Specifies the role of the user in a library.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryRoles",
                    "value-collection": "data",
                    "value-title": "description",
                    "value-path": "id",
                    "parameters": {
                      "libraryId": {
                        "parameter": "preferred_library"
                      },
                      "is_external": {
                        "parameter": "is_external"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLibraryRoles",
                    "itemsPath": "data",
                    "itemTitlePath": "description",
                    "itemValuePath": "id",
                    "parameters": {
                      "libraryId": {
                        "parameterReference": "body/preferred_library"
                      },
                      "is_external": {
                        "parameterReference": "body/is_external"
                      }
                    }
                  }
                },
                "ignore_if_user_already_exists": {
                  "type": "boolean",
                  "title": "Ignore If User Already Exists",
                  "description": "Specifies if the user's info is returned if the user already exists or to return a duplicate record error.",
                  "x-ms-visibility": "important",
                  "default": true
                },
                "password_create_method": {
                  "type": "string",
                  "enum": [
                    "Send an email",
                    "Create a password"
                  ],
                  "default": "Send an email",
                  "title": "Password Creation Options",
                  "description": "Specifies to create a password directly or to send an email to the user."
                },
                "create_password": {
                  "description": "Specifies the password to create.",
                  "x-ms-dynamic-schema": {
                    "operationId": "GetCreateUserPasswordSchema",
                    "parameters": {
                      "password_create_method": {
                        "parameter": "password_create_method"
                      }
                    },
                    "value-path": "data"
                  },
                  "x-ms-dynamic-properties": {
                    "operationId": "GetCreateUserPasswordSchema",
                    "parameters": {
                      "password_create_method": {
                        "parameterReference": "body/password_create_method"
                      }
                    },
                    "itemValuePath": "data"
                  }
                }
              },
              "required": [
                "full_name",
                "id",
                "email",
                "is_external",
                "preferred_library",
                "role",
                "ignore_if_user_already_exists",
                "password_create_method",
                "create_password"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create user in the library.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "user_num": {
                      "type": "integer",
                      "title": "User Number",
                      "description": "Indicates the internal user number."
                    },
                    "full_name": {
                      "type": "string",
                      "title": "Full Name",
                      "description": "Indicates the user's full name."
                    },
                    "id": {
                      "type": "string",
                      "title": "User ID",
                      "description": "Indicates the unique ID of the user."
                    },
                    "preferred_library": {
                      "type": "string",
                      "title": "User Preferred Library",
                      "description": "Indicates the user's preferred (default) library."
                    },
                    "user_nos": {
                      "type": "integer",
                      "format": "int32",
                      "title": "User NOS",
                      "description": "Indicates the user's type. The user type can be virtual (2) or enterprise (6)."
                    },
                    "user_id_ex": {
                      "type": "string",
                      "title": "Extended User ID",
                      "description": "Indicates the original value of the user ID that is received from the source system such as Active Directory."
                    },
                    "ssid": {
                      "type": "string",
                      "title": "User SSID",
                      "description": "Indicates the unique, system generated ID of the user."
                    },
                    "pwd_never_expire": {
                      "type": "boolean",
                      "title": "Password Never Expires",
                      "description": "Indicates if the user's password never expires."
                    },
                    "is_locked": {
                      "type": "boolean",
                      "title": "Is Locked",
                      "description": "Indicates if the user is locked."
                    },
                    "is_external": {
                      "type": "boolean",
                      "title": "External User",
                      "description": "Indicates if the user is an external user."
                    },
                    "has_password": {
                      "type": "boolean",
                      "title": "Has Password",
                      "description": "Indicates if the user has a password."
                    },
                    "force_password_change": {
                      "type": "boolean",
                      "title": "Force Password Change",
                      "description": "Indicates the user must change their password on next logon. Only applicable to virtual users, indicated by User NOS with value '2'."
                    },
                    "failed_logins": {
                      "type": "integer",
                      "format": "int32",
                      "title": "Failed Logons",
                      "description": "Indicates the current number of failed logon attempts of the user."
                    },
                    "email": {
                      "type": "string",
                      "maxLength": 254,
                      "title": "User Email",
                      "description": "Indicates the email address of the user."
                    },
                    "edit_date": {
                      "type": "string",
                      "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
                      "title": "Edit Date",
                      "description": "Indicates the date and time (in ISO 8601 format) of the most recent change to the user profile."
                    },
                    "create_date": {
                      "type": "string",
                      "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
                      "title": "Create Date",
                      "description": "Indicates the date and time (in ISO 8601 format) the user was created."
                    },
                    "pwd_changed_ts": {
                      "type": "string",
                      "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
                      "title": "Password Changed Date",
                      "description": "Indicates the date and time (in ISO 8601 format) the user's password was changed."
                    },
                    "allow_logon": {
                      "type": "boolean",
                      "title": "Allow Logon",
                      "description": "Indicates if the user is allowed to logon."
                    },
                    "user_created": {
                      "type": "boolean",
                      "title": "User Created",
                      "description": "Indicates if the user was created successfully. If `true`, a new user was created successfully. If `false`, the user already existed."
                    }
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/assignUserToLibrary": {
      "post": {
        "summary": "Assign user to library",
        "description": "Assigns an existing user to a library.",
        "tags": [
          "Library"
        ],
        "x-im-controller": "user.controllers",
        "operationId": "AssignUserToLibrary",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "libraryId": {
                  "type": "string",
                  "title": "Library ID",
                  "description": "Specifies the ID of the target library.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraries",
                    "value-collection": "data",
                    "value-title": "display_name",
                    "value-path": "id",
                    "parameters": {
                      "hidePreferredLibrary": true
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLibraries",
                    "itemsPath": "data",
                    "itemTitlePath": "display_name",
                    "itemValuePath": "id",
                    "parameters": {
                      "hidePreferredLibrary": {
                        "value": true
                      }
                    }
                  }
                },
                "user_id": {
                  "type": "string",
                  "title": "User ID",
                  "description": "Specifies the name of the user to be assigned to target library.",
                  "x-ms-visibility": "important"
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "description": "Specifies the role of the user in the target library.",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryRoles",
                    "value-collection": "data",
                    "value-title": "description",
                    "value-path": "id",
                    "parameters": {
                      "libraryId": {
                        "parameter": "libraryId"
                      },
                      "user_id": {
                        "parameter": "user_id"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLibraryRoles",
                    "itemsPath": "data",
                    "itemTitlePath": "description",
                    "itemValuePath": "id",
                    "parameters": {
                      "libraryId": {
                        "parameterReference": "body/libraryId"
                      },
                      "user_id": {
                        "parameterReference": "body/user_id"
                      }
                    }
                  }
                },
                "is_preferred_library": {
                  "type": "boolean",
                  "title": "Is Preferred Library",
                  "description": "Specifies to set library ID as the user's preferred library.",
                  "default": false,
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "libraryId",
                "user_id",
                "role",
                "is_preferred_library"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "user_num": {
                      "type": "number",
                      "title": "User Number",
                      "description": "Indicates the internal user number."
                    }
                  },
                  "required": [
                    "user_num"
                  ]
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/addFolder": {
      "post": {
        "summary": "Add folder",
        "description": "Adds a new folder under a workspace, tab or folder.",
        "tags": [
          "Folders"
        ],
        "x-im-controller": "folder.controllers",
        "operationId": "AddFolder",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 254,
                  "pattern": "^(?!\\s*$)[*()&\\-_|@$%^?:{}!#+<>;=\\/\\s'.`~\",\\]\\[(\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF)|\\w]+$",
                  "description": "Specifies the name of the folder.",
                  "x-ms-visibility": "important"
                },
                "parentId": {
                  "type": "string",
                  "title": "Parent ID",
                  "minLength": 3,
                  "description": "Specifies the ID of the target workspace or folder. An example of a folder or workspace ID is 'ACTIVE_US!123'.",
                  "x-ms-visibility": "important"
                },
                "parentType": {
                  "type": "string",
                  "enum": [
                    "Folder",
                    "Workspace",
                    "Tab"
                  ],
                  "title": "Parent Type",
                  "description": "Specifies the type of the target folder's parent.",
                  "x-ms-visibility": "important"
                },
                "default_security": {
                  "type": "string",
                  "title": "Default Security",
                  "description": "Specifies the default security for the folder.",
                  "enum": [
                    "inherit",
                    "private",
                    "view",
                    "public"
                  ],
                  "default": "inherit",
                  "x-ms-visibility": "important"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "Specifies the description of the folder.",
                  "x-ms-visibility": "important"
                },
                "email": {
                  "type": "string",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEmailOptions",
                    "value-collection": "data"
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetEmailOptions",
                    "itemsPath": "data"
                  },
                  "title": "Email",
                  "description": "Specifies the unique prefix for the email address of the folder. For 'Enter custom value' option, acceptable characters are letters, numbers, and period(.), underscore(_), dash(-).",
                  "x-ms-visibility": "important"
                },
                "owner": {
                  "type": "string",
                  "title": "Folder Owner",
                  "pattern": "^(?!\\s*$)[*()&\\-_|@$%^?:{}!#+<>;=\\/\\s'.`~\",\\]\\[(\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF)|\\w]+$",
                  "maxLength": 63,
                  "description": "Specifies the user ID for the owner of the folder. An example user ID is 'ACASE'.",
                  "x-ms-visibility": "important"
                },
                "class": {
                  "type": "string",
                  "maxLength": 32,
                  "title": "Class",
                  "description": "Specifies the class of the folder.",
                  "x-ms-visibility": "important"
                },
                "subclass": {
                  "type": "string",
                  "maxLength": 32,
                  "title": "Subclass",
                  "description": "Specifies the subclass of the folder.",
                  "x-ms-visibility": "important"
                },
                "is_external_as_normal": {
                  "type": "boolean",
                  "title": "External As Normal",
                  "description": "Specifies if an external user has the same security access level as a normal user for public folders.",
                  "default": false,
                  "x-ms-visibility": "important"
                },
                "inherit_profile_from_workspace": {
                  "type": "string",
                  "enum": [
                    "Yes",
                    "No"
                  ],
                  "default": "Yes",
                  "title": "Inherit All Custom Values From Workspace",
                  "description": "Specifies if the new folder inherits all custom property values from the workspace. If 'No' is specified, you can inherit some custom values, as stated in the description for each.",
                  "x-ms-visibility": "important"
                },
                "profileProperties": {
                  "description": "Specifies the profile properties.",
                  "type": "object",
                  "x-ms-dynamic-schema": {
                    "operationId": "GetAddFolderPropertiesSchema",
                    "parameters": {
                      "inherit_profile_from_workspace": {
                        "parameter": "inherit_profile_from_workspace"
                      }
                    },
                    "value-path": "data"
                  },
                  "x-ms-dynamic-properties": {
                    "operationId": "GetAddFolderPropertiesSchema",
                    "parameters": {
                      "inherit_profile_from_workspace": {
                        "parameterReference": "body/inherit_profile_from_workspace"
                      }
                    },
                    "itemValuePath": "data"
                  }
                }
              },
              "required": [
                "name",
                "parentId",
                "parentType",
                "default_security",
                "inherit_profile_from_workspace"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateFolderResponseBody"
          }
        }
      }
    },
    "/addTab": {
      "post": {
        "summary": "Add tab",
        "description": "Adds a new tab under a workspace.",
        "tags": [
          "Tabs"
        ],
        "x-im-controller": "folder.controllers",
        "operationId": "AddTab",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 254,
                  "pattern": "^(?!\\s*$)[*()&\\-_|@$%^?:{}!#+<>;=\\/\\s'.`~\",\\]\\[(\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF)|\\w]+$",
                  "description": "Specifies the name of the tab.",
                  "x-ms-visibility": "important"
                },
                "parentId": {
                  "type": "string",
                  "title": "Parent Workspace ID",
                  "minLength": 3,
                  "description": "Specifies the ID of the target workspace. An example of a workspace ID is 'ACTIVE_US!123'.",
                  "x-ms-visibility": "important"
                },
                "default_security": {
                  "type": "string",
                  "title": "Default Security",
                  "description": "Specifies the default security for the tab.",
                  "enum": [
                    "inherit",
                    "private",
                    "view",
                    "public"
                  ],
                  "default": "inherit",
                  "x-ms-visibility": "important"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "Specifies the description of the tab.",
                  "x-ms-visibility": "important"
                },
                "owner": {
                  "type": "string",
                  "title": "Tab Owner",
                  "pattern": "^(?!\\s*$)[*()&\\-_|@$%^?:{}!#+<>;=\\/\\s'.`~\",\\]\\[(\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF)|\\w]+$",
                  "maxLength": 63,
                  "description": "Specifies the user ID for the owner of the tab. An example user ID is 'ACASE'.",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "name",
                "parentId",
                "default_security"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateTabResponseBody"
          }
        }
      }
    },
    "/getEmailOptions": {
      "get": {
        "summary": "Get email address options",
        "description": "Get email address options for the folder.",
        "tags": [
          "Folders"
        ],
        "x-im-controller": "schema.controllers",
        "operationId": "GetEmailOptions",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "data"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "/getAddFolderPropertiesSchema": {
      "get": {
        "summary": "Get add folder properties schema",
        "description": "Gets a schema for adding folder properties.",
        "tags": [
          "Folders"
        ],
        "x-im-controller": "schema.controllers",
        "operationId": "GetAddFolderPropertiesSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/connectorId_header"
          },
          {
            "in": "query",
            "name": "inherit_profile_from_workspace",
            "type": "string",
            "x-ms-summary": "Inherit profile values from parent workspace",
            "x-ms-visibility": "important",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NewFolderProfile": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string",
          "title": "Database",
          "description": "Indicates the library where the folder is located."
        },
        "default_security": {
          "type": "string",
          "enum": [
            "inherit",
            "private",
            "view",
            "public"
          ],
          "title": "Default Security",
          "description": "Indicates the default security access level for the folder. Possible values are 'public', 'view', 'private', 'inherited'."
        },
        "description": {
          "type": "string",
          "title": "Folder Description",
          "description": "Indicates any additional information about the folder. This property is returned only if a description is set for the folder."
        },
        "edit_date": {
          "type": "string",
          "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
          "title": "Folder Edit Date",
          "description": "Indicates the date and time (in ISO 8601 format) of the most recent change to the folder profile or its contents."
        },
        "effective_security": {
          "type": "string",
          "enum": [
            "no_access",
            "read",
            "read_write",
            "full_access"
          ],
          "title": "Folder Effective Security",
          "description": "Indicates the effective security access level for the folder. Possible values are 'full_access', 'read_write', 'read', 'no_access'."
        },
        "email": {
          "type": "string",
          "maxLength": 254,
          "title": "Folder Email",
          "description": "Indicates the email address of the folder."
        },
        "folder_type": {
          "type": "string",
          "enum": [
            "regular",
            "search",
            "tab",
            "category",
            "my_matters",
            "my_favorites"
          ],
          "title": "Folder Type",
          "description": "Indicates the type of the folder. Possible values are 'regular', 'search', 'tab', 'category', 'my_matters', 'my_favorites'."
        },
        "folder_url": {
          "type": "string",
          "title": "Folder URL",
          "description": "Indicates the sharable link for the folder."
        },
        "has_documents": {
          "type": "boolean",
          "title": "Has Documents",
          "description": "Indicates if the folder has documents."
        },
        "has_subfolders": {
          "type": "boolean",
          "title": "Has Sub-folders",
          "description": "Indicates if the folder has other folders under it."
        },
        "id": {
          "type": "string",
          "title": "Folder ID",
          "description": "Indicates the ID of the folder.",
          "pattern": "^[^!]+![0-9]+$"
        },
        "inherited_default_security": {
          "type": "string",
          "enum": [
            "private",
            "public",
            "view"
          ],
          "title": "Inherited Default Security",
          "description": "Indicates the default access permission assigned to an iManage Work object that is inherited from its parent container. This field is present only if 'default_security' is 'inherit'. Possible values are 'private','public','view'."
        },
        "is_container_saved_search": {
          "type": "boolean",
          "title": "Container Saved Search",
          "description": "Indicates if folder search is saved in this folder."
        },
        "is_content_saved_search": {
          "type": "boolean",
          "title": "Is Content Saved Search",
          "description": "Indicates whether document search is saved in this folder."
        },
        "is_external": {
          "type": "boolean",
          "title": "Is External Folder",
          "description": "Indicates if the folder is shared with external users."
        },
        "is_external_as_normal": {
          "type": "boolean",
          "title": "External As Normal",
          "description": "Indicates if an external user has the same security access level as a normal user for public folders."
        },
        "name": {
          "type": "string",
          "title": "Folder Name",
          "description": "Indicates the name of the folder."
        },
        "owner": {
          "type": "string",
          "title": "Folder Owner",
          "description": "Indicates the user ID for the owner of the folder."
        },
        "owner_description": {
          "type": "string",
          "maxLength": 254,
          "title": "Folder Owner Description",
          "description": "Indicates additional information about the folder owner."
        },
        "profile": {
          "type": "object",
          "properties": {
            "class": {
              "type": "string",
              "maxLength": 32,
              "title": "Class",
              "description": "Indicates the class of the folder."
            },
            "subclass": {
              "type": "string",
              "maxLength": 32,
              "title": "Subclass",
              "description": "Indicates the subclass of the folder."
            },
            "custom1": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom1",
              "description": "Indicates the value of custom1."
            },
            "custom2": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom2",
              "description": "Indicates the value of custom2."
            },
            "custom3": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom3",
              "description": "Indicates the value of custom3."
            },
            "custom4": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom4",
              "description": "Indicates the value of custom4."
            },
            "custom5": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom5",
              "description": "Indicates the value of custom5."
            },
            "custom6": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom6",
              "description": "Indicates the value of custom6."
            },
            "custom7": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom7",
              "description": "Indicates the value of custom7."
            },
            "custom8": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom8",
              "description": "Indicates the value of custom8."
            },
            "custom9": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom9",
              "description": "Indicates the value of custom9."
            },
            "custom10": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom10",
              "description": "Indicates the value of custom10."
            },
            "custom11": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom11",
              "description": "Indicates the value of custom11."
            },
            "custom12": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom12",
              "description": "Indicates the value of custom12."
            },
            "custom13": {
              "type": "string",
              "maxLength": 96,
              "title": "Custom13",
              "description": "Indicates the value of custom13."
            },
            "custom14": {
              "type": "string",
              "maxLength": 96,
              "title": "Custom14",
              "description": "Indicates the value of custom14."
            },
            "custom15": {
              "type": "string",
              "maxLength": 96,
              "title": "Custom15",
              "description": "Indicates the value of custom15."
            },
            "custom16": {
              "type": "string",
              "maxLength": 96,
              "title": "Custom16",
              "description": "Indicates the value of custom16."
            },
            "custom17": {
              "type": "integer",
              "format": "int32",
              "title": "Custom17",
              "description": "Indicates the value of custom17."
            },
            "custom18": {
              "type": "integer",
              "format": "int32",
              "title": "Custom18",
              "description": "Indicates the value of custom18."
            },
            "custom19": {
              "type": "integer",
              "format": "int32",
              "title": "Custom19",
              "description": "Indicates the value of custom19."
            },
            "custom20": {
              "type": "integer",
              "format": "int32",
              "title": "Custom20",
              "description": "Indicates the value of custom20."
            },
            "custom21": {
              "type": "string",
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
              "title": "Custom21",
              "description": "Indicates the value of custom21 in ISO 8601 datetime format."
            },
            "custom22": {
              "type": "string",
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
              "title": "Custom22",
              "description": "Indicates the value of custom22 in ISO 8601 datetime format."
            },
            "custom23": {
              "type": "string",
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
              "title": "Custom23",
              "description": "Indicates the value of custom23 in ISO 8601 datetime format."
            },
            "custom24": {
              "type": "string",
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})(:)(\\d{2})(:)(\\d{2})(\\.\\d+)?(Z|([+-])(\\d{2})(:)?(\\d{2}))$",
              "title": "Custom24",
              "description": "Indicates the value of custom24 in ISO 8601 datetime format."
            },
            "custom25": {
              "type": "boolean",
              "title": "Custom25",
              "description": "Indicates the value of custom25."
            },
            "custom26": {
              "type": "boolean",
              "title": "Custom26",
              "description": "Indicates the value of custom26."
            },
            "custom27": {
              "type": "boolean",
              "title": "Custom27",
              "description": "Indicates the value of custom27."
            },
            "custom28": {
              "type": "boolean",
              "title": "Custom28",
              "description": "Indicates the value of custom28."
            },
            "custom29": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom29",
              "description": "Indicates the value of custom29."
            },
            "custom30": {
              "type": "string",
              "maxLength": 32,
              "title": "Custom30",
              "description": "Indicates the value of custom30."
            }
          }
        },
        "parent_id": {
          "type": "string",
          "title": "Parent ID",
          "description": "Indicates the ID of the parent folder.",
          "pattern": "^[^!]+![0-9]+$"
        },
        "view_type": {
          "type": "string",
          "enum": [
            "none",
            "document",
            "email",
            "email_search",
            "document_search",
            "linksite",
            "imanage_share"
          ],
          "title": "View Type",
          "description": "Indicates the folder view type based on its content. Possible values are 'none', 'document', 'email', 'email_search', 'document_search', 'linksite', 'imanage_share'."
        },
        "workspace_id": {
          "type": "string",
          "title": "Workspace ID",
          "description": "Indicates the ID of the parent workspace.",
          "pattern": "^[^!]+![0-9]+$"
        },
        "workspace_name": {
          "type": "string",
          "title": "Workspace Name",
          "description": "Indicates the name of the parent workspace."
        },
        "wstype": {
          "type": "string",
          "enum": [
            "folder",
            "workspace",
            "folder_shortcut",
            "workspace_shortcut"
          ],
          "title": "Library Type",
          "description": "Indicates the iManage Work type of the object. Possible values are 'folder', 'workspace', 'folder_shortcut', 'workspace_shortcut'."
        }
      },
      "required": [
        "id",
        "name",
        "wstype",
        "folder_url"
      ]
    },
    "NewTabProfile": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string",
          "title": "Database",
          "description": "Indicates the library where the tab is located."
        },
        "default_security": {
          "type": "string",
          "enum": [
            "inherit",
            "private",
            "view",
            "public"
          ],
          "title": "Default Security",
          "description": "Indicates the default security access level for the tab. Possible values are 'public', 'view', 'private', 'inherited'."
        },
        "description": {
          "type": "string",
          "title": "Tab Description",
          "description": "Indicates any additional information about the tab. This property is returned only if a description is set for the folder."
        },
        "id": {
          "type": "string",
          "title": "Tab ID",
          "description": "Indicates the ID of the tab.",
          "pattern": "^[^!]+![0-9]+$"
        },
        "name": {
          "type": "string",
          "title": "Tab Name",
          "description": "Indicates the name of the tab."
        },
        "owner": {
          "type": "string",
          "title": "Tab Owner",
          "description": "Indicates the user ID for the owner of the tab."
        },
        "owner_description": {
          "type": "string",
          "maxLength": 254,
          "title": "Tab Owner Description",
          "description": "Indicates additional information about the tab owner."
        },
        "tab_url": {
          "type": "string",
          "title": "Tab URL",
          "description": "Indicates the sharable link for the tab."
        },
        "workspace_id": {
          "type": "string",
          "title": "Workspace ID",
          "description": "Indicates the ID of the parent workspace.",
          "pattern": "^[^!]+![0-9]+$"
        },
        "workspace_name": {
          "type": "string",
          "title": "Workspace Name",
          "description": "Indicates the name of the parent workspace."
        }
      },
      "required": [
        "database",
        "default_security",
        "id",
        "name",
        "owner",
        "tab_url",
        "workspace_id",
        "workspace_name"
      ]
    }
  },
  "parameters": {
    "connectorId_header": {
      "name": "x-im-connector-id",
      "in": "header",
      "required": true,
      "type": "string",
      "x-ms-visibility": "internal",
      "default": "imanage-work-for-admins"
    }
  },
  "responses": {
    "CreateFolderResponseBody": {
      "description": "Folder profile response body.",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/NewFolderProfile"
          }
        },
        "required": [
          "data"
        ],
        "additionalProperties": false
      }
    },
    "CreateTabResponseBody": {
      "description": "Tab profile response body.",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/NewTabProfile"
          }
        },
        "required": [
          "data"
        ],
        "additionalProperties": false
      }
    }
  },
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://cloudimanage.com/automate/work/auth/login",
      "tokenUrl": "https://cloudimanage.com/automate/work/auth/token",
      "scopes": {
        "user": "user"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "name": "Documents",
      "description": "Document related actions."
    },
    {
      "name": "Folders",
      "description": "Folder related actions."
    },
    {
      "name": "Tabs",
      "description": "Tab related actions."
    },
    {
      "name": "Workspaces",
      "description": "Workspace related actions."
    },
    {
      "name": "Library",
      "description": "Library related actions."
    },
    {
      "name": "Groups",
      "description": "Group related actions."
    },
    {
      "name": "Users",
      "description": "User related actions."
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://imanage.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://imanage.com/about/privacy-notice/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ]
}