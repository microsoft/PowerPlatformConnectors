{
  "swagger": "2.0",
  "info": {
    "version": "1.2",
    "title": "Emigo",
    "description": "Emigo enables effective management of field force teams (employees working in the field on smartphones or tablets). Increases their effectiveness in their daily activities. Emigo Connector interact with Power Platform services. It enables business & back-office users to access data from Emigo to automate data flows & streamline business processes and digitalization of workflows happening outside of Emigo system.",
    "contact": {
      "name": "Sagra Technology",
      "url": "https://sagratechnology.com",
      "email": "emigo@sagratechnology.com"
    }
  },
  "host": "sgr-app-api-emigo-powerplatform-prod.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/trigger/{endpoint}/feeds/{feed}/newItem": {
      "x-ms-notification-content": {
        "description": "Details for OData NewItem Webhook",
        "schema": {
          "$ref": "#/definitions/FeedItem"
        }
      },
      "post": {
        "description": "This operation triggers a flow when a new OData item arrives.",
        "summary": "When a new OData item arrives",
        "operationId": "NewODataItem",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Please enter endpoint",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetTriggerEndpoints",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Endpoint name",
            "type": "string"
          },
          {
            "name": "feed",
            "in": "path",
            "description": "Please enter feed name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetFeeds",
              "parameters": {
                "endpoint": {
                  "parameter": "endpoint"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Feed name",
            "type": "string"
          },
          {
            "name": "Request body of webhook",
            "in": "body",
            "description": "This is the request body of the Webhook",
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "description": "Configuration of the Trigger",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URl",
                      "title": "URL",
                      "x-ms-notification-url": true,
                      "x-ms-visibility": "internal"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              },
              "required": [
                "config"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/$metadata.json/datasets/{type}/tables/{table}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get table metadata (deprecated)",
        "description": "Get table metadata",
        "operationId": "GetTable",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Table type name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetTypes",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Table type",
            "type": "string"
          },
          {
            "name": "table",
            "in": "path",
            "description": "Table name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetTables",
              "parameters": {
                "type": {
                  "parameter": "type"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Table name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TableMetadata"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/$metadata.json/datasets/{endpoint}/feeds/{feed}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get feed metadata",
        "description": "Get feed metadata",
        "operationId": "GetFeed",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetEndpoints",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Endpoint name",
            "type": "string"
          },
          {
            "name": "feed",
            "in": "path",
            "description": "Feed name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetFeeds",
              "parameters": {
                "endpoint": {
                  "parameter": "endpoint"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Feed name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FeedMetadata"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/types": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get table type list (deprecated)",
        "description": "Get table type list",
        "operationId": "GetTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TablesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/endpoints": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get endpoint list",
        "description": "Get endpoint list",
        "operationId": "GetEndpoints",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FeedList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/triggerendpoints": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get trigger endpoint list",
        "description": "Get trigger endpoint list",
        "operationId": "GetTriggerEndpoints",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FeedList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/{type}/tables": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get table name list by type (deprecated)",
        "description": "This operation will return the tables according to the indicated value in field table type name",
        "operationId": "GetTables",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Please enter table type name",
            "required": true,
            "x-ms-summary": "Table type name",
            "x-ms-url-encoding": "single",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TablesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/datasets/{endpoint}/feeds": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get feed name list",
        "description": "This operation will return the feeds according to the indicated value in field endpoint name",
        "operationId": "GetFeeds",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Please enter endpoint name",
            "required": true,
            "x-ms-summary": "Endpoint name",
            "x-ms-url-encoding": "single",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FeedList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/datasets/{type}/tables/{table}/items": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get items by table type (deprecated)",
        "description": "This operation will return the items according to the indicated value in field table type name and tyble name",
        "operationId": "GetItems",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Please enter table type name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetTypes",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Table type name",
            "type": "string"
          },
          {
            "name": "table",
            "in": "path",
            "description": "Please enter table name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetTables",
              "parameters": {
                "type": {
                  "parameter": "type"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Table name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemsList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/datasets/{endpoint}/feeds/{feed}/items": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get OData items",
        "description": "This operation will return the items according to the indicated value in field endpoint and feed name",
        "operationId": "GetODataItems",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Please enter endpoint",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetEndpoints",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Endpoint name",
            "type": "string"
          },
          {
            "name": "feed",
            "in": "path",
            "description": "Please enter feed name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetFeeds",
              "parameters": {
                "endpoint": {
                  "parameter": "endpoint"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Feed name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FeedList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/Product/GetList": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "GetProductList",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IdList",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Get product list by Id",
            "description": "Get product list by Id (use \"all\" when you get to all list )"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of columns to retrieve",
            "type": "string",
            "x-ms-summary": "Use $select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Get product list",
        "description": "This operation retrieves all list product in tenant Emigo",
        "deprecated": false
      }
    },
    "/Product/GetItem": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "GetProductItem",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Please enter the Product Id",
            "x-ms-summary": "Product Id"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of columns to retrieve",
            "type": "string",
            "x-ms-summary": "Use $select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProduct"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Get product by Id",
        "description": "This operation retrieves information about product by Id",
        "deprecated": false
      }
    },
    "/OperationalUnit/GetList": {
      "get": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "GetOperationalUnitList",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IdList",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Get Operational Unit by Id",
            "description": "Use \"all\" when you get to all Operational Unit"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of columns to retrieve",
            "type": "string",
            "x-ms-summary": "Use $select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOperationalUnitList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Get Operational Unit list",
        "description": "This operation retrieves information about all Operation Unit",
        "deprecated": false
      }
    },
    "/OperationalUnit/GetItem": {
      "get": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "GetOperationalUnitItem",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Please enter Id of Operational Unit",
            "x-ms-summary": "Please enter Id of Operational Unit"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of columns to retrieve",
            "type": "string",
            "x-ms-summary": "$select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOperationalUnit"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Get Operational Unit by Id",
        "description": "This operation retrieves information about Operational Unit",
        "deprecated": false
      }
    },
    "/OperationalUnit/SendMessage": {
      "post": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "SendMessageOperationalUnit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SendMessage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IdOperationalUnit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Please enter the OperationalUnit Id",
                  "title": "Operational Unit Id"
                },
                "Message": {
                  "type": "string",
                  "description": "Body of the message.",
                  "title": "Message"
                }
              },
              "required": [
                "IdOperationalUnit",
                "Message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Send a message to the Operational Unit",
        "description": "Action that allows to send a message to Operational Unit",
        "deprecated": false
      }
    }
  },
  "definitions": {
    "GetOperationalUnitList": {
      "description": "Get OperationalUnit List",
      "type": "object",
      "properties": {
        "value": {
          "description": "Get OperationalUnit List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetOperationalUnit"
          }
        }
      }
    },
    "GetOperationalUnit": {
      "description": "Get OperationalUnit",
      "type": "object",
      "properties": {
        "OpuId": {
          "description": "Opu Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCode": {
          "description": "Opu Code",
          "type": "string"
        },
        "OpuSystemCode": {
          "description": "Opu SystemCode",
          "type": "string"
        },
        "OpuAttribute1Id": {
          "description": "Opu Attribute1 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute1": {
          "description": "Opu Attribute1",
          "type": "string"
        },
        "OpuAttribute2Id": {
          "description": "Opu Attribute2 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute2": {
          "description": "Opu Attribute2",
          "type": "string"
        },
        "OpuAttribute3Id": {
          "description": "Opu Attribute3 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute3": {
          "description": "Opu Attribute3",
          "type": "string"
        },
        "OpuAttribute4Id": {
          "description": "Opu Attribute4 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute4": {
          "description": "Opu Attribute4",
          "type": "string"
        },
        "OpuAttribute5Id": {
          "description": "Opu Attribute5 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute5": {
          "description": "Opu Attribute5",
          "type": "string"
        },
        "OpuCategory1Id": {
          "description": "Opu Category1 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory1": {
          "description": "Opu Category1",
          "type": "string"
        },
        "OpuCategory2Id": {
          "description": "Opu Category2 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory2": {
          "description": "Opu Category2",
          "type": "string"
        },
        "OpuCategory3Id": {
          "description": "Opu Category3 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory3": {
          "description": "Opu Category3",
          "type": "string"
        },
        "Hierarchy": {
          "description": "Hierarchy",
          "type": "string"
        },
        "EmigoVersion": {
          "description": "EmigoVersion",
          "type": "string"
        },
        "DistrictTypeId": {
          "description": "DistrictTypeId",
          "type": "integer",
          "format": "int32"
        },
        "DistrictType": {
          "description": "DistrictType",
          "type": "string"
        },
        "LicenceTypeId": {
          "description": "LicenceTypeId",
          "type": "integer",
          "format": "int32"
        },
        "LicenceType": {
          "description": "Licence Type",
          "type": "string"
        },
        "IsSagraOpu": {
          "description": "IsSagraOpu",
          "type": "integer",
          "format": "int32"
        },
        "TimeShift": {
          "description": "TimeShift",
          "type": "integer",
          "format": "int32"
        },
        "ServerTimeZone": {
          "description": "ServerTimeZone",
          "type": "string"
        },
        "UserNameAssigned": {
          "description": "UserNameAssigned",
          "type": "string"
        },
        "UserDescriptionAssigned": {
          "description": "UserDescriptionAssigned",
          "type": "string"
        },
        "UserIdAssigned": {
          "description": "UserIdAssigned",
          "type": "integer",
          "format": "int32"
        },
        "UserEmailAssigned": {
          "description": "UserEmailAssigned",
          "type": "string"
        },
        "UserPhoneNumberAssigned": {
          "description": "UserPhoneNumberAssigned",
          "type": "string"
        },
        "UserMobilePhoneNumberAssigned": {
          "description": "UserMobilePhoneNumberAssigned",
          "type": "string"
        },
        "OpuASMId": {
          "description": "OpuASMId",
          "type": "integer",
          "format": "int32"
        },
        "Id Status": {
          "description": "IdStatus",
          "type": "integer",
          "format": "int32"
        },
        "OpuStatus": {
          "description": "OpuStatus",
          "type": "string"
        }
      }
    },
    "GetProductList": {
      "description": "Get Product List",
      "type": "object",
      "properties": {
        "value": {
          "description": "Get Product List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetProduct"
          }
        }
      }
    },
    "GetProduct": {
      "description": "Get Product",
      "type": "object",
      "properties": {
        "ProductId": {
          "description": "Product Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductName": {
          "description": "Product Name",
          "type": "string"
        },
        "ProductName2": {
          "description": "Product Name2",
          "type": "string"
        },
        "ProductDescription": {
          "description": "Product Description",
          "type": "string"
        },
        "ProductIndex": {
          "description": "Product Index",
          "type": "string"
        },
        "ProductIndex2": {
          "description": "Product Index2",
          "type": "string"
        },
        "VAT": {
          "description": "VAT",
          "type": "integer",
          "format": "int32"
        },
        "UoM": {
          "description": "UoM",
          "type": "string"
        },
        "UoM2": {
          "description": "UoM2",
          "type": "string"
        },
        "ConversionUoM2": {
          "description": "Conversion UoM2",
          "type": "number",
          "format": "float"
        },
        "EanCode": {
          "description": "Ean Code",
          "type": "string"
        },
        "Price": {
          "description": "Price",
          "type": "number",
          "format": "float"
        },
        "MinimalPrice": {
          "description": "Minimal Price",
          "type": "number",
          "format": "float"
        },
        "ExFactoryPrice": {
          "description": "ExFactory Price",
          "type": "number",
          "format": "float"
        },
        "ProductCost": {
          "description": "Product Cost",
          "type": "number",
          "format": "float"
        },
        "IsCommercial": {
          "description": "IsCommercial",
          "type": "integer",
          "format": "int32"
        },
        "IsTrade": {
          "description": "IsTrade",
          "type": "integer",
          "format": "int32"
        },
        "IsListPriceOnly": {
          "description": "IsListPriceOnly",
          "type": "integer",
          "format": "int32"
        },
        "IsRefunded": {
          "description": "IsRefunded",
          "type": "integer",
          "format": "int32"
        },
        "IsGift": {
          "description": "IsGift",
          "type": "integer",
          "format": "int32"
        },
        "IsPrescription": {
          "description": "IsPrescription",
          "type": "integer",
          "format": "int32"
        },
        "IsHidden": {
          "description": "IsHidden",
          "type": "integer",
          "format": "int32"
        },
        "IsProductSet": {
          "description": "IsProductSet",
          "type": "boolean"
        },
        "CombinedNomenclature": {
          "description": "CombinedNomenclature",
          "type": "string"
        },
        "DefinedBrandId": {
          "description": "DefinedBrandId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedBrand": {
          "description": "DefinedBrand",
          "type": "string"
        },
        "DefinedProductGroupId": {
          "description": "DefinedProductGroupId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedProductGroup": {
          "description": "DefinedProductGroup",
          "type": "string"
        },
        "DefinedProducerId": {
          "description": "DefinedProducerId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedProducer": {
          "description": "DefinedProducer",
          "type": "string"
        },
        "ProductAttribute1Id": {
          "description": "ProductAttribute1Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute1": {
          "description": "ProductAttribute1",
          "type": "string"
        },
        "ProductAttribute2Id": {
          "description": "ProductAttribute2Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute2": {
          "description": "ProductAttribute2",
          "type": "string"
        },
        "ProductAttribute3Id": {
          "description": "ProductAttribute3Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute3": {
          "description": "ProductAttribute3",
          "type": "string"
        },
        "ProductAttribute4Id": {
          "description": "ProductAttribute4Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute4": {
          "description": "ProductAttribute4",
          "type": "string"
        },
        "ProductAttribute5Id": {
          "description": "ProductAttribute5Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute5": {
          "description": "ProductAttribute5",
          "type": "string"
        },
        "ProductAttribute6Id": {
          "description": "ProductAttribute6Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute6": {
          "description": "ProductAttribute6",
          "type": "string"
        },
        "ProductAttribute7Id": {
          "description": "ProductAttribute7Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute7": {
          "description": "ProductAttribute7",
          "type": "string"
        },
        "ProductAttribute8Id": {
          "description": "ProductAttribute8Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute8": {
          "description": "ProductAttribute8",
          "type": "string"
        },
        "ProductAttribute9Id": {
          "description": "ProductAttribute9Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute9": {
          "description": "ProductAttribute9",
          "type": "string"
        },
        "ProductAttribute10Id": {
          "description": "ProductAttribute10Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute10": {
          "description": "ProductAttribute10",
          "type": "string"
        },
        "ProducerId": {
          "description": "Producer Id",
          "type": "integer",
          "format": "int32"
        },
        "Producer": {
          "description": "Producer",
          "type": "string"
        },
        "DefinedColumn1": {
          "description": "Defined Column1",
          "type": "string"
        },
        "DefinedColumn2": {
          "description": "Defined Column2",
          "type": "string"
        },
        "DefinedColumn3": {
          "description": "Defined Column3",
          "type": "string"
        },
        "CreatedDate": {
          "description": "CreatedDate",
          "type": "string"
        },
        "CreatedTime": {
          "description": "CreatedTime",
          "type": "string"
        }
      }
    },
    "SendMessageRequest": {
      "required": [
        "OpuId",
        "Message"
      ],
      "type": "object",
      "properties": {
        "OpuId": {
          "format": "int32",
          "type": "integer"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "TableMetadata": {
      "description": "Metadata tabele",
      "type": "object",
      "properties": {
        "name": {
          "description": "Table name",
          "type": "string"
        },
        "title": {
          "description": "Table title",
          "type": "string"
        },
        "x-ms-permission": {
          "description": "Table permission",
          "type": "string"
        },
        "x-ms-capabilities": {
          "$ref": "#/definitions/TableCapabilitiesMetadata"
        },
        "schema": {
          "$ref": "#/definitions/Object"
        },
        "referencedEntities": {
          "$ref": "#/definitions/Object"
        }
      }
    },
    "FeedMetadata": {
      "description": "Metadata feed",
      "type": "object",
      "properties": {
        "name": {
          "description": "Feed name",
          "type": "string"
        },
        "title": {
          "description": "Feed title",
          "type": "string"
        },
        "x-ms-permission": {
          "description": "Feed permission",
          "type": "string"
        },
        "x-ms-capabilities": {
          "$ref": "#/definitions/FeedCapabilitiesMetadata"
        },
        "schema": {
          "$ref": "#/definitions/Object"
        },
        "referencedEntities": {
          "$ref": "#/definitions/Object"
        }
      }
    },
    "TableCapabilitiesMetadata": {
      "description": "Metadata tabele",
      "type": "object",
      "properties": {
        "sortRestrictions": {
          "$ref": "#/definitions/TableSortRestrictionsMetadata"
        },
        "filterRestrictions": {
          "$ref": "#/definitions/TableFilterRestrictionsMetadata"
        },
        "isOnlyServerPagable": {
          "description": "Is Only Server Pagable",
          "type": "boolean"
        },
        "filterFunctionSupport": {
          "description": "List of supported filter capabilities",
          "type": "array",
          "items": {
            "enum": [
              "eq",
              "ne",
              "gt",
              "ge",
              "lt",
              "le",
              "and",
              "or",
              "contains",
              "startswith",
              "endswith",
              "length",
              "indexof",
              "replace",
              "substring",
              "substringof",
              "tolower",
              "toupper",
              "trim",
              "concat",
              "year",
              "month",
              "day",
              "hour",
              "minute",
              "second",
              "date",
              "time",
              "now",
              "totaloffsetminutes",
              "totalseconds",
              "floor",
              "ceiling",
              "round",
              "not",
              "negate",
              "add",
              "sub",
              "mul",
              "div",
              "mod",
              "sum",
              "min",
              "max",
              "average",
              "countdistinct",
              "null"
            ],
            "type": "string"
          }
        }
      }
    },
    "FeedCapabilitiesMetadata": {
      "description": "Metadata feed",
      "type": "object",
      "properties": {
        "sortRestrictions": {
          "$ref": "#/definitions/FeedSortRestrictionsMetadata"
        },
        "filterRestrictions": {
          "$ref": "#/definitions/FeedFilterRestrictionsMetadata"
        },
        "isOnlyServerPagable": {
          "description": "Is Only Server Pagable",
          "type": "boolean"
        },
        "filterFunctionSupport": {
          "description": "List of supported filter capabilities",
          "type": "array",
          "items": {
            "enum": [
              "eq",
              "ne",
              "gt",
              "ge",
              "lt",
              "le",
              "and",
              "or",
              "contains",
              "startswith",
              "endswith",
              "length",
              "indexof",
              "replace",
              "substring",
              "substringof",
              "tolower",
              "toupper",
              "trim",
              "concat",
              "year",
              "month",
              "day",
              "hour",
              "minute",
              "second",
              "date",
              "time",
              "now",
              "totaloffsetminutes",
              "totalseconds",
              "floor",
              "ceiling",
              "round",
              "not",
              "negate",
              "add",
              "sub",
              "mul",
              "div",
              "mod",
              "sum",
              "min",
              "max",
              "average",
              "countdistinct",
              "null"
            ],
            "type": "string"
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "TableSortRestrictionsMetadata": {
      "description": "Metadana table (sorting restrictions)",
      "type": "object",
      "properties": {
        "sortable": {
          "description": "Indicates whether this table has sortable columns",
          "type": "boolean"
        },
        "unsortableProperties": {
          "description": "List of properties by which you cannot sort",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ascendingOnlyProperties": {
          "description": "List of properties that support only ascending order",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FeedSortRestrictionsMetadata": {
      "description": "Metadana feed (sorting restrictions)",
      "type": "object",
      "properties": {
        "sortable": {
          "description": "Indicates whether this feed has sortable columns",
          "type": "boolean"
        },
        "unsortableProperties": {
          "description": "List of properties by which you cannot sort",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ascendingOnlyProperties": {
          "description": "List of properties that support only ascending order",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TableFilterRestrictionsMetadata": {
      "description": "Metadana table (sorting restrictions)",
      "type": "object",
      "properties": {
        "filterable": {
          "description": "Indicates whether this table has sortable columns",
          "type": "boolean"
        },
        "nonFilterableProperties": {
          "description": "List of properties by which you cannot filter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredProperties": {
          "description": "List of required properties",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FeedFilterRestrictionsMetadata": {
      "description": "Metadana feed (sorting restrictions)",
      "type": "object",
      "properties": {
        "filterable": {
          "description": "Indicates whether this feed has sortable columns",
          "type": "boolean"
        },
        "nonFilterableProperties": {
          "description": "List of properties by which you cannot filter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredProperties": {
          "description": "List of required properties",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Table": {
      "description": "Represents the table",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Table name",
          "type": "string"
        },
        "DisplayName": {
          "description": "Table display name",
          "type": "string"
        }
      }
    },
    "Feed": {
      "description": "Represents the feed",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Feed name",
          "type": "string"
        },
        "DisplayName": {
          "description": "Feed display name",
          "type": "string"
        }
      }
    },
    "Item": {
      "description": "Unit of table element",
      "type": "object",
      "properties": {
        "dynamicProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Object"
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/Object"
      },
      "x-ms-dynamic-schema": {
        "operationId": "GetTable",
        "parameters": {
          "type": {
            "parameter": "type"
          },
          "table": {
            "parameter": "table"
          }
        },
        "value-path": "Schema/Items"
      }
    },
    "FeedItem": {
      "description": "Unit of feed element",
      "type": "object",
      "properties": {
        "dynamicProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Object"
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/Object"
      },
      "x-ms-dynamic-schema": {
        "operationId": "GetFeed",
        "parameters": {
          "endpoint": {
            "parameter": "endpoint"
          },
          "feed": {
            "parameter": "feed"
          }
        },
        "value-path": "Schema/Items"
      }
    },
    "TablesList": {
      "description": "Represents a list of tables",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of tables",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Table"
          }
        }
      }
    },
    "FeedList": {
      "description": "Represents a list of feeds",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of feeds",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedItem"
          }
        }
      }
    },
    "ItemsList": {
      "description": "List of elements",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "WebhookRequestBody": {
      "type": "object",
      "properties": {
        "config": {
          "description": "Configuration of the Trigger",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URl",
              "title": "URL",
              "x-ms-notification-url": true,
              "x-ms-visibility": "internal"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      "required": [
        "config"
      ]
    },
    "WebhookCreationResponse": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://sagratechnology.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://sagratechnology.com/terms/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM"
    }
  ]
}