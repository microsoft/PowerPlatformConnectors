{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Emigo",
    "description": "It enables the achievement of goals set for the sales force. It ensures effective activities in shops, pharmacies or with medical staff. Increases the effectiveness of sales teams in their daily activities. Increases efficiency.",
    "contact": {
      "name": "Sagra Technology",
      "url": "https://sagratechnology.com",
      "email": "emigo@sagratechnology.com"
    }
  },
  "host": "sgr-app-api-emigo-powerplatform-prod.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/$metadata.json/datasets/{type}/tables/{table}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get table metadata",
        "description": "Get table metadata",
        "operationId": "GetTable",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Table type name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetTypes",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Table type",
            "type": "string"
          },
          {
            "name": "table",
            "in": "path",
            "description": "Table name",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetTables",
              "parameters": {
                "type": {
                  "parameter": "type"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-url-encoding": "double",
            "x-ms-summary": "Table name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TableMetadata"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/types": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get table type list",
        "description": "Get table type list",
        "operationId": "GetTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TablesList"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/datasets/{type}/tables": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "Get table name list by type",
        "description": "This operation will return the tables according to the indicated value in field table type name",
        "operationId": "GetTables",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Please enter table type name",
            "required": true,
            "x-ms-summary": "Table type name",
			"x-ms-url-encoding": "single",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TablesList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/datasets/{type}/tables/{table}/items": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Get items by table type",
        "description": "This operation will return the items according to the indicated value in field table type name and tyble name",
        "operationId": "GetItems",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Please enter table type name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetTypes",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Table type name",
            "type": "string"
          },
          {
            "name": "table",
            "in": "path",
            "description": "Please enter table name",
            "required": true,
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetTables",
              "parameters": {
                "type": {
                  "parameter": "type"
                }
              },
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "x-ms-summary": "Table name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemsList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/Product/GetList": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "GetProductList",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IdList",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Get product list by ID",
            "description": "Get product list by ID (use \"all\" when you get to all list )"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
			"description": "Please select columns",
            "type": "string",
            "x-ms-summary": "Use $select",
            "description": "Comma-separated list of columns to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductList"
            }
          }
        },
        "summary": "Get all list product",
        "description": "This operation retrieves all list product in tenant Emigo"
      }
    },
    "/Product/GetItem": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "GetProductItem",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Please enter the Product Id",
            "x-ms-summary": "Product ID"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
			"description": "Please select columns",
            "type": "string",
            "x-ms-summary": "Use $select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProduct"
            }
          }
        },
        "summary": "Get product by ID",
        "description": "This operation retrieves information about product by ID"
      }
    },
    "/OperationalUnit/GetList": {
      "get": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "GetOperationalUnitList",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IdList",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Get Operational Unit by ID",
            "description": "Use \"all\" when you get to all Operational Unit"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
			"description": "Please select columns",
            "type": "string",
            "x-ms-summary": "Use $select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOperationalUnitList"
            }
          }
        },
        "summary": "Get all Operational Unit",
        "description": "This operation retrieves information about all Operation Unit"
      }
    },
    "/OperationalUnit/GetItem": {
      "get": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "GetOperationalUnitItem",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Please enter Id of Operational Unit",
            "x-ms-summary": "Please enter Id of Operational Unit"
          },
          {
            "name": "Select",
            "in": "query",
            "required": false,
			"description": "Please select columns",
            "type": "string",
            "x-ms-summary": "$select"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOperationalUnit"
            }
          }
        },
        "summary": "Get details by Operational Unit Id",
        "description": "This operation retrieves information about Operational Unit"
      }
    },
    "/OperationalUnit/SendMessage": {
      "post": {
        "tags": [
          "OperationalUnit"
        ],
        "operationId": "SendMessageOperationalUnit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SendMessage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IdOperationalUnit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Please enter the OperationalUnit Id",
                  "title": "Operational Unit Id"
                },
                "Message": {
                  "type": "string",
                  "description": "Body of the message.",
                  "title": "Message"
                }
              },
              "required": [
                "IdOperationalUnit",
                "Message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Send a message to the Operational Unit",
        "description": "Action that allows to send a message to Operational Unit"
      }
    }
  },
  "definitions": {
    "GetOperationalUnitList": {
      "description": "Get OperationalUnit List",
      "type": "object",
      "properties": {
        "value": {
          "description": "Get OperationalUnit List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetOperationalUnit"
          }
        }
      }
    },
    "GetOperationalUnit": {
      "description": "Get OperationalUnit",
      "type": "object",
      "properties": {
        "OpuId": {
          "description": "Opu Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCode": {
          "description": "Opu Code",
          "type": "string"
        },
        "OpuSystemCode": {
          "description": "Opu SystemCode",
          "type": "string"
        },
        "OpuAttribute1Id": {
          "description": "Opu Attribute1 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute1": {
          "description": "Opu Attribute1",
          "type": "string"
        },
        "OpuAttribute2Id": {
          "description": "Opu Attribute2 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute2": {
          "description": "Opu Attribute2",
          "type": "string"
        },
        "OpuAttribute3Id": {
          "description": "Opu Attribute3 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute3": {
          "description": "Opu Attribute3",
          "type": "string"
        },
        "OpuAttribute4Id": {
          "description": "Opu Attribute4 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute4": {
          "description": "Opu Attribute4",
          "type": "string"
        },
        "OpuAttribute5Id": {
          "description": "Opu Attribute5 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuAttribute5": {
          "description": "Opu Attribute5",
          "type": "string"
        },
        "OpuCategory1Id": {
          "description": "Opu Category1 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory1": {
          "description": "Opu Category1",
          "type": "string"
        },
        "OpuCategory2Id": {
          "description": "Opu Category2 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory2": {
          "description": "Opu Category2",
          "type": "string"
        },
        "OpuCategory3Id": {
          "description": "Opu Category3 Id",
          "type": "integer",
          "format": "int32"
        },
        "OpuCategory3": {
          "description": "Opu Category3",
          "type": "string"
        },
        "Hierarchy": {
          "description": "Hierarchy",
          "type": "string"
        },
        "EmigoVersion": {
          "description": "EmigoVersion",
          "type": "string"
        },
        "DistrictTypeId": {
          "description": "DistrictTypeId",
          "type": "integer",
          "format": "int32"
        },
        "DistrictType": {
          "description": "DistrictType",
          "type": "string"
        },
        "LicenceTypeId": {
          "description": "LicenceTypeId",
          "type": "integer",
          "format": "int32"
        },
        "LicenceType": {
          "description": "Licence Type",
          "type": "string"
        },
        "IsSagraOpu": {
          "description": "IsSagraOpu",
          "type": "integer",
          "format": "int32"
        },
        "TimeShift": {
          "description": "TimeShift",
          "type": "integer",
          "format": "int32"
        },
        "ServerTimeZone": {
          "description": "ServerTimeZone",
          "type": "string"
        },
        "UserNameAssigned": {
          "description": "UserNameAssigned",
          "type": "string"
        },
        "UserDescriptionAssigned": {
          "description": "UserDescriptionAssigned",
          "type": "string"
        },
        "UserIdAssigned": {
          "description": "UserIdAssigned",
          "type": "integer",
          "format": "int32"
        },
        "UserEmailAssigned": {
          "description": "UserEmailAssigned",
          "type": "string"
        },
        "UserPhoneNumberAssigned": {
          "description": "UserPhoneNumberAssigned",
          "type": "string"
        },
        "UserMobilePhoneNumberAssigned": {
          "description": "UserMobilePhoneNumberAssigned",
          "type": "string"
        },
        "OpuASMId": {
          "description": "OpuASMId",
          "type": "integer",
          "format": "int32"
        },
        "Id Status": {
          "description": "IdStatus",
          "type": "integer",
          "format": "int32"
        },
        "OpuStatus": {
          "description": "OpuStatus",
          "type": "string"
        }
      }
    },
    "GetProductList": {
      "description": "Get Product List",
      "type": "object",
      "properties": {
        "value": {
          "description": "Get Product List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetProduct"
          }
        }
      }
    },
    "GetProduct": {
      "description": "Get Product",
      "type": "object",
      "properties": {
        "ProductId": {
          "description": "Product Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductName": {
          "description": "Product Name",
          "type": "string"
        },
        "ProductName2": {
          "description": "Product Name2",
          "type": "string"
        },
        "ProductDescription": {
          "description": "Product Description",
          "type": "string"
        },
        "ProductIndex": {
          "description": "Product Index",
          "type": "string"
        },
        "ProductIndex2": {
          "description": "Product Index2",
          "type": "string"
        },
        "VAT": {
          "description": "VAT",
          "type": "integer",
          "format": "int32"
        },
        "UoM": {
          "description": "UoM",
          "type": "string"
        },
        "UoM2": {
          "description": "UoM2",
          "type": "string"
        },
        "ConversionUoM2": {
          "description": "Conversion UoM2",
          "type": "number",
          "format": "float"
        },
        "EanCode": {
          "description": "Ean Code",
          "type": "string"
        },
        "Price": {
          "description": "Price",
          "type": "number",
          "format": "float"
        },
        "MinimalPrice": {
          "description": "Minimal Price",
          "type": "number",
          "format": "float"
        },
        "ExFactoryPrice": {
          "description": "ExFactory Price",
          "type": "number",
          "format": "float"
        },
        "ProductCost": {
          "description": "Product Cost",
          "type": "number",
          "format": "float"
        },
        "IsCommercial": {
          "description": "IsCommercial",
          "type": "integer",
          "format": "int32"
        },
        "IsTrade": {
          "description": "IsTrade",
          "type": "integer",
          "format": "int32"
        },
        "IsListPriceOnly": {
          "description": "IsListPriceOnly",
          "type": "integer",
          "format": "int32"
        },
        "IsRefunded": {
          "description": "IsRefunded",
          "type": "integer",
          "format": "int32"
        },
        "IsGift": {
          "description": "IsGift",
          "type": "integer",
          "format": "int32"
        },
        "IsPrescription": {
          "description": "IsPrescription",
          "type": "integer",
          "format": "int32"
        },
        "IsHidden": {
          "description": "IsHidden",
          "type": "integer",
          "format": "int32"
        },
        "IsProductSet": {
          "description": "IsProductSet",
          "type": "boolean"
        },
        "CombinedNomenclature": {
          "description": "CombinedNomenclature",
          "type": "string"
        },
        "DefinedBrandId": {
          "description": "DefinedBrandId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedBrand": {
          "description": "DefinedBrand",
          "type": "string"
        },
        "DefinedProductGroupId": {
          "description": "DefinedProductGroupId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedProductGroup": {
          "description": "DefinedProductGroup",
          "type": "string"
        },
        "DefinedProducerId": {
          "description": "DefinedProducerId",
          "type": "integer",
          "format": "int32"
        },
        "DefinedProducer": {
          "description": "DefinedProducer",
          "type": "string"
        },
        "ProductAttribute1Id": {
          "description": "ProductAttribute1Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute1": {
          "description": "ProductAttribute1",
          "type": "string"
        },
        "ProductAttribute2Id": {
          "description": "ProductAttribute2Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute2": {
          "description": "ProductAttribute2",
          "type": "string"
        },
        "ProductAttribute3Id": {
          "description": "ProductAttribute3Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute3": {
          "description": "ProductAttribute3",
          "type": "string"
        },
        "ProductAttribute4Id": {
          "description": "ProductAttribute4Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute4": {
          "description": "ProductAttribute4",
          "type": "string"
        },
        "ProductAttribute5Id": {
          "description": "ProductAttribute5Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute5": {
          "description": "ProductAttribute5",
          "type": "string"
        },
        "ProductAttribute6Id": {
          "description": "ProductAttribute6Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute6": {
          "description": "ProductAttribute6",
          "type": "string"
        },
        "ProductAttribute7Id": {
          "description": "ProductAttribute7Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute7": {
          "description": "ProductAttribute7",
          "type": "string"
        },
        "ProductAttribute8Id": {
          "description": "ProductAttribute8Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute8": {
          "description": "ProductAttribute8",
          "type": "string"
        },
        "ProductAttribute9Id": {
          "description": "ProductAttribute9Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute9": {
          "description": "ProductAttribute9",
          "type": "string"
        },
        "ProductAttribute10Id": {
          "description": "ProductAttribute10Id",
          "type": "integer",
          "format": "int32"
        },
        "ProductAttribute10": {
          "description": "ProductAttribute10",
          "type": "string"
        },
        "ProducerId": {
          "description": "Producer Id",
          "type": "integer",
          "format": "int32"
        },
        "Producer": {
          "description": "Producer",
          "type": "string"
        },
        "DefinedColumn1": {
          "description": "Defined Column1",
          "type": "string"
        },
        "DefinedColumn2": {
          "description": "Defined Column2",
          "type": "string"
        },
        "DefinedColumn3": {
          "description": "Defined Column3",
          "type": "string"
        },
        "CreatedDate": {
          "description": "CreatedDate",
          "type": "string"
        },
        "CreatedTime": {
          "description": "CreatedTime",
          "type": "string"
        }
      }
    },
    "SendMessageRequest": {
      "required": [
        "OpuId",
        "Message"
      ],
      "type": "object",
      "properties": {
        "OpuId": {
          "format": "int32",
          "type": "integer"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "TableMetadata": {
      "description": "Metadata tabele",
      "type": "object",
      "properties": {
        "name": {
          "description": "Table name",
          "type": "string"
        },
        "title": {
          "description": "Table title",
          "type": "string"
        },
        "x-ms-permission": {
          "description": "Table permission",
          "type": "string"
        },
        "x-ms-capabilities": {
          "$ref": "#/definitions/TableCapabilitiesMetadata"
        },
        "schema": {
          "$ref": "#/definitions/Object"
        },
        "referencedEntities": {
          "$ref": "#/definitions/Object"
        }
      }
    },
    "TableCapabilitiesMetadata": {
      "description": "Metadata tabele",
      "type": "object",
      "properties": {
        "sortRestrictions": {
          "$ref": "#/definitions/TableSortRestrictionsMetadata"
        },
        "filterRestrictions": {
          "$ref": "#/definitions/TableFilterRestrictionsMetadata"
        },
        "isOnlyServerPagable": {
          "description": "Is Only Server Pagable",
          "type": "boolean"
        },
        "filterFunctionSupport": {
          "description": "List of supported filter capabilities",
          "type": "array",
          "items": {
            "enum": [
              "eq",
              "ne",
              "gt",
              "ge",
              "lt",
              "le",
              "and",
              "or",
              "contains",
              "startswith",
              "endswith",
              "length",
              "indexof",
              "replace",
              "substring",
              "substringof",
              "tolower",
              "toupper",
              "trim",
              "concat",
              "year",
              "month",
              "day",
              "hour",
              "minute",
              "second",
              "date",
              "time",
              "now",
              "totaloffsetminutes",
              "totalseconds",
              "floor",
              "ceiling",
              "round",
              "not",
              "negate",
              "add",
              "sub",
              "mul",
              "div",
              "mod",
              "sum",
              "min",
              "max",
              "average",
              "countdistinct",
              "null"
            ],
            "type": "string"
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "TableSortRestrictionsMetadata": {
      "description": "Metadana table (sorting restrictions)",
      "type": "object",
      "properties": {
        "sortable": {
          "description": "Indicates whether this table has sortable columns",
          "type": "boolean"
        },
        "unsortableProperties": {
          "description": "List of properties by which you cannot sort",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ascendingOnlyProperties": {
          "description": "List of properties that support only ascending order",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TableFilterRestrictionsMetadata": {
      "description": "Metadana table (sorting restrictions)",
      "type": "object",
      "properties": {
        "filterable": {
          "description": "Indicates whether this table has sortable columns",
          "type": "boolean"
        },
        "nonFilterableProperties": {
          "description": "List of properties by which you cannot filter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredProperties": {
          "description": "List of required properties",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Table": {
      "description": "Represents the table",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Table name",
          "type": "string"
        },
        "DisplayName": {
          "description": "Table display name",
          "type": "string"
        }
      }
    },
    "Item": {
      "description": "Unit of table element",
      "type": "object",
      "properties": {
        "dynamicProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Object"
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/Object"
      },
      "x-ms-dynamic-schema": {
        "operationId": "GetTable",
        "parameters": {
          "type": {
            "parameter": "type"
          },
          "table": {
            "parameter": "table"
          }
        },
        "value-path": "Schema/Items"
      }
    },
    "TablesList": {
      "description": "Represents a list of tables",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of tables",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Table"
          }
        }
      }
    },
    "ItemsList": {
      "description": "List of elements",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://sagratechnology.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://sagratechnology.com/terms/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM"
    }
  ]
}