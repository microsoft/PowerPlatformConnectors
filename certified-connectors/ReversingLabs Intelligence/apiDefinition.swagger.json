{
  "swagger": "2.0",
  "info": {
    "title": "ReversingLabs Intelligence",
    "version": "1.0",
    "description": "ReversingLabs continually processes goodware and malware files providing early intelligence about attacks before they infiltrate customer infrastructures. This visibility to threats “in-the-wild” enables preparation for new attacks and quickly identifies the threat levels of new files as they arrive. ReversingLabs enables more effective and efficient threat identification, development of better threat intelligence, and implementation of proactive threat hunting programs.",
    "contact": {
      "name": "ReversingLabs support",
      "url": "https://support.reversinglabs.com/",
      "email": "support@reversinglabs.com"
    }
  },
  "host": "data.reversinglabs.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.reversinglabs.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.reversinglabs.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Security"
    }
  ],
  "consumes": [],
  "produces": [],
  "parameters": {
    "user-agent": {
      "name": "User-Agent",
      "in": "header",
      "required": true,
      "type": "string",
      "default": "ReversingLabs Azure Connector TiCloud v1.0.0",
      "x-ms-visibility": "internal"
    }
  },
  "paths": {
    "/api/databrowser/malware_presence/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get File Hash Reputation",
        "description": "This service provides information about the malware status of requested files.",
        "operationId": "Get-api-databrowser-malware_presence-query-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: md5, sha1, sha256",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by hash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Value"
          },
          {
            "name": "show_hashes",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Both single and bulk malware presence queries support an additional request parameter show\\_hashes which can be either true or false. The parameter show\\_hashes can also be used with the Extended Malware Presence query. If not specified, the default value is false. When set to true, the show_hashes parameter will direct databrowser to provide md5, sha1 and sha256 hashes for the requested file(s), in addition to the rest of the Malware Presence information.",
            "x-ms-summary": "Show Hashes"
          },
          {
            "name": "extended",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": false,
            "description": "Both single and bulk malware presence queries support an additional query flag extended which can be either true or false. If not specified, the default value is false. When set to true, the extended flag will direct databrowser to provide a richer response schema with additional information about the requested file(s).",
            "x-ms-summary": "Extended"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/databrowser/malware_presence/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-api-databrowser-malware_presence-bulk_query-post_format",
        "description": "This service provides a means to send multiple hashes of files in a single request and provides information about the malware status for those files..",
        "summary": "Get File Hash Reputation - Bulk Request",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "md5, sha1, sha256"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query",
                      "required": [
                        "hash_type",
                        "hashes"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/xref/v2/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get Historic Multi-AV Scan Records",
        "description": "This service provides historic Multi-AV scan records for a given file hash.",
        "operationId": "Get-historic-multi-av-scan-records-query-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: md5, sha1, sha256",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by hash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "history",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": false,
            "description": "Both single and bulk malware presence queries support an additional query flag extended which can be either true or false. If not specified, the default value is false. When set to true, the extended flag will direct databrowser to provide a richer response schema with additional information about the requested file(s).",
            "x-ms-summary": "History"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/xref/v2/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Get-historic-multi-av-scan-records-query-hash_type-hash_value-bulk",
        "description": "This service provides a means to send multiple hashes of files in a single request and provides Multi-AV scan records data for those files.",
        "summary": "Get Historic Multi-AV Scan Records - Bulk Request",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "md5, sha1, sha256"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query",
                      "required": [
                        "hash_type",
                        "hashes"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/databrowser/rldata/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get File Hash Analysis Detail",
        "description": "This service provides analysis results for the requested file.",
        "operationId": "Get-api-databrowser-rldata-query-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: md5, sha1, sha256",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by ash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/databrowser/rldata/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-api-databrowser-rldata-bulk_query-post_format",
        "description": "This service provides a means to send multiple file hashes in a single request and provides analysis results for these file hashes.",
        "summary": "Get File Hash Analysis Detail - Bulk Request",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "md5, sha1, sha256"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query",
                      "required": [
                        "hash_type",
                        "hashes"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/rescan/v1/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Re-Analyze File",
        "description": "This service provides a means to send file(s) for rescanning.",
        "operationId": "Get-api-reanalyze-query-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: md5, sha1, sha256",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by hash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/rescan/v1/bulk_query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-api-rescan-v1-bulk_query-post_format",
        "description": "This service provides a means to initiate multiple files to be rescanned using a single request.",
        "summary": "Re-Analyze File - Bulk Request",
        "parameters": [
          {
            "name": "format",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "format accepts the options xml or json and defines the return format",
            "x-ms-summary": "Format"
          },
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "hash_type": {
                          "type": "string",
                          "description": "md5, sha1, sha256"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "hashes"
                        }
                      },
                      "description": "query",
                      "required": [
                        "hash_type",
                        "hashes"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/group_by_rha1/v1/query/{rha1_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get Functionally Similar File Hashes Using ReversingLabs Hash Algorithm",
        "description": "This service provides a list of SHA1 hashes of files that are functionally similar to the provided file (SHA1 hash) at the selected precision level.",
        "operationId": "Get-Group-By-RHA1-Single-Query",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "rha1_type",
            "in": "path",
            "required": true,
            "description": "rha1_type is a measure of the RHA1 precision level. It represents the degree to which a file is functionally similar to another file. A higher Precision Level will match fewer files but the files will have more functional similarity: - pe01, elf01, machO01 - 25% precision level - pe02 - 50% precision level",
            "type": "string",
            "x-ms-summary": "RHA1 type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid SHA1 value",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "next_page_sha1",
            "in": "query",
            "type": "string",
            "default": "false",
            "description": "next_page_sha1 is an optional parameter used for pagination. It is the SHA1 hash of the first file on the next page.",
            "x-ms-summary": "Next page sha1"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 1000,
            "description": "the maximum number of file SHA1 hashes to return. This value has to be an integer in the range from 1 and 1000 (1000 is the default value)",
            "x-ms-summary": "Limit"
          },
          {
            "name": "extended",
            "in": "query",
            "type": "string",
            "default": "false",
            "description": "extended is an optional parameter. Possible values are true - extended, and false - non-extended data set (default)",
            "x-ms-summary": "Extended"
          },
          {
            "name": "classification",
            "in": "query",
            "type": "string",
            "description": "if this parameter is provided in the request, the query will return a filtered list of files that match the requested classification. Possible values are: - KNOWN - SUSPICIOUS - MALICIOUS - UNKNOWN",
            "x-ms-summary": "Classification"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/imphash_index/v1/query/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get Similar File Hashes Using Import Hashing Algorithm",
        "description": "This service provides a list of SHA1 hashes functionally similar to the file associated with the provided import hash (ImpHash).",
        "operationId": "Get-api-historic-multi-av-scan-records-query-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid ImpHash hash",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/search/v1/query": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/json",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            },
            "x-examples": {
              "application/json": "{\n    \"query\": \"firstseen:[2017-06-20T00:00:00Z TO 2017-06-21T00:00:00Z] classification:[malicious, suspicious] threatname:win32\",\"page\":1, \"records_per_page\":1000,\"format\":\"xml\", \"sort\":\"firstseen asc\"\n}"
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "summary": "Find Files Using Multi-Part Search Criteria",
        "description": "This service provides a means to acquire a list of hashes that match the provided multi-part search criteria.",
        "operationId": "Post-advanced-search-query"
      }
    },
    "/api/uri/statistics/uri_state/sha1/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get URI Statistics on Email addresses, IP(s), Domain(s) and URL(s)",
        "description": "This service provides statistical information on the number of known, malicious, and suspicious file(s) associated with the URI.",
        "operationId": "Get-fetch-uri-state",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; The SHA1 hash value of the URI string",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `json` (default).",
            "x-ms-summary": "Format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/networking/url/v1/report/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-url-threat-intelligence",
        "description": "This service returns threat intelligence data, including reputation from various reputation sources, metadata for performed URL analyses, and the maliciousness of files found on the submitted URL.",
        "summary": "Get URL Threat Intelligence Report",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "full URL of a website including the protocol"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "xml, json"
                        }
                      },
                      "description": "query",
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/networking/url/v1/analyze/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-url-analyze",
        "description": "This service enables the submission of a URL for analysis.  ReversingLabs will crawl the URL, identifying files to download and submitting them to our file processing pipeline for classification and enrichment.  A detailed report can then be retrieved using our URL Threat Intelligence API.",
        "summary": "Analyze URL",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "full URL of a website including the protocol"
                        },
                        "response_format": {
                          "type": "string",
                          "description": "xml, json"
                        }
                      },
                      "description": "query",
                      "required": [
                        "url"
                      ]
                    }
                  },
                  "description": "rl",
                  "required": [
                    "query"
                  ]
                }
              },
              "required": [
                "rl"
              ]
            }
          }
        ]
      }
    },
    "/api/certificate/index/v1/query/thumbprint/{thumbprint}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get Files Signed with Specific Certificate Thumbprint(s)",
        "description": "This service provides a list of files signed with a particular certificate, specified by its thumbprint.",
        "operationId": "Get-api-certificate-index-v1-query-thumbprint",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "thumbprint",
            "in": "path",
            "description": " the thumbprint (sha1, sha256, md5) of the requested certificate. Most of our certificates use SHA256 for storing the thumbprint",
            "required": true,
            "type": "string",
            "x-ms-summary": "Thumbprint"
          },
          {
            "name": "classification",
            "in": "query",
            "type": "string",
            "required": false,
            "description": " if this parameter is provided in the request, the query will return a list of only those files that match the requested threat status. Possible values are: KNOWN, MALICIOUS, SUSPICIOUS, UNKNOWN",
            "x-ms-summary": "Classification"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "default": "json",
            "description": "Optional parameter that allows choosing the response format. Supported values are `xml` and `json`. If the parameter is not provided in the request, the response will be returned in `xml` (default).",
            "x-ms-summary": "Format"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 100,
            "description": "Maximum number of files to return in the certificate file list. It is possible to choose a number between 1 and 100 (100 is the default value)",
            "x-ms-summary": "Limit"
          },
          {
            "name": "extended",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": false,
            "description": "Both single and bulk malware presence queries support an additional query flag extended which can be either true or false. If not specified, the default value is false. When set to true, the extended flag will direct databrowser to provide a richer response schema with additional information about the requested file(s).",
            "x-ms-summary": "Extended"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/spex/upload/{sha1_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-api-sample-file-upload",
        "description": "This services provides a means to upload a file for analysis.",
        "summary": "Sample file upload",
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Required parameter.",
            "x-ms-summary": "SHA1 value"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rl"
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/spex/upload/{sha1_value}/meta": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        },
        "operationId": "Post-api-sample-metadata-upload",
        "description": "This service provides a means to send metadata for previously successfully uploaded file.",
        "summary": "Sample metadata file upload",
        "parameters": [
          {
            "name": "sha1_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Required parameter.",
            "x-ms-summary": "SHA1 value"
          },
          {
            "name": "Content-Type:",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Content type",
            "default": "application/octet-stream",
            "x-ms-summary": "Content type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rl"
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/api/dynamic/analysis/analyze/v1/query/{post_format}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "summary": "File dynamic analysis",
        "description": "This service allows users to detonate a previously uploaded file in the ReversingLabs TitaniumCloud sandbox.",
        "operationId": "Post-file-dynamic-analysis",
        "parameters": [
          {
            "name": "post_format",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "json",
            "description": "Required parameter that defines the POST payload format. Supported options are xml and json",
            "x-ms-summary": "Post format"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "description": "sha1"
                    },
                    "platform": {
                      "type": "string",
                      "description": "windows10/windows7"
                    }
                  },
                  "description": "rl"
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200":{
            "description": "OK! The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "rl": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "status"
                    },
                    "requested_hash": {
                      "type": "string",
                      "description": "requested_hash"
                    },
                    "analysis_id": {
                      "type": "string",
                      "description": "analysis_id"
                    }
                  },
                  "description": "rl"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "406": {
            "description": "Not Acceptable! The sample type is not supported, or it exceeds the file size limit"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/dynamic/analysis/report/v1/query/{hash_type}/{hash_value}/{analysis_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get specific dynamic analysis report for a file",
        "description": "This service allows user to download a specific report of a dynamic analysis performed on the file.",
        "operationId": "Get-file-dynamic-analysis-report-hash_type-hash_value-analysis_id",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: md5,sha1",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by hash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Value"
          },
          {
            "name": "analysis_id",
            "in": "path",
            "description": "required parameter; analysis_id value should be an exact analysis id or keyword \"latest\"",
            "required": true,
            "type": "string",
            "x-ms-summary": "analysis_id value should be an exact analysis id or keyword \"latest\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "406": {
            "description": "Not Acceptable! The sample type is not supported, or it exceeds the file size limit"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    },
    "/api/dynamic/analysis/report/v1/query/{hash_type}/{hash_value}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Get merged dynamic analysis report for a file",
        "description": "This service allows user to download a merged report with an overview of all dynamic analyses performed on the file.",
        "operationId": "Get-file-merged-dynamic-analysis-report-hash_type-hash_value",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash_type",
            "in": "path",
            "description": "required parameter; accepts these options: sha1",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Type"
          },
          {
            "name": "hash_value",
            "in": "path",
            "description": "required parameter; must be a valid hash of the type defined by hash_type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash Value"
          }
        ],
        "responses": {
          "200": {
            "description": "OK! The request has succeeded.",
            "headers": {}
          },
          "400": {
            "description": "Bad Request! The request could not be understood by the server due to malformed syntax. A possible reason might be that the request contains Unicode characters that cannot be processed."
          },
          "401": {
            "description": "Unauthorized! The request requires user authentication. The request MUST include a WWW- Authenticate header field containing a challenge applicable to the requested resource."
          },
          "403": {
            "description": "Forbidden! The server understood the request, but is refusing to fulfill it."
          },
          "404": {
            "description": "Not Found! The server has not found anything matching the Request-URI."
          },
          "406": {
            "description": "Not Acceptable! The sample type is not supported, or it exceeds the file size limit"
          },
          "500": {
            "description": "Internal Server Error! The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable! The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
          }
        }
      }
    }
  },
  "definitions": {
    "Query": {
      "properties": {
        "query": {
          "type": "string",
          "description": "Every expression must be built according the the following format:<field_name>:<field_value>. Please consult RL documentation for a list of field names and the operators that can be applied.",
          "title": ""
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "records_per_page": {
          "type": "integer",
          "format": "int32",
          "description": "The number of records returned in the response.",
          "title": "",
          "default": 10000
        },
        "format": {
          "type": "string",
          "description": "Option to return in specific format",
          "title": "",
          "default": "json",
          "enum": [
            "xml",
            "json"
          ]
        }
      },
      "type": "object",
      "required": [
        "query"
      ]
    },
    "rl": {
      "type": "object"
    }
  },
  "tags": [
    {
      "name": "File Reputation"
    }
  ],
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ]
}
