{
  "swagger": "2.0",
  "info": {
    "title": "JG Integrations",
    "description": "A collection of helper functions to replace missing or paid features in flow.",
    "version": "1.0",
    "contact": {
      "name": "Jack Glasson",
      "email": "flowconnector@jgsolutions.co.nz",
      "url": "https://jgsolutions.co.nz"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://jgsolutions.co.nz"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://jgsolutions.co.nz"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Collaboration"
    }
  ],
  "host": "integrations.jgsolutions.co.nz",
  "basePath": "/api/functions",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/crypto/hash_hmac": {
      "post": {
        "responses": {
          "200": {
            "description": "JSON Response",
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "description": "Hashed value encoded using Base64",
                  "title": "Hashed Value"
                }
              }
            }
          }
        },
        "summary": "HMAC Hash",
        "description": "Hash content using HMAC, value returned in base64",
        "operationId": "HASH_HMAC",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "algo": {
                  "type": "string",
                  "description": "Algorithm to use",
                  "title": "Algorithm",
                  "enum": [
                    "md2",
                    "md4",
                    "md5",
                    "sha1",
                    "sha224",
                    "sha256",
                    "sha384",
                    "sha512/224",
                    "sha512/256",
                    "sha512",
                    "sha3-224",
                    "sha3-256",
                    "sha3-384",
                    "sha3-512",
                    "ripemd128",
                    "ripemd160",
                    "ripemd256",
                    "ripemd320",
                    "whirlpool",
                    "snefru",
                    "snefru256",
                    "gost",
                    "gost-crypto"
                  ],
                  "default": "sha256"
                },
                "content": {
                  "type": "string",
                  "description": "Content in Plain Text",
                  "title": "Content"
                },
                "key": {
                  "type": "string",
                  "description": "Encryption key in plain text",
                  "title": "Key"
                }
              },
              "required": [
                "algo",
                "content",
                "key"
              ]
            }
          }
        ]
      }
    },
    "/text/preg_replace": {
      "post": {
        "responses": {
          "200": {
            "description": "JSON Response",
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "string",
                  "description": "Cleaned string",
                  "title": "Cleaned string"
                }
              }
            }
          }
        },
        "summary": "Regex Replace",
        "operationId": "PREG_REPLACE",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pattern": {
                  "type": "string",
                  "description": "pattern",
                  "title": "Regex Pattern"
                },
                "replacement": {
                  "type": "string",
                  "description": "replacement",
                  "title": "Replacement Value",
                  "default": ""
                },
                "subject": {
                  "type": "string",
                  "description": "subject",
                  "title": "Value to Search"
                }
              },
              "required": [
                "pattern",
                "subject"
              ]
            }
          }
        ],
        "description": "Replace all characters matched by REGEX Expression"
      }
    },
    "/manual_func": {
      "post": {
        "responses": {
          "200": {
            "description": "JSON Response",
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "string",
                  "description": "Processed value",
                  "title": "Processed Value"
                }
              }
            }
          }
        },
        "summary": "Advanced PHP Functions",
        "x-ms-visibility": "advanced",
        "description": "Manually specify a php function and body",
        "operationId": "MANUAL",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "function": {
                  "type": "string",
                  "description": "function"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              },
              "required": [
                "data",
                "function"
              ]
            }
          }
        ]
      }
    },
    "/text/html_to_pdf": {
      "post": {
        "responses": {
          "200": {
            "description": "JSON Response",
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            },
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "HTML to PDF",
        "description": "Convert HTML to a PDF",
        "operationId": "HTML_TO_PDF",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/pdf",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "html": {
                  "type": "string",
                  "description": "HTML content to be converted",
                  "title": "HTML",
                  "format": "html"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the returned pdf (Alphanumeric and whitespace characters only)",
                  "title": "File Name"
                },
                "landscape": {
                  "type": "boolean",
                  "description": "Show in landscape mode",
                  "title": "Landscape",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false
                },
                "pagesize": {
                  "type": "string",
                  "description": "The page size of the returned PDF",
                  "title": "Page size",
                  "default": "a4",
                  "enum": [
                    "[4a0",
                    "2a0",
                    "a0",
                    "a1",
                    "a2",
                    "a3",
                    "a4",
                    "a5",
                    "a6",
                    "a7",
                    "a8",
                    "a9",
                    "a10",
                    "b0",
                    "b1",
                    "b2",
                    "b3",
                    "b4",
                    "b5",
                    "b6",
                    "b7",
                    "b8",
                    "b9",
                    "b10",
                    "c0",
                    "c1",
                    "c2",
                    "c3",
                    "c4",
                    "c5",
                    "c6",
                    "c7",
                    "c8",
                    "c9",
                    "c10",
                    "ra0",
                    "ra1",
                    "ra2",
                    "ra3",
                    "ra4",
                    "sra0",
                    "sra1",
                    "sra2",
                    "sra3",
                    "sra4",
                    "letter",
                    "half-letter",
                    "legal",
                    "ledger",
                    "tabloid",
                    "executive",
                    "folio",
                    "commercial #10 envelope",
                    "catalog #10 1/2 envelope",
                    "8.5x11",
                    "8.5x14",
                    "11x17",
                    "]"
                  ]
                }
              },
              "required": [
                "html",
                "landscape",
                "name",
                "pagesize"
              ]
            }
          }
        ]
      }
    },
    "/text/file_string": {
      "post": {
        "responses": {
          "200": {
            "description": "JSON Response",
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "string",
                  "description": "Cleaned string",
                  "title": "Cleaned string"
                }
              }
            }
          }
        },
        "summary": "File Friendly String",
        "description": "Remove non-alphanumeric and - ( ) _ characters",
        "operationId": "FILE_STRING",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pattern": {
                  "type": "string",
                  "description": "pattern",
                  "default": "/[^a-zA-Z0-9 \\-\\(\\)\\_]+/",
                  "x-ms-visibility": "internal"
                },
                "subject": {
                  "type": "string",
                  "description": "String to clean",
                  "title": "String to clean"
                }
              },
              "required": [
                "pattern",
                "subject"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://integrations.jgsolutions.co.nz/oauth/authorize",
      "tokenUrl": "https://integrations.jgsolutions.co.nz/oauth/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}
