{
  "swagger": "2.0",
  "info": {
    "title": "Map Pro",
    "description": "Map Pro is an application for Microsoft Teams that displays a map in any of your channels. This connector will allow you to manage existing places or create new ones.",
    "termsOfService": "https://www.teams-pro.com/en/terms-of-use",
    "version": "v1",
    "contact": {
      "name": "TeamsPro Support",
      "url": "https://www.teams-pro.com/en/contact-us/",
      "email": "teams-pro-help@witivio.com"
    }
  },
  "host": "graph.teams-pro.com",
  "basePath": "/map/v1/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/{mapId}/places/{placeId}": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get a place",
        "description": "Get a place by it's unique identifier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mapId",
            "description": "The unique identifier of the map",
            "required": true,
            "type": "string",
            "x-ms-summary": "Map ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "placeId",
            "description": "The unique identifier of the place",
            "required": true,
            "type": "string",
            "x-ms-summary": "Place ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the place",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "400": {
            "description": "The provided id is invalid"
          },
          "404": {
            "description": "The place has not been found or does not exist"
          }
        },
        "operationId": "getPlaceById"
      },
      "delete": {
        "tags": [
          "Places"
        ],
        "summary": "Delete a place",
        "description": "Delete a place",
        "parameters": [
          {
            "in": "path",
            "name": "mapId",
            "description": "The unique identifier of the map",
            "required": true,
            "type": "string",
            "x-ms-summary": "Map ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "placeId",
            "description": "The unique identifier of the place",
            "required": true,
            "type": "string",
            "x-ms-summary": "Place ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "Return no content"
          },
          "400": {
            "description": "The provided id is invalid"
          },
          "404": {
            "description": "The place has not been found or does not exist"
          }
        },
        "operationId": "deletePlace"
      },
      "patch": {
        "tags": [
          "Places"
        ],
        "summary": "Update a place",
        "description": "Update an existing place",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mapId",
            "description": "The unique identifier of the map",
            "required": true,
            "type": "string",
            "x-ms-summary": "Map ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "placeId",
            "description": "The unique identifier of the place",
            "required": true,
            "type": "string",
            "x-ms-summary": "Place ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The place data to update",
            "required": true,
            "schema": {
              "required": [
                "address",
                "lat",
                "lng",
                "title"
              ],
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1,
                  "description": "The title of the place",
                  "x-ms-summary": "Title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "maxLength": 250,
                  "description": "The description of the place",
                  "x-ms-summary": "Description",
                  "title": "Description"
                },
                "address": {
                  "type": "string",
                  "maxLength": 250,
                  "minLength": 1,
                  "description": "The address of the place",
                  "x-ms-summary": "Address",
                  "title": "Address"
                },
                "lat": {
                  "format": "double",
                  "type": "number",
                  "maximum": 90,
                  "minimum": -90,
                  "description": "The latitude of the place",
                  "x-ms-summary": "Latitude",
                  "title": "Latitude"
                },
                "lng": {
                  "format": "double",
                  "type": "number",
                  "maximum": 180,
                  "minimum": -180,
                  "description": "The longitude of the place",
                  "x-ms-summary": "Longitude",
                  "title": "Longitude"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the updated place",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "400": {
            "description": "The provided model is invalid"
          },
          "404": {
            "description": "The place has not been found or does not exist"
          }
        },
        "operationId": "updatePlace"
      }
    },
    "/{mapId}/places": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get all places",
        "description": "Get all places of a map by it's unique identifier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mapId",
            "description": "The unique identifier of the map",
            "required": true,
            "type": "string",
            "x-ms-summary": "Map ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of places",
            "schema": {
              "type": "array",
              "description": "The list of places",
              "items": {
                "$ref": "#/definitions/Place"
              }
            }
          },
          "400": {
            "description": "The provided id is invalid"
          },
          "404": {
            "description": "The map has not been found or does not exist"
          }
        },
        "operationId": "getMapPlacesById"
      },
      "post": {
        "tags": [
          "Places"
        ],
        "summary": "Create a new place",
        "description": "Create a new place",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mapId",
            "description": "The unique identifier of the map",
            "required": true,
            "type": "string",
            "x-ms-summary": "Map ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The data to create new place",
            "required": true,
            "schema": {
              "required": [
                "address",
                "lat",
                "lng",
                "title"
              ],
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1,
                  "description": "The title of the place",
                  "x-ms-summary": "Title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "maxLength": 250,
                  "description": "The description of the place",
                  "x-ms-summary": "Description",
                  "title": "Description"
                },
                "address": {
                  "type": "string",
                  "maxLength": 250,
                  "minLength": 1,
                  "description": "The address of the place",
                  "x-ms-summary": "Address",
                  "title": "Address"
                },
                "lat": {
                  "format": "double",
                  "type": "number",
                  "maximum": 90,
                  "minimum": -90,
                  "description": "The latitude of the place",
                  "x-ms-summary": "Latitude",
                  "title": "Latitude"
                },
                "lng": {
                  "format": "double",
                  "type": "number",
                  "maximum": 180,
                  "minimum": -180,
                  "description": "The longitude of the place",
                  "x-ms-summary": "Longitude",
                  "title": "Longitude"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Return the place with id",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "400": {
            "description": "The provided model is invalid"
          },
          "404": {
            "description": "The map has not been found or does not exist"
          }
        },
        "operationId": "createNewPlace"
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://developer.teams-pro.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.teams-pro.com/en/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ],
  "definitions": {
    "Place": {
      "required": [
        "address",
        "lat",
        "lng",
        "title"
      ],
      "type": "object",
      "description": "The place of a map",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the place",
          "x-ms-summary": "ID",
          "title": "ID"
        },
        "mapId": {
          "type": "string",
          "description": "The unique identifier of the map",
          "x-ms-summary": "Map ID",
          "title": "Map ID"
        },
        "title": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1,
          "description": "The title of the place",
          "x-ms-summary": "Title",
          "title": "Title"
        },
        "description": {
          "type": "string",
          "maxLength": 250,
          "description": "The description of the place",
          "x-ms-summary": "Description",
          "title": "Description"
        },
        "address": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1,
          "description": "The address of the place",
          "x-ms-summary": "Address",
          "title": "Address"
        },
        "lat": {
          "format": "double",
          "type": "number",
          "maximum": 90,
          "minimum": -90,
          "description": "The latitude of the place",
          "x-ms-summary": "Latitude",
          "title": "Latitude"
        },
        "lng": {
          "format": "double",
          "type": "number",
          "maximum": 180,
          "minimum": -180,
          "description": "The longitude of the place",
          "x-ms-summary": "Longitude",
          "title": "Longitude"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "security": [],
  "tags": []
}
