{
  "swagger": "2.0",
  "info": {
    "title": "DocJuris",
    "version": "3.2",
    "description": "DocJuris is a contract negotiation workspace that empowers legal and business teams to close deals with speed and accuracy.",
    "contact": {
      "name": "DocJuris Support",
      "url": "https://help.docjuris.com",
      "email": "support@docjuris.com"
    }
  },
  "host": "api.docjuris.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.docjuris.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "http://www.docjuris.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/v1/contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Create a contract",
        "description": "Create a contract document",
        "operationId": "CreateContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractCreateInput",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContractCreateInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContractApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get a contract",
        "description": "Get details for a contract.",
        "operationId": "GetContract",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract Id",
            "x-ms-url-encoding": "single",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContractApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/document": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Download latest turn document",
        "description": "For \"completedWithMarkup\" and \"completedClean\" the return document corresponds to the latest turn. For \"original\" the return document belongs to the first turn.",
        "operationId": "GetContractDocument",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract Id",
            "x-ms-url-encoding": "single",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "docState",
            "x-ms-summary": "Document State",
            "description": "State of document to download",
            "type": "string",
            "enum": [
              "completedWithMarkup",
              "completedClean",
              "original",
              "imported",
              "screeningReport"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/document/meta": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Download latest turn document description",
        "description": "Get information about a turn document, such as file name and extension.",
        "operationId": "GetContractDocumentMeta",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract Id",
            "description": "Available in trigger data.",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "docState",
            "x-ms-summary": "Document State",
            "description": "State of document to describe",
            "type": "string",
            "enum": [
              "completedWithMarkup",
              "completedClean",
              "original",
              "imported",
              "screeningReport"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentMetaApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contractTypes": {
      "get": {
        "tags": [
          "ContractTypes"
        ],
        "summary": "Get contract types",
        "description": "Get available contract types.",
        "operationId": "GetContractType",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "x-ms-summary": "Skip",
            "description": "Skip N types. Default 0.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "take",
            "x-ms-summary": "Take",
            "description": "Take N types. Default 200.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "x-ms-summary": "Sort Field",
            "description": "Sort field.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "x-ms-summary": "Filter",
            "description": "Filter to names including given string.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "simpleResponse",
            "description": "Return short version",
            "type": "string",
            "x-ms-visibility": "internal",
            "default": "true",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContractTypeListApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/imports": {
      "post": {
        "tags": [
          "Imports"
        ],
        "summary": "Create an import file",
        "description": "Import files can be used to create contracts or contract turns within the DocJuris app.",
        "operationId": "CreateImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractCreateInput",
            "x-ms-summary": "Create Input",
            "description": "Create Input",
            "schema": {
              "$ref": "#/definitions/StagedImportInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StagedImportApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/playbooks": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Get playbooks",
        "description": "Get available playbooks.",
        "operationId": "GetPlaybook",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "x-ms-summary": "Skip",
            "description": "Skip N types. Default 0.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "take",
            "x-ms-summary": "Take",
            "description": "Take N types. Default 200.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "x-ms-summary": "Sort Field",
            "description": "Sort field.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "x-ms-summary": "Filter",
            "description": "Filter to names including given string.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "simpleResponse",
            "description": "Return short version",
            "type": "string",
            "x-ms-visibility": "internal",
            "default": "true",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PlaybookListApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/subscriptions/{id}": {
      "delete": {
        "description": "Deletes a subscription",
        "operationId": "DeleteSubscription",
        "summary": "Delete a callback subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-summary": "Subscription Id",
            "description": "Id of subscription to delete",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/subscriptions/turnCompleted": {
      "x-ms-notification-content": {
        "description": "TurnCompletedMessage",
        "schema": {
          "$ref": "#/definitions/TurnSubscriptionMessage"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        },
        "summary": "Turn Completed",
        "description": "Turn Completed",
        "operationId": "TurnCompletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                }
              },
              "required": [
                "webhookUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/turnTagged": {
      "x-ms-notification-content": {
        "description": "Turn has been tagged",
        "schema": {
          "$ref": "#/definitions/TurnSubscriptionMessage"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        },
        "summary": "Turn Tagged",
        "description": "Turn Tagged",
        "operationId": "TurnTaggedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                }
              },
              "required": [
                "webhookUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/turnCreated": {
      "x-ms-notification-content": {
        "description": "TurnCreatedMessage",
        "schema": {
          "$ref": "#/definitions/TurnSubscriptionMessage"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        },
        "summary": "Turn Created",
        "description": "Turn Created",
        "operationId": "TurnCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                }
              },
              "required": [
                "webhookUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/screeningReportUpdated": {
      "x-ms-notification-content": {
        "description": "Screening report has been updated",
        "schema": {
          "$ref": "#/definitions/TurnSubscriptionMessage"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        },
        "summary": "Screening Report Updated",
        "description": "Screening Report Updated",
        "operationId": "ScreeningReportUpdatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "Webhook url"
                }
              },
              "required": [
                "webhookUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/turnMention": {
      "x-ms-notification-content": {
        "description": "TurnMentionMessage",
        "schema": {
          "$ref": "#/definitions/TurnMentionSubscriptionMessage"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        },
        "summary": "Mention in Turn",
        "description": "Mention in Turn",
        "operationId": "TurnMentionTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                }
              },
              "required": [
                "webhookUrl"
              ]
            }
          }
        ]
      }
    },
    "/v1/subscriptions/testmessages": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get test callback messages",
        "description": "Get test messages.",
        "operationId": "GetTestMessages",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "x-ms-summary": "Message Type",
            "description": "Message Type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObjectIEnumerableApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/turns": {
      "post": {
        "tags": [
          "Turns"
        ],
        "summary": "Create turn",
        "description": "Create contract turn.",
        "operationId": "CreateTurn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract Id",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "TurnCreateInput",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TurnCreateInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TurnApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/turns/{turnId}": {
      "get": {
        "tags": [
          "Turns"
        ],
        "summary": "Get turn details",
        "description": "Get contract turn details.",
        "operationId": "GetTurn",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "turnId",
            "x-ms-summary": "Turn ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TurnApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/turns/{turnId}/document": {
      "get": {
        "tags": [
          "Turns"
        ],
        "summary": "Download turn document",
        "description": "Get contract turn documents.",
        "operationId": "GetTurnDocument",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "turnId",
            "x-ms-summary": "Turn ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "docState",
            "x-ms-summary": "Document type",
            "description": "Stage of document to download",
            "type": "string",
            "enum": [
              "completedWithMarkup",
              "completedClean",
              "original",
              "imported",
              "screeningreport"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "binary",
              "type": "string",
              "title": "Turn Document"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/turns/{turnId}/document/meta": {
      "get": {
        "tags": [
          "Turns"
        ],
        "summary": "Download turn document description",
        "description": "Get information about a turn document, such as file name and extension.",
        "operationId": "GetTurnDocumentMeta",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contractId",
            "x-ms-summary": "Contract ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "turnId",
            "x-ms-summary": "Turn ID",
            "description": "Available in trigger data.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "docState",
            "x-ms-summary": "Document type",
            "description": "Stage of document to describe",
            "type": "string",
            "enum": [
              "completedWithMarkup",
              "completedClean",
              "original",
              "imported",
              "screeningreport"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentMetaApiStandardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiStandardResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        }
      }
    },
    "ApiStandardResponseMeta": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "errors": {
          "x-ms-visibility": "internal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Contract": {
      "type": "object",
      "title": "Contract",
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "important"
        },
        "latestTurnId": {
          "title": "Latest Turn Id",
          "format": "uuid",
          "type": "string"
        },
        "lastModified": {
          "title": "Last Modified Date",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "type": "object",
          "properties": {
            "id": {
              "title": "ID",
              "format": "int32",
              "type": "integer"
            },
            "name": {
              "title": "Name",
              "type": "string"
            },
            "description": {
              "title": "Description",
              "type": "string"
            }
          }
        },
        "counterParty": {
          "title": "Counterparty",
          "$ref": "#/definitions/CounterParty"
        },
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "urls": {
          "$ref": "#/definitions/Urls"
        }
      }
    },
    "ContractApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/Contract"
        }
      }
    },
    "ContractCreateInput": {
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "maxLength": 300,
          "minLength": 0,
          "type": "string"
        },
        "contractTypeId": {
          "title": "Contract Type",
          "format": "int32",
          "description": "One of contractType or contractTypeId must be supplied",
          "type": "integer",
          "x-ms-summary": "Contract type form",
          "x-ms-dynamic-values": {
            "operationId": "GetContractType",
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "GetContractType",
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        },
        "playbookId": {
          "title": "Playbook",
          "format": "int32",
          "description": "Playbook for contract",
          "type": "integer",
          "x-ms-summary": "Playbook form",
          "x-ms-dynamic-values": {
            "operationId": "GetPlaybook",
            "value-path": "id",
            "value-title": "title"
          },
          "x-ms-dynamic-list": {
            "operationId": "GetPlaybook",
            "itemValuePath": "id",
            "itemTitlePath": "title"
          }
        },
        "counterPartyName": {
          "title": "Counterparty",
          "description": "One of counterPartyName or counterPartyId must be supplied",
          "maxLength": 300,
          "minLength": 0,
          "type": "string"
        },
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "file": {
          "type": "string",
          "title": "Contract file",
          "format": "byte"
        },
        "fileName": {
          "title": "Contract file name",
          "maxLength": 300,
          "type": "string"
        },
        "owningUserEmail": {
          "title": "Owning User's Email Address",
          "type": "string",
          "maxLength": 300
        }
      }
    },
    "ContractType": {
      "type": "object",
      "title": "Contract Type",
      "properties": {
        "id": {
          "title": "ID",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        }
      }
    },
    "ContractTypeList": {
      "type": "object",
      "properties": {
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "take": {
          "format": "int32",
          "type": "integer"
        },
        "filter": {
          "type": "string"
        },
        "sortBy": {
          "type": "string"
        },
        "contractTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractType"
          }
        }
      }
    },
    "ContractTypeListApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/ContractTypeList"
        }
      }
    },
    "CounterParty": {
      "type": "object",
      "title": "Counterparty",
      "properties": {
        "id": {
          "title": "ID",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string"
        }
      }
    },
    "DocumentMeta": {
      "type": "object",
      "title": "Document File",
      "properties": {
        "name": {
          "title": "Full Name (with extension)",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "type": "string"
        },
        "originalFileName": {
          "title": "Original Name",
          "type": "string"
        }
      }
    },
    "DocumentMetaApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/DocumentMeta"
        }
      }
    },
    "Error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "ExtendedData": {
      "type": "object",
      "properties": {
        "namedValues": {
          "title": "Extended data",
          "type": "array",
          "description": "Optional user-specific data to attach to the the contract.",
          "items": {
            "$ref": "#/definitions/ExtendedDataNamedData"
          }
        }
      }
    },
    "ExtendedDataNamedData": {
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "description": "Name of an extra piece of data that will follow the contract",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "value": {
          "title": "value",
          "description": "Value for that extra piece of data",
          "maxLength": 3000,
          "minLength": 0,
          "type": "string"
        },
        "type": {
          "title": "type",
          "description": "Type for that extra piece of data",
          "maxLength": 30,
          "minLength": 0,
          "type": "string",
          "enum": [
            "text",
            "url"
          ]
        }
      }
    },
    "ObjectIEnumerableApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "type": "array",
          "items": {}
        }
      }
    },
    "Playbook": {
      "type": "object",
      "title": "Playbook",
      "properties": {
        "id": {
          "title": "ID",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "title": "Title",
          "type": "string"
        },
        "contractType": {
          "$ref": "#/definitions/ContractType"
        }
      }
    },
    "PlaybookListApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/PlaybookList"
        }
      }
    },
    "PlaybookList": {
      "type": "object",
      "properties": {
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "take": {
          "format": "int32",
          "type": "integer"
        },
        "filter": {
          "type": "string"
        },
        "sortBy": {
          "type": "string"
        },
        "playbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Playbook"
          }
        }
      }
    },
    "StagedImport": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "urls": {
          "$ref": "#/definitions/Urls"
        }
      }
    },
    "StagedImportApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/StagedImport"
        }
      }
    },
    "StagedImportInput": {
      "type": "object",
      "properties": {
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "file": {
          "type": "string",
          "title": "Import file",
          "format": "byte"
        },
        "fileName": {
          "title": "Import file name",
          "maxLength": 300,
          "type": "string"
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SubscriptionApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/Subscription"
        }
      }
    },
    "SubscriptionCreateInput": {
      "type": "object",
      "properties": {
        "webhookUrl": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SubscriptionIEnumerableApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          }
        }
      }
    },
    "TurnSubscriptionMessage": {
      "type": "object",
      "properties": {
        "messageId": {
          "title": "Message ID",
          "type": "string",
          "description": "id"
        },
        "turnId": {
          "title": "Turn ID",
          "type": "string",
          "description": "id"
        },
        "contractId": {
          "title": "Contract ID",
          "type": "string",
          "description": "contractId"
        },
        "type": {
          "title": "Event type",
          "type": "string",
          "description": "type"
        },
        "url": {
          "title": "URL to DocJuris",
          "type": "string",
          "description": "url"
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "type": "string",
                "description": "id"
              },
              "name": {
                "title": "Name",
                "type": "string",
                "description": "name"
              },
              "description": {
                "title": "Description",
                "type": "string",
                "description": "description"
              }
            }
          }
        }
      }
    },
    "TurnMentionSubscriptionMessage": {
      "type": "object",
      "properties": {
        "messageId": {
          "title": "Message ID",
          "type": "string",
          "description": "id"
        },
        "turnId": {
          "title": "Turn ID",
          "type": "string",
          "description": "id"
        },
        "contractId": {
          "title": "Contract ID",
          "type": "string",
          "description": "contractId"
        },
        "type": {
          "title": "Event type",
          "type": "string",
          "description": "type"
        },
        "url": {
          "title": "URL to DocJuris",
          "type": "string",
          "description": "url"
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "title": "ID",
                "type": "string",
                "description": "id"
              },
              "name": {
                "title": "Name",
                "type": "string",
                "description": "name"
              },
              "description": {
                "title": "Description",
                "type": "string",
                "description": "description"
              }
            }
          }
        },
        "mention": {
          "type": "object",
          "properties": {
            "text": {
              "title": "Text",
              "type": "string",
              "description": "text"
            },
            "mentioningUser": {
              "title": "Mentioning User",
              "type": "object",
              "properties": {
                "firstName": {
                  "title": "First Name",
                  "type": "string",
                  "description": "firstName"
                },
                "lastName": {
                  "title": "Last Name",
                  "type": "string",
                  "description": "lastName"
                },
                "userName": {
                  "title": "Username",
                  "type": "string",
                  "description": "userName"
                }
              }
            },
            "mentionedUser": {
              "title": "Mentioned User",
              "type": "object",
              "properties": {
                "firstName": {
                  "title": "First Name",
                  "type": "string",
                  "description": "firstName"
                },
                "lastName": {
                  "title": "Last Name",
                  "type": "string",
                  "description": "lastName"
                },
                "userName": {
                  "title": "Username",
                  "type": "string",
                  "description": "userName"
                }
              }
            },
            "commentId": {
              "title": "Commend ID",
              "type": "string",
              "description": "commentId"
            },
            "url": {
              "title": "Link to comment in DocJuris",
              "type": "string",
              "description": "url"
            }
          }
        }
      }
    },
    "Turn": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Turn ID",
          "format": "uuid",
          "type": "string"
        },
        "isComplete": {
          "title": "Is Turn Complete?",
          "type": "boolean"
        },
        "isLatest": {
          "title": "Is Turn Latest?",
          "type": "boolean"
        },
        "lastModified": {
          "title": "Last Modified Date/Time",
          "format": "date-time",
          "type": "string"
        },
        "source": {
          "title": "Source",
          "type": "string"
        },
        "importedFileName": {
          "title": "Original File Name",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ContractType"
        },
        "counterParty": {
          "$ref": "#/definitions/CounterParty"
        },
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "urls": {
          "$ref": "#/definitions/Urls"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TurnTag"
          }
        }
      }
    },
    "TurnApiStandardResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ApiStandardResponseMeta"
        },
        "response": {
          "$ref": "#/definitions/Turn"
        }
      }
    },
    "TurnCreateInput": {
      "type": "object",
      "properties": {
        "source": {
          "description": "A string that describes who this turn is from (i.e. internal dept., outside counsel, etc.). If this turn is from the counterparty leave this blank.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "currentTurnId": {
          "format": "uuid",
          "description": "A string ID of the latest known turn. The API will return an error if this does not match the latest turn's ID (i.e. if another turn was uploaded by another user).",
          "type": "string"
        },
        "extendedData": {
          "$ref": "#/definitions/ExtendedData"
        },
        "file": {
          "type": "string",
          "title": "Contract file",
          "format": "byte"
        },
        "fileName": {
          "title": "Contract file name",
          "maxLength": 300,
          "type": "string"
        }
      }
    },
    "TurnTag": {
      "type": "object",
      "title": "Tag",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Urls": {
      "type": "object",
      "title": "Url",
      "properties": {
        "app": {
          "title": "to DocJuris",
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": []
}