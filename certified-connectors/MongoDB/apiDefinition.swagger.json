{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "MongoDB",
    "description": "MongoDB is a general purpose, distributed, document data platform which is loved by developers and used across enterprises to run variety of workloads.You can now explore the various endpoints and perform CRUD operations and aggregations on your collection using the MongoDB Connector.",
    "contact": {
      "name": "MongoDB Support",
      "url": "https://www.mongodb.com/community/forums/",
      "email": "support-operations@mongodb.com"
    }
  },
  "host": "data.mongodb-api.com",
  "basePath": "/app/<Data API App ID>/endpoint/data/v1/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/action/insertOne": {
      "post": {
        "summary": "Insert Document",
        "description": "Using the insertOne endpoint, you can add a document to a collection. Use the document property in the request body to specify the document that should be created.",
        "operationId": "InsertDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "document": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "age": {
                      "type": "integer",
                      "format": "int32",
                      "description": "age"
                    }
                  },
                  "description": "document"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "document": {
                  "name": "John Sample",
                  "age": 42
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "A JSON object containing objectid of the inserted document.",
            "schema": {
              "type": "object",
              "properties": {
                "insertedId": {
                  "type": "string",
                  "description": "insertedId"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/findOne": {
      "post": {
        "summary": "Find Document",
        "description": "Using the findOne endpoint will let you retrieve a single document from a collection. Use the filter property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be returned.",
        "operationId": "FindDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "Accept",
            "x-ms-summary": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Accept"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "name": "John Sample"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the document that is fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "document": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "_id"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "age": {
                      "type": "integer",
                      "format": "int32",
                      "description": "age"
                    }
                  },
                  "description": "document"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/updateOne": {
      "post": {
        "summary": "Update Document",
        "description": "You can use the updateOne endpoint to update a single record. Use the filter property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be returned. Then use the update field to specify what should be updated. You should use one of the update operators to update your documents.",
        "operationId": "UpdateDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "filter"
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "age": {
                          "type": "integer",
                          "format": "int32",
                          "description": "age"
                        }
                      },
                      "description": "$set"
                    }
                  },
                  "description": "update"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "name": "John Sample"
                },
                "update": {
                  "$set": {
                    "age": 24
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the count of documents matched and count of documents modified.",
            "schema": {
              "type": "object",
              "properties": {
                "matchedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "matchedcount"
                },
                "modifiedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "modifiedcount"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/deleteOne": {
      "post": {
        "summary": "Delete Document",
        "description": "To delete a single document, use the deleteOne endpoint. Use the filter property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be deleted.",
        "operationId": "DeleteDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "name": "John Sample"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the count of documents deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "deletedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "deletedcount"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/insertMany": {
      "post": {
        "summary": "Insert Multiple Documents",
        "description": "You can add more than one document at a time by using the insertMany endpoint. In that case, you must use the documents property in the body of the request to specify the array of documents you want to insert into the collection.",
        "operationId": "InsertMultipleDocuments",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "age": {
                        "type": "integer",
                        "format": "int32",
                        "description": "age"
                      }
                    }
                  },
                  "description": "documents"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "documents": [
                  {
                    "name": "Miss MongoDB",
                    "age": 35
                  },
                  {
                    "name": "Mister Postman",
                    "age": 37
                  },
                  {
                    "name": "Miss MongoDB",
                    "age": 35
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "A JSON object containing the objectids of the inserted documents.",
            "schema": {
              "type": "object",
              "properties": {
                "insertedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "insertedIds"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/find": {
      "post": {
        "summary": "Find Multiple Documents",
        "description": "Using the find endpoint, you can fetch multiple documents at once. Use the filter property in the body of the request to specify the criteria on which to filter. If you pass an empty object, all the documents in the collection will be returned.",
        "operationId": "FindMultipleDocuments",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "Accept",
            "x-ms-summary": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Accept"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "age": {
                      "type": "object",
                      "properties": {
                        "$lt": {
                          "type": "integer",
                          "format": "int32",
                          "description": "$lt"
                        }
                      },
                      "description": "age"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "age": {
                    "$lt": 40
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing an array of all the documents fetched.",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "_id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "age": {
                        "type": "integer",
                        "format": "int32",
                        "description": "age"
                      }
                    }
                  },
                  "description": "documents"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/updateMany": {
      "post": {
        "summary": "Update Multiple Documents",
        "description": "Using updateMany, you can update all the documents matching a specific filter specified in the body of the request. Use one of the update operators in the update field to update your documents.",
        "operationId": "UpdateMultipleDocuments",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "age": {
                      "type": "object",
                      "properties": {
                        "$lt": {
                          "type": "integer",
                          "format": "int32",
                          "description": "$lt"
                        }
                      },
                      "description": "age"
                    }
                  },
                  "description": "filter"
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "age": {
                          "type": "integer",
                          "format": "int32",
                          "description": "age"
                        }
                      },
                      "description": "$set"
                    }
                  },
                  "description": "update"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "age": {
                    "$lt": 40
                  }
                },
                "update": {
                  "$set": {
                    "age": 42
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the count of documents matched and count of documents modified.",
            "schema": {
              "type": "object",
              "properties": {
                "matchedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "matchedcount"
                },
                "modifiedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "modifiedcount"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/deleteMany": {
      "post": {
        "summary": "Delete Many Documents",
        "description": "You can use deleteMany to delete multiple documents at once. Use the filter property to specify which documents to delete. Beware that using this API without any filters will delete all the documents in the collection. Use deletemany with care.",
        "operationId": "DeleteManyDocuments",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "age": {
                      "type": "object",
                      "properties": {
                        "$lt": {
                          "type": "integer",
                          "format": "int32",
                          "description": "$lt"
                        }
                      },
                      "description": "age"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                  "age": {
                    "$lt": 40
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the count of documents deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "deletedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "deletedCount"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/aggregate": {
      "post": {
        "summary": "Run Aggregation Pipeline",
        "description": "You can even run aggregation pipelines with the Data API. To do so, use the aggregate endpoint and specify your pipeline in the pipeline field of the request body.",
        "operationId": "RunAggregationPipeline",
        "parameters": [
          {
            "name": "Content-Type",
            "x-ms-summary": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "x-ms-summary": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "x-ms-summary": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "{{API_KEY}}",
            "description": "api-key"
          },
          {
            "name": "Accept",
            "x-ms-summary": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/{{CONTENT_TYPE}}",
            "description": "Accept"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "Data source",
                  "title": "Data source"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "pipeline": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "$sort": {
                        "type": "object",
                        "properties": {
                          "age": {
                            "type": "integer",
                            "format": "int32",
                            "description": "age"
                          }
                        },
                        "description": "$sort"
                      },
                      "$limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "$limit"
                      }
                    }
                  },
                  "description": "pipeline"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "pipeline": [
                  {
                    "$sort": {
                      "age": 1
                    },
                    "$limit": 1
                  },
                  {
                    "$limit": 1
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing an array of all the documents fetched after aggregation.",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "_id"
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name"
                      },
                      "Age": {
                        "type": "string",
                        "description": "Age"
                      }
                    }
                  },
                  "description": "documents"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.mongodb.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.mongodb.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}
