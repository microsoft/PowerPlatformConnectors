{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "RiskIQ",
    "description": "RiskIQ Security Intelligence Services provides direct, high volume access to RiskIQ data, allowing mature customers the ability to use this data to defend against threats to their environment."
  },
  "host": "api.riskiq.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "V0",
      "description": "Deprecated Endpoints"
    },
    {
      "name": "V1",
      "description": "New Endpoints"
    }
  ],
  "paths": {
    "/v0/pdns/data/ip": {
      "get": {
        "summary": "Passive DNS results by IP address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "description": "IP address in data fields for which to retrieve results.",
            "required": true,
            "type": "string",
            "x-ms-summary": "IP address in data fields for which to retrieve results."
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum number of results to retrieve.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to retrieve."
          },
          {
            "name": "lastSeenAfter",
            "in": "query",
            "required": false,
            "description": "Filter data based on lastSeen after date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on lastSeen after date (YYYY-MM-DD)."
          },
          {
            "name": "firstSeenBefore",
            "in": "query",
            "required": false,
            "description": "Filter data based on firstSeen before date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on firstSeen before date (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/RRSets"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.ip": "method.request.querystring.ip",
            "integration.request.querystring.maxResults": "method.request.querystring.max",
            "integration.request.querystring.lastSeenAfter": "method.request.querystring.lastSeenAfter",
            "integration.request.querystring.firstSeenBefore": "method.request.querystring.firstSeenBefore"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/dns/data",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "PDNS_IP",
        "description": "Passive DNS results by IP address"
      }
    },
    "/v0/pdns/data/name": {
      "get": {
        "summary": "Passive DNS results by resource name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "DNS name. Colloquially referred to as a domain name or DNS zone. Various types of PDNS records contain DNS names in their data fields. For example, the data fields of a name server (NS) record contain the host names of authoritative name servers.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Domain name to search against."
          },
          {
            "name": "type",
            "in": "query",
            "description": "DNS resource record type. Indicates the type of a DNS resource record. Different types of records describe different aspects of a resource. For example, a record with a type of A describes an IPv4 address for a given host name (the rrname of the record). There are many different defined types. Some of the more common ones besides A include AAAA for IPv6 records, NS for name server records, MX for mail server records, and TXT for arbitrary data.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Record type."
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "description": "Maximum number of results to retrieve.",
            "type": "string",
            "x-ms-summary": "Maximum number of results to retrieve."
          },
          {
            "name": "lastSeenAfter",
            "in": "query",
            "required": false,
            "description": "Filter data based on lastSeen after date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on lastSeen after date (YYYY-MM-DD)."
          },
          {
            "name": "firstSeenBefore",
            "in": "query",
            "required": false,
            "description": "Filter data based on firstSeen before date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on firstSeen before date (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/RRSets"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.rrType": "method.request.querystring.type",
            "integration.request.querystring.name": "method.request.querystring.name",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.max",
            "integration.request.querystring.lastSeenAfter": "method.request.querystring.lastSeenAfter",
            "integration.request.querystring.firstSeenBefore": "method.request.querystring.firstSeenBefore"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/dns/data",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "PDNS_RESOURCE_DATA",
        "description": "Passive DNS results by resource name"
      }
    },
    "/v0/pdns/data/raw": {
      "get": {
        "summary": "Passive DNS results by hex bytes in data field",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "DNS resource record type. Indicates the type of a DNS resource record. Different types of records describe different aspects of a resource. For example, a record with a type of A describes an IPv4 address for a given host name (the rrname of the record). There are many different defined types. Some of the more common ones besides A include AAAA for IPv6 records, NS for name server records, MX for mail server records, and TXT for arbitrary data.",
            "required": false,
            "type": "string",
            "x-ms-summary": "DNS resource record type."
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "description": "Maximum number of results to retrieve.",
            "type": "string",
            "x-ms-summary": "Maximum number of results to retrieve."
          },
          {
            "name": "lastSeenAfter",
            "in": "query",
            "required": false,
            "description": "Filter data based on lastSeen after date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on lastSeen after date (YYYY-MM-DD)."
          },
          {
            "name": "firstSeenBefore",
            "in": "query",
            "required": false,
            "description": "Filter data based on firstSeen before date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on firstSeen before date (YYYY-MM-DD)."
          },
          {
            "name": "hex",
            "in": "query",
            "description": "Hexadecimal encoding of data field bytes.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hexadecimal encoding of data field bytes."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/RRSets"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.rrType": "method.request.querystring.type",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.max",
            "integration.request.querystring.lastSeenAfter": "method.request.querystring.lastSeenAfter",
            "integration.request.querystring.firstSeenBefore": "method.request.querystring.firstSeenBefore",
            "integration.request.querystring.raw": "method.request.querystring.hex"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/dns/data",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "PDNS_RESOURCE_DATA_HEX",
        "description": "Passive DNS results by hex bytes in data field"
      }
    },
    "/v0/pdns/name": {
      "get": {
        "summary": "Passive DNS results by name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "DNS resource record name. The name of the DNS zone to which a DNS resource record pertains. Commonly used interchangeably with domain name or host name in many scenarios. Technically, an rrname ends with a terminal dot (e.g. riskiq.net.); but this API automatically assumes an implied terminal dot if one is not supplied.",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "DNS resource record name."
          },
          {
            "name": "type",
            "in": "query",
            "description": "DNS resource record type. Indicates the type of a DNS resource record. Different types of records describe different aspects of a resource. For example, a record with an type of A describes an IPv4 address for a given host name (the rrname of the record). There are many different defined types. Some of the more common ones besides A include AAAA for IPv6 records, NS for name server records, MX for mail server records, and TXT for arbitrary data.",
            "required": false,
            "type": "string",
            "x-ms-summary": "DNS resource record type."
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "description": "Maximum number of results to retrieve.",
            "type": "string",
            "x-ms-summary": "Maximum number of results to retrieve."
          },
          {
            "name": "lastSeenAfter",
            "in": "query",
            "required": false,
            "description": "Filter data based on lastSeen after date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on lastSeen after date (YYYY-MM-DD)."
          },
          {
            "name": "firstSeenBefore",
            "in": "query",
            "required": false,
            "description": "Filter data based on firstSeen before date (YYYY-MM-DD).",
            "type": "string",
            "x-ms-summary": "Filter data based on firstSeen before date (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/RRSets"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.rrType": "method.request.querystring.type",
            "integration.request.querystring.name": "method.request.querystring.name",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.max",
            "integration.request.querystring.lastSeenAfter": "method.request.querystring.lastSeenAfter",
            "integration.request.querystring.firstSeenBefore": "method.request.querystring.firstSeenBefore"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/dns/name",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "PDNS_NAME",
        "description": "Passive DNS results by name"
      }
    },
    "/v1/ssl/cert/host": {
      "get": {
        "summary": "Get SSL certificates by host name",
        "tags": [
          "V1"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "query",
            "description": "DNS host name or IP address for which to retrieve certificates.",
            "required": true,
            "type": "string",
            "x-ms-summary": "DNS host name or IP address for which to retrieve certificates."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/SslCertWithHostPage"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.host": "method.request.querystring.host"
          },
          "uri": "https://api.riskiq.net/v1/ssl/cert/host",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "SSL_BY_HOST",
        "description": "SSL Certificates by host name"
      }
    },
    "/v1/ssl/cert/serial": {
      "get": {
        "summary": "Get SSL certificates by serial number",
        "tags": [
          "V1"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "description": "Serial number of certificates to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Serial number of certificates to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/SslCertPage"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.serial": "method.request.querystring.serial"
          },
          "uri": "https://api.riskiq.net/v1/ssl/cert/serial",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "SSL_BY_SERIAL",
        "description": "SSL Certificates by serial number"
      }
    },
    "/v1/ssl/cert/sha1": {
      "get": {
        "summary": "Get SSL certificate by SHA1 hash",
        "tags": [
          "V1"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sha1",
            "in": "query",
            "description": "SHA1 hash of certificate to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "SHA1 hash of certificate to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/SslCert"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.sha1": "method.request.querystring.sha1"
          },
          "uri": "https://api.riskiq.net/v1/ssl/cert/sha1",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "SSL_BY_SHA1",
        "description": "SSL Certificate details by SHA-1"
      }
    },
    "/v1/ssl/host": {
      "get": {
        "summary": "Get hosts by certificate",
        "tags": [
          "V1"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certSha1",
            "in": "query",
            "description": "SHA1 hash of certificate for which to retrieve associated hosts.",
            "required": true,
            "type": "string",
            "x-ms-summary": "SHA1 hash of certificate for which to retrieve associated hosts."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/SslCertHostPage"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.certSha1": "method.request.querystring.certSha1"
          },
          "uri": "https://api.riskiq.net/v1/ssl/host",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "HOSTS_BY_SSL_SHA1",
        "description": "Hosts by SSL Certificate SHA-1"
      }
    },
    "/v1/ssl/cert/name": {
      "get": {
        "summary": "Get SSL certificates by name",
        "tags": [
          "V1"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of certificates to retrieve, including formal subject alternative and common names and other colloquial names.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Name of certificates to retrieve.."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/SslCertPage"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.name": "method.request.querystring.name"
          },
          "uri": "https://api.riskiq.net/v1/ssl/cert/name",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "SSL_BY_NAME",
        "description": "SSL Certificates by name"
      }
    },
    "/v0/whois/address": {
      "get": {
        "summary": "Get WHOIS records associated with an address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "The address you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The address you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.querystring.address": "method.request.querystring.address"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_IP",
        "description": "WHOIS record by IP address"
      }
    },
    "/v0/whois/domain": {
      "get": {
        "summary": "Get the current WHOIS for a domain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "The domain or IP Address you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The domain or IP Address you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match.  Valid values are true and false."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.querystring.domain": "method.request.querystring.domain"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_DOMAIN",
        "description": "WHOIS record by domain"
      }
    },
    "/v0/whois/email": {
      "get": {
        "summary": "Get WHOIS records associated with an email address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email address you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The email address you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match.  Valid values are true and false."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.querystring.email": "method.request.querystring.email",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_BY_EMAIL",
        "description": "WHOIS records by email address"
      }
    },
    "/v0/whois/name": {
      "get": {
        "summary": "Get WHOIS records associated with a name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The name you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match.  Valid values are true and false."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.querystring.name": "method.request.querystring.name",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_BY_NAME",
        "description": "WHOIS records by name"
      }
    },
    "/v0/whois/nameserver": {
      "get": {
        "summary": "Get WHOIS records associated with a name server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nameserver",
            "in": "query",
            "description": "The name server you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The name server you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.querystring.nameserver": "method.request.querystring.nameserver",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_BY_NAMESERVER",
        "description": "WHOIS records by name server"
      }
    },
    "/v0/whois/org": {
      "get": {
        "summary": "Get WHOIS records associated with an organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "org",
            "in": "query",
            "description": "The organization you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The organization you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact matrch."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.querystring.organization": "method.request.querystring.org"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_BY_ORGANIZATION",
        "description": "WHOIS records by organization"
      }
    },
    "/v0/whois/phone": {
      "get": {
        "summary": "Get WHOIS records associated with a phone number",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "The phone number you wish to search for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "The phone number you wish to search for."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 1000 and maximum value is 10000.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Maximum number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/WhoisResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.querystring.phone": "method.request.querystring.phone",
            "integration.request.querystring.maxResults": "method.request.querystring.maxResults",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "https://ws-dataservices.riskiq.net/v1/whois/pt",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WHOIS_BY_PHONE",
        "description": "WHOIS records by phone number"
      }
    },
    "/v0/hostattributes/hosts/trackers/{host}": {
      "get": {
        "summary": "Get trackers for a host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Hostname you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hostname you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results to return."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostAttributeResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "TRACKERS_HOST",
        "description": "Trackers for a host"
      }
    },
    "/v0/hostattributes/domains/trackers/{domain}": {
      "get": {
        "summary": "Get trackers for a domain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "description": "Domain you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Domain you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostAttributeResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "TRACKERS_DOMAIN",
        "description": "Trackers for a domain"
      }
    },
    "/v0/hostattributes/addresses/trackers/{address}": {
      "get": {
        "summary": "Get trackers for a IPv4 address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "IPv4 address you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "IPv4 address you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostAttributeResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "TRACKERS_IP",
        "description": "Trackers for an IP address"
      }
    },
    "/v0/hostattributes/hosts/trackers/children/{host}": {
      "get": {
        "summary": "Get children host pairs of host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Hostname you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hostname you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostPairsResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "HOST_PAIRS_CHILD",
        "description": "Children Host Pairs by host"
      }
    },
    "/v0/hostattributes/hosts/trackers/parents/{host}": {
      "get": {
        "summary": "Get parent host pairs of host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Hostname you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hostname you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostPairsResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "HOST_PAIRS_PARENT",
        "description": "Parent Host Pairs by host"
      }
    },
    "/v0/hostattributes/hosts/components/{host}": {
      "get": {
        "summary": "Get the web components for a host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Hostname you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hostname you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostComponentsResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WEB_COMPONENT_HOST",
        "description": "Web Components by host"
      }
    },
    "/v0/hostattributes/domains/components/{domain}": {
      "get": {
        "summary": "Get the web components for a domain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "description": "Domain you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Domain you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostComponentsResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WEB_COMPONENTS_DOMAIN",
        "description": "Web Components by domain"
      }
    },
    "/v0/hostattributes/addresses/components/{address}": {
      "get": {
        "summary": "Get the web components for a IPv4 address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "IPv4 address you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "IPv4 address you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostComponentsResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "WEB_COMPONENTS_IP",
        "description": "Web Components by IP address"
      }
    },
    "/v0/hostattributes/hosts/cookies/{host}": {
      "get": {
        "summary": "Get cookies associated with host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Hostname you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hostname you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostCookieResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "COOKIES_HOST",
        "description": "Cookies by host"
      }
    },
    "/v0/hostattributes/addresses/cookies/{address}": {
      "get": {
        "summary": "Get cookies associated with IPv4 address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "IPv4 you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "IPv4 address you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum number of results to return per page.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Maximum number of results."
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Page number."
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "beforeDay",
            "in": "query",
            "description": "Filter for records last seen before this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen before date."
          },
          {
            "name": "afterDay",
            "in": "query",
            "description": "Filter for records first seen after this date in MILLISECONDS. Granularity of this filter is DAYS.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Filter for records last seen after date."
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Search for an exact match.  Valid values are true and false.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Search for an exact match."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/HostCookieResult"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.size": "method.request.querystring.size",
            "integration.request.querystring.page": "method.request.querystring.page",
            "integration.request.querystring.before": "method.request.querystring.before",
            "integration.request.querystring.after": "method.request.querystring.after",
            "integration.request.querystring.beforeDay": "method.request.querystring.beforeDay",
            "integration.request.querystring.afterDay": "method.request.querystring.afterDay",
            "integration.request.querystring.exact": "method.request.querystring.exact",
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "uri": "",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        },
        "operationId": "COOKIES_IP",
        "description": "Cookies by IP address"
      }
    },
    "/v0/enrich/host/{host}": {
      "get": {
        "summary": "Get enriched information by host",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "Host domain or URL you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Query you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "whois",
            "in": "query",
            "description": "Include who is information.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include WHOIS information."
          },
          {
            "name": "hostDetails",
            "in": "query",
            "description": "Include host details.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include host details information."
          },
          {
            "name": "ipDetails",
            "in": "query",
            "description": "Include IP details.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include IP details information."
          },
          {
            "name": "linkedAssetCounts",
            "in": "query",
            "description": "Include linked asset counts.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include linked asset count information."
          },
          {
            "name": "recentPDNS",
            "in": "query",
            "description": "Include recent PDNS lookups.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include PDNS lookup information."
          },
          {
            "name": "subDomainPDNS",
            "in": "query",
            "description": "Include subdomain PDNS lookups.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include subdomain information."
          },
          {
            "name": "openPorts",
            "in": "query",
            "description": "Include Open ports.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include open ports information."
          },
          {
            "name": "certificates",
            "in": "query",
            "description": "Include certificates.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include certificates information."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/EnrichResponse"
            }
          }
        },
        "operationId": "ENRICHMENT_HOST",
        "description": "Enrichment by host"
      }
    },
    "/v0/enrich/ip/{ip}": {
      "get": {
        "summary": "Get enriched information by IPv4",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IPv4 address you want to search for",
            "required": true,
            "type": "string",
            "x-ms-summary": "Query you want to search for.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "whois",
            "in": "query",
            "description": "Include whois information.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include WHOIS information."
          },
          {
            "name": "hostDetails",
            "in": "query",
            "description": "Include host details.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include host details information."
          },
          {
            "name": "linkedAssetCounts",
            "in": "query",
            "description": "Include linked asset counts.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include linked asset count information."
          },
          {
            "name": "openPorts",
            "in": "query",
            "description": "Include open ports.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include open ports information."
          },
          {
            "name": "certificates",
            "in": "query",
            "description": "Include certificates.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-summary": "Include certificates information."
          }
        ],
        "responses": {
          "200": {
            "description": "Valid response returned.",
            "schema": {
              "$ref": "#/definitions/EnrichResponse"
            }
          }
        },
        "operationId": "ENRICHMENT_IP",
        "description": "Enrichment by IP address"
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object"
    },
    "EnrichResponse": {
      "type": "object"
    },
    "SslCertPage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SslCert"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SslCert": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "firstSeen": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "issuer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertTypedName"
          }
        },
        "issuerAlternativeNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertTypedName"
          }
        },
        "issuerID": {
          "type": "string"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int32"
        },
        "notAfter": {
          "type": "integer",
          "format": "int32"
        },
        "notBefore": {
          "type": "integer",
          "format": "int32"
        },
        "publicKeyAlgorithm": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1": {
          "type": "string"
        },
        "signatureAlgorithm": {
          "type": "string"
        },
        "signatureAlgorithmOid": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertTypedName"
          }
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertTypedName"
          }
        },
        "subjectID": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SslCertWithHostPage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "firstSeen": {
                "type": "integer",
                "format": "int32"
              },
              "lastSeen": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              },
              "id": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              },
              "bgpPrefix": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "sha1": {
                "type": "string"
              },
              "cert": {
                "$ref": "#/definitions/SslCert"
              }
            }
          }
        }
      }
    },
    "SslCertHostPage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SslCertHost"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SslCertHost": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "firstSeen": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CertTypedName": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RRSet": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "firstSeen": {
          "type": "string"
        },
        "lastSeen": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rrtype": {
          "type": "string"
        }
      }
    },
    "RRSets": {
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RRSet"
          }
        }
      }
    },
    "WhoisResult": {
      "type": "object",
      "properties": {
        "results": {
          "type": "integer",
          "format": "int32"
        },
        "domains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhoisDomain"
          }
        }
      }
    },
    "WhoisContact": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        }
      }
    },
    "WhoisDomain": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "registrar": {
          "type": "string"
        },
        "whoisServer": {
          "type": "string"
        },
        "registered": {
          "type": "string"
        },
        "registryUpdatedAt": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "nameServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registrant": {
          "$ref": "#/definitions/WhoisContact"
        },
        "admin": {
          "$ref": "#/definitions/WhoisContact"
        },
        "billing": {
          "$ref": "#/definitions/WhoisContact"
        },
        "tech": {
          "$ref": "#/definitions/WhoisContact"
        },
        "zone": {
          "$ref": "#/definitions/Empty"
        },
        "text": {
          "type": "string"
        },
        "lastLoadedAt": {
          "type": "string"
        }
      }
    },
    "HostAttributeFacetQueryResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last": {
          "type": "boolean"
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        }
      }
    },
    "HostAttributeContentResult": {
      "type": "object",
      "properties": {
        "firstSeen": {
          "type": "integer",
          "format": "int64"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "attributeValue": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        }
      }
    },
    "HostPairsContentResult": {
      "type": "object",
      "properties": {
        "firstSeen": {
          "type": "integer",
          "format": "int64"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "childCount": {
          "type": "integer",
          "format": "int32"
        },
        "childHostname": {
          "type": "string"
        },
        "childScore": {
          "type": "number",
          "format": "float"
        },
        "pairScore": {
          "type": "number",
          "format": "float"
        },
        "parentCount": {
          "type": "integer",
          "format": "int32"
        },
        "parentHostname": {
          "type": "string"
        },
        "parentScore": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "HostComponentContentResult": {
      "type": "object",
      "properties": {
        "firstSeen": {
          "type": "integer",
          "format": "int64"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "webComponentVersion": {
          "type": "string"
        },
        "webComponentName": {
          "type": "string"
        },
        "webComponentCategory": {
          "type": "string"
        }
      }
    },
    "HostCacheContentResult": {
      "type": "object",
      "properties": {
        "firstSeen": {
          "type": "integer",
          "format": "int64"
        },
        "lastSeen": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "cookieDomain": {
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        }
      }
    },
    "HostAttributeResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostAttributeContentResult"
          }
        },
        "facetResultPages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetQueryResult": {
          "$ref": "#/definitions/HostAttributeFacetQueryResult"
        },
        "highlighted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxScore": {
          "type": "number",
          "format": "float"
        },
        "facetFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetPivotFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        }
      }
    },
    "HostPairsResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostPairsContentResult"
          }
        },
        "facetResultPages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetQueryResult": {
          "$ref": "#/definitions/HostAttributeFacetQueryResult"
        },
        "highlighted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxScore": {
          "type": "number",
          "format": "float"
        },
        "facetFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetPivotFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        }
      }
    },
    "HostComponentsResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostComponentContentResult"
          }
        },
        "facetResultPages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetQueryResult": {
          "$ref": "#/definitions/HostAttributeFacetQueryResult"
        },
        "highlighted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxScore": {
          "type": "number",
          "format": "float"
        },
        "facetFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetPivotFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        }
      }
    },
    "HostCookieResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostCacheContentResult"
          }
        },
        "facetResultPages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetQueryResult": {
          "$ref": "#/definitions/HostAttributeFacetQueryResult"
        },
        "highlighted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxScore": {
          "type": "number",
          "format": "float"
        },
        "facetFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetPivotFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalElements": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "object",
          "properties": {
            "sorted": {
              "type": "boolean"
            },
            "unsorted": {
              "type": "boolean"
            },
            "empty": {
              "type": "boolean"
            }
          }
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ]
}