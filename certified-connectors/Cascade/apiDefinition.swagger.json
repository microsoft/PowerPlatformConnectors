{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Cascade Support",
      "url": "https://help.cascade.app",
      "email": "support@cascade.app"
    },
    "description": "Cascade is a cloud-based strategic planning and execution platform for teams to plan, execute, measure, and adapt their strategy all in one place. Connect your Cascade workspace to the rest of your tools to always have the most up-to-date and relevant data that pertains to your strategy.",
    "title": "Cascade",
    "version": "2.0"
  },
  "host": "yourInstance.executestrategy.net",
  "basePath": "/api/v2/",
  "schemes": ["https"],
  "paths": {
    "/goals": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal",
                      "title": "Goal ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status"
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria"
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow"
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a goal\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private"
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the goal was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "inherited_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the parent Focus Area(s) (only if child goal)",
                        "title": "Inherited Focus Area"
                      },
                      "description": "inherited_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    },
                    "title": {
                      "type": "string",
                      "description": "Whole title of goal with Target and due date",
                      "title": "Title"
                    },
                    "ancestor_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "All parent Goal IDs that this goal will be aligned to",
                        "title": "Ancestor IDs"
                      },
                      "description": "ancestor_ids"
                    },
                    "descendant_ids": {
                      "type": "array",
                      "items": {
                        "description": "All children Goal IDs that are nested underneath this goal",
                        "title": "Descendent IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "descendant_ids"
                    },
                    "issue_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of risks associated with this goal",
                        "title": "Issue IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "issue_ids"
                    },
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of tasks associated with this goal",
                        "title": "Task IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "task_ids"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "tags": ["Goals"],
        "description": "Returns all Goals within an instance.",
        "operationId": "Get-all-goals",
        "summary": "Get all Goals"
      },
      "post": {
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Accept",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status",
                      "enum": ["APPRO", "DRAFT", "ARCHI"]
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria",
                      "enum": ["TARGET-REACHED", "TARGET-DEADLINE-REACHED"]
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow",
                      "enum": ["OVER", "UNDER", "NONE"]
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID",
                      "enum": [1, 2, 3, 4]
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private",
                      "enum": [0, 1]
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type",
                      "enum": [
                        "MANUAL",
                        "SUBGOAL-SUM",
                        "SUBGOAL-MEAN",
                        "WEIGHTED-MEAN",
                        "TASKS"
                      ]
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    }
                  },
                  "description": "goal",
                  "required": [
                    "action",
                    "details",
                    "end_time",
                    "start_time",
                    "weight_id"
                  ]
                }
              },
              "required": ["goal"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status"
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria"
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow"
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a goal\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private"
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the goal was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "inherited_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the parent Focus Area(s) (only if child goal)",
                        "title": "Inherited Focus Area"
                      },
                      "description": "inherited_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    },
                    "title": {
                      "type": "string",
                      "description": "Whole title of goal with Target and due date",
                      "title": "Title"
                    },
                    "ancestor_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "All parent Goal IDs that this goal will be aligned to",
                        "title": "Ancestor IDs"
                      },
                      "description": "ancestor_ids"
                    },
                    "descendant_ids": {
                      "type": "array",
                      "items": {
                        "description": "All children Goal IDs that are nested underneath this goal",
                        "title": "Descendent IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "descendant_ids"
                    },
                    "issue_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of risks associated with this goal",
                        "title": "Issue IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "issue_ids"
                    },
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of tasks associated with this goal",
                        "title": "Task IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "task_ids"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "tags": ["Goals"],
        "description": "Creates a new Goal within an instance.",
        "operationId": "Create-goal",
        "summary": "Create a Goal"
      }
    },
    "/goals/{id}": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Goal to retrieve.",
            "x-ms-summary": "Goal ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal",
                      "title": "Goal ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status"
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria"
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow"
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a goal\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private"
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the goal was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "inherited_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the parent Focus Area(s) (only if child goal)",
                        "title": "Inherited Focus Area"
                      },
                      "description": "inherited_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    },
                    "title": {
                      "type": "string",
                      "description": "Whole title of goal with Target and due date",
                      "title": "Title"
                    },
                    "ancestor_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "All parent Goal IDs that this goal will be aligned to",
                        "title": "Ancestor IDs"
                      },
                      "description": "ancestor_ids"
                    },
                    "descendant_ids": {
                      "type": "array",
                      "items": {
                        "description": "All children Goal IDs that are nested underneath this goal",
                        "title": "Descendent IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "descendant_ids"
                    },
                    "issue_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of risks associated with this goal",
                        "title": "Issue IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "issue_ids"
                    },
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of tasks associated with this goal",
                        "title": "Task IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "task_ids"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "tags": ["Goals"],
        "description": "Returns a single Goal based off of its Goal ID.",
        "operationId": "Get-single-goal",
        "summary": "Get single Goal"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "summary": "Delete Goal",
        "description": "Deletes a Goal based off of its Goal ID.",
        "operationId": "Delete-goal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Goal to delete.",
            "x-ms-summary": "Goal ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ]
      },
      "put": {
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Goal to update.",
            "x-ms-summary": "Goal ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status",
                      "enum": ["APPRO", "DRAFT", "ARCHI"]
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria",
                      "enum": ["TARGET-REACHED", "TARGET-DEADLINE-REACHED"]
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow",
                      "enum": ["OVER", "UNDER", "NONE"]
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID",
                      "enum": [1, 2, 3, 4]
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private"
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type",
                      "enum": [
                        "MANUAL",
                        "SUBGOAL-SUM",
                        "SUBGOAL-MEAN",
                        "WEIGHTED-MEAN",
                        "TASKS"
                      ]
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "inherited_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the parent Focus Area(s) (only if child goal)",
                        "title": "Inherited Focus Area"
                      },
                      "description": "inherited_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal",
                      "title": "Goal ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that the goal belongs to",
                      "title": "Role ID"
                    },
                    "creator_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the user who created the goal",
                      "title": "Creator ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "States whether goal is active, archived or in draft form",
                      "title": "Status"
                    },
                    "completion_criteria": {
                      "type": "string",
                      "description": "Criteria to determine when the goal is complete",
                      "title": "Completion Criteria"
                    },
                    "target_flow": {
                      "type": "string",
                      "description": "The tracking direction of the goal",
                      "title": "Target Flow"
                    },
                    "action": {
                      "type": "string",
                      "description": "First word of goal's title \u2013 This is typically the action word",
                      "title": "Action"
                    },
                    "details": {
                      "type": "string",
                      "description": "Reminder of the goal's title - After the 'Action'",
                      "title": "Details"
                    },
                    "initial": {
                      "type": "number",
                      "format": "double",
                      "description": "Initial value of the goal\u2019s Progress",
                      "title": "Initial"
                    },
                    "progress": {
                      "type": "number",
                      "format": "double",
                      "description": "Current Progress of a goal",
                      "title": "Progress"
                    },
                    "target": {
                      "type": "number",
                      "format": "double",
                      "description": "Expected Target of the goal",
                      "title": "Target"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Intended start time of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Time"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "Expected end time of the goal, in Unix time or ISO 8601 format",
                      "title": "End Time"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a goal\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "is_private": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the goal is private",
                      "title": "Is Private"
                    },
                    "tracking_type": {
                      "type": "string",
                      "description": "Tracking schema used to track the goal",
                      "title": "Tracking Type"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the goal was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "direct_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "description": "ID of the parent Focus Area(s) (only if top-level goal)",
                        "title": "Direct Focus Area",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "direct_focus_area_ids"
                    },
                    "inherited_focus_area_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the parent Focus Area(s) (only if child goal)",
                        "title": "Inherited Focus Area"
                      },
                      "description": "inherited_focus_area_ids"
                    },
                    "aligned_from_ids": {
                      "type": "array",
                      "items": {
                        "description": "Goal IDs of child goals that are nested under this goal",
                        "title": "Aligned from IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "aligned_from_ids"
                    },
                    "aligned_to_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Goal IDs of parent goals that the goal is aligned to",
                        "title": "Aligned to IDs"
                      },
                      "description": "aligned_to_ids"
                    },
                    "title": {
                      "type": "string",
                      "description": "Whole title of goal with Target and due date",
                      "title": "Title"
                    },
                    "ancestor_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "All parent Goal IDs that this goal will be aligned to",
                        "title": "Ancestor IDs"
                      },
                      "description": "ancestor_ids"
                    },
                    "descendant_ids": {
                      "type": "array",
                      "items": {
                        "description": "All children Goal IDs that are nested underneath this goal",
                        "title": "Descendent IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "descendant_ids"
                    },
                    "issue_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of risks associated with this goal",
                        "title": "Issue IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "issue_ids"
                    },
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "description": "IDs of tasks associated with this goal",
                        "title": "Task IDs",
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "task_ids"
                    }
                  },
                  "description": "goal"
                }
              }
            }
          }
        },
        "tags": ["Goals"],
        "description": "Updates an existing Goal's details based off of its Goal ID.",
        "operationId": "Update-goal",
        "summary": "Update a Goal"
      }
    },
    "/issues": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Risk",
                      "title": "Risk ID"
                    },
                    "issue": {
                      "type": "string",
                      "description": "Title of the Risk",
                      "title": "Issue"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical"
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Risk",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role that created Risk",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Risk is associated with",
                      "title": "Goal ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of the Risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of the Risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue"
                }
              }
            }
          }
        },
        "tags": ["Issues"],
        "description": "Returns all Risks within an instance.",
        "operationId": "Get-all-risks",
        "summary": "Get all Risks"
      },
      "post": {
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "issue": {
                      "type": "string",
                      "description": "Title of the Risk",
                      "title": "Issue"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical",
                      "enum": [0, 1]
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved",
                      "enum": [0, 1]
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role that created Risk",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Risk is associated with",
                      "title": "Goal ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of the Risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of the Risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue",
                  "required": ["goal_id", "issue"]
                }
              },
              "required": ["issue"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of Risk",
                      "title": "Risk ID"
                    },
                    "issue": {
                      "type": "string",
                      "description": "Title of the Risk",
                      "title": "Issue"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical"
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Risk",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role that created Risk",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Risk is associated with",
                      "title": "Goal ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of the Risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of the Risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue"
                }
              }
            }
          }
        },
        "tags": ["Issues"],
        "description": "Creates a new Risk on an existing Cascade Goal.",
        "operationId": "Create-risk",
        "summary": "Create a Risk"
      }
    },
    "/issues/{id}": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Risk to retrieve.",
            "x-ms-summary": "Risk ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of Risk",
                      "title": "Risk ID"
                    },
                    "issue": {
                      "type": "string",
                      "description": "Title of the Risk",
                      "title": "Title"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical"
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the risk was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Risk",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role associated that created Risk",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the risk is associated with",
                      "title": "Goal ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Expected due date of the risk, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Risk Template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue"
                }
              }
            }
          }
        },
        "tags": ["Issues"],
        "description": "Returns a single Risk based off of its Risk ID.",
        "operationId": "Get-single-risk",
        "summary": "Get single Risk"
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Risk to delete.",
            "x-ms-summary": "Risk ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "tags": ["Issues"],
        "description": "Deletes a Risk based off of its Risk ID.",
        "operationId": "Delete-risk",
        "summary": "Delete Risk"
      },
      "put": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Risk to update.",
            "x-ms-summary": "Risk ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "issue": {
                      "type": "string",
                      "description": "Title of the Risk",
                      "title": "Issue"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical",
                      "enum": [0, 1]
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved",
                      "enum": [0, 1]
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role that created Risk",
                      "title": "Role ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the risk template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of the Risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of the Risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "issue": {
                  "type": "object",
                  "properties": {
                    "issue": {
                      "type": "integer",
                      "description": "Title of the Risk",
                      "title": "Issue"
                    },
                    "is_critical": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is critical or not",
                      "title": "Is Critical"
                    },
                    "is_resolved": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Risk is resolved or not",
                      "title": "Is Resolved"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Risk",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of role that created Risk",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Risk is associated with",
                      "title": "Goal ID"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the goal was created, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the goal template",
                      "title": "Entity Template ID"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "properties": {
                        "CA1573011281053": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Likelihood of the Risk",
                          "title": "Likelihood"
                        },
                        "CA1573011296755": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Consequence of the Risk",
                          "title": "Consequence"
                        }
                      },
                      "description": "custom_attributes"
                    }
                  },
                  "description": "issue"
                }
              }
            }
          }
        },
        "tags": ["Issues"],
        "description": "Updates an existing Risk's details based off of its Risk ID.",
        "operationId": "Update-risk",
        "summary": "Update Risk"
      }
    },
    "/tasks": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the Task",
                        "title": "ID"
                      },
                      "task": {
                        "type": "string",
                        "description": "Title of the Task",
                        "title": "Task"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A Task's description",
                        "title": "Description"
                      },
                      "is_complete": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Whether Task is completed or not",
                        "title": "Is Complete"
                      },
                      "user_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the user that created the Task",
                        "title": "User ID"
                      },
                      "role_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the role that created the Task",
                        "title": "Role ID"
                      },
                      "completed_user_id": {
                        "type": "integer",
                        "description": "ID of user that completed the Task",
                        "title": "Completed User ID"
                      },
                      "goal_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the Goal the Task is associated with",
                        "title": "Goal ID"
                      },
                      "start_date": {
                        "type": "string",
                        "description": "Intended start date of the Task, in Unix time or ISO 8601 format",
                        "title": "Start Date"
                      },
                      "due_date": {
                        "type": "string",
                        "description": "Intended due date of the Task, in Unix time or ISO 8601 format",
                        "title": "Due Date"
                      },
                      "weight_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                        "title": "Weight ID"
                      },
                      "entity_template_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The ID of the Task template",
                        "title": "Entity Template ID"
                      }
                    }
                  },
                  "description": "tasks"
                }
              }
            }
          }
        },
        "description": "Returns all Tasks within an instance.",
        "operationId": "Get-all-tasks",
        "summary": "Get all Tasks"
      },
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "type": "string",
                      "description": "Title of the Task",
                      "title": "Task"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A Task's description",
                      "title": "Description"
                    },
                    "is_complete": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Task is completed or not",
                      "title": "Is Complete",
                      "enum": [0, 1]
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that created the Task",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Task is associated with",
                      "title": "Goal ID"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Intended start date of the Task, in Unix time or ISO 8601 format",
                      "title": "Start Date"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Intended due date of the Task, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID",
                      "enum": [1, 2, 3, 4]
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Task template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "task",
                  "required": ["goal_id", "task"]
                }
              },
              "required": ["task"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Task",
                      "title": "ID"
                    },
                    "task": {
                      "type": "string",
                      "description": "Title of the Task",
                      "title": "Task"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A Task's description",
                      "title": "Description"
                    },
                    "is_complete": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Task is completed or not",
                      "title": "Is Complete"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Task",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that created the Task",
                      "title": "Role ID"
                    },
                    "completed_user_id": {
                      "type": "string",
                      "description": "ID of user that completed the Task",
                      "title": "Completed User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Task is associated with",
                      "title": "Goal ID"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Intended start date of the Task, in Unix time or ISO 8601 format",
                      "title": "Start Date"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Intended due date of the Task, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID",
                      "enum": [1, 2, 3, 4]
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Task template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "tasks"
                }
              }
            }
          }
        },
        "tags": ["Tasks"],
        "description": "Creates a new Task on an existing Cascade Goal.",
        "operationId": "Create-task",
        "summary": "Create a Task"
      }
    },
    "/tasks/{id}": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Task to retrieve.",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the task",
                      "title": "ID"
                    },
                    "task": {
                      "type": "string",
                      "description": "Title of task",
                      "title": "Task Title"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A Task's description",
                      "title": "Description"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the task was created, in Unix time or ISO 8601 format",
                      "title": "Created at"
                    },
                    "is_complete": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the task is complete or not. 0 = No;  1 = Yes",
                      "title": "Is Complete"
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Date when the task was completed, in Unix time or ISO 8601 format",
                      "title": "Completed At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Last time task was updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of user that owns the task",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "description": "ID of the role that owns the task",
                      "title": "Role ID"
                    },
                    "completed_user_id": {
                      "type": "integer",
                      "description": "ID of user that completed the task",
                      "title": "Completed User ID",
                      "format": "int32"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the task resides on",
                      "title": "Goal ID"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Intended start date of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Date"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the task is due, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a tasks priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Task Template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "task"
                }
              }
            }
          }
        },
        "tags": ["Tasks"],
        "description": "Returns a single Task based off of its Task ID.",
        "operationId": "Get-single-task",
        "summary": "Get single Task"
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Task to delete.",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "tags": ["Tasks"],
        "description": "Deletes a Task based off of its Task ID.",
        "operationId": "Delete-task",
        "summary": "Delete Task"
      },
      "put": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Task to update.",
            "x-ms-summary": "Task ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "type": "string",
                      "description": "Title of the Task",
                      "title": "Task"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A Task's description",
                      "title": "Description"
                    },
                    "is_complete": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether Task is completed or not",
                      "title": "Is Complete",
                      "enum": [0, 1]
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the role that created the Task",
                      "title": "Role ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Task is associated with",
                      "title": "Goal ID"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Intended start date of the Task, in Unix time or ISO 8601 format",
                      "title": "Start Date"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Intended due date of the Task, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a Task\u2019s priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID",
                      "enum": [1, 2, 3, 4]
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Task template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "task"
                }
              },
              "required": ["task"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the task",
                      "title": "ID"
                    },
                    "task": {
                      "type": "string",
                      "description": "Title of task",
                      "title": "Task Title"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A comment's text",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the task was created, in Unix time or ISO 8601 format",
                      "title": "Created at"
                    },
                    "is_complete": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether the task is complete or not. 0 = No;  1 = Yes",
                      "title": "Is Complete"
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Date when the task was completed, in Unix time or ISO 8601 format",
                      "title": "Completed At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Last time task was updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of user that owns the task",
                      "title": "User ID"
                    },
                    "role_id": {
                      "type": "integer",
                      "description": "ID of the role that owns the task",
                      "title": "Role ID",
                      "format": "int32"
                    },
                    "completed_user_id": {
                      "type": "integer",
                      "description": "ID of user that completed the task",
                      "title": "Completed User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the task resides on",
                      "title": "Goal ID"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Intended start date of the goal, in Unix time or ISO 8601 format",
                      "title": "Start Date"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Date when the task is due, in Unix time or ISO 8601 format",
                      "title": "Due Date"
                    },
                    "weight_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The weight of a tasks priority. The highest priority is 1. The lowest is 4.",
                      "title": "Weight ID"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Task Template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "task"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": ["Tasks"],
        "description": "Updates an existing Task's details based off of its Task ID.",
        "operationId": "Update-task",
        "summary": "Update Task"
      }
    },
    "/updates": {
      "get": {
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Update",
                      "title": "ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of Update",
                      "title": "Type"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the Update was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the Update was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Update",
                      "title": "User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "deleted": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether an update has been deleted",
                      "title": "Deleted"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update"
                }
              }
            }
          }
        },
        "tags": ["Updates"],
        "description": "Returns all Updates within an instance.",
        "operationId": "Get-all-updates",
        "summary": "Get all Updates"
      },
      "post": {
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update",
                  "required": ["comment", "goal_id"]
                }
              },
              "required": ["update"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the Update",
                      "title": "ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of Update",
                      "title": "Type"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the Update was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the Update was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Update",
                      "title": "User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "deleted": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether an update has been deleted",
                      "title": "Deleted"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update"
                }
              }
            }
          }
        },
        "tags": ["Updates"],
        "description": "Creates a new Update on an existing Cascade Goal.",
        "operationId": "Create-update",
        "summary": "Create an Update"
      }
    },
    "/updates/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Update",
                      "title": "ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of Update",
                      "title": "Type"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the Update was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the Update was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Update",
                      "title": "User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "deleted": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether an update has been deleted",
                      "title": "Deleted"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update"
                }
              }
            }
          }
        },
        "summary": "Get single Update",
        "operationId": "Get-single-update",
        "description": "Returns a single Update based off of its Update ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Update to retrieve.",
            "x-ms-summary": "Update ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Update to delete.",
            "x-ms-summary": "Update ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "code"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                }
              }
            }
          }
        },
        "tags": ["Updates"],
        "description": "Deletes an Update based off of its Update ID.",
        "operationId": "Delete-update",
        "summary": "Delete Update"
      },
      "put": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Update to revise.",
            "x-ms-summary": "Update ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Instance",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "https://{instance}.executestrategy.net - Your Cascade instance name is the subdomain part of your site url.",
            "x-ms-summary": "Cascade Instance"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the Update was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the Update was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "deleted": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether an update has been deleted",
                      "title": "Deleted"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update"
                }
              },
              "required": ["update"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Update",
                      "title": "ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of Update",
                      "title": "Type"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A comment associated with the Update",
                      "title": "Comment"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date when the Update was created, in Unix time or ISO 8601 format",
                      "title": "Created At"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date when the Update was last updated, in Unix time or ISO 8601 format",
                      "title": "Updated At"
                    },
                    "user_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the user that created the Update",
                      "title": "User ID"
                    },
                    "goal_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "ID of the Goal the Update is associated with",
                      "title": "Goal ID"
                    },
                    "deleted": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Whether an update has been deleted",
                      "title": "Deleted"
                    },
                    "entity_template_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ID of the Update template",
                      "title": "Entity Template ID"
                    }
                  },
                  "description": "update"
                }
              }
            }
          }
        },
        "tags": ["Updates"],
        "description": "Revises an existing Update's details based off of its Update ID.",
        "operationId": "Update-update",
        "summary": "Update an Update"
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.cascade.app"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.cascade.app/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Collaboration"
    }
  ],
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ]
}
