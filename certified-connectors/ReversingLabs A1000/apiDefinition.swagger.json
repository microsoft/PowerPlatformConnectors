{
  "swagger": "2.0",
  "info": {
    "title": "ReversingLabs A1000",
    "version": "1.1",
    "description": "ReversingLabs A1000 Malware Analysis Appliance integrates the ReversingLabs TitaniumCore automated static analysis technology and the TitaniumCloud File Reputation Service database. The REST Services APIs enable analysts to input samples, access unpacked files and view extracted Proactive Threat Indicators. The platform performs an in-depth static analysis of a comprehensive array of file types including Windows, Linux, Mac OS, iOS, Android, email attachments, documents and firmware.",
    "contact": {
      "name": "ReversingLabs support",
      "url": "https://support.reversinglabs.com/",
      "email": "support@reversinglabs.com"
    }
  },
  "host": "a1000.reversinglabs.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/samples/v2/list/details/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "summary": "Retrieve the detailed analysis report",
        "description": "Retrieve a detailed analysis report for local samples.",
        "operationId": "Retrieve-detailed-report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Consult the A1000 API documentation for the supported values in the 'fields' parameter.",
            "schema": {
              "type": "object",
              "properties": {
                "hash_values": {
                  "title": "hash_values",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "hash_values"
                },
                "fields": {
                  "title": "fields",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Fields that will be returned in the report. Consult the A1000 API documentation for the supported values in the 'fields' parameter."
                },
                "skip_reanalysis": {
                  "type": "string",
                  "description": "Lowercase stringified boolean",
                  "title": "skip_reanalysis"
                }
              },
              "required": [
                "hash_values"
              ]
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "400": {
            "description": "Malformed hash or invalid field name."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid token."
          },
          "404": {
            "description": "Malformed endpoint."
          }
        }
      }
    },
    "/api/uploads/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "summary": "Submit a sample for analysis",
        "description": "Submit a sample for analysis from a local directory or from a URL.",
        "operationId": "Submit-sample-for-analysis",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Submit a sample from a file. Required but mutually exclusive with the 'url' parameter.",
            "x-ms-summary": "File"
          },
          {
            "name": "url",
            "in": "formData",
            "type": "string",
            "description": "Submit a sample from a URL. Required but mutually exclusive with the 'file' parameter.",
            "x-ms-summary": "Url"
          },
          {
            "name": "filename",
            "in": "formData",
            "type": "string",
            "description": "Custom file name. Works only with the 'file' parameter.",
            "x-ms-summary": "Filename"
          },
          {
            "name": "analysis",
            "in": "formData",
            "type": "string",
            "enum": [
              "cloud"
            ],
            "description": "Select analysis type.",
            "x-ms-summary": "Analysis"
          },
          {
            "name": "tags",
            "in": "formData",
            "type": "string",
            "description": "Set custom tags. Works only with the 'file' parameter.",
            "x-ms-summary": "Tags"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "description": "Set a custom comment. Works only with the 'file' parameter.",
            "x-ms-summary": "Comment"
          },
          {
            "name": "crawler",
            "in": "formData",
            "type": "string",
            "description": "Select a crawler type. Works only with the 'url' parameter.",
            "enum": [
              "local",
              "cloud"
            ],
            "x-ms-summary": "Crawler"
          },
          {
            "name": "archive_password",
            "in": "formData",
            "type": "string",
            "description": "Password for an archive.",
            "x-ms-summary": "Archive Password"
          },
          {
            "name": "rl_cloud_sandbox_platform",
            "in": "formData",
            "type": "string",
            "enum": [
              "windows7",
              "windows10",
              "macos_11"
            ],
            "description": "Cloud sandbox platform.",
            "x-ms-summary": "RL Cloud Sandbox Platform"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "400": {
            "description": "Malformed hash or invalid field name."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid token."
          },
          "405": {
            "description": "Not Allowed. It is not possible to upload samples while the appliance is in maintenance mode."
          },
          "413": {
            "description": "Request Entity Too Large. The maximum supported file size for upload on A1000 is 400 MB."
          },
          "429": {
            "description": "Too Many Requests. This happens if system resources are depleted. This can mean that the system is using 90% or more of its available memory, or that it holds more than 50 items in the processing queue. Alternatively, this response may indicate that the TitaniumCloud quota has been exceeded."
          },
          "503": {
            "description": "The appliance storage space is close to being full. When there is less than 25% of free space on the disk, it is not possible to upload new samples until disk space is freed up."
          }
        }
      }
    },
    "/api/v2/samples/{hash_value}/ticore/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve the static analysis report",
        "description": "Retrieve TitaniumCore analysis results for a local sample.",
        "operationId": "Retrieve-static-analysis-report",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Fields that will be returned in the report. Consult the A1000 API documentation for the supported values in the 'fields' parameter.",
            "x-ms-summary": "Fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/api/rl_dynamic_analysis/export/summary/{hash_value}/{format}/{endpoint}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve the dynamic analysis report",
        "description": "Create and download a PDF or HTLM report for samples that have gone through dynamic analysis in the ReversingLabs Cloud Sandbox.",
        "operationId": "Retrieve-dynamic-analysis-report",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The hash value must be a SHA-1 string.",
            "x-ms-summary": "Hash Value"
          },
          {
            "name": "format",
            "description": "Analysis report format",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "html",
              "pdf"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "endpoint",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "create",
              "download",
              "status"
            ],
            "description": "Select a task type.",
            "x-ms-summary": "Endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/samples/v2/list/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "summary": "Retrieve summary analysis report",
        "description": "Retrieve a summary analysis report for local samples.",
        "operationId": "Retrieve-summary-report",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Consult the A1000 API documentation for the supported values in the 'fields' parameter. If the 'include_networkthreatintelligence' parameter is set to 'true', 'networkthreatintelligence' and 'domainthreatintelligence' have to be included in the 'fields' parameter.",
            "schema": {
              "type": "object",
              "properties": {
                "hash_values": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "hash_values"
                  },
                  "description": "hash_values"
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "fields"
                  },
                  "description": "Consult the A1000 API documentation for the supported values in the 'fields' parameter. If the 'include_networkthreatintelligence' parameter is set to 'true', 'networkthreatintelligence' and 'domainthreatintelligence' have to be included in the 'fields' parameter."
                },
                "include_networkthreatintelligence": {
                  "type": "string",
                  "description": "Lowercase stringified boolean. Consult the A1000 API documentation for the supported values in the 'fields' parameter. If the 'include_networkthreatintelligence' parameter is set to 'true', 'networkthreatintelligence' and 'domainthreatintelligence' have to be included in the 'fields' parameter.",
                  "title": "include_networkthreatintelligence"
                },
                "skip_reanalysis": {
                  "type": "string",
                  "description": "Lowercase stringified boolean.",
                  "title": "skip_reanalysis"
                }
              },
              "required": [
                "hash_values"
              ]
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Malformed hash or invalid field name."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid token."
          },
          "404": {
            "description": "Malformed endpoint."
          }
        }
      }
    },
    "/api/samples/status/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "summary": "Retrieve processing status for files",
        "description": "Check status of submitted files.",
        "operationId": "Retrieve-processing-status-files",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Filter hashes by their status. Consult the documentation for available values.",
            "x-ms-summary": "Status"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hash_values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "hash_values"
                }
              },
              "required": [
                "hash_values"
              ]
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Validation error, JSON parse error, or other error related to the validity of the data passed in the request."
          }
        }
      }
    },
    "/api/uploads/v2/url-samples/{ID}": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve processing status for URL-s",
        "description": "Check status of submitted URL-s.",
        "operationId": "Retrieve-processing-status-urls",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "Identification number of the URL submission task.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/samples/v3/{hash_value}/classification/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "description": "Retrieve classification status for a sample.",
        "summary": "Retrieve classification for a sample",
        "operationId": "Retrieve-classification-for-sample",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash Value"
          },
          {
            "name": "localonly",
            "in": "query",
            "type": "integer",
            "description": "If set to 1, the request will only look for local samples on the appliance.",
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Localonly"
          },
          {
            "name": "av_scanners",
            "in": "query",
            "type": "integer",
            "description": "Include AV scanners summary information in the response.",
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "AV Scanners"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Invalid or malformed hash."
          },
          "429": {
            "description": "Too many requests (daily TitaniumCloud query max limit reached)."
          },
          "503": {
            "description": "Service unavailable (TitaniumCloud API-related errors, i.e., Unauthorized)."
          }
        }
      }
    },
    "/api/pdf/{hash}/create": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Create PDF report",
        "description": "Create a PDF sample analysis report.",
        "operationId": "Create-pdf-report",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid API token."
          },
          "404": {
            "description": "Malformed hash. / Sample does not exist on the appliance."
          }
        }
      }
    },
    "/api/pdf/{hash}/status": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Check PDF report creation status",
        "description": "Check the creation status of a requested PDF report.",
        "operationId": "Check-pdf-report-status",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "PDF is ready for download. / The sample exists on the appliance, but there was no initial PDF creation request."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid token."
          },
          "404": {
            "description": "Malformed hash. / Sample does not exist on the appliance."
          }
        }
      }
    },
    "/api/pdf/{hash}/download": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Download PDF Report",
        "description": "Download the generated PDF analysis Report.",
        "operationId": "Download-pdf-report",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash string",
            "x-ms-summary": "Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "403": {
            "description": "Authentication credentials were not provided. / Invalid token."
          },
          "404": {
            "description": "Malformed hash. / Sample does not exist on the appliance. / The sample exists on the appliance, but there was no initial PDF creation request."
          }
        }
      }
    },
    "/api/network-threat-intel/url/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve information for a URL",
        "description": "Returns network threat intelligence about the provided URL.",
        "operationId": "Retrieve-URL-intelligence",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "URL string",
            "x-ms-summary": "Url"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/network-threat-intel/domain/{domain}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve information for a domain",
        "description": "Returns network threat intelligence about the provided domain.",
        "operationId": "Retrieve-domain-intelligence",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Domain string",
            "x-ms-summary": "Domain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/network-threat-intel/ip/{ip}/report/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve information for an IP address",
        "operationId": "Retrieve-ip-intelligence",
        "description": "Returns network threat intelligence about the provided IP address.",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IP address string",
            "x-ms-summary": "Ip"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/network-threat-intel/ip/{ip}/resolutions/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve IP address resolutions",
        "description": "Provides a list of IP-to-domain mappings.",
        "operationId": "Retrieve-ip-to-domain-resolutions",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IP address string",
            "x-ms-summary": "Ip"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "SHA1 hash of the next page of results.",
            "x-ms-summary": "Page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Results per page",
            "x-ms-summary": "Page Size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/network-threat-intel/ip/{ip}/urls/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve URL-s hosted on the IP address",
        "description": "Returns a list of URLs hosted on the submitted IP address.",
        "operationId": "Retrieve-urls-from-ip",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IP address string",
            "x-ms-summary": "Ip"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "SHA1 hash of the next page of results.",
            "x-ms-summary": "Page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Results per page",
            "x-ms-summary": "Page Size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/network-threat-intel/ip/{ip}/downloaded_files/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "summary": "Retrieve a list of files from the IP address",
        "description": "Provides a list of hashes and classifications for files found on the submitted IP address.",
        "operationId": "Retrieve-files-from-ip",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IP address string",
            "x-ms-summary": "Ip"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "SHA1 hash of the next page of results,",
            "x-ms-summary": "Page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Results per page",
            "x-ms-summary": "Page Size"
          },
          {
            "name": "extended",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include additional information on downloaded files.",
            "x-ms-summary": "Extended"
          },
          {
            "name": "classification",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only samples with this classification",
            "x-ms-summary": "Classification"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/api/samples/v2/search/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "summary": "Perform advanced search",
        "description": "Search for samples available on the local A1000 instance and TitaniumCloud using the Advanced Search capabilities.",
        "operationId": "Perform-advanced-search",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Consult the A1000 API documentation for possible 'query' and 'sort' options.",
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "query"
                },
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Page number."
                },
                "records_per_page": {
                  "type": "integer",
                  "format": "int32",
                  "description": "records_per_page"
                },
                "sort": {
                  "type": "string",
                  "description": "Sorting criteria."
                }
              }
            },
            "x-ms-summary": "Body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request. E.g. invalid value for a field, or other validation error."
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        }
      }
    },
    "/api/tag/{sample_hash}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Retrieve User Tags for a sample",
        "description": "Lists existing tags for the requested sample, if there are any.",
        "operationId": "Retrieve-User-Tags-for-sample",
        "parameters": [
          {
            "name": "sample_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash of the sample for which the user wants to list existing User Tags.",
            "x-ms-summary": "Sample hash"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request. E.g. invalid value for a field, or other validation error."
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Delete User Tags from a sample",
        "description": "Removes one or more User Tags from the requested sample.",
        "operationId": "Delete-User-Tags-from-sample",
        "parameters": [
          {
            "name": "sample_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash of the sample from which the user wants to remove one or more User Tags.",
            "x-ms-summary": "Sample hash"
          },
          {
            "name": "body",
            "x-ms-summary": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "tags"
                  },
                  "description": "tags"
                }
              },
              "required": [
                "tags"
              ]
            }
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Create User Tags for a sample",
        "description": "Adds one or more User Tags to the requested sample, regardless of whether the sample already has any tags.",
        "operationId": "Create-User-Tags-for-sample",
        "parameters": [
          {
            "name": "sample_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Sample hash",
            "description": "Hash of the sample to which the user wants to add one or more User Tags."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-summary": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "tags"
                  },
                  "description": "tags"
                }
              },
              "required": [
                "tags"
              ]
            }
          }
        ]
      }
    },
    "/api/samples/{hash_value}/setclassification/{system}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Delete classification for a sample",
        "description": "Delete the classification of a sample.",
        "operationId": "Delete-classification-for-sample",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash value.",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "system",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "'local' or 'ticloud'.",
            "x-ms-summary": "System"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set classification for a sample",
        "description": "Set the classification of a sample.",
        "operationId": "Set-classification-for-sample",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hash value.",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "system",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "'local' or 'ticloud'.",
            "x-ms-summary": "System"
          },
          {
            "name": "classification",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Classification of the sample - goodware, suspicious or malicious",
            "x-ms-summary": "Classification"
          },
          {
            "name": "risk_score",
            "in": "formData",
            "type": "string",
            "description": "If specified, it must be within range for the specified classification. If not specified, a default value is used: goodware: 0, suspicious: 6, malicious: 10",
            "x-ms-summary": "Risk score"
          },
          {
            "name": "threat_platform",
            "in": "formData",
            "type": "string",
            "description": "Define the threat platform.",
            "x-ms-summary": "Threat platform"
          },
          {
            "name": "threat_type",
            "in": "formData",
            "type": "string",
            "description": "Define the threat type.",
            "x-ms-summary": "Threat type"
          },
          {
            "name": "threat_name",
            "in": "formData",
            "type": "string",
            "description": "Define the threat name.",
            "x-ms-summary": "Threat name"
          }
        ]
      }
    },
    "/api/yara/v2/rulesets/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Retrieve a list of YARA rulesets",
        "operationId": "Retrieve-list-of-YARA-rulesets",
        "description": "Retrieve a list of YARA rulesets that are on the A1000 appliance.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only the rulesets matching the specified type are returned in the response. Supported values: my, user, system, all",
            "x-ms-summary": "Type"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only the rulesets matching the specified status are returned in the response. Supported values: all, error, active, disabled, pending, invalid, capped",
            "x-ms-summary": "Status"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only the rulesets matching the specified source are returned in the response. Supported values: all, local, cloud",
            "x-ms-summary": "Source"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Page marker. This parameter cannot be used without page_size.",
            "x-ms-summary": "Page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of results per page. This parameter cannot be used without page",
            "x-ms-summary": "Page size"
          }
        ]
      }
    },
    "/api/yara/ruleset/content/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Retrieve the contents of a YARA ruleset",
        "description": "Retrieve the full contents of the requested ruleset in raw text/plain format.",
        "operationId": "Retrieve-contents-of-YARA-ruleset",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Name of the YARA ruleset to retrieve.",
            "x-ms-summary": "Name"
          }
        ]
      }
    },
    "/api/yara/v2/ruleset/matches/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Retrieve YARA matches for specified rulesets",
        "description": "Retrieve the list of YARA matches (both local and cloud) for requested rulesets.",
        "operationId": "Retrieve-YARA-matches-for-specified-rulesets",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Name of the YARA ruleset for which to retrieve matches.",
            "x-ms-summary": "Name"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Page",
            "description": "Page marker. This parameter cannot be used without page_size."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Page size",
            "description": "Number of results per page. This parameter cannot be used without page."
          }
        ]
      }
    },
    "/api/yara/ruleset/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Delete a YARA ruleset",
        "description": "Delete the specified YARA ruleset and its matches from the appliance.",
        "operationId": "Delete-YARA-ruleset",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the ruleset to delete.",
            "x-ms-summary": "Name"
          },
          {
            "name": "publish",
            "in": "formData",
            "type": "boolean",
            "description": "Determines whether the ruleset deletion should be synchronized to other appliances in the same C1000 cluster.",
            "x-ms-summary": "Publish"
          }
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Create or update a YARA ruleset",
        "description": "Creates a new YARA ruleset if it doesn’t exist. If a ruleset with the specified name already exists, a new revision (update) of the ruleset is created.",
        "operationId": "Create-update-YARA-ruleset",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the ruleset to create or update",
            "x-ms-summary": "Name"
          },
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Content of the ruleset to create or update.",
            "x-ms-summary": "Content"
          },
          {
            "name": "publish",
            "in": "formData",
            "type": "boolean",
            "description": "Determines whether the ruleset should be synchronized to other appliances in the same C1000 cluster.",
            "x-ms-summary": "Publish"
          },
          {
            "name": "ticloud",
            "in": "formData",
            "type": "boolean",
            "description": "Determines whether the ruleset should be synchronized with TitaniumCloud or not.",
            "x-ms-summary": "TiCloud"
          }
        ]
      }
    },
    "/api/yara/ruleset/{enable | disable}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Enable or disable a YARA ruleset",
        "description": "Enables a previously disabled YARA ruleset, or disables a currently enabled YARA ruleset.",
        "operationId": "Enable-disable-YARA-ruleset",
        "parameters": [
          {
            "name": "enable | disable",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Whether to enable or disable the specified ruleset. Options are: enable, disable",
            "x-ms-summary": "enable or disable"
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the ruleset to enable/disable.",
            "x-ms-summary": "Name"
          },
          {
            "name": "publish",
            "in": "formData",
            "type": "boolean",
            "description": "Determines whether the ruleset action should be synchronized to other appliances in the same C1000 cluster.",
            "x-ms-summary": "Publish"
          }
        ]
      }
    },
    "/api/yara/ticloud/time/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Get YARA ruleset synchronization time",
        "description": "Information about the current synchronization status for TitaniumCloud-enabled rulesets.",
        "operationId": "Get-YARA-ruleset-synchronization-time",
        "parameters": []
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Set YARA ruleset synchronization time",
        "description": "Modify the TitaniumCloud synchronization time for TitaniumCloud-enabled YARA rulesets.",
        "operationId": "Set-YARA-ruleset-synchronization-time",
        "parameters": [
          {
            "name": "time",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Date and time for YARA TitaniumCloud synchronization. Format should be UTC (YYYY-MM-DD hh:mm:ss) or Unix epoch time as the number of seconds since 1970-01-01",
            "x-ms-summary": "Time"
          }
        ]
      }
    },
    "/api/uploads/local-retro-hunt/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Check YARA Retro status on the appliance",
        "description": "Check the status of Local Retro on the A1000 appliance.",
        "operationId": "Check-YARA-Retro-status-on-appliance",
        "parameters": []
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Start or stop a YARA Local Retro scan",
        "description": "Allows users to initiate the Local Retro scan on the A1000 appliance, and stop the Local Retro scan that is in progress on the appliance.",
        "operationId": "Start-stop-YARA-Retro-scan",
        "parameters": [
          {
            "name": "operation",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the operation to perform for YARA Local Retro scan. Accepted values: START, STOP",
            "x-ms-summary": "Operation"
          }
        ]
      }
    },
    "/api/yara/ruleset/{ruleset_name}/cloud-retro-hunt/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "YARA Cloud Retro status",
        "description": "Check the status of Cloud Retro for the specified YARA ruleset.",
        "operationId": "YARA-Cloud-Retro-status",
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the ruleset",
            "x-ms-summary": "Ruleset name"
          }
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Manage YARA Cloud Retro scans",
        "description": "Start and stop a Cloud Retro scan for a specified ruleset on the A1000 appliance, as well as to clear all Cloud Retro results for the ruleset.",
        "operationId": "Manage-YARA-Cloud-Retro-scans",
        "parameters": [
          {
            "name": "ruleset_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the YARA ruleset that the Cloud Retro scan should be run on.",
            "x-ms-summary": "Ruleset name"
          },
          {
            "name": "operation",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the operation to perform for YARA Cloud Retro scan. Accepted values: START, STOP, CLEAR",
            "x-ms-summary": "Operation"
          }
        ]
      }
    },
    "/api/samples/containers/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "List containers for every requested hash",
        "description": "Get a list of all top-level containers from which the requested sample has been extracted during analysis.",
        "operationId": "List-containers-for-every-hash",
        "parameters": [
          {
            "name": "hash_values",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of one or more hash values for which to retrieve the top-level container hashes.",
            "x-ms-summary": "Hash values"
          }
        ]
      }
    },
    "/api/samples/{hash_value}/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Delete a sample",
        "description": "Delete a sample from A1000.",
        "operationId": "Delete-sample",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value",
            "description": "Hash of the sample that should be deleted from the appliance."
          }
        ]
      }
    },
    "/api/samples/{hash_value}/unpacked/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Download files extracted from a local sample",
        "description": "Download files extracted from the requested sample to the local storage.",
        "operationId": "Download-files-extracted-from-local-sample",
        "parameters": [
          {
            "name": "hash_value",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Hash value",
            "description": "Hash of the sample for which the extracted files should be downloaded."
          }
        ]
      }
    },
    "/api/samples/v2/analyze_bulk/": {
      "parameters": [
        {
          "$ref": "#/parameters/user-agent"
        }
      ],
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden. This response is returned when the request isn’t authenticated"
          },
          "404": {
            "description": "Not found. E.g. wrong URL."
          }
        },
        "summary": "Reanalyze multiple samples",
        "description": "Reanalyze multiple samples with selected services.",
        "operationId": "Reanalyze-multiple-samples",
        "parameters": [
          {
            "name": "analysis",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Types of analysis that the requested sample(s) should be queued for.  If providing multiple values, they should be comma-separated. Supported values: assemblyline, cloud, core, cape, cisco_secure_malware_analytics, cuckoo, fireeye, joe, rl_dynamic_analysis, vmray_tcbase",
            "x-ms-summary": "Analysis"
          },
          {
            "name": "hash_value",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Hashes of the sample(s) that should be reanalyzed.",
            "x-ms-summary": "Hash value"
          },
          {
            "name": "rl_cloud_sandbox_platform",
            "in": "formData",
            "type": "string",
            "description": "The platform to be used when executing the sample on the RL Cloud Sandbox. Supported values: windows7, windows10, windows11, macos_11, ubuntu_20",
            "x-ms-summary": "RL cloud sandbox platform"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {
    "user-agent": {
      "name": "User-Agent",
      "in": "header",
      "required": true,
      "type": "string",
      "default": "ReversingLabs Azure Connector A1000 v1.1.0",
      "x-ms-visibility": "internal"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "Token": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.reversinglabs.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.reversinglabs.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Security"
    }
  ]
}