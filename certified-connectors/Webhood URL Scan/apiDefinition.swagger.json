{
    "swagger": "2.0",
    "info": {
      "title": "Webhood - Beta API",
      "description": "This is the Swagger 2.0 schema for the Webhood URL scanner API",
      "contact": {
        "email": "contact@webhood.io"
      },
      "version": "1.0.0"
    },
    "host": "demo.webhood.io",
    "basePath": "/api/beta",
    "externalDocs": {
      "description": "Find out more about Webhood URL Scanner",
      "url": "https://webhood.io"
    },
    "tags": [
      {
        "name": "scanner",
        "description": "Operations about scanner"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/scans": {
        "post": {
          "security": [{"apiKey": []}],
          "summary": "Create a new scan",
          "description": "Create a new scan to be initiated by the scanner",
          "operationId": "initScan",
          "tags": [
            "scanner"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Create a new scan to be initiated by the scanner",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ScanRequest"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "Successfully initiated scan",
              "schema": {
                "$ref": "#/definitions/Scan"
              }
            },
            "400": {
              "description": "Something went wrong while processing your request"
            },
            "401": {
              "description": "The request requires valid record authorization token to be set"
            },

            "403": {
              "description": "Authentication or authorization failure"
            }
          }
        },
        "get": {
          "security": [{"apiKey": []}],
          "tags": [
            "scanner"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Get past scans, optionally filter by status",
          "operationId": "getScans",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Status values that need to be considered for filter",
              "x-ms-summary": "Scan Status",
              "type": "string",
              "enum": [
                "pending",
                "done",
                "running",
                "error"
              ],
              "default": "done"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Scan"
              }
            },
            "400": {
              "description": "Something went wrong while processing your request"
            },
            "401": {
              "description": "The request requires valid record authorization token to be set"
            },
            "403": {
              "description": "Authentication or authorization failure"
            }
          }
        }
      },
      "/scans/{scanId}": {
        "get": {
          "security": [{"apiKey": []}],
          "tags": [
            "scanner"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Get scan by ID",
          "description": "Returns a single scan",
          "operationId": "getScanById",
          "parameters": [
            {
              "name": "scanId",
              "in": "path",
              "description": "ID of scan to return",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "401": {
              "description": "The request requires valid record authorization token to be set"
            },
            "403": {
              "description": "Authentication or authorization failure"
            },
            "404": {
              "description": "Scan not found"
            }
          }
        }
      },
      "/scans/{scanId}/screenshot": {
        "get": {
          "security": [{"apiKey": []}],
          "tags": [
            "scanner"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "image/png"
          ],
          "summary": "Get screenshot by scan ID",
          "description": "Returns a screenshot of a successful scan",
          "operationId": "getScreenshotByScanId",
          "parameters": [
            {
              "name": "scanId",
              "in": "path",
              "description": "ID of scan to return screenshot from",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation, returns the screenshot as a PNG image"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "401": {
              "description": "The request requires valid record authorization token to be set"
            },
            "403": {
              "description": "Authentication or authorization failure"
            },
            "404": {
              "description": "Scan not found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter the token with the `Bearer: ` prefix, e.g. 'Bearer abcde12345'."
      }
    },
    "definitions": {
      "ScanRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://google.com"
          }
        }
      },
      "Scan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "xdxwguyzz2asq4j"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-28T17:30:01.013525+00:00"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-28T17:30:01.013525+00:00"
          },
          "done_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-28T17:35:01.013525+00:00"
          },
          "slug": {
            "type": "string",
            "example":
              "google.com-1680024600766"

          },
          "url": {
            "type": "string",
            "example": 
              "https://google.com"
            
          },
          "final_url": {
            "type": "string",
            "example":
              "https://www.google.com/"
            
          },
          "status": {
            "type": "string",
            "description": "Scan Status",
            "example": "done",
            "enum": [
              "pending",
              "done",
              "error",
              "running"
            ]
          },
          "screenshots": {
            "type": "array",
            "description": "identifiers for files containing the screenshots",
            "example": 
              [
                "0e158365_cb22_47cc_9617_c944c5b80a01_lK0p6dA6bM.png"
              ]
            
          },
          "html": {
            "type": "array",
            "description": "identifiers for other files gathered during the scan",
            "example": 
              [
                "bf1a2cfb_7e3b_4d5d_8705_07891d883d5c_57BDbD8BrR.html",
                "trace_ir1b4f30x2y5umn_SwUKj9ocpw.json"
              ]
            
          },
          "error": {
            "type": "string",
            "description": "description of what error occurred during the scan if the scan did not finish successfully",
            "example": 
              "Error while getting final url, url might be invalid. Final URL was: chrome-error://chromewebdata/"
          }
        }
      }
    }
  }