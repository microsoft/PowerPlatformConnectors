{
  "swagger": "2.0",
  "info": {
    "title": "Webhood URL Scanner",
    "description": "This is the Swagger 2.0 schema for the Webhood URL scanner API",
    "contact": {
      "name": "Webhood",
      "url": "https://webhood.io",
      "email": "contact@webhood.io"
    },
    "version": "1.0.0"
  },
  "host": "demo.webhood.io",
  "basePath": "/api",
  "externalDocs": {
    "description": "Find out more about Webhood URL Scanner",
    "url": "https://webhood.io"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.webhood.io"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.webhood.io/docs/about/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Security;IT Operations"
    }
  ],
  "tags": [
    {
      "name": "scanner",
      "description": "Operations about scanner"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/beta/scans": {
      "post": {
        "security": [{"apiKey": []}],
        "summary": "Create a new scan",
        "description": "Create a new scan to be initiated by the scanner",
        "operationId": "initScan",
        "tags": [
          "scanner"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new scan to be initiated by the scanner",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully initiated scan",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "202": {
            "description": "Successfully initiated scan asynchronously",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "400": {
            "description": "Something went wrong while processing your request"
          },
          "401": {
            "description": "The request requires valid record authorization token to be set"
          },
          "403": {
            "description": "Authentication or authorization failure"
          }
        }
      },
      "get": {
        "security": [{"apiKey": []}],
        "tags": [
          "scanner"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get past scans, optionally filter by status",
        "x-ms-summary": "Get Past Scans",
        "description": "Returns past scans, optionally filtered by status",
        "operationId": "getScans",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "x-ms-summary": "Scan Status",
            "type": "string",
            "enum": [
              "pending",
              "done",
              "running",
              "error"
            ],
            "default": "done"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Scan"
              }
            }
          },
          "400": {
            "description": "Something went wrong while processing your request"
          },
          "401": {
            "description": "The request requires valid record authorization token to be set"
          },
          "403": {
            "description": "Authentication or authorization failure"
          }
        }
      }
    },
    "/beta/scans/{scanId}": {
      "get": {
        "security": [{"apiKey": []}],
        "tags": [
          "scanner"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get scan by ID",
        "description": "Returns a single scan",
        "operationId": "getScanById",
        "parameters": [
          {
            "name": "scanId",
            "in": "path",
            "x-ms-summary": "Scan ID",
            "description": "ID of scan to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "The request requires valid record authorization token to be set"
          },
          "403": {
            "description": "Authentication or authorization failure"
          },
          "404": {
            "description": "Scan not found"
          }
        }
      }
    },
    "/beta/scans/{scanId}/screenshot": {
      "get": {
        "security": [{"apiKey": []}],
        "tags": [
          "scanner"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png"
        ],
        "summary": "Get screenshot by Scan ID",
        "x-ms-summary": "Get Screenshot By Scan ID",
        "description": "Returns a screenshot of a successful scan",
        "operationId": "getScreenshotByScanId",
        "parameters": [
          {
            "name": "scanId",
            "in": "path",
            "x-ms-summary": "Scan ID",
            "description": "ID of scan to return screenshot from",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation, returns the screenshot as a PNG image"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "The request requires valid record authorization token to be set"
          },
          "403": {
            "description": "Authentication or authorization failure"
          },
          "404": {
            "description": "Scan not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter the token with the `Bearer: ` prefix, e.g. 'Bearer abcde12345'."
    }
  },
  "definitions": {
    "ScanRequest": {
      "type": "object",
      "properties": {
        "url": {
          "description": "Specify URL to be scanned",
          "x-ms-summary": "Target URL",
          "x-ms-visibility": "important",
          "type": "string",
          "example": "https://google.com"
        }
      }
    },
    "Scan": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Scan ID",
          "x-ms-summary": "Scan ID",
          "type": "string",
          "description": "Unique identifier for the scan",
          "example": "xdxwguyzz2asq4j"
        },
        "created": {
          "title": "Created",
          "x-ms-summary": "Created",
          "type": "string",
          "description": "Date and time when the scan was created",
          "format": "date-time",
          "example": "2023-03-28T17:30:01.013525+00:00"
        },
        "updated": {
          "title": "Updated",
          "x-ms-summary": "Updated",
          "type": "string",
          "description": "Date and time when the scan was last updated",
          "format": "date-time",
          "example": "2023-03-28T17:30:01.013525+00:00"
        },
        "done_at": {
          "title": "Done At",
          "x-ms-summary": "Done At",
          "type": "string",
          "description": "Date and time when the scan was completed",
          "format": "date-time",
          "example": "2023-03-28T17:35:01.013525+00:00"
        },
        "slug": {
          "title": "Slug",
          "x-ms-summary": "Slug",
          "type": "string",
          "description": "Unique identifier for the scan that can be used to generate a link to the scan",
          "example":
          "google.com-1680024600766"
          
        },
        "url": {
          "title": "Scan URL",
          "x-ms-summary": "Scan URL",
          "description": "URL that was scanned",
          "type": "string",
          "example": 
          "https://google.com"
          
        },
        "final_url": {
          "title": "Final URL",
          "x-ms-summary": "Final URL",
          "description": "URL that was scanned after redirects",
          "type": "string",
          "example":
          "https://www.google.com/"
          
        },
        "status": {
          "title": "Status",
          "x-ms-summary": "Status",
          "type": "string",
          "description": "Scan Status",
          "example": "done",
          "enum": [
            "pending",
            "done",
            "error",
            "running"
          ]
        },
        "screenshots": {
          "title": "Screenshot List",
          "x-ms-summary": "Screenshot List",
          "type": "array",
          "description": "Identifiers for files containing the screenshots",
          "items": {
            "type": "string",
            "description": "Identifier for files containing the screenshots"
          },
          "example": 
          [
            "0e158365_cb22_47cc_9617_c944c5b80a01_lK0p6dA6bM.png"
          ]
          
        },
        "html": {
          "title": "HTML List",
          "x-ms-summary": "HTML List",
          "type": "array",
          "description": "Identifiers for other files gathered during the scan",
          "items": {
            "type": "string",
            "description": "Identifier for other files gathered during the scan"
          },
          "example": 
          [
            "bf1a2cfb_7e3b_4d5d_8705_07891d883d5c_57BDbD8BrR.html",
            "trace_ir1b4f30x2y5umn_SwUKj9ocpw.json"
          ]
          
        },
        "error": {
          "title": "Error Description",
          "x-ms-summary": "Error Description",
          "type": "string",
          "description": "Description of what error occurred during the scan if the scan did not finish successfully",
          "example": 
          "Error while getting final url, url might be invalid. Final URL was: chrome-error://chromewebdata/"
        }
      }
    }
  }
}