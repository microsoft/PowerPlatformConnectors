{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Lex Power Sign",
    "description": "Lex Persona is a European qualified trust services provider offering a range of electronic signature solutions. With Lex Enterprise, you have access to all the eIDAS signature levels, along with a large number of signer authentication methods. Your signature books are embedded in digital workflows. Automate connections between Lex Enterprise and all your tools to eliminate repetitive tasks, gain efficiency, and accelerate your business.",
    "contact": {
      "name": "Lex Persona support",
      "url": "https://support.lex-persona.com",
      "email": "support@lex-persona.com"
    }
  },
  "host": "sgs-wm-test01.sunnystamp.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.lex-persona.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.lex-persona.com/politique-de-confidentialite/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Website"
    }
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/consentPages/{cpId}": {
      "get": {
        "summary": "Retrieve consent page",
        "tags": [
          "Consent Pages"
        ],
        "description": "Retrieve consent page information from consent page id",
        "operationId": "RetrieveConsentPage",
        "parameters": [
          {
            "name": "cpId",
            "x-ms-summary": "Consent page Id",
            "description": "Id of the consent page",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/consentPage"
            }
          }
        }
      }
    },
    "/api/consentPages": {
      "get": {
        "summary": "Search consent pages",
        "tags": [
          "Consent Pages"
        ],
        "description": "Search consent pages",
        "operationId": "SearchConsentPages",
        "parameters": [
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "in": "query",
            "type": "string",
            "description": "Search text"
          },
          {
            "name": "items.isDefault",
            "x-ms-summary": "Search default",
            "in": "query",
            "type": "string",
            "description": "Search for default consent page"
          },
          {
            "name": "items.isDisabled",
            "x-ms-summary": "Search disabled",
            "in": "query",
            "type": "string",
            "description": "Search for disabled consent pages"
          },
          {
            "name": "items.name",
            "x-ms-summary": "Search name",
            "in": "query",
            "type": "string",
            "description": "Search by consent page name"
          },
          {
            "name": "items.stepType",
            "x-ms-summary": "Search step type",
            "in": "query",
            "type": "string",
            "description": "Search by step type"
          },
          {
            "name": "items.clientId",
            "x-ms-summary": "Search client id",
            "in": "query",
            "type": "string",
            "description": "Search by client Id"
          },
          {
            "name": "items.created",
            "x-ms-summary": "Search creation date",
            "in": "query",
            "type": "string",
            "description": "Search by creation date"
          },
          {
            "name": "items.updated",
            "x-ms-summary": "Search update date",
            "in": "query",
            "type": "string",
            "description": "Search by last update date"
          },
          {
            "name": "sortBy",
            "x-ms-summary": "Sort by",
            "in": "query",
            "type": "string",
            "description": "The field on which to sort the search result"
          },
          {
            "name": "sortOrder",
            "x-ms-summary": "Sort order",
            "in": "query",
            "type": "string",
            "description": "The direction of the sorting"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "in": "query",
            "type": "string",
            "description": "Number of items per page in the response"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "in": "query",
            "type": "string",
            "description": "Index of the returned page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/consentPages"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/contacts": {
      "post": {
        "summary": "Create contact",
        "tags": [
          "Contacts"
        ],
        "description": "Add a contact to the current user's contacts list",
        "operationId": "CreateContact",
        "parameters": [
          {
            "name": "userId",
            "x-ms-summary": "User Id",
            "description": "User to whom the contact belongs",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Contact email",
                  "x-ms-summary": "Contact email"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "phoneNumber",
                  "x-ms-summary": "Contatct phone Number"
                },
                "firstName": {
                  "type": "string",
                  "description": "firstName",
                  "x-ms-summary": "Contact first Name"
                },
                "lastName": {
                  "type": "string",
                  "description": "lastName",
                  "x-ms-summary": "Contact last Name"
                },
                "country": {
                  "type": "string",
                  "description": "country",
                  "x-ms-summary": "Contact country"
                }
              },
              "required": [
                "email",
                "firstName",
                "lastName"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/contacts/{contactId}": {
      "get": {
        "summary": "Retrieve contact",
        "tags": [
          "Contacts"
        ],
        "description": "Retrieve contact information from contact id",
        "operationId": "RetrieveContact",
        "parameters": [
          {
            "name": "contactId",
            "x-ms-summary": "Contact Id",
            "description": "Id of the contact",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete contact",
        "tags": [
          "Contacts"
        ],
        "description": "Remove contact from the current user's contects list",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "contactId",
            "x-ms-summary": "Contact Id",
            "description": "Id of the contact",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update contact",
        "tags": [
          "Contacts"
        ],
        "description": "Modify an existing contact information",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "contactId",
            "x-ms-summary": "Contact Id",
            "description": "Id of the contact",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email of the contact",
                  "x-ms-summary": "Email of the contact"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone Number of the contact",
                  "x-ms-summary": "Phone Number of the contact"
                },
                "firstName": {
                  "type": "string",
                  "description": "First Name of the contact",
                  "x-ms-summary": "First Name of the contact"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last Name of the contact",
                  "x-ms-summary": "Last Name of the contact"
                },
                "country": {
                  "type": "string",
                  "description": "Country of the contact",
                  "x-ms-summary": "Country of the contact"
                }
              },
              "default": {
                "email": "john.doe@my-company.com",
                "phoneNumber": "+33612345678",
                "firstName": "John",
                "lastName": "DOE",
                "country": "MR"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "summary": "Search contacts",
        "tags": [
          "Contacts"
        ],
        "description": "Search contacts",
        "operationId": "SearchContacts",
        "parameters": [
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "description": "Search by text",
            "in": "query",
            "type": "string"
          },
          {
            "name": "items.email",
            "x-ms-summary": "Search email",
            "description": "Search by email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "items.phoneNumber",
            "x-ms-summary": "Search phone number",
            "description": "Search by phone number",
            "in": "query",
            "type": "string"
          },
          {
            "name": "items.fisrtName",
            "x-ms-summary": "Search first name",
            "description": "Search by first name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "items.lastName",
            "x-ms-summary": "Search last name",
            "description": "Search by last name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "items.country",
            "x-ms-summary": "Search country",
            "description": "Search by country",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "description": "Number of items per page in the response",
            "in": "query",
            "type": "number"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "description": "Index of the returned page",
            "in": "query",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contacts"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/dataMapping": {
      "get": {
        "summary": "Retrieve metadata mapping",
        "description": "Retrieve the metadata mapping of the specified tenant",
        "operationId": "getDataMapping",
        "tags": [
          "Metadata"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "description": "Id of the tenant",
            "x-ms-summary": "Tenant Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/dataMapping"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/signatureProfiles": {
      "post": {
        "summary": "Create signature profile",
        "tags": [
          "Signature Profiles"
        ],
        "description": "Create a signature profile",
        "operationId": "CreateSignatureProfile",
        "parameters": [
          {
            "name": "tenantId",
            "x-ms-summary": "Tenant Id",
            "description": "Id of the tenant",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isDefault": {
                  "type": "string",
                  "description": "Makes this signature profile the default one",
                  "x-ms-summary": "Is Default"
                },
                "isDisabled": {
                  "type": "string",
                  "description": "Disable this signature profile",
                  "x-ms-summary": "Is Disabled"
                },
                "name": {
                  "type": "string",
                  "description": "The signature profile name",
                  "x-ms-summary": "Name"
                },
                "documentType": {
                  "type": "string",
                  "description": "pdf, xml, word, excel, powerpoint, other",
                  "x-ms-summary": "Document Type"
                },
                "signatureType": {
                  "type": "string",
                  "description": "pades,xades,xadesDetached,xadesDetachedManifest,cades,helios",
                  "x-ms-summary": "Signature type"
                },
                "forceScrollDocument": {
                  "type": "boolean",
                  "description": "Force the signer to scroll to the bottom of the document",
                  "x-ms-summary": "Force to scroll to the bottom of the document"
                },
                "pdfVisibleSignatureMode": {
                  "type": "string",
                  "description": "Visible signature mode (allowed, disabled, noImage)",
                  "x-ms-summary": "Visible signature mode"
                },
                "pdfSignatureImageText": {
                  "type": "string",
                  "description": "Text displayed in signatures pads",
                  "x-ms-summary": "Signature text"
                },
                "pdfSignatureImageTextColor": {
                  "type": "string",
                  "description": "Color of the text displayed in the singatures pads",
                  "x-ms-summary": "Signature text color"
                },
                "pdfSignatureImageTextSize": {
                  "type": "number",
                  "description": "Size of the text displayed in the singatures pads",
                  "x-ms-summary": "Signature text size"
                }
              },
              "required": [
                "isDefault",
                "name",
                "documentType",
                "signatureType",
                "forceScrollDocument"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/signatureProfile"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/signatureProfiles/{spId}": {
      "get": {
        "summary": "Retrieve signature profile",
        "tags": [
          "Signature Profiles"
        ],
        "description": "Retrieve a signature profile",
        "operationId": "RetrieveSignatureProfile",
        "parameters": [
          {
            "name": "spId",
            "description": "Id of the signature profile",
            "x-ms-summary": "Signature profile Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/signatureProfile"
            }
          }
        }
      },
      "patch": {
        "summary": "Update signature profile",
        "tags": [
          "Signature Profiles"
        ],
        "description": "Update a signature profile",
        "operationId": "UpdateSignatureProfile",
        "parameters": [
          {
            "name": "spId",
            "x-ms-summary": "Signature profile Id",
            "description": "Id of the signature profile",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isDefault": {
                  "type": "string",
                  "description": "Makes this signature profile the default one",
                  "x-ms-summary": "Is Default"
                },
                "isDisabled": {
                  "type": "string",
                  "description": "Disable this signature profile",
                  "x-ms-summary": "Is Disabled"
                },
                "name": {
                  "type": "string",
                  "description": "The signature profile name",
                  "x-ms-summary": "Name"
                },
                "signatureType": {
                  "type": "string",
                  "description": "pades,xades,xadesDetached,xadesDetachedManifest,cades,helios",
                  "x-ms-summary": "Signature type"
                },
                "forceScrollDocument": {
                  "type": "boolean",
                  "description": "Force the signer to scroll to the bottom of the document",
                  "x-ms-summary": "Force to scroll to the bottom of the document"
                },
                "pdfVisibleSignatureMode": {
                  "type": "string",
                  "description": "Visible signature mode (allowed, disabled, noImage)",
                  "x-ms-summary": "Visible signature mode"
                },
                "pdfSignatureImageText": {
                  "type": "string",
                  "description": "Text displayed in signatures pads",
                  "x-ms-summary": "Signature text"
                },
                "pdfSignatureImageTextColor": {
                  "type": "string",
                  "description": "Color of the text displayed in the singatures pads",
                  "x-ms-summary": "Signature text color"
                },
                "pdfSignatureImageTextSize": {
                  "type": "number",
                  "description": "Size of the text displayed in the singatures pads",
                  "x-ms-summary": "Signature text size"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/signatureProfile"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/signatureProfiles": {
      "get": {
        "summary": "Search signature profiles",
        "tags": [
          "Signature Profiles"
        ],
        "description": "Search signature profiles",
        "operationId": "SearchSignatureProfiles",
        "parameters": [
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "in": "query",
            "type": "string",
            "description": "Search text"
          },
          {
            "name": "items.isDefault",
            "x-ms-summary": "Search default",
            "in": "query",
            "type": "string",
            "description": "Search for default signature profiles"
          },
          {
            "name": "items.isDisabled",
            "x-ms-summary": "Search disabled",
            "in": "query",
            "type": "string",
            "description": "Search for disabled signature profiles"
          },
          {
            "name": "items.name",
            "x-ms-summary": "Search name",
            "in": "query",
            "type": "string",
            "description": "Search by signature profile name"
          },
          {
            "name": "items.documentType",
            "x-ms-summary": "Search doc. type",
            "in": "query",
            "type": "string",
            "description": "Search by document type"
          },
          {
            "name": "items.signatureType",
            "x-ms-summary": "Search signature type",
            "in": "query",
            "type": "string",
            "description": "Search by signature type"
          },
          {
            "name": "items.created",
            "x-ms-summary": "Search creation date",
            "in": "query",
            "type": "string",
            "description": "Search by creation date"
          },
          {
            "name": "items.updated",
            "x-ms-summary": "Search update date",
            "in": "query",
            "type": "string",
            "description": "Search by last update date"
          },
          {
            "name": "sortBy",
            "x-ms-summary": "Sort by",
            "in": "query",
            "type": "string",
            "description": "The field used to sort the search result"
          },
          {
            "name": "sortOrder",
            "x-ms-summary": "Sort order",
            "in": "query",
            "type": "string",
            "description": "The direction of the sorting"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "in": "query",
            "type": "string",
            "description": "Number of items per page in the response"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "in": "query",
            "type": "string",
            "description": "Index of the returned page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/signatureProfiles"
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Retrieve me",
        "tags": [
          "Users"
        ],
        "description": "Retrieve the connected user Id",
        "operationId": "RetrieveMe",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/user"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/workflows": {
      "post": {
        "summary": "Create workflow",
        "tags": [
          "Workflows"
        ],
        "description": "Create a workflow",
        "operationId": "CreateWorkflow",
        "parameters": [
          {
            "name": "userId",
            "description": "User id of the workflow ownner",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "User Id"
          },
          {
            "name": "Content-Type",
            "description": "Content type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the workflow",
                  "x-ms-summary": "Name",
                  "x-ms-visibility": "important"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the workflow",
                  "x-ms-summary": "Description",
                  "title": "Description"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/step"
                  },
                  "description": "Workflow steps",
                  "x-ms-summary": "Steps"
                },
                "notifiedEvents": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Notified workflow events",
                  "x-ms-summary": "Notified Events",
                  "x-ms-visibility": "advanced"
                },
                "watchers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "User id of the watcher"
                      },
                      "notifiedEvents": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Workflow events that will be notified to this watcher"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the watcher"
                      }
                    }
                  },
                  "description": "Principals who will receive notifications for this workflow",
                  "x-ms-summary": "Watchers",
                  "x-ms-visibility": "advanced"
                },
                "templateId": {
                  "type": "string",
                  "description": "Id of the template from which the workflow derives",
                  "x-ms-summary": "Template Id",
                  "x-ms-visibility": "advanced"
                },
                "layoutId": {
                  "type": "string",
                  "description": "Metadata layout used by the worklow",
                  "x-ms-summary": "Layout Id",
                  "x-ms-visibility": "advanced"
                },
                "data1": {
                  "type": "string",
                  "description": "First metadata",
                  "x-ms-visibility": "advanced"
                },
                "data2": {
                  "type": "string",
                  "description": "Second metadata",
                  "x-ms-visibility": "advanced"
                },
                "data3": {
                  "type": "string",
                  "description": "Third metadata",
                  "x-ms-visibility": "advanced"
                },
                "data4": {
                  "type": "string",
                  "description": "Fourth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data5": {
                  "type": "string",
                  "description": "Fifth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data6": {
                  "type": "string",
                  "description": "Sixth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data7": {
                  "type": "string",
                  "description": "Seventh metadata",
                  "x-ms-visibility": "advanced"
                },
                "data8": {
                  "type": "string",
                  "description": "Heighth metadata",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/workflow"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}": {
      "get": {
        "summary": "Retrieve workflow",
        "tags": [
          "Workflows"
        ],
        "description": "Retrieve workflow from workflow id",
        "operationId": "RetrieveWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/workflow"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete workflow",
        "tags": [
          "Workflows"
        ],
        "description": "Delete a workflow",
        "operationId": "DeleteWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow to delete",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/workflow"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update workflow",
        "tags": [
          "Workflows"
        ],
        "description": "Update a workflow",
        "operationId": "UpdateWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow to update",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "description": "Content type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Id of the workflow owner",
                  "x-ms-summary": "User Id"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the workflow",
                  "x-ms-summary": "Name"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the workflow",
                  "x-ms-summary": "Description",
                  "title": "Description"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/step"
                  },
                  "description": "Workflow steps",
                  "x-ms-summary": "Steps"
                },
                "notifiedEvents": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Notified workflow events",
                  "x-ms-summary": "Notified Events",
                  "x-ms-visibility": "advanced"
                },
                "watchers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "Watcher user Id"
                      },
                      "notifiedEvents": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Workflow events that will be notified to this watcher"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      }
                    }
                  },
                  "description": "Principals who will receive notifications for this workflow",
                  "x-ms-summary": "Watchers",
                  "x-ms-visibility": "advanced"
                },
                "workflowStatus": {
                  "type": "string",
                  "description": "Current status of the workflow",
                  "x-ms-summary": "Workflow Status"
                },
                "data1": {
                  "type": "string",
                  "description": "first metadata",
                  "x-ms-visibility": "advanced"
                },
                "data2": {
                  "type": "string",
                  "description": "second metadata",
                  "x-ms-visibility": "advanced"
                },
                "data3": {
                  "type": "string",
                  "description": "third metadata",
                  "x-ms-visibility": "advanced"
                },
                "data4": {
                  "type": "string",
                  "description": "fourth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data5": {
                  "type": "string",
                  "description": "fifth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data6": {
                  "type": "string",
                  "description": "sixth metadata",
                  "x-ms-visibility": "advanced"
                },
                "data7": {
                  "type": "string",
                  "description": "seventh metadata",
                  "x-ms-visibility": "advanced"
                },
                "data8": {
                  "type": "string",
                  "description": "heighth metadata",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/workflow"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/workflows": {
      "get": {
        "summary": "Search workflows",
        "tags": [
          "Workflows"
        ],
        "description": "Search workflows",
        "operationId": "SearchWorkflows",
        "parameters": [
          {
            "name": "Accept",
            "x-ms-summary": "Accept",
            "description": "Accept",
            "x-ms-visibility": "advanced",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json"
          },
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "in": "query",
            "type": "string",
            "description": "Search text"
          },
          {
            "name": "items.layoutId",
            "x-ms-summary": "Search metadata layout",
            "in": "query",
            "type": "string",
            "description": "Search by metadata layout"
          },
          {
            "name": "items.templateId",
            "x-ms-summary": "Search template",
            "in": "query",
            "type": "string",
            "description": "Search by workflow template"
          },
          {
            "name": "items.groupId",
            "x-ms-summary": "Search group",
            "in": "query",
            "type": "string",
            "description": "Search by users group"
          },
          {
            "name": "items.userId",
            "x-ms-summary": "Search user",
            "in": "query",
            "type": "string",
            "description": "Search by owner"
          },
          {
            "name": "items.email",
            "x-ms-summary": "Search email",
            "in": "query",
            "type": "string",
            "description": "Search by owner's email"
          },
          {
            "name": "items.firstname",
            "x-ms-summary": "Search first name",
            "in": "query",
            "type": "string",
            "description": "Search by owner's first name"
          },
          {
            "name": "items.lastname",
            "x-ms-summary": "Search last name",
            "in": "query",
            "type": "string",
            "description": "Search by owner's last name"
          },
          {
            "name": "items.workflowStatus",
            "x-ms-summary": "Search status",
            "in": "query",
            "type": "string",
            "description": "Search by workflow status"
          },
          {
            "name": "items.data1",
            "x-ms-summary": "Search metadata 1",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 1",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data2",
            "x-ms-summary": "Search metadata 2",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 2",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data3",
            "x-ms-summary": "Search metadata 3",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 3",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data4",
            "x-ms-summary": "Search metadata 4",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 4",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data5",
            "x-ms-summary": "Search metadata 5",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 5",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data6",
            "x-ms-summary": "Search metadata 6",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 6",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data7",
            "x-ms-summary": "Search metadata 7",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 7",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data8",
            "x-ms-summary": "Search metadata 8",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 8",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.created",
            "x-ms-summary": "Search creation date",
            "in": "query",
            "type": "string",
            "description": "Search by creation date"
          },
          {
            "name": "items.updated",
            "x-ms-summary": "Search update date",
            "in": "query",
            "type": "string",
            "description": "Search by last update date"
          },
          {
            "name": "items.started",
            "x-ms-summary": "Search start date",
            "in": "query",
            "type": "string",
            "description": "Search by start date"
          },
          {
            "name": "sortBy",
            "x-ms-summary": "Sort by",
            "in": "query",
            "type": "string",
            "description": "The field used to sort the search result"
          },
          {
            "name": "sortOrder",
            "x-ms-summary": "Sort order",
            "in": "query",
            "type": "string",
            "description": "The direction of the sorting"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "in": "query",
            "type": "string",
            "description": "Number of items per page in the response"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "in": "query",
            "type": "string",
            "description": "Index of the returned page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/workflows"
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}/invite": {
      "post": {
        "summary": "Retrieve constent page url",
        "tags": [
          "Workflows"
        ],
        "description": "Create and retrieve the consent page url for a recipient",
        "operationId": "WorkflowInvite",
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipientEmail": {
                  "type": "string",
                  "description": "Email of the concerned recipient",
                  "x-ms-summary": "Recipient Email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "inviteUrl": {
                  "type": "string",
                  "description": "The consent page url for the concerned recipient",
                  "x-ms-summary": "The consent page url for the concerned recipient"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}/downloadEvidences": {
      "get": {
        "summary": "Download evidences file",
        "tags": [
          "Workflows"
        ],
        "description": "Download the workflow evidences file",
        "operationId": "WorkflowEvidences",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept",
            "description": "Accept",
            "x-ms-summary": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/zip",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "Content-Disposition",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}/parts": {
      "post": {
        "summary": "Create part",
        "description": "Create a document part",
        "operationId": "CreatePart",
        "tags": [
          "Workflow Documents"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the concerned workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type",
            "default": "application/pdf"
          },
          {
            "name": "Content-Disposition",
            "x-ms-summary": "Cotent Disposition",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Dispotion",
            "default": "attachment; filename=document.pdf"
          },
          {
            "name": "createDocuments",
            "description": "Create a document from this part",
            "x-ms-summary": "Create Document",
            "default": "true",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ignoreAttachments",
            "description": "Attachments will be ignored",
            "x-ms-summary": "Ignore attachments",
            "default": "true",
            "in": "query",
            "type": "string"
          },
          {
            "name": "signatureProfileId",
            "description": "Part considered as an attachment if omitted",
            "x-ms-summary": "Signature profile Id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "unzip",
            "description": "Unzip files",
            "x-ms-summary": "Unzip",
            "default": "false",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pdf2pdfa",
            "description": "Convert pdf to pdf/A",
            "x-ms-summary": "Pdf to PdfA",
            "default": "auto",
            "in": "query",
            "type": "string"
          },
          {
            "name": "document",
            "in": "body",
            "description": "The uploaded file data",
            "x-ms-summary": "Document",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/document"
                  },
                  "description": "Created documents"
                },
                "ignoredAttachments": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ignoredAttachments"
                },
                "parts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/part"
                  },
                  "description": "parts"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}/documents": {
      "post": {
        "summary": "Create document",
        "description": "Create a document from previouly created parts",
        "operationId": "CreateDocument",
        "tags": [
          "Workflow Documents"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the concerned workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type",
            "default": "application/json",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/part"
                  }
                },
                "signatureProfileId": {
                  "type": "string",
                  "description": "The signature profile for this document"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/api/documents/{documentId}": {
      "get": {
        "summary": "Retrieve document",
        "description": "Retrieve a document",
        "operationId": "RetrieveDocument",
        "tags": [
          "Workflow Documents"
        ],
        "parameters": [
          {
            "name": "documentId",
            "description": "Id of the document",
            "x-ms-summary": "Document Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete document",
        "description": "Delete a document",
        "operationId": "DeleteDocument",
        "tags": [
          "Workflow Documents"
        ],
        "parameters": [
          {
            "name": "documentId",
            "description": "Id of the document",
            "x-ms-summary": "Document Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      },
      "patch": {
        "summary": "Update document",
        "description": "Update a document",
        "operationId": "UpdateDocument",
        "tags": [
          "Workflow Documents"
        ],
        "parameters": [
          {
            "name": "documentId",
            "description": "Id of the document",
            "x-ms-summary": "Document Id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type",
            "default": "application/json",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "signatureProfileId": {
                  "type": "string",
                  "description": "The signature profile to aply to this document"
                },
                "pdfSignatureFields": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfSigField"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/api/documents": {
      "get": {
        "summary": "Search documents",
        "tags": [
          "Workflow Documents"
        ],
        "description": "Search documents",
        "operationId": "SearchDocuments",
        "parameters": [
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "in": "query",
            "type": "string",
            "description": "Search text"
          },
          {
            "name": "items.layoutId",
            "x-ms-summary": "Search metadata layout",
            "in": "query",
            "type": "string",
            "description": "Search by metadata layout"
          },
          {
            "name": "items.groupId",
            "x-ms-summary": "Search group",
            "in": "query",
            "type": "string",
            "description": "Search by users group"
          },
          {
            "name": "items.userId",
            "x-ms-summary": "Search user",
            "in": "query",
            "type": "string",
            "description": "Search by owner"
          },
          {
            "name": "items.workflowId",
            "x-ms-summary": "Search workflow id",
            "in": "query",
            "type": "string",
            "description": "Search by workflow Id"
          },
          {
            "name": "items.workflowName",
            "x-ms-summary": "Search workflow name",
            "in": "query",
            "type": "string",
            "description": "Search by workflow name"
          },
          {
            "name": "items.data1",
            "x-ms-summary": "Search metadata 1",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 1",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data2",
            "x-ms-summary": "Search metadata 2",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 2",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data3",
            "x-ms-summary": "Search metadata 3",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 3",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data4",
            "x-ms-summary": "Search metadata 4",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 4",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data5",
            "x-ms-summary": "Search metadata 5",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 5",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data6",
            "x-ms-summary": "Search metadata 6",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 6",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data7",
            "x-ms-summary": "Search metadata 7",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 7",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.data8",
            "x-ms-summary": "Search metadata 8",
            "in": "query",
            "type": "string",
            "description": "Search by value of metadata 8",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "items.signatureProfileId",
            "x-ms-summary": "Search signature profile",
            "in": "query",
            "type": "string",
            "description": "Search by signature profile"
          },
          {
            "name": "items.created",
            "x-ms-summary": "Search creation date",
            "in": "query",
            "type": "string",
            "description": "Search by creation date"
          },
          {
            "name": "items.updated",
            "x-ms-summary": "Search update date",
            "in": "query",
            "type": "string",
            "description": "Search by last update date"
          },
          {
            "name": "sortBy",
            "x-ms-summary": "Sort by",
            "in": "query",
            "type": "string",
            "description": "The field used to sort the search result"
          },
          {
            "name": "sortOrder",
            "x-ms-summary": "Sort order",
            "in": "query",
            "type": "string",
            "description": "The direction of the sorting"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "in": "query",
            "type": "string",
            "description": "Number of items per page in the response"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "in": "query",
            "type": "string",
            "description": "Index of the returned page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "$ref": "#/definitions/documents"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflows/{workflowId}/downloadDocuments": {
      "get": {
        "summary": "Download a workflow documents",
        "tags": [
          "Workflow Documents"
        ],
        "description": "Download the workflow documents",
        "operationId": "DownloadDocuments",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "description": "Id of the workflow",
            "x-ms-summary": "Workflow Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "Content-Disposition",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/layouts": {
      "post": {
        "summary": "Create metadata layout",
        "tags": [
          "Workflow Layouts"
        ],
        "description": "Create a metadata layout",
        "operationId": "CreateLayout",
        "parameters": [
          {
            "name": "tenantId",
            "description": "Id of the layout",
            "x-ms-summary": "Tenant Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "type": "string",
            "description": "Content-Type",
            "in": "header",
            "default": "application/json",
            "required": true,
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The layout name",
                  "x-ms-summary": "Name"
                },
                "isDisabled": {
                  "type": "boolean",
                  "description": "If set to true the layout will be disabled",
                  "x-ms-summary": "Is disabled"
                },
                "dataConfigurations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "slot": {
                        "type": "string",
                        "description": "Metadata item (data1 to data8)"
                      },
                      "default": {
                        "type": "string",
                        "description": "Metadata default value in this layout"
                      },
                      "optional": {
                        "type": "boolean",
                        "description": "If true, providing a value is not mandatory"
                      },
                      "readonly": {
                        "type": "boolean",
                        "description": "Wether the value can be overriden"
                      },
                      "rememberLastValue": {
                        "type": "boolean",
                        "description": "If set to true, the value persists accross workflows"
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/layout"
            }
          }
        }
      }
    },
    "/api/layouts/{layoutId}": {
      "get": {
        "summary": "Retrieve metadata layout",
        "tags": [
          "Workflow Layouts"
        ],
        "description": "Retrieve a workflow layout",
        "operationId": "RetrieveLayout",
        "parameters": [
          {
            "name": "layoutId",
            "description": "Id of the layout",
            "x-ms-summary": "Layout Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/layout"
            }
          }
        }
      },
      "patch": {
        "summary": "Update metadata layout",
        "tags": [
          "Workflow Layouts"
        ],
        "description": "Update a metadata layout",
        "operationId": "UpdateLayout",
        "parameters": [
          {
            "name": "layoutId",
            "description": "Id of the layout",
            "x-ms-summary": "Tenant Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "x-ms-summary": "Content type",
            "type": "string",
            "description": "Content-Type",
            "in": "header",
            "default": "application/json",
            "required": true,
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The layout name",
                  "x-ms-summary": "Name"
                },
                "isDisabled": {
                  "type": "boolean",
                  "description": "If set to true the layout will be disabled",
                  "x-ms-summary": "Is disabled"
                },
                "dataConfigurations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "slot": {
                        "type": "string",
                        "description": "Metadata item (data1 to data8)"
                      },
                      "default": {
                        "type": "string",
                        "description": "Metadata default value in this layout"
                      },
                      "optional": {
                        "type": "boolean",
                        "description": "If true, providing a value is not mandatory"
                      },
                      "readonly": {
                        "type": "boolean",
                        "description": "Wether the value can be overriden"
                      },
                      "rememberLastValue": {
                        "type": "boolean",
                        "description": "If set to true, the value persists accross workflows"
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/layout"
            }
          }
        }
      }
    },
    "/api/layouts": {
      "get": {
        "summary": "Search metadata layouts",
        "tags": [
          "Workflow Layouts"
        ],
        "description": "Search workflow layouts",
        "operationId": "SearchLayouts",
        "parameters": [
          {
            "name": "text",
            "x-ms-summary": "Search text",
            "in": "query",
            "type": "string",
            "description": "Search text"
          },
          {
            "name": "items.isDisabled",
            "x-ms-summary": "Search disabled",
            "in": "query",
            "type": "string",
            "description": "Search for disabled layouts"
          },
          {
            "name": "items.name",
            "x-ms-summary": "Search name",
            "in": "query",
            "type": "string",
            "description": "Search by layout name"
          },
          {
            "name": "items.dataConfigurations.slot",
            "x-ms-summary": "Search metadata",
            "in": "query",
            "type": "string",
            "description": "Search by presence of metadata"
          },
          {
            "name": "items.created",
            "x-ms-summary": "Search creation date",
            "in": "query",
            "type": "string",
            "description": "Search by creation date"
          },
          {
            "name": "items.updated",
            "x-ms-summary": "Search update date",
            "in": "query",
            "type": "string",
            "description": "Search by last update date"
          },
          {
            "name": "sortBy",
            "x-ms-summary": "Sort by",
            "in": "query",
            "type": "string",
            "description": "The field used to sort the search result"
          },
          {
            "name": "sortOrder",
            "x-ms-summary": "Sort order",
            "in": "query",
            "type": "string",
            "description": "The direction of the sorting"
          },
          {
            "name": "itemsPerPage",
            "x-ms-summary": "Items per page",
            "in": "query",
            "type": "string",
            "description": "Number of items per page in the response"
          },
          {
            "name": "pageIndex",
            "x-ms-summary": "Page index",
            "in": "query",
            "type": "string",
            "description": "Index of the returned page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "$ref": "#/definitions/layouts"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "consentPage": {
      "type": "object",
      "properties": {
        "allowOrganization": {
          "type": "boolean",
          "description": "Allows the use of organizations"
        },
        "authenticateUser": {
          "type": "boolean",
          "description": "Imposes signer authentication"
        },
        "clientId": {
          "type": "string",
          "description": "Client Id"
        },
        "created": {
          "type": "number",
          "description": "Creation date"
        },
        "emUrl": {
          "type": "string",
          "description": "Evidences manager Url"
        },
        "hideDownloads": {
          "type": "boolean",
          "description": "Documents download links are not diplayed on consent pages"
        },
        "hideMobileQrCode": {
          "type": "boolean",
          "description": "Hides the QR codes on constent pages"
        },
        "id": {
          "type": "string",
          "description": "The consent page Id"
        },
        "isCountryRequired": {
          "type": "boolean",
          "description": "Makes country mandatory in signers information"
        },
        "isDisabled": {
          "type": "boolean",
          "description": "Consent page is disabled"
        },
        "logoResourceId": {
          "type": "string",
          "description": "Id of the consent page logo resource"
        },
        "name": {
          "type": "string",
          "description": "The consent page name"
        },
        "primaryColor": {
          "type": "string",
          "description": "Consent page primary color"
        },
        "secondaryColor": {
          "type": "string",
          "description": "Consent page secondary color"
        },
        "sharedPassphrase": {
          "type": "string",
          "description": "Shared passphrase"
        },
        "signing mode": {
          "type": "string",
          "description": "Signing mode (local or server)"
        },
        "stepType": {
          "type": "string",
          "description": "step type (signature or approval)"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "tsaUrl": {
          "type": "string",
          "description": "Timestamp authority Url"
        },
        "updated": {
          "type": "number",
          "description": "Last modification date"
        },
        "verifyEmail": {
          "type": "boolean",
          "description": "If set to tue, signers will receive OTPs by emails"
        },
        "verifyPhoneNumber": {
          "type": "boolean",
          "description": "If set to true, signers will receive OTPs by text messages"
        }
      }
    },
    "consentPages": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/consentPage"
          },
          "description": "items"
        },
        "itemsPerPage": {
          "type": "integer",
          "format": "int32",
          "description": "itemsPerPage"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "pageIndex"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "totalItems"
        }
      }
    },
    "contact": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "Contact country"
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Contact creation date"
        },
        "email": {
          "type": "string",
          "description": "Contact email"
        },
        "firstName": {
          "type": "string",
          "description": "Contact firstName"
        },
        "id": {
          "type": "string",
          "description": "Contact id"
        },
        "lastName": {
          "type": "string",
          "description": "Contact lastName"
        },
        "name": {
          "type": "string",
          "description": "Contact name (firts name + last name))"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Contact phone number"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "description": "Contact last modification date"
        },
        "userId": {
          "type": "string",
          "description": "Id of the contact owner"
        }
      }
    },
    "contacts": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/contact"
          },
          "description": "items"
        },
        "itemsPerPage": {
          "type": "integer",
          "format": "int32",
          "description": "itemsPerPage"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "pageIndex"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "totalItems"
        }
      }
    },
    "dataMapping": {
      "type": "object",
      "properties": {
        "data1": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data1"
        },
        "data2": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data2"
        },
        "data3": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data3"
        },
        "data4": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data4"
        },
        "data5": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data5"
        },
        "data6": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data6"
        },
        "data7": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadataname"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadatavalue"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data7"
        },
        "data8": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Metadata description"
            },
            "name": {
              "type": "string",
              "description": "Metadata name"
            },
            "pattern": {
              "type": "string",
              "description": "Metadata pattern"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Metadata value"
                  }
                }
              },
              "description": "options"
            },
            "type": {
              "type": "string",
              "description": "type"
            }
          },
          "description": "data8"
        }
      }
    },
    "document": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Creation date"
        },
        "groupId": {
          "type": "string",
          "description": "Id fo the document owner's group"
        },
        "id": {
          "type": "string",
          "description": "Id of the document"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/part"
          },
          "description": "parts"
        },
        "pdfSignatureFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfSigField"
          },
          "description": "pdfSignatureFields"
        },
        "signatureProfileId": {
          "type": "string",
          "description": "Id of the signature profile of the document"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "description": "Last modification date"
        },
        "userId": {
          "type": "string",
          "description": "Document owner user Id"
        },
        "viewAuthorizedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of groups allowed to  view the document"
        },
        "viewAuthorizedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of users allowzd to view the document"
        },
        "workflowId": {
          "type": "string",
          "description": "Id of the workflow to which the document belongs"
        },
        "workflowName": {
          "type": "string",
          "description": "Name of the workflow to which the document belongs"
        }
      }
    },
    "documents": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/document"
          },
          "description": "items"
        },
        "itemsPerPage": {
          "type": "integer",
          "format": "int32",
          "description": "itemsPerPage"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "pageIndex"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "totalItems"
        }
      }
    },
    "layout": {
      "type": "object",
      "description": "Metadata layout",
      "properties": {
        "created": {
          "type": "number",
          "description": "Creation date"
        },
        "id": {
          "type": "string",
          "description": "Layout Id"
        },
        "isDisabled": {
          "type": "boolean",
          "description": "If set to true the layout has been disbled"
        },
        "name": {
          "type": "string",
          "description": "The name of the Layout"
        },
        "tenantId": {
          "type": "string",
          "description": "Id of the tenant"
        },
        "updated": {
          "type": "number",
          "description": "Last modification date"
        },
        "dataConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "slot": {
                "type": "string",
                "description": "Metadata item (data1 to data8)"
              },
              "default": {
                "type": "string",
                "description": "Metadata default value in this layout"
              },
              "optional": {
                "type": "boolean",
                "description": "If true, providing a value for this metadata is not mandatory"
              },
              "readonly": {
                "type": "boolean",
                "description": "Wether the value can be overriden"
              },
              "rememberLastValue": {
                "type": "boolean",
                "description": "If set to true, the value persists accross workflows"
              }
            }
          }
        }
      }
    },
    "layouts": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "created": {
                "type": "number",
                "description": "Creation date"
              },
              "dataConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/layout"
                }
              }
            }
          }
        },
        "itemsPerPage": {
          "type": "number",
          "description": "Number of items per page"
        },
        "pageIndex": {
          "type": "number",
          "description": "Index of the returned page"
        },
        "totalItems": {
          "type": "number",
          "description": "Total number of items concerned by the request"
        }
      }
    },
    "part": {
      "type": "object",
      "description": "Document part",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "contentType"
        },
        "filename": {
          "type": "string",
          "description": "filename"
        },
        "hash": {
          "type": "string",
          "description": "hash"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "size"
        }
      }
    },
    "pdfSigField": {
      "type": "object",
      "properties": {
        "imageHeight": {
          "type": "number",
          "format": "float",
          "description": "imageHeight"
        },
        "imagePage": {
          "type": "number",
          "format": "float",
          "description": "imagePage"
        },
        "imageWidth": {
          "type": "number",
          "format": "float",
          "description": "imageWidth"
        },
        "imageX": {
          "type": "number",
          "format": "float",
          "description": "imageX"
        },
        "imageY": {
          "type": "number",
          "format": "float",
          "description": "imageY"
        }
      }
    },
    "recipient": {
      "type": "object",
      "properties": {
        "consentPageId": {
          "type": "string",
          "description": "Id of the consent page (signature level) associated to this recipient"
        },
        "email": {
          "type": "string",
          "description": "recipient's email"
        },
        "userId": {
          "type": "string",
          "description": "reference a LE user instead of creating a recipient on the fly"
        },
        "phoneNumber": {
          "type": "string",
          "description": "reicpient's cell phone number"
        },
        "firstName": {
          "type": "string",
          "description": "recipient's first name"
        },
        "lastName": {
          "type": "string",
          "description": "recipient's last name"
        },
        "country": {
          "type": "string",
          "description": "recipient's country code"
        },
        "preferredLocale": {
          "type": "string",
          "description": "recipient's locale code"
        },
        "organizationId": {
          "type": "string",
          "description": "Id of the LE organization of the recipient"
        }
      },
      "required": [
        "consentPageId",
        "email"
      ]
    },
    "step": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "step Id",
          "x-ms-visibility": "advanced"
        },
        "stepType": {
          "type": "string",
          "description": "signature or approval"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/recipient"
          }
        },
        "requiredRecipients": {
          "type": "number",
          "description": "minimum number of signers who must sign to take the next step"
        },
        "validityPeriod": {
          "type": "number",
          "description": "step validity duration"
        },
        "inviteperiod": {
          "type": "number",
          "description": "signature reminders frequency"
        },
        "maxInvites": {
          "type": "number",
          "description": "maximum number of signature reminders"
        },
        "sendDownloadLink": {
          "type": "boolean",
          "description": "controls the delivery of the signed document to signers"
        },
        "allowComments": {
          "type": "boolean",
          "description": "allows/forbids comments on this step"
        },
        "hideAttachments": {
          "type": "boolean",
          "description": "controls the display of attachments to signers"
        },
        "hideWorkflowRecipients": {
          "type": "boolean",
          "description": "controls the display of other signers to the signer"
        }
      }
    },
    "signatureProfile": {
      "type": "object",
      "properties": {
        "created": {
          "type": "number",
          "description": "Creation date"
        },
        "documentType": {
          "type": "string",
          "description": "Type of the documents"
        },
        "forceScrollDocument": {
          "type": "boolean",
          "description": "Force the signer to scroll to the bottom of the document"
        },
        "id": {
          "type": "string",
          "description": "the signature profile Id"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Makes this signature profile the default one"
        },
        "isDisabled": {
          "type": "boolean",
          "description": "Disable this signature profile"
        },
        "name": {
          "type": "string",
          "description": "The signature profile name"
        },
        "pdfSignatureImageText": {
          "type": "string",
          "description": "Text displayed in signatures pads"
        },
        "pdfSignatureImageTextColor": {
          "type": "string",
          "description": "Color of the text displayed in the singatures pads"
        },
        "pdfSignatureImageTextSize": {
          "type": "number",
          "description": "Size of the text displayed in the singatures pads"
        },
        "pdfVisibleSignatureMode": {
          "type": "string",
          "description": "Visible signature mode (allowed, disabled, noImage)"
        },
        "signatureType": {
          "type": "string",
          "description": "pades, xades, xadesDetached, xadesDetachedManifest, cades, helios",
          "x-ms-summary": "Signature type"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "updated": {
          "type": "number",
          "description": "Last modification date"
        }
      }
    },
    "signatureProfiles": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/signatureProfile"
          }
        },
        "itemsPerPage": {
          "type": "number",
          "description": "Number of items per page"
        },
        "pageIndex": {
          "type": "number",
          "description": "Index of the returned page"
        },
        "totalItems": {
          "type": "number",
          "description": "Total number of items concerned by the request"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "approveAllowed": {
          "type": "boolean",
          "description": "If set to true the user can approve documents"
        },
        "country": {
          "type": "string",
          "description": "Country of the user"
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Creation date"
        },
        "email": {
          "type": "string",
          "description": "Email of th user"
        },
        "firstName": {
          "type": "string",
          "description": "FirstName of the user"
        },
        "groupId": {
          "type": "string",
          "description": "Id of the user's group"
        },
        "id": {
          "type": "string",
          "description": "Id of the user"
        },
        "isDisabled": {
          "type": "boolean",
          "description": "If true, the user is disabled"
        },
        "lastLogin": {
          "type": "integer",
          "format": "int32",
          "description": "The user's last login date"
        },
        "lastName": {
          "type": "string",
          "description": "LastName of the user"
        },
        "name": {
          "type": "string",
          "description": "Name (first name + last name) of the user"
        },
        "organizationTitles": {
          "type": "array",
          "items": {},
          "description": "The user's funtions in his organizations"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user"
        },
        "signAllowed": {
          "type": "boolean",
          "description": "If set to true, the user can sign documents"
        },
        "subject": {
          "type": "string",
          "description": "The user's internal subkect code"
        },
        "tenantId": {
          "type": "string",
          "description": "Id of the tenant"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "description": "Last modification date"
        },
        "viewAuthorizedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of group in which the user can act as an observer"
        }
      }
    },
    "workflow": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "created"
        },
        "currentRecipientEmails": {
          "type": "array",
          "items": {},
          "description": "currentRecipientEmails"
        },
        "currentRecipientUsers": {
          "type": "array",
          "items": {},
          "description": "currentRecipientUsers"
        },
        "data1": {
          "type": "string",
          "description": "Metadata 1"
        },
        "data2": {
          "type": "string",
          "description": "Metadata 2"
        },
        "data3": {
          "type": "string",
          "description": "Metadata 3"
        },
        "data4": {
          "type": "string",
          "description": "Metadata 4"
        },
        "data5": {
          "type": "string",
          "description": "Metadata 5"
        },
        "data6": {
          "type": "string",
          "description": "Metadata 6"
        },
        "data7": {
          "type": "string",
          "description": "Metadata 7"
        },
        "data8": {
          "type": "string",
          "description": "Metadata 8"
        },
        "description": {
          "type": "string",
          "description": "Description of the workflow"
        },
        "email": {
          "type": "string",
          "description": "Email of the workflow owner"
        },
        "firstName": {
          "type": "string",
          "description": "First Name of the workflow owner"
        },
        "groupId": {
          "type": "string",
          "description": "Id of the workflow owner's group"
        },
        "id": {
          "type": "string",
          "description": "Id of the workflow"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the workflow owner"
        },
        "layoutId": {
          "type": "string",
          "description": "Id of the metadata layout of the workflow"
        },
        "logs": {
          "type": "array",
          "items": {},
          "description": "Logs items of the wokflow"
        },
        "name": {
          "type": "string",
          "description": "Name (first name + last name) of the workflow owner"
        },
        "notifiedEvents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lis of events notified by the workflow"
        },
        "progress": {
          "type": "integer",
          "format": "int32",
          "description": "Progress of the workflow in percents"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "allowComments": {
                "type": "boolean",
                "description": "Allows/forbid interactive comments ara allowed on the step"
              },
              "hideAttachments": {
                "type": "boolean",
                "description": "Controls the display of attachments to signers"
              },
              "hideWorkflowRecipients": {
                "type": "boolean",
                "description": "Controls the display of other signers to the signer"
              },
              "id": {
                "type": "string",
                "description": "Step id"
              },
              "invitePeriod": {
                "type": "integer",
                "format": "int32",
                "description": "invitePeriod"
              },
              "isFinished": {
                "type": "boolean",
                "description": "isFinished"
              },
              "isStarted": {
                "type": "boolean",
                "description": "isStarted"
              },
              "logs": {
                "type": "array",
                "items": {},
                "description": "logs"
              },
              "maxInvites": {
                "type": "integer",
                "format": "int32",
                "description": "maxInvites"
              },
              "recipients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "consentPageId": {
                      "type": "string",
                      "description": "consentPageId"
                    },
                    "country": {
                      "type": "string",
                      "description": "country"
                    },
                    "email": {
                      "type": "string",
                      "description": "email"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "firstName"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "lastName"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "phoneNumber"
                    },
                    "userId": {
                      "type": "string",
                      "description": "userId"
                    }
                  }
                },
                "description": "recipients"
              },
              "requiredRecipients": {
                "type": "integer",
                "format": "int32",
                "description": "requiredRecipients"
              },
              "sendDownloadLink": {
                "type": "boolean",
                "description": "sendDownloadLink"
              },
              "stepType": {
                "type": "string",
                "description": "stepType"
              },
              "validityPeriod": {
                "type": "integer",
                "format": "int32",
                "description": "validityPeriod"
              }
            }
          },
          "description": "steps"
        },
        "tenantId": {
          "type": "string",
          "description": "tenantId"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "description": "updated"
        },
        "userId": {
          "type": "string",
          "description": "userId"
        },
        "viewAuthorizedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of groups in which users can act as observers"
        },
        "viewAuthorizedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "viewAuthorizedUsers"
        },
        "watchers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "email"
              },
              "notifiedEvents": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "notifiedEvents"
              },
              "userId": {
                "type": "string",
                "description": "userId"
              }
            }
          },
          "description": "watchers"
        },
        "workflowStatus": {
          "type": "string",
          "description": "workflowStatus"
        }
      }
    },
    "workflows": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflow"
          },
          "description": "items"
        },
        "itemsPerPage": {
          "type": "integer",
          "format": "int32",
          "description": "itemsPerPage"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "pageIndex"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "totalItems"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [
    {
      "name": "Consent Pages"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Metadata"
    },
    {
      "name": "Signature Profiles"
    },
    {
      "name": "Users"
    },
    {
      "name": "Workflows"
    },
    {
      "name": "Workflow Documents"
    },
    {
      "name": "Workflow Layouts"
    }
  ]
}