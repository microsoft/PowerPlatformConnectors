{
  "swagger": "2.0",
  "info": {
    "title": "Mockster",
    "description": "Say bye bye to Lorem ipsum! Mockster is used to generate random data for all kinds of purposes. Generated data is mimicking something that might be in the real world as well.",
    "version": "1.0",
    "contact": {
      "name": "Mockster",
      "url": "https://mockster.dev",
      "email": "support@mockster.dev"
    }
  },
  "host": "api.mockster.dev",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/airlines": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "aircraftType": {
                    "type": "string",
                    "description": "Returns a random aircraft type: regional, narrowbody or widebody.",
                    "x-ms-summary": "Aircraft Type",
                    "x-ms-visibility": "advanced"
                  },
                  "airlineName": {
                    "type": "string",
                    "description": "Returns a random airline name. For example: Sky Airline.",
                    "x-ms-summary": "Airline Name",
                    "x-ms-visibility": "important"
                  },
                  "airlineCode": {
                    "type": "string",
                    "description": "Returns a random airline IATA code. For example: H2.",
                    "x-ms-summary": "Airline IATA Code",
                    "x-ms-visibility": "advanced"
                  },
                  "airplaneName": {
                    "type": "string",
                    "description": "Returns a random airplane name. For example: De Havilland DH.104 Dove.",
                    "x-ms-summary": "Airplane Name",
                    "x-ms-visibility": "important"
                  },
                  "airplaneTypeCode": {
                    "type": "string",
                    "description": "Returns a random airplane name. For example: DHD.",
                    "x-ms-summary": "Airplane IATA Type Code",
                    "x-ms-visibility": "advanced"
                  },
                  "departureAirportName": {
                    "type": "string",
                    "description": "Returns a random departure airport name. For example: Heathrow.",
                    "x-ms-summary": "Departure Airport Name",
                    "x-ms-visibility": "important"
                  },
                  "departureAirportCode": {
                    "type": "string",
                    "description": "Returns a random departure airport IATA code. For example: DEL.",
                    "x-ms-summary": "Departure Airport IATA Code",
                    "x-ms-visibility": "advanced"
                  },
                  "arrivalAirportName": {
                    "type": "string",
                    "description": "Returns a random arrival airport name. For example: Perth Airport.",
                    "x-ms-summary": "Arrival Airport Name",
                    "x-ms-visibility": "important"
                  },
                  "arrivalAirportCode": {
                    "type": "string",
                    "description": "Returns a random arrival airport IATA code. For example: PER.",
                    "x-ms-summary": "Arrival Airport IATA Code",
                    "x-ms-visibility": "advanced"
                  },
                  "flightNumber": {
                    "type": "string",
                    "description": "Returns a random flight number. For example: H20316.",
                    "x-ms-summary": "Flight Number",
                    "x-ms-visibility": "important"
                  },
                  "recordLocator": {
                    "type": "string",
                    "description": "Returns a random record locator. For example: ACWNMD.",
                    "x-ms-summary": "Record Locator",
                    "x-ms-visibility": "advanced"
                  },
                  "seat": {
                    "type": "string",
                    "description": "Returns a random seat. For example: 14A.",
                    "x-ms-summary": "Seat",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get airline mockdata",
        "description": "Generate aviation related data.",
        "operationId": "GetAirlines",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/animals": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bear": {
                    "type": "string",
                    "description": "Returns a random breed of bear. For example: Polar bear.",
                    "x-ms-summary": "Bear",
                    "x-ms-visibility": "advanced"
                  },
                  "bird": {
                    "type": "string",
                    "description": "Returns a random breed of bird. For example: Eurasian Wigeon.",
                    "x-ms-summary": "Bird",
                    "x-ms-visibility": "advanced"
                  },
                  "cat": {
                    "type": "string",
                    "description": "Returns a random breed of cat. For example: Birman.",
                    "x-ms-summary": "Cat",
                    "x-ms-visibility": "important"
                  },
                  "cetacean": {
                    "type": "string",
                    "description": "Returns a random breed of cetacean. For example: Short-Beaked Common Dolphin.",
                    "x-ms-summary": "Cetacean",
                    "x-ms-visibility": "advanced"
                  },
                  "cow": {
                    "type": "string",
                    "description": "Returns a random breed of cow. For example: Deep Red cattle.",
                    "x-ms-summary": "Cow",
                    "x-ms-visibility": "advanced"
                  },
                  "crocodilia": {
                    "type": "string",
                    "description": "Returns a random breed of crocodilia. For example: Philippine Crocodile.",
                    "x-ms-summary": "Crocodilia",
                    "x-ms-visibility": "advanced"
                  },
                  "dog": {
                    "type": "string",
                    "description": "Returns a random breed of dog. For example: Molossus of Epirus.",
                    "x-ms-summary": "Dog",
                    "x-ms-visibility": "important"
                  },
                  "fish": {
                    "type": "string",
                    "description": "Returns a random breed of fish. For example: Indian mackerel.",
                    "x-ms-summary": "Fish",
                    "x-ms-visibility": "important"
                  },
                  "horse": {
                    "type": "string",
                    "description": "Returns a random breed of horse. For example: Fleuve.",
                    "x-ms-summary": "Horse",
                    "x-ms-visibility": "advanced"
                  },
                  "insect": {
                    "type": "string",
                    "description": "Returns a random breed of insect. For example: German yellowjacket.",
                    "x-ms-summary": "Insect",
                    "x-ms-visibility": "advanced"
                  },
                  "lion": {
                    "type": "string",
                    "description": "Returns a random breed of lion. For example: Asiatic Lion.",
                    "x-ms-summary": "Lion",
                    "x-ms-visibility": "advanced"
                  },
                  "rabbit": {
                    "type": "string",
                    "description": "Returns a random breed of rabbit. For example: Flemish Giant.",
                    "x-ms-summary": "Rabbit",
                    "x-ms-visibility": "advanced"
                  },
                  "rodent": {
                    "type": "string",
                    "description": "Returns a random breed of rodent. For example: Fukomys mechowii.",
                    "x-ms-summary": "Rodent",
                    "x-ms-visibility": "advanced"
                  },
                  "snake": {
                    "type": "string",
                    "description": "Returns a random breed of snake. For example: Barred wolf snake.",
                    "x-ms-summary": "Snake",
                    "x-ms-visibility": "advanced"
                  },
                  "type": {
                    "type": "string",
                    "description": "Returns a random type of animal. For example: dog.",
                    "x-ms-summary": "Type",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get animals mockdata",
        "description": "Generate different kinds of animal species.",
        "operationId": "GetAnimals",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/colors": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cmyk": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random CMYK color decimal values.",
                    "x-ms-summary": "CMYK",
                    "x-ms-visibility": "advanced"
                  },
                  "colorByCSSColorSpace": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random CSS color decimal values.",
                    "x-ms-summary": "Color By CSS Color Space",
                    "x-ms-visibility": "advanced"
                  },
                  "cssSupportedFunction": {
                    "type": "string",
                    "description": "Returns a random CSS supported color function name. For example: lch.",
                    "x-ms-summary": "CSS Supported Function",
                    "x-ms-visibility": "advanced"
                  },
                  "cssSupportedSpace": {
                    "type": "string",
                    "description": "Returns a random CSS supported color space name. For example: rec2020.",
                    "x-ms-summary": "CSS Supported Space",
                    "x-ms-visibility": "advanced"
                  },
                  "hsl": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random hsl color decimal values.",
                    "x-ms-summary": "HSL",
                    "x-ms-visibility": "advanced"
                  },
                  "humanReadableColor": {
                    "type": "string",
                    "description": "Returns a random human readable color name. For example turquoise.",
                    "x-ms-summary": "Human readable color",
                    "x-ms-visibility": "important"
                  },
                  "hwb": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random hwb color decimal values.",
                    "x-ms-summary": "HWB",
                    "x-ms-visibility": "advanced"
                  },
                  "lab": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random lab color decimal values.",
                    "x-ms-summary": "LAB",
                    "x-ms-visibility": "advanced"
                  },
                  "lch": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Returns a random lch color decimal values.",
                    "x-ms-summary": "LCH",
                    "x-ms-visibility": "advanced"
                  },
                  "rgb": {
                    "type": "string",
                    "description": "Returns a random RGB color in hex format. For example: #be7fcc.",
                    "x-ms-summary": "RGB",
                    "x-ms-visibility": "advanced"
                  },
                  "colorSpace": {
                    "type": "string",
                    "description": "Returns a random color space name. For example: CIEUVW.",
                    "x-ms-summary": "Color space",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get color mockdata",
        "description": "Generate color related data.",
        "operationId": "GetColors",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/companies": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "buzzAdjective": {
                    "type": "string",
                    "description": "Returns a random buzz adjective. For example: extensible.",
                    "x-ms-summary": "Buzz Adjective",
                    "x-ms-visibility": "advanced"
                  },
                  "buzzNoun": {
                    "type": "string",
                    "description": "Returns a random buzz noun. For example: initiatives.",
                    "x-ms-summary": "Buzz Noun",
                    "x-ms-visibility": "advanced"
                  },
                  "buzzPhrase": {
                    "type": "string",
                    "description": "Returns a random buzz phrase. For example: mesh clicks-and-mortar eyeballs.",
                    "x-ms-summary": "Buzz Phrase",
                    "x-ms-visibility": "advanced"
                  },
                  "buzzVerb": {
                    "type": "string",
                    "description": "Returns a random buzz verb. For example: expedite.",
                    "x-ms-summary": "Buzz Verb",
                    "x-ms-visibility": "advanced"
                  },
                  "catchPhrase": {
                    "type": "string",
                    "description": "Returns a random catch phrase. For example: Business-focused moratorium.",
                    "x-ms-summary": "Catch Phrase",
                    "x-ms-visibility": "advanced"
                  },
                  "catchPhraseAdjective": {
                    "type": "string",
                    "description": "Returns a random catch phrase adjective. For example: Integrated.",
                    "x-ms-summary": "Catch Phrase Adjective",
                    "x-ms-visibility": "advanced"
                  },
                  "catchPhraseDescriptor": {
                    "type": "string",
                    "description": "Returns a random catch phrase descriptor. For example: uniform.",
                    "x-ms-summary": "Catch Phrase Descriptor",
                    "x-ms-visibility": "advanced"
                  },
                  "catchPhraseNoun": {
                    "type": "string",
                    "description": "Returns a random catch phrase noun. For example: focus group.",
                    "x-ms-summary": "Catch Phrase Noun",
                    "x-ms-visibility": "advanced"
                  },
                  "city": {
                    "type": "string",
                    "description": "Returns a random city. For example: Weissnatchester.",
                    "x-ms-summary": "City",
                    "x-ms-visibility": "important"
                  },
                  "country": {
                    "type": "string",
                    "description": "Returns a random country. For example: Saudi Arabia.",
                    "x-ms-summary": "Country",
                    "x-ms-visibility": "important"
                  },
                  "creditLimit": {
                    "type": "number",
                    "description": "Returns a random credit limit. For example: 9000000.",
                    "x-ms-summary": "Credit Limit",
                    "x-ms-visibility": "advanced"
                  },
                  "email": {
                    "type": "string",
                    "description": "Returns a random email. For example: Dylan4@gmail.com.",
                    "x-ms-summary": "Email",
                    "x-ms-visibility": "advanced"
                  },
                  "mobilePhone": {
                    "type": "string",
                    "description": "Returns a random mobile phone number. For example: (337) 925-6199.",
                    "x-ms-summary": "Mobile Phone",
                    "x-ms-visibility": "advanced"
                  },
                  "name": {
                    "type": "string",
                    "description": "Returns a random company name. For example: Dibbert, Kirlin and Hammes.",
                    "x-ms-summary": "Name",
                    "x-ms-visibility": "important"
                  },
                  "numberOfEmployees": {
                    "type": "integer",
                    "description": "Returns a random number of employees. For example: 9820.",
                    "x-ms-summary": "Number Of Employees",
                    "x-ms-visibility": "important"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Returns a random phone number. For example: (836) 964-9811.",
                    "x-ms-summary": "Phone",
                    "x-ms-visibility": "important"
                  },
                  "revenue": {
                    "type": "number",
                    "description": "Returns a random revenue. For example: 8000000.",
                    "x-ms-summary": "Revenue",
                    "x-ms-visibility": "advanced"
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "Returns a random street address. For example: 78999 Zemlak Field.",
                    "x-ms-summary": "Street Address",
                    "x-ms-visibility": "important"
                  },
                  "website": {
                    "type": "string",
                    "description": "Returns a random website. For example: https://visible-derivative.com/.",
                    "x-ms-summary": "Website",
                    "x-ms-visibility": "advanced"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "Returns a random zip code. For example: 54306-5071.",
                    "x-ms-summary": "Zip Code",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get company mockdata",
        "description": "Generate company related data, like names and company jargon.",
        "operationId": "GetCompanies",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/databases": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "collation": {
                    "type": "string",
                    "description": "Returns a random collation.",
                    "x-ms-summary": "Collation",
                    "x-ms-visibility": "advanced"
                  },
                  "column": {
                    "type": "string",
                    "description": "Returns a random column name.",
                    "x-ms-summary": "Column",
                    "x-ms-visibility": "important"
                  },
                  "engine": {
                    "type": "string",
                    "description": "Returns a random engine.",
                    "x-ms-summary": "Engine",
                    "x-ms-visibility": "advanced"
                  },
                  "mongodbObjectId": {
                    "type": "string",
                    "description": "Returns a random MongoDB ObjectId.",
                    "x-ms-summary": "MongoDB ObjectId",
                    "x-ms-visibility": "advanced"
                  },
                  "type": {
                    "type": "string",
                    "description": "Returns a random database type.",
                    "x-ms-summary": "Type",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get database mockdata",
        "description": "Generate database related technical data, like columns or engines.",
        "operationId": "GetDatabases",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/dates": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "anytime": {
                    "type": "string",
                    "description": "Returns a random date and time. For example: 2023-12-30T01:54:24.658Z.",
                    "x-ms-summary": "Anytime",
                    "x-ms-visibility": "important"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "Returns a random birthdate for an adult. For example: 1948-06-14T08:47:26.296Z.",
                    "x-ms-summary": "Birthdate",
                    "x-ms-visibility": "advanced"
                  },
                  "future": {
                    "type": "string",
                    "description": "Returns a random future date and time. For example: 2024-06-01T09:36:53.510Z.",
                    "x-ms-summary": "Future",
                    "x-ms-visibility": "advanced"
                  },
                  "month": {
                    "type": "string",
                    "description": "Returns a random month name. For example: March.",
                    "x-ms-summary": "Month",
                    "x-ms-visibility": "advanced"
                  },
                  "past": {
                    "type": "string",
                    "description": "Returns a random past date and time. For example: 2023-08-20T17:40:37.262Z.",
                    "x-ms-summary": "Past",
                    "x-ms-visibility": "advanced"
                  },
                  "recent": {
                    "type": "string",
                    "description": "Returns a random recent date and time in recent past.",
                    "x-ms-summary": "Recent",
                    "x-ms-visibility": "important"
                  },
                  "soon": {
                    "type": "string",
                    "description": "Returns a random date and time in the near future, at most 5 days away.",
                    "x-ms-summary": "Soon",
                    "x-ms-visibility": "important"
                  },
                  "weekday": {
                    "type": "string",
                    "description": "Returns a random weekday name. For example: Friday.",
                    "x-ms-summary": "Weekday"
                  },
                  "year": {
                    "type": "number",
                    "description": "Returns a random year between 1900 and 2100. For example: 2083.",
                    "x-ms-summary": "Year",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get date mockdata",
        "description": "Generate datetime data.",
        "operationId": "GetDates",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/finances": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "description": "Returns a random account name. For example: Savings Account.",
                    "x-ms-summary": "Account Name",
                    "x-ms-visibility": "important"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "Returns a random account number in local format. For example: 54296344.",
                    "x-ms-summary": "Account Type",
                    "x-ms-visibility": "advanced"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Returns a random amount for a transaction. For example: 540.29.",
                    "x-ms-summary": "Amount",
                    "x-ms-visibility": "important"
                  },
                  "bic": {
                    "type": "string",
                    "description": "Returns a random BIC (Bank Identifier Code). For example: OSCTPNT6A96.",
                    "x-ms-summary": "BIC",
                    "x-ms-visibility": "advanced"
                  },
                  "bitcoinAddress": {
                    "type": "string",
                    "description": "Returns a random Bitcoin address.",
                    "x-ms-summary": "Bitcoin Address",
                    "x-ms-visibility": "advanced"
                  },
                  "creditCardCVV": {
                    "type": "string",
                    "description": "Returns a random Credit Card CVV. For example: 400.",
                    "x-ms-summary": "Credit Card CVV",
                    "x-ms-visibility": "advanced"
                  },
                  "creditCardIssuer": {
                    "type": "string",
                    "description": "Returns a random Credit Card Issuer. For example: visa.",
                    "x-ms-summary": "Credit Card Issuer",
                    "x-ms-visibility": "advanced"
                  },
                  "creditCardNumber": {
                    "type": "string",
                    "description": "Returns a random Credit Card Number. For example: 4584186609458.",
                    "x-ms-summary": "Credit Card Number",
                    "x-ms-visibility": "advanced"
                  },
                  "currencyCode": {
                    "type": "string",
                    "description": "Returns a random Currency Code. For example: TRY.",
                    "x-ms-summary": "Currency Code",
                    "x-ms-visibility": "important"
                  },
                  "currencyName": {
                    "type": "string",
                    "description": "Returns a random Currency Name. For example: Turkish Lira.",
                    "x-ms-summary": "Currency Name",
                    "x-ms-visibility": "advanced"
                  },
                  "currencySymbol": {
                    "type": "string",
                    "description": "Returns a random Currency Symbol. For example: \u20ba.",
                    "x-ms-summary": "Currency Symbol",
                    "x-ms-visibility": "advanced"
                  },
                  "ethereumAddress": {
                    "type": "string",
                    "description": "Returns a random Ethereum Address.",
                    "x-ms-summary": "Ethereum Address",
                    "x-ms-visibility": "advanced"
                  },
                  "iban": {
                    "type": "string",
                    "description": "Returns a random IBAN (International Bank Account Number).",
                    "x-ms-summary": "IBAN",
                    "x-ms-visibility": "important"
                  },
                  "litecoinAddress": {
                    "type": "string",
                    "description": "Returns a random Litecoin Address.",
                    "x-ms-summary": "Litecoin Address",
                    "x-ms-visibility": "advanced"
                  },
                  "maskedNumber": {
                    "type": "string",
                    "description": "Returns a random Masked Number. For example: (\u20260859).",
                    "x-ms-summary": "Masked Number",
                    "x-ms-visibility": "advanced"
                  },
                  "pin": {
                    "type": "string",
                    "description": "Returns a random PIN. For example: 1309.",
                    "x-ms-summary": "PIN",
                    "x-ms-visibility": "advanced"
                  },
                  "routingNumber": {
                    "type": "string",
                    "description": "Returns a random Routing Number. For example: 164294325.",
                    "x-ms-summary": "Routing Number",
                    "x-ms-visibility": "advanced"
                  },
                  "transactionDescription": {
                    "type": "string",
                    "description": "Returns a random Transaction Description.",
                    "x-ms-summary": "Transaction Description",
                    "x-ms-visibility": "advanced"
                  },
                  "transactionType": {
                    "type": "string",
                    "description": "Returns a random Transaction Type. For example: payment.",
                    "x-ms-summary": "Transaction Type",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get finance mockdata",
        "description": "Generate finance related data, like credit card information, or account information.",
        "operationId": "GetFinances",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/gits": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "branch": {
                    "type": "string",
                    "description": "Returns the branch name of the commit. For example: interface-compress.",
                    "x-ms-summary": "Branch",
                    "x-ms-visibility": "advanced"
                  },
                  "commitDate": {
                    "type": "string",
                    "description": "Returns the date and time of the commit. Formatting is the same as in git log.",
                    "x-ms-summary": "Commit Date",
                    "x-ms-visibility": "advanced"
                  },
                  "commitEntry": {
                    "type": "string",
                    "description": "Returns the full commit entry.",
                    "x-ms-summary": "Commit Entry",
                    "x-ms-visibility": "advanced"
                  },
                  "commitMessage": {
                    "type": "string",
                    "description": "Returns the commit message. For example: compress open-source array.",
                    "x-ms-summary": "Commit Message",
                    "x-ms-visibility": "important"
                  },
                  "commitSha": {
                    "type": "string",
                    "description": "Returns the SHA of the commit.",
                    "x-ms-summary": "Commit SHA",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get git mockdata",
        "description": "Generate git related data.",
        "operationId": "GetGits",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/hackers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "abbreviation": {
                    "type": "string",
                    "description": "Returns an abbreviation from technologies. For example: XSS.",
                    "x-ms-summary": "Abbreviation",
                    "x-ms-visibility": "advanced"
                  },
                  "adjective": {
                    "type": "string",
                    "description": "Returns a hacker or technology related adjective. For example: 1080p.",
                    "x-ms-summary": "Adjective",
                    "x-ms-visibility": "advanced"
                  },
                  "ingverb": {
                    "type": "string",
                    "description": "Returns a verb ending in -ing. For example: quantifying.",
                    "x-ms-summary": "Ingverb",
                    "x-ms-visibility": "advanced"
                  },
                  "noun": {
                    "type": "string",
                    "description": "Returns a hacker or technology related noun. For example: card.",
                    "x-ms-summary": "Noun",
                    "x-ms-visibility": "advanced"
                  },
                  "phrase": {
                    "type": "string",
                    "description": "Returns a hacker or technology related phrase.",
                    "x-ms-summary": "Phrase",
                    "x-ms-visibility": "important"
                  },
                  "verb": {
                    "type": "string",
                    "description": "Returns a hacker or technology related verb. For example: override.",
                    "x-ms-summary": "Verb",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get hacker mockdata",
        "description": "Generate hacker or IT related buzzwords.",
        "operationId": "GetHackers",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/images": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Returns an image name.",
                    "x-ms-summary": "Image Name",
                    "x-ms-visibility": "important"
                  },
                  "url": {
                    "type": "string",
                    "description": "Returns an image url.",
                    "x-ms-summary": "Image Url",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get random images",
        "description": "Generate random images.",
        "operationId": "GetRandomImages",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Width",
            "x-ms-visibility": "advanced",
            "description": "Define the width of the image. Default is 640."
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Height",
            "x-ms-visibility": "advanced",
            "description": "Define the height of the image. Default is 480."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Category",
            "x-ms-visibility": "important",
            "description": "Define the category of the image.",
            "enum": [
              "abstract",
              "animals",
              "business",
              "cats",
              "city",
              "food",
              "nightlife",
              "fashion",
              "people",
              "nature",
              "sports",
              "technics",
              "transport"
            ]
          }
        ]
      }
    },
    "/internets": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "string",
                    "description": "Returns a random color code in hex format. For example: #511134.",
                    "x-ms-summary": "Color",
                    "x-ms-visibility": "advanced"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Returns a display name for a given user.",
                    "x-ms-summary": "Display Name",
                    "x-ms-visibility": "important"
                  },
                  "domainName": {
                    "type": "string",
                    "description": "Returns a random domain name. For example: clear-operating.info.",
                    "x-ms-summary": "Domain Name",
                    "x-ms-visibility": "important"
                  },
                  "domainSuffix": {
                    "type": "string",
                    "description": "Returns a domain suffix. For example: net.",
                    "x-ms-summary": "Domain Suffix",
                    "x-ms-visibility": "advanced"
                  },
                  "domainWord": {
                    "type": "string",
                    "description": "Returns a random word to be used in a domain. For example: sparkling-bather.",
                    "x-ms-summary": "Domain Word",
                    "x-ms-visibility": "advanced"
                  },
                  "email": {
                    "type": "string",
                    "description": "Returns an email address. For example: Ted_Runolfsson10@yahoo.com.",
                    "x-ms-summary": "Email",
                    "x-ms-visibility": "advanced"
                  },
                  "emoji": {
                    "type": "string",
                    "description": "Returns a random emoji. For example: \ud83d\ude3a.",
                    "x-ms-summary": "Emoji",
                    "x-ms-visibility": "advanced"
                  },
                  "exampleEmail": {
                    "type": "string",
                    "description": "Returns an example email address. For example: Ted_Runolfsson88@example.net.",
                    "x-ms-summary": "Example Email"
                  },
                  "httpMethod": {
                    "type": "string",
                    "description": "Returns a HTTP method. For example: PUT.",
                    "x-ms-summary": "HTTP Method",
                    "x-ms-visibility": "advanced"
                  },
                  "httpStatusCode": {
                    "type": "integer",
                    "description": "Returns a HTTP status code. For example: 103.",
                    "x-ms-summary": "HTTP Status Code",
                    "x-ms-visibility": "advanced"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Returns a random IPv4 or IPv6 address.",
                    "x-ms-summary": "IP Address",
                    "x-ms-visibility": "advanced"
                  },
                  "ipv4": {
                    "type": "string",
                    "description": "Returns an IPv4 address. For example: 146.120.42.165.",
                    "x-ms-summary": "IPv4 Address",
                    "x-ms-visibility": "advanced"
                  },
                  "ipv6": {
                    "type": "string",
                    "description": "Returns an IPv6 address.",
                    "x-ms-summary": "IPv6 Address",
                    "x-ms-visibility": "advanced"
                  },
                  "mac": {
                    "type": "string",
                    "description": "Returns a MAC address. For example: c8:14:d0:db:1e:d4.",
                    "x-ms-summary": "MAC Address",
                    "x-ms-visibility": "advanced"
                  },
                  "password": {
                    "type": "string",
                    "description": "Returns a random string to be used as a password.",
                    "x-ms-summary": "Password",
                    "x-ms-visibility": "advanced"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Returns a random port number. For example: 5071.",
                    "x-ms-summary": "Port Number",
                    "x-ms-visibility": "advanced"
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Returns a protocol. For example: https.",
                    "x-ms-summary": "Protocol",
                    "x-ms-visibility": "advanced"
                  },
                  "url": {
                    "type": "string",
                    "description": "Returns a random URL. For example: https://immaculate-debtor.biz.",
                    "x-ms-summary": "URL",
                    "x-ms-visibility": "advanced"
                  },
                  "userAgent": {
                    "type": "string",
                    "description": "Returns a random user agent. ",
                    "x-ms-summary": "User Agent",
                    "x-ms-visibility": "advanced"
                  },
                  "username": {
                    "type": "string",
                    "description": "Returns a username. For example: Ted42.",
                    "x-ms-summary": "Username",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get internet mockdata",
        "description": "Get rich data about things in the internet like users or networking terms.",
        "operationId": "GetInternet",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/locations": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "buildingNumber": {
                    "type": "string",
                    "description": "Returns a building number. For example: 79502.",
                    "x-ms-summary": "Building Number",
                    "x-ms-visibility": "advanced"
                  },
                  "cardinalDirection": {
                    "type": "string",
                    "description": "Returns a cardinal direction. For example: South.",
                    "x-ms-summary": "Cardinal Direction",
                    "x-ms-visibility": "advanced"
                  },
                  "city": {
                    "type": "string",
                    "description": "Returns a city name. For example: Devantestead.",
                    "x-ms-summary": "City",
                    "x-ms-visibility": "important"
                  },
                  "country": {
                    "type": "string",
                    "description": "Returns a country name. For example: Faroe Islands.",
                    "x-ms-summary": "Country",
                    "x-ms-visibility": "important"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Returns a country code. For example: PE.",
                    "x-ms-summary": "Country Code",
                    "x-ms-visibility": "advanced"
                  },
                  "county": {
                    "type": "string",
                    "description": "Returns a county name. For example: Avon.",
                    "x-ms-summary": "County",
                    "x-ms-visibility": "advanced"
                  },
                  "direction": {
                    "type": "string",
                    "description": "Returns a direction. For example: Southeast.",
                    "x-ms-summary": "Direction",
                    "x-ms-visibility": "advanced"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Returns a latitude coordinate. For example: -21.109.",
                    "x-ms-summary": "Latitude",
                    "x-ms-visibility": "advanced"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Returns a longitude coordinate. For example: -60.2472.",
                    "x-ms-summary": "Longitude",
                    "x-ms-visibility": "advanced"
                  },
                  "ordinalDirection": {
                    "type": "string",
                    "description": "Returns an ordinal direction. For example: Northwest.",
                    "x-ms-summary": "Ordinal Direction",
                    "x-ms-visibility": "advanced"
                  },
                  "secondaryAddress": {
                    "type": "string",
                    "description": "Returns a secondary address. For example: Suite 719.",
                    "x-ms-summary": "Secondary Address",
                    "x-ms-visibility": "advanced"
                  },
                  "state": {
                    "type": "string",
                    "description": "Returns a state name. For example: Kansas.",
                    "x-ms-summary": "State",
                    "x-ms-visibility": "advanced"
                  },
                  "street": {
                    "type": "string",
                    "description": "Returns a street name. For example: Willow Street.",
                    "x-ms-summary": "Street",
                    "x-ms-visibility": "important"
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "Returns a street address. For example: 7619 Damaris Junctions.",
                    "x-ms-summary": "Street Address",
                    "x-ms-visibility": "important"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "Returns a time zone. For example: Pacific/Funafuti.",
                    "x-ms-summary": "Time Zone",
                    "x-ms-visibility": "advanced"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "Returns a zip code. For example: 38467.",
                    "x-ms-summary": "Zip Code",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get location mockdata",
        "description": "Generate location related data.",
        "operationId": "GetLocations",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/lorems": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lines": {
                    "type": "string",
                    "description": "Returns a set of lines.",
                    "x-ms-summary": "Lines",
                    "x-ms-visibility": "advanced"
                  },
                  "paragraph": {
                    "type": "string",
                    "description": "Returns a paragraph.",
                    "x-ms-summary": "Paragraph",
                    "x-ms-visibility": "important"
                  },
                  "paragraphs": {
                    "type": "string",
                    "description": "Returns multiple paragraphs.",
                    "x-ms-summary": "Paragraphs",
                    "x-ms-visibility": "advanced"
                  },
                  "sentence": {
                    "type": "string",
                    "description": "Returns a sentence.",
                    "x-ms-summary": "Sentence",
                    "x-ms-visibility": "important"
                  },
                  "sentences": {
                    "type": "string",
                    "description": "Returns multiple sentences.",
                    "x-ms-summary": "Sentences",
                    "x-ms-visibility": "advanced"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Returns a slug.",
                    "x-ms-summary": "Slug",
                    "x-ms-visibility": "advanced"
                  },
                  "text": {
                    "type": "string",
                    "description": "Returns a text.",
                    "x-ms-summary": "Text",
                    "x-ms-visibility": "advanced"
                  },
                  "word": {
                    "type": "string",
                    "description": "Returns a word. For example: circumvenio.",
                    "x-ms-summary": "Word",
                    "x-ms-visibility": "important"
                  },
                  "words": {
                    "type": "string",
                    "description": "Returns multiple words. For example: toties ter colligo.",
                    "x-ms-summary": "Words",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Lorem Ipsum mockdata",
        "description": "Generate lorem ipsum.",
        "operationId": "GetLorems",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/musics": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "genre": {
                    "type": "string",
                    "description": "Returns a random genre.",
                    "x-ms-summary": "Genre",
                    "x-ms-visibility": "important"
                  },
                  "songName": {
                    "type": "string",
                    "description": "Returns a random song name.",
                    "x-ms-summary": "Song name",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get music mockdata",
        "description": "Generate music related data.",
        "operationId": "GetMusics",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/numbers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "binary": {
                    "type": "string",
                    "description": "Returns a binary number. For example: 0.",
                    "x-ms-summary": "Binary",
                    "x-ms-visibility": "advanced"
                  },
                  "float": {
                    "type": "number",
                    "description": "Returns a floating point number. For example: 0.5515858614817262.",
                    "x-ms-summary": "Float",
                    "x-ms-visibility": "important"
                  },
                  "hex": {
                    "type": "string",
                    "description": "Returns a hexadecimal number. For example: e.",
                    "x-ms-summary": "Hexadecimal",
                    "x-ms-visibility": "advanced"
                  },
                  "int": {
                    "type": "number",
                    "description": "Returns an integer number. For example: 8414578299895808.",
                    "x-ms-summary": "Integer",
                    "x-ms-visibility": "important"
                  },
                  "octal": {
                    "type": "string",
                    "description": "Returns an octal number. For example: 5.",
                    "x-ms-summary": "Octal",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get numeric mockdata",
        "description": "Generate different kinds of numbers.",
        "operationId": "GetNumbers",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/persons": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "description": "Returns the bio of the person.",
                    "x-ms-summary": "Bio",
                    "x-ms-visibility": "advanced"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "Returns the birthday of the person.",
                    "x-ms-summary": "Birthday",
                    "x-ms-visibility": "advanced"
                  },
                  "businessPhone": {
                    "type": "string",
                    "description": "Returns the business phone number of the person.",
                    "x-ms-summary": "Business Phone",
                    "x-ms-visibility": "advanced"
                  },
                  "city": {
                    "type": "string",
                    "description": "Returns the city of the person. For example: McLaughlinchester.",
                    "x-ms-summary": "City",
                    "x-ms-visibility": "advanced"
                  },
                  "country": {
                    "type": "string",
                    "description": "Returns the country of the person. For example: New Caledonia.",
                    "x-ms-summary": "Country",
                    "x-ms-visibility": "advanced"
                  },
                  "creditLimit": {
                    "type": "number",
                    "description": "Returns the credit limit of the person. For example: 6203000.",
                    "x-ms-summary": "Credit Limit",
                    "x-ms-visibility": "advanced"
                  },
                  "department": {
                    "type": "string",
                    "description": "Returns the department of the person. For example: Purchasing.",
                    "x-ms-summary": "Department",
                    "x-ms-visibility": "advanced"
                  },
                  "description": {
                    "type": "string",
                    "description": "Returns the description of the person. For example: significance lover.",
                    "x-ms-summary": "Description",
                    "x-ms-visibility": "advanced"
                  },
                  "email": {
                    "type": "string",
                    "description": "Returns the email of the person. For example: Angelo.Runte95@gmail.com.",
                    "x-ms-summary": "Email",
                    "x-ms-visibility": "advanced"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Returns the first name of the person. For example: Angelo.",
                    "x-ms-summary": "First Name",
                    "x-ms-visibility": "important"
                  },
                  "fullName": {
                    "type": "string",
                    "description": "Returns the full name of the person. For example: Angelo Runte.",
                    "x-ms-summary": "Full Name",
                    "x-ms-visibility": "important"
                  },
                  "gender": {
                    "type": "string",
                    "description": "Returns the gender of the person. For example: Trans male.",
                    "x-ms-summary": "Gender",
                    "x-ms-visibility": "advanced"
                  },
                  "jobArea": {
                    "type": "string",
                    "description": "Returns the job area of the person. For example: Intranet.",
                    "x-ms-summary": "Job Area",
                    "x-ms-visibility": "advanced"
                  },
                  "lastname": {
                    "type": "string",
                    "description": "Returns the last name of the person. For example: Runte.",
                    "x-ms-summary": "Last Name",
                    "x-ms-visibility": "important"
                  },
                  "sexType": {
                    "type": "string",
                    "description": "Returns the sex type of the person. For example: male.",
                    "x-ms-summary": "Sex Type",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get people mockdata",
        "description": "Generate data for a person.",
        "operationId": "GetPeople",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/phones": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "imei": {
                    "type": "string",
                    "description": "Returns the IMEI number of the phone. For example: 45-156714-750405-6.",
                    "x-ms-summary": "IMEI",
                    "x-ms-visibility": "important"
                  },
                  "number": {
                    "type": "string",
                    "description": "Returns a random phone number in international format.",
                    "x-ms-summary": "Phone number",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get phone mockdata",
        "description": "Generate phone number and IMEI.",
        "operationId": "GetPhones",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/products": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "department": {
                    "type": "string",
                    "description": "Returns the department of the product. For example: Computers.",
                    "x-ms-summary": "Department",
                    "x-ms-visibility": "important"
                  },
                  "isbn": {
                    "type": "string",
                    "description": "Returns the ISBN of the product. For example: 978-0-911547-60-3.",
                    "x-ms-summary": "ISBN",
                    "x-ms-visibility": "advanced"
                  },
                  "price": {
                    "type": "number",
                    "description": "Returns the price of the product. For example: 606.",
                    "x-ms-summary": "Price",
                    "x-ms-visibility": "important"
                  },
                  "product": {
                    "type": "string",
                    "description": "Returns the type of the product. For example: Salad.",
                    "x-ms-summary": "Short product name",
                    "x-ms-visibility": "important"
                  },
                  "productAdjective": {
                    "type": "string",
                    "description": "Returns an adjective describing the product. For example: Elegant.",
                    "x-ms-summary": "Product Adjective",
                    "x-ms-visibility": "advanced"
                  },
                  "productDescription": {
                    "type": "string",
                    "description": "Returns a description of the product.",
                    "x-ms-summary": "Product Description",
                    "x-ms-visibility": "advanced"
                  },
                  "productMaterial": {
                    "type": "string",
                    "description": "Returns the material of the product. For example: Granite.",
                    "x-ms-summary": "Product Material",
                    "x-ms-visibility": "advanced"
                  },
                  "productName": {
                    "type": "string",
                    "description": "Returns the name of the product. For example: Oriental Frozen Cheese.",
                    "x-ms-summary": "Product Name",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get product mockdata",
        "description": "Generate product related data.",
        "operationId": "GetProducts",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/sciences": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "chemicalElementSymbol": {
                    "type": "string",
                    "description": "Returns the symbol of the chemical element. For example: Ga.",
                    "x-ms-summary": "Chemical Element Symbol",
                    "x-ms-visibility": "advanced"
                  },
                  "chemicalElementName": {
                    "type": "string",
                    "description": "Returns the name of the chemical element. For example: Gallium.",
                    "x-ms-summary": "Chemical Element Name",
                    "x-ms-visibility": "important"
                  },
                  "chemicalElementAtomicNumber": {
                    "type": "integer",
                    "description": "Returns the atomic number of the chemical element. For example: 31.",
                    "x-ms-summary": "Chemical Element Atomic Number",
                    "x-ms-visibility": "advanced"
                  },
                  "unitName": {
                    "type": "string",
                    "description": "Returns a random unit.",
                    "x-ms-summary": "Unit Name",
                    "x-ms-visibility": "important"
                  },
                  "unitSymbol": {
                    "type": "string",
                    "description": "Returns the symbol of the unit. For example: lx.",
                    "x-ms-summary": "Unit Symbol",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get science mockdata",
        "description": "Generate science related data.",
        "operationId": "GetSciences",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/strings": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alpha": {
                    "type": "string",
                    "description": "Returns an alphabetic character. For example: C.",
                    "x-ms-summary": "Alpha"
                  },
                  "alphanumeric": {
                    "type": "string",
                    "description": "Returns an alphanumeric character. For example: X.",
                    "x-ms-summary": "Alphanumeric"
                  },
                  "binary": {
                    "type": "string",
                    "description": "Returns a binary number. For example: 0b0.",
                    "x-ms-summary": "Binary"
                  },
                  "hexadecimal": {
                    "type": "string",
                    "description": "Returns a hexadecimal number. For example: 0xa.",
                    "x-ms-summary": "Hexadecimal"
                  },
                  "nanoid": {
                    "type": "string",
                    "description": "Returns a nanoid. For example: tooWOZFFJtCGUTLofxCia.",
                    "x-ms-summary": "Nanoid"
                  },
                  "numeric": {
                    "type": "string",
                    "description": "Returns a numeric character. For example: 6.",
                    "x-ms-summary": "Numeric"
                  },
                  "octal": {
                    "type": "string",
                    "description": "Returns an octal number. For example: 0o6.",
                    "x-ms-summary": "Octal"
                  },
                  "sample": {
                    "type": "string",
                    "description": "Returns a sample string. For example: G^XL?D'u|D.",
                    "x-ms-summary": "Sample"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Returns a symbol. For example: -.",
                    "x-ms-summary": "Symbol"
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Returns a UUID. For example: 9b39132d-5157-42c4-bd5e-84f30c6d3692.",
                    "x-ms-summary": "UUID"
                  }
                }
              }
            }
          }
        },
        "summary": "Get string mockdata",
        "description": "Generate random strings. Returns an array of properties, by default ten.",
        "operationId": "GetStrings",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/systems": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "commonFileExt": {
                    "type": "string",
                    "description": "Returns a common file name. For example: amongst_vivaciously_populate.wav.",
                    "x-ms-summary": "Common File Extension",
                    "x-ms-visibility": "advanced"
                  },
                  "commonFileName": {
                    "type": "string",
                    "description": "Returns a common file name. For example: amongst_vivaciously_populate.wav.",
                    "x-ms-summary": "Common File Name",
                    "x-ms-visibility": "important"
                  },
                  "commonFileType": {
                    "type": "string",
                    "description": "Returns a common file type. For example: image.",
                    "x-ms-summary": "Common File Type",
                    "x-ms-visibility": "advanced"
                  },
                  "cron": {
                    "type": "string",
                    "description": "Returns a cron expression. For example: 15 * * * ?.",
                    "x-ms-summary": "Cron",
                    "x-ms-visibility": "advanced"
                  },
                  "directoryPath": {
                    "type": "string",
                    "description": "Returns a directory path. For example: /usr/libexec.",
                    "x-ms-summary": "Directory Path"
                  },
                  "fileExt": {
                    "type": "string",
                    "description": "Returns a file extension. For example: pot.",
                    "x-ms-summary": "File Extension",
                    "x-ms-visibility": "important"
                  },
                  "fileName": {
                    "type": "string",
                    "description": "Returns a file name. For example: yummy_commercialise_despite.mid.",
                    "x-ms-summary": "File Name",
                    "x-ms-visibility": "advanced"
                  },
                  "filePath": {
                    "type": "string",
                    "description": "Returns a file path. For example: /private/tmp/interrelate_hmph.tar.",
                    "x-ms-summary": "File Path",
                    "x-ms-visibility": "advanced"
                  },
                  "fileType": {
                    "type": "string",
                    "description": "Returns a file type. For example: image.",
                    "x-ms-summary": "File Type",
                    "x-ms-visibility": "advanced"
                  },
                  "mimeType": {
                    "type": "string",
                    "description": "Returns a mime type. For example: image/gif.",
                    "x-ms-summary": "Mime Type",
                    "x-ms-visibility": "important"
                  },
                  "networkInterface": {
                    "type": "string",
                    "description": "Returns a network interface. For example: wlo6.",
                    "x-ms-summary": "Network Interface",
                    "x-ms-visibility": "advanced"
                  },
                  "semver": {
                    "type": "string",
                    "description": "Returns a semantic version number. For example: 6.2.5.",
                    "x-ms-summary": "Semantic Version",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get system mockdata",
        "description": "Generate system related data.",
        "operationId": "GetSystems",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/vehicles": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bicycle": {
                    "type": "string",
                    "description": "Returns the type of the bicycle. For example: Track/Fixed-Gear Bicycle.",
                    "x-ms-summary": "Bicycle",
                    "x-ms-visibility": "advanced"
                  },
                  "color": {
                    "type": "string",
                    "description": "Returns the color of the vehicle. For example: turquoise.",
                    "x-ms-summary": "Color",
                    "x-ms-visibility": "important"
                  },
                  "fuel": {
                    "type": "string",
                    "description": "Returns the type of fuel the vehicle uses. For example: Electric.",
                    "x-ms-summary": "Fuel",
                    "x-ms-visibility": "important"
                  },
                  "manufacturer": {
                    "type": "string",
                    "description": "Returns the manufacturer of the vehicle. For example: Nissan.",
                    "x-ms-summary": "Manufacturer",
                    "x-ms-visibility": "important"
                  },
                  "model": {
                    "type": "string",
                    "description": "Returns the model of the vehicle. For example: Charger.",
                    "x-ms-summary": "Model",
                    "x-ms-visibility": "important"
                  },
                  "type": {
                    "type": "string",
                    "description": "Returns the type of the vehicle. For example: Extended Cab Pickup.",
                    "x-ms-summary": "Type",
                    "x-ms-visibility": "advanced"
                  },
                  "vehicle": {
                    "type": "string",
                    "description": "Returns the name of the vehicle. For example: Toyota Grand Caravan.",
                    "x-ms-summary": "Vehicle",
                    "x-ms-visibility": "advanced"
                  },
                  "vin": {
                    "type": "string",
                    "description": "Returns the Vehicle Identification Number. For example: 5Z4BWRAU40BP99482.",
                    "x-ms-summary": "VIN",
                    "x-ms-visibility": "advanced"
                  },
                  "vrm": {
                    "type": "string",
                    "description": "Returns the Vehicle Registration Mark. For example: ZJ14CUT.",
                    "x-ms-summary": "VRM",
                    "x-ms-visibility": "advanced"
                  }
                }
              }
            }
          }
        },
        "summary": "Get vehicle mockdata",
        "description": "Generate different kinds of vehicles and related properties.",
        "operationId": "GetVehicles",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    },
    "/words": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "adjective": {
                    "type": "string",
                    "description": "Returns an adjective. For example: remote.",
                    "x-ms-summary": "Adjective",
                    "x-ms-visibility": "important"
                  },
                  "adverb": {
                    "type": "string",
                    "description": "Returns an adverb. For example: loudly.",
                    "x-ms-summary": "Adverb",
                    "x-ms-visibility": "advanced"
                  },
                  "conjunction": {
                    "type": "string",
                    "description": "Returns a conjunction. For example: as.",
                    "x-ms-summary": "Conjunction",
                    "x-ms-visibility": "advanced"
                  },
                  "interjection": {
                    "type": "string",
                    "description": "Returns an interjection. For example: ha.",
                    "x-ms-summary": "Interjection",
                    "x-ms-visibility": "advanced"
                  },
                  "noun": {
                    "type": "string",
                    "description": "Returns a noun. For example: testing.",
                    "x-ms-summary": "Noun",
                    "x-ms-visibility": "important"
                  },
                  "preposition": {
                    "type": "string",
                    "description": "Returns a preposition. For example: between.",
                    "x-ms-summary": "Preposition",
                    "x-ms-visibility": "important"
                  },
                  "sample": {
                    "type": "string",
                    "description": "Returns a sample string. For example: deliberately.",
                    "x-ms-summary": "Sample",
                    "x-ms-visibility": "advanced"
                  },
                  "verb": {
                    "type": "string",
                    "description": "Returns a verb. For example: crease.",
                    "x-ms-summary": "Verb",
                    "x-ms-visibility": "important"
                  },
                  "words": {
                    "type": "string",
                    "description": "Returns a string of words. For example: aha insectarium exhausted.",
                    "x-ms-summary": "Words",
                    "x-ms-visibility": "important"
                  }
                }
              }
            }
          }
        },
        "summary": "Get word mockdata",
        "description": "Get rich data about words.",
        "operationId": "GetWords",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "$ref": "#/parameters/availableLocales"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/seed"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {
    "availableLocales": {
      "name": "availableLocales",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-summary": "Locale",
      "x-ms-visibility": "advanced",
      "description": "The locale to use. Note that not all locales might be supported for all properties.",
      "enum": [
        "af_ZA",
        "ar",
        "az",
        "base",
        "cs_CZ",
        "da",
        "de",
        "de_AT",
        "de_CH",
        "dv",
        "el",
        "en",
        "en_AU",
        "en_AU_ocker",
        "en_BORK",
        "en_CA",
        "en_GB",
        "en_GH",
        "en_HK",
        "en_IE",
        "en_IN",
        "en_NG",
        "en_US",
        "en_ZA",
        "eo",
        "es",
        "es_MX",
        "fa",
        "fi",
        "fr",
        "fr_BE",
        "fr_CA",
        "fr_CH",
        "fr_LU",
        "fr_SN",
        "he",
        "hr",
        "hu",
        "hy",
        "id_ID",
        "it",
        "ja",
        "ka_GE",
        "ko",
        "lv",
        "mk",
        "nb_NO",
        "ne",
        "nl",
        "nl_BE",
        "pl",
        "pt_BR",
        "pt_PT",
        "ro",
        "ro_MD",
        "ru",
        "sk",
        "sr_RS_latin",
        "sv",
        "th",
        "tr",
        "uk",
        "ur",
        "vi",
        "yo_NG",
        "zh_CN",
        "zh_TW",
        "zu_ZA"
      ],
      "x-ms-enum-values": [
        {
          "value": "af_ZA",
          "displayName": "Afrikaans (South Africa)"
        },
        {
          "value": "ar",
          "displayName": "Arabic"
        },
        {
          "value": "hy",
          "displayName": "Armenian"
        },
        {
          "value": "az",
          "displayName": "Azerbaijani"
        },
        {
          "value": "base",
          "displayName": "Base"
        },
        {
          "value": "zh_CN",
          "displayName": "Chinese (China)"
        },
        {
          "value": "zh_TW",
          "displayName": "Chinese (Taiwan)"
        },
        {
          "value": "hr",
          "displayName": "Croatian"
        },
        {
          "value": "cs_CZ",
          "displayName": "Czech (Czechia)"
        },
        {
          "value": "da",
          "displayName": "Danish"
        },
        {
          "value": "nl",
          "displayName": "Dutch"
        },
        {
          "value": "nl_BE",
          "displayName": "Dutch (Belgium)"
        },
        {
          "value": "ka_GE",
          "displayName": "Georgian (Georgia)"
        },
        {
          "value": "de",
          "displayName": "German"
        },
        {
          "value": "de_AT",
          "displayName": "German (Austria)"
        },
        {
          "value": "de_CH",
          "displayName": "German (Switzerland)"
        },
        {
          "value": "el",
          "displayName": "Greek"
        },
        {
          "value": "en",
          "displayName": "English"
        },
        {
          "value": "en_AU",
          "displayName": "English (Australia)"
        },
        {
          "value": "en_AU_ocker",
          "displayName": "English (Australia Ocker)"
        },
        {
          "value": "en_BORK",
          "displayName": "English (Bork)"
        },
        {
          "value": "en_CA",
          "displayName": "English (Canada)"
        },
        {
          "value": "en_GB",
          "displayName": "English (Great Britain)"
        },
        {
          "value": "en_GH",
          "displayName": "English (Ghana)"
        },
        {
          "value": "en_HK",
          "displayName": "English (Hong Kong)"
        },
        {
          "value": "en_IE",
          "displayName": "English (Ireland)"
        },
        {
          "value": "en_IN",
          "displayName": "English (India)"
        },
        {
          "value": "en_NG",
          "displayName": "English (Nigeria)"
        },
        {
          "value": "en_US",
          "displayName": "English (United States)"
        },
        {
          "value": "en_ZA",
          "displayName": "English (South Africa)"
        },
        {
          "value": "eo",
          "displayName": "Esperanto"
        },
        {
          "value": "fa",
          "displayName": "Farsi/Persian"
        },
        {
          "value": "fi",
          "displayName": "Finnish"
        },
        {
          "value": "fr",
          "displayName": "French"
        },
        {
          "value": "fr_BE",
          "displayName": "French (Belgium)"
        },
        {
          "value": "fr_CA",
          "displayName": "French (Canada)"
        },
        {
          "value": "fr_CH",
          "displayName": "French (Switzerland)"
        },
        {
          "value": "fr_LU",
          "displayName": "French (Luxembourg)"
        },
        {
          "value": "fr_SN",
          "displayName": "French (Senegal)"
        },
        {
          "value": "he",
          "displayName": "Hebrew"
        },
        {
          "value": "hu",
          "displayName": "Hungarian"
        },
        {
          "value": "id_ID",
          "displayName": "Indonesian (Indonesia)"
        },
        {
          "value": "it",
          "displayName": "Italian"
        },
        {
          "value": "ja",
          "displayName": "Japanese"
        },
        {
          "value": "ko",
          "displayName": "Korean"
        },
        {
          "value": "lv",
          "displayName": "Latvian"
        },
        {
          "value": "mk",
          "displayName": "Macedonian"
        },
        {
          "value": "dv",
          "displayName": "Maldivian"
        },
        {
          "value": "nb_NO",
          "displayName": "Norwegian (Norway)"
        },
        {
          "value": "ne",
          "displayName": "Nepali"
        },
        {
          "value": "pl",
          "displayName": "Polish"
        },
        {
          "value": "pt_BR",
          "displayName": "Portuguese (Brazil)"
        },
        {
          "value": "pt_PT",
          "displayName": "Portuguese (Portugal)"
        },
        {
          "value": "ro",
          "displayName": "Romanian"
        },
        {
          "value": "ro_MD",
          "displayName": "Romanian (Moldova)"
        },
        {
          "value": "ru",
          "displayName": "Russian"
        },
        {
          "value": "sr_RS_latin",
          "displayName": "Serbian (Serbia, Latin)"
        },
        {
          "value": "sk",
          "displayName": "Slovak"
        },
        {
          "value": "es",
          "displayName": "Spanish"
        },
        {
          "value": "es_MX",
          "displayName": "Spanish (Mexico)"
        },
        {
          "value": "sv",
          "displayName": "Swedish"
        },
        {
          "value": "th",
          "displayName": "Thai"
        },
        {
          "value": "tr",
          "displayName": "Turkish"
        },
        {
          "value": "uk",
          "displayName": "Ukrainian"
        },
        {
          "value": "ur",
          "displayName": "Urdu"
        },
        {
          "value": "vi",
          "displayName": "Vietnamese"
        },
        {
          "value": "yo_NG",
          "displayName": "Yoruba (Nigeria)"
        },
        {
          "value": "zu_ZA",
          "displayName": "Zulu (South Africa)"
        }
      ]
    },
    "count": {
      "name": "count",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "Count",
      "x-ms-visibility": "important",
      "description": "Define how many objects you want returned. Default is ten."
    },
    "seed": {
      "name": "seed",
      "in": "query",
      "required": false,
      "type": "integer",
      "x-ms-summary": "Seed",
      "x-ms-visibility": "advanced",
      "description": "Seed value for reproducible results."
    }
  },
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://mockster.dev"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://mockster.dev/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Content and Files"
    }
  ]
}