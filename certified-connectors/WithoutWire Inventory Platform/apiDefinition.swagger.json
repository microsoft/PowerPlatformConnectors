{
  "swagger": "2.0",
  "info": {
    "title": "WithoutWire Inventory Platform",
    "description": "The connector contains methods to connect WithoutWire for move requests, order fullfillment requests, adjustments, audits, and allocation as well as any inventory management needs",
    "version": "1.0",
    "contact": {
      "name": "WithoutWire Support",
      "url": "https://www.withoutwire.com/knowledgebase",
      "email": "support@withoutwire.com"
    }
  },
  "host": "api.withoutwire.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/integration/workorder": {
      "get": {
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customerâ€™s PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "The bill to address field 2 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "UpcManufacturerNumber": {
                        "type": "string",
                        "description": "Universal Product Code"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "The bill to phone number for this customer"
                      },
                      "CustomerShipTo": {
                        "type": "string",
                        "description": "A reference to the primary shipping address for this customer"
                      },
                      "RequiredShelfLife": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer number in days representing additional time in advance of an item's expiration required when picking any materials for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer."
                            }
                          }
                        },
                        "description": "Customer shipping addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the order was created"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order"
                        },
                        "ComponentSequence": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If the item is part of a kit, the component sequence is used in conjunction with the line number to determine a unique ordering value"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A unique value that represents an item (BASIC, LOT, SERIAL, DATE)"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure"
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "PickRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityShipped": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity shipped for this pick record"
                              },
                              "QuantityPicked": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity picked for this pick record"
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked"
                              }
                            }
                          },
                          "description": "Records that are already picked"
                        }
                      }
                    },
                    "description": "List of order line items"
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ExportDate": {
                    "type": "string",
                    "description": "The date the order was exported"
                  },
                  "ParentOrderNumber": {
                    "type": "string",
                    "description": "Parent order number"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "StatusCode": {
                    "type": "string",
                    "description": "Order status code"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Internal unique identifier"
                  },
                  "PickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Picking priority"
                  },
                  "RoutePickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Route picking priority"
                  }
                }
              }
            }
          }
        },
        "summary": "Get work orders",
        "operationId": "GetWorkOrders",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "orderStatusCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Work order status (status code)",
            "x-ms-summary": "Work order status (status code)",
            "enum": [
              "UNA",
              "WTP",
              "PIP",
              "WFE",
              "EXP",
              "CMP",
              "REV",
              "PRC",
              "NEW",
              "WFS"
            ]
          },
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Work order number",
            "x-ms-summary": "Work order number"
          }
        ],
        "description": "Returns an array of work orders by status or by number"
      },
      "put": {
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Create or update work order",
        "operationId": "CreateUpdateWorkOrder",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name",
                    "title": "",
                    "x-ms-visibility": "important"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse",
                    "title": "",
                    "x-ms-visibility": "important"
                  },
                  "OrderType": {
                    "type": "string",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)",
                    "title": "",
                    "x-ms-visibility": "important",
                    "default": "6"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customerâ€™s PO Number for the order",
                    "title": "",
                    "x-ms-visibility": "important"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire",
                    "default": "9999"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered",
                    "title": "",
                    "format": "date-time"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the order was created"
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "The bill to address field 2 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "The bill to phone number for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAttn": {
                              "type": "string",
                              "description": "CustomerShipAttn"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            }
                          }
                        },
                        "description": "Customer shipping addresses"
                      }
                    },
                    "description": "Customer",
                    "required": [
                      "CustomerNumber"
                    ]
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A unique value that represents an item (BASIC, LOT, SERIAL, DATE)"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure"
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type",
                          "required": [
                            "UomDesc"
                          ]
                        }
                      },
                      "required": [
                        "LineNumber",
                        "ItemNumber",
                        "CoreItemType",
                        "QuantityOrdered"
                      ]
                    },
                    "description": "List of order line items"
                  }
                },
                "required": [
                  "WarehouseName",
                  "CustomerPoNumber",
                  "OrderNumber",
                  "OrderType",
                  "DeliveryDate",
                  "VendorShipmentNumber",
                  "RouteNumber",
                  "Customer"
                ]
              }
            }
          }
        ],
        "description": "The method creates or updates work order (key is OrderNumber)"
      }
    },
    "/integration/order": {
      "delete": {
        "summary": "Delete Order",
        "operationId": "DeleteOrder",
        "x-ms-visibility": "important",
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "DeletedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of deleted records"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  }
                }
              }
            }
          }
        ],
        "description": "Delete an order (all types)"
      }
    },
    "/integration/order/complete": {
      "put": {
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Set order complete",
        "operationId": "SetOrderComplete",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "IdentityCode": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set the status on orders to CMP (Complete)."
      }
    },
    "/integration/order/status": {
      "put": {
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Set order status",
        "operationId": "SetOrderStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "OrderStatusCode": {
                    "type": "string",
                    "description": "Status code",
                    "title": "",
                    "enum": [
                      "UNA",
                      "WTP",
                      "PIP",
                      "WFE",
                      "EXP",
                      "CMP",
                      "REV",
                      "PRC",
                      "NEW",
                      "WFS"
                    ]
                  },
                  "OrderStatusDescription": {
                    "type": "string",
                    "description": "This API method used to set the status on orders in WithoutWire"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set the status on orders in WithoutWire.  Parameters include:  orderStatusCode and warehouseName"
      }
    },
    "/integration/order/assignment": {
      "put": {
        "responses": {
          "default": {
            "description": "default"
          },
          "200": {
            "description": "200",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Assign order",
        "operationId": "AssignOrder",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "Assignments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of user logins to assign the order"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set orders to be assigned in WithoutWire. The order status will be set to Waiting for Picking. All operators that are set for the role of pick will have access to these orders."
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.withoutwire.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.withoutwire.com/privacy-policy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Productivity"
    }
  ]
}