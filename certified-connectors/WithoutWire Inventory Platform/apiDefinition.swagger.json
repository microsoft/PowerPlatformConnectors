{
  "swagger": "2.0",
  "info": {
    "title": "WithoutWire Inventory Platform",
    "description": "The connector contains methods to connect WithoutWire for move requests, order fullfillment requests, adjustments, audits, and allocation as well as any inventory management needs",
    "version": "1.1",
    "contact": {
      "name": "WithoutWire Support",
      "url": "https://www.withoutwire.com/knowledgebase",
      "email": "support@withoutwire.com"
    }
  },
  "host": "api.withoutwire.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/integration/workorder": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "The bill to address field 2 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "UpcManufacturerNumber": {
                        "type": "string",
                        "description": "Universal Product Code"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "The bill to phone number for this customer"
                      },
                      "CustomerShipTo": {
                        "type": "string",
                        "description": "A reference to the primary shipping address for this customer"
                      },
                      "RequiredShelfLife": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer number in days representing additional time in advance of an item's expiration required when picking any materials for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer."
                            }
                          }
                        },
                        "description": "Customer shipping addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the order was created"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order"
                        },
                        "ComponentSequence": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If the item is part of a kit, the component sequence is used in conjunction with the line number to determine a unique ordering value"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure"
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "PickRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityShipped": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity shipped for this pick record"
                              },
                              "QuantityPicked": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity picked for this pick record"
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked"
                              }
                            }
                          },
                          "description": "Records that are already picked"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ExportDate": {
                    "type": "string",
                    "description": "The date the order was exported"
                  },
                  "ParentOrderNumber": {
                    "type": "string",
                    "description": "Parent order number"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "StatusCode": {
                    "type": "string",
                    "description": "Order status code"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Internal unique identifier"
                  },
                  "PickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Picking priority"
                  },
                  "RoutePickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Route picking priority"
                  }
                }
              }
            }
          }
        },
        "summary": "Get work orders",
        "operationId": "GetWorkOrders",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "orderStatusCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Work order status (status code)",
            "x-ms-summary": "Work order status (status code)",
            "enum": [
              "UNA",
              "WTP",
              "PIP",
              "WFE",
              "EXP",
              "CMP",
              "REV",
              "PRC",
              "NEW",
              "WFS"
            ]
          },
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Work order number",
            "x-ms-summary": "Work order number"
          }
        ],
        "description": "Returns an array of work orders by status or by number"
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Create or update work order",
        "operationId": "CreateUpdateWorkOrder",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name",
                    "title": "Warehouse Name",
                    "x-ms-visibility": "important"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse",
                    "title": "Order Number",
                    "x-ms-visibility": "important"
                  },
                  "OrderType": {
                    "type": "string",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)",
                    "title": "Order Type",
                    "x-ms-visibility": "important",
                    "default": "6"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order",
                    "title": "Order Comment"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order",
                    "title": "Customer PoNumber",
                    "x-ms-visibility": "important"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire",
                    "default": "9999"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered",
                    "title": "Delivery Date",
                    "format": "date-time"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the order was created"
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "The bill to address field 2 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "The bill to phone number for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAttn": {
                              "type": "string",
                              "description": "The attention field indicating the individual being shipped to (if applicable)"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            }
                          }
                        },
                        "description": "Customer shipping addresses"
                      }
                    },
                    "description": "Customer",
                    "required": [
                      "CustomerNumber"
                    ]
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to."
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure"
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type",
                          "required": [
                            "UomDesc"
                          ]
                        }
                      },
                      "required": [
                        "LineNumber",
                        "ItemNumber",
                        "CoreItemType",
                        "QuantityOrdered"
                      ]
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                },
                "required": [
                  "WarehouseName",
                  "CustomerPoNumber",
                  "OrderNumber",
                  "OrderType",
                  "DeliveryDate",
                  "VendorShipmentNumber",
                  "RouteNumber",
                  "Customer"
                ]
              }
            }
          }
        ],
        "description": "The method creates or updates work order (key is OrderNumber)"
      }
    },
    "/integration/order": {
      "delete": {
        "summary": "Delete Order",
        "operationId": "DeleteOrder",
        "x-ms-visibility": "important",
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "DeletedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of deleted records"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  }
                }
              }
            }
          }
        ],
        "description": "Delete an order (all types)"
      }
    },
    "/integration/order/complete": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Set order complete",
        "operationId": "SetOrderComplete",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "IdentityCode": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set the status on orders to CMP (Complete)."
      }
    },
    "/integration/order/status": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Set order status",
        "operationId": "SetOrderStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "OrderStatusCode": {
                    "type": "string",
                    "description": "Status code",
                    "title": "Order Status Code",
                    "enum": [
                      "UNA",
                      "WTP",
                      "PIP",
                      "WFE",
                      "EXP",
                      "CMP",
                      "REV",
                      "PRC",
                      "NEW",
                      "WFS"
                    ]
                  },
                  "OrderStatusDescription": {
                    "type": "string",
                    "description": "This API method used to set the status on orders in WithoutWire"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set the status on orders in WithoutWire. Parameters include: orderStatusCode and warehouseName"
      }
    },
    "/integration/order/assignment": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Assign order",
        "operationId": "AssignOrder",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse name"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "Order number"
                  },
                  "Assignments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of user logins to assign the order"
                  }
                }
              }
            }
          }
        ],
        "description": "This API method used to set orders to be assigned in WithoutWire. The order status will be set to Waiting for Picking. All operators that are set for the role of pick will have access to these orders."
      }
    },
    "/integration/inventory": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Uniquely identifies the warehouse name where the inventory resides.",
                    "title": "Warehouse Name"
                  },
                  "BinNumber": {
                    "type": "string",
                    "description": "The alphanumeric name for the position in the warehouse where the inventory is or can be stored.",
                    "title": "Bin Number"
                  },
                  "BinPath": {
                    "type": "string",
                    "description": "Location of the bin",
                    "title": "Bin Path"
                  },
                  "LicensePlateNumber": {
                    "type": "string",
                    "description": "The alphanumeric name for the pallet in the warehouse where the inventory is, or can be stored.",
                    "title": "License Plate Number"
                  },
                  "ItemNumber": {
                    "type": "string",
                    "description": "Uniquely identifies the item in inventory",
                    "title": "Item Number"
                  },
                  "ItemDescription": {
                    "type": "string",
                    "description": "A name that uniquely identifies an item within the warehouse"
                  },
                  "ItemUom": {
                    "type": "string",
                    "description": "Represents the Unit of Measure for the item.",
                    "title": "Item UOM"
                  },
                  "SignificantDigits": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value representing the number of decimal places to track for this unit of measure",
                    "title": "Significant Digits"
                  },
                  "BaseConvFactor": {
                    "type": "number",
                    "format": "float",
                    "description": "Represents the conversion factor to the base unit of measure for the order."
                  },
                  "BinSequence": {
                    "type": "number",
                    "format": "float",
                    "description": "Each item in inventory can have one primary location. Use 1 to indicate a primary location.",
                    "title": "Bin Sequence"
                  },
                  "MinQuantity": {
                    "type": "number",
                    "format": "float",
                    "description": "Represents the minimum quantity for an item's primary location.",
                    "title": "Min Quantity"
                  },
                  "MaxQuantity": {
                    "type": "number",
                    "format": "float",
                    "description": "Represents the maximum quantity for an item's primary location.",
                    "title": "Max Quantity"
                  },
                  "Active": {
                    "type": "boolean",
                    "description": "Determines if an item is active in the system.",
                    "title": "Is Active"
                  },
                  "CoreItemType": {
                    "type": "string",
                    "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                    "title": "Core Item Type",
                    "enum": [
                      "BASIC",
                      "LOT",
                      "SERIAL",
                      "or DATE"
                    ]
                  },
                  "CoreValue": {
                    "type": "string",
                    "description": "The Lot, Serial, or Date value.",
                    "title": "Core Value"
                  },
                  "Quantity": {
                    "type": "number",
                    "format": "float",
                    "description": "The quantity available for the item in the specific bin of license plate referenced above."
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "Distance": {
                    "type": "string",
                    "description": "A distance from the user making the request to the inventory."
                  }
                }
              }
            }
          }
        },
        "summary": "Get Inventory",
        "operationId": "GetInventory",
        "parameters": [
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "An alphanumeric value that uniquely identifies the item within the warehouse",
            "x-ms-summary": "An alphanumeric value that uniquely identifies the item within the warehouse"
          },
          {
            "name": "binNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The alphanumeric name for the position in the warehouse",
            "x-ms-summary": "The alphanumeric name for the position in the warehouse"
          },
          {
            "name": "allocationSetName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The allocation set that the associated inventory record is assigned to.",
            "x-ms-summary": "The allocation set that the associated inventory record is assigned to."
          },
          {
            "name": "warehouseName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Uniquely identifies the warehouse name where the inventory resides.",
            "x-ms-summary": "Uniquely identifies the warehouse name where the inventory resides."
          },
          {
            "name": "coreValue",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Lot, Serial, or Date value.",
            "x-ms-summary": "The Lot, Serial, or Date value."
          }
        ],
        "x-ms-visibility": "advanced",
        "description": "Returns an array of inventory items by specified parameters"
      }
    },
    "/integration/inventory/request": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records processed in the request",
                  "title": "Total Count"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "Inserted Count"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "Updated Count"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records that weren`t processed due to errors",
                  "title": "Invalid Count"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Create Inventory Request",
        "operationId": "CreateInventoryRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RequestGroup": {
                    "type": "string",
                    "description": "A reference field used to group requests together for easier processing.",
                    "title": "Request Group",
                    "default": "Tech Request"
                  },
                  "SourceProcess": {
                    "type": "string",
                    "description": "This describes the process that generated the request.",
                    "title": "Source Process",
                    "enum": [
                      "Request Inventory",
                      "Replenishment"
                    ],
                    "default": "Request Inventory"
                  },
                  "ItemNumber": {
                    "type": "string",
                    "description": "The component item number",
                    "title": "Item Number"
                  },
                  "Quantity": {
                    "type": "number",
                    "format": "float",
                    "description": "The quantity available for the item in the specific bin of license plate referenced above.",
                    "title": "Quantity"
                  },
                  "UomDesc": {
                    "type": "string",
                    "description": "A string value that uniquely identifies the unit of measurement.",
                    "title": "UomDesc"
                  },
                  "CoreValue": {
                    "type": "string",
                    "description": "Determines if the item is Lot, Serial, or Date tracked",
                    "title": "Core Value"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "DestinationBinNumber": {
                    "type": "string",
                    "description": "A location where the inventory should be taken to fulfill the request. It refers to a bin number within the destination site in our system.",
                    "title": "Destination Bin Number"
                  },
                  "DestinationZone": {
                    "type": "string",
                    "description": "A parameter is for specifying a zone (larger area that may contain many bins) within a site that the inventory should be taken to, as an alternative to a specific bin.",
                    "title": "Destination Zone"
                  },
                  "RequestExpiration": {
                    "type": "string",
                    "description": "RequestExpiration"
                  },
                  "CreatedByUser": {
                    "type": "string",
                    "description": "A technician`s login/email who created request",
                    "title": "Created By User"
                  }
                },
                "required": [
                  "DestinationWarehouseName",
                  "ItemNumber"
                ]
              }
            }
          }
        ],
        "description": "Create Inventory Request"
      }
    },
    "/integration/inventory/adjustment": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "operationId": "CreateInventoryAdjustment",
        "summary": "Create Inventory Adjustment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BinNumber": {
                    "type": "string",
                    "description": "The alphanumeric name for the position in the warehouse where the inventory is or can be stored.",
                    "title": "Bin Number"
                  },
                  "ItemNumber": {
                    "type": "string",
                    "description": "A unique value that represents an item",
                    "title": "Item Number"
                  },
                  "CoreValue": {
                    "type": "string",
                    "description": "A string value representing the lot number/serial/expiration date of the item that was picked",
                    "title": "Core Value",
                    "enum": [
                      "BASIC",
                      "LOT",
                      "SERIAL",
                      "DATE"
                    ]
                  },
                  "Warehouse": {
                    "type": "string",
                    "description": "The name of the warehouse to make the adjustment against"
                  },
                  "UomDesc": {
                    "type": "string",
                    "description": "A string value that uniquely identifies the unit of measurement"
                  },
                  "Qty": {
                    "type": "number",
                    "format": "float",
                    "description": "The quantity to adjust",
                    "title": "Quantity"
                  },
                  "MovementType": {
                    "type": "string",
                    "description": "The type of adjustment being made",
                    "title": "Movement Type",
                    "enum": [
                      "Adjustment In+",
                      "Auto Adjustment Out",
                      "Damaged",
                      "Obsolescence",
                      "Physical Inventory",
                      "Variance"
                    ]
                  },
                  "Note": {
                    "type": "string",
                    "description": "Optional notes about the adjustment"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "UnitNumber": {
                    "type": "string",
                    "description": "Unit Number",
                    "title": "Unit Number"
                  },
                  "InternalOnly": {
                    "type": "boolean",
                    "description": "This is a boolean field used to indicate whether an adjustment should be exported back to an external system or if it should only occur within WithoutWire. So by default this request is only going to return adjustments where InternalOnly = false."
                  }
                },
                "required": [
                  "Warehouse",
                  "BinNumber",
                  "ItemNumber"
                ]
              }
            }
          }
        ],
        "description": "Create Inventory Adjustment"
      }
    },
    "/integration/purchaseorder": {
      "delete": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Quantity of sent items in request.",
                  "title": "TotalCount"
                },
                "DeletedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Quantity of deleted items.",
                  "title": "DeletedCount"
                }
              }
            }
          }
        },
        "summary": "Delete Inbound Request",
        "description": "This API will delete purchase orders from WithoutWire. Receiving must not have been started, and the status needs to be either 'Unassigned', or 'Waiting to be Received'. This call should be used when a mistake is found, or the purchase order needs to be modified.",
        "operationId": "DeleteInboundRequest",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse name where the order resides.",
                    "title": "WarehouseName"
                  },
                  "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this purchase order in the warehouse.",
                    "title": "PurchaseOrderNumber"
                  }
                }
              }
            }
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "integer",
                        "description": "An integer value to uniquely identify.",
                        "title": "Identity",
                        "format": "int32"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "summary": "Create Inbound Request",
        "description": "Create Inbound Request",
        "operationId": "CreateInboundRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "A unique number in the warehouse to identify the purchase order."
                  },
                  "OrderDate": {
                    "type": "string",
                    "description": "The date purchase order was made.",
                    "title": "Order Date",
                    "format": "date"
                  },
                  "SchedDeliveryDate": {
                    "type": "string",
                    "description": "The date the product is scheduled to arrive at the warehouse.",
                    "title": "Scheduled Delivery Date",
                    "format": "date"
                  },
                  "VendorNumber": {
                    "type": "string",
                    "description": "A reference to an existing Vendor in WithoutWire."
                  },
                  "VendorName": {
                    "type": "string",
                    "description": "The name of the vendor supplying the product."
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "PurchaseOrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The purchase order type for a specific purchase order. Valid values: 1-(Purchase Order), 2-(Auto Complete), 3-(Blanket)",
                    "title": "PurchaseOrderType",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "PurchaseOrderComments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The purchase order type for a specific purchase order."
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomDesc": {
                          "type": "string",
                          "description": "A string value that uniquely identifies the unit of measurement."
                        },
                        "BaseConversionFactor": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                        },
                        "SignificantDigits": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value representing the number of decimal places to track for this unit of measure"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "LineItemComments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A collection of strings to associate with this line on the purchase order."
                        }
                      }
                    },
                    "description": "A collection of Purchase Order Line Object to be associated with a purchase order. Receipts are found within the purchase order line object."
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/warehouse": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "description": "Result Message",
              "title": "Result Message",
              "type": "string"
            }
          }
        },
        "summary": "Create Site",
        "description": "This action creates a new warehouse in the system.",
        "operationId": "CreateSite",
        "parameters": [
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "Warehouse Name"
                  },
                  "Address1": {
                    "type": "string",
                    "description": "Address1"
                  },
                  "State": {
                    "type": "string",
                    "description": "State"
                  },
                  "Country": {
                    "type": "string",
                    "description": "Country"
                  },
                  "ZipCode": {
                    "type": "string",
                    "description": "Zip Code"
                  },
                  "City": {
                    "type": "string",
                    "description": "City"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/item": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Validator": {
                        "type": "object",
                        "properties": {
                          "IsValid": {
                            "type": "boolean",
                            "description": "Is valid"
                          },
                          "ImportExceptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ErrorCode": {
                                  "type": "string",
                                  "description": "Error code"
                                },
                                "ErrorMessage": {
                                  "type": "string",
                                  "description": "Error message"
                                },
                                "FieldName": {
                                  "type": "string",
                                  "description": "Field name"
                                }
                              }
                            },
                            "description": "Exceptions"
                          }
                        }
                      },
                      "Identity": {
                        "type": "string",
                        "description": "Identity"
                      },
                      "IdentityCode": {
                        "type": "string",
                        "description": "Identity code"
                      },
                      "WarehouseName": {
                        "type": "string",
                        "description": "Warehouse name"
                      }
                    }
                  },
                  "description": "Invalid objects"
                }
              }
            }
          }
        },
        "operationId": "CreateItem",
        "summary": "Create New Item",
        "description": "This method creates new item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "ItemNumber": {
                    "type": "string",
                    "description": "A unique value that represents an item",
                    "title": "Item Number"
                  },
                  "ItemDescription": {
                    "type": "string",
                    "description": "A name that uniquely identifies an item within the warehouse"
                  },
                  "ItemGenericDescription": {
                    "type": "string",
                    "description": "Item Generic Description"
                  },
                  "ItemType": {
                    "type": "string",
                    "description": "The type of item.",
                    "title": "Item Type",
                    "enum": [
                      "Inventory",
                      "Kit",
                      "Service",
                      "Pallet"
                    ]
                  },
                  "ManufacturerNumber": {
                    "type": "string",
                    "description": "The manufacturer's Item number",
                    "title": "Manufacturer Number"
                  },
                  "UpcBarcodeNumber": {
                    "type": "string",
                    "description": "The UPC Barcode Number on the items package.",
                    "title": "UPC Barcode Number"
                  },
                  "GrossWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "Gross Weight",
                    "title": "Gross Weight"
                  },
                  "FullPalletQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "WithoutWire supports pallet splitting. Supply an integer representing the maximum quantity that can be picked to one pallet.",
                    "title": "Maximum Pallet Quantity"
                  },
                  "Length": {
                    "type": "number",
                    "format": "float",
                    "description": "Length"
                  },
                  "Width": {
                    "type": "number",
                    "format": "float",
                    "description": "Width"
                  },
                  "Height": {
                    "type": "number",
                    "format": "float",
                    "description": "Height"
                  },
                  "NetWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "Net Weight",
                    "title": "Net Weight"
                  },
                  "CoreItemType": {
                    "type": "string",
                    "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                    "title": "Core Item Type",
                    "enum": [
                      "BASIC",
                      "LOT",
                      "SERIAL",
                      "or DATE"
                    ]
                  },
                  "CycleCountInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "WithoutWire can assist in reminding warehouse users that a cycle count is needed. Enter a value between 0 and 365 to indicate how many cycle counts you would like to perform in this item per year.",
                    "title": "Cycle Count Interval"
                  },
                  "BaseUom": {
                    "type": "string",
                    "description": "The base unit of measure for this item",
                    "title": "Base UOM"
                  },
                  "SignificantDigits": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A number representing the number of decimal places to track for this item. Must be less than or equal to 5.",
                    "title": "Significant Digits"
                  },
                  "ZoneDesc": {
                    "type": "string",
                    "description": "The name of the zone where this item resides in the warehouse.",
                    "title": "Zone Description"
                  },
                  "BaseConvFactor": {
                    "type": "number",
                    "format": "float",
                    "description": "The base unit of measure for this item."
                  }
                },
                "required": [
                  "ItemNumber",
                  "BaseUom",
                  "CoreItemType"
                ]
              }
            }
          }
        ]
      }
    },
    "/integration/purchaseorder/filter": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse name in which the transaction is associated.",
                    "title": "WarehouseName"
                  },
                  "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "A unique number in the warehouse to identify the purchase order.",
                    "title": "PurchaseOrderNumber"
                  },
                  "OrderDate": {
                    "type": "string",
                    "description": "The date purchase order was made.",
                    "title": "OrderDate"
                  },
                  "SchedDeliveryDate": {
                    "type": "string",
                    "description": "The date the product is scheduled to arrive at the warehouse.",
                    "title": "SchedDeliveryDate"
                  },
                  "VendorNumber": {
                    "type": "string",
                    "description": "A reference to an existing Vendor in WithoutWire.",
                    "title": "VendorNumber"
                  },
                  "VendorName": {
                    "type": "string",
                    "description": "The name of the vendor supplying the product.",
                    "title": "VendorName"
                  },
                  "ReceivingPercentOver": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The percentage of over-receiving that is allowed for this vendor.",
                    "title": "ReceivingPercentOver"
                  },
                  "PurchaseOrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The purchase order type for a specific purchase order.",
                    "title": "PurchaseOrderType"
                  },
                  "PurchaseOrderComments": {
                    "type": "array",
                    "items": {},
                    "description": "A list of comments to be associated with the Purchase Order."
                  },
                  "CompletedDate": {
                    "type": "string",
                    "description": "The date the purchase order was completed.",
                    "title": "CompletedDate"
                  },
                  "ExportedDate": {
                    "type": "string",
                    "description": "The date the purchase order exported.",
                    "title": "ExportedDate"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the purchase order was created.",
                    "title": "DateCreated"
                  },
                  "AssignmentManuallyModified": {
                    "type": "boolean",
                    "description": "A Boolean value which indicates whether the purchase order receiving assignment was manually modified by.",
                    "title": "AssignmentManuallyModified"
                  },
                  "WebReceipt": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether the purchase order was received through the WithoutWire website.",
                    "title": "WebReceipt"
                  },
                  "FromWarehouse": {
                    "type": "string",
                    "description": "Indicates the warehouse where the product was shipped from on a transfer order.",
                    "title": "FromWarehouse"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value to uniquely identify.",
                    "title": "Identity"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item.",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomDesc": {
                          "type": "string",
                          "description": "A string value that uniquely identifies the unit of measurement."
                        },
                        "BaseConversionFactor": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                        },
                        "SignificantDigits": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value representing the number of decimal places to track for this unit of measure."
                        },
                        "LineItemComments": {
                          "type": "array",
                          "items": {},
                          "description": "A collection of strings to associate with this line on the purchase order."
                        },
                        "Receipts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityReceived": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity received on this receipt."
                              },
                              "QuantityMissing": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity missing on this receipt."
                              },
                              "QuantityDamaged": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity damaged on this receipt."
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked."
                              },
                              "DateReceived": {
                                "type": "string",
                                "description": "Date Received"
                              },
                              "Identity": {
                                "type": "integer",
                                "format": "int32",
                                "description": "An integer value to uniquely identify."
                              },
                              "Status": {
                                "type": "string",
                                "description": "Order status name"
                              },
                              "LineNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "An integer value to uniquely identify the line on the order."
                              }
                            }
                          },
                          "description": "Receipts"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                }
              }
            }
          }
        },
        "operationId": "GetInboundRequest",
        "description": "This method allows the exporting of purchase orders by a combination of filters. These filters include begin and end date, receiving status code, item number, line receipt status, purchase order number and purchase order type. The Purchase Order Export Object returns a list of completed order information.",
        "summary": "Get Inbound Request",
        "parameters": [
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Creation date of the purchase order",
            "x-ms-summary": "Creation date of the purchase order"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date of the purchase order",
            "x-ms-summary": "End date of the purchase order"
          },
          {
            "name": "poStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Unassigned",
              "WaitingForReceipt",
              "ReceivingInProcess",
              "ReceivingComplete",
              "Completed"
            ],
            "description": "The status of the purchase order at the header level",
            "x-ms-summary": "the status of the purchase order at the header level"
          },
          {
            "name": "lineReceiptStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is the receiving status of the individual line.",
            "enum": [
              "Unassigned",
              "WaitingForReceipt",
              "ReceivingInProcess",
              "ReceivingComplete",
              "Completed"
            ],
            "x-ms-summary": "This is the receiving status of the individual line."
          },
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by item number. Returns all purchase orders that include this item number",
            "x-ms-summary": "Filter by item number. Returns all purchase orders that include this item number"
          },
          {
            "name": "poNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order number. Returns a specific purchase order.",
            "x-ms-summary": "Filter by purchase order number. Returns a specific purchase order."
          },
          {
            "name": "poType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The specific type of the inbound document. The value can either be the type or name or the shortened type code abbreviation (in parentheses): PurchaseOrder (PO), Transfer (TR), Return (RET) or ASN.",
            "x-ms-summary": "The specific type of the inbound document."
          }
        ]
      }
    },
    "/integration/purchaseorder/complete": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Inbound Complete",
        "description": "This API method used to set purchase orders to complete in WithoutWire. The order status is set to 'Complete'. Additional fields updated are: ExportDate on the purchase order object is set to the current date/time and the CompletedDate is set to the current date/time. Finally, the receiving assignments will be removed. An error is returned if the order is in 'Receiving in Progress'.",
        "operationId": "InboundComplete",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "IdentityCode": {
                    "type": "string",
                    "description": "An string value to uniquely identify.",
                    "title": "IdentityCode"
                  },
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse name in which the transaction is associated.",
                    "title": "WarehouseName"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/bins": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Create Location",
        "description": "Create Location (Bin)",
        "operationId": "CreateLocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse where the bin resides.",
                    "title": "WarehouseName"
                  },
                  "BinNumber": {
                    "type": "string",
                    "description": "An alphanumeric value that uniquely identifies the bin.",
                    "title": "BinNumber"
                  },
                  "BinType": {
                    "type": "string",
                    "description": "The specific bin type of this bin.",
                    "title": "BinType",
                    "enum": [
                      "Inventory",
                      "Damage",
                      "Manufacturing",
                      "Receiving",
                      "QA",
                      "LicensePlate",
                      "Overstock",
                      "WorkInProgress",
                      "Staging",
                      "Hold",
                      "Exception"
                    ]
                  },
                  "ParentBin": {
                    "type": "string",
                    "description": "License Plates in WithoutWire can be nested inside other bins or license plates. If the BinType is 'LicensePlate' specify a location for the License plate. This would be the parent bin of the license plate.",
                    "title": "ParentBin"
                  },
                  "PickSequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order of items on the picking screen can be controlled by the Pick Sequence of the bin where the inventory resides.",
                    "title": "PickSequence"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/purchaseorder/receipt/complete": {
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Receipt Complete",
        "description": "Receipt Complete",
        "operationId": "ReceiptComplete",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identity value should be taken from the Identity value from the receipt in the GetPO call above. This marks the receipt as exported within WithoutWire.",
                    "title": "Identity"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/salesorder": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "Customer Name"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "Customer Address2"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "UpcManufacturerNumber": {
                        "type": "string",
                        "description": "Universal Product Code"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "Customer Phone"
                      },
                      "CustomerShipTo": {
                        "type": "string",
                        "description": "Uniquely identifies a specific customer shipping address per customer."
                      },
                      "NotificationEmail": {
                        "type": "string",
                        "description": "The email address for the customer."
                      },
                      "RequiredShelfLife": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer number in days representing additional time in advance of an item's expiration required when picking any materials for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAttn": {
                              "type": "string",
                              "description": "The attention field indicating the individual being shipped to (if applicable)"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer."
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the sales order was created.",
                    "title": "DateCreated"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ComponentSequence": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If the item is part of a kit, the component sequence is used in conjunction with the line number to determine a unique ordering value"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item.",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement."
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "WarehouseName": {
                          "type": "string",
                          "description": "The warehouse descriptive name"
                        },
                        "PickRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityShipped": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity shipped for this pick record"
                              },
                              "QuantityPicked": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity picked for this pick record"
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked."
                              }
                            }
                          },
                          "description": "Pick Records"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "InventoryRequestTaskID": {
                          "type": "string",
                          "description": "The ID of the inventory request that the line is associated with (if applicable)"
                        }
                      }
                    },
                    "description": "A collection of Sales Order Line Object to be associated with a Sales order. Receipts are found within the Sales order line object."
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ExportDate": {
                    "type": "string",
                    "description": "The date the order was exported"
                  },
                  "ParentOrderNumber": {
                    "type": "string",
                    "description": "Parent order number"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "StatusCode": {
                    "type": "string",
                    "description": "Order status code"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value to uniquely identify.",
                    "title": "Identity"
                  },
                  "UseOrderLevelShipping": {
                    "type": "string",
                    "description": "A flag indicating whether the order is to be shipped to the provided address instead of the saved address for the customer."
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "PickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Picking Priority"
                  },
                  "RoutePickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Route Picking Priority"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Sales Orders",
        "description": "This action returns details of specific Sales order.",
        "operationId": "GetSalesOrders",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specify sales order number",
            "x-ms-summary": "Sales order number"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify begin date",
            "x-ms-summary": "Begin date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify end date",
            "x-ms-summary": "End date"
          },
          {
            "name": "orderStatusCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify order status code",
            "x-ms-summary": "Order status code"
          },
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify item number",
            "x-ms-summary": "Item number"
          },
          {
            "name": "parentOrderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify parent order number",
            "x-ms-summary": "Parent order number"
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Specify User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Specify warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Create Update Sales Order",
        "description": "Create or Update Sales Order",
        "operationId": "CreateUpdateSalesOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse where the bin resides.",
                    "title": "WarehouseName"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order.",
                    "title": "OrderComment"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered.",
                    "title": "DeliveryDate",
                    "format": "date"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "The customer information."
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item.",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "WarehouseName": {
                          "type": "string",
                          "description": "The name of the warehouse where the bin resides.",
                          "title": "WarehouseName"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            }
                          },
                          "description": "A unit of measure type"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api/workorder/consumption": {
      "post": {
        "responses": {
          "204": {
            "description": "204",
            "schema": {
              "description": "Result Message",
              "title": "Result Message",
              "type": "string"
            }
          }
        },
        "summary": "Consume Inventory",
        "description": "Consume Inventory",
        "operationId": "ConsumeInventory",
        "parameters": [
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "BinPath": {
                    "type": "string",
                    "description": "Location of the bin",
                    "title": "BinPath"
                  },
                  "CoreValue": {
                    "type": "string",
                    "description": "A string value representing the lot number/serial/expiration date of the item that was picked",
                    "title": "Core Value",
                    "enum": [
                      "BASIC",
                      "LOT",
                      "SERIAL",
                      "DATE"
                    ]
                  },
                  "ItemNumber": {
                    "type": "string",
                    "description": "A unique value that represents an item",
                    "title": "Item Number"
                  },
                  "ItemUom": {
                    "type": "string",
                    "description": "Represents the Unit of Measure for the item.",
                    "title": "Item UOM"
                  },
                  "LineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value to uniquely identify the line on the order."
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "Quantity": {
                    "type": "number",
                    "format": "float",
                    "description": "The quantity available for the item in the specific bin of license plate referenced above.",
                    "title": "Quantity"
                  },
                  "WarehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse where the bin resides.",
                    "title": "WarehouseName"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api/barcode": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "ItemIdentificationCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of item identification records that match the scanned barcode."
                },
                "LotOnlyCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of lot/serial numbers that match the scanned barcode."
                },
                "ItemOnlyCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of items that match the scanned barcode."
                },
                "LPCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of license plates that match the scanned barcode."
                },
                "BinOnlyCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of bins that match the scanned barcode."
                },
                "UOMBarcodeCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of unit of measure-specific identification records that match the scanned barcode."
                },
                "PoCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of PO numbers that match the scanned barcode."
                },
                "OrderCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of order numbers that match the scanned barcode."
                },
                "GtinCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of GTIN (Global Trade Item Number) records that match the scanned barcode."
                },
                "BinMultiSite": {
                  "type": "boolean",
                  "description": "A flag indicating whether any matching bins exist in more than one site."
                },
                "AllocationSetCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of allocation sets that match the scanned barcode."
                },
                "PrinterCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of system printers that match the scanned barcode."
                }
              }
            }
          }
        },
        "summary": "Get Barcode Info",
        "description": "This is used to retrieve the matching entity types for a provided barcode.",
        "operationId": "GetBarcodeInfo",
        "parameters": [
          {
            "name": "barcode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The barcode provided may be either an LP number or a shipment number.",
            "x-ms-summary": "Barcode"
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      }
    },
    "/api/po/container": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "POID": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of the purchase order, dropship or ASN associated with the scanned license plate (if applicable)"
                  },
                  "PONumber": {
                    "type": "string",
                    "description": "Purchase Order Number"
                  },
                  "PODetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Item": {
                          "type": "object",
                          "properties": {
                            "ItemID": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The ID of the item record on the scanned license plate."
                            },
                            "ItemNumber": {
                              "type": "string",
                              "description": "A unique value that represents an item",
                              "title": "Item Number"
                            },
                            "CoreItemType": {
                              "type": "string",
                              "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                              "title": "Core Item Type",
                              "enum": [
                                "BASIC",
                                "LOT",
                                "SERIAL",
                                "or DATE"
                              ]
                            },
                            "CoreValue": {
                              "type": "string",
                              "description": "A string value representing the lot number/serial/expiration date of the item that was picked",
                              "title": "CoreValue",
                              "enum": [
                                "BASIC",
                                "LOT",
                                "SERIAL",
                                "DATE"
                              ]
                            },
                            "UomTypeID": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The ID of the unit of measure in WithoutWire."
                            },
                            "UomDescription": {
                              "type": "string",
                              "description": "Represents the Unit of Measure for this line of the Purchase order."
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BinNumber": {
                              "type": "string",
                              "description": "An alphanumeric value that uniquely identifies the bin.",
                              "title": "BinNumber"
                            },
                            "BinPath": {
                              "type": "string",
                              "description": "Location of the bin",
                              "title": "BinPath"
                            },
                            "IsLp": {
                              "type": "boolean",
                              "description": "Is Licence Plate"
                            },
                            "Weight": {
                              "type": "number",
                              "format": "float",
                              "description": "Weight"
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            },
                            "ItemDescription": {
                              "type": "string",
                              "description": "A name that uniquely identifies an item within the warehouse"
                            },
                            "AllocationSetName": {
                              "type": "string",
                              "description": "The allocation set that the associated inventory record is assigned to.",
                              "title": "Allocation Set Name"
                            }
                          },
                          "description": "Item"
                        },
                        "Qty": {
                          "type": "number",
                          "format": "float",
                          "description": "Quantity",
                          "title": "Quantity"
                        },
                        "ASNDetailID": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The ID of the associated ASN line (if applicable)"
                        }
                      }
                    },
                    "description": "Purchase Order Details"
                  },
                  "TotalLpReceived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of license plates already received for the associated transfer, dropship or ASN."
                  },
                  "TotalLpShipped": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of license plates included in the transfer, dropship or ASN."
                  },
                  "LpNumber": {
                    "type": "string",
                    "description": "License plate number is any object that holds items"
                  },
                  "ShipmentNumber": {
                    "type": "string",
                    "description": "The Vendor Shipment Number for the order to be imported. Defaulted to the Order Number when left blank."
                  },
                  "BinNumber": {
                    "type": "string",
                    "description": "An alphanumeric value that uniquely identifies the bin.",
                    "title": "BinNumber"
                  },
                  "AllowEdits": {
                    "type": "boolean",
                    "description": "The AllowEdits property in the response should be used to determine whether the user can adjust quantities in the FS app or not."
                  }
                }
              }
            }
          }
        },
        "summary": "Single Scan Inventory Lookup",
        "operationId": "SingleScanInventoryLookup",
        "description": "This method returns list of items on a LP or in DropShip box.",
        "parameters": [
          {
            "name": "barcode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The barcode provided may be either an LP number or a shipment number.",
            "x-ms-summary": "The barcode provided may be either an LP number or a shipment number."
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      }
    },
    "/integration/transferorder": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse where the order resides.",
                    "title": "WarehouseName"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "Customer Address2"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "UpcManufacturerNumber": {
                        "type": "string",
                        "description": "Universal Product Code"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "Customer Phone"
                      },
                      "TestInd": {
                        "type": "boolean",
                        "description": "TestInd"
                      },
                      "ConsiderDepartment": {
                        "type": "boolean",
                        "description": "ConsiderDepartment"
                      },
                      "ConsiderDepartmentWhenPicking": {
                        "type": "boolean",
                        "description": "ConsiderDepartmentWhenPicking"
                      },
                      "CustomerShipTo": {
                        "type": "string",
                        "description": "Uniquely identifies a specific customer shipping address per customer"
                      },
                      "Gs1CompanyNumber": {
                        "type": "string",
                        "description": "Gs1CompanyNumber"
                      },
                      "StartingContainer": {
                        "type": "string",
                        "description": "StartingContainer"
                      },
                      "EdiIndicator": {
                        "type": "boolean",
                        "description": "EdiIndicator"
                      },
                      "CustomerClass": {
                        "type": "string",
                        "description": "Customer Class"
                      },
                      "NotificationEmail": {
                        "type": "string",
                        "description": "The email address for the customer."
                      },
                      "RequiredShelfLife": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer number in days representing additional time in advance of an item's expiration required when picking any materials for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAttn": {
                              "type": "string",
                              "description": "The attention field indicating the individual being shipped to (if applicable)"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            },
                            "ValidatorObject": {
                              "type": "string",
                              "description": "Validator Object"
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered."
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order.",
                    "title": "OrderComment"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the sales order was created.",
                    "title": "DateCreated"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ComponentSequence": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If the item is part of a kit, the component sequence is used in conjunction with the line number to determine a unique ordering value"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type",
                          "enum": [
                            "BASIC",
                            "LOT",
                            "SERIAL",
                            "or DATE"
                          ]
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "UomType"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "WarehouseName": {
                          "type": "string",
                          "description": "The name of the warehouse where the order resides.",
                          "title": "WarehouseName"
                        },
                        "PickRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityShipped": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity shipped for this pick record"
                              },
                              "QuantityPicked": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity picked for this pick record"
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked."
                              }
                            }
                          },
                          "description": "Pick Records"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "InventoryRequestTaskID": {
                          "type": "string",
                          "description": "The ID of the inventory request that the line is associated with (if applicable)"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ExportDate": {
                    "type": "string",
                    "description": "The date the order was exported"
                  },
                  "ParentOrderNumber": {
                    "type": "string",
                    "description": "Parent order number"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "StatusCode": {
                    "type": "string",
                    "description": "Order status code"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value to uniquely identify.",
                    "title": "Identity"
                  },
                  "UseOrderLevelShipping": {
                    "type": "string",
                    "description": "A flag indicating whether the order is to be shipped to the provided address instead of the saved address for the customer."
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "PickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Picking Priority"
                  },
                  "RoutePickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Route Picking Priority"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Transfer Orders",
        "description": "Get Transfer Orders",
        "operationId": "GetTransferOrders",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify order number",
            "x-ms-summary": "Order number"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify begin date",
            "x-ms-summary": "Begin date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify end date",
            "x-ms-summary": "End date"
          },
          {
            "name": "orderStatusCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify order status code",
            "x-ms-summary": "Order status code"
          },
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify item number",
            "x-ms-summary": "Item number"
          },
          {
            "name": "parentOrderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify parent order number",
            "x-ms-summary": "Parent order number"
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Create Update Transfer Order",
        "description": "Create Update Transfer Order",
        "operationId": "CreateUpdateTransferOrder",
        "parameters": [
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the transfer order was created.",
                    "title": "DateCreated"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order.",
                    "title": "OrderComment"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered."
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type."
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/purchaseorder/po": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "A unique number in the warehouse to identify the purchase order.",
                    "title": "PurchaseOrderNumber"
                  },
                  "OrderDate": {
                    "type": "string",
                    "description": "The date purchase order was made.",
                    "title": "OrderDate"
                  },
                  "SchedDeliveryDate": {
                    "type": "string",
                    "description": "The date the product is scheduled to arrive at the warehouse.",
                    "title": "SchedDeliveryDate"
                  },
                  "VendorNumber": {
                    "type": "string",
                    "description": "A reference to an existing Vendor in WithoutWire.",
                    "title": "VendorNumber"
                  },
                  "VendorName": {
                    "type": "string",
                    "description": "The name of the vendor supplying the product.",
                    "title": "VendorName"
                  },
                  "ReceivingPercentOver": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The percentage of over-receiving that is allowed for this vendor.",
                    "title": "ReceivingPercentOver"
                  },
                  "PurchaseOrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The purchase order type for a specific purchase order.",
                    "title": "PurchaseOrderType"
                  },
                  "PurchaseOrderComments": {
                    "type": "array",
                    "items": {},
                    "description": "A list of comments to be associated with the Purchase Order."
                  },
                  "CompletedDate": {
                    "type": "string",
                    "description": "The date the purchase order was completed.",
                    "title": "CompletedDate"
                  },
                  "ExportedDate": {
                    "type": "string",
                    "description": "The date the purchase order exported.",
                    "title": "ExportedDate"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the purchase order was created.",
                    "title": "DateCreated"
                  },
                  "AssignmentManuallyModified": {
                    "type": "boolean",
                    "description": "A Boolean value which indicates whether the purchase order receiving assignment was manually modified by.",
                    "title": "AssignmentManuallyModified"
                  },
                  "WebReceipt": {
                    "type": "boolean",
                    "description": "A Boolean value that indicates whether the purchase order was received through the WithoutWire website.",
                    "title": "WebReceipt"
                  },
                  "FromWarehouse": {
                    "type": "string",
                    "description": "Indicates the warehouse where the product was shipped from on a transfer order.",
                    "title": "FromWarehouse"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An integer value to uniquely identify.",
                    "title": "Identity"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomDesc": {
                          "type": "string",
                          "description": "A string value that uniquely identifies the unit of measurement"
                        },
                        "BaseConversionFactor": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                        },
                        "SignificantDigits": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value representing the number of decimal places to track for this unit of measure."
                        },
                        "LineItemComments": {
                          "type": "array",
                          "items": {},
                          "description": "A collection of strings to associate with this line on the purchase order."
                        },
                        "Receipts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityReceived": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity received on this receipt."
                              },
                              "QuantityMissing": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity missing on this receipt."
                              },
                              "QuantityDamaged": {
                                "type": "number",
                                "format": "float",
                                "description": "Represents the quantity damaged on this receipt."
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked."
                              },
                              "DateReceived": {
                                "type": "string",
                                "description": "Date Received"
                              },
                              "Identity": {
                                "type": "integer",
                                "format": "int32",
                                "description": "An integer value to uniquely identify."
                              },
                              "Status": {
                                "type": "string",
                                "description": "Order status name"
                              },
                              "LineNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "An integer value to uniquely identify the line on the order."
                              }
                            }
                          },
                          "description": "Receipts"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                }
              }
            }
          }
        },
        "summary": "This action returns Purchase Orders filtered by parameters",
        "description": "This method allows the exporting of purchase orders by a combination of filters. These filters include begin and end date, receiving status code, item number, line receipt status, purchase order number and purchase order type. The Purchase Order Export Object returns a list of completed order information.",
        "operationId": "GetPO",
        "parameters": [
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Creation date of the purchase order",
            "x-ms-summary": "Creation date of the purchase order"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End date of the purchase order",
            "x-ms-summary": "End date of the purchase order"
          },
          {
            "name": "poStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Unassigned",
              "WaitingForReceipt",
              "ReceivingInProcess",
              "ReceivingComplete",
              "Completed"
            ],
            "description": "The status of the purchase order at the header level",
            "x-ms-summary": "the status of the purchase order at the header level"
          },
          {
            "name": "lineReceiptStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is the receiving status of the individual line.",
            "enum": [
              "Unassigned",
              "WaitingForReceipt",
              "ReceivingInProcess",
              "ReceivingComplete",
              "Completed"
            ],
            "x-ms-summary": "This is the receiving status of the individual line."
          },
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by item number. Returns all purchase orders that include this item number",
            "x-ms-summary": "Filter by item number. Returns all purchase orders that include this item number"
          },
          {
            "name": "poNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order number. Returns a specific purchase order.",
            "x-ms-summary": "Filter by purchase order number. Returns a specific purchase order."
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "InvalidCount",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Create or Update Purchase Order",
        "description": "This method creates or updates the Purchase Order.",
        "operationId": "CreatePO",
        "parameters": [
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "A unique number in the warehouse to identify the purchase order.",
                    "title": "PurchaseOrderNumber"
                  },
                  "OrderDate": {
                    "type": "string",
                    "description": "The date purchase order was made.",
                    "title": "OrderDate"
                  },
                  "SchedDeliveryDate": {
                    "type": "string",
                    "description": "The date the product is scheduled to arrive at the warehouse.",
                    "title": "SchedDeliveryDate"
                  },
                  "VendorNumber": {
                    "type": "string",
                    "description": "A reference to an existing Vendor in WithoutWire.",
                    "title": "VendorNumber"
                  },
                  "VendorName": {
                    "type": "string",
                    "description": "The name of the vendor supplying the product.",
                    "title": "VendorName"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "PurchaseOrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The purchase order type for a specific purchase order. Valid Values: 1-(Purchase Order) 2-(Auto Complete) 3-(Blanket)",
                    "title": "PurchaseOrderType",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "PurchaseOrderComments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of comments to be associated with the Purchase Order."
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomDesc": {
                          "type": "string",
                          "description": "A string value that uniquely identifies the unit of measurement"
                        },
                        "BaseConversionFactor": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                        },
                        "SignificantDigits": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value representing the number of decimal places to track for this unit of measure."
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "LineItemComments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A collection of strings to associate with this line on the purchase order."
                        }
                      }
                    },
                    "description": "A collection of Purchase Order Line Object to be associated with a purchase order. Receipts are found within the purchase order line object."
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/integration/manufacturingorder": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerAddress2": {
                        "type": "string",
                        "description": "Customer Address2"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShortDesc": {
                        "type": "string",
                        "description": "Customer Description"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "UpcManufacturerNumber": {
                        "type": "string",
                        "description": "Universal Product Code"
                      },
                      "CustomerPhone": {
                        "type": "string",
                        "description": "Customer Phone"
                      },
                      "CustomerShipTo": {
                        "type": "string",
                        "description": "Uniquely identifies a specific customer shipping address per customer"
                      },
                      "NotificationEmail": {
                        "type": "string",
                        "description": "The email address for the customer."
                      },
                      "RequiredShelfLife": {
                        "type": "integer",
                        "format": "int32",
                        "description": "An integer number in days representing additional time in advance of an item's expiration required when picking any materials for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipAttn": {
                              "type": "string",
                              "description": "The attention field indicating the individual being shipped to (if applicable)"
                            },
                            "CustomerShipAddress1": {
                              "type": "string",
                              "description": "The ship-to address field 1"
                            },
                            "CustomerShipAddress2": {
                              "type": "string",
                              "description": "The ship-to address field 2"
                            },
                            "CustomerShipCity": {
                              "type": "string",
                              "description": "The ship-to city"
                            },
                            "CustomerShipState": {
                              "type": "string",
                              "description": "The ship-to state"
                            },
                            "CustomerShipZipCode": {
                              "type": "string",
                              "description": "The ship to five-digit plus zip code"
                            },
                            "CustomerShipZip5": {
                              "type": "string",
                              "description": "The ship to a five-digit zip code"
                            },
                            "CustomerShipPhone": {
                              "type": "string",
                              "description": "The ship-to phone number"
                            },
                            "CustomerShipFax": {
                              "type": "string",
                              "description": "The ship to a fax number"
                            },
                            "CustomerShipCountry": {
                              "type": "string",
                              "description": "The ship to zip country"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            },
                            "ValidatorObject": {
                              "type": "string",
                              "description": "Validator Object"
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteDescription": {
                    "type": "string",
                    "description": "The description of the route"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered."
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order.",
                    "title": "OrderComment"
                  },
                  "DestinationWarehouseName": {
                    "type": "string",
                    "description": "The end destination warehouse descriptive name.",
                    "title": "DestinationWarehouseName"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "ShipDate": {
                    "type": "string",
                    "description": "The date on which the order will be shipped"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the purchase order was created.",
                    "title": "DateCreated"
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ComponentSequence": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If the item is part of a kit, the component sequence is used in conjunction with the line number to determine a unique ordering value"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type."
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "WarehouseName": {
                          "type": "string",
                          "description": "The warehouse descriptive name"
                        },
                        "PickRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "QuantityShipped": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity shipped for this pick record"
                              },
                              "QuantityPicked": {
                                "type": "number",
                                "format": "float",
                                "description": "A decimal value representing the quantity picked for this pick record"
                              },
                              "CoreValue": {
                                "type": "string",
                                "description": "A string value representing the lot number/serial/expiration date of the item that was picked."
                              }
                            }
                          },
                          "description": "Pick Records"
                        },
                        "AllocationSetName": {
                          "type": "string",
                          "description": "The allocation set that the associated inventory record is assigned to.",
                          "title": "Allocation Set Name"
                        },
                        "InventoryRequestTaskID": {
                          "type": "string",
                          "description": "The ID of the inventory request that the line is associated with (if applicable)"
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  },
                  "LoadDate": {
                    "type": "string",
                    "description": "The date the order was loaded"
                  },
                  "PrintDate": {
                    "type": "string",
                    "description": "The date the order was printed"
                  },
                  "ExportDate": {
                    "type": "string",
                    "description": "The date the order was exported"
                  },
                  "ParentOrderNumber": {
                    "type": "string",
                    "description": "Parent order number"
                  },
                  "TrackingNumber": {
                    "type": "string",
                    "description": "The shipping carrier tracking number"
                  },
                  "ShippingMethodName": {
                    "type": "string",
                    "description": "The value that will uniquely identify the carrier and carrier shipping method"
                  },
                  "ShippingWeight": {
                    "type": "number",
                    "format": "float",
                    "description": "The total weight of shipment for the order"
                  },
                  "ShippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "The total cost of the shipment for the order"
                  },
                  "Status": {
                    "type": "string",
                    "description": "Order status name"
                  },
                  "StatusCode": {
                    "type": "string",
                    "description": "Order status code"
                  },
                  "Identity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Identity"
                  },
                  "UseOrderLevelShipping": {
                    "type": "string",
                    "description": "A flag indicating whether the order is to be shipped to the provided address instead of the saved address for the customer."
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "PickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Picking Priority"
                  },
                  "RoutePickingPriority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Route Picking Priority"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Manufacturing Order",
        "description": "This method returns array of manufacturing orders, filtered by sent parameters(orderNumber, beginDate, endDate, orderStatusCode, itemNumber, parentOrderNumber).",
        "operationId": "GetMfgO",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify order number",
            "x-ms-summary": "Order number"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify begin date",
            "x-ms-summary": "Begin date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify end date",
            "x-ms-summary": "End date"
          },
          {
            "name": "orderStatusCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify order status code",
            "x-ms-summary": "Order status code"
          },
          {
            "name": "itemNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify item number",
            "x-ms-summary": "Item number"
          },
          {
            "name": "parentOrderNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify parent order number",
            "x-ms-summary": "Parent order number"
          },
          {
            "name": "UserName",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Specify User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Specify warehouse",
            "x-ms-summary": "Warehouse"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "TotalCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of processed records",
                  "title": "TotalCount"
                },
                "InsertedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted records",
                  "title": "InsertedCount"
                },
                "UpdatedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of updated records",
                  "title": "UpdatedCount"
                },
                "InvalidCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of records with errors",
                  "title": "Number of records with errors"
                },
                "InvalidObjects": {
                  "type": "array",
                  "items": {},
                  "description": "Invalid Objects"
                }
              }
            }
          }
        },
        "summary": "Create or Update Manufacturing Order",
        "description": "This method creates or updates manufacturing order.",
        "operationId": "CreateUpdateManufacturingOrder",
        "parameters": [
          {
            "name": "UserName",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "User Name",
            "x-ms-summary": "User Name"
          },
          {
            "name": "Warehouse",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Warehouse",
            "x-ms-summary": "Warehouse"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "WarehouseName": {
                    "type": "string",
                    "description": "The warehouse descriptive name"
                  },
                  "CustomerPoNumber": {
                    "type": "string",
                    "description": "The customer's PO Number for the order"
                  },
                  "VendorShipmentNumber": {
                    "type": "string",
                    "description": "The vendors shipping number"
                  },
                  "OrderNumber": {
                    "type": "string",
                    "description": "A unique alphanumeric value to identify this order in the warehouse"
                  },
                  "AllocationSetName": {
                    "type": "string",
                    "description": "The allocation set that the associated inventory record is assigned to.",
                    "title": "Allocation Set Name"
                  },
                  "OrderType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A value representing the order type. Valid Values: 1-(Sales Order), 2-(Credit Order), 3-(No Split Order), 4-(Wave Set), 5-(Transfer), 6-(Job), 7-(Manufacturing Order), 8-(Consumption)"
                  },
                  "DateCreated": {
                    "type": "string",
                    "description": "The date the purchase order was created.",
                    "title": "DateCreated"
                  },
                  "OrderComment": {
                    "type": "string",
                    "description": "The comments to be associated with the order.",
                    "title": "OrderComment"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "CustomerName": {
                        "type": "string",
                        "description": "The bill to name for this customer"
                      },
                      "CustomerNumber": {
                        "type": "string",
                        "description": "A unique identifier for the customer, separate from the Customer ID WithoutWire uses to uniquely identify customers"
                      },
                      "CustomerAddress1": {
                        "type": "string",
                        "description": "The bill to address field 1 for this customer"
                      },
                      "CustomerCity": {
                        "type": "string",
                        "description": "The bill to the city for this customer."
                      },
                      "CustomerState": {
                        "type": "string",
                        "description": "The bill to state for this customer"
                      },
                      "CustomerZipCode": {
                        "type": "string",
                        "description": "The bill to zip code for this customer"
                      },
                      "CustomerCountry": {
                        "type": "string",
                        "description": "The bill to zip country for this customer"
                      },
                      "CustomerShippingAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "CustomerShipName": {
                              "type": "string",
                              "description": "The ship-to name"
                            },
                            "CustomerShipTo": {
                              "type": "string",
                              "description": "Uniquely identifies a specific customer shipping address per customer"
                            }
                          }
                        },
                        "description": "Customer Shipping Addresses"
                      }
                    },
                    "description": "Customer"
                  },
                  "RouteNumber": {
                    "type": "string",
                    "description": "A value that references an existing route in WithoutWire"
                  },
                  "DeliveryDate": {
                    "type": "string",
                    "description": "The date on which the order will be delivered."
                  },
                  "LineItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LineNumber": {
                          "type": "integer",
                          "format": "int32",
                          "description": "An integer value to uniquely identify the line on the order."
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "A unique value that represents an item",
                          "title": "Item Number"
                        },
                        "CoreItemType": {
                          "type": "string",
                          "description": "A string value that indicates whether the item is lot tracked, serial tracked, expiration date tracked, or a standard item.",
                          "title": "Core Item Type"
                        },
                        "QuantityOrdered": {
                          "type": "number",
                          "format": "float",
                          "description": "A decimal value representing the quantity to pick for the line item"
                        },
                        "LineItemComment": {
                          "type": "string",
                          "description": "Comments for the line item"
                        },
                        "ItemDescription": {
                          "type": "string",
                          "description": "A name that uniquely identifies an item within the warehouse"
                        },
                        "UomType": {
                          "type": "object",
                          "properties": {
                            "UomDesc": {
                              "type": "string",
                              "description": "A string value that uniquely identifies the unit of measurement"
                            },
                            "SignificantDigits": {
                              "type": "integer",
                              "format": "int32",
                              "description": "An integer value representing the number of decimal places to track for this unit of measure."
                            },
                            "BaseConversionFactor": {
                              "type": "number",
                              "format": "float",
                              "description": "A decimal value representing the conversion from this unit of measure to the base unit of measure"
                            }
                          },
                          "description": "A unit of measure type."
                        }
                      }
                    },
                    "description": "A collection of Order Line Object to be associated with an order. Receipts are found within the order line object."
                  }
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.withoutwire.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.withoutwire.com/privacy-policy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Productivity"
    }
  ]
}