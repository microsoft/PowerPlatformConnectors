{
  "swagger": "2.0",
  "info": {
    "title": "Egnyte",
    "description": "Egnyte is a service that keeps your files safe, synced, and easy to share. Connect to Egnyte to manage your files. You can perform various actions such as upload, update, get, and delete files in Egnyte.",
    "version": "1.4",
    "contact": {
      "name": "Egnyte Support",
      "url": "https://helpdesk.egnyte.com",
      "email": "support@egnyte.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://egnyte.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.egnyte.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ],
  "host": "us-partner-integrations.egnyte.com",
  "basePath": "/ms-flow/",
  "schemes": ["https"],
  "consumes": [],
  "produces": [],
  "paths": {
    "/trigger/polling/created-files": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a file is created (properties)",
        "operationId": "pollCreatedFiles",
        "description": "This operation triggers a flow when a new file is created in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the file.",
                        "title": "File Path"
                      },
                      "target_id": {
                        "type": "string",
                        "description": "The ID of the specific version of the file.",
                        "title": "Version ID"
                      },
                      "target_group_id": {
                        "type": "string",
                        "description": "The ID to reference the file as a whole.",
                        "title": "File ID"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder (True or False).",
                        "title": "Is Folder",
                        "enum": [true, false]
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail.",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll created files",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/created-folders": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a folder is created (properties)",
        "operationId": "pollCreatedFolders",
        "description": "This operation triggers a flow when a sub-folder is created in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "The full path to the folder.",
                        "title": "Folder Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail.",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll created folders",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/deleted-files": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a file is deleted (properties)",
        "operationId": "pollDeletedFiles",
        "description": "This operation triggers a flow when a file is deleted in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the specific file version.",
                        "title": "Version Path"
                      },
                      "target_group_id": {
                        "type": "string",
                        "description": "The ID to reference the file as a whole.",
                        "title": "File ID"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll deleted files",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/deleted-folders": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a folder is deleted (properties)",
        "operationId": "pollDeletedFolders",
        "description": "This operation triggers a flow when a sub-folder is deleted in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the deleted folder.",
                        "title": "Folder Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll created folders",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/renamed-files": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a file is renamed (properties)",
        "operationId": "pollRenamedFiles",
        "description": "This operation triggers a flow when a file is renamed in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the renamed file",
                        "title": "File Path"
                      },
                      "target_id": {
                        "type": "string",
                        "description": "The ID of the specific version of the file.",
                        "title": "Version ID"
                      },
                      "target_group_id": {
                        "type": "string",
                        "description": "The ID to reference the file as a whole.",
                        "title": "File ID"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the file.",
                        "title": "Source File Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll renamed files",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/renamed-folders": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a folder is renamed (properties)",
        "operationId": "pollRenamedFolders",
        "description": "This operation triggers a flow when a sub-folder is renamed in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full destination path to the folder.",
                        "title": "Folder Path"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the folder.",
                        "title": "Source Folder Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll renamed folders",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/moved-files": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a file is moved (properties)",
        "operationId": "pollMovedFiles",
        "description": "This operation triggers a flow when a file is moved in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the file.",
                        "title": "File Path"
                      },
                      "target_id": {
                        "type": "string",
                        "description": "The ID of the specific version of the file.",
                        "title": "Version ID"
                      },
                      "target_group_id": {
                        "type": "string",
                        "description": "The ID to reference the file as a whole.",
                        "title": "File ID"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the file.",
                        "title": "Source File Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail.",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll moved files",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/moved-folders": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a folder is moved (properties)",
        "operationId": "pollMovedFolders",
        "description": "This operation triggers a flow when a sub-folder is moved in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full destination path to the folder.",
                        "title": "Folder Path"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the folder.",
                        "title": "Source Folder Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll moved folders",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/copied-files": {
      "get": {
        "consumes": [],
        "produces": ["application/json"],
        "summary": "When a file is copied (properties)",
        "operationId": "pollCopiedFiles",
        "description": "This operation triggers a flow when a file is copied in a folder.",
        "x-ms-trigger": "batch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full path to the file.",
                        "title": "File Path"
                      },
                      "target_id": {
                        "type": "string",
                        "description": "The ID of the specific version of the file.",
                        "title": "Version ID"
                      },
                      "target_group_id": {
                        "type": "string",
                        "description": "The ID to reference the file as a whole.",
                        "title": "File ID"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the file.",
                        "title": "Source File Path"
                      },
                      "source_id": {
                        "type": "string",
                        "description": "Source file specific version ID.",
                        "title": "Source File Version ID"
                      },
                      "source_group_id": {
                        "type": "string",
                        "description": "The source file ID to reference the file as a whole.",
                        "title": "Source File ID"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder. (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail.",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll copied files",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/trigger/polling/copied-folders": {
      "get": {
        "summary": "When a folder is copied (properties)",
        "operationId": "pollCopiedFolders",
        "description": "This operation triggers a flow when a sub-folder is copied in a folder.",
        "x-ms-trigger": "batch",
        "consumes": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The ID of an individual event.",
                    "title": "Event ID"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The ISO-8601 formatted timestamp for when this event was recorded.",
                    "title": "Timestamp"
                  },
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The numeric ID of the user who performed the action.",
                    "title": "User ID"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action associated with this event.",
                    "title": "Action"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "target_path": {
                        "type": "string",
                        "description": "Full destination path to the folder",
                        "title": "Folder Path"
                      },
                      "source_path": {
                        "type": "string",
                        "description": "Full original path to the folder",
                        "title": "Source Folder Path"
                      },
                      "is_folder": {
                        "type": "boolean",
                        "description": "Whether the resource is a folder (True or False)",
                        "title": "Is Folder"
                      }
                    },
                    "description": "data"
                  },
                  "action_source": {
                    "type": "string",
                    "description": "The source of the event. For example WebUI, Mobile, etc.",
                    "title": "Action Source"
                  },
                  "object_detail": {
                    "type": "string",
                    "description": "Object Detail",
                    "title": "Object Detail"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "FolderPath",
            "x-ms-summary": "Folder Path",
            "type": "string",
            "required": true,
            "description": "The path to the target folder.",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          }
        ],
        "x-ms-trigger-hint": "Poll copied folders",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        }
      }
    },
    "/api-proxy/CreateGroup": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of created group.",
                  "title": "Group ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of a group."
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of a member.",
                        "title": "Username"
                      },
                      "value": {
                        "type": "number",
                        "description": "The user ID of a member.",
                        "title": "User ID"
                      },
                      "display": {
                        "type": "string",
                        "description": "The display name of a member.",
                        "title": "User display name"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Create group",
        "operationId": "createGroup",
        "description": "Create a group in Egnyte. https://developers.egnyte.com/docs/read/Group_Management#Create-a-Group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["displayName"],
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "The display name of the group.",
                  "title": "Display name"
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The globally unique id of a group member.",
                        "title": "User ID"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/GroupInfoById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Group ID",
                  "description": "The globally unique group ID."
                },
                "displayName": {
                  "type": "string",
                  "title": "Group Name",
                  "description": "The name of the group."
                },
                "members": {
                  "description": "Group members",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "title": "Group ID",
                        "description": "The username of a group member"
                      },
                      "value": {
                        "type": "number",
                        "title": "User ID",
                        "description": "The globally unique id of a group member."
                      },
                      "display": {
                        "type": "string",
                        "title": "User display name",
                        "description": "The display name of a group member."
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get group details",
        "operationId": "groupInfoById",
        "description": "Retrieve group info using ID. https://developers.egnyte.com/docs/read/Group_Management#Show-Single-Group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the group.",
                  "title": "Group ID"
                }
              },
              "required": ["id"]
            }
          }
        ]
      }
    },
    "/api-proxy/ListGroups": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "totalResults": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Total results",
                  "description": "The total number of results matching the query."
                },
                "itemsPerPage": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Items per page",
                  "description": "The number of results returned."
                },
                "startIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start index",
                  "description": "The 1-based index of the first result in the current set of results."
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Group ID",
                        "description": "The globally unique group ID."
                      },
                      "displayName": {
                        "type": "string",
                        "title": "Group name",
                        "description": "The name of the group."
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get list of all groups",
        "operationId": "listGroups",
        "description": "Retrieve the list of the groups. https://developers.egnyte.com/docs/read/Group_Management#List-Groups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "startIndex": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "description": "The 1-based index of the initial record being requested (Integer ≥ 1).",
                  "title": "Start Index"
                },
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "The number of entries per page (min 1, max 100)",
                  "title": "Count"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows you to request a subset of groups. These terms are not case sensitive",
                  "title": "Filter"
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/GetUser": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfoResponse"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get user details",
        "operationId": "getUser",
        "description": "Retrieve the information about the user by ID. Learn more: https://developers.egnyte.com/docs/read/User_Management_API_Documentation#Get-Single-User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {
                  "x-ms-visibility": "important",
                  "type": "integer",
                  "description": "The ID of the user",
                  "title": "User ID"
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/GetUserList": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "startIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start index"
                },
                "totalResults": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Total results"
                },
                "itemsPerPage": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Items per page"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserInfoResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get list of all users",
        "operationId": "getUserList",
        "description": "Retrieve the information about the users. Learn more: https://developers.egnyte.com/docs/read/User_Management_API_Documentation#Get-User-List",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "startIndex": {
                  "x-ms-visibility": "advanced",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "description": "The 1-based index of the first search result.",
                  "title": "Start Index"
                },
                "count": {
                  "x-ms-visibility": "advanced",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Specifies the desired maximum number of search results per page.",
                  "title": "Count"
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/UpdateUser": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "User ID",
                  "description": "Unique identifier for the user"
                },
                "email": {
                  "type": "string",
                  "title": "User email",
                  "description": "The email address of the user."
                },
                "familyName": {
                  "type": "string",
                  "title": "Family name",
                  "description": "The last name of the user."
                },
                "givenName": {
                  "type": "string",
                  "title": "Given name",
                  "description": "The first name of the user."
                },
                "active": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "Whether the user is active or inactive."
                },
                "sendInvite": {
                  "type": "boolean",
                  "title": "Send invite",
                  "description": "If set to true, an invitation email will be sent."
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "enum": ["en-US", "fr-CA", "de-DE"],
                  "description": "It is accepted only when Language Pack has been enabled."
                },
                "authType": {
                  "type": "string",
                  "title": "Auth type",
                  "enum": ["ad", "sso", "egnyte"],
                  "description": "The authentication type for the user."
                },
                "userType": {
                  "type": "string",
                  "title": "User type",
                  "enum": ["admin", "power", "standard"],
                  "description": "The type of the user."
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "description": "The role assigned to the user. Only applicable for Power Users."
                },
                "idpUserId": {
                  "type": "string",
                  "title": "IDP user ID",
                  "description": "Only required if the user is SSO authenticated"
                },
                "userPrincipalName": {
                  "type": "string",
                  "title": "User principal name",
                  "description": "Do not specify if user is not AD authenticated."
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Update user by ID",
        "operationId": "updateUser",
        "description": "Update the single user. Learn more: https://developers.egnyte.com/docs/read/User_Management_API_Documentation#Update-Single-User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "x-ms-visibility": "important",
                  "title": "User ID",
                  "description": "Unique identifier for the user"
                },
                "email": {
                  "type": "string",
                  "title": "User email",
                  "description": "The email address of the user."
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "givenName": {
                      "type": "string",
                      "title": "Given name",
                      "description": "The first name of the user."
                    },
                    "familyName": {
                      "type": "string",
                      "title": "Family name",
                      "description": "The last name of the user."
                    }
                  }
                },
                "active": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "Whether the user is active or inactive."
                },
                "sendInvite": {
                  "type": "boolean",
                  "title": "Send invite",
                  "description": "If set to true, an invitation email will be sent. The parameter cannot be the only one modified by this action."
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "enum": ["en-US", "fr-CA", "de-DE"],
                  "description": "The \"language\" parameter is accepted only when Language Pack has been enabled for the domain."
                },
                "authType": {
                  "type": "string",
                  "title": "Auth type",
                  "enum": ["ad", "sso", "egnyte"],
                  "description": "The authentication type for the user."
                },
                "userType": {
                  "type": "string",
                  "title": "User type",
                  "enum": ["admin", "power", "standard"],
                  "description": "The type of the user."
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "description": "The role assigned to the user. Only applicable for Power Users."
                },
                "idpUserId": {
                  "type": "string",
                  "title": "IDP user ID",
                  "description": "Only required if the user is SSO authenticated and not using default user mapping"
                },
                "userPrincipalName": {
                  "type": "string",
                  "title": "User principal name",
                  "description": "Do not specify if user is not AD authenticated."
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/CreateFolder": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the created folder",
                  "title": "Folder Path"
                },
                "folder_id": {
                  "type": "string",
                  "description": "The unique ID of the created folder",
                  "title": "Folder ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Create folder",
        "operationId": "createFolder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The full path of the new folder.",
                  "title": "Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "x-ms-visibility": "important",
        "description": "Create a folder in Egnyte. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Create-a-Folder"
      }
    },
    "/api-proxy/DeleteFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "parent_folder_path": {
                  "type": "string",
                  "description": "Path to the parent folder for the deleted file",
                  "title": "Parent Folder Path"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete file by path",
        "operationId": "deleteFileByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The file path in Egnyte, including target filename.",
                  "title": "File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Delete a file using a path. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Delete-a-File-or-Folder"
      }
    },
    "/api-proxy/DeleteFolderByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "parent_folder_path": {
                  "type": "string",
                  "description": "Path to the parent folder for the deleted folder.",
                  "title": "Parent Folder Path"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete folder by path",
        "operationId": "deleteFolderByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The folder path in Egnyte, including target folder name to be deleted.",
                  "title": "Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Delete a folder using a path. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Delete-a-File-or-Folder"
      }
    },
    "/api-proxy/DeleteFolderById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "parent_folder_path": {
                  "type": "string",
                  "description": "Path to the parent folder for the deleted folder.",
                  "title": "Parent Folder Path"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete folder by ID",
        "operationId": "deleteFolderById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the folder to delete from Egnyte.",
                  "title": "Folder Id"
                }
              },
              "required": ["id"]
            }
          }
        ],
        "description": "Delete a folder using an ID. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Delete-a-File-or-Folder"
      }
    },
    "/api-proxy/DeleteFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "parent_folder_path": {
                  "type": "string",
                  "description": "Path to the parent folder for the deleted file.",
                  "title": "Parent Folder Path"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete file by ID",
        "operationId": "deleteFileById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file to delete from Egnyte.",
                  "title": "File Id"
                }
              },
              "required": ["id"]
            }
          }
        ],
        "description": "Delete a file using an ID. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Delete-a-File-or-Folder"
      }
    },
    "/api-proxy/CopyFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the copied file.",
                  "title": "File Path"
                },
                "group_id": {
                  "type": "string",
                  "description": "The ID to reference the file as a whole.",
                  "title": "File ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Copy file by path",
        "operationId": "copyFileByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The source file path in Egnyte, including target filename.",
                  "title": "Source File",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination file path in Egnyte, including target filename.",
                  "title": "Destination File"
                }
              },
              "required": ["destination_path", "path"]
            }
          }
        ],
        "description": "Copy a file by using a path. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Copy-File-or-Folder"
      }
    },
    "/api-proxy/CopyFolderByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the copied folder.",
                  "title": "Folder Path"
                },
                "folder_id": {
                  "type": "string",
                  "description": "The unique ID of the copied folder.",
                  "title": "Folder ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Copy folder by path",
        "operationId": "copyFolderByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The source folder path in Egnyte.",
                  "title": "Source Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination folder path in Egnyte.",
                  "title": "Destination Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["destination_path", "path"]
            }
          }
        ],
        "description": "Copy a folder by using a path. https://developers.egnyte.com/docs/File_System_Management_API_Documentation#Copy-File-or-Folder"
      }
    },
    "/api-proxy/FullGroupUpdate": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of created group.",
                  "title": "Group ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of a group."
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of a member.",
                        "title": "Username"
                      },
                      "value": {
                        "type": "number",
                        "description": "The user ID of a member.",
                        "title": "User ID"
                      },
                      "display": {
                        "type": "string",
                        "description": "The display name of a member.",
                        "title": "User display name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User does not exists"
          },
          "404": {
            "description": "Group with resource id not found"
          },
          "409": {
            "description": "Group already exists"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Full group update",
        "description": "Overwrite all of the attributes of a group. https://developers.egnyte.com/docs/read/Group_Management#Full-Update-to-a-Group",
        "operationId": "fullGroupUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id", "displayName"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of created group.",
                  "title": "Group ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the group.",
                  "title": "Display name"
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The globally unique ID of a group member.",
                        "title": "User ID"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/PartialGroupUpdate": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of created group.",
                  "title": "Group ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of a group."
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of a member.",
                        "title": "Username"
                      },
                      "value": {
                        "type": "number",
                        "description": "The user ID of a member.",
                        "title": "User ID"
                      },
                      "display": {
                        "type": "string",
                        "description": "The display name of a member.",
                        "title": "User display name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User does not exists"
          },
          "404": {
            "description": "Group with resource id not found"
          },
          "409": {
            "description": "Group already exists"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Partial group update",
        "description": "Update specific attributes of a group. https://developers.egnyte.com/docs/read/Group_Management#Partial-Update-to-a-Group",
        "operationId": "partialGroupUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of created group.",
                  "title": "Group ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the group.",
                  "title": "Display name"
                },
                "members": {
                  "type": "array",
                  "description": "Group members",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The globally unique id of a group member.",
                        "title": "User ID"
                      },
                      "operation": {
                        "type": "string",
                        "description": "The action you wish to perform on a group.",
                        "title": "operation",
                        "enum": ["add", "delete"]
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/DeleteGroup": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Group with resource id not found"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete group",
        "description": "Delete a group by ID. https://developers.egnyte.com/docs/read/Group_Management#Delete-a-Group",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The group ID.",
                  "title": "Group Id"
                }
              },
              "required": ["id"]
            }
          }
        ]
      }
    },
    "/api-proxy/CopyFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the copied file.",
                  "title": "File Path"
                },
                "group_id": {
                  "type": "string",
                  "description": "The ID to reference the file as a whole.",
                  "title": "File ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Copy file by ID",
        "operationId": "copyFileById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file to copy in Egnyte.",
                  "title": "File Id"
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination file path in Egnyte, including target filename.",
                  "title": "Destination File Path"
                }
              },
              "required": ["destination_path", "id"]
            }
          }
        ],
        "description": "Copy a file by using an ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Copy-File-or-Folder"
      }
    },
    "/api-proxy/CopyFolderById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the copied folder.",
                  "title": "Folder Path"
                },
                "folder_id": {
                  "type": "string",
                  "description": "The unique ID of the copied folder.",
                  "title": "Folder ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Copy folder by ID",
        "operationId": "copyFolderById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the folder to copy in Egnyte.",
                  "title": "Folder Id"
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination folder path in Egnyte.",
                  "title": "Destination Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["id", "destination_path"]
            }
          }
        ],
        "description": "Copy a folder using an ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Copy-File-or-Folder"
      }
    },
    "/api-proxy/MoveFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the moved file.",
                  "title": "File Path"
                },
                "group_id": {
                  "type": "string",
                  "description": "The ID to reference the file as a whole.",
                  "title": "File ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Move file by path",
        "operationId": "moveFileByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The path to source file.",
                  "title": "Source Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination file path in Egnyte, including target filename.",
                  "title": "Destination File Path"
                }
              },
              "required": ["destination_path", "path"]
            }
          }
        ],
        "description": "Move a file in Egnyte using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Move-File-or-Folder"
      }
    },
    "/api-proxy/MoveFolderByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the moved folder.",
                  "title": "Folder Path"
                },
                "folder_id": {
                  "type": "string",
                  "description": "The unique ID of the moved folder.",
                  "title": "Folder ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Move folder by path",
        "operationId": "moveFolderByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The path to source folder.",
                  "title": "Source Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination folder path in Egnyte.",
                  "title": "Destination Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["destination_path", "path"]
            }
          }
        ],
        "description": "Move a folder in Egnyte using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Move-File-or-Folder"
      }
    },
    "/api-proxy/MoveFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the moved file.",
                  "title": "File Path"
                },
                "group_id": {
                  "type": "string",
                  "description": "The ID to reference the file as a whole.",
                  "title": "File ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Move file by ID",
        "operationId": "moveFileById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination file path in Egnyte. Including target filename.",
                  "title": "Destination File Path"
                }
              },
              "required": ["id", "destination_path"]
            }
          }
        ],
        "description": "Move a file in Egnyte using file ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Move-File-or-Folder"
      }
    },
    "/api-proxy/MoveFolderById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the moved folder.",
                  "title": "Folder Path"
                },
                "folder_id": {
                  "type": "string",
                  "description": "The unique ID of the moved folder.",
                  "title": "Folder ID"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Move folder by ID",
        "operationId": "moveFolderById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the folder in Egnyte.",
                  "title": "Folder Id"
                },
                "destination_path": {
                  "type": "string",
                  "description": "The destination folder path in Egnyte.",
                  "title": "Destination Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["destination_path", "id"]
            }
          }
        ],
        "description": "Move a folder using ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Move-File-or-Folder"
      }
    },
    "/api-proxy/ShareFile": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the link.",
                        "title": "Link ID"
                      },
                      "url": {
                        "type": "string",
                        "description": "The full url of the link.",
                        "title": "Link Url"
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of valid email addresses to which the link was sent.",
                        "title": "Recipients"
                      }
                    }
                  },
                  "description": "Links"
                },
                "path": {
                  "type": "string",
                  "description": "Full path of the shared file.",
                  "title": "File Path"
                },
                "type": {
                  "type": "string",
                  "description": "The type of link, either file, folder, or upload.",
                  "title": "Type"
                },
                "accessibility": {
                  "type": "string",
                  "description": "Who a link is accessible by, one of anyone, password, domain, or recipients.",
                  "title": "Accessibility"
                },
                "notify": {
                  "type": "boolean",
                  "description": "Whether the link creator will be notified via email when link is accessed.",
                  "title": "Notify creator when accessed",
                  "enum": [true, false]
                },
                "link_to_current": {
                  "type": "boolean",
                  "description": "Is this current version? T or F",
                  "title": "Is referring to version",
                  "enum": [true, false]
                },
                "expiry_date": {
                  "type": "string",
                  "description": "Date and time of the expiration of the link.",
                  "title": "Expiry Date"
                },
                "creation_date": {
                  "type": "string",
                  "description": "Date and time of creation of the link.",
                  "title": "Creation Date"
                },
                "created_by": {
                  "type": "string",
                  "description": "Username of the user that created the link.",
                  "title": "Created By"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Share file",
        "operationId": "shareFile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The file path in Egnyte, including target filename to share.",
                  "title": "File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Share a file in Egnyte. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Create-a-Link"
      }
    },
    "/api-proxy/ShareFolder": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the link.",
                        "title": "Link ID"
                      },
                      "url": {
                        "type": "string",
                        "description": " The full url of the link.",
                        "title": "Link Url"
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of valid email addresses to which the link was sent.",
                        "title": "Recipients"
                      }
                    }
                  },
                  "description": "Links"
                },
                "path": {
                  "type": "string",
                  "description": "Full path of the shared folder.",
                  "title": "Folder Path"
                },
                "type": {
                  "type": "string",
                  "description": "The type of link, either file, folder, or upload.",
                  "title": "Type"
                },
                "accessibility": {
                  "type": "string",
                  "description": "Who a link is accessible by, one of anyone, password, domain, or recipients.",
                  "title": "Accessibility"
                },
                "notify": {
                  "type": "boolean",
                  "description": "Whether the link creator will be notified via email when link is accessed.",
                  "title": "Notify creator when accessed",
                  "enum": [true, false]
                },
                "link_to_current": {
                  "type": "boolean",
                  "description": "Is this current version? T or F",
                  "title": "Is referring to version",
                  "enum": [true, false]
                },
                "expiry_date": {
                  "type": "string",
                  "description": "Date and time of the expiration of the link.",
                  "title": "Expiry Date"
                },
                "creation_date": {
                  "type": "string",
                  "description": "Date and time of creation of the link.",
                  "title": "Creation Date"
                },
                "created_by": {
                  "type": "string",
                  "description": "Username of the user that created the link.",
                  "title": "Created by"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Share folder",
        "operationId": "shareFolder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The folder path in Egnyte, to share.",
                  "title": "Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Share a folder in Egnyte. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Create-a-Link"
      }
    },
    "/api-proxy/FileInfoByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileInfoResponse"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "File info by path",
        "operationId": "fileInfoByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The unique path to the file in Egnyte.",
                  "title": "File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Retrieve file info using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation"
      }
    },
    "/api-proxy/FolderInfoByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Folder info by path",
        "operationId": "folderInfoByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The unique path to the folder in Egnyte.",
                  "title": "Folder Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": true,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": true,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Retrieve folder info using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation"
      }
    },
    "/api-proxy/FileInfoById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileInfoResponse"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "File info by ID",
        "operationId": "fileInfoById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                }
              },
              "required": ["id"]
            }
          }
        ],
        "description": "Retrieve file info using file ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation"
      }
    },
    "/api-proxy/FolderInfoById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Folder info by ID",
        "operationId": "folderInfoById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the folder in Egnyte.",
                  "title": "Folder Id"
                }
              },
              "required": ["id"]
            }
          }
        ],
        "description": "Retrieve folder info using ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation"
      }
    },
    "/api-proxy/LockFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time in seconds that the file should be locked for.",
                  "title": "Timeout"
                },
                "lock_token": {
                  "type": "string",
                  "description": "The token that must be used to unlock the file.",
                  "title": "Lock Token"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Lock file by path",
        "operationId": "lockFileByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The target file path in Egnyte, including target filename.",
                  "title": "Target File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["path"]
            }
          }
        ],
        "description": "Lock file using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Lock-a-File"
      }
    },
    "/api-proxy/UnlockFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Unlock file by path",
        "operationId": "unlockFileByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The unique path to the file in Egnyte.",
                  "title": "File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "lock_token": {
                  "type": "string",
                  "description": "The current lock token for the file.",
                  "title": "Lock Token"
                }
              },
              "required": ["lock_token", "path"]
            }
          }
        ],
        "description": "Unlock file using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Unlock-a-File"
      }
    },
    "/api-proxy/LockFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time in seconds that the file should be locked for.",
                  "title": "Timeout"
                },
                "lock_token": {
                  "type": "string",
                  "description": "The token that must be used to unlock the file.",
                  "title": "Lock Token"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Lock file by ID",
        "operationId": "lockFileById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                }
              },
              "required": ["id"]
            }
          }
        ],
        "description": "Lock file using ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Lock-a-File"
      }
    },
    "/api-proxy/UnlockFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Unlock file by ID",
        "operationId": "unlockFileById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                },
                "lock_token": {
                  "type": "string",
                  "description": "The current lock token for the file.",
                  "title": "Lock Token"
                }
              },
              "required": ["id", "lock_token"]
            }
          }
        ],
        "description": "Unlock file using ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Unlock-a-File"
      }
    },
    "/api-proxy/DownloadFileByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get file content by path",
        "operationId": "getFileContentByPath",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filePath": {
                  "type": "string",
                  "description": "The unique path to the file in Egnyte.",
                  "title": "File Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["filePath"]
            }
          }
        ],
        "description": "Retrieves the file contents from Egnyte using path. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Download-File"
      }
    },
    "/api-proxy/DownloadFileById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get file content by ID",
        "operationId": "getFileContentById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                }
              },
              "required": ["fileId"]
            }
          }
        ],
        "description": "Retrieves the file content from Egnyte using ID. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Download-File"
      }
    },
    "/api-proxy/UploadFile": {
      "post": {
        "operationId": "createFile",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The name of the file to create in Egnyte.",
            "x-ms-summary": "File name"
          },
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The folder path to upload the file to Egnyte.",
            "x-ms-summary": "Folder path",
            "x-ms-dynamic-values": {
              "parameters": {
                "isFolder": true,
                "fileFilter": [],
                "dataset": null
              },
              "capability": "file-picker",
              "value-path": "path"
            },
            "x-ms-dynamic-tree": {
              "settings": {
                "canSelectParentNodes": true,
                "canSelectLeafNodes": true
              },
              "open": {
                "operationId": "listRootFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path"
              },
              "browse": {
                "operationId": "listFolder",
                "itemValuePath": "path",
                "itemTitlePath": "name",
                "itemIsParent": "(is_folder eq true)",
                "itemFullTitlePath": "path",
                "parameters": {
                  "path": {
                    "selectedItemValuePath": "path"
                  }
                }
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/octet-stream",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the file to upload to Egnyte.",
            "x-ms-summary": "File content",
            "schema": {
              "format": "binary",
              "type": "string",
              "description": "The content of the file to upload to Egnyte.",
              "title": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": " The id of the current version of the file.",
                  "title": "Version ID"
                },
                "group_id": {
                  "type": "string",
                  "description": "The ID to reference the file as a whole.",
                  "title": "File ID"
                },
                "path": {
                  "type": "string",
                  "description": "Full path of the uploaded file.",
                  "title": "File Path"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Create file",
        "description": "Uploads a file to Egnyte. https://developers.egnyte.com/docs/read/File_System_Management_API_Documentation#Upload-a-File"
      }
    },
    "/api-proxy/SetMetadataByFileId": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Set metadata by file ID",
        "description": "Write metadata to a file by using file ID. https://developers.egnyte.com/docs/Metadata_API#Set-Values-for-a-Namespace",
        "operationId": "setMetadataByFileId",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File Id"
                },
                "namespaceName": {
                  "type": "string",
                  "description": "The name of the namespace.",
                  "title": "Namespace Name"
                },
                "metadataName": {
                  "type": "string",
                  "description": "The name of the key you want to assign value to.",
                  "title": "Metadata Key Name"
                },
                "metadataValue": {
                  "type": "string",
                  "description": "Metadata value to be set.",
                  "title": "Metadata Value"
                }
              },
              "required": ["fileId", "namespaceName", "metadataName"]
            }
          }
        ]
      }
    },
    "/api-proxy/SetMetadataByFolderId": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Set metadata by folder ID",
        "description": "Write metadata to a folder by using folder ID. https://developers.egnyte.com/docs/Metadata_API#Set-Values-for-a-Namespace",
        "operationId": "setMetadataByFolderId",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "folderId": {
                  "type": "string",
                  "description": "The unique identifier of the folder in Egnyte.",
                  "title": "Folder Id"
                },
                "namespaceName": {
                  "type": "string",
                  "description": "The name of the namespace.",
                  "title": "Namespace Name"
                },
                "metadataName": {
                  "type": "string",
                  "description": "The name of the key you want to assign value to.",
                  "title": "Metadata Key Name"
                },
                "metadataValue": {
                  "type": "string",
                  "description": "Metadata value to be set.",
                  "title": "Metadata Value"
                }
              },
              "required": [
                "folderId",
                "namespaceName",
                "metadataName",
                "metadataValue"
              ]
            }
          }
        ]
      }
    },
    "/api-proxy/GetAllNamespaces": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamespaceItem"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": [],
        "produces": ["application/json"],
        "summary": "Get all namespaces",
        "description": "Get a list all custom metadata namespaces in the domain. https://developers.egnyte.com/docs/Metadata_API#Get-All-Namespaces",
        "operationId": "getAllNamespaces"
      }
    },
    "/api-proxy/CreateNamespace": {
      "post": {
        "responses": {
          "204": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Create namespace",
        "operationId": "createNamespace",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "What you call the namespace",
                  "title": "Namespace name"
                },
                "displayName": {
                  "type": "string",
                  "description": "The name to identify the namespace in the UI",
                  "title": "Display name"
                },
                "scope": {
                  "type": "string",
                  "description": "Who can see and modify the namespace",
                  "title": "Scope",
                  "enum": ["public", "protected", "private"]
                },
                "keys": {
                  "type": "object",
                  "description": "The custom metadata key(s) you are creating",
                  "title": "Keys",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Specifies the data type for a key"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name to identify the field in the UI"
                      },
                      "helpText": {
                        "type": "string",
                        "description": "A tooltip description for the metadata field"
                      },
                      "priority": {
                        "type": "number",
                        "description": "Specifies priority for the key (keys with the higher priority will be displayed first"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "For a key of enum type, specifies the enumerated values"
                      }
                    },
                    "required": ["type"]
                  }
                }
              },
              "required": ["name", "scope", "keys"]
            }
          }
        ],
        "description": "Create a namespace in Egnyte. https://developers.egnyte.com/docs/Metadata_API#Create-Namespace"
      }
    },
    "/api-proxy/UpdateNamespaceAttributes": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamespaceItem"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Update namespace attributes",
        "operationId": "updateNamespaceAttributes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                },
                "displayName": {
                  "type": "string",
                  "description": "The name to identify the namespace in the UI"
                },
                "priorities": {
                  "type": "object",
                  "description": "Specifies the priority (order) for the keys. The keys will be displayed in accordance with their priorities in descending order (keys with higher priority will be displayed first)",
                  "additionalProperties": {
                    "type": "number"
                  }
                }
              },
              "required": ["namespace"]
            }
          }
        ],
        "description": "Updates namespace attributes. https://developers.egnyte.com/docs/Metadata_API#Update-Namespace-Attributes"
      }
    },
    "/api-proxy/UpdateNamespaceKeys": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Namespace name"
                },
                "key": {
                  "type": "string",
                  "description": "Key name"
                },
                "displayName": {
                  "type": "string",
                  "description": "The name to identify the field in the UI"
                },
                "helpText": {
                  "type": "string",
                  "description": "A tooltip description for the metadata field"
                },
                "priority": {
                  "type": "number",
                  "description": "Specifies priority for the key (keys with the higher priority will be displayed first"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Update namespace keys",
        "operationId": "updateNamespaceKeys",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                },
                "key": {
                  "type": "string",
                  "description": "The unique key in the namespace",
                  "title": "Key"
                },
                "displayName": {
                  "type": "string",
                  "description": "Specifies the name displayed for the key"
                },
                "type": {
                  "type": "string",
                  "description": "Specifies the data type for a key",
                  "enum": ["integer", "string", "decimal", "date", "enum"]
                },
                "priority": {
                  "type": "number",
                  "description": "Specifies the priority (order) for the keys. The keys will be displayed in accordance with their priorities in descending order (keys with higher priority will be displayed first)"
                },
                "data": {
                  "type": "string",
                  "description": "For a key of enum type, specifies the enumerated values"
                },
                "helpText": {
                  "type": "string",
                  "description": "Instructional text that is displayed when a user is adding/editing a property to give context as to the property's purpose"
                }
              },
              "required": ["namespace", "key"]
            }
          }
        ],
        "description": "Update the key of a custom metadata for a domain. https://developers.egnyte.com/docs/Metadata_API#Update-Namespace-Keys"
      }
    },
    "/api-proxy/GetNamespace": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamespaceItem"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get namespace",
        "description": "List all custom metadata keys that have been created in a given namespace. https://developers.egnyte.com/docs/Metadata_API#Get-Namespace",
        "operationId": "getNamespace",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                }
              },
              "required": ["namespace"]
            }
          }
        ]
      }
    },
    "/api-proxy/DeleteNamespace": {
      "post": {
        "responses": {
          "204": {
            "description": "OK",
            "schema": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Delete namespace",
        "description": "Delete a specified namespace. https://developers.egnyte.com/docs/Metadata_API#Delete-Namespace",
        "operationId": "deleteNamespace",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                },
                "force": {
                  "type": "boolean",
                  "description": "Delete even if the namespace is used",
                  "title": "Force to delete",
                  "enum": [true, false]
                }
              },
              "required": ["namespace"]
            }
          }
        ]
      }
    },
    "/api-proxy/GetAllProjects": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectItem"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "Get all projects",
        "operationId": "getAllProjects",
        "description": "List all project folders in the domain. https://developers.egnyte.com/docs/read/Project_Folder_API#Get-All-Projects"
      }
    },
    "/api-proxy/MarkFolderAsProject": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item Id",
                  "title": "Id"
                }
              },
              "required": ["id"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Mark folder as project",
        "operationId": "markFolderAsProject",
        "description": "Mark an existing folder as a project. https://developers.egnyte.com/docs/read/Project_Folder_API#Mark-Folder-as-Project",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rootFolderId": {
                  "type": "string",
                  "description": "FolderId of the root project folder",
                  "title": "Root Folder Id"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the project",
                  "title": "Name"
                },
                "description": {
                  "type": "string",
                  "description": "Folder description",
                  "title": "Description"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the project",
                  "title": "Status",
                  "enum": [
                    "pending",
                    "in-progress",
                    "completed",
                    "on-hold",
                    "canceled"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start date of the project.",
                  "title": "Start Date (e.g. 2023-12-31T23:59:59)"
                },
                "completionDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The completion date for the project.",
                  "title": "Completion Date (e.g. 2023-12-31T23:59:59)"
                }
              },
              "required": ["rootFolderId", "name", "status"]
            }
          }
        ]
      }
    },
    "/api-proxy/CreateProjectFromTemplate": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "groupsCreated": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Project ID",
                        "title": "Project Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Project name",
                        "title": "Project name"
                      }
                    },
                    "required": ["id", "name"]
                  }
                }
              },
              "required": ["groupsCreated"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Create project from template",
        "operationId": "createProjectFromTemplate",
        "description": "Create a new project from a project folder template. https://developers.egnyte.com/docs/read/Project_Folder_API#Create-From-Template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentFolderId": {
                  "type": "string",
                  "description": "Folder ID of the parent folder where the project folder will be created",
                  "title": "Parent Folder Id"
                },
                "templateFolderId": {
                  "type": "string",
                  "description": "Folder ID of the project folder template",
                  "title": "Template Folder Id"
                },
                "folderName": {
                  "type": "string",
                  "description": "Name of the new folder that will be created",
                  "title": "Folder Name"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the project",
                  "title": "Name"
                },
                "description": {
                  "type": "string",
                  "description": "Folder description",
                  "title": "Description"
                },
                "projectId": {
                  "type": "string",
                  "description": "ID of the project",
                  "title": "Project Id"
                },
                "customerName": {
                  "type": "string",
                  "description": "The customer associated with the project",
                  "title": "Customer Name"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the project",
                  "title": "Status",
                  "enum": ["pending", "in-progress", "on-hold"]
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start date of the project.",
                  "title": "Start Date (e.g. 2023-12-31T23:59:59)"
                },
                "completionDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The completion date for the project.",
                  "title": "Completion Date (e.g. 2023-12-31T23:59:59)"
                },
                "location": {
                  "$ref": "#/definitions/ProjectLocationItem"
                }
              },
              "required": [
                "parentFolderId",
                "templateFolderId",
                "folderName",
                "name",
                "status"
              ]
            }
          }
        ]
      }
    },
    "/api-proxy/GetProjectById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectItem"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get project by ID",
        "operationId": "getProjectById",
        "description": "Retrieve a project using ID. https://developers.egnyte.com/docs/read/Project_Folder_API#Find-Project-by-ID",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "string",
                  "description": "Project Id",
                  "title": "Project Id"
                }
              },
              "required": ["projectId"]
            }
          }
        ]
      }
    },
    "/api-proxy/UpdateProjectById": {
      "patch": {
        "responses": {
          "200": {
            "description": "OK, project updated successfully."
          },
          "400": {
            "description": "Bad Request. Invalid folder ID or payload."
          },
          "404": {
            "description": "Not Found. The project with the specified ID was not found."
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Update project by ID",
        "operationId": "updateProjectById",
        "description": "Updates specified properties of a project identified by its ID. https://developers.egnyte.com/docs/read/Project_Folder_API#Update-Project",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the folder."
                },
                "description": {
                  "type": "string",
                  "description": "A new description for the folder."
                },
                "projectId": {
                  "type": "string",
                  "description": "ID of the project."
                },
                "customerName": {
                  "type": "string",
                  "description": "The customer associated with the project."
                },
                "location": {
                  "type": "object",
                  "description": "The location details of the project.",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "First line of the street address."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Second line of the street address."
                    },
                    "city": {
                      "type": "string",
                      "description": "City."
                    },
                    "state": {
                      "type": "string",
                      "description": "State or province."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip code or postal code."
                    },
                    "country": {
                      "type": "string",
                      "description": "using a 3 character country code from the ISO 3166 GENC profile, for example: USA, GBR, POL."
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "Current status of the project.",
                  "enum": ["pending", "in-progress", "on-hold"]
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date of the project in ISO 8601 format."
                },
                "completionDate": {
                  "type": "string",
                  "description": "The anticipated completion date of the project in ISO 8601 format."
                },
                "customMetadata": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Custom metadata fields to add or update for the folder."
                }
              },
              "required": ["projectId", "name", "status"],
              "additionalProperties": false
            }
          }
        ]
      }
    },
    "/api-proxy/DeleteProjectById/{projectId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete project by ID",
        "operationId": "deleteProjectById",
        "description": "Remove a project based on its Id. https://developers.egnyte.com/docs/read/Project_Folder_API#Remove-Project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "x-ms-summary": "Project ID",
            "description": "ID of the project being deleted",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api-proxy/GetProjectByRootFolderId": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectItem"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get project by root folder ID",
        "operationId": "getProjectByRootFolderId",
        "description": "Retrieve a project based on its root folder ID. https://developers.egnyte.com/docs/read/Project_Folder_API#Find-Project-by-Root-Folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rootFolderId": {
                  "type": "string",
                  "description": "The ID of the root folder",
                  "title": "The ID of the root folder"
                }
              },
              "required": ["rootFolderId"]
            }
          }
        ]
      }
    },
    "/api-proxy/CleanupProject": {
      "post": {
        "responses": {
          "202": {
            "description": "Cleanup procedure started",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Cleanup procedure has been initiated."
                }
              }
            }
          },
          "409": {
            "description": "The previous cleanup procedure is still in progress."
          },
          "503": {
            "description": "Too many cleanup procedures are being executed. The server cannot accept the request at the moment."
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Clean up project by ID",
        "operationId": "cleanupProject",
        "description": "This endpoint initiates a cleanup in a project, and optionally delete or disable specified users. https://developers.egnyte.com/docs/read/Project_Folder_API#Cleanup%20Project ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "string",
                  "description": "Project ID",
                  "title": "Project ID"
                },
                "deleteLinks": {
                  "type": "boolean",
                  "description": "If set to true, all existing active links in the project will be deleted."
                },
                "usersToDelete": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "List of User IDs to be deleted."
                },
                "usersToDisable": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "List of User IDs to be disabled."
                }
              },
              "required": ["projectId", "deleteLinks"]
            }
          }
        ]
      }
    },
    "/api-proxy/CreateMetadataKey": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Create metadata key",
        "description": "Add a metadata key to an existing namespace. https://developers.egnyte.com/docs/Metadata_API#Create-Metadata-Key",
        "operationId": "createMetadataKey",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the key you are creating.",
                  "title": "Key name"
                },
                "type": {
                  "type": "string",
                  "description": "Specifies the data type for a key.",
                  "title": "Type (For \"enum\": Data parameter is required)",
                  "enum": ["integer", "string", "decimal", "date", "enum"]
                },
                "displayName": {
                  "type": "string",
                  "description": "The name to identify the field in the UI.",
                  "title": "Display name"
                },
                "priority": {
                  "type": "number",
                  "description": "Specifies priority for the key (keys with the higher priority will be displayed first).",
                  "title": "Priority"
                },
                "helpText": {
                  "type": "string",
                  "description": "A tooltip description for the metadata field.",
                  "title": "Help text"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "For a key of enum type, specifies the enumerated values.",
                  "title": "Data"
                }
              },
              "required": ["namespace", "key", "type"]
            }
          }
        ]
      }
    },
    "/api-proxy/DeleteMetadataKey": {
      "post": {
        "responses": {
          "204": {
            "description": "OK",
            "schema": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Delete metadata key",
        "description": "Delete a metadata key from an existing namespace. https://developers.egnyte.com/docs/Metadata_API#Delete-Metadata-Key",
        "operationId": "deleteMetadataKey",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "The unique identifier of the namespace in Egnyte.",
                  "title": "Namespace name"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the key you are deleting.",
                  "title": "Name"
                },
                "force": {
                  "type": "boolean",
                  "description": "Delete even if the metadata key is used.",
                  "title": "Force to delete",
                  "enum": [true, false]
                }
              },
              "required": ["namespace", "key"]
            }
          }
        ]
      }
    },
    "/api-proxy/GetMetadataByFileId": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Get metadata by file ID",
        "description": "Get metadata from a file by using file ID. https://developers.egnyte.com/docs/Metadata_API#Get-Values-for-a-Namespace",
        "operationId": "getMetadataByFileId",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "The unique identifier of the file in Egnyte.",
                  "title": "File ID"
                },
                "namespace": {
                  "type": "string",
                  "description": "The name of the namespace.",
                  "title": "Namespace Name"
                }
              },
              "required": ["fileId", "namespace"]
            }
          }
        ]
      }
    },
    "/api-proxy/GetMetadataByFolderId": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Get metadata by folder ID",
        "description": "Get metadata from a folder by using folder ID. https://developers.egnyte.com/docs/Metadata_API#Get-Values-for-a-Namespace",
        "operationId": "getMetadataByFolderId",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "folderId": {
                  "type": "string",
                  "description": "The unique identifier of the folder in Egnyte.",
                  "title": "Folder ID"
                },
                "namespace": {
                  "type": "string",
                  "description": "The name of the namespace.",
                  "title": "Namespace Name"
                }
              },
              "required": ["folderId", "namespace"]
            }
          }
        ]
      }
    },
    "/api-proxy/SearchMetadata": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Search metadata",
        "description": "Find items with a specific metadata field or value. https://developers.egnyte.com/docs/Metadata_API#Search-Metadata",
        "operationId": "searchMetadata",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Search Type",
                  "description": "Which item types should be searched.",
                  "enum": ["ALL", "FOLDER", "FILE"]
                },
                "hasKey": {
                  "type": "array",
                  "title": "Has Key",
                  "items": {
                    "type": "object",
                    "properties": {
                      "namespace": {
                        "type": "string",
                        "description": "The name of the namespace.",
                        "title": "Namespace Name"
                      },
                      "keyName": {
                        "type": "string",
                        "description": "The name of the metadata key.",
                        "title": "Metadata Key"
                      }
                    },
                    "required": ["namespace", "keyName"]
                  },
                  "description": "For finding items that have a specific metadata key."
                },
                "keyWithValue": {
                  "type": "array",
                  "title": "Key With Value (Cannot be used with 'Has Key' parameter)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "namespace": {
                        "type": "string",
                        "description": "The name of the namespace.",
                        "title": "Namespace Name"
                      },
                      "keyName": {
                        "type": "string",
                        "description": "The name of the metadata key.",
                        "title": "Metadata Key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the metadata key.",
                        "title": "Metadata Value"
                      }
                    },
                    "required": ["namespace", "keyName", "value"]
                  },
                  "description": "For finding items that have a specific metadata key with value."
                }
              }
            }
          }
        ]
      }
    },
    "/api-proxy/GetEffectivePermissions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "permission": {
                  "type": "string",
                  "description": "Permission value",
                  "title": "Permission",
                  "enum": [
                    "None",
                    "Viewer Only",
                    "Viewer",
                    "Editor",
                    "Full",
                    "Owner"
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get effective permissions",
        "operationId": "getEffectivePermissions",
        "description": "Get effective permissions for a user. https://developers.egnyte.com/docs/read/Egnyte_Permissions_API#Get-Effective-Permission-for-a-User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the folder.",
                  "title": "Folder Path"
                },
                "username": {
                  "type": "string",
                  "description": "Username",
                  "title": "Username"
                }
              },
              "required": ["path", "username"]
            }
          }
        ]
      }
    },
    "/api-proxy/SetFolderPermissions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Set folder permissions",
        "operationId": "setFolderPermissions",
        "description": "Set permissions for a folder. https://developers.egnyte.com/docs/read/Egnyte_Permissions_API#Set-Folder-Permissions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the folder.",
                  "title": "Folder Path"
                },
                "userPerms": {
                  "type": "object",
                  "description": "Map of user to permission value.",
                  "title": "User Permissions",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Viewer Only",
                      "Viewer",
                      "Editor",
                      "Full",
                      "Owner"
                    ]
                  }
                },
                "groupPerms": {
                  "type": "object",
                  "description": "Map of group name to permission value",
                  "title": "Group Permissions",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Viewer Only",
                      "Viewer",
                      "Editor",
                      "Full",
                      "Owner"
                    ]
                  }
                },
                "inheritsPermissions": {
                  "type": "boolean",
                  "description": "Whether permissions should be inherited from the parent folder.",
                  "title": "Inherits Permissions"
                },
                "keepParentPermissions": {
                  "type": "boolean",
                  "description": "Whether permissions from parent folders should apply to this folder.",
                  "title": "Keep Parent Permissions (only if inheritsPermissions is false)"
                }
              },
              "required": ["path"]
            }
          }
        ]
      }
    },
    "/api-proxy/GetFolderPermissions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "userPerms": {
                  "type": "object",
                  "description": "Map of user to permission value.",
                  "title": "User Permissions",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Viewer Only",
                      "Viewer",
                      "Editor",
                      "Full",
                      "Owner"
                    ]
                  }
                },
                "groupPerms": {
                  "type": "object",
                  "description": "Map of group name to permission value",
                  "title": "Group Permissions",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Viewer Only",
                      "Viewer",
                      "Editor",
                      "Full",
                      "Owner"
                    ]
                  }
                },
                "inheritsPermissions": {
                  "type": "boolean",
                  "description": "Whether permissions should be inherited from the parent folder.",
                  "title": "Inherits Permissions"
                },
                "keepParentPermissions": {
                  "type": "boolean",
                  "description": "When disabling permissions inheritance with inheritsPermissions, this options determines whether previously inherited permissions from parent folders should be copied to this folder.",
                  "title": "Keep Parent Permissions"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Get folder permissions",
        "operationId": "getFolderPermissions",
        "description": "Get permissions for a folder. https://developers.egnyte.com/docs/read/Egnyte_Permissions_API#Get-Folder-Permissions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Full path of the folder.",
                  "title": "Folder Path"
                }
              },
              "required": ["path"]
            }
          }
        ]
      }
    },
    "/api-proxy/DeepLinksById": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Deep link",
                  "title": "Url"
                }
              },
              "required": ["url"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Deep link by ID",
        "operationId": "deepLinksById",
        "description": "Create a deep link for file or folder by ID. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Deep-Links-to-Files-and-Folders",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the file or folder",
                  "title": "Id"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the link",
                  "title": "Type",
                  "enum": ["file", "folder"]
                }
              },
              "required": ["id", "type"]
            }
          }
        ]
      }
    },
    "/api-proxy/DeepLinksByPath": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Deep link",
                  "title": "Url"
                }
              },
              "required": ["url"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Deep link by path",
        "operationId": "deepLinksByPath",
        "description": "Create a deep link for file or folder by path. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Deep-Links-to-Files-and-Folders",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Path of the file or folder",
                  "title": "Path"
                }
              },
              "required": ["path"]
            }
          }
        ]
      }
    },
    "/api-proxy/ListLinks": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array containing the IDs of all links for your domain that this user can see.",
                  "title": "Ids"
                },
                "offset": {
                  "type": "number",
                  "description": "The 0-based index of the initial record being requested.",
                  "title": "Offset"
                },
                "count": {
                  "type": "number",
                  "description": "The count of items returned. If this field is not specified, the count value will be 0.",
                  "title": "Count"
                },
                "total_count": {
                  "type": "number",
                  "description": "The number of links visible to the user in the domain.",
                  "title": "Total count"
                }
              },
              "required": ["ids", "offset", "count", "total_count"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "List all links",
        "operationId": "listLinks",
        "description": "Lists all links except for deleted links. Please note, that if the user executing this method is not an admin, then only links created by the user will be listed. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#List-Links",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetLinksRequest"
            }
          }
        ]
      }
    },
    "/api-proxy/ListLinksV2": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The absolute path of the target resource, either file or folder.",
                        "title": "Path"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of link, either file, folder, or upload",
                        "title": "Type"
                      },
                      "accessibility": {
                        "type": "string",
                        "description": "Who a link is accessible by, one of anyone, password, domain, or recipients.",
                        "title": "Accessibility"
                      },
                      "protection": {
                        "type": "string",
                        "description": "If \"PREVIEW\" for a file (or folder) link, it is a preview-only link to the file (folder), otherwise it is \"NONE\"",
                        "title": "Protection"
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of valid email addresses to which the link was sent.",
                        "title": "Recipients"
                      },
                      "notify": {
                        "type": "boolean",
                        "description": "Boolean as to whether the link creator will be notified via email when link is accessed.",
                        "title": "Notify",
                        "enum": [true, false]
                      },
                      "url": {
                        "type": "string",
                        "description": "The full url of the link",
                        "title": "Url"
                      },
                      "id": {
                        "type": "string",
                        "description": "The id of the link",
                        "title": "Id"
                      },
                      "link_to_current": {
                        "type": "boolean",
                        "description": "Boolean as to whether the link will always refer to the current version of file. Only applicable for file links.",
                        "title": "Link to current",
                        "enum": [true, false]
                      },
                      "creation_date": {
                        "type": "string",
                        "description": "Date and time of creation of the link",
                        "title": "Creation date"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Username of the user that created the link",
                        "title": "Created by"
                      },
                      "resource_id": {
                        "type": "string",
                        "description": "Id of the associated resource, either group id if it is a file link, or the folder id if it is a folder or upload link",
                        "title": "Resource id"
                      },
                      "expiry_clicks": {
                        "type": "number",
                        "description": "Number of clicks left on the link before expiration.  This field is only shown if the link is to expire via clicks",
                        "title": "Expiry clicks"
                      },
                      "last_accessed": {
                        "type": "string",
                        "description": "Date and time of the last access of the link.  This field is only shown if the link has been accessed at least once",
                        "title": "Last accessed"
                      },
                      "expiry_date": {
                        "type": "string",
                        "description": "Date and time of the expiration of the link.  This field is only shown if the link is to expire by date",
                        "title": "Expiry date"
                      }
                    }
                  },
                  "description": "An array containing the full json information for all links for your domain that this user can see within any specified ranges",
                  "title": "Links"
                },
                "count": {
                  "type": "number",
                  "description": "The number of links visible to the user in the domain that are returned",
                  "title": "Count"
                }
              },
              "required": ["links", "count"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "List all links V2",
        "operationId": "listLinksV2",
        "description": "Lists all links. Please note, that if the user executing this method is not an admin, then only links created by the user will be listed. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#List-Links%20v2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetLinksRequest"
            }
          }
        ]
      }
    },
    "/api-proxy/ShowLinkDetails": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the link",
                        "title": "Id"
                      },
                      "url": {
                        "type": "string",
                        "description": "The full url of the link",
                        "title": "Url"
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of valid email addresses to which the link was sent.",
                        "title": "Recipients"
                      }
                    },
                    "required": ["id", "url", "recipients"]
                  },
                  "description": "An array containing the full json information for all links for your domain that this user can see within any specified ranges",
                  "title": "Links"
                },
                "path": {
                  "type": "string",
                  "description": "The absolute path of the target resource, either file or folder.",
                  "title": "Path"
                },
                "type": {
                  "type": "string",
                  "description": "The type of link, either file, folder, or upload",
                  "title": "Type"
                },
                "accessibility": {
                  "type": "string",
                  "description": "Who a link is accessible by, one of anyone, password, domain, or recipients.",
                  "title": "Accessibility"
                },
                "notify": {
                  "type": "boolean",
                  "description": "Boolean as to whether the link creator will be notified via email when link is accessed.",
                  "title": "Notify",
                  "enum": [true, false]
                },
                "link_to_current": {
                  "type": "boolean",
                  "description": "Boolean as to whether the link will always refer to the current version of file. Only applicable for file links.",
                  "title": "Link to current",
                  "enum": [true, false]
                },
                "expiry_date": {
                  "type": "string",
                  "description": "Date and time of the expiration of the link.  This field is only shown if the link is to expire by date",
                  "title": "Expiry date"
                },
                "creation_date": {
                  "type": "string",
                  "description": "Date and time of creation of the link",
                  "title": "Creation date"
                },
                "created_by": {
                  "type": "string",
                  "description": "Username of the user that created the link",
                  "title": "Created by"
                },
                "last_accessed": {
                  "type": "string",
                  "description": "Date and time of the last access of the link.  This field is only shown if the link has been accessed at least once",
                  "title": "Last accessed"
                }
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Show link details",
        "operationId": "showLinkDetails",
        "description": "View the details of a link. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Show-Link-Details",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "linkId": {
                  "type": "string",
                  "description": "LinkId",
                  "title": "Link Id"
                }
              },
              "required": ["linkId"]
            }
          }
        ]
      }
    },
    "/api-proxy/CreateLink": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the link",
                        "title": "Id"
                      },
                      "url": {
                        "type": "string",
                        "description": "The full url of the link",
                        "title": "Url"
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "An array of valid email addresses to which the link was sent.",
                        "title": "Recipients"
                      }
                    },
                    "required": ["id", "url", "recipients"]
                  },
                  "description": "An array containing the full json information for all links for your domain that this user can see within any specified ranges",
                  "title": "Links"
                },
                "path": {
                  "type": "string",
                  "description": "The absolute path of the target resource, either file or folder.",
                  "title": "Path"
                },
                "type": {
                  "type": "string",
                  "description": "The type of link, either file, folder, or upload",
                  "title": "Type"
                },
                "accessibility": {
                  "type": "string",
                  "description": "Who a link is accessible by, one of anyone, password, domain, or recipients.",
                  "title": "Accessibility"
                },
                "notify": {
                  "type": "boolean",
                  "description": "Boolean as to whether the link creator will be notified via email when link is accessed.",
                  "title": "Notify",
                  "enum": [true, false]
                },
                "link_to_current": {
                  "type": "boolean",
                  "description": "Boolean as to whether the link will always refer to the current version of file. Only applicable for file links.",
                  "title": "Link to current",
                  "enum": [true, false]
                },
                "expiry_date": {
                  "type": "string",
                  "description": "Date and time of the expiration of the link.  This field is only shown if the link is to expire by date",
                  "title": "Expiry date"
                },
                "creation_date": {
                  "type": "string",
                  "description": "Date and time of creation of the link",
                  "title": "Creation date"
                },
                "created_by": {
                  "type": "string",
                  "description": "Username of the user that created the link",
                  "title": "Created by"
                }
              },
              "required": ["links", "path", "type"]
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Create link",
        "operationId": "createLink",
        "description": "Create a link. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Create-a-Link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The absolute path of the target file or folder.",
                  "title": "Path",
                  "x-ms-dynamic-values": {
                    "parameters": {
                      "isFolder": false,
                      "fileFilter": [],
                      "dataset": null
                    },
                    "capability": "file-picker",
                    "value-path": "path"
                  },
                  "x-ms-dynamic-tree": {
                    "settings": {
                      "canSelectParentNodes": false,
                      "canSelectLeafNodes": true
                    },
                    "open": {
                      "operationId": "listRootFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path"
                    },
                    "browse": {
                      "operationId": "listFolder",
                      "itemValuePath": "path",
                      "itemTitlePath": "name",
                      "itemIsParent": "(is_folder eq true)",
                      "itemFullTitlePath": "path",
                      "parameters": {
                        "path": {
                          "selectedItemValuePath": "path"
                        }
                      }
                    }
                  }
                },
                "type": {
                  "type": "string",
                  "description": "This determines what type of link will be created.",
                  "title": "Type",
                  "enum": ["file", "folder", "upload"]
                },
                "accessibility": {
                  "type": "string",
                  "description": "Determines who a link is accessible by.",
                  "title": "Accessibility (set \"none\" for upload links or links when \"useDefaultSettings\" is true)",
                  "enum": ["anyone", "password", "domain", "recipients", "none"]
                },
                "useDefaultSettings": {
                  "type": "boolean",
                  "description": "Determines whether to use the default parameters for link creation.",
                  "title": "Use Default Settings",
                  "enum": [true, false]
                },
                "sendEmail": {
                  "type": "boolean",
                  "description": "If true is set, link will be sent via email by Egnyte.",
                  "title": "Send email",
                  "enum": [true, false]
                },
                "recipients": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List email addresses of recipients of the link. Only required if \"Send email\" is true.",
                  "title": "Recipients"
                },
                "message": {
                  "type": "string",
                  "description": "Personal message to be sent in link email.",
                  "title": "Message (Only applies if \"Send email\" is true.)"
                },
                "copyMe": {
                  "type": "boolean",
                  "description": "If true is set, a copy of the link message will be sent to the link creator.",
                  "title": "Copy me (Only applies if \"Send email\" is true)",
                  "enum": [true, false]
                },
                "notify": {
                  "type": "boolean",
                  "description": "If true is set, link creator will be notified via email when link is accessed.",
                  "title": "Notify",
                  "enum": [true, false]
                },
                "linkToCurrent": {
                  "type": "boolean",
                  "description": "If true is set, the link will always refer to current version of file.",
                  "title": "Link to current (Only applicable for file links.)",
                  "enum": [true, false]
                },
                "expiryDate": {
                  "type": "string",
                  "description": "Expiry date for the link. If specified, \"Expiry clicks\" cannot be set.",
                  "title": "Expiry date (e.g. 2023-12-31)"
                },
                "expiryClicks": {
                  "type": "number",
                  "description": "Number of clicks the link is valid for. If specified, \"Expiry date\" cannot be set",
                  "title": "Expiry clicks"
                },
                "addFileName": {
                  "type": "boolean",
                  "description": "If true then the filename will be appended to the end of the link.",
                  "title": "Add a file name (Only applies to file links, not folder links)",
                  "enum": [true, false]
                },
                "password": {
                  "type": "string",
                  "description": "When not specified, the system will generate a password automatically.",
                  "title": "Password (when \"accessibility\" parameter is set to \"password\")"
                },
                "protection": {
                  "type": "string",
                  "description": "If set to \"PREVIEW\", it will create a preview-only link.",
                  "title": "Protection",
                  "enum": ["PREVIEW", "NONE"]
                },
                "folderPerRecipient": {
                  "type": "boolean",
                  "description": "If true then each recipient's uploaded data will be put into a separate folder.",
                  "title": "Folder per recipient (Only applies to upload links.)",
                  "enum": [true, false]
                }
              },
              "required": ["path", "type", "accessibility"]
            }
          }
        ]
      }
    },
    "/api-proxy/DeleteLink": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "consumes": ["application/json"],
        "summary": "Delete link",
        "operationId": "deleteLink",
        "description": "Delete a link. https://developers.egnyte.com/docs/read/Egnyte_Link_API_Documentation#Delete-a-Link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "linkId": {
                  "type": "string",
                  "description": "LinkId",
                  "title": "Link Id"
                }
              },
              "required": ["linkId"]
            }
          }
        ]
      }
    },
    "/api-proxy/filepicker/listContents/": {
      "get": {
        "operationId": "listRootFolder",
        "consumes": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileSystemItem"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "listRootFolder",
          "revision": 1
        }
      }
    },
    "/api-proxy/filepicker/listContents{path}": {
      "get": {
        "operationId": "listFolder",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileSystemItem"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "listFolder",
          "revision": 1
        }
      }
    }
  },
  "definitions": {
    "FileInfoResponse": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string",
          "description": "Checksum value of the current version of the file used to determine file changes.",
          "title": "Checksum"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the file in bytes.",
          "title": "Size"
        },
        "path": {
          "type": "string",
          "description": "Full path of the file.",
          "title": "File Path"
        },
        "name": {
          "type": "string",
          "description": "Name of the file.",
          "title": "Name"
        },
        "locked": {
          "type": "boolean",
          "description": "Status of the lock on the file.",
          "title": "Is locked",
          "enum": [true, false]
        },
        "is_folder": {
          "type": "boolean",
          "description": "Whether the resource is a folder. True or False",
          "title": "Is folder",
          "enum": [true, false]
        },
        "entry_id": {
          "type": "string",
          "description": "The ID of the current version of the file.",
          "title": "Version ID"
        },
        "group_id": {
          "type": "string",
          "description": "The ID to reference the file as a whole.",
          "title": "File ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The ID of the parent folder requested.",
          "title": "Parent Folder ID"
        },
        "last_modified": {
          "type": "string",
          "description": "Last modified time of the current version of a file.",
          "title": "Last Modified"
        },
        "uploaded_by": {
          "type": "string",
          "description": "Username of the user that uploaded the version.",
          "title": "Uploaded by"
        },
        "uploaded": {
          "type": "integer",
          "format": "int32",
          "description": "Uploaded time of the current version of the file.",
          "title": "Uploaded timestamp"
        },
        "num_versions": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of versions associated with the specific file path.",
          "title": "Number of versions"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "is_folder": {
                "type": "boolean",
                "description": "Whether the resource is a folder. True or False",
                "title": "Is folder (version)",
                "enum": [true, false]
              },
              "entry_id": {
                "type": "string",
                "description": "The ID of the specific version of the file.",
                "title": "Version ID"
              },
              "checksum": {
                "type": "string",
                "description": "Checksum value of the version of the file used to determine file changes.",
                "title": "Checksum (version)"
              },
              "last_modified": {
                "type": "string",
                "description": "Last modified time of the specific version of a file.",
                "title": "Last Modified (version)"
              },
              "uploaded_by": {
                "type": "string",
                "description": "Username of the user that uploaded the version.",
                "title": "Uploaded by (version)"
              },
              "uploaded": {
                "type": "integer",
                "format": "int32",
                "description": "Uploaded time of the specific version of the file.",
                "title": "Uploaded timestamp (version)"
              },
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "Size of the file in bytes.",
                "title": "Size (version)"
              }
            }
          },
          "description": "Versions"
        }
      }
    },
    "UserInfoResponse": {
      "type": "object",
      "description": "User info",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "User ID",
          "description": "The user ID"
        },
        "userName": {
          "type": "string",
          "title": "Username",
          "description": "The user's username"
        },
        "externalId": {
          "type": "string",
          "title": "External ID",
          "description": "External ID"
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "User email"
        },
        "name": {
          "type": "object",
          "description": "User family and given name",
          "properties": {
            "familyName": {
              "type": "string",
              "title": "Family name",
              "description": "User family name (Last name)"
            },
            "givenName": {
              "type": "string",
              "title": "Given name",
              "description": "User given name (First name)"
            }
          }
        },
        "active": {
          "type": "boolean",
          "title": "Active",
          "description": "Is the user account active"
        },
        "createdDate": {
          "type": "string",
          "title": "Created date",
          "description": "The date user was created"
        },
        "lastModificationDate": {
          "type": "string",
          "title": "Last modification date",
          "description": "The last date user was modified"
        },
        "lastActiveDate": {
          "type": "string",
          "title": "Last active date",
          "description": "The last date user was active"
        },
        "locked": {
          "type": "boolean",
          "title": "Locked",
          "description": "User is locked"
        },
        "language": {
          "type": "string",
          "title": "Language",
          "enum": ["en-US", "fr-CA", "de-DE"],
          "description": "The \"language\" parameter is accepted only when Language Pack has been enabled for the domain."
        },
        "authType": {
          "type": "string",
          "title": "Auth type",
          "enum": ["ad", "sso", "egnyte"],
          "description": "The authentication type for the user."
        },
        "userType": {
          "type": "string",
          "title": "User type",
          "enum": ["admin", "power", "standard"],
          "description": "The type of the user."
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "The role assigned to the user. Only applicable for Power Users."
        },
        "idpUserId": {
          "type": "string",
          "title": "IDP user ID",
          "description": "Identity provider user ID"
        },
        "isServiceAccount": {
          "type": "boolean",
          "title": "Is service account",
          "description": "Is the account used as service account"
        },
        "deleteOnExpiry": {
          "type": "string",
          "title": "Delete on expiry",
          "description": "Will the account be deleted after it expires"
        },
        "emailChangePending": {
          "type": "boolean",
          "title": "Email change pending",
          "description": "Is the user email change pending"
        },
        "expiryDate": {
          "type": "string",
          "title": "Expiry date",
          "description": "The expiration of the account"
        },
        "userPrincipalName": {
          "type": "string",
          "title": "User principal name"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "title": "Display name",
                "description": "The name of the group"
              },
              "value": {
                "type": "string",
                "title": "Group ID",
                "description": "The ID of the group"
              }
            }
          }
        }
      }
    },
    "FolderInfoResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the folder.",
          "title": "Name"
        },
        "lastModified": {
          "type": "integer",
          "format": "int32",
          "description": "The latest time that any file in the folder (but not within subfolders) has been modified.",
          "title": "Last Modified"
        },
        "uploaded": {
          "type": "integer",
          "format": "int32",
          "description": "Time when the folder has been uploaded or created.",
          "title": "Uploaded Timestamp"
        },
        "path": {
          "type": "string",
          "description": "Full path of the folder.",
          "title": "Folder Path"
        },
        "folder_id": {
          "type": "string",
          "description": "The unique ID of the folder.",
          "title": "Folder ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The id of the parent folder.",
          "title": "Parent Folder ID"
        },
        "total_count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of items actually available to return.",
          "title": "Subitems Count"
        },
        "is_folder": {
          "type": "boolean",
          "description": "Whether the resource is a folder. True or False",
          "title": "Is folder",
          "enum": [true, false]
        },
        "public_links": {
          "type": "string",
          "description": "The folder option setting as to how \"Allow public inks from this folder for\" was set.",
          "title": "Possible Public Links"
        },
        "allow_links": {
          "type": "boolean",
          "description": "Is shareable? T or F",
          "title": "Is shareable",
          "enum": [true, false]
        },
        "restrict_move_delete": {
          "type": "boolean",
          "description": "Can be deleted or moved? T or F",
          "title": "Can be deleted or moved",
          "enum": [true, false]
        },
        "folders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the folder.",
                "title": "Name (subfolder)"
              },
              "lastModified": {
                "type": "integer",
                "format": "int32",
                "description": "The latest time that any file in the folder (but not within subfolders) has been modified.",
                "title": "Last Modified (subfolder)"
              },
              "uploaded": {
                "type": "integer",
                "format": "int32",
                "description": "Time when the folder has been uploaded or created.",
                "title": "Uploaded Timestamp (subfolder)"
              },
              "path": {
                "type": "string",
                "description": " The full path of the folder as requested.",
                "title": "Path (subfolder)"
              },
              "folder_id": {
                "type": "string",
                "description": "The ID of the folder requested.",
                "title": "ID (subfolder)"
              },
              "is_folder": {
                "type": "boolean",
                "description": "Whether the resource is a folder. True or False",
                "title": "Is folder (subfolder)",
                "enum": [true, false]
              },
              "parent_id": {
                "type": "string",
                "description": " The id of the parent folder.",
                "title": "Parent Folder ID (subfolder)"
              }
            }
          },
          "description": "Folders"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "checksum": {
                "type": "string",
                "description": "Checksum value of the current version of the file used to determine file changes.",
                "title": "Checksum (file)"
              },
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "Size of the file in bytes.",
                "title": "Size (file)"
              },
              "path": {
                "type": "string",
                "description": "Full path of the file.",
                "title": "Path (file)"
              },
              "name": {
                "type": "string",
                "description": "Name of the file.",
                "title": "Name (file)"
              },
              "locked": {
                "type": "boolean",
                "description": "Status of the lock on the file.",
                "title": "Is locked (file)",
                "enum": [true, false]
              },
              "is_folder": {
                "type": "boolean",
                "description": "Whether the resource is a folder. True or False",
                "title": "Is folder (file)",
                "enum": [true, false]
              },
              "entry_id": {
                "type": "string",
                "description": "The ID of the specific version of the file.",
                "title": "Version ID (file)"
              },
              "group_id": {
                "type": "string",
                "description": "The ID to reference the file as a whole.",
                "title": "ID (file)"
              },
              "parent_id": {
                "type": "string",
                "description": "The ID of the parent folder.",
                "title": "Parent Folder ID (file)"
              },
              "last_modified": {
                "type": "string",
                "description": "Last modified time of the current version of a file.",
                "title": "Last Modified (file)"
              },
              "uploaded_by": {
                "type": "string",
                "description": "Username of the user that uploaded the version.",
                "title": "Uploaded by (file)"
              },
              "uploaded": {
                "type": "integer",
                "format": "int32",
                "description": "Uploaded time of the current version of the file.",
                "title": "Uploaded Timestamp (file)"
              },
              "num_versions": {
                "type": "integer",
                "format": "int32",
                "description": "The total number of versions associated with the specific file path.",
                "title": "Versions Count (file)"
              }
            }
          },
          "description": "Files"
        }
      }
    },
    "FileSystemItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "is_folder": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NamespaceItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Namespace name"
        },
        "scope": {
          "type": "string",
          "title": "Namespace scope",
          "enum": ["public", "protected", "private"]
        },
        "keys": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Specifies the data type for a key"
              },
              "displayName": {
                "type": "string",
                "description": "The name to identify the field in the UI"
              },
              "helpText": {
                "type": "string",
                "description": "A tooltip description for the metadata field"
              },
              "priority": {
                "type": "number",
                "description": "Specifies priority for the key (keys with the higher priority will be displayed first"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "For a key of enum type, specifies the enumerated values"
              }
            },
            "required": ["type"]
          }
        },
        "displayName": {
          "type": "string",
          "description": "The name to identify the namespace in the UI"
        },
        "priority": {
          "type": "number",
          "description": "Specifies the priority (order) for the keys. The keys will be displayed in accordance with their priorities in descending order (keys with higher priority will be displayed first)"
        },
        "inheritable": {
          "type": "boolean",
          "enum": [true, false]
        },
        "schemaSystemGenerated": {
          "type": "boolean",
          "enum": [true, false]
        },
        "metadataScopeType": {
          "type": "string",
          "enum": ["GLOBAL", "FOLDER_SCOPE"]
        },
        "editable": {
          "type": "boolean",
          "enum": [true, false]
        }
      }
    },
    "ProjectItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Item Id",
          "title": "Id"
        },
        "rootFolderId": {
          "type": "string",
          "description": "Root Folder Id",
          "title": "Root Folder Id"
        },
        "name": {
          "type": "string",
          "description": "The name of the project",
          "title": "Name"
        },
        "projectId": {
          "type": "string",
          "description": "ID of the project",
          "title": "Project Id"
        },
        "customerName": {
          "type": "string",
          "description": "The customer associated with the project",
          "title": "Customer Name"
        },
        "description": {
          "type": "string",
          "description": "Folder description",
          "title": "Description"
        },
        "location": {
          "$ref": "#/definitions/ProjectLocationItem"
        },
        "status": {
          "type": "string",
          "description": "Status of the project",
          "title": "Status"
        },
        "createdBy": {
          "type": "number",
          "description": "Created By",
          "title": "Created By"
        },
        "lastUpdatedBy": {
          "type": "number",
          "description": "Last Updated By",
          "title": "Last Updated By"
        },
        "creationTime": {
          "type": "string",
          "description": "Creation Time",
          "title": "Creation Time"
        },
        "lastModifiedTime": {
          "type": "string",
          "description": "Last Modified Time",
          "title": "Last Modified Time"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the project.",
          "title": "Start Date"
        },
        "completionDate": {
          "type": "string",
          "description": "The completion date for the project.",
          "title": "Completion Date"
        }
      },
      "required": ["id", "rootFolderId", "status"]
    },
    "ProjectLocationItem": {
      "type": "object",
      "properties": {
        "streetAddress1": {
          "type": "string",
          "description": "First line of the street address",
          "title": "Street Address 1"
        },
        "streetAddress2": {
          "type": "string",
          "description": "Second line of the street address",
          "title": "Street Address 2"
        },
        "city": {
          "type": "string",
          "description": "City",
          "title": "City"
        },
        "state": {
          "type": "string",
          "description": "State or Province",
          "title": "State or Province"
        },
        "country": {
          "type": "string",
          "description": "Country",
          "title": "Country"
        },
        "postalCode": {
          "type": "string",
          "description": "Zip code or postal code",
          "title": "Zip code or postal code"
        }
      }
    },
    "GetLinksRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "List links to a file or folder specified by its full path.",
          "title": "Path",
          "x-ms-dynamic-values": {
            "parameters": {
              "isFolder": false,
              "fileFilter": [],
              "dataset": null
            },
            "capability": "file-picker",
            "value-path": "path"
          },
          "x-ms-dynamic-tree": {
            "settings": {
              "canSelectParentNodes": false,
              "canSelectLeafNodes": true
            },
            "open": {
              "operationId": "listRootFolder",
              "itemValuePath": "path",
              "itemTitlePath": "name",
              "itemIsParent": "(is_folder eq true)",
              "itemFullTitlePath": "path"
            },
            "browse": {
              "operationId": "listFolder",
              "itemValuePath": "path",
              "itemTitlePath": "name",
              "itemIsParent": "(is_folder eq true)",
              "itemFullTitlePath": "path",
              "parameters": {
                "path": {
                  "selectedItemValuePath": "path"
                }
              }
            }
          }
        },
        "username": {
          "type": "string",
          "description": "List links created by this user.",
          "title": "Username"
        },
        "createdBefore": {
          "type": "string",
          "description": "List links created before a given date (ISO-8601 or YYYY-MM-DD).",
          "title": "Created before"
        },
        "createdAfter": {
          "type": "string",
          "description": "List links created after a given date (ISO-8601 or YYYY-MM-DD).",
          "title": "Created after"
        },
        "type": {
          "type": "string",
          "description": "Filter to \"file\" or \"folder\" items only.",
          "title": "Type",
          "enum": ["file", "folder"]
        },
        "accessibility": {
          "type": "string",
          "description": "Select accessibility type",
          "title": "Accessibility",
          "enum": ["anyone", "password", "domain", "recipients"]
        },
        "offset": {
          "type": "string",
          "description": "The 0-based index of the initial record being requested.",
          "title": "Offset"
        },
        "count": {
          "type": "string",
          "description": "Limit number of entries per page.",
          "title": "Count (By default 500 entries is returned)"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://us-partner-integrations.egnyte.com/ms-flow/oauth/code",
      "tokenUrl": "https://us-partner-integrations.egnyte.com/ms-flow/oauth/token",
      "scopes": {
        "Egnyte.webhooks": "Create webhooks in Egnyte",
        "Egnyte.filesystem": "Access the file system in Egnyte",
        "Egnyte.group": "Manage groups in Egnyte",
        "Egnyte.projectfolders": "Project Folders",
        "Egnyte.user": "Manage users in Egnyte"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": [],
  "x-ms-capabilities": {
    "file-picker": {
      "open": {
        "operationId": "listRootFolder"
      },
      "browse": {
        "operationId": "listFolder",
        "parameters": {
          "path": {
            "value-property": "path"
          }
        }
      },
      "value-title": "name",
      "value-folder-property": "is_folder",
      "value-media-property": "mediaType"
    }
  }
}
