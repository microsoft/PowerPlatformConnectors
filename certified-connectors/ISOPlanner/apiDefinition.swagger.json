{
  "swagger": "2.0",
  "info": {
    "title": "ISOPlanner",
    "description": "Connect to the ISOPlanner ecosystem.",
    "version": "1.1",
    "contact": {
      "name": "ISOPlanner Support",
      "url": "https://isoplanner.app/support",
      "email": "support@isoplanner.app"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://isoplanner.app/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://isoplanner.app/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ],
  "host": "svc.isoplanner.app",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/events/{EventId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Delete an event",
        "operationId": "DeleteEvent",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Delete an event."
      }
    },
    "/api/v1/tasks/{TaskId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Delete a task",
        "operationId": "DeleteTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the task.",
            "x-ms-summary": "Task Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Delete a task."
      }
    },
    "/api/v1/kpis/data/context/types": {
      "get": {
        "responses": {
          "200": {
            "description": "List of KPI Entity Types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EntityType": {
                    "type": "integer"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of Entity Types",
        "description": "Get a list of Entity Types for the KPI data context.",
        "operationId": "FetchAvailableKPIEntityTypes",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/kpis/data/context": {
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/kpidatacontext"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Add context to a KPI data point",
        "description": "Add context to a KPI data point.",
        "operationId": "CreateKPIDataContext",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kpidatacontext"
            },
            "description": "The body of the request.",
            "x-ms-summary": "Body",
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/api/v1/kpis/data/evidence": {
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/kpievidenceresponse"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Submit evidence to a KPI",
        "description": "Check the evidence and add extracted data to a KPI.",
        "operationId": "SubmitKPIEvidence",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIEvidence",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kpievidence"
            },
            "description": "The body of the request.",
            "x-ms-summary": "Body",
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/api/v1/library/content/{libraryItemId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/libraryitem"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a Library item",
        "description": "Get the details of the specified Library item.",
        "operationId": "GetLibraryItem",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "libraryItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Library Item Id",
            "description": "The Id of the Library item.",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/library/content/filter/url": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/libraryitem"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a Library item by Url",
        "description": "Get the details of the specified Library item.",
        "operationId": "GetLibraryItemByUrl",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Library Item Url",
            "description": "The Url of the Library item."
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/kpis/data": {
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/kpidata"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create a KPI data point",
        "description": "Add data to the specified KPI.",
        "operationId": "CreateKPIData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kpidataForCreate"
            },
            "description": "The body of the request.",
            "x-ms-summary": "Body",
            "x-ms-visibility": "important"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "$ref": "#/responses/kpidata"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Update a KPI data point",
        "description": "Update data for the specified KPI.",
        "operationId": "UpdateKPIData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kpidata"
            },
            "description": "The body of the request.",
            "x-ms-summary": "Body",
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/api/v1/kpis/{KPIId}/data/{KPIDataId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/kpidata"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a KPI data point",
        "description": "Get data for the specified KPI.",
        "operationId": "GetKPIData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the KPI.",
            "x-ms-summary": "KPI Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "FetchAvailableKPIs",
              "value-path": "KPIId",
              "value-title": "Name",
              "parameters": {
                "orgunitid": {
                  "parameter": "orgunitid"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "FetchAvailableKPIs",
              "itemValuePath": "KPIId",
              "itemTitlePath": "Name",
              "parameters": {
                "orgunitid": {
                  "parameterReference": "orgunitid"
                }
              }
            }
          },
          {
            "name": "KPIDataId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Data Id of the KPI.",
            "x-ms-summary": "KPI Data Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Delete a KPI data point",
        "description": "Delete data for the specified KPI.",
        "operationId": "DeleteKPIData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the KPI.",
            "x-ms-summary": "KPI Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "FetchAvailableKPIs",
              "value-path": "KPIId",
              "value-title": "Name",
              "parameters": {
                "orgunitid": {
                  "parameter": "orgunitid"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "FetchAvailableKPIs",
              "itemValuePath": "KPIId",
              "itemTitlePath": "Name",
              "parameters": {
                "orgunitid": {
                  "parameterReference": "orgunitid"
                }
              }
            }
          },
          {
            "name": "KPIDataId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Data Id of the KPI.",
            "x-ms-summary": "KPI Data Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/v1/kpis/{KPIId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/kpi"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a KPI",
        "description": "Get the details of a KPI.",
        "operationId": "GetKPIForId",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "KPIId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the KPI.",
            "x-ms-summary": "KPI Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "FetchAvailableKPIs",
              "value-path": "KPIId",
              "value-title": "Name",
              "parameters": {
                "orgunitid": {
                  "parameter": "orgunitid"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "FetchAvailableKPIs",
              "itemValuePath": "KPIId",
              "itemTitlePath": "Name",
              "parameters": {
                "orgunitid": {
                  "parameterReference": "orgunitid"
                }
              }
            }
          }
        ]
      }
    },
    "/api/v1/kpis": {
      "get": {
        "responses": {
          "200": {
            "description": "List of KPI",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "KPIId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of KPI's",
        "description": "Get a list of available KPI's and details.",
        "operationId": "FetchAvailableKPIs",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/users/orgunits": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Organizational Units",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "OrgUnitId": {
                    "type": "string"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of available organizational units for the user",
        "operationId": "FetchAvailableOrgUnits",
        "description": "Get a list of available organizational units for the user.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/v1/hooks/triggers": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Event Types",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "EventType": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of available event types",
        "operationId": "FetchAvailableEventTypes",
        "description": "Get a list of available event types.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/events/{EventId}/subtasks": {
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/task"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create a subtask for an event",
        "operationId": "CreateEventSubTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Task",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskForCreate"
            },
            "description": "The body of the task.",
            "x-ms-summary": "Task body",
            "x-ms-visibility": "important"
          }
        ],
        "description": "Create a subtask for an event."
      },
      "put": {
        "responses": {
          "201": {
            "$ref": "#/responses/task"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Update a subtask for an event",
        "operationId": "UpdateEventSubTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Task",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskForUpdate"
            },
            "description": "The body of the task.",
            "x-ms-summary": "Task body",
            "x-ms-visibility": "important"
          }
        ],
        "description": "Update a subtask for an event."
      }
    },
    "/api/v1/events/{EventId}/subtasks/{TaskId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/task"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a subtask of an event based on Id",
        "operationId": "GetEventSubTaskForId",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the task.",
            "x-ms-summary": "Task Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Get a subtask of an event based on Id."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Delete a subtask of an event",
        "operationId": "DeleteEventSubTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the subtask.",
            "x-ms-summary": "Task Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Delete a subtask of an event."
      }
    },
    "/api/v1/events/{EventId}/subtasks/name/{TaskName}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/task"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a subtask of an event based on Name",
        "operationId": "GetEventSubTaskForName",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "TaskName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Name of the task.",
            "x-ms-summary": "Task Name",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Get a subtask of an event based on Name."
      }
    },
    "/api/v1/library/content/{LibraryItemId}/task/{TaskId}": {
      "post": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Add a library item to a task",
        "operationId": "AddLibraryItemToTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "LibraryItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the library item.",
            "x-ms-summary": "Library Item Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the task.",
            "x-ms-summary": "Task Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Add a library item to a task."
      }
    },
    "/api/v1/library/content/{LibraryItemId}/event/{EventId}": {
      "post": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Add a library item to an event",
        "operationId": "AddLibraryItemToEvent",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "LibraryItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the library item.",
            "x-ms-summary": "Library Item Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Add a library item to an event."
      }
    },
    "/api/v1/events/{EventId}/approval": {
      "put": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Update an event from approval",
        "operationId": "UpdateEventFromApproval",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "EventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The Id of the event.",
            "x-ms-summary": "Event Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Final",
            "in": "query",
            "required": true,
            "default": true,
            "type": "boolean",
            "description": "Indicates whether this is the final result for this event.",
            "x-ms-summary": "Final Result",
            "x-ms-visibility": "important"
          },
          {
            "name": "Result",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "The result body of the approval.",
            "x-ms-visibility": "important"
          }
        ],
        "description": "Update an event from an approval result."
      }
    },
    "/api/v1/events": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/events"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get events",
        "description": "Get all events or filtered events.",
        "operationId": "GetEvents",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter",
            "description": "Filter options for the events."
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/event"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create an event",
        "operationId": "CreateEvent",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "title": "Name",
                  "type": "string",
                  "description": "Name of the event."
                },
                "externalId": {
                  "title": "External Id",
                  "type": "string",
                  "description": "External Id of the event."
                },
                "templateId": {
                  "title": "Template",
                  "type": "integer",
                  "description": "The Id of the template.",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableEventTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableEventTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "firstLibraryItemId": {
                  "title": "Library Item Id",
                  "type": "integer",
                  "description": "One library item Id to link to this event."
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "name"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "description": "Create a new event."
      },
      "put": {
        "responses": {
          "200": {
            "$ref": "#/responses/event"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Update an event",
        "operationId": "UpdateEvent",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventForUpdate"
            }
          }
        ],
        "description": "Update an event"
      }
    },
    "/api/v1/events/approval": {
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/event"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create an event for an approval",
        "operationId": "CreateEventApproval",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "title": "Name",
                  "type": "string",
                  "description": "The name of the event."
                },
                "Type": {
                  "title": "Type",
                  "type": "string",
                  "enum": [
                    "Latest approval",
                    "Template",
                    "Fixed users"
                  ]
                },
                "Users": {
                  "title": "Fixed users",
                  "type": "string",
                  "description": "A comma seperated list of email addresses."
                },
                "TemplateId": {
                  "title": "Template",
                  "type": "integer",
                  "description": "The Id of the template.",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableApprovalTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableApprovalTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "LibraryItemId": {
                  "title": "Library Item Id",
                  "type": "integer",
                  "description": "The Id of the Library item to approve."
                },
                "Comment": {
                  "title": "Comment",
                  "type": "string",
                  "description": "The comment of the creator."
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "Name"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "description": "Create a new event."
      }
    },
    "/api/v1/tasks": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/tasks"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get tasks",
        "description": "Get all tasks or filtered tasks.",
        "operationId": "GetTasks",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter",
            "description": "Filter options for the tasks."
          }
        ],
        "x-ms-visibility": "important"
      },
      "post": {
        "responses": {
          "201": {
            "$ref": "#/responses/task"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create a task",
        "operationId": "CreateTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "title": "Name",
                  "type": "string",
                  "description": "The name of the task."
                },
                "externalId": {
                  "title": "ExternalId",
                  "type": "string",
                  "description": "The External Id of the task."
                },
                "templateId": {
                  "title": "Template",
                  "type": "integer",
                  "description": "The Id of the Template.",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "name"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "description": "Create a new task."
      },
      "put": {
        "responses": {
          "200": {
            "$ref": "#/responses/task"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Update a task",
        "operationId": "UpdateTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskForUpdate"
            }
          }
        ],
        "description": "Update a task."
      }
    },
    "/api/v1/library/content": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/responses/libraryitem"
          },
          "201": {
            "$ref": "#/responses/libraryitem"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create or Update Library item",
        "description": "Create or Update Library item.",
        "operationId": "CreateUpdateLibraryItem",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "libraryCategoryId": {
                  "title": "Category Id",
                  "type": "integer",
                  "description": "Id of the category in the ISOPlanner library.",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchLibraryCategories",
                    "value-path": "LibraryCategoryId",
                    "value-title": "LibraryCategoryName",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchLibraryCategories",
                    "itemValuePath": "LibraryCategoryId",
                    "itemTitlePath": "LibraryCategoryName",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "libraryItemSPItemId": {
                  "title": "SharePoint Item Id",
                  "type": "string",
                  "description": "Item Id of a generic list item, document or page."
                },
                "libraryItemId": {
                  "title": "Library Item Id",
                  "type": "integer",
                  "description": "Id of the library item in ISOPlanner.",
                  "x-ms-visibility": "important"
                },
                "libraryItemUrl": {
                  "type": "string",
                  "title": "Web URL",
                  "description": "URL that points to the item."
                },
                "libraryItemName": {
                  "type": "string",
                  "title": "Name",
                  "description": "Name of the library item in ISOPlanner."
                },
                "libraryItemOwner": {
                  "type": "object",
                  "properties": {
                    "UserId": {
                      "type": "string",
                      "title": "Owner Id",
                      "description": "Id of the owner of this item.",
                      "x-ms-dynamic-values": {
                        "operationId": "FetchAvailableUsers",
                        "value-path": "UserId",
                        "value-title": "Name",
                        "parameters": {
                          "orgunitid": {
                            "parameter": "orgunitid"
                          }
                        }
                      },
                      "x-ms-dynamic-list": {
                        "operationId": "FetchAvailableUsers",
                        "itemValuePath": "UserId",
                        "itemTitlePath": "Name",
                        "parameters": {
                          "orgunitid": {
                            "parameterReference": "orgunitid"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/tasks/forms": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Forms",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "FormId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of available forms",
        "operationId": "FetchAvailableForms",
        "description": "Get a list of available forms.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "string"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of available users",
        "operationId": "FetchAvailableUsers",
        "description": "Get a list of available users.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/tasks/templates/1": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Task objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a all templates",
        "operationId": "FetchAllTemplates",
        "description": "Get a list of all task templates and event templates.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/tasks/templates/2": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Task objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a all task templates",
        "operationId": "FetchAvailableTaskTemplates",
        "description": "Get a list of all task templates.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/tasks/templates/3": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Task objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of workflow templates",
        "operationId": "FetchAvailableEventTemplates",
        "description": "Get all available workflow templates.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/tasks/templates/4": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Task objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of approval templates",
        "operationId": "FetchAvailableApprovalTemplates",
        "description": "Get a list of all available approval templates.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/tasks/templates/5": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Task objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TaskId": {
                    "type": "integer"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get a list of monitoring templates",
        "operationId": "FetchAvailableMonitoringTemplates",
        "description": "Get a list of all available monitoring templates.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/library/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "List of Library Category objects",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "LibraryCategoryId": {
                    "type": "integer"
                  },
                  "LibraryCategoryName": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Get categories in the Library",
        "operationId": "FetchLibraryCategories",
        "description": "Get a list of categories in the Library.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "orgunitid",
            "in": "header",
            "type": "string",
            "x-ms-summmary": "Org Unit Id"
          }
        ]
      }
    },
    "/api/v1/hooks": {
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "Create a webhook",
        "description": "Create a webhook in ISOPlanner",
        "operationId": "CreateWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "The type of event.",
                  "title": "Event Type",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableEventTypes",
                    "value-path": "EventType",
                    "value-title": "Description",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableEventTypes",
                    "itemValuePath": "EventType",
                    "itemTitlePath": "Description",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  },
                  "x-ms-visibility": "important"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "The entity Id for which the webhook must run.",
                  "title": "Event Type Id",
                  "x-ms-visibility": "important"
                },
                "Url": {
                  "type": "string",
                  "description": "Url that ISOPlanner will call (POST).",
                  "title": "Url",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/event-created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/event"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When an event is created",
        "description": "When an event is created based on the specified template.",
        "operationId": "EventCreated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, create an event for this template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "event-created",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the event template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableEventTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableEventTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/task-created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/task"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a task is created",
        "description": "When a task is created based on the specified template.",
        "operationId": "TaskCreated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, create a task for this template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "task-created",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the task template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/monitoringtask-started": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/task"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When an annual plan task is started",
        "description": "When a task in the annual plan is ready to start according to schedule.",
        "operationId": "MonitoringTaskCreated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, create an annual plan task and wait for a task in the schedule to start or click the test button.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "monitoringtask-started",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the annual plan task.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableMonitoringTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableMonitoringTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/event-updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/event"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When an event is updated",
        "description": "When an event with the selected template is updated.",
        "operationId": "EventUpdated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, update a task that has been created for the selected template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "event-updated",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the event template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableEventTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableEventTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/task-updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/task"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a task is updated",
        "description": "When a task with the selected template is updated.",
        "operationId": "TaskUpdated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, update a task that has been created for the selected template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "task-updated",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the task template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/event-deleted": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/event"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When an event is deleted",
        "description": "When an event is deleted based on the specified template.",
        "operationId": "EventDeleted",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, delete an event for this template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "event-deleted",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the event template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableEventTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableEventTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/task-deleted": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/task"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a task is deleted",
        "description": "When a task is deleted based on the specified template.",
        "operationId": "TaskDeleted",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, delete a task for this template.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "task-deleted",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "EventTypeId": {
                  "type": "integer",
                  "description": "Choose the task template.",
                  "title": "Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "value-path": "TaskId",
                    "value-title": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameter": "orgunitid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "FetchAvailableTaskTemplates",
                    "itemValuePath": "TaskId",
                    "itemTitlePath": "Name",
                    "parameters": {
                      "orgunitid": {
                        "parameterReference": "orgunitid"
                      }
                    }
                  }
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType",
                "EventTypeId"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/risk-created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/risk"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a risk is created",
        "description": "When a risk is created.",
        "operationId": "RiskCreated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, create a risk.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "risk-created",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/risk-updated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/risk"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a risk is updated",
        "description": "When a risk is updated.",
        "operationId": "RiskUpdated",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, update a risk.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "risk-updated",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/triggers/risk-deleted": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "TraceId": {
              "type": "string",
              "description": "Unique Id for this trigger request.",
              "title": "TraceId"
            },
            "Secret": {
              "type": "string",
              "description": "Secret to protect from unauthorized activation.",
              "title": "Secret"
            },
            "Payload": {
              "$ref": "#/definitions/risk"
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Webhook created"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "summary": "When a risk is deleted",
        "description": "When a risk is deleted.",
        "operationId": "RiskDeleted",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, delete a risk.",
        "parameters": [
          {
            "$ref": "#/parameters/OrgUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EventType": {
                  "type": "string",
                  "description": "Event",
                  "title": "",
                  "default": "risk-deleted",
                  "x-ms-visibility": "internal"
                },
                "WorkflowName": {
                  "type": "string",
                  "description": "The name of the workflow shown in ISOPlanner.",
                  "title": "Workflow Name",
                  "x-ms-visibility": "important"
                },
                "Secret": {
                  "type": "string",
                  "description": "The secret to protect from unauthorized activation.",
                  "title": "Secret",
                  "x-ms-visibility": "important"
                },
                "Url": {
                  "type": "string",
                  "description": "The notification Url.",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "default": "test"
                }
              },
              "required": [
                "Url",
                "EventType"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/api/v1/hooks/orgunit/{OrgUnitId}/{WebhookId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Webhook deleted"
          },
          "401": {
            "$ref": "#/responses/unauthorized"
          },
          "403": {
            "$ref": "#/responses/forbidden"
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "500": {
            "$ref": "#/responses/internalServerError"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        },
        "description": "Deletes a webhook.",
        "summary": "Delete as webhook",
        "operationId": "DeleteTrigger",
        "parameters": [
          {
            "name": "OrgUnitId",
            "in": "path",
            "description": "The Id of the Org Unit.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "WebhookId",
            "in": "path",
            "description": "The Id of the webhook.",
            "required": true,
            "type": "integer",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "internal"
      }
    }
  },
  "parameters": {
    "OrgUnitId": {
      "name": "orgunitid",
      "in": "header",
      "type": "string",
      "required": true,
      "description": "The Organizational Unit Id.",
      "x-ms-summary": "Org Unit Id",
      "x-ms-visibility": "important",
      "x-ms-dynamic-values": {
        "operationId": "FetchAvailableOrgUnits",
        "value-path": "OrgUnitId",
        "value-title": "Name"
      }
    }
  },
  "responses": {
    "unauthorized": {
      "description": "Unauthorized"
    },
    "forbidden": {
      "description": "Forbidden"
    },
    "notFound": {
      "description": "Not Found"
    },
    "noContent": {
      "description": "No Content"
    },
    "internalServerError": {
      "description": "Internal server error. Unknown error"
    },
    "default": {
      "description": "Operation failed. Unknown error"
    },
    "libraryitem": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/libraryitem"
      }
    },
    "event": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/event"
      }
    },
    "events": {
      "description": "ok",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/event"
        }
      }
    },
    "task": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/task"
      }
    },
    "tasks": {
      "description": "ok",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/task"
        }
      }
    },
    "kpi": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/kpi"
      }
    },
    "kpidata": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/kpidata"
      }
    },
    "kpidatacontext": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/kpidatacontext"
      }
    },
    "kpievidenceresponse": {
      "description": "ok",
      "schema": {
        "$ref": "#/definitions/kpievidenceresponse"
      }
    }
  },
  "definitions": {
    "kpievidence": {
      "type": "object",
      "properties": {
        "KPIId": {
          "type": "integer",
          "title": "KPI Id",
          "description": "The Id of the KPI.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableKPIs",
            "value-path": "KPIId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableKPIs",
            "itemValuePath": "KPIId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Evidence": {
          "type": "string",
          "description": "The evidence object in JSON format.",
          "title": "Evidence"
        },
        "TaskId": {
          "type": "integer",
          "description": "The Id of the task.",
          "title": "Task Id"
        },
        "Created": {
          "type": "string",
          "format": "date-time",
          "title": "Created",
          "description": "When the data point is created."
        },
        "CreatedBy": {
          "type": "string",
          "title": "CreatedBy",
          "description": "Name or email address of the user who created the data point."
        },
        "CreatedById": {
          "type": "string",
          "title": "CreatedById",
          "description": "Id of the user who created the data point.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "ResultComment": {
          "type": "string",
          "description": "The comment for the new KPI data point if accepted.",
          "title": "Comment"
        }
      },
      "required": [
        "KPIId",
        "Evidence"
      ]
    },
    "kpievidenceresponse": {
      "type": "object",
      "properties": {
        "Accepted": {
          "type": "boolean",
          "description": "Whether the evidence is accepted as valid or not.",
          "title": "Accepted"
        },
        "ErrorCode": {
          "type": "string",
          "description": "Error code for the reason not accepted.",
          "title": "Error Code"
        },
        "ErrorMsg": {
          "type": "string",
          "description": "Error message for the reason not accepted.",
          "title": "Error Message"
        },
        "ResultNumber": {
          "type": "number",
          "title": "Value (Number)",
          "description": "The value of the KPI for type Number."
        },
        "ResultText": {
          "type": "string",
          "title": "Value (Text)",
          "description": "The value of the KPI for type Text."
        }
      }
    },
    "taskForCreate": {
      "type": "object",
      "properties": {
        "ExternalId": {
          "type": "string",
          "title": "Task External Id",
          "description": "The External Id of the task."
        },
        "Name": {
          "type": "string",
          "description": "The name of the task.",
          "title": "Name"
        },
        "Description": {
          "type": "string",
          "description": "The description of the task.",
          "title": "Description"
        },
        "FormId": {
          "type": "integer",
          "description": "The form Id of the task.",
          "title": "Form Id",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableForms",
            "value-path": "FormId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableForms",
            "itemValuePath": "FormId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Status": {
          "type": "string",
          "description": "The status of the task.",
          "title": "Status",
          "enum": [
            "Request",
            "Accepted",
            "InProgress",
            "Completed",
            "Rejected"
          ]
        },
        "AssigneeId": {
          "type": "string",
          "description": "The user Id to which the task is assigned.",
          "title": "Assignee Id",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start date and time of the task.",
          "title": "Start Date Time"
        },
        "EndDateTime": {
          "type": "string",
          "description": "The end date and time of the task.",
          "format": "date-time",
          "title": "End Date Time"
        },
        "Deadline": {
          "type": "string",
          "description": "The deadline of the task.",
          "format": "date-time",
          "title": "Deadline"
        },
        "Hidden": {
          "type": "boolean",
          "description": "Whether the task is hidden in user views.",
          "title": "Hidden"
        }
      },
      "required": [
        "Name"
      ]
    },
    "taskForUpdate": {
      "type": "object",
      "properties": {
        "TaskId": {
          "type": "integer",
          "title": "Task Id",
          "description": "The Id of the task."
        },
        "ExternalId": {
          "type": "string",
          "title": "Task External Id",
          "description": "The External Id of the task."
        },
        "Name": {
          "type": "string",
          "description": "The name of the task.",
          "title": "Name"
        },
        "Description": {
          "type": "string",
          "description": "The description of the task.",
          "title": "Description"
        },
        "FormId": {
          "type": "integer",
          "description": "The form Id of the task.",
          "title": "Form Id",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableForms",
            "value-path": "FormId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableForms",
            "itemValuePath": "FormId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Status": {
          "type": "string",
          "description": "The status of the task.",
          "title": "Status",
          "enum": [
            "Request",
            "Accepted",
            "InProgress",
            "Completed",
            "Rejected"
          ]
        },
        "AssigneeId": {
          "type": "string",
          "description": "The user Id to which the task is assigned.",
          "title": "Assignee Id",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start date and time of the task.",
          "title": "Start Date Time"
        },
        "EndDateTime": {
          "type": "string",
          "description": "The end date and time of the task.",
          "format": "date-time",
          "title": "End Date Time"
        },
        "Deadline": {
          "type": "string",
          "description": "The deadline of the task.",
          "format": "date-time",
          "title": "Deadline"
        },
        "Hidden": {
          "type": "boolean",
          "description": "Whether the task is hidden in user views.",
          "title": "Hidden"
        }
      },
      "required": [
        "TaskId"
      ]
    },
    "eventForUpdate": {
      "type": "object",
      "properties": {
        "EventId": {
          "type": "integer",
          "title": "Event Id",
          "description": "The Id of the event."
        },
        "ExternalId": {
          "type": "string",
          "title": "Event External Id",
          "description": "The External Id of the event."
        },
        "Name": {
          "type": "string",
          "description": "The name of the task.",
          "title": "Name"
        },
        "Description": {
          "type": "string",
          "description": "The description of the task.",
          "title": "Description"
        },
        "FormId": {
          "type": "integer",
          "description": "The form Id of the task.",
          "title": "Form Id",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableForms",
            "value-path": "FormId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableForms",
            "itemValuePath": "FormId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Status": {
          "type": "string",
          "description": "The status of the task.",
          "title": "Status",
          "enum": [
            "Request",
            "Accepted",
            "InProgress",
            "Completed",
            "Rejected"
          ]
        }
      },
      "required": [
        "EventId"
      ]
    },
    "task": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "TaskId": {
          "type": "integer",
          "description": "The Id of the task.",
          "title": "Task Id"
        },
        "ExternalId": {
          "type": "string",
          "title": "Task External Id",
          "description": "The External Id of the task."
        },
        "TaskType": {
          "type": "integer",
          "description": "The type of the task.",
          "title": "Task Type"
        },
        "FormId": {
          "type": "integer",
          "description": "The form Id of the task.",
          "title": "Form Id"
        },
        "Status": {
          "type": "string",
          "description": "The status of the task.",
          "title": "Status"
        },
        "Name": {
          "type": "string",
          "description": "The name of the task.",
          "title": "Name"
        },
        "Description": {
          "type": "string",
          "description": "The description of the task.",
          "title": "Description"
        },
        "Created": {
          "type": "string",
          "description": "Date and time when the task was created.",
          "format": "date-time",
          "title": "Task Created"
        },
        "Creator": {
          "$ref": "#/definitions/creator"
        },
        "AssigneeId": {
          "type": "string",
          "description": "The user Id to which the task is assigned.",
          "title": "Assignee Id"
        },
        "AssigneeName": {
          "type": "string",
          "description": "The user name to which the task is assigned.",
          "title": "Assignee Name"
        },
        "AssigneeEmail": {
          "type": "string",
          "description": "The user email to which the task is assigned.",
          "title": "Assignee Email"
        },
        "CalendarEventId": {
          "type": "string",
          "description": "The Id of the Outlook calendar event.",
          "title": "Calendar Event Id"
        },
        "CalendarEventUID": {
          "type": "string",
          "description": "The unique Id of the Outlook calendar event.",
          "title": "Calendar Event UID"
        },
        "StartDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start date and time of the task.",
          "title": "Start Date Time"
        },
        "EndDateTime": {
          "type": "string",
          "description": "The end date and time of the task.",
          "format": "date-time",
          "title": "End Date Time"
        },
        "Deadline": {
          "type": "string",
          "description": "The deadline of the task.",
          "format": "date-time",
          "title": "Deadline"
        },
        "Library": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/libraryitem"
          },
          "title": "Library",
          "description": "Collection of Library items of the task."
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          },
          "title": "Tags",
          "description": "Collection of tags of the task."
        },
        "Url": {
          "type": "string",
          "title": "ISOPlanner Task URL",
          "description": "The Url of this task in ISOPlanner."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Whether the task is hidden in user views.",
          "title": "Hidden"
        }
      }
    },
    "event": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "EventId": {
          "type": "integer",
          "description": "The Id of the event.",
          "title": "Event Id"
        },
        "ExternalId": {
          "type": "string",
          "title": "Event External Id",
          "description": "The External Id of the event."
        },
        "Name": {
          "type": "string",
          "description": "The name of the template.",
          "title": "Event Name"
        },
        "Description": {
          "type": "string",
          "description": "The description of the template.",
          "title": "Event Description"
        },
        "Created": {
          "type": "string",
          "description": "Date and time when the template was created.",
          "format": "date-time",
          "title": "Event Created"
        },
        "Creator": {
          "$ref": "#/definitions/creator"
        },
        "FormId": {
          "type": "integer",
          "description": "The form Id of the event.",
          "title": "Form Id"
        },
        "Status": {
          "type": "string",
          "description": "Status of the event.",
          "title": "Status"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          },
          "title": "Tags",
          "description": "Collection of Tags items of the event."
        },
        "Library": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/libraryitem"
          },
          "title": "Library",
          "description": "Collection of Library items of the event."
        },
        "FirstLibraryItemId": {
          "type": "integer",
          "description": "Id of the first library item.",
          "title": "First library item Id"
        },
        "FirstLibraryItemUrl": {
          "type": "string",
          "description": "Url of the first library item.",
          "title": "First library item Url"
        },
        "FirstLibraryItemName": {
          "type": "string",
          "description": "Name of the first library item.",
          "title": "First library item name"
        },
        "TaskAssigneeEmailAddresses": {
          "type": "string",
          "description": "Semicolon seperated email addresses of the assignees.",
          "title": "Assignee email addresses"
        },
        "Tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/task"
          },
          "title": "Tasks",
          "description": "Collection of Subtasks of the event."
        },
        "Url": {
          "type": "string",
          "title": "ISOPlanner event URL",
          "description": "The Url of this event in ISOPlanner."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Whether the task is hidden in user views.",
          "title": "Hidden"
        }
      }
    },
    "libraryitem": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "LibraryItemId": {
          "type": "integer",
          "title": "Id",
          "description": "The Id of the Library item."
        },
        "LibraryItemName": {
          "type": "string",
          "title": "Name",
          "description": "The Name of the Library item."
        },
        "LibraryItemUrl": {
          "type": "string",
          "title": "Url",
          "description": "The Url of the Library item."
        },
        "LibraryItemOwner": {
          "$ref": "#/definitions/owner"
        },
        "LibraryItemSPItemId": {
          "type": "string",
          "title": "SharePoint Id",
          "description": "The SharePoint Id of the Library item."
        },
        "LibraryItemListItemId": {
          "type": "string",
          "title": "SharePoint List Item Id",
          "description": "The SharePoint List Item Id of the Library item."
        },
        "LibraryItemDriveItemId": {
          "type": "string",
          "title": "SharePoint Drive Item Id",
          "description": "The SharePoint Drive Item Id of the Library item."
        },
        "LibraryItemPageItemId": {
          "type": "string",
          "title": "SharePoint Page Id",
          "description": "The SharePoint Page Id of the Library item."
        },
        "LibraryCategoryId": {
          "type": "integer",
          "title": "Category Id",
          "description": "The Category Id of the Library item."
        },
        "LibraryCategoryName": {
          "type": "string",
          "title": "Category Name",
          "description": "The Category Name of the Library item."
        },
        "LibraryCategoryType": {
          "type": "integer",
          "title": "Category Type",
          "description": "The Category Type of the Library item."
        },
        "LibraryCategorySiteId": {
          "type": "string",
          "title": "Category SharePoint Site Id",
          "description": "The Category SharePoint Site Id of the Library item."
        },
        "LibraryCategoryUrl": {
          "type": "string",
          "title": "Category Url",
          "description": "The Category Url of the Library item."
        },
        "LibraryItemSPListItemId": {
          "type": "integer",
          "title": "SharePoint List Item Id",
          "description": "The Id of the SharePoint List Item."
        },
        "LibraryItemSPListETag": {
          "type": "string",
          "title": "SharePoint Item ETag",
          "description": "The ETag of the SharePoint List Item."
        }
      }
    },
    "tag": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "TagId": {
          "type": "integer",
          "title": "Id",
          "description": "The Id of the tag."
        },
        "TagName": {
          "type": "string",
          "title": "Name",
          "description": "The Name of the tag."
        },
        "TagValue": {
          "type": "string",
          "title": "Value",
          "description": "The Value of the tag."
        },
        "TagColor": {
          "type": "string",
          "title": "Color",
          "description": "The Color of the tag."
        },
        "TagInfo": {
          "type": "string",
          "title": "Info",
          "description": "The Info of the tag."
        }
      }
    },
    "kpi": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "KPIId": {
          "type": "integer",
          "title": "KPI Id",
          "description": "The Id of the KPI."
        },
        "Name": {
          "type": "string",
          "title": "Name",
          "description": "The Name of the KPI."
        },
        "Description": {
          "type": "string",
          "title": "Description",
          "description": "The Description of the KPI."
        },
        "ExpectedResult": {
          "type": "string",
          "title": "Expected Result",
          "description": "The Expected Result of the KPI."
        },
        "Instruction": {
          "type": "string",
          "title": "Instruction",
          "description": "The Instruction of the KPI."
        },
        "Type": {
          "type": "integer",
          "title": "KPI Type",
          "description": "The Type of the KPI."
        },
        "MinValue": {
          "type": "string",
          "title": "Minimal Value",
          "description": "The Minimal Value of the KPI."
        },
        "MaxValue": {
          "type": "string",
          "title": "Maximum Value",
          "description": "The Maximum Value of the KPI."
        },
        "DecimalCount": {
          "type": "integer",
          "title": "Decimal count",
          "description": "The number of decimals of the KPI of type Number."
        },
        "DefValue": {
          "type": "string",
          "title": "Default value",
          "description": "The Default value of the KPI."
        },
        "Required": {
          "type": "boolean",
          "title": "Required",
          "description": "Whether the value is Required or not."
        },
        "LibraryCategoryId": {
          "type": "integer",
          "title": "Library Category Id",
          "description": "The Id of category where attachments are stored."
        },
        "Choices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/keyvalue"
          },
          "title": "Choices",
          "description": "Collection of Choices for the KPI."
        }
      }
    },
    "kpidata": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "KPIId": {
          "type": "integer",
          "title": "KPI Id",
          "description": "The Id of the KPI.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableKPIs",
            "value-path": "KPIId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableKPIs",
            "itemValuePath": "KPIId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "KPIDataId": {
          "type": "integer",
          "title": "KPI Data Id",
          "description": "The Id of the KPI data point."
        },
        "Created": {
          "type": "string",
          "format": "date-time",
          "title": "Created",
          "description": "When the data point is created."
        },
        "CreatedBy": {
          "type": "string",
          "title": "CreatedBy",
          "description": "Name or email address of the user who created the data point."
        },
        "CreatedById": {
          "type": "string",
          "title": "CreatedById",
          "description": "Id of the user who created the data point.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Modified": {
          "type": "string",
          "format": "date-time",
          "title": "Modified",
          "description": "When the data point was Modified."
        },
        "ModifiedBy": {
          "type": "string",
          "title": "ModifiedBy",
          "description": "Name or email address of the user who modified the data point."
        },
        "ModifiedById": {
          "type": "string",
          "title": "ModifiedById",
          "description": "Id of the user who modified the data point.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "ResultNumber": {
          "type": "number",
          "title": "Value (Number)",
          "description": "The value of the KPI for type Number."
        },
        "ResultText": {
          "type": "string",
          "title": "Value (Text)",
          "description": "The value of the KPI for type Text."
        },
        "ResultComment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment for this data point."
        }
      }
    },
    "kpidataForCreate": {
      "type": "object",
      "properties": {
        "KPIId": {
          "type": "integer",
          "title": "KPI Id",
          "description": "The Id of the KPI.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableKPIs",
            "value-path": "KPIId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableKPIs",
            "itemValuePath": "KPIId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "TaskId": {
          "type": "integer",
          "title": "Task Id",
          "description": "The Task Id of the task context. This KPI data will be set on the form of the task.",
          "x-ms-visibility": "important"
        },
        "ResultNumber": {
          "type": "number",
          "title": "Value (Number)",
          "description": "The value of the KPI for type Number.",
          "x-ms-visibility": "important"
        },
        "ResultText": {
          "type": "string",
          "title": "Value (Text)",
          "description": "The value of the KPI for type Text.",
          "x-ms-visibility": "important"
        },
        "ResultDate": {
          "type": "string",
          "format": "date-time",
          "title": "Value (Date)",
          "description": "The value of the KPI for type Date and Time.",
          "x-ms-visibility": "important"
        },
        "ResultComment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment for this data point.",
          "x-ms-visibility": "important"
        },
        "Created": {
          "type": "string",
          "format": "date-time",
          "title": "Created",
          "description": "When the data point is created."
        },
        "CreatedBy": {
          "type": "string",
          "title": "CreatedBy",
          "description": "Name or email address of the user who created the data point."
        },
        "CreatedById": {
          "type": "string",
          "title": "CreatedById",
          "description": "Id of the user who created the data point.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "Modified": {
          "type": "string",
          "format": "date-time",
          "title": "Modified",
          "description": "When the data point was Modified."
        },
        "ModifiedBy": {
          "type": "string",
          "title": "ModifiedBy",
          "description": "Name or email address of the user who modified the data point."
        },
        "ModifiedById": {
          "type": "string",
          "title": "ModifiedById",
          "description": "Id of the user who modified the data point.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableUsers",
            "value-path": "UserId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableUsers",
            "itemValuePath": "UserId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        }
      },
      "required": [
        "KPIId"
      ]
    },
    "kpidatacontext": {
      "type": "object",
      "properties": {
        "KPIId": {
          "type": "integer",
          "title": "KPI Id",
          "description": "The Id of the KPI.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableKPIs",
            "value-path": "KPIId",
            "value-title": "Name",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableKPIs",
            "itemValuePath": "KPIId",
            "itemTitlePath": "Name",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "KPIDataId": {
          "type": "integer",
          "title": "KPI Data Id",
          "description": "The Id of the KPI data point."
        },
        "EntityType": {
          "type": "integer",
          "title": "Entity Type",
          "description": "The type of context.",
          "x-ms-dynamic-values": {
            "operationId": "FetchAvailableKPIEntityTypes",
            "value-path": "EntityType",
            "value-title": "Description",
            "parameters": {
              "orgunitid": {
                "parameter": "orgunitid"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "FetchAvailableKPIEntityTypes",
            "itemValuePath": "EntityType",
            "itemTitlePath": "Description",
            "parameters": {
              "orgunitid": {
                "parameterReference": "orgunitid"
              }
            }
          }
        },
        "EntityId": {
          "type": "integer",
          "title": "Entity Id",
          "description": "The Id of the entity that matches the type."
        }
      },
      "required": [
        "KPIId",
        "KPIDataId",
        "EntityType",
        "EntityId"
      ]
    },
    "owner": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "string",
          "title": "Owner Id",
          "description": "The Id of the owner."
        },
        "Name": {
          "type": "string",
          "title": "Owner Name",
          "description": "The name of the owner."
        },
        "Email": {
          "type": "string",
          "title": "Owner Email",
          "description": "The email address of the owner."
        }
      }
    },
    "creator": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "string",
          "title": "Creator Id",
          "description": "The Id of the creator."
        },
        "Name": {
          "type": "string",
          "title": "Creator Name",
          "description": "The name of the creator."
        },
        "Email": {
          "type": "string",
          "title": "Creator Email",
          "description": "The email address of the creator."
        }
      }
    },
    "group": {
      "type": "object",
      "properties": {
        "GroupId": {
          "type": "string",
          "title": "Group Id",
          "description": "The Id of the group."
        },
        "Name": {
          "type": "string",
          "title": "Group Name",
          "description": "The name of the group."
        },
        "Email": {
          "type": "string",
          "title": "Group Email",
          "description": "The email address of the group."
        }
      }
    },
    "keyvalue": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "title": "Key",
          "description": "Unique Key of the item."
        },
        "Value": {
          "type": "string",
          "title": "Value",
          "description": "Value of the item."
        }
      }
    },
    "risk": {
      "type": "object",
      "properties": {
        "OrgUnitId": {
          "type": "string",
          "description": "The Id of the organizational unit.",
          "title": "Org Unit Id"
        },
        "RiskId": {
          "type": "integer",
          "description": "The Id of the risk.",
          "title": "Risk Id"
        },
        "Code": {
          "type": "string",
          "description": "The code of the risk.",
          "title": "Code"
        },
        "Name": {
          "type": "string",
          "description": "The name of the risk.",
          "title": "Name"
        },
        "RiskStateId": {
          "type": "integer",
          "description": "The Id of the risk state.",
          "title": "Risk State Id"
        },
        "RiskState": {
          "type": "string",
          "description": "The risk state.",
          "title": "Risk State"
        },
        "Owner": {
          "$ref": "#/definitions/owner"
        },
        "Group": {
          "$ref": "#/definitions/group"
        },
        "Description": {
          "type": "string",
          "description": "The description risk.",
          "title": "Risk description"
        },
        "AssetDescription": {
          "type": "string",
          "description": "The description of the related assets.",
          "title": "Asset description"
        },
        "Analysis": {
          "type": "string",
          "description": "The consequence of the risk.",
          "title": "Consequence"
        },
        "LikelihoodStart": {
          "type": "integer",
          "description": "The likelihood of the risk (Start).",
          "title": "Likelihood Start"
        },
        "LikelihoodCurrent": {
          "type": "integer",
          "description": "The likelihood of the risk (Current).",
          "title": "Likelihood Current"
        },
        "LikelihoodGoal": {
          "type": "integer",
          "description": "The likelihood of the risk (Goal).",
          "title": "Likelihood Goal"
        },
        "ImpactStart": {
          "type": "integer",
          "description": "The impact of the risk (Start).",
          "title": "Impact Start"
        },
        "ImpactCurrent": {
          "type": "integer",
          "description": "The impact of the risk (Current).",
          "title": "Impact Current"
        },
        "ImpactGoal": {
          "type": "integer",
          "description": "The impact of the risk (Goal).",
          "title": "Impact Goal"
        },
        "ScoreStart": {
          "type": "integer",
          "description": "The score of the risk (Start).",
          "title": "Score Start"
        },
        "ScoreCurrent": {
          "type": "integer",
          "description": "The score of the risk (Current).",
          "title": "Score Current"
        },
        "ScoreGoal": {
          "type": "integer",
          "description": "The score of the risk (Goal).",
          "title": "Score Goal"
        },
        "Method": {
          "type": "integer",
          "description": "The treatment method Id.",
          "title": "Treatment method"
        },
        "Strategy": {
          "type": "string",
          "description": "The treatment strategy of the risk.",
          "title": "Treatment strategy"
        },
        "Url": {
          "type": "string",
          "description": "The Url of this risk in ISOPlanner.",
          "title": "ISOPlanner Risk URL"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          },
          "title": "Tags",
          "description": "Collection of tags of the risk."
        }
      }
    }
  },
  "security": [
    {
      "oauth2-auth": []
    }
  ],
  "tags": [],
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {},
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize"
    }
  }
}