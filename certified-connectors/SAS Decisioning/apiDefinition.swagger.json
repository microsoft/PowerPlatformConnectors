{
  "swagger": "2.0",
  "info": {
    "version": "2",
    "title": "SAS Decisioning",
    "description": "SAS Decisioning combines AI and business rules to automate operational decisions at scale. Use this connector to run decision models that are deployed on the SAS Viya platform.",
    "contact": {
      "name": "SAS Support",
      "url": "https://support.sas.com",
      "email": "support@sas.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.sas.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.sas.com/en_us/legal/privacy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Data"
    }
  ],
  "host": "www.sas.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [],
  "produces": [],
  "paths": {
    "/microanalyticScore/modules": {
      "get": {
        "summary": "Get loaded modules",
        "description": "Retrieves the collection of modules that are loaded in memory by the service. Standard paging options are supported. The returned collection items are of type application/vnd.sas.microanalytic.module.",
        "operationId": "getModules",
        "produces": [
          "application/vnd.sas.collection+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "The index of the first module to return.",
            "x-ms-visibility": "internal",
            "required": true,
            "x-ms-summary": "start"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 9999,
            "description": "The maximum number of modules to return.",
            "x-ms-visibility": "internal",
            "required": true,
            "x-ms-summary": "limit"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string",
            "description": "The criteria for filtering the modules. See [Filtering in REST APIs](https://developer.sas.com/apis/rest/Topics/#filters).",
            "format": "filter-criteria",
            "x-ms-visibility": "internal",
            "x-ms-summary": "filter"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "description": "The criteria for sorting the modules. See [Sorting in REST APIs](https://developer.sas.com/apis/rest/Topics/#sorting).",
            "format": "sort-criteria",
            "x-ms-visibility": "internal",
            "x-ms-summary": "sortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/moduleCollection"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/microanalyticScore/modules/{moduleId}": {
      "get": {
        "summary": "Get module",
        "description": "For the specified module, returns detailed information including the steps that are contained in the module.",
        "operationId": "getModule",
        "produces": [
          "application/vnd.sas.microanalytic.module+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "description": "The identifier of the module to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "getModules",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "name",
              "parameters": {
                "start": 0,
                "limit": 9999
              }
            },
            "x-ms-summary": "module"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/module"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/microanalyticScore/modules/{moduleId}/steps": {
      "get": {
        "summary": "Get module steps",
        "description": "Retrieves the collection of steps that correspond to a specific module.",
        "operationId": "getSteps",
        "produces": [
          "application/vnd.sas.collection+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The identifier of the module that contains the step collection.",
            "x-ms-dynamic-values": {
              "operationId": "getModules",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "name",
              "parameters": {
                "start": 0,
                "limit": 9999
              }
            },
            "x-ms-summary": "module"
          },
          {
            "name": "start",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "The index of the first step to return.",
            "x-ms-visibility": "internal",
            "required": true,
            "x-ms-summary": "start"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 100,
            "description": "The maximum number of steps to return.",
            "required": true,
            "x-ms-visibility": "internal",
            "x-ms-summary": "limit"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/stepCollection"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/microanalyticScore/modules/{moduleId}/steps/{stepId}": {
      "get": {
        "summary": "Get a specific step of the module",
        "description": "Returns detailed information about the input and output signatures used to execute a specific step of the module.",
        "operationId": "getStep",
        "produces": [
          "application/vnd.sas.microanalytic.module.step+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The identifier of the module containing the step.",
            "x-ms-dynamic-values": {
              "operationId": "getModules",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "name",
              "parameters": {
                "start": 0,
                "limit": 9999
              }
            },
            "x-ms-summary": "module"
          },
          {
            "name": "stepId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The identifier of the step.",
            "x-ms-dynamic-values": {
              "operationId": "getSteps",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "id",
              "parameters": {
                "moduleId": {
                  "parameter": "moduleId"
                },
                "start": 0,
                "limit": 100
              }
            },
            "x-ms-summary": "step"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/step"
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "post": {
        "summary": "Run step",
        "description": "Executes the step with the specified input values. The `outputs` variable in the reply contains the output of the execution.",
        "operationId": "executeStep",
        "produces": [
          "application/vnd.sas.microanalytic.module.step.output+json",
          "application/json"
        ],
        "consumes": [
          "application/vnd.sas.microanalytic.module.step.input+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "description": "The identifier of the module that contains the step to execute.",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "getModules",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "name",
              "parameters": {
                "start": 0,
                "limit": 9999
              }
            },
            "x-ms-summary": "module"
          },
          {
            "name": "stepId",
            "in": "path",
            "description": "The identifier of the step to execute.",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "getSteps",
              "value-path": "id",
              "value-collection": "items",
              "value-title": "id",
              "parameters": {
                "moduleId": {
                  "parameter": "moduleId"
                },
                "start": 0,
                "limit": 100
              }
            },
            "x-ms-summary": "step"
          },
          {
            "name": "input",
            "in": "body",
            "description": "The input values to use for the execution.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stepInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The module was created.",
            "schema": {
              "$ref": "#/definitions/stepOutput"
            }
          }
        }
      }
    },
    "/modelPublish/destinations": {
      "get": {
        "summary": "Get a list of publishing destinations",
        "description": "Returns a list of publishing destinations.",
        "operationId": "getModelPublishDestinations",
        "produces": [
          "application/vnd.sas.collection+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "The index of the first publishing destination to return.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of publishing destinations to return.",
            "required": false,
            "type": "integer",
            "default": 999,
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The criteria for filtering the publishing destinations. See [Filtering in REST APIs](https://developer.sas.com/apis/rest/Topics/#filters).",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The criteria for sorting the publishing destinations. See [Sorting in REST APIs](https://developer.sas.com/apis/rest/Topics/#sorting).",
            "required": false,
            "type": "string",
            "default": "destinationType"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/destinationCollection"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/callbackContentTypes": {
      "get": {
        "summary": "Get a collection of the webhook callback content types",
        "description": "Returns a list of the webhook callback content types.",
        "operationId": "getWebhookCallbackContentTypes",
        "produces": [
          "application/vnd.sas.collection+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request succeeded.",
            "schema": {
              "$ref": "#/definitions/webhookCallbackContentTypeCollection"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/webhooks/{webhookId}": {
      "delete": {
        "summary": "Delete a webhook",
        "description": "Deletes the specified webhook.",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "description": "The unique identifier for the webhook.",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The request succeeded."
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/webhooksValidate": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/webhookCallbackValidate"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-trigger": "single",
        "summary": "When a resource is validated",
        "description": "Creates a new webhook for completion of any scoring event.",
        "operationId": "createValidateWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Webhook",
              "description": "Webhooks are \"user-defined HTTP callbacks\". This represents application/vnd.sas.webhook\nmedia type (version 1).",
              "required": [
                "name",
                "active",
                "resourcePath",
                "state",
                "condition",
                "callback"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Webhook name",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "Validate Webhook From Power Automate"
                },
                "active": {
                  "type": "boolean",
                  "description": "Specifies whether or not this webhook is active.",
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "resourcePath": {
                  "type": "string",
                  "description": "Path of the resource in the folder.",
                  "default": "/",
                  "title": "Resource path prefix"
                },
                "state": {
                  "type": "string",
                  "default": "success",
                  "title": "State",
                  "enum": [
                    "success",
                    "failure"
                  ]
                },
                "condition": {
                  "type": "object",
                  "x-ms-visibility": "internal",
                  "title": "Condition",
                  "description": "Condition that need to be matched for this webhook to callback.\nThis doesn't represent any top-level media type.",
                  "required": [
                    "callbackContentType"
                  ],
                  "properties": {
                    "callbackContentType": {
                      "type": "string",
                      "description": "Type of the callback content.",
                      "title": "",
                      "default": "application/vnd.sas.webhook.callback.validate",
                      "x-ms-visibility": "internal"
                    }
                  }
                },
                "callback": {
                  "type": "object",
                  "x-ms-visibility": "internal",
                  "title": "Callback",
                  "description": "Callback to which webhook will be called when a specified event occurs.",
                  "required": [
                    "uri"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "Callback uri that will be called when a specified event occurs.",
                      "x-ms-notification-url": true,
                      "x-ms-visibility": "internal",
                      "title": ""
                    }
                  }
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/webhooks/webhooksPublish": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/webhookCallbackPublish"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-trigger": "single",
        "summary": "When a resource is published",
        "description": "Creates a new webhook for publish event.",
        "operationId": "createPublishWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Webhook",
              "description": "Webhooks are \"user-defined HTTP callbacks\". This represents application/vnd.sas.webhook\nmedia type (version 1).",
              "required": [
                "name",
                "active",
                "resourcePath",
                "destinationType",
                "condition",
                "callback"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Webhook name",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "Publish Webhook From Power Automate"
                },
                "active": {
                  "type": "boolean",
                  "description": "Specifies whether or not this webhook is active.",
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "resourcePath": {
                  "type": "string",
                  "description": "Path of the resource in the folder.",
                  "default": "/",
                  "title": "Resource path prefix"
                },
                "destinationType": {
                  "type": "string",
                  "default": "microAnalyticService",
                  "title": "Destination type",
                  "x-ms-dynamic-values": {
                    "operationId": "getModelPublishDestinations",
                    "value-path": "destinationType",
                    "value-collection": "items",
                    "value-title": "destinationType"
                  }
                },
                "condition": {
                  "type": "object",
                  "x-ms-visibility": "internal",
                  "title": "Condition",
                  "description": "Condition that need to be matched for this webhook to callback.\nThis doesn't represent any top-level media type.",
                  "required": [
                    "callbackContentType"
                  ],
                  "properties": {
                    "callbackContentType": {
                      "type": "string",
                      "description": "Type of the callback content.",
                      "title": "",
                      "default": "application/vnd.sas.webhook.callback.publish",
                      "x-ms-visibility": "internal"
                    }
                  }
                },
                "callback": {
                  "type": "object",
                  "x-ms-visibility": "internal",
                  "title": "Callback",
                  "description": "Callback to which webhook will be called when a specified event occurs.",
                  "required": [
                    "uri"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "Callback uri that will be called when a specified event occurs.",
                      "x-ms-notification-url": true,
                      "x-ms-visibility": "internal",
                      "title": ""
                    }
                  }
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/webhooks/webhooksGeneric": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/webhookCallbackGeneric"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-ms-trigger": "single",
        "summary": "When a pre-defined event happened",
        "description": "Creates a new webhook for pre-defined callback content type event.",
        "operationId": "createGenericWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Webhook",
              "description": "Webhooks are \"user-defined HTTP callbacks\". This represents application/vnd.sas.webhook\nmedia type (version 1).",
              "required": [
                "name",
                "active",
                "condition",
                "callback"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Webhook name",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "Generic Webhook From Power Automate"
                },
                "active": {
                  "type": "boolean",
                  "description": "Specifies whether or not this webhook is active.",
                  "default": true,
                  "x-ms-visibility": "internal"
                },
                "condition": {
                  "type": "object",
                  "description": "Condition that need to be matched for this webhook to callback.\nThis doesn't represent any top-level media type.",
                  "required": [
                    "callbackContentType"
                  ],
                  "properties": {
                    "callbackContentType": {
                      "type": "string",
                      "description": "Type of the callback content.",
                      "title": "Callback content type",
                      "default": "application/vnd.sas.webhook.callback.publish",
                      "x-ms-dynamic-values": {
                        "operationId": "getWebhookCallbackContentTypes",
                        "value-path": "name",
                        "value-collection": "items",
                        "value-title": "name"
                      }
                    },
                    "callbackContentFilter": {
                      "type": "string",
                      "description": "Filter for the callback content.",
                      "title": "Callback content filter"
                    }
                  }
                },
                "callback": {
                  "type": "object",
                  "x-ms-visibility": "internal",
                  "title": "Callback",
                  "description": "Callback to which webhook will be called when a specified event occurs.",
                  "required": [
                    "uri"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "Callback uri that will be called when a specified event occurs.",
                      "x-ms-notification-url": true,
                      "x-ms-visibility": "internal",
                      "title": ""
                    }
                  }
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "anyVariableValue": {
      "description": "The value of the variable."
    },
    "module": {
      "title": "Module",
      "description": "Describes a module that has been compiled and loaded by the service.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A generated unique string that identifies a module in an installation."
        },
        "name": {
          "type": "string",
          "description": "The name that is associated with a module."
        },
        "description": {
          "type": "string",
          "description": "Text that describes the rules and logic performed by the module."
        }
      }
    },
    "step": {
      "title": "Step",
      "description": "A representation of a unit of code to be executed, and its inputs and outputs.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of a step that is included in the compiled module. The identifier is user-specified and is often a name for the step."
        },
        "moduleId": {
          "type": "string",
          "description": "The identifier of the module that contains the step."
        },
        "description": {
          "type": "string",
          "description": "Text that describes the logic performed by the step."
        },
        "inputs": {
          "type": "array",
          "description": "Describes information about the specific input values that should be specified in the request body when a step is executed.",
          "items": {
            "$ref": "#/definitions/stepParameter"
          }
        },
        "outputs": {
          "type": "array",
          "description": "Describes information about the specific output values that should be expected in the response body of step execution.",
          "items": {
            "$ref": "#/definitions/stepParameter"
          }
        }
      }
    },
    "stepInput": {
      "title": "Step Input",
      "description": "Describes the input values that are required when a step is validated or executed.",
      "type": "object",
      "required": [
        "inputs"
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "description": "The values to pass to the step as inputs for validation or execution. The order of the variables should match the order presented in the input signature.",
          "items": {
            "$ref": "#/definitions/variable"
          }
        }
      }
    },
    "stepOutput": {
      "title": "Step Output",
      "description": "This type describes the output values that are returned when a step is executed.",
      "type": "object",
      "properties": {
        "moduleId": {
          "type": "string",
          "description": "The identifier of the module that contains the executed step."
        },
        "stepId": {
          "type": "string",
          "description": "The name of the step that produced this output."
        },
        "outputs": {
          "type": "array",
          "description": "The output values that are returned from an executed step. The order of the variables matches the order presented in the output signature.",
          "items": {
            "$ref": "#/definitions/variable"
          }
        }
      }
    },
    "stepParameter": {
      "title": "Step Parameter",
      "description": "An object that describes the format of an input or output to a step.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the input or output variable."
        },
        "type": {
          "type": "string",
          "description": "The data type of a variable. If the variable's type is (array of) integer, long, or decimal, the value must be a JSON (array of) number. If the variable's type is (array of) string or char, the value must be a JSON (array of) string. Only one-dimensional arrays are supported. Null is used to represent missing values. For DS2, decimal corresponds to the double data type.",
          "enum": [
            "decimal",
            "bigint",
            "integer",
            "string",
            "binary",
            "decimalArray",
            "bigintArray",
            "integerArray",
            "stringArray",
            "binaryArray"
          ]
        },
        "size": {
          "type": "integer",
          "description": "For a string type, this field indicates the length of the string and is at least one. For non-string types, this field is ignored."
        },
        "dim": {
          "type": "integer",
          "description": "For an array type, this field indicates the length of the array and is at least one. For non-array types, this field is ignored."
        }
      }
    },
    "variable": {
      "title": "Variable",
      "description": "A name/value pair that represents an input or output variable.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the variable.",
          "title": "",
          "x-ms-dynamic-values": {
            "operationId": "getStep",
            "value-path": "name",
            "value-collection": "inputs",
            "value-title": "name",
            "parameters": {
              "moduleId": {
                "parameter": "moduleId"
              },
              "stepId": {
                "parameter": "stepId"
              }
            }
          }
        },
        "value": {
          "$ref": "#/definitions/anyVariableValue"
        },
        "encoding": {
          "type": "string",
          "description": "The encoding of the variable value. It can be null or 'b64'.",
          "title": "",
          "x-ms-visibility": "internal"
        }
      }
    },
    "moduleCollection": {
      "title": "Module Collection",
      "description": "A collection of module representations.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/module"
          },
          "description": "An array that contains module resources."
        }
      }
    },
    "stepCollection": {
      "title": "Step Collection",
      "description": "A collection of step representations.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          },
          "description": "An array that contains step resources."
        }
      }
    },
    "destination": {
      "title": "Publishing Destination",
      "description": "Contains information about a publishing destination.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the publishing destination server."
        },
        "description": {
          "type": "string",
          "description": "The description of the publishing destination server."
        },
        "destinationType": {
          "type": "string",
          "description": "The destination type can be \"cas\", \"microAnalyticServer\", \"teradata\", \"hadoop\", \"aws\", \"azure\", \"aml\", \"git\", and \"privateDocker\"."
        },
        "links": {
          "type": "array",
          "description": "links",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "createdBy": {
          "type": "string",
          "description": "The user who created the object."
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp for when the object was created, in the format of `YYYY-MM-DDThh:mm:ss.sssZ`."
        },
        "modifiedBy": {
          "type": "string",
          "description": "The user who most recently modified the object."
        },
        "modifiedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp for when the object was last modified, in the format of `YYYY-MM-DDThh:mm:ss.sssZ`."
        },
        "version": {
          "type": "integer",
          "description": "The API representation version.",
          "default": 1
        }
      },
      "required": [
        "name"
      ]
    },
    "destinationCollection": {
      "title": "Destination Collection",
      "description": "A collection of destination representations.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/destination"
          },
          "description": "An array that contains destination resources."
        }
      }
    },
    "webhookCallbackContentType": {
      "title": "Callback Content Type",
      "description": "Details about the callback content type. This represents application/vnd.sas.webhook.callback.content.type\nmedia type (version 1).",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the callback content type."
        },
        "version": {
          "type": "integer",
          "description": "This media type's schema version number. This representation\nis version 1."
        }
      }
    },
    "webhookCallbackContentTypeCollection": {
      "title": "Webhook Callback Content Type Collection",
      "description": "All of supported webhook callback content type representations.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/webhookCallbackContentType"
          },
          "description": "An array that contains webhook callback content types."
        }
      }
    },
    "link": {
      "type": "object",
      "properties": {
        "href": {
          "description": "The URL for the link.",
          "type": "string"
        },
        "itemType": {
          "description": "If this is a link to a container, `itemType` is the media type or link\ntype for the items in the container.",
          "type": "string"
        },
        "method": {
          "description": "The HTTP method for the link.",
          "type": "string"
        },
        "rel": {
          "description": "The relationship of the link to the resource.",
          "type": "string"
        },
        "responseItemType": {
          "description": "The media type or link type of the items in the response body for a\n`PUT`, `POST`, or `PATCH` operation.",
          "type": "string"
        },
        "responseType": {
          "description": "The media type or link type of the response body for a `PUT`, `POST`,\nor `PATCH` operation.",
          "type": "string"
        },
        "title": {
          "description": "The title for the link.",
          "type": "string"
        },
        "type": {
          "description": "The media type or link type for the link.",
          "type": "string"
        },
        "uri": {
          "description": "The relative URI for the link.",
          "type": "string"
        }
      }
    },
    "webhookCallbackValidate": {
      "title": "Webhook Callback Validate",
      "description": "The content of the callback validate. This represents application/vnd.sas.webhook.callback.validate\nmedia type (version 1).",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "success",
            "failure"
          ],
          "description": "State whether it is success or failure."
        },
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource on which the validation is performed."
        },
        "resourcePath": {
          "type": "string",
          "description": "Path of the resource in the folder."
        },
        "resourceVersion": {
          "type": "string",
          "description": "Version of the resource on which the validation is performed."
        },
        "validationType": {
          "type": "string",
          "description": "Type of the validation that is performed on the resource.",
          "enum": [
            "test",
            "scenario",
            "publishValidation"
          ]
        },
        "links": {
          "type": "array",
          "description": "Zero or more links to related resources or operations.",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "version": {
          "type": "integer",
          "description": "This media type's schema version number. This representation\nis version 1."
        }
      }
    },
    "webhookCallbackPublish": {
      "title": "Webhook Callback Publish",
      "description": "The content of the callback publish. This represents application/vnd.sas.webhook.callback.publish\nmedia type (version 1).",
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource which is published."
        },
        "resourcePath": {
          "type": "string",
          "description": "Path of the resource in the folder."
        },
        "resourceVersion": {
          "type": "string",
          "description": "Version of the resource which is published."
        },
        "destinationType": {
          "type": "string",
          "description": "Type of the destination where the resource is published."
        },
        "replace": {
          "type": "boolean",
          "description": "Indicated whether the resource is published for the first time or replaced."
        },
        "links": {
          "type": "array",
          "description": "Zero or more links to related resources or operations.",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "version": {
          "type": "integer",
          "description": "This media type's schema version number. This representation\nis version 1."
        }
      }
    },
    "webhookCallbackGeneric": {
      "title": "Webhook Callback Generic",
      "description": "The content of the generic callback.",
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "description": "Zero or more links to related resources or operations.",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "version": {
          "type": "integer",
          "description": "This media type's schema version number. This representation\nis version 1."
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [],
  "tags": []
}
