{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support@jedox.com",
      "name": "Jedox Support",
      "url": "https://support.jedox.com/"
    },
    "description": "Connect to your Jedox OData Hub. Fetch data from the Olap server, stream data from the Integrator server or execute loads and jobs.",
    "title": "Jedox OData Hub",
    "version": "21.4.0"
  },
  "host": "cloud.jedox.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Databases": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/DatabaseArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Get a list of databases found in the server. System and config databases are excluded from the list, but can be requested by providing the ID.",
        "operationId": "Databases",
        "summary": "Get databases"
      }
    },
    "/Databases({DatabaseId})": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "no error",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Get the database with the given ID.",
        "operationId": "DatabaseById",
        "summary": "Get database by id"
      }
    },
    "/Databases({DatabaseId})/Cubes": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/CubeArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Cubes"
        ],
        "description": "Get a list of cubes in the given database. To prevent issues with the URL encodings, Attribute cubes will be renamed, e.g. \\#_Years to ATT_Years.",
        "operationId": "Cubes",
        "summary": "Get cubes"
      }
    },
    "/Databases({DatabaseId})/Cubes({CubeId})": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the cube",
            "in": "path",
            "name": "CubeId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Cubes",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Cube Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/Cube"
            }
          }
        },
        "tags": [
          "Cubes"
        ],
        "description": "Get the cube with the given ID in the given database. To prevent issues with the URL encodings, Attribute cubes will be renamed, e.g. \\#_Years to ATT_Years.",
        "operationId": "CubeById",
        "summary": "Get cube by ID"
      }
    },
    "/Databases({DatabaseId})/Cubes({CubeId})/Cells": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the cube",
            "in": "path",
            "name": "CubeId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Cubes",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Cube Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).\n> Currently the /Cells functions only support basic operations. Complex formulas might return an invalid result. For complex filtering, please use Views.\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          },
          {
            "default": true,
            "description": "If set to true, the result will only contain base elements. If set to false, it will also contain consolidated elements.",
            "in": "query",
            "name": "baseonly",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Base Elements Only",
            "x-ms-visibility": "advanced"
          },
          {
            "default": false,
            "description": "If set to true, rules will be applied to the resulting cells.",
            "in": "query",
            "name": "userules",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Use Rules",
            "x-ms-visibility": "advanced"
          },
          {
            "default": true,
            "description": "If set to true, numeric cells with a value of 0 and empty string cells will be removed from the result.",
            "in": "query",
            "name": "zerosupression",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Supress Zeros",
            "x-ms-visibility": "advanced"
          },
          {
            "default": false,
            "description": "If set to true, the service will return the entire result instead of a single page. With this option set to true, the response might take multiple minutes depending on the cube's size.",
            "in": "query",
            "name": "disablepaging",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Disable Paging",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/CellArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Cells"
        ],
        "description": "Get the cells from a cube. This returns the cells' values and element names. If the cell has a string value, the value is instead stored in the stringValue field. Element names are stored in dynamic properties.",
        "operationId": "CubeCells",
        "summary": "Get cube cells"
      }
    },
    "/Databases({DatabaseId})/Dimensions": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/DimensionArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Dimensions"
        ],
        "description": "Get a list of dimensions in the given database.",
        "operationId": "Dimensions",
        "summary": "Get dimensions"
      }
    },
    "/Databases({DatabaseId})/Dimensions({DimensionId})": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the dimension",
            "in": "path",
            "name": "DimensionId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Dimensions",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Dimension Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/Dimension"
            }
          }
        },
        "tags": [
          "Dimensions"
        ],
        "description": "Get the dimension with the given ID in the given database.",
        "operationId": "DimensionById",
        "summary": "Get dimension by ID"
      }
    },
    "/Databases({DatabaseId})/Dimensions({DimensionId})/Elements": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the dimension",
            "in": "path",
            "name": "DimensionId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Dimensions",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Dimension Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/ElementArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Elements"
        ],
        "description": "Get a list of elements in the given dimension.",
        "operationId": "Elements",
        "summary": "Get elements"
      }
    },
    "/Databases({DatabaseId})/Dimensions({DimensionId})/Elements({ElementId})": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the dimension",
            "in": "path",
            "name": "DimensionId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Dimensions",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Dimension Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Numeric ID of the element",
            "in": "path",
            "name": "ElementId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                },
                "DimensionId": {
                  "parameter": "DimensionId"
                }
              },
              "operationId": "Elements",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Element Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/Element"
            }
          }
        },
        "tags": [
          "Elements"
        ],
        "description": "Returns the element with the given ID in the given dimension.",
        "operationId": "ElementById",
        "summary": "Get element by ID"
      }
    },
    "/Databases({DatabaseId})/Views": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/ViewArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Get a list of stored views in the given database.",
        "operationId": "Views",
        "summary": "Get stored views"
      }
    },
    "/Databases({DatabaseId})/Views({ViewId})": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "UUID of the view",
            "format": "uuid",
            "in": "path",
            "name": "ViewId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Views",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "View Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/View"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Get the view with the given ID in the given database.",
        "operationId": "ViewById",
        "summary": "Get stored view by ID"
      }
    },
    "/Databases({DatabaseId})/Views({ViewId})/Cells": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Numeric ID of the database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-dynamic-values": {
              "operationId": "Databases",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "Name"
            },
            "x-ms-summary": "Database Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "UUID of the view",
            "format": "uuid",
            "in": "path",
            "name": "ViewId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "DatabaseId": {
                  "parameter": "DatabaseId"
                }
              },
              "operationId": "Views",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "View Id",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).\n> Currently the /Cells functions only support basic operations. Complex formulas might return an invalid result.\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          },
          {
            "default": false,
            "description": "If set to true, the result will only contain base elements. If set to false, it will also contain consolidated elements.",
            "in": "query",
            "name": "baseonly",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Base Elements Only",
            "x-ms-visibility": "advanced"
          },
          {
            "default": false,
            "description": "If set to true, rules will be applied to the resulting cells.",
            "in": "query",
            "name": "userules",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Use Rules",
            "x-ms-visibility": "advanced"
          },
          {
            "default": true,
            "description": "If set to true, numeric cells with a value of 0 and empty string cells will be removed from the result.",
            "in": "query",
            "name": "zerosupression",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Supress Zeros",
            "x-ms-visibility": "advanced"
          },
          {
            "default": false,
            "description": "If set to true, the service will return the entire result instead of a single page. With this option set to true, the response might take multiple minutes depending on the view's size.",
            "in": "query",
            "name": "disablepaging",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Disable Paging",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/ViewCellArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Cells"
        ],
        "description": "Get all cells from a view. This returns the cells' values and element names. If the cell has a string value, the value is instead stored in the stringValue field. Element names are stored in dynamic properties.",
        "operationId": "ViewCells",
        "summary": "Get stored view cells"
      }
    },
    "/Integrator": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorProjectGroupArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IntegratorProjectGroups"
        ],
        "description": "Get a list of integrator project groups found in the server.",
        "operationId": "IntegratorProjectGroups",
        "summary": "Get Integrator project groups"
      }
    },
    "/Integrator('{GroupIdentifier}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "no error",
            "schema": {
              "$ref": "#/definitions/IntegratorProjectGroup"
            }
          }
        },
        "tags": [
          "IntegratorProjectGroups"
        ],
        "description": "Get the project group with the given ID.",
        "operationId": "IntegratorProjectsById",
        "summary": "Get Integrator project group by identifier"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorProjectArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IntegratorProjects"
        ],
        "description": "Get a list of integrator projects found in the server.",
        "operationId": "IntegratorProjects",
        "summary": "Get Integrator projects"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "no error",
            "schema": {
              "$ref": "#/definitions/IntegratorProject"
            }
          }
        },
        "tags": [
          "IntegratorProjects"
        ],
        "description": "Get the integrator project with the given name.",
        "operationId": "IntegratorProjectsByName",
        "summary": "Get Integrator project by name"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Extracts": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorComponentArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Extracts"
        ],
        "description": "Get a list of extracts in the given integrator project.",
        "operationId": "Extracts",
        "summary": "Get extracts"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Extracts('{ExtractName}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the extract",
            "in": "path",
            "name": "ExtractName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Extracts",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Extract Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorComponent"
            }
          }
        },
        "tags": [
          "Extracts"
        ],
        "description": "Get the extract with the given name in the given integrator project.",
        "operationId": "ExtractByName",
        "summary": "Get extract by Name"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Extracts('{ExtractName}')/Rows": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the extract",
            "in": "path",
            "name": "ExtractName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Extracts",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Extract Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorExtractComponentRowArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Extracts"
        ],
        "description": "Stream the rows of the extract with the given name in the given integrator project.",
        "operationId": "ExtractRows",
        "summary": "Get extract rows"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Jobs": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorComponentArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Jobs"
        ],
        "description": "Get a list of jobs in the given integrator project.",
        "operationId": "Jobs",
        "summary": "Get jobs"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Jobs('{JobName}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the job",
            "in": "path",
            "name": "JobName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Jobs",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Job Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorComponent"
            }
          }
        },
        "tags": [
          "Jobs"
        ],
        "description": "Get the jobs with the given name in the given integrator project.",
        "operationId": "JobByName",
        "summary": "Get job by name"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Jobs('{JobName}')/Run": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the job",
            "in": "path",
            "name": "JobName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Jobs",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Job Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorRunResult"
            }
          }
        },
        "tags": [
          "Jobs"
        ],
        "description": "Run the job with the given name in the given integrator project. The execution will be added to the queue.",
        "operationId": "RunJob",
        "summary": "Run job"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Jobs('{JobName}')/Run(Variables='{Variables}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the job",
            "in": "path",
            "name": "JobName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Jobs",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Job Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Variable names and values seperated by an equal sign. If a variable is omitted, the default value will be used. Multiple variables must be seperated by commas. Example: Variables='SourceDB=Demo,TargetDB=Biker'\n",
            "in": "path",
            "name": "Variables",
            "required": true,
            "type": "string",
            "x-ms-summary": "Variables",
            "x-ms-url-encoding": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorRunResult"
            }
          }
        },
        "tags": [
          "Jobs"
        ],
        "description": "Run the job with the given name in the given integrator project. The execution will be added to the queue.",
        "operationId": "RunJobWithVariables",
        "summary": "Run job with variables"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Loads": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorComponentArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Loads"
        ],
        "description": "Get a list of loads in the given integrator project.",
        "operationId": "Loads",
        "summary": "Get loads"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Loads('{LoadName}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the load",
            "in": "path",
            "name": "LoadName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Loads",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Load Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorComponent"
            }
          }
        },
        "tags": [
          "Loads"
        ],
        "description": "Get the transform with the given name in the given integrator project.",
        "operationId": "LoadByName",
        "summary": "Get load by name"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Loads('{LoadName}')/Run()": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the load",
            "in": "path",
            "name": "LoadName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Loads",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Load Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorRunResult"
            }
          }
        },
        "tags": [
          "Loads"
        ],
        "description": "Run the load with the given name in the given integrator project. The execution will be added to the queue.",
        "operationId": "RunLoad",
        "summary": "Run load"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Loads('{LoadName}')/Run(Variables='{Variables}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the load",
            "in": "path",
            "name": "LoadName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Loads",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Load Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Variable names and values seperated by an equal sign. If a variable is omitted, the default value will be used. Multiple variables must be seperated by commas. Example: Variables='SourceDB=Demo,TargetDB=Biker'\n",
            "in": "path",
            "name": "Variables",
            "required": true,
            "type": "string",
            "x-ms-summary": "Variables",
            "x-ms-url-encoding": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorRunResult"
            }
          }
        },
        "tags": [
          "Loads"
        ],
        "description": "Run the load with the given name in the given integrator project. The execution will be added to the queue.",
        "operationId": "RunLoadWithVariables",
        "summary": "Run load with variables"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Transforms": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorComponentArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Transforms"
        ],
        "description": "Get a list of transforms in the given integrator project.",
        "operationId": "Transforms",
        "summary": "Get transforms"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Transforms('{TransformName}')": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the transform",
            "in": "path",
            "name": "TransformName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Transforms",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Transform Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "$ref": "#/definitions/IntegratorComponent"
            }
          }
        },
        "tags": [
          "Transforms"
        ],
        "description": "Get the transform with the given name in the given integrator project.",
        "operationId": "TransformByName",
        "summary": "Get transform by name"
      }
    },
    "/Integrator('{GroupIdentifier}')/Projects('{ProjectName}')/Transforms('{TransformName}')/Rows": {
      "get": {
        "produces": [
          "application/json; odata.metadata=minimal; odata.streaming=true"
        ],
        "parameters": [
          {
            "default": "globalprojects",
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "IntegratorProjectGroups",
              "value-collection": "value",
              "value-path": "Id",
              "value-title": "FriendlyName"
            },
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the Integrator project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                }
              },
              "operationId": "IntegratorProjects",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the transform",
            "in": "path",
            "name": "TransformName",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "parameters": {
                "GroupIdentifier": {
                  "parameter": "GroupIdentifier"
                },
                "ProjectName": {
                  "parameter": "ProjectName"
                }
              },
              "operationId": "Transforms",
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "Name"
            },
            "x-ms-summary": "Transform Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Limits the number of items returned by the given number. The service returns the number of available items up to but not greater than the specified value n.",
            "in": "query",
            "minimum": 1,
            "name": "$top",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Top Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.",
            "in": "query",
            "minimum": 1,
            "name": "$skip",
            "required": false,
            "type": "integer",
            "x-example": 20,
            "x-ms-summary": "Skip Count",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "The $filter system query option restricts the set of items returned. For a list of available operations and functions see the [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Ref356810738).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-example": "Type eq 'Normal'",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "properties": {
                "value": {
                  "$ref": "#/definitions/IntegratorTransformComponentRowArray"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Transforms"
        ],
        "description": "Stream the rows of the transform with the given name in the given integrator project.",
        "operationId": "TransformRows",
        "summary": "Get transform Rows"
      }
    },
    "/service/powerapps/schema/databases/{DatabaseId}/cubes/{CubeId}/cells": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Olap database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Database Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The identifier of the Olap cube",
            "in": "path",
            "name": "CubeId",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Cube Identifier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Service"
        ],
        "description": "Service request for getting the schema used for the result of cube cells.",
        "operationId": "GetCubeCellResultSchema",
        "summary": "Get Cube Cell Result Schema",
        "x-ms-visibility": "internal"
      }
    },
    "/service/powerapps/schema/databases/{DatabaseId}/views/{ViewId}/cells": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Olap database",
            "in": "path",
            "name": "DatabaseId",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Database Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The identifier of the stored view",
            "format": "uuid",
            "in": "path",
            "name": "ViewId",
            "required": true,
            "type": "string",
            "x-ms-summary": "View Identifier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Service"
        ],
        "description": "Service request for getting the schema used for the result of view cells.",
        "operationId": "GetViewCellResultSchema",
        "summary": "Get View Cell Result Schema",
        "x-ms-visibility": "internal"
      }
    },
    "/service/powerapps/schema/integrator/{GroupIdentifier}/{ProjectName}/extracts/{ExtractName}/rows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the extract",
            "in": "path",
            "name": "ExtractName",
            "required": true,
            "type": "string",
            "x-ms-summary": "Extract Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Service"
        ],
        "description": "Service request for getting the schema used for the result of extract rows.",
        "operationId": "GetExtractRowsResultSchema",
        "summary": "Get Extract Rows Result Schema",
        "x-ms-visibility": "internal"
      }
    },
    "/service/powerapps/schema/integrator/{GroupIdentifier}/{ProjectName}/transforms/{TransformName}/rows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Integrator project group",
            "in": "path",
            "name": "GroupIdentifier",
            "required": true,
            "type": "string",
            "x-ms-summary": "Group Identifier",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the project",
            "in": "path",
            "name": "ProjectName",
            "required": true,
            "type": "string",
            "x-ms-summary": "Project Name",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "The name of the transform",
            "in": "path",
            "name": "TransformName",
            "required": true,
            "type": "string",
            "x-ms-summary": "Transform Name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "No error",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Service"
        ],
        "description": "Service request for getting the schema used for the result of transform rows.",
        "operationId": "GetTransformRowsResultSchema",
        "summary": "Get Transform Rows Result Schema",
        "x-ms-visibility": "internal"
      }
    }
  },
  "definitions": {
    "Cell": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "parameters": {
          "CubeId": {
            "parameter": "CubeId"
          },
          "DatabaseId": {
            "parameter": "DatabaseId"
          }
        },
        "operationId": "GetCubeCellResultSchema",
        "value-path": "items"
      }
    },
    "CellArray": {
      "items": {
        "$ref": "#/definitions/Cell"
      },
      "type": "array"
    },
    "Cube": {
      "properties": {
        "FilledCellCount": {
          "format": "int64",
          "type": "integer"
        },
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CubeArray": {
      "items": {
        "$ref": "#/definitions/Cube"
      },
      "type": "array"
    },
    "Database": {
      "properties": {
        "CubeCount": {
          "format": "int64",
          "type": "integer"
        },
        "DimensionCount": {
          "format": "int64",
          "type": "integer"
        },
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseArray": {
      "items": {
        "$ref": "#/definitions/Database"
      },
      "type": "array"
    },
    "Dimension": {
      "properties": {
        "ElementCount": {
          "format": "int64",
          "type": "integer"
        },
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DimensionArray": {
      "items": {
        "$ref": "#/definitions/Dimension"
      },
      "type": "array"
    },
    "Element": {
      "properties": {
        "Id": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Position": {
          "format": "int64",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "Weight": {
          "format": "float",
          "type": "number",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ElementArray": {
      "items": {
        "$ref": "#/definitions/Element"
      },
      "type": "array"
    },
    "Error": {
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegratorComponent": {
      "properties": {
        "Description": {
          "type": "string"
        },
        "ModificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegratorComponentArray": {
      "items": {
        "$ref": "#/definitions/IntegratorComponent"
      },
      "type": "array"
    },
    "IntegratorExtractComponentRow": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "parameters": {
          "ExtractName": {
            "parameter": "ExtractName"
          },
          "GroupIdentifier": {
            "parameter": "GroupIdentifier"
          },
          "ProjectName": {
            "parameter": "ProjectName"
          }
        },
        "operationId": "GetExtractRowsResultSchema",
        "value-path": "items"
      }
    },
    "IntegratorExtractComponentRowArray": {
      "items": {
        "$ref": "#/definitions/IntegratorExtractComponentRow"
      },
      "type": "array"
    },
    "IntegratorProject": {
      "properties": {
        "Description": {
          "type": "string"
        },
        "ModificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegratorProjectArray": {
      "items": {
        "$ref": "#/definitions/IntegratorProject"
      },
      "type": "array"
    },
    "IntegratorProjectGroup": {
      "properties": {
        "Description": {
          "type": "string"
        },
        "Developer": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegratorProjectGroupArray": {
      "items": {
        "$ref": "#/definitions/IntegratorProjectGroup"
      },
      "type": "array"
    },
    "IntegratorRunResult": {
      "properties": {
        "errors": {
          "type": "integer"
        },
        "executionType": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "traceAvailable": {
          "type": "boolean"
        },
        "warnings": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IntegratorTransformComponentRow": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "parameters": {
          "GroupIdentifier": {
            "parameter": "GroupIdentifier"
          },
          "ProjectName": {
            "parameter": "ProjectName"
          },
          "TransformName": {
            "parameter": "TransformName"
          }
        },
        "operationId": "GetTransformRowsResultSchema",
        "value-path": "items"
      }
    },
    "IntegratorTransformComponentRowArray": {
      "items": {
        "$ref": "#/definitions/IntegratorTransformComponentRow"
      },
      "type": "array"
    },
    "View": {
      "properties": {
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "CubeId": {
          "format": "int64",
          "type": "integer"
        },
        "CubeName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Global": {
          "type": "boolean"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "UserName": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ViewArray": {
      "items": {
        "$ref": "#/definitions/View"
      },
      "type": "array"
    },
    "ViewCell": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "parameters": {
          "DatabaseId": {
            "parameter": "DatabaseId"
          },
          "ViewId": {
            "parameter": "ViewId"
          }
        },
        "operationId": "GetViewCellResultSchema",
        "value-path": "items"
      }
    },
    "ViewCellArray": {
      "items": {
        "$ref": "#/definitions/ViewCell"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "description": "To perform the requests below you need to provide your Jedox login credentials using Basic Authentication. Example using Curl (do not forget to replace the placeholders with the curly brackets): \n\n``` bash\ncurl --user {name}:{password} https://odata.{InstanceId}.cloud.jedox.com/Databases \n```\n\nIf there are no credentials given or the given credentials are incorrect, the server will respond with the status code `401 (Unauthorized)`\n",
      "type": "basic"
    }
  },
  "tags": [
    {
      "name": "Databases"
    },
    {
      "name": "Cubes"
    },
    {
      "name": "Views"
    },
    {
      "name": "Dimensions"
    },
    {
      "name": "Elements"
    },
    {
      "name": "Cells"
    },
    {
      "name": "IntegratorProjectGroups"
    },
    {
      "name": "IntegratorProjects"
    },
    {
      "name": "Extracts"
    },
    {
      "name": "Transforms"
    },
    {
      "name": "Loads"
    },
    {
      "name": "Jobs"
    }
  ],
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "Databases"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://jedox.com"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.jedox.com/en/trust/data-protection-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Intelligence;Data"
    }
  ]
}
