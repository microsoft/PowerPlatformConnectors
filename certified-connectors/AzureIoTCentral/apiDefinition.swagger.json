{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Action": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the action.",
          "type": "string",
          "x-ms-summary": "Action Name"
        },
        "id": {
          "description": "Unique ID of the action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "description": "Type of the action.",
          "enum": [
            "EmailAction",
            "WebhookAction",
            "PowerAutomateAction",
            "LogicAppsAction",
            "ActionGroupsAction"
          ],
          "type": "string",
          "x-ms-summary": "Action Type"
        }
      },
      "required": [
        "type",
        "rules"
      ],
      "type": "object"
    },
    "ActionCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of actions.",
          "type": "string"
        },
        "value": {
          "description": "The collection of actions.",
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "ActionGroupsAction": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the Action Groups action.",
          "type": "string",
          "x-ms-summary": "Action Groups Action Name"
        },
        "id": {
          "description": "Unique ID of the Action Groups action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Action Groups Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the Action Groups action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "default": "ActionGroupsAction",
          "description": "Type of the Action Groups action.",
          "enum": [
            "ActionGroupsAction"
          ],
          "type": "string",
          "x-ms-summary": "Action Groups Action Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "rules"
      ],
      "type": "object"
    },
    "ApiToken": {
      "properties": {
        "expiry": {
          "description": "String-formatted date representing the time when the token expires.",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Expiration Date"
        },
        "id": {
          "description": "Unique ID of the API token.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "API Token ID",
          "x-ms-visibility": "advanced"
        },
        "roles": {
          "description": "Roles that the API token has been granted permission to.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Roles"
        },
        "token": {
          "description": "Value of the API token.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Token"
        }
      },
      "required": [
        "roles"
      ],
      "type": "object"
    },
    "ApiTokenCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of API tokens.",
          "type": "string"
        },
        "value": {
          "description": "The collection of API tokens.",
          "items": {
            "$ref": "#/definitions/ApiToken"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Application": {
      "properties": {
        "displayName": {
          "description": "Display name of the application.",
          "type": "string",
          "x-ms-summary": "Application Name"
        },
        "host": {
          "description": "The URL host of the application.",
          "type": "string",
          "x-ms-summary": "Host"
        },
        "id": {
          "description": "Unique ID of the application.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Application ID",
          "x-ms-visibility": "advanced"
        },
        "subdomain": {
          "description": "The URL subdomain of the application.",
          "type": "string",
          "x-ms-summary": "Subdomain"
        }
      },
      "required": [
        "subdomain",
        "host"
      ],
      "type": "object"
    },
    "ApplicationCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of applications.",
          "type": "string"
        },
        "value": {
          "description": "The collection of applications.",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "ArraySchema": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the array schema.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the array schema.",
          "type": "string",
          "x-ms-summary": "Array Schema ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the array schema.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Array Schema Type"
        },
        "comment": {
          "description": "Developer comment about the array schema.",
          "type": "string",
          "x-ms-summary": "Array Schema Comment"
        },
        "description": {
          "description": "Detailed description of the array schema.",
          "type": "string",
          "x-ms-summary": "Array Schema Description"
        },
        "displayName": {
          "description": "Display name of the array schema.",
          "type": "string",
          "x-ms-summary": "Array Schema Name"
        },
        "elementSchema": {
          "description": "The schema for values of this array type.",
          "x-ms-summary": "Element Schema"
        }
      },
      "required": [
        "@type",
        "elementSchema"
      ],
      "type": "object"
    },
    "Attestation": {
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of the attestation.",
          "enum": [
            "SymmetricKeyAttestation",
            "X509Attestation",
            "TpmAttestation"
          ],
          "type": "string",
          "x-ms-summary": "Attestation Type"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Capability": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the capability.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the capability.",
          "type": "string",
          "x-ms-summary": "Capability ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the capability.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Capability Type"
        },
        "commandType": {
          "description": "The call pattern of this command.",
          "enum": [
            "synchronous",
            "asynchronous"
          ],
          "type": "string",
          "x-ms-summary": "Command Type"
        },
        "comment": {
          "description": "Developer comment about the capability.",
          "type": "string",
          "x-ms-summary": "Capability Comment"
        },
        "description": {
          "description": "Detailed description of the capability.",
          "type": "string",
          "x-ms-summary": "Capability Description"
        },
        "displayName": {
          "description": "Display name of the capability.",
          "type": "string",
          "x-ms-summary": "Capability Name"
        },
        "displayUnit": {
          "description": "The display name of the unit of this field.",
          "type": "string",
          "x-ms-summary": "Capability Display Unit"
        },
        "maxMultiplicity": {
          "description": "The maximum multiplicity for this relationship.",
          "type": "integer",
          "x-ms-summary": "Relationship Max Multiplicity"
        },
        "name": {
          "description": "The programmatic name of the capability.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "request": {
          "$ref": "#/definitions/SchemaField",
          "description": "The request definition for this command.",
          "x-ms-summary": "Command Request"
        },
        "response": {
          "$ref": "#/definitions/SchemaField",
          "description": "The response definition for this command.",
          "x-ms-summary": "Command Response"
        },
        "schema": {
          "description": "The schema of this field.",
          "x-ms-summary": "Capability Schema"
        },
        "target": {
          "description": "The target capability models for this relationship.",
          "items": {},
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Relationship Target(s)"
        },
        "unit": {
          "description": "The unit of this field.",
          "type": "string",
          "x-ms-summary": "Capability Unit"
        },
        "writable": {
          "description": "Whether this property is writable.",
          "type": "boolean",
          "x-ms-summary": "Property Writable"
        }
      },
      "required": [
        "@type",
        "name"
      ],
      "type": "object"
    },
    "CapabilityModel": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the capability model.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the capability model.",
          "type": "string",
          "x-ms-summary": "Capability Model ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the capability model.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Capability Model Type"
        },
        "comment": {
          "description": "Developer comment about the capability model.",
          "type": "string",
          "x-ms-summary": "Capability Model Comment"
        },
        "contents": {
          "description": "The data definitions contained by the interface.",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "type": "array",
          "x-ms-summary": "Contents"
        },
        "description": {
          "description": "Detailed description of the capability model.",
          "type": "string",
          "x-ms-summary": "Capability Model Description"
        },
        "displayName": {
          "description": "Display name of the capability model.",
          "type": "string",
          "x-ms-summary": "Capability Model Name"
        },
        "implements": {
          "description": "The component implemented by the capability model.",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "type": "array",
          "x-ms-summary": "Implements"
        }
      },
      "required": [
        "@type"
      ],
      "type": "object"
    },
    "CapabilityReference": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the capability reference.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the capability reference.",
          "type": "string",
          "x-ms-summary": "Capability Reference ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the capability reference.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Capability Reference Type"
        },
        "comment": {
          "description": "Developer comment about the capability reference.",
          "type": "string",
          "x-ms-summary": "Capability Reference Comment"
        },
        "component": {
          "description": "The name of the component being referenced.",
          "type": "string",
          "x-ms-summary": "Component"
        },
        "description": {
          "description": "Detailed description of the capability reference.",
          "type": "string",
          "x-ms-summary": "Capability Reference Description"
        },
        "displayName": {
          "description": "Display name of the capability reference.",
          "type": "string",
          "x-ms-summary": "Capability Reference Name"
        },
        "reference": {
          "description": "The name of the capability being referenced.",
          "type": "string",
          "x-ms-summary": "Reference"
        }
      },
      "required": [
        "@type",
        "component",
        "reference"
      ],
      "type": "object"
    },
    "Component": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the component.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the component.",
          "type": "string",
          "x-ms-summary": "Component ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the component.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Component Type"
        },
        "comment": {
          "description": "Developer comment about the component.",
          "type": "string",
          "x-ms-summary": "Component Comment"
        },
        "description": {
          "description": "Detailed description of the component.",
          "type": "string",
          "x-ms-summary": "Component Description"
        },
        "displayName": {
          "description": "Display name of the component.",
          "type": "string",
          "x-ms-summary": "Component Name"
        },
        "name": {
          "description": "The programmatic name of the component.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "schema": {
          "$ref": "#/definitions/Interface",
          "description": "The interface used by this component.",
          "x-ms-summary": "Interface"
        }
      },
      "required": [
        "@type",
        "name",
        "schema"
      ],
      "type": "object"
    },
    "ContinuousDataExport": {
      "properties": {
        "displayName": {
          "description": "Display name of the continuous data export.",
          "type": "string",
          "x-ms-summary": "Continuous Data Export Name"
        },
        "enabled": {
          "description": "Boolean indicating whether the continuous data export should be running or not.",
          "type": "boolean",
          "x-ms-summary": "Enabled"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "Location where exported data should be sent.",
          "x-ms-summary": "Endpoint"
        },
        "etag": {
          "description": "ETag used to prevent conflict in continuous data export updates.",
          "type": "string",
          "x-ms-summary": "Continuous Data Export ETag",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "Unique ID of the continuous data export.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Continuous Data Export ID",
          "x-ms-visibility": "advanced"
        },
        "sources": {
          "description": "Data sources to export to the endpoint.",
          "items": {
            "enum": [
              "devices",
              "deviceTemplates",
              "telemetry"
            ],
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Sources"
        },
        "status": {
          "description": "Indicates whether the continuous data export is starting, running, etc.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Status"
        }
      },
      "required": [
        "endpoint",
        "enabled",
        "sources"
      ],
      "type": "object"
    },
    "ContinuousDataExportCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of continuous data exports.",
          "type": "string"
        },
        "value": {
          "description": "The collection of continuous data exports.",
          "items": {
            "$ref": "#/definitions/ContinuousDataExport"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Device": {
      "properties": {
        "approved": {
          "description": "Whether the device has been approved to connect to IoT Central.",
          "type": "boolean",
          "x-ms-summary": "Approved"
        },
        "description": {
          "description": "Detailed description of the device.",
          "type": "string",
          "x-ms-summary": "Device Description"
        },
        "displayName": {
          "description": "Display name of the device.",
          "type": "string",
          "x-ms-summary": "Device Name"
        },
        "etag": {
          "description": "ETag used to prevent conflict in device updates.",
          "type": "string",
          "x-ms-summary": "Device ETag",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "Unique ID of the device.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Device ID",
          "x-ms-visibility": "advanced"
        },
        "instanceOf": {
          "description": "The device template definition for the device.",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "DeviceTemplates_List",
            "parameters": {
              "application": {
                "parameter": "application"
              }
            },
            "value-collection": "value",
            "value-path": "id",
            "value-title": "displayName"
          },
          "x-ms-summary": "Device Template"
        },
        "provisioned": {
          "description": "Whether resources have been allocated for the device.",
          "readOnly": true,
          "type": "boolean",
          "x-ms-summary": "Provisioned"
        },
        "simulated": {
          "description": "Whether the device is simulated.",
          "type": "boolean",
          "x-ms-summary": "Simulated"
        }
      },
      "type": "object"
    },
    "DeviceCloudProperties": {
      "description": "Cloud property values associated with the device.",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema_DeviceCloudProperties",
        "parameters": {
          "application": {
            "parameter": "application"
          },
          "instanceOf": {
            "parameter": "instanceOf"
          }
        }
      },
      "x-ms-summary": "Device Cloud Properties"
    },
    "DeviceCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of devices.",
          "type": "string"
        },
        "value": {
          "description": "The collection of devices.",
          "items": {
            "$ref": "#/definitions/Device"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DeviceCommand": {
      "properties": {
        "id": {
          "description": "The request ID of the device command execution.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Device Command Request ID"
        },
        "request": {
          "description": "The payload for the device command.",
          "x-ms-summary": "Device Command Request Payload"
        },
        "response": {
          "description": "The payload of the device command response.",
          "readOnly": true,
          "x-ms-summary": "Device Command Response Payload"
        },
        "responseCode": {
          "description": "The status code of the device command response.",
          "readOnly": true,
          "type": "integer",
          "x-ms-summary": "Device Command Response Status"
        }
      },
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema_DeviceCommand",
        "parameters": {
          "application": {
            "parameter": "application"
          },
          "component": {
            "parameter": "component_name"
          },
          "instanceOf": {
            "parameter": "instanceOf"
          },
          "name": {
            "parameter": "command_name"
          }
        }
      }
    },
    "DeviceCommandCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of device command executions.",
          "type": "string"
        },
        "value": {
          "description": "The collection of device command executions.",
          "items": {
            "$ref": "#/definitions/DeviceCommand"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DeviceCredentials": {
      "properties": {
        "idScope": {
          "description": "ID scope for connecting to device provisioning service.",
          "type": "string",
          "x-ms-summary": "ID Scope"
        },
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey",
          "description": "The symmetric key credentials for the device.",
          "x-ms-summary": "Symmetric Key"
        },
        "tpm": {
          "$ref": "#/definitions/Tpm",
          "description": "The TPM credentials for the device.",
          "x-ms-summary": "TPM"
        },
        "x509": {
          "$ref": "#/definitions/X509",
          "description": "The X.509 credential information for the device.",
          "x-ms-summary": "X.509 Certificate"
        }
      },
      "required": [
        "idScope"
      ],
      "type": "object"
    },
    "DeviceProperties": {
      "description": "Property values associated with the device.",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema_DeviceProperties",
        "parameters": {
          "application": {
            "parameter": "application"
          },
          "instanceOf": {
            "parameter": "instanceOf"
          }
        }
      },
      "x-ms-summary": "Device Properties"
    },
    "DeviceTelemetry": {
      "properties": {
        "timestamp": {
          "description": "String-formatted date representing the time when the telemetry value was sent.",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Timestamp"
        },
        "value": {
          "description": "The last known value of this device telemetry.",
          "x-ms-summary": "Value"
        }
      },
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema_DeviceTelemetry",
        "parameters": {
          "application": {
            "parameter": "application"
          },
          "component": {
            "parameter": "component_name"
          },
          "instanceOf": {
            "parameter": "instanceOf"
          },
          "name": {
            "parameter": "telemetry_name"
          }
        }
      }
    },
    "DeviceTemplate": {
      "properties": {
        "capabilityModel": {
          "$ref": "#/definitions/CapabilityModel",
          "description": "The capability model utilized by this device template.",
          "x-ms-summary": "Device Template Capability Model"
        },
        "description": {
          "description": "Detailed description of the device template.",
          "type": "string",
          "x-ms-summary": "Device Template Description"
        },
        "displayName": {
          "description": "Display name of the device template.",
          "type": "string",
          "x-ms-summary": "Device Template Name"
        },
        "etag": {
          "description": "ETag used to prevent conflict in device template updates.",
          "type": "string",
          "x-ms-summary": "Device Template ETag",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "Unique ID of the device template.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Device Template ID",
          "x-ms-visibility": "advanced"
        },
        "solutionModel": {
          "$ref": "#/definitions/SolutionModel",
          "description": "The solution model utilized by this device template.",
          "x-ms-summary": "Device Template Solution Model"
        },
        "types": {
          "description": "The types of device to which this template applies.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-summary": "Device Template Types"
        }
      },
      "required": [
        "types",
        "capabilityModel"
      ],
      "type": "object"
    },
    "DeviceTemplateCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of device templates.",
          "type": "string"
        },
        "value": {
          "description": "The collection of device templates.",
          "items": {
            "$ref": "#/definitions/DeviceTemplate"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DynamicValues": {
      "items": {
        "properties": {
          "title": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "EmailAction": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the email action.",
          "type": "string",
          "x-ms-summary": "Email Action Name"
        },
        "id": {
          "description": "Unique ID of the email action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Email Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the email action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "default": "EmailAction",
          "description": "Type of the email action.",
          "enum": [
            "EmailAction"
          ],
          "type": "string",
          "x-ms-summary": "Email Action Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "rules"
      ],
      "type": "object"
    },
    "Endpoint": {
      "discriminator": "type",
      "properties": {
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string",
          "x-ms-summary": "Connection String"
        },
        "name": {
          "description": "Name of the entity to send data to.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "type": {
          "description": "Type of the endpoint.",
          "enum": [
            "StorageEndpoint",
            "EventHubsEndpoint",
            "ServiceBusQueueEndpoint",
            "ServiceBusTopicEndpoint"
          ],
          "type": "string",
          "x-ms-summary": "Endpoint Type"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "type": "object"
    },
    "Entity": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the entity.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the entity.",
          "type": "string",
          "x-ms-summary": "Entity ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the entity.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Entity Type"
        },
        "comment": {
          "description": "Developer comment about the entity.",
          "type": "string",
          "x-ms-summary": "Entity Comment"
        },
        "description": {
          "description": "Detailed description of the entity.",
          "type": "string",
          "x-ms-summary": "Entity Description"
        },
        "displayName": {
          "description": "Display name of the entity.",
          "type": "string",
          "x-ms-summary": "Entity Name"
        }
      },
      "required": [
        "@type"
      ],
      "type": "object"
    },
    "EnumSchema": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the enum schema.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the enum schema.",
          "type": "string",
          "x-ms-summary": "Enum Schema ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the enum schema.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Enum Schema Type"
        },
        "comment": {
          "description": "Developer comment about the enum schema.",
          "type": "string",
          "x-ms-summary": "Enum Schema Comment"
        },
        "description": {
          "description": "Detailed description of the enum schema.",
          "type": "string",
          "x-ms-summary": "Enum Schema Description"
        },
        "displayName": {
          "description": "Display name of the enum schema.",
          "type": "string",
          "x-ms-summary": "Enum Schema Name"
        },
        "enumValues": {
          "description": "The discreet named values of this enum type.",
          "items": {
            "$ref": "#/definitions/EnumValue"
          },
          "type": "array",
          "x-ms-summary": "Enum Values"
        },
        "valueSchema": {
          "description": "The schema for values of this enum type.",
          "x-ms-summary": "Value Schema"
        }
      },
      "required": [
        "@type",
        "valueSchema",
        "enumValues"
      ],
      "type": "object"
    },
    "EnumValue": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the enum value.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the enum value.",
          "type": "string",
          "x-ms-summary": "Enum Value ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the enum value.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Enum Value Type"
        },
        "comment": {
          "description": "Developer comment about the enum value.",
          "type": "string",
          "x-ms-summary": "Enum Value Comment"
        },
        "description": {
          "description": "Detailed description of the enum value.",
          "type": "string",
          "x-ms-summary": "Enum Value Description"
        },
        "displayName": {
          "description": "Display name of the enum value.",
          "type": "string",
          "x-ms-summary": "Enum Value Name"
        },
        "enumValue": {
          "description": "The resolved value of this enum entry.",
          "x-ms-summary": "Enum Value"
        },
        "name": {
          "description": "The programmatic name of the enum value.",
          "type": "string",
          "x-ms-summary": "Name"
        }
      },
      "required": [
        "@type",
        "name",
        "enumValue"
      ],
      "type": "object"
    },
    "EventHubsEndpoint": {
      "discriminator": "type",
      "properties": {
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string",
          "x-ms-summary": "Connection String"
        },
        "name": {
          "description": "Name of the event hub to send data to.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "type": {
          "default": "EventHubsEndpoint",
          "description": "Type of the Event Hubs endpoint.",
          "enum": [
            "EventHubsEndpoint"
          ],
          "type": "string",
          "x-ms-summary": "Event Hubs Endpoint Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "type": "object"
    },
    "InitialValue": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the initial value.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the initial value.",
          "type": "string",
          "x-ms-summary": "Initial Value ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the initial value.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Initial Value Type"
        },
        "capability": {
          "$ref": "#/definitions/CapabilityReference",
          "description": "The reference to the capability for which an initial value is being provided.",
          "x-ms-summary": "Capability"
        },
        "comment": {
          "description": "Developer comment about the initial value.",
          "type": "string",
          "x-ms-summary": "Initial Value Comment"
        },
        "description": {
          "description": "Detailed description of the initial value.",
          "type": "string",
          "x-ms-summary": "Initial Value Description"
        },
        "displayName": {
          "description": "Display name of the initial value.",
          "type": "string",
          "x-ms-summary": "Initial Value Name"
        },
        "value": {
          "description": "The initial value of the capability.",
          "x-ms-summary": "Initial Value"
        }
      },
      "required": [
        "@type",
        "capability",
        "value"
      ],
      "type": "object"
    },
    "Interface": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the interface.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the interface.",
          "type": "string",
          "x-ms-summary": "Interface ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the interface.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Interface Type"
        },
        "comment": {
          "description": "Developer comment about the interface.",
          "type": "string",
          "x-ms-summary": "Interface Comment"
        },
        "contents": {
          "description": "The data definitions contained by the interface.",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "type": "array",
          "x-ms-summary": "Contents"
        },
        "description": {
          "description": "Detailed description of the interface.",
          "type": "string",
          "x-ms-summary": "Interface Description"
        },
        "displayName": {
          "description": "Display name of the interface.",
          "type": "string",
          "x-ms-summary": "Interface Name"
        }
      },
      "required": [
        "@type"
      ],
      "type": "object"
    },
    "LogicAppsAction": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the Logic Apps action.",
          "type": "string",
          "x-ms-summary": "Logic Apps Action Name"
        },
        "id": {
          "description": "Unique ID of the Logic Apps action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Logic Apps Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the Logic Apps action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "default": "LogicAppsAction",
          "description": "Type of the Logic Apps action.",
          "enum": [
            "LogicAppsAction"
          ],
          "type": "string",
          "x-ms-summary": "Logic Apps Action Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "rules"
      ],
      "type": "object"
    },
    "MapSchema": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the map schema.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the map schema.",
          "type": "string",
          "x-ms-summary": "Map Schema ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the map schema.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Map Schema Type"
        },
        "comment": {
          "description": "Developer comment about the map schema.",
          "type": "string",
          "x-ms-summary": "Map Schema Comment"
        },
        "description": {
          "description": "Detailed description of the map schema.",
          "type": "string",
          "x-ms-summary": "Map Schema Description"
        },
        "displayName": {
          "description": "Display name of the map schema.",
          "type": "string",
          "x-ms-summary": "Map Schema Name"
        },
        "mapKey": {
          "description": "The schema for keys of this map type.",
          "x-ms-summary": "Map Key"
        },
        "mapValue": {
          "description": "The schema for values of this map type.",
          "x-ms-summary": "Map Value"
        }
      },
      "required": [
        "@type",
        "mapKey",
        "mapValue"
      ],
      "type": "object"
    },
    "NamedEntity": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the named entity.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the named entity.",
          "type": "string",
          "x-ms-summary": "Named Entity ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the named entity.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Named Entity Type"
        },
        "comment": {
          "description": "Developer comment about the named entity.",
          "type": "string",
          "x-ms-summary": "Named Entity Comment"
        },
        "description": {
          "description": "Detailed description of the named entity.",
          "type": "string",
          "x-ms-summary": "Named Entity Description"
        },
        "displayName": {
          "description": "Display name of the named entity.",
          "type": "string",
          "x-ms-summary": "Named Entity Name"
        },
        "name": {
          "description": "The programmatic name of the named entity.",
          "type": "string",
          "x-ms-summary": "Name"
        }
      },
      "required": [
        "@type",
        "name"
      ],
      "type": "object"
    },
    "ObjectSchema": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the object schema.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the object schema.",
          "type": "string",
          "x-ms-summary": "Object Schema ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the object schema.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Object Schema Type"
        },
        "comment": {
          "description": "Developer comment about the object schema.",
          "type": "string",
          "x-ms-summary": "Object Schema Comment"
        },
        "description": {
          "description": "Detailed description of the object schema.",
          "type": "string",
          "x-ms-summary": "Object Schema Description"
        },
        "displayName": {
          "description": "Display name of the object schema.",
          "type": "string",
          "x-ms-summary": "Object Schema Name"
        },
        "fields": {
          "description": "The property fields of this object type.",
          "items": {
            "$ref": "#/definitions/SchemaField"
          },
          "type": "array",
          "x-ms-summary": "Fields"
        }
      },
      "required": [
        "@type",
        "fields"
      ],
      "type": "object"
    },
    "Override": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the override.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the override.",
          "type": "string",
          "x-ms-summary": "Override ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the override.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Override Type"
        },
        "capability": {
          "$ref": "#/definitions/CapabilityReference",
          "description": "The reference to the capability which is being overridden.",
          "x-ms-summary": "Capability"
        },
        "comment": {
          "description": "Developer comment about the override.",
          "type": "string",
          "x-ms-summary": "Override Comment"
        },
        "description": {
          "description": "Detailed description of the override.",
          "type": "string",
          "x-ms-summary": "Override Description"
        },
        "displayName": {
          "description": "Display name of the override.",
          "type": "string",
          "x-ms-summary": "Override Name"
        },
        "displayUnit": {
          "description": "The overridden display unit for the referenced capability.",
          "type": "string",
          "x-ms-summary": "Display Unit"
        },
        "semanticType": {
          "description": "The overridden semantic type for the referenced capability.",
          "type": "string",
          "x-ms-summary": "Semantic Type"
        },
        "unit": {
          "description": "The overridden unit for the referenced capability.",
          "type": "string",
          "x-ms-summary": "Unit"
        },
        "valueDetail": {
          "$ref": "#/definitions/ValueDetail",
          "description": "Visualization details for the referenced capability.",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "@type",
        "capability"
      ],
      "type": "object"
    },
    "Permission": {
      "properties": {
        "roles": {
          "description": "Roles that the permission has been granted permission to.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Roles"
        }
      },
      "required": [
        "roles"
      ],
      "type": "object"
    },
    "PowerAutomateAction": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the Power Automate action.",
          "type": "string",
          "x-ms-summary": "Power Automate Action Name"
        },
        "id": {
          "description": "Unique ID of the Power Automate action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Power Automate Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the Power Automate action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "default": "PowerAutomateAction",
          "description": "Type of the Power Automate action.",
          "enum": [
            "PowerAutomateAction"
          ],
          "type": "string",
          "x-ms-summary": "Power Automate Action Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "rules"
      ],
      "type": "object"
    },
    "Role": {
      "properties": {
        "displayName": {
          "description": "Display name of the role.",
          "type": "string",
          "x-ms-summary": "Role Name"
        },
        "id": {
          "description": "Unique ID of the role.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Role ID",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "RoleCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of roles.",
          "type": "string"
        },
        "value": {
          "description": "The collection of roles.",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Rule": {
      "properties": {
        "displayName": {
          "description": "Display name of the rule.",
          "type": "string",
          "x-ms-summary": "Rule Name"
        },
        "id": {
          "description": "Unique ID of the rule.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Rule ID",
          "x-ms-visibility": "advanced"
        }
      },
      "type": "object"
    },
    "RuleCollection": {
      "properties": {
        "nextLink": {
          "description": "URL to get the next page of rules.",
          "type": "string"
        },
        "value": {
          "description": "The collection of rules.",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "SchemaField": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the schema field.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the schema field.",
          "type": "string",
          "x-ms-summary": "Schema Field ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the schema field.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Schema Field Type"
        },
        "comment": {
          "description": "Developer comment about the schema field.",
          "type": "string",
          "x-ms-summary": "Schema Field Comment"
        },
        "description": {
          "description": "Detailed description of the schema field.",
          "type": "string",
          "x-ms-summary": "Schema Field Description"
        },
        "displayName": {
          "description": "Display name of the schema field.",
          "type": "string",
          "x-ms-summary": "Schema Field Name"
        },
        "displayUnit": {
          "description": "The display name of the unit of this field.",
          "type": "string",
          "x-ms-summary": "Display Unit"
        },
        "name": {
          "description": "The programmatic name of the schema field.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "schema": {
          "description": "The schema of this field.",
          "x-ms-summary": "Schema"
        },
        "unit": {
          "description": "The unit of this field.",
          "type": "string",
          "x-ms-summary": "Unit"
        }
      },
      "required": [
        "@type",
        "name",
        "schema"
      ],
      "type": "object"
    },
    "ServiceBusQueueEndpoint": {
      "discriminator": "type",
      "properties": {
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string",
          "x-ms-summary": "Connection String"
        },
        "name": {
          "description": "Name of the queue to send data to.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "type": {
          "default": "ServiceBusQueueEndpoint",
          "description": "Type of the Service Bus queue endpoint.",
          "enum": [
            "ServiceBusQueueEndpoint"
          ],
          "type": "string",
          "x-ms-summary": "Service Bus Queue Endpoint Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "type": "object"
    },
    "ServiceBusTopicEndpoint": {
      "discriminator": "type",
      "properties": {
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string",
          "x-ms-summary": "Connection String"
        },
        "name": {
          "description": "Name of the topic to send data to.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "type": {
          "default": "ServiceBusTopicEndpoint",
          "description": "Type of the Service Bus topic endpoint.",
          "enum": [
            "ServiceBusTopicEndpoint"
          ],
          "type": "string",
          "x-ms-summary": "Service Bus Topic Endpoint Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "type": "object"
    },
    "SolutionModel": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the solution model.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the solution model.",
          "type": "string",
          "x-ms-summary": "Solution Model ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the solution model.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Solution Model Type"
        },
        "cloudProperties": {
          "description": "The cloud properties defined by the solution model.",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "type": "array",
          "x-ms-summary": "Cloud Properties"
        },
        "comment": {
          "description": "Developer comment about the solution model.",
          "type": "string",
          "x-ms-summary": "Solution Model Comment"
        },
        "description": {
          "description": "Detailed description of the solution model.",
          "type": "string",
          "x-ms-summary": "Solution Model Description"
        },
        "displayName": {
          "description": "Display name of the solution model.",
          "type": "string",
          "x-ms-summary": "Solution Model Name"
        },
        "initialValues": {
          "description": "The initial values defined by the solution model.",
          "items": {
            "$ref": "#/definitions/InitialValue"
          },
          "type": "array",
          "x-ms-summary": "Initial Values"
        },
        "overrides": {
          "description": "The overrides defined by the solution model.",
          "items": {
            "$ref": "#/definitions/Override"
          },
          "type": "array",
          "x-ms-summary": "Overrides"
        }
      },
      "required": [
        "@type"
      ],
      "type": "object"
    },
    "StorageEndpoint": {
      "discriminator": "type",
      "properties": {
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string",
          "x-ms-summary": "Connection String"
        },
        "name": {
          "description": "Name of the container to send data to.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "type": {
          "default": "StorageEndpoint",
          "description": "Type of the storage endpoint.",
          "enum": [
            "StorageEndpoint"
          ],
          "type": "string",
          "x-ms-summary": "Storage Endpoint Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "type": "object"
    },
    "SymmetricKey": {
      "properties": {
        "primaryKey": {
          "description": "The primary key for this credential.",
          "type": "string",
          "x-ms-summary": "Primary Key"
        },
        "secondaryKey": {
          "description": "The secondary key for this credential.",
          "type": "string",
          "x-ms-summary": "Secondary Key"
        }
      },
      "required": [
        "primaryKey",
        "secondaryKey"
      ],
      "type": "object"
    },
    "SymmetricKeyAttestation": {
      "discriminator": "type",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey",
          "description": "The symmetric key credentials for this attestation.",
          "x-ms-summary": "Symmetric Key"
        },
        "type": {
          "default": "SymmetricKeyAttestation",
          "description": "Type of the symmetric-key attestation.",
          "enum": [
            "SymmetricKeyAttestation"
          ],
          "type": "string",
          "x-ms-summary": "Symmetric-Key Attestation Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "symmetricKey"
      ],
      "type": "object"
    },
    "Tpm": {
      "properties": {
        "endorsementKey": {
          "description": "The TPM endorsement key for this credential.",
          "type": "string",
          "x-ms-summary": "TPM Endorsement Key"
        }
      },
      "required": [
        "endorsementKey"
      ],
      "type": "object"
    },
    "TpmAttestation": {
      "discriminator": "type",
      "properties": {
        "tpm": {
          "$ref": "#/definitions/Tpm",
          "description": "The TPM credentials for this attestation.",
          "x-ms-summary": "TPM"
        },
        "type": {
          "default": "TpmAttestation",
          "description": "Type of the TPM attestation.",
          "enum": [
            "TpmAttestation"
          ],
          "type": "string",
          "x-ms-summary": "TPM Attestation Type",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "type",
        "tpm"
      ],
      "type": "object"
    },
    "ValueDetail": {
      "properties": {
        "@context": {
          "description": "JSON-LD context for the value detail.",
          "x-ms-visibility": "internal"
        },
        "@id": {
          "description": "Unique ID of the value detail.",
          "type": "string",
          "x-ms-summary": "Value Detail ID",
          "x-ms-visibility": "advanced"
        },
        "@type": {
          "description": "Type of the value detail.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Value Detail Type"
        },
        "comment": {
          "description": "Developer comment about the value detail.",
          "type": "string",
          "x-ms-summary": "Value Detail Comment"
        },
        "decimalPlaces": {
          "description": "The number of decimal places that should be displayed for the number.",
          "type": "integer",
          "x-ms-summary": "Number Decimal Places"
        },
        "description": {
          "description": "Detailed description of the value detail.",
          "type": "string",
          "x-ms-summary": "Value Detail Description"
        },
        "displayName": {
          "description": "Display name of the value detail.",
          "type": "string",
          "x-ms-summary": "Value Detail Name"
        },
        "falseName": {
          "description": "The string representation of a false value.",
          "type": "string",
          "x-ms-summary": "Boolean False Name"
        },
        "hideTime": {
          "description": "Specifies that the time portion of the date-time value should be hidden.",
          "type": "boolean",
          "x-ms-summary": "Date-Time Hide Time"
        },
        "maxLength": {
          "description": "The maximum expected length of the string.",
          "type": "integer",
          "x-ms-summary": "String Max Length"
        },
        "maxValue": {
          "description": "The maximum expected value of the number.",
          "type": "number",
          "x-ms-summary": "Number Max Value"
        },
        "minLength": {
          "description": "The minimum expected length of the string.",
          "type": "integer",
          "x-ms-summary": "String Min Length"
        },
        "minValue": {
          "description": "The minimum expected value of the number.",
          "type": "number",
          "x-ms-summary": "Number Min Value"
        },
        "severity": {
          "description": "Specifies the severity of the event.",
          "enum": [
            "error",
            "warning",
            "information"
          ],
          "type": "string",
          "x-ms-summary": "Event Severity"
        },
        "trimWhitespace": {
          "description": "Specifies the visual and storage treatment of whitespaces in the string.",
          "type": "boolean",
          "x-ms-summary": "String Trim Whitespace"
        },
        "trueName": {
          "description": "The string representation of a true value.",
          "type": "string",
          "x-ms-summary": "Boolean True Name"
        }
      },
      "required": [
        "@type"
      ],
      "type": "object"
    },
    "WebhookAction": {
      "discriminator": "type",
      "properties": {
        "displayName": {
          "description": "Display name of the webhook action.",
          "type": "string",
          "x-ms-summary": "Webhook Action Name"
        },
        "id": {
          "description": "Unique ID of the webhook action.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Webhook Action ID",
          "x-ms-visibility": "advanced"
        },
        "rules": {
          "description": "Unique IDs of the rules that are tied to the webhook action.",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Rules"
        },
        "type": {
          "default": "WebhookAction",
          "description": "Type of the webhook action.",
          "enum": [
            "WebhookAction"
          ],
          "type": "string",
          "x-ms-summary": "Webhook Action Type",
          "x-ms-visibility": "internal"
        },
        "url": {
          "description": "Callback URL of the webhook.",
          "format": "uri",
          "type": "string",
          "x-ms-summary": "Webhook URL"
        }
      },
      "required": [
        "type",
        "rules",
        "url"
      ],
      "type": "object"
    },
    "WebhookActionBody": {
      "properties": {
        "action": {
          "$ref": "#/definitions/Action",
          "description": "Action that triggered the webhook.",
          "x-ms-summary": "Webhook Action"
        },
        "application": {
          "$ref": "#/definitions/Application",
          "description": "Application that triggered the webhook.",
          "x-ms-summary": "Webhook Application"
        },
        "device": {
          "$ref": "#/definitions/WebhookActionDevice",
          "description": "Device that triggered the webhook.",
          "x-ms-summary": "Webhook Device"
        },
        "rule": {
          "$ref": "#/definitions/Rule",
          "description": "Rule that triggered the webhook.",
          "x-ms-summary": "Webhook Rule"
        },
        "timestamp": {
          "description": "Timestamp at which the webhook was triggered.",
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Webhook Timespamp"
        }
      },
      "required": [
        "action",
        "application",
        "device",
        "rule",
        "timestamp"
      ],
      "type": "object",
      "x-ms-dynamic-properties": {
        "operationId": "Schema_WebhookActionBody",
        "parameters": {
          "application": {
            "parameterReference": "application"
          },
          "rule": {
            "parameterReference": "body/rule"
          }
        }
      },
      "x-ms-dynamic-schema": {
        "operationId": "Schema_WebhookActionBody",
        "parameters": {
          "application": {
            "parameter": "application"
          },
          "rule": {
            "parameter": "rule"
          }
        }
      }
    },
    "WebhookActionDevice": {
      "properties": {
        "approved": {
          "description": "Whether the device has been approved to connect to IoT Central.",
          "type": "boolean",
          "x-ms-summary": "Approved"
        },
        "cloudProperties": {
          "description": "Cloud properties that triggered the webhook.",
          "type": "object",
          "x-ms-summary": "Cloud Properties"
        },
        "description": {
          "description": "Detailed description of the device.",
          "type": "string",
          "x-ms-summary": "Device Description"
        },
        "displayName": {
          "description": "Display name of the device.",
          "type": "string",
          "x-ms-summary": "Device Name"
        },
        "etag": {
          "description": "ETag used to prevent conflict in device updates.",
          "type": "string",
          "x-ms-summary": "Device ETag",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "Unique ID of the device.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Device ID",
          "x-ms-visibility": "advanced"
        },
        "instanceOf": {
          "description": "The device template definition for the device.",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "DeviceTemplates_List",
            "parameters": {
              "application": {
                "parameter": "application"
              }
            },
            "value-collection": "value",
            "value-path": "id",
            "value-title": "displayName"
          },
          "x-ms-summary": "Device Template"
        },
        "properties": {
          "description": "Device properties that triggered the webhook.",
          "type": "object",
          "x-ms-summary": "Properties"
        },
        "provisioned": {
          "description": "Whether resources have been allocated for the device.",
          "readOnly": true,
          "type": "boolean",
          "x-ms-summary": "Provisioned"
        },
        "simulated": {
          "description": "Whether the device is simulated.",
          "type": "boolean",
          "x-ms-summary": "Simulated"
        },
        "telemetry": {
          "description": "Device telemetry that triggered the webhook.",
          "type": "object",
          "x-ms-summary": "Telemetry"
        }
      },
      "type": "object"
    },
    "WorkflowTrigger": {
      "properties": {
        "id": {
          "description": "Unique ID of the workflow trigger.",
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Workflow Trigger ID",
          "x-ms-visibility": "advanced"
        },
        "rule": {
          "description": "Unique ID of the rule that is tied to the workflow trigger.",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "Rules_List",
            "parameters": {
              "application": {
                "parameter": "application"
              }
            },
            "value-collection": "value",
            "value-path": "id",
            "value-title": "displayName"
          },
          "x-ms-summary": "Rule"
        },
        "url": {
          "description": "Callback URL of the workflow Trigger.",
          "format": "uri",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-summary": "Workflow Trigger URL"
        }
      },
      "required": [
        "rule",
        "url"
      ],
      "type": "object"
    },
    "X509": {
      "properties": {
        "clientCertificates": {
          "$ref": "#/definitions/X509Certificates",
          "description": "The X.509 client certificates for this credential.",
          "x-ms-summary": "X.509 Client Certificates"
        }
      },
      "required": [
        "clientCertificates"
      ],
      "type": "object"
    },
    "X509Attestation": {
      "discriminator": "type",
      "properties": {
        "type": {
          "default": "X509Attestation",
          "description": "Type of the X.509 attestation.",
          "enum": [
            "X509Attestation"
          ],
          "type": "string",
          "x-ms-summary": "X.509 Attestation Type",
          "x-ms-visibility": "internal"
        },
        "x509": {
          "$ref": "#/definitions/X509",
          "description": "The X.509 credentials for this attestation.",
          "x-ms-summary": "X.509"
        }
      },
      "required": [
        "type",
        "x509"
      ],
      "type": "object"
    },
    "X509Certificate": {
      "properties": {
        "certificate": {
          "description": "The string representation of this certificate.",
          "type": "string",
          "x-ms-summary": "X.509 Certificate"
        },
        "info": {
          "$ref": "#/definitions/X509CertificateInfo",
          "description": "Information about this certificate.",
          "readOnly": true,
          "x-ms-summary": "X.509 Certificate Info"
        }
      },
      "type": "object"
    },
    "X509CertificateInfo": {
      "properties": {
        "sha1Thumbprint": {
          "description": "The SHA-1 hash value of the certificate.",
          "type": "string",
          "x-ms-summary": "X.509 Certificate Thumbprint"
        }
      },
      "required": [
        "sha1Thumbprint"
      ],
      "type": "object"
    },
    "X509Certificates": {
      "properties": {
        "primary": {
          "$ref": "#/definitions/X509Certificate",
          "description": "The primary X.509 certificate for this credential.",
          "x-ms-summary": "Primary X.509 Certificate"
        },
        "secondary": {
          "$ref": "#/definitions/X509Certificate",
          "description": "The secondary X.509 certificate for this credential.",
          "x-ms-summary": "Secondary X.509 Certificate"
        }
      },
      "required": [
        "primary"
      ],
      "type": "object"
    }
  },
  "host": "workflow.azureiotcentral.com",
  "info": {
    "description": "Azure IoT Central is an app platform that makes it easy to connect, monitor, and manage your IoT devices at scale. With the IoT Central connector, you can trigger workflows when a rule has fired, and take actions by sending commands, updating properties, getting telemetry on devices, and more.",
    "title": "Azure IoT Central",
    "version": "preview",
    "contact": {
      "name": "Azure IoT Central Technical Support",
      "url": "https://aka.ms/iotcentral-create-technical-support-ticket-trial"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "parameters": {},
  "paths": {
    "/api/preview/_internal/workflow/capabilities": {
      "get": {
        "operationId": "Workflow_GetCapabilities",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "template",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "component",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DynamicValues"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/components": {
      "get": {
        "operationId": "Workflow_GetComponents",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DynamicValues"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/DeviceCloudProperties": {
      "get": {
        "operationId": "Schema_DeviceCloudProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/DeviceCommand": {
      "get": {
        "operationId": "Schema_DeviceCommand",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "component",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/DeviceProperties": {
      "get": {
        "operationId": "Schema_DeviceProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/DeviceTelemetry": {
      "get": {
        "operationId": "Schema_DeviceTelemetry",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "component",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/WebhookActionBody": {
      "get": {
        "operationId": "Schema_WebhookActionBody",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "rule",
            "type": "string"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/schema/{type}": {
      "get": {
        "operationId": "Schema_Definition",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/_internal/workflow/triggers": {
      "post": {
        "description": "Create an action which triggers when a rule is fired in IoT Central.",
        "operationId": "Workflow_CreateTrigger",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "Unique ID of the workflow trigger.",
                  "readOnly": true,
                  "type": "string",
                  "x-ms-summary": "Workflow Trigger ID",
                  "x-ms-visibility": "advanced"
                },
                "rule": {
                  "description": "Unique ID of the rule that is tied to the workflow trigger.",
                  "type": "string",
                  "x-ms-dynamic-values": {
                    "operationId": "Rules_List",
                    "parameters": {
                      "application": {
                        "parameter": "application"
                      }
                    },
                    "value-collection": "value",
                    "value-path": "id",
                    "value-title": "displayName"
                  },
                  "x-ms-summary": "Rule"
                },
                "url": {
                  "description": "Callback URL of the workflow Trigger.",
                  "format": "uri",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Workflow Trigger URL",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "rule",
                "url"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowTrigger"
            }
          }
        },
        "summary": "When a rule is fired",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/WebhookActionBody"
        }
      }
    },
    "/api/preview/_internal/workflow/triggers/{trigger_id}": {
      "delete": {
        "operationId": "Workflow_RemoveTrigger",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "path",
            "name": "trigger_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "Workflow_GetTrigger",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "in": "path",
            "name": "trigger_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowTrigger"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/actions": {
      "get": {
        "operationId": "Actions_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActionCollection"
            }
          }
        },
        "summary": "Get the list of actions in an application",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/actions/{action_id}": {
      "delete": {
        "operationId": "Actions_Remove",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the action.",
            "in": "path",
            "name": "action_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Delete an action",
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "Actions_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the action.",
            "in": "path",
            "name": "action_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        },
        "summary": "Get an action by ID",
        "x-ms-visibility": "internal"
      },
      "put": {
        "description": "Create an action which triggers when a rule is fired in IoT Central.",
        "operationId": "Actions_Set",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the action.",
            "in": "path",
            "name": "action_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action",
            "x-ms-visibility": "important"
          },
          {
            "description": "Action body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        },
        "summary": "Create or update an action",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/apiTokens": {
      "get": {
        "operationId": "ApiTokens_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiTokenCollection"
            }
          }
        },
        "summary": "Get the list of API tokens in an application.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/apiTokens/{token_id}": {
      "delete": {
        "operationId": "ApiTokens_Remove",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the API token.",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "API Token"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Delete an API token.",
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "ApiTokens_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the API token.",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "API Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        },
        "summary": "Get an API token by ID.",
        "x-ms-visibility": "internal"
      },
      "put": {
        "operationId": "ApiTokens_Set",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the API token.",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "API Token"
          },
          {
            "description": "API token body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          }
        },
        "summary": "Create a new API token in the application.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/applications": {
      "get": {
        "operationId": "Applications_List",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationCollection"
            }
          }
        },
        "summary": "Get the list of applications accessible to the signed-in user",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/applications/{application_id}": {
      "get": {
        "operationId": "Applications_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "path",
            "name": "application_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        },
        "summary": "Get an application by ID",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/continuousDataExports": {
      "get": {
        "operationId": "ContinuousDataExports_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContinuousDataExportCollection"
            }
          }
        },
        "summary": "Get the list of continuous data exports in an application.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/continuousDataExports/{export_id}": {
      "delete": {
        "operationId": "ContinuousDataExports_Remove",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the continuous data export.",
            "in": "path",
            "name": "export_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Data export"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Delete a continuous data export.",
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "ContinuousDataExports_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the continuous data export.",
            "in": "path",
            "name": "export_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Data export"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContinuousDataExport"
            }
          }
        },
        "summary": "Get a continuous data export by ID.",
        "x-ms-visibility": "internal"
      },
      "put": {
        "operationId": "ContinuousDataExports_Set",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the continuous data export.",
            "in": "path",
            "name": "export_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Data export"
          },
          {
            "description": "Data export body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousDataExport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContinuousDataExport"
            }
          }
        },
        "summary": "Create a new continuous data export or update an existing one by ID.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/deviceTemplates": {
      "get": {
        "operationId": "DeviceTemplates_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTemplateCollection"
            }
          }
        },
        "summary": "Get the list of device templates in an application",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/deviceTemplates/{device_template_id}": {
      "delete": {
        "description": "Delete an existing device template by device ID.",
        "operationId": "DeviceTemplates_Remove",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device template.",
            "in": "path",
            "name": "device_template_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Delete a device template",
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "DeviceTemplates_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device template.",
            "in": "path",
            "name": "device_template_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTemplate"
            }
          }
        },
        "summary": "Get a device template by ID",
        "x-ms-visibility": "internal"
      },
      "put": {
        "operationId": "DeviceTemplates_Set",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device template.",
            "in": "path",
            "name": "device_template_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device template body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTemplate"
            }
          }
        },
        "summary": "Create or update a device template",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/deviceTemplates/{device_template_id}/devices": {
      "get": {
        "operationId": "DeviceTemplates_ListDevices",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device template.",
            "in": "path",
            "name": "device_template_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCollection"
            }
          }
        },
        "summary": "Get devices for a template",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/deviceTemplates/{device_template_id}/merged": {
      "get": {
        "operationId": "DeviceTemplates_GetMerged",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device template.",
            "in": "path",
            "name": "device_template_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTemplate"
            }
          }
        },
        "summary": "Get a merged device template by ID",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/devices": {
      "get": {
        "operationId": "Devices_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCollection"
            }
          }
        },
        "summary": "Get the list of devices in an application",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/devices/{device_id}": {
      "delete": {
        "description": "Delete an existing device by device ID.",
        "operationId": "Devices_Remove",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Delete a device"
      },
      "get": {
        "description": "Get details about an existing device by device ID.",
        "operationId": "Devices_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "summary": "Get a device by ID"
      },
      "put": {
        "description": "Create a new device or update an existing one by device ID.",
        "operationId": "Devices_Set",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "summary": "Create or update a device"
      }
    },
    "/api/preview/devices/{device_id}/attestation": {
      "delete": {
        "operationId": "Devices_RemoveAttestation",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "summary": "Remove an individual device attestation",
        "x-ms-visibility": "internal"
      },
      "get": {
        "operationId": "Devices_GetAttestation",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Attestation"
            }
          }
        },
        "summary": "Get individual device attestation",
        "x-ms-visibility": "internal"
      },
      "put": {
        "operationId": "Devices_SetAttestation",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Individual device attestation body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attestation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Attestation"
            }
          }
        },
        "summary": "Create or update an individual device attestation",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/devices/{device_id}/cloudProperties": {
      "get": {
        "description": "Get all cloud property values of a device by device ID.",
        "operationId": "Devices_GetCloudProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCloudProperties"
            }
          }
        },
        "summary": "Get device cloud properties"
      },
      "put": {
        "description": "Update all cloud property values of a device by device ID.",
        "operationId": "Devices_UpdateCloudProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device properties.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCloudProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCloudProperties"
            }
          }
        },
        "summary": "Update device cloud properties"
      }
    },
    "/api/preview/devices/{device_id}/components/{component_name}/commands/{command_name}": {
      "get": {
        "operationId": "Devices_GetCommandHistory",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of the device component.",
            "in": "path",
            "name": "component_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetComponents",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "template": {
                  "parameter": "instanceOf"
                }
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Component",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of this device command.",
            "in": "path",
            "name": "command_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetCapabilities",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "component": {
                  "parameter": "component_name"
                },
                "template": {
                  "parameter": "instanceOf"
                },
                "type": "Command"
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Command",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCommandCollection"
            }
          }
        },
        "summary": "Get device command history",
        "x-ms-visibility": "internal"
      },
      "post": {
        "description": "Execute a command on a device.",
        "operationId": "Devices_ExecuteCommand",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of the device component.",
            "in": "path",
            "name": "component_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetComponents",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "template": {
                  "parameter": "instanceOf"
                }
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Component",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of this device command.",
            "in": "path",
            "name": "command_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetCapabilities",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "component": {
                  "parameter": "component_name"
                },
                "template": {
                  "parameter": "instanceOf"
                },
                "type": "Command"
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Command",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device command body.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCommand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCommand"
            }
          }
        },
        "summary": "Execute a device command"
      }
    },
    "/api/preview/devices/{device_id}/components/{component_name}/properties": {
      "get": {
        "operationId": "Devices_GetComponentProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of the device component.",
            "in": "path",
            "name": "component_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetComponents",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "template": {
                  "parameter": "instanceOf"
                }
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Component",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        },
        "summary": "Get device properties for a specific component",
        "x-ms-visibility": "internal"
      },
      "put": {
        "operationId": "Devices_UpdateComponentProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of the device component.",
            "in": "path",
            "name": "component_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetComponents",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "template": {
                  "parameter": "instanceOf"
                }
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Component",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device properties.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        },
        "summary": "Update device properties for a specific component",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/devices/{device_id}/components/{component_name}/telemetry/{telemetry_name}": {
      "get": {
        "description": "Get the telemetry value for a device.",
        "operationId": "Devices_GetTelemetryValue",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of the device component.",
            "in": "path",
            "name": "component_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetComponents",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "template": {
                  "parameter": "instanceOf"
                }
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Component",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Name of this device telemetry.",
            "in": "path",
            "name": "telemetry_name",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Workflow_GetCapabilities",
              "parameters": {
                "application": {
                  "parameter": "application"
                },
                "component": {
                  "parameter": "component_name"
                },
                "template": {
                  "parameter": "instanceOf"
                },
                "type": "Telemetry"
              },
              "value-path": "value",
              "value-title": "title"
            },
            "x-ms-summary": "Device Telemetry",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTelemetry"
            }
          }
        },
        "summary": "Get device telemetry value"
      }
    },
    "/api/preview/devices/{device_id}/credentials": {
      "get": {
        "operationId": "Devices_GetCredentials",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceCredentials"
            }
          }
        },
        "summary": "Get device credentials",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/devices/{device_id}/properties": {
      "get": {
        "description": "Get all property values of a device by device ID.",
        "operationId": "Devices_GetProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        },
        "summary": "Get device properties"
      },
      "put": {
        "description": "Update all property values of a device by device ID.",
        "operationId": "Devices_UpdateProperties",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the device.",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Device",
            "x-ms-visibility": "important"
          },
          {
            "description": "The device template definition for the device.",
            "in": "query",
            "name": "instanceOf",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "DeviceTemplates_List",
              "parameters": {
                "application": {
                  "parameter": "application"
                }
              },
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Device Template",
            "x-ms-visibility": "important"
          },
          {
            "description": "Device properties.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceProperties"
            }
          }
        },
        "summary": "Update device properties"
      }
    },
    "/api/preview/roles": {
      "get": {
        "operationId": "Roles_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleCollection"
            }
          }
        },
        "summary": "Get the list of roles in an application.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/roles/{role_id}": {
      "get": {
        "operationId": "Roles_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID for the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Role"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "summary": "Get a role by ID.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/rules": {
      "get": {
        "operationId": "Rules_List",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RuleCollection"
            }
          }
        },
        "summary": "Get the list of rules in an application",
        "x-ms-visibility": "internal"
      }
    },
    "/api/preview/rules/{rule_id}": {
      "get": {
        "operationId": "Rules_Get",
        "parameters": [
          {
            "description": "Unique ID of the application.",
            "in": "query",
            "name": "application",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "Applications_List",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "displayName"
            },
            "x-ms-summary": "Application",
            "x-ms-visibility": "important"
          },
          {
            "description": "Unique ID of the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Rule",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        },
        "summary": "Get a rule by ID",
        "x-ms-visibility": "internal"
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [],
  "securityDefinitions": {
    "AAD": {
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://login.windows.net/common/oauth2/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://apps.azureiotcentral.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.microsoft.com"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Internet of Things"
    }
  ],
  "tags": []
}