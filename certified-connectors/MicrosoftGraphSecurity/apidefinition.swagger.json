{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Graph Security",
    "description": "The Microsoft Graph Security connector helps to connect different Microsoft and partner security products and services, using a unified schema, to streamline security operations, and improve threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft Graph Security API at https://aka.ms/graphsecuritydocs",
    "version": "1.0"
  },
  "host": "graph.microsoft.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1.0/security/alerts": {
      "get": {
        "description": "Get a list of security alerts for this Azure Active Directory tenant. Use with different query parameters.",
        "summary": "Get alerts",
        "operationId": "GetAlerts",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Alerts count",
                  "description": "The number of alerts returned"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Alert"
                  },
                  "title": "Alerts",
                  "description": "The alerts returned"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "title": "Next link",
                  "description": "A link to get the next results in case there are more results than requested"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorized, get admin access grant"
          }
        },
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "Specify filtering condition for alerts like Severity eq \"High\".",
            "x-ms-summary": "Filter alerts",
            "type": "string"
          },
          {
            "name": "$top",
            "format": "int32",
            "in": "query",
            "required": false,
            "description": "Specify the recent most top number of alerts to retrieve from each provider.",
            "x-ms-summary": "Top alerts",
            "type": "integer"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify alert properties to include in the results.",
            "x-ms-summary": "Select alert properties",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specify sorting order for the results.",
            "x-ms-summary": "Sorting order",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Specify number of results to skip. Useful for pagination.",
            "x-ms-summary": "Skips \"n\" results",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "description": "Specify to include the number of alerts returned in the response",
            "x-ms-summary": "Include count of alerts returned",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-visibility": "advanced"
          }
        ]
      }
    },
    "/v1.0/security/alerts/{alert-id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          }
        },
        "summary": "Get alert by ID",
        "description": "Get a security alert corresponding to the specified ID.",
        "operationId": "GetAlertById",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "alert-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify alert ID.",
            "x-ms-summary": "Alert ID"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "success"
          }
        },
        "summary": "Update alert",
        "description": "Update specific properties of a security alert.",
        "operationId": "UpdateAlert",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "alert-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify alert ID.",
            "x-ms-summary": "Alert ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "assignedTo": {
                  "type": "string",
                  "description": "Specify the name of the analyst the alert is assigned to for triage, investigation, or remediation.",
                  "title": "Assigned to"
                },
                "closedDateTime": {
                  "type": "string",
                  "description": "Specify the time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time.",
                  "title": "Closed dateTime"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specify comments on alert for customer alert management.",
                    "title": "Comments"
                  },
                  "description": "Comments"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Tags",
                  "description": "Specify any user-definable labels that can be applied to an alert and can serve as filter conditions (for example \"HVA\", \"SAW\", etc.)."
                },
                "feedback": {
                  "type": "string",
                  "description": "Specify analyst feedback on the alert.",
                  "enum": [
                    "unknown",
                    "truePositive",
                    "falsePositive",
                    "benignPositive"
                  ],
                  "title": "Feedback"
                },
                "status": {
                  "type": "string",
                  "description": "Specify status to track alert lifecycle status (stage).",
                  "x-ms-visibility": "important",
                  "enum": [
                    "unknown",
                    "newAlert",
                    "inProgress",
                    "resolved"
                  ],
                  "title": "Status"
                },
                "vendorInformation": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "description": "Specific provider (product/service - not vendor company); for example, WindowsDefenderATP.",
                      "title": "Provider name",
                      "x-ms-visibility": "important"
                    },
                    "providerVersion": {
                      "type": "string",
                      "description": "Specify version of the provider or subprovider, if it exists, that generated the alert.",
                      "title": "Provider version"
                    },
                    "subProvider": {
                      "type": "string",
                      "description": "Specific subprovider (under aggregating provider); for example, WindowsDefenderATP.SmartScreen.",
                      "title": "Sub Provider name"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Specify name of the alert vendor (for example, Microsoft, Dell, FireEye).",
                      "title": "Vendor name",
                      "x-ms-visibility": "important"
                    }
                  },
                  "description": "vendorInformation",
                  "required": [
                    "provider",
                    "vendor"
                  ]
                }
              },
              "required": [
                "vendorInformation"
              ]
            }
          }
        ]
      }
    },
    "/v1.0/subscriptions": {
      "get": {
        "summary": "Get active subscriptions",
        "description": "Get the list of unexpired subscriptions for this Azure Active Directory tenant.",
        "operationId": "GetActiveSubscriptions",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Existing subcriptions count",
                  "description": "The number of subcriptions returned"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Subscription"
                  },
                  "title": "Subscription",
                  "description": "The subscription entities returned"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "title": "Next link",
                  "description": "A link to get the next results in case there are more results than requested"
                }
              }
            }
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "summary": "Create subscriptions",
        "operationId": "CreateSubscriptions",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resource": {
                  "type": "string",
                  "description": "Specify the resource that will be monitored for changes. Do not include base URL (https://graph.microsoft.com/v1.0/). Include security/alerts followed by the odata query. For e.g. security/alerts?$filter=status eq 'New'",
                  "title": "Resource URL",
                  "x-ms-visibility": "important"
                },
                "changeType": {
                  "type": "string",
                  "description": "Specify the property type that should raise a notification when changed on the subscribed resource.",
                  "title": "Change type",
                  "x-ms-visibility": "important",
                  "default": "updated"
                },
                "clientState": {
                  "type": "string",
                  "description": "Specify the client state to confirm the notification origination source.",
                  "title": "Client state"
                },
                "notificationUrl": {
                  "type": "string",
                  "description": "Specify a well-formed URL of the endpoint that will receive notifications.",
                  "title": "Notification URL",
                  "x-ms-visibility": "important"
                },
                "expirationDateTime": {
                  "type": "string",
                  "description": "Specify the date time when the webhook subscription expires; needs to be a date time greater than current time and within 30 days.",
                  "title": "Expiration date time",
                  "x-ms-visibility": "important",
                  "format": "date-time",
                  "enum": [
                    "@{addDays(utcnow(), 29)}"
                  ]
                }
              },
              "required": [
                "changeType",
                "expirationDateTime",
                "notificationUrl",
                "resource"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "description": "Create Microsoft Graph webhook subscriptions."
      }
    },
    "/v1.0/subscriptions/{Subscription Id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "deleted"
          }
        },
        "summary": "Delete subscriptions",
        "description": "Delete the specific Microsoft Graph Webhook subscription.",
        "operationId": "DeleteSubscription",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Subscription Id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetActiveSubscriptions",
              "value-path": "id",
              "value-collection": "value",
              "value-title": "resource"
            },
            "description": "Specify the Microsoft Graph Webhook Subscription ID.",
            "x-ms-summary": "Subscription ID"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "summary": "Update subscription",
        "description": "Renew a Microsoft Graph webhook subscription by updating its expiration time.",
        "operationId": "UpdateSubscription",
        "parameters": [
          {
            "name": "Subscription Id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Specify Microsoft Graph Webhook subscription ID.",
            "x-ms-summary": "Subscription ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "expirationDateTime": {
                  "type": "string",
                  "description": "Specify the date and time, in UTC format, of when the Microsoft Graph webhook subscription expires. The maximum expiration time for security alerts is 43200 minutes (under 30 days).",
                  "title": "Expiration date time",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/trigger/v1.0/security/alerts": {
      "get": {
         "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Alerts count",
                  "description": "The number of alerts returned"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Alert"
                  },
                  "title": "Alerts",
                  "description": "The alerts returned"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "title": "Next link",
                  "description": "A link to get the next results in case there are more results than requested"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorized, get admin access grant"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "summary": "On all new alerts",
        "description": "Triggers on all new alerts",
        "operationId": "OnAllNewAlerts",
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-trigger-hint": "Create new alerts to trigger the flow"
      }
    },
   "/trigger/beta/security/alerts": {
      "get": {
        "description": "Triggers on new high severity alerts",
        "operationId": "OnNewHighSeverityAlerts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.count": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Alerts count",
                  "description": "The number of alerts returned"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Alert"
                  },
                  "title": "Alerts",
                  "description": "The alerts returned"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "title": "Next link",
                  "description": "A link to get the next results in case there are more results than requested"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorized, get admin access grant"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
       "summary": "On new high severity alerts",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "Create high severity alerts to trigger the flow",
        "x-ms-trigger-metadata": {
          "kind": "query",
          "mode": "polling"
        },
        "x-ms-visibility": "important"
      }
    }
    },
  "definitions": {
    "Alert": {
      "type": "object",
      "title": "Alert",
      "description": "A single alert entity returned",
      "properties": {
        "azureSubscriptionId": {
          "type": "string",
          "title": "Azure subscription ID",
          "description": "Azure subscription ID, present if this alert is related to an Azure resource."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "description": "User-definable labels that can be applied to an alert and can serve as filter conditions (e.g. \"HVA\", \"SAW\", etc.)."
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Provider-generated GUID/unique identifier."
        },
        "azureTenantId": {
          "type": "string",
          "title": "Azure tenant ID",
          "description": "Azure Active Directory tenant ID."
        },
        "activityGroupName": {
          "type": "string",
          "title": "Activity group name",
          "description": "Name or alias of the activity group (attacker) this alert is attributed to."
        },
        "assignedTo": {
          "type": "string",
          "title": "Assigned to",
          "description": "Name of the analyst the alert is assigned to for triage, investigation, or remediation."
        },
        "category": {
          "type": "string",
          "title": "Category",
          "description": "Category of the alert (e.g. credentialTheft, ransomware, etc.)."
        },
        "closedDateTime": {
          "type": "string",
          "title": "Closed date time",
          "format": "date-time",
          "description": "Time at which the alert was closed (UTC)."
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Comments",
          "description": "Customer-provided comments on alert (for customer alert management)."
        },
        "confidence": {
          "type": "integer",
          "format": "int32",
          "title": "Confidence",
          "description": "Confidence of the detection logic (percentage between 1-100)."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Created date time",
          "description": "Time at which the alert was created (UTC)."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Alert description."
        },
        "detectionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Detection Ids",
          "description": "Set of alerts related to this alert entity."
        },
        "eventDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Event date time",
          "description": "Time at which the event(s) that served as the trigger(s) to generate the alert occurred (UTC)."
        },
        "feedback": {
          "type": "string",
          "title": "Feedback",
          "description": "Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive.",
          "enum": [
            "unknown",
            "truePositive",
            "benignPositive",
            "falsePositive"
          ]
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Last modified date time",
          "description": "Time at which the alert entity was last modified (UTC)."
        },
        "recommendedActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Recommended actions",
          "description": "Vendor/Provider recommended action/s to take as a result of the alert (e.g. isolate machine, enforce2FA, reimage host, etc.)."
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Alert severity - set by vendor/provider. Values: (high, medium, low, Informational) where \"informational\" infers that the alert is not actionable.",
          "enum": [
            "high",
            "medium",
            "low",
            "informational"
          ]
        },
        "sourceMaterials": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Source materials",
          "description": "Hyperlinks (URIs) to the source material related to the alert, e.g. provider investigation UI, etc."
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Alert lifecycle status (stage). Values: (unknown, newAlert, inProgress, resolved).",
          "enum": [
            "unknown",
            "newAlert",
            "inProgress",
            "resolved"
          ]

        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Alert title."
        },
        "vendorInformation": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "title": "Provider name",
              "description": "Specific provider (product/service - not vendor company); for example, WindowsDefenderATP."
            },
            "providerVersion": {
              "type": "string",
              "title": "Provider version",
              "description": "Version of the provider or subprovider."
            },
            "subProvider": {
              "type": "string",
              "title": "Sub provider name",
              "description": "Specific subprovider (under aggregating provider); for example, WindowsDefenderATP.SmartScreen."
            },
            "vendor": {
              "type": "string",
              "title": "Vendor name",
              "description": "Name of the alert vendor (for example, Microsoft, Dell, FireEye)."
            }
          },
          "title": "Vendor Information",
          "description": "Complex Type containing details about the Security product/service vendor, provider, and sub-provider."
        },
        "cloudAppStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Cloud app state",
            "description": "Complex type containing stateful information about the cloud application (destinationServiceName, destinationServiceIp).",
            "properties": {
              "destinationServiceIp": {
                "type": "string",
                "title": "Destination service IP",
                "description": "Destination IP address of the connection to cloud app/service."
              },
              "destinationServiceName": {
                "type": "string",
                "title": "Destination service name",
                "description": "Destination cloud app/service name."
              },
              "riskScore": {
                "type": "string",
                "title": "Risk score",
                "description": "Provider-generated/calculated risk score of the Cloud Application/Service."
              }
            }
          },
          "title": "Cloud app states",
          "description": "Security-related stateful information generated by the provider about the cloud application/s related to this alert."
        },
        "fileStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "File state",
            "description": "Complex type containing information about the file (not process) related to the alert.",
            "properties": {
              "name": {
                "type": "string",
                "title": "Name",
                "description": "File Name (without path)."
              },
              "path": {
                "type": "string",
                "title": "Path",
                "description": "Full file path of the file/imageFile."
              },
              "riskScore": {
                "type": "string",
                "title": "Risk score",
                "description": "Provider generated/calculated risk score of the alert file."
              },
              "fileHash": {
                "type": "object",
                "title": "File hash",
                "description": "Complex type containing file hashes (cryptographic and location-sensitive).",
                "properties": {
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "File hash type. Possible values are: unknown, sha1, sha256, md5, authenticodeHash256, lsHash, ctph, peSha1, peSha256.",
                    "enum": [
                      "Sha1",
                      "Sha256",
                      "MD5",
                      "authenticodeHash256",
                      "LsHash",
                      "CTPH",
                      "peSha1",
                      "peSha256"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "title": "Value",
                    "description": "Value of the file hash."
                  }
                }
              }
            }
          },
          "title": "File states",
          "description": "Security-related stateful information generated by the provider about the file(s) related to this alert."
        },
        "hostStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Host state",
            "description": "Complex type containing stateful information about the host (includes devices, machines, firewalls, etc.).",
            "properties": {
              "fqdn": {
                "type": "string",
                "title": "Fully qualified domain name",
                "description": "Host FQDN (Fully Qualified Domain Name)."
              },
              "isAzureAdJoined": {
                "type": "boolean",
                "title": "Is azureAd joined",
                "description": "True if the host is domain joined to Azure Active Directory Domain Services."
              },
              "isAzureAdRegistered": {
                "type": "boolean",
                "title": "Is azureAd registered",
                "description": "True if the host registered with Azure Active Directory Device Registration (e.g. BYOD) - not fully managed by enterprise."
              },
              "isHybridAzureDomainJoined": {
                "type": "boolean",
                "title": "Is hybrid azure domain joined",
                "description": "True if the host is domain joined to an on-premises Active Directory domain."
              },
              "netBiosName": {
                "type": "string",
                "title": "Net bios name",
                "description": "Local host name without DNS domain name."
              },
              "os": {
                "type": "string",
                "title": "Operating system name",
                "description": "Host Operating System."
              },
              "privateIpAddress": {
                "type": "string",
                "title": "Private IP address",
                "description": "Private (not routable) IPv4 or IPv6 Address at the time of the alert."
              },
              "publicIpAddress": {
                "type": "string",
                "title": "Public IP address",
                "description": "Publicly routable IPv4 or IPv6 Address at time of the alert."
              },
              "riskScore": {
                "type": "string",
                "title": "Risk score",
                "description": "Provider-generated/calculated risk score of the host."
              }
            }
          },
          "title": "Host states",
          "description": "Security-related stateful information generated by the provider about the host(s) related to this alert."
        },
        "malwareStates": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains stateful information about the malware entity.",
            "title": "Malware state",
            "properties": {
              "category": {
                "type": "string",
                "description": "Provider-generated malware category (e.g. trojan, ransomware, etc.).",
                "title": "Category"
              },
              "family": {
                "type": "string",
                "description": "Provider-generated malware family (e.g. \"wannacry\", \"notpetya\", etc.).",
                "title": "Family"
              },
              "name": {
                "type": "string",
                "description": "Provider-generated malware variant name (e.g. Trojan:Win32/Powessere.H).",
                "title": "Name"
              },
              "severity": {
                "type": "string",
                "description": "Provider-determined severity of this malware.",
                "title": "Severity"
              },
              "wasRunning": {
                "type": "boolean",
                "description": "Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.",
                "title": "Was running"
              }
            }
          },
          "title": "Malware states",
          "description": "Security-related stateful information generated by the provider about the malware related to this alert."
        },
        "networkConnections": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Network Connection",
            "description": "Complex type containing stateful information about the network connection related to the alert.",
            "properties": {
              "applicationName": {
                "type": "string",
                "title": "Application name",
                "description": "Name of the application managing the network connection (e.g. Facebook, SMTP, etc.)."
              },
              "destinationAddress": {
                "type": "string",
                "title": "Destination address",
                "description": "Destination IP address of the network connection."
              },
              "destinationDomain": {
                "type": "string",
                "title": "Destination domain",
                "description": "Destination domain portion of the destination URL.(for example \"www.contoso.com\")."
              },
              "destinationPort": {
                "type": "string",
                "title": "Destination port",
                "description": "Destination port of the network connection."
              },
              "destinationUrl": {
                "type": "string",
                "title": "Destination url",
                "description": "Network connection URL/URI string - excluding parameters."
              },
              "direction": {
                "type": "string",
                "title": "Direction",
                "description": "Network connection direction. Possible values are: unknown, inbound, outbound.",
                "enum": [
                  "inbound",
                  "outbound"
                ]
              },
              "domainRegisteredDateTime": {
                "type": "string",
                "title": "Domain registered dateTime",
                "description": "Date the destination domain was registered (UTC).",
                "format": "date-time"
              },
              "localDnsName": {
                "type": "string",
                "title": "Local dns name",
                "description": "The local DNS name resolution as it appears in the host local DNS cache (e.g. in case the \"hosts\" file was tampered with)."
              },
              "natDestinationAddress": {
                "type": "string",
                "title": "Nat destination address",
                "description": "Network Address Translation destination IP address."
              },
              "natDestinationPort": {
                "type": "string",
                "title": "Nat destination port",
                "description": "Network Address Translation destination port."
              },
              "natSourceAddress": {
                "type": "string",
                "title": "Nat source address",
                "description": "Network Address Translation source IP address."
              },
              "natSourcePort": {
                "type": "string",
                "title": "Nat source port",
                "description": "Network Address Translation source port."
              },
              "protocol": {
                "type": "string",
                "title": "Protocol",
                "description": "Network protocol. Possible values are: unknown, ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII.",
                "enum": [
                  "ip",
                  "imp",
                  "igmp",
                  "ggp",
                  "tcp",
                  "pup",
                  "udp",
                  "idp",
                  "ipv6",
                  "ipv6routingheader",
                  "ipv6fragmentheader",
                  "ipsecencapsulatingsecuritypayload",
                  "ipsecauthenticationheader",
                  "icmpv6",
                  "ipv6nonextheader",
                  "ipv6destinationoptions",
                  "nd",
                  "raw",
                  "ipx",
                  "spx",
                  "spxii"
                ]
              },
              "riskScore": {
                "type": "string",
                "title": "Risk score",
                "description": "Provider generated/calculated risk score of the network connection."
              },
              "sourceAddress": {
                "type": "string",
                "title": "Source address",
                "description": "Source (i.e. origin) IP address of the network connection."
              },
              "sourcePort": {
                "type": "string",
                "title": "Source port",
                "description": "Source (i.e. origin) IP port of the network connection."
              },
              "status": {
                "type": "string",
                "title": "Status",
                "description": "Network connection status. Possible values are: unknown, attempted, succeeded, blocked, failed.",
                "enum": [
                  "attempted",
                  "succeeded",
                  "blocked",
                  "failed"
                ]
              },
              "urlParameters": {
                "type": "string",
                "title": "Url parameters",
                "description": "Parameters (suffix) of the destination URL as a string."
              }
            }
          },
          "title": "Network connections",
          "description": "Security-related stateful information generated by the provider about the file(s) related to this alert."
        },
        "processes": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Process",
            "description": "Complex Type containing stateful information about the process related to the alert.",
            "properties": {
              "accountName": {
                "type": "string",
                "title": "Account name",
                "description": "User account identifier (user account context the process ran under) e.g. AccountName, SID, etc."
              },
              "commandLine": {
                "type": "string",
                "title": "Command line",
                "description": "The full process invocation commandline including all parameters."
              },
              "createdDateTime": {
                "type": "string",
                "format": "date-time",
                "title": "Created date time",
                "description": "DateTime at which the parent process was started (UTC)."
              },
              "integrityLevel": {
                "type": "string",
                "title": "Integrity level",
                "description": "The integrity level of the process. Possible values are: unknown, untrusted, low, medium, high, system.",
                "enum": [
                  "unknown",
                  "untrusted",
                  "low",
                  "medium",
                  "high",
                  "system"
                ]
              },
              "isElevated": {
                "type": "boolean",
                "title": "Is elevated",
                "description": "True if the process is elevated."
              },
              "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the process Image file."
              },
              "parentProcessCreatedDateTime": {
                "type": "string",
                "title": "Parent process created date time",
                "description": "Time at which the process was started (UTC).",
                "format": "date-time"
              },
              "parentProcessId": {
                "type": "integer",
                "format": "int32",
                "title": "Parent process ID",
                "description": "The Process ID (PID) of the parent process."
              },
              "parentProcessName": {
                "type": "string",
                "title": "Parent process name",
                "description": "The name of the image file of the parent process."
              },
              "path": {
                "type": "string",
                "title": "Path",
                "description": "Full path, including filename."
              },
              "processId": {
                "type": "integer",
                "format": "int32",
                "title": "Process Id",
                "description": "The Process ID (PID) of the process."
              },
              "fileHash": {
                "type": "object",
                "title": "File hash",
                "description": "Complex type containing file hashes (cryptographic and location-sensitive).",
                "properties": {
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "File hash type. Possible values are: unknown, sha1, sha256, md5, authenticodeHash256, lsHash, ctph, peSha1, peSha256.",
                    "enum": [
                      "Sha1",
                      "Sha256",
                      "MD5",
                      "authenticodeHash256",
                      "LsHash",
                      "CTPH"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "title": "Value",
                    "description": "Value of the file hash."
                  }
                }
              }
            }
          },
          "title": "Processes",
          "description": "Security-related stateful information generated by the provider about the process or processes related to this alert."
        },
        "registryKeyStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Registry key state",
            "description": "Complex type containing information about registry key changes related to the alert, and the process that changed the registry keys.",
            "properties": {
              "process": {
                "type": "string",
                "title": "Process",
                "description": "Process ID (PID) of the process that modified the registry key (process details will appear in the alert \"processes\" collection)."
              },
              "operation": {
                "type": "string",
                "title": "Operation",
                "description": "Operation that changed the registry key name and/or value (add, modify, delete).",
                "enum": [
                  "add",
                  "modify",
                  "delete"
                ]
              },
              "valueType": {
                "type": "string",
                "title": "Value Type",
                "description": "Registry key value type. Possible values are: unknown, binary, dword, dwordLittleEndian, dwordBigEndian, expandSz, link, multiSz, none, qword, qwordlittleEndian, sz.",
                "enum": [
                  "unknown",
                  "binary",
                  "dword",
                  "dwordLittleEndian",
                  "dwordBigEndian",
                  "expandSz",
                  "link",
                  "multiSz",
                  "none",
                  "qword",
                  "qwordlittleEndian",
                  "sz"
                ]
              },
              "hive": {
                "type": "string",
                "title": "Registry hive",
                "description": "Windows registry hive. Possible values are: unknown, currentConfig, currentUser, localMachineSam, localMachineSamSoftware, localMachineSystem, usersDefault.",
                "enum": [
                  "unknown",
                  "currentConfig",
                  "currentUser",
                  "localMachineSam",
                  "localMachineSamSoftware",
                  "localMachineSystem",
                  "usersDefault"
                ]
              },
              "key": {
                "type": "string",
                "title": "Key",
                "description": "Current (i.e. changed) registry key (excludes HIVE)."
              },
              "valueName": {
                "type": "string",
                "title": "Value name",
                "description": "Current (i.e. changed) registry key value name."
              },
              "valueData": {
                "type": "string",
                "title": "Value data",
                "description": "Current (i.e. changed) registry key value data (contents)."
              },
              "oldKey": {
                "type": "string",
                "title": "Old key",
                "description": "Previous (i.e. before changed) registry key (excludes HIVE)."
              },
              "oldValueName": {
                "type": "string",
                "title": "Old value name",
                "description": "Previous (i.e. before changed) registry key value name."
              },
              "oldValueData": {
                "type": "string",
                "title": "Old value data",
                "description": "Previous (i.e. before changed) registry key value data (contents)."
              }

            }
          },
          "title": "Registry key states",
          "description": "Security-related stateful information generated by the provider about the registry keys related to this alert."
        },
        "triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Trigger",
            "description": "Contains information about the attribute that triggered a detection (properties exists in the alert entity).",
            "properties": {
              "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the property serving as a detection trigger."
              },
              "type": {
                "type": "string",
                "title": "Type",
                "description": "Type of the attribute in the key:value pair for interpretation, e.g. String, Boolean, etc."
              },
              "value": {
                "type": "string",
                "title": "Value",
                "description": "Value of the attribute serving as a detection trigger."
              }
            }
          },
          "title": "Triggers",
          "description": "Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation."
        },
        "userStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "User state",
            "description": "Contains stateful information about the user account.",
            "properties": {
              "aadUserId": {
                "type": "string",
                "title": "AAD user ID",
                "description": "AAD User object identifier (GUID) - represents the physical/multi-account user entity."
              },
              "accountName": {
                "type": "string",
                "title": "Account name",
                "description": "Account name of user account (without Active Directory Domain or DNS Domain) - (also called \"mailNickName\")."
              },
              "domainName": {
                "type": "string",
                "title": "Domain name",
                "description": "NetBIOS/Active Directory Domain of user account (i.e. domain\\account format)."
              },
              "emailRole": {
                "type": "string",
                "title": "Email role",
                "description": "For email-related alerts - user account email role.",
                "enum": [
                  "sender",
                  "recipient"
                ]
              },
              "isVpn": {
                "type": "boolean",
                "title": "Is Vpn",
                "description": "Indicates whether the user logged on through a VPN."
              },
              "logonDateTime": {
                "type": "string",
                "format": "date-time",
                "title": "Logon date time",
                "description": "Time at which the logon occurred (UTC)."
              },
              "logonId": {
                "type": "string",
                "title": "Logon ID",
                "description": "User sign-in ID."
              },
              "logonIp": {
                "type": "string",
                "title": "Logon IP",
                "description": "IP Address the logon request orginated from."
              },
              "logonLocation": {
                "type": "string",
                "title": "Logon location",
                "description": "Location (by IP address mapping) associated with a user sign-in event by this user."
              },
              "logonType": {
                "type": "string",
                "title": "Logon type",
                "description": "Method of user sign in. Possible values are: unknown, interactive, remoteInteractive, network, batch, service.",
                "enum": [
                  "unknown",
                  "interactive",
                  "remoteInteractive",
                  "network",
                  "batch",
                  "service"
                ]
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "title": "On premises security identifier",
                "description": "Active Directory (on-premises) Security Identifier (SID) of the user."
              },
              "riskScore": {
                "type": "string",
                "title": "Risk score",
                "description": "Provider-generated/calculated risk score of the user account."
              },
              "userAccountType": {
                "type": "string",
                "title": "User account type",
                "description": "User account type (group membership), per Windows definition. Possible values are: unknown, standard, power, administrator.",
                "enum": [
                  "unknown",
                  "standard",
                  "power",
                  "administrator"
                ]
              },
              "userPrincipalName": {
                "type": "string",
                "title": "User principal name",
                "description": "User sign-in name - internet format: <user account name>@<user account DNS domain name>."
              }
            }
          },
          "title": "User states",
          "description": "Security-related stateful information generated by the provider about the logged-on user or users related to this alert."
        },
        "vulnerabilityStates": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Vulnerability State",
            "description": "Contains stateful information about the vulnerability.",
            "properties": {
              "cve": {
                "type": "string",
                "title": "Cve",
                "description": "Common Vulnerabilities and Exposures (CVE) for the vulnerability."
              },
              "wasRunning": {
                "type": "boolean",
                "title": "Was running",
                "description": "Indicates whether the detected vulnerability (file) was running at the time of detection or was the file detected at rest on the disk."
              },
              "severity": {
                "type": "string",
                "title": "Severity",
                "description": "Base Common Vulnerability Scoring System (CVSS) severity score for this vulnerability."
              }
            }
          },
          "title": "Vulnerability states",
          "description": "Threat intelligence pertaining to one or more vulnerabilities related to this alert."
        }
      }
    },
    "Subscription": {
      "type": "object",
      "title": "Subscription",
      "description": "A single subscription entity returned",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier for the subscription."
        },
        "resource": {
          "type": "string",
          "title": "Resource",
          "description": "Specifies the resource that will be monitored for changes."
        },
        "applicationId": {
          "type": "string",
          "title": "Application Id",
          "description": "Identifier of the application used to create the subscription."
        },
        "changeType": {
          "type": "string",
          "title": "Change type",
          "description": "Indicates the type of change in the subscribed resource that will raise a notification."
        },
        "clientState": {
          "type": "string",
          "title": "Client state",
          "description": "Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification."
        },
        "notificationUrl": {
          "type": "string",
          "title": "Notification URL",
          "description": "The URL of the endpoint that will receive the notifications. This URL must make use of the HTTPS protocol."
        },
        "expirationDateTime": {
          "type": "string",
          "title": "Expiration date time",
          "description": "Specifies the date and time when the webhook subscription expires (UTC)."
        },
        "creatorId": {
          "type": "string",
          "title": "Creator Id",
          "description": "Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app."
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "AAD": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        "User.Read": "User.Read"
      }
    }
  },
  "security": [
    {
      "AAD": [
        "User.Read"
      ]
    }
  ],
  "tags": []
}