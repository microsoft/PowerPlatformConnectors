{
  "consumes": ["application/json"],
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "WooCommerce",
    "description": "WooCommerce is a free, open-source commerce platform for WordPress. It empowers anyone, anywhere, to sell anything â€“ with unlimited extensibility, flexibility, and control.",
    "contact": {
      "name": "Reenhanced Team",
      "url": "https://reenhanced.com/contact",
      "email": "support@reenhanced.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.reenhanced.com/"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://reenhanced.com/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Commerce"
    }
  ],
  "host": "we.buildbettersoftware.com",
  "basePath": "/wp-json/wc-powerautomate/v1",
  "responses": {
    "400": {
      "description": "Bad Request"
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Unauthorized"
    },
    "429": {
      "description": "Throttled"
    },
    "500": {
      "description": "Server Error"
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic Authorization header."
    }
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "basic": []
    }
  ],
  "paths": {
    "/resources": {
      "get": {
        "operationId": "GetResources",
        "summary": "Get a list of resource types we can work with",
        "description": "Gets a list of resources",
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "resource": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook_topics": {
      "get": {
        "operationId": "GetTriggerTopics",
        "summary": "Get a list of trigger options",
        "description": "Gets a list of trigger options",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "resource",
            "in": "query",
            "description": "Specify the type of resource to work with",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/{resource}/{id}": {
      "get": {
        "operationId": "GetResourceById",
        "summary": "Get a single item of the selected type",
        "description": "Fetchs an item of the selected type from the store",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "x-ms-url-encoding": "single",
            "description": "Specify the type of resource the Resource ID refers to",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "x-ms-url-encoding": "single",
            "required": true,
            "x-ms-summary": "Resource ID",
            "description": "Specify the ID of the resource you wish to get"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceMemberSchema",
                "itemValuePath": "schema",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteResource",
        "summary": "Delete an item of the specified type",
        "description": "Deletes an item of the specified type and id",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "x-ms-url-encoding": "single",
            "description": "Specify the type of resource to work with",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "id",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "x-ms-summary": "Resource ID",
            "description": "The ID of the resource",
            "x-ms-visibility": "important",
            "type": "number"
          },
          {
            "name": "force",
            "x-ms-summary": "Force deletion?",
	    "description": "Set to TRUE if the record should be forced to be removed.",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "operationId": "UpdateResource",
        "summary": "Update an item of the specified type",
        "description": "Updates an item using specified parameters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "x-ms-summary": "Resource ID",
            "description": "The ID of the resource",
            "x-ms-visibility": "important",
            "type": "number"
          },
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "description": "Specify the type of resource to work with",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceMemberSchema",
                "itemValuePath": "patch",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceSchema",
                "itemValuePath": "schema",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/{resource}/1": {
      "options": {
        "operationId": "ResourceMemberSchema",
        "summary": "Retrieve schema for the member resource type given",
        "description": "This is where the magic happens for member objects",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "get": {
                  "type": "object"
                },
                "post": {
                  "type": "object"
                },
                "schema": {
                  "type": "object"
                },
                "delete": {
                  "type": "object"
                },
                "patch": {
                  "type": "object"
                }
              }
            }

          }
        }
      }
    },
    "/resources/{resource}/query": {
      "post": {
        "operationId": "GetItemsByResource",
        "summary": "Find a list of the selected item type",
        "description": "Gets a list of items of the selected type from the store",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "description": "Specify the type of resource to work with",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceSchema",
                "itemValuePath": "get",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "x-ms-dynamic-properties": {
                  "operationId": "ResourceSchema",
                  "itemValuePath": "schema",
                  "parameters": {
                    "resource": {
                      "parameterReference": "resource"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/{resource}": {
      "post": {
        "operationId": "CreateResource",
        "summary": "Create a new item of the specified type",
        "description": "Creates an item using specified parameters",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "description": "Specify the type of resource to work with",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceSchema",
                "itemValuePath": "post",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "ResourceSchema",
                "itemValuePath": "schema",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        }
      },
      "options": {
        "operationId": "ResourceSchema",
        "summary": "Retrieve schema for the resource type given",
        "description": "This is where the magic happens",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "get": {
                  "type": "object"
                },
                "post": {
                  "type": "object"
                },
                "schema": {
                  "type": "object"
                },
                "delete": {
                  "type": "object"
                },
                "patch": {
                  "type": "object"
                }
              }
            }

          }
        }
      }
    },
    "/resources/{resource}/batch": {
      "options": {
        "operationId": "BatchSchema",
        "summary": "Retrieve schema for the member resource type given",
        "description": "This is where the magic happens for member objects",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "get": {
                  "type": "object"
                },
                "post": {
                  "type": "object"
                },
                "schema": {
                  "type": "object"
                },
                "delete": {
                  "type": "object"
                },
                "patch": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "BatchResource",
        "summary": "Perform a batch operation",
        "description": "Completes an operation on a number of WooCommerce items",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "x-ms-url-encoding": "single",
            "type": "string",
            "x-ms-summary": "Resource Type",
            "description": "Specify the type of resource to work with",
            "x-ms-visibility": "important",
            "required": true,
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-title": "name",
              "value-path": "resource"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetResources",
              "itemValuePath": "resource",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "BatchSchema",
                "itemValuePath": "post",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "x-ms-dynamic-properties": {
                "operationId": "BatchSchema",
                "itemValuePath": "schema",
                "parameters": {
                  "resource": {
                    "parameterReference": "resource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "x-ms-dynamic-properties": {
            "operationId": "ResourceSchema",
            "itemValuePath": "schema",
            "parameters": {
              "resource": {
                "parameterReference": "body/webhook_resource_schema"
              }
            }
          },
          "type": "object"
        }
      },
      "post": {
        "operationId": "CreateWebhook",
        "summary": "When a WooCommerce event happens",
        "description": "Select events across Coupons, Customers, Orders, Order Notes, Products, Subscriptions and more",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work, perform the selected event in WooCommerce",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "topic",
                "delivery_url",
                "webhook_resource_schema"
              ],
              "type": "object",
              "properties": {
                "webhook_resource_schema": {
                  "type": "string",
                  "x-ms-summary": "Resource Type",
                  "description": "Specify the type of resource to work with",
                  "x-ms-dynamic-values": {
                    "operationId": "GetResources",
                    "value-title": "name",
                    "value-path": "resource"
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetResources",
                    "itemValuePath": "resource",
                    "itemTitlePath": "name"
                  }
                },
                "topic": {
                  "type": "string",
                  "x-ms-summary": "Trigger Event",
                  "x-ms-dynamic-list": {
                    "operationId": "GetTriggerTopics",
                    "itemValuePath": "key",
                    "itemTitlePath": "name",
                    "parameters": {
                      "resource": {
                        "parameterReference": "body/webhook_resource_schema"
                      }
                    }
                  }
                },
                "delivery_url": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks/{hook_id}": {
      "delete": {
        "operationId": "DeleteTrigger",
        "x-ms-visibility": "internal",
        "description": "Deletes the trigger when a flow is removed",
        "parameters": [
          {
            "name": "hook_id",
            "in": "path",
            "description": "ID of the Hook being deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }

      }
    }

  },
  "tags": []
}
