{
  "swagger": "2.0",
  "info": {
    "title": "Panviva",
    "version": "1.1",
    "description": "Panviva is an omnichannel knowledge management solution. Our priority is to aid our clients in keeping their employees happy, so that they can focus on ensuring their customers are happy. Digitally transforming organisations for the last 20 years, we're now helping our customers to deliver knowledge nuggets to their employees and customers, whether they are in the home or the office - anytime and anywhere.",
    "contact": {
      "name": "Panviva Customer Advocacy Team",
      "url": "https://www.panviva.com/support",
      "email": "support@panviva.com"
    }
  },
  "host": "api.panviva.com",
  "basePath": "/v3",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.panviva.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.panviva.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Productivity"
    }
  ],
  "paths": {
    "/{instance}/operations/search": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Search Panviva by term, regular expression and filter by attributes",
        "description": "Searches documents, folders, and files (external documents) for a term and returns paginated results",
        "operationId": "OperationsSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "term",
            "description": "The word or phrase to be searched for. You can provide advanced search requests using Regex and/or attribute filtering with Lucene syntax. Note : These special characters are reserved and must be escaped with a backslash ```\\``` when you want to use them within the regex pattern ``` +  -  =  &&  ||  <  > !  (  )  {  }  [  ]  ^  \"  ~  *  ?  :  \\  / ```<br><para>Example 1. Term search</para><br>```/operations/search?term=help``` matches documents that contain the word 'help'<br></para><para>Example 2. Use Regular expression as search term<br>```/operations/search?term=/web?enabled/``` Matches enabled and webenabled<br></para><para>Example 3: Filter by attribute using Regex<br>```/operations/search?term=data.attributes.name:/[Tt]est|[Pp]attern/``` Matches documents that contain 'Test' or 'Pattern' in the title.<br></para><para>Example 4. Search for term with a date filter.<br>```/operations/search?term=example AND data.attributes.updatedDate:[2020-01-01 TO 2020-12-31]``` Matches the word example in documents that were updated in 2020<br>Example 5. Fuzzy search<br>```/operations/search?term=suplier~2``` Fuzzy search can be used to compensate for spelling errors, in this case '2' signifies the allowed distance.<br>Valid attributes are ```data.attributes.name```, ```data.attributes.version```, ```data.attributes.language```, ```data.attributes.release```,```data.attributes.changeNote```, ```data.attributes.layout```, ```data.attributes.documentType```, ```data.attributes.releaseDate```, ```data.attributes.updatedDate, ```data.attributes.createdDate```",
            "required": true,
            "type": "string",
            "x-ms-summary": "Term",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "pageOffset",
            "description": "The pagination offset to denote the number of initial search results to skip. For example, pageOffset of 100 and pageLimit of 10 would return records 101-110.",
            "type": "integer",
            "default": 0,
            "x-ms-summary": "Page Offset",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "pageLimit",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "default": 20,
            "x-ms-summary": "Page Limit",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "changedWhen",
            "description": "Helper keywords for applying filters for documents updated in range. Valid values are today, yesterday, thisWeek, LastWeek, thisMonth, lastMonth, thisYear and lastYear.<br>For example: ```/operations/search?term={term}&changedWhen=thisWeek```",
            "type": "string",
            "default": "NotProvided",
            "x-ms-summary": "Changed When",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "directParentFolderId",
            "description": "Search only within given Folder. Any documents in the sub folders are not searched. If not provided, resources are searched across all folders",
            "type": "integer",
            "x-ms-summary": "Direct Parent Folder Id",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "userName",
            "description": "Username of user doing the search",
            "type": "string",
            "x-ms-summary": "User Name",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "simpleSnippet",
            "description": "Parameter for getting only plain text in 'snippet' field. If not provided as ```/operations/search?term={term}&simpleSnippet=true``` The snippet filed will include HTML elements.",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Simple Snippet",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetSearchResponse"
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "type": "document",
                    "id": "123",
                    "name": "Spiderman",
                    "layout": "topTabsMedium",
                    "description": "The chronicles of Spiderman",
                    "classification": "films",
                    "updatedDate": "2018-05-04T00:00:00Z",
                    "matchedFields": [
                      "name"
                    ],
                    "snippet": "Spiderman is a super<em>hero</em>",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/documents/123",
                        "rel": "document",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "folder",
                    "id": "32",
                    "name": "Marvel Trivia",
                    "description": "All things Marvel",
                    "matchedFields": [
                      "name"
                    ],
                    "snippet": "<em>Marvel</em> Trivia",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/32",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "file",
                    "id": "124",
                    "name": "Spiderman Book",
                    "fileName": "spiderman-1.pdf",
                    "description": "A book detailing the history of Spiderman",
                    "classification": "books",
                    "updatedDate": "2018-05-04T00:00:00Z",
                    "matchedFields": [
                      "content",
                      "name",
                      "fileName"
                    ],
                    "snippet": "Spiderman is a <em>hero</em> born in New York",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/files/124",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "total": 57,
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=0&pageLimit=2",
                    "rel": "first",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=56&pageLimit=2",
                    "rel": "last",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=2&pageLimit=2",
                    "rel": "prev",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=6&pageLimit=2",
                    "rel": "next",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/operations/artefact/nls": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Perform NLS search",
        "description": "Return search results for a given query",
        "operationId": "OperationsSearchArtefacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "simplequery",
            "description": "Natural language query string. For example: ```Action Movies```. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-summary": "Simplequery",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "advancedquery",
            "description": "Query string written in Lucene query syntax. For example: ```films AND \"a story\"```. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-summary": "Advancedquery",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Accepts a filter string written in OData expression syntax. Examples: ```category/name eq 'Mortgages'```, ```panvivaDocumentVersion gt '8'```. (Filterable fields include dateCreated, dateModified, dateDeleted, category/name, category/dateCreated, category/dateModified, metaData/keyword/values, metaData/keyword/dataType, title, primaryQuery, isDeleted, timestamp, panvivaDocumentId, panvivaDocumentVersion, id)",
            "type": "string",
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "channel",
            "description": "Return response for a specific channel, instead of the default",
            "type": "string",
            "x-ms-summary": "Channel",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "pageOffset",
            "description": "The pagination offset to denote the number of initial search results to skip. For example, pageOffset of 100 and pageLimit of 10 would return records 101-110.",
            "type": "integer",
            "x-ms-summary": "Page Offset",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "pageLimit",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "x-ms-summary": "Page Limit",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "facet",
            "description": "Accepts a string denoting the field to facet by. Examples: ```facet=metaData/keyword/values```, ```facet=category/name```. (Facetable fields include metaData/keyword/values, category/id, category/name and panvivaDocumentId)",
            "type": "string",
            "x-ms-summary": "Facet",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "highlightTags",
            "description": "Accepts highlight pre and post tags in [start-tag,end-tag] template. Example : ```<em>,</em>```. (Note : Default highlight tag is ``` *,* ```)",
            "type": "string",
            "x-ms-summary": "Highlight Tags",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetEnrichedSearchArtefactResponse"
            },
            "examples": {
              "application/json": {
                "facets": [
                  {
                    "field": "metaData/Superheroes/values",
                    "groups": [
                      {
                        "key": "Captain America",
                        "value": 1
                      },
                      {
                        "key": "Captain Marvel",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "field": "metaData/Villains/values",
                    "groups": [
                      {
                        "key": "Thanos",
                        "value": 1
                      }
                    ]
                  }
                ],
                "results": [
                  {
                    "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films. Many of these superheroes you have come to love.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "simpleContent": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films. Many of these superheroes you have come to love.",
                    "category": {
                      "name": "Marvel Cinematic Universe",
                      "id": 1,
                      "dateCreated": "2018-09-05T04:12:52.83+00:00",
                      "dateModified": "2018-09-05T04:12:52.83+00:00"
                    },
                    "metaData": {
                      "Superheroes": {
                        "values": [
                          "Captain America",
                          "Captain Marvel"
                        ],
                        "dataType": "string"
                      },
                      "Villains": {
                        "values": [
                          "Thanos"
                        ],
                        "dataType": "string"
                      }
                    },
                    "searchScore": 0.99844,
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/artefacts/12",
                        "rel": "artefact",
                        "type": "GET"
                      }
                    ],
                    "queryVariations": [
                      {
                        "id": 1,
                        "query": "What fictional universe does Captain America belong to?"
                      }
                    ],
                    "primaryQuery": "What is the Marvel Cinematic Universe?",
                    "panvivaDocumentId": 235,
                    "panvivaDocumentVersion": 5,
                    "title": "About Marvel Cinematic Universe",
                    "highlights": {
                      "primaryQuery": "What is the *Marvel* Cinematic Universe?",
                      "title": "About *Marvel* Cinematic Universe"
                    }
                  }
                ],
                "total": 1
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/operations/live/csh": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Live CSH : POST",
        "description": "Present a CSH search result page of the passing query on Panviva client to specified user on Panviva client",
        "operationId": "OperationsLiveCSH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "schema": {
              "$ref": "#/definitions/PostLiveCshRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveCshResponse"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/operations/live/document": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Live Document : POST",
        "description": "Present a document page to specified user on Panviva client",
        "operationId": "OperationsLiveDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentResponse"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Container not found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "409": {
            "description": "The request cannot be processed due to both location and container id being provided, or the container id provided doesn't match the document id."
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/operations/live/search": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Live Search : POST",
        "description": "Present a search result page of the passing query on Panviva client to specified user on Panviva client",
        "operationId": "OperationsLiveSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchResponse"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/operations/echo": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Echo a request",
        "description": "Echo a request to verify connectivity with the Panviva API",
        "operationId": "OperationsEcho",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload."
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/container/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a Container from a Panviva Document",
        "description": "Return a container using the container ID provided",
        "operationId": "ResourcesContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of a document container",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetContainerResponse"
            },
            "examples": {
              "application/json": {
                "id": "343-229-1-2",
                "name": "Captain America: Civil War",
                "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/document/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a Panviva Document",
        "description": "Return a document using the document ID provided",
        "operationId": "ResourcesDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "A document unique identifier, Document ID. If a document is a translated document, this value represents Internal ID or IID in Panviva API v1.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Request the API to return a particular version of the specified document.",
            "type": "integer",
            "x-ms-summary": "Version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "userName",
            "description": "Username of user trying to access document",
            "type": "string",
            "x-ms-summary": "User Name",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentResponse"
            },
            "examples": {
              "application/json": {
                "id": "343",
                "name": "Marvel Cinematic Universe (Films)",
                "description": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                "version": 229,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective date",
                    "value": "2018-05-04T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "document",
                "release": 33,
                "released": true,
                "copyright": "Marvel Studios, LLC",
                "classification": "films",
                "status": "Phase Three",
                "percentage": 100,
                "releaseDate": "2017-09-09T04:12:52.83Z",
                "layout": "leftTabsMedium",
                "training": {
                  "failureFeedback": "Please review the Marvel documentation in document 343",
                  "forcePageSequence": true,
                  "forceQuestionSequence": true,
                  "passingScore": 10,
                  "successFeedback": "With great power comes great responsibility."
                },
                "keywords": [
                  "Iron Man",
                  "Hulk",
                  "Thor",
                  "Captain America",
                  "Avenger",
                  "Guardians of the Galaxy",
                  "Ant-Man",
                  "Doctor Strange",
                  "Spider-Man",
                  "Black Panter",
                  "Captain Marvel"
                ],
                "cshKeywords": [
                  "Chrome",
                  "MCU"
                ],
                "updatedDate": "2017-09-09T04:12:52.83Z",
                "createdDate": "2017-08-09T04:02:46.907Z",
                "reusableContent": false,
                "changeNote": "Added in Captain Marvel",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/containers",
                    "rel": "containers",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/artefact/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a Panviva Artefact",
        "description": "Return an artefact using the ID provided",
        "operationId": "ResourcesArtefact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id (ID) of an artefact",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetEnrichedResponseResponse"
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343?version=229",
                    "rel": "document",
                    "type": "GET"
                  }
                ],
                "title": "About Marvel Cinematic Universe",
                "content": [
                  {
                    "mediaType": "text/plain",
                    "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                    "href": null,
                    "resourceLocation": null
                  },
                  {
                    "mediaType": "image/jpeg",
                    "text": null,
                    "href": "https://terrigen-cdn-dev.marvel.com/content/prod/1x/mi-promo-featured-half-dsk-1140x680.jpg",
                    "resourceLocation": "external"
                  },
                  {
                    "mediaType": "text/plain",
                    "text": "The franchise has been commercially successful and has generally received a positive critical response",
                    "href": null,
                    "resourceLocation": null
                  }
                ],
                "simpleContent": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.\nThe franchise has been commercially successful and has generally received a positive critical response",
                "variations": [
                  {
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe is a shared universe that is centered on a series of superhero films.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "simpleContent": "The Marvel Cinematic Universe is a shared universe that is centered on a series of superhero films.",
                    "channels": [
                      {
                        "id": 0,
                        "name": "Amazon Alexa"
                      }
                    ],
                    "id": 2,
                    "dateCreated": "2018-09-10T04:12:52.83+00:00",
                    "dateModified": "2018-09-10T04:12:52.83+00:00"
                  }
                ],
                "category": {
                  "name": "Marvel Cinematic Universe",
                  "id": 1,
                  "dateCreated": "2018-09-05T04:12:52.83+00:00",
                  "dateModified": "2018-09-05T04:12:52.83+00:00"
                },
                "primaryQuery": "What is the Marvel Cinematic Universe?",
                "queryVariations": [
                  {
                    "id": 12,
                    "query": "What fictional universe does Captain America belong to?"
                  }
                ],
                "panvivaDocumentId": 235,
                "panvivaDocumentVersion": 5,
                "metaData": {
                  "Superheroes": {
                    "values": [
                      "Captain America",
                      "Captain Marvel"
                    ],
                    "dataType": "string"
                  },
                  "Villains": {
                    "values": [
                      "Thanos"
                    ],
                    "dataType": "string"
                  }
                },
                "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                "dateCreated": "2018-09-09T04:12:52.83+00:00",
                "dateModified": "2018-09-10T04:12:52.83+00:00"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Updates a published artefact",
        "description": "Updates an already published artefact",
        "operationId": "ResourcesPublishArtefact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Response Id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "request object",
            "schema": {
              "$ref": "#/definitions/PutArtefactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutArtefactResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/document/{id}/containers": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a list of all containers from a Panviva Document",
        "description": "Return a list of containers using the document ID provided",
        "operationId": "ResourcesDocumentContainers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva document",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Request the API to return containers belonging to a particular version of the specified document.",
            "type": "integer",
            "x-ms-summary": "Version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainersResponse"
            },
            "examples": {
              "application/json": {
                "containers": [
                  {
                    "id": "343-229-0-0",
                    "name": "Phase Three",
                    "body": null
                  },
                  {
                    "id": "343-229-1-2",
                    "name": "Captain America: Civil War",
                    "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
                  },
                  {
                    "id": "343-229-3-4",
                    "name": "Doctor Strange",
                    "body": "<div data-link-id='4' data-db-id='208157'><div class='pv-task-header'>Doctor Strange</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208158' data-link-id='5'>Mr. Doctor?</p>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/document/{id}/containers/relationships": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a list of relationships for the containers in a Panviva Document",
        "description": "Return a list of the parent-child relationship between each container for the document ID provided",
        "operationId": "ResourcesDocumentContainerRelationships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva document",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainerRelationshipsResponse"
            },
            "examples": {
              "application/json": {
                "relationships": [
                  {
                    "id": "343-229-0-0",
                    "parent": null,
                    "children": [
                      "343-229-1-2",
                      "343-229-3-4"
                    ],
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-1-2",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-3-4",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/document/{id}/translations": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a list of translations of a Panviva Document",
        "description": "Return a list of all translations (per language and locale) of a Panviva document",
        "operationId": "ResourcesDocumentTranslations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva document.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "568",
                    "name": "Univers cinÃ©matographique Marvel. (Films)",
                    "description": "Marvel Cinematic Universe (MCU) est une franchise de médias américains et un univers partagé centré sur une série de films de super héros.",
                    "version": 52,
                    "language": "fr-FR",
                    "tags": [
                      {
                        "name": "Rang",
                        "value": "2"
                      },
                      {
                        "name": "Date effective",
                        "value": "2018-05-04T00:00:00Z"
                      }
                    ],
                    "hidden": false,
                    "type": "document",
                    "release": 23,
                    "released": true,
                    "copyright": "Marvel Studios, LLC",
                    "classification": "films",
                    "status": "Phase Trois",
                    "percentage": 100,
                    "releaseDate": "2017-09-09T04:12:52.83Z",
                    "layout": "leftTabsMedium",
                    "training": {
                      "failureFeedback": "Veuillez consulter la documentation Marvel dans le document 343",
                      "forcePageSequence": true,
                      "forceQuestionSequence": true,
                      "passingScore": 10,
                      "successFeedback": "Un grand pouvoir implique de grandes responsabilités"
                    },
                    "keywords": [
                      "Iron Man",
                      "Hulk",
                      "Thor",
                      "Captain America",
                      "Avenger",
                      "Guardians of the Galaxy",
                      "Ant-Man",
                      "Doctor Strange",
                      "Spider-Man",
                      "Black Panter",
                      "Captain Marvel"
                    ],
                    "cshKeywords": [
                      "Chrome",
                      "MCU"
                    ],
                    "updatedDate": "2017-09-09T04:12:52.83Z",
                    "createdDate": "2017-08-09T04:02:46.907Z",
                    "reusableContent": false,
                    "changeNote": "Added in Captain Marvel",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/document/568/translations",
                        "rel": "translations",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "origin": "343"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/file/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a file from Panviva",
        "description": "Returns a file (external document) from Panviva",
        "operationId": "ResourcesFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva file (external document)",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFileResponse"
            },
            "examples": {
              "application/json": {
                "id": "file",
                "name": "A to Z in Marvel Comic Series",
                "description": "Contains details of all featured series.",
                "version": 2,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "custom-category",
                    "value": "MVU-10"
                  }
                ],
                "hidden": false,
                "type": "file",
                "content": "JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9DcmVhdG9yIChNb3ppbGxhLzUuMCBcKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NFwpIEFwcGxlV2ViS2l0LzUzNy4zNiBcKEtIVE1MLCBsaWtlIEdlY2tvXCkgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2KQovUHJvZHVjZXIgKFNraWEvUERGIG03MSkKL0NyZWF0aW9uRGF0ZSAoRDoyMDE5MDEzMDA1NTM0NyswMCcwMCcpCi9Nb2REYXRlIChEOjIwMTkwMTMwMDU1MzQ3KzAwJzAw  ...................................... CBuIAowMDAwMzgwMzI0IDAwMDAwIG4gCjAwMDAzODA1NDQgMDAwMDAgbiAKMDAwMDM4MDc2NyAwMDAwMCBuIAowMDAwMzgwOTg2IDAwMDAwIG4gCjAwMDAzODEyMDYgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDEwNwovUm9vdCAxOSAwIFIKL0luZm8gMSAwIFI+PgpzdGFydHhyZWYKMzgxNDIzCiUlRU9G",
                "fileName": "A to Z in Marvel Comic Series.pdf",
                "release": 2,
                "released": true,
                "copyright": "public domain",
                "classification": "general",
                "status": "released",
                "percentage": 100,
                "releaseDate": "2019-01-30T17:00:53.563Z",
                "keywords": [
                  "general info",
                  "series"
                ],
                "cshKeywords": [
                  "series"
                ],
                "changeNote": "Uploaded linked document.",
                "updatedDate": "2019-01-30T17:00:53.563Z",
                "createdDate": "2019-01-30T16:54:51.637Z"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/folder/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a Panviva Folder",
        "description": "Return information about a Panviva folder and references to each of its direct children",
        "operationId": "ResourcesFolder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderResponse"
            },
            "examples": {
              "application/json": {
                "id": "342",
                "name": "the films",
                "description": "Films that make a grown man squeal by the memories of his childhood.",
                "version": 10,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/children",
                    "rel": "children",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/translations",
                    "rel": "translations",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/folder/{id}/children": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get the children of a Panviva folder",
        "description": "Gets all the immediate children of a Panviva folder, not including grandchildren. Children can be folders, documents, or files (external documents)",
        "operationId": "ResourcesFolderChildren",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderChildrenResponse"
            },
            "examples": {
              "application/json": {
                "children": [
                  {
                    "id": "84374",
                    "name": "Infinity stones",
                    "description": "All information relating to Marvel's infinity stones.",
                    "version": 1,
                    "language": "en-AU",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15T00:00:00Z"
                      }
                    ],
                    "hidden": true,
                    "type": "folder",
                    "links": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/folder/{id}/translations": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get the translations of a Panviva folder",
        "description": "Gets all the translations of a Panviva folder, along with each translated folders respective children",
        "operationId": "ResourcesFolderTranslations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "84374",
                    "name": "die Filme",
                    "description": "Filme, die einen erwachsenen Mann durch die Erinnerungen an seine Kindheit zum Quietschen bringen.",
                    "version": 1,
                    "language": "de-DE",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15T00:00:00Z"
                      }
                    ],
                    "hidden": false,
                    "type": "folder",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                        "rel": "translations",
                        "type": "GET"
                      },
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                        "rel": "children",
                        "type": "GET"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/folder/root": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get the root folder in Panviva",
        "description": "Gets the root/home folder in all of Panviva, which can be drilled into using the Get Folder Children endpoint. Note this endpoint was formerly referred to as the 'Folder Search' endpoint",
        "operationId": "ResourcesFolderRoot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderRootResponse"
            },
            "examples": {
              "application/json": {
                "id": "1",
                "name": "Home",
                "description": "The Home folder of Panviva",
                "version": 8,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                    "rel": "children",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/image/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get an image from Panviva",
        "description": "Returns an image from Panviva. Image data is represented as a base64 string",
        "operationId": "ResourcesImage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of a Panviva image",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Id",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetImageResponse"
            },
            "examples": {
              "application/json": {
                "id": "627",
                "name": "avengers-marvel-marvel-comics",
                "width": 128,
                "height": 128,
                "size": 12311,
                "contentType": "image/png",
                "content": "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAIAAABMXPacAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAC+sSURBVHhe7Xz3nxRl1u/90+7n3sh/tkrt4vFHyBAXgASfwuuzLg0LCJTeB7wp3ccA/yRs8O8I82DPvwjswME71psv ...................................... Y/zniEzcr3ZXrg2s9fxSz495H+/l9MgF9ZMtUoAbnc5Pev+qvCDq+EQ1OTAJik5xC+bXoE+LOH9tEc+QQwvIVhyxqce6crjvCNWPVz2zkCmmN8VnAEp+KNgEtRpuAFqNNQIvRJqDFaBPQYrQJaDHaBLQYbQJajDYBLUabgBajTUCL0SagxWgT0GK0CWgx2gS0GG0CWow2AS1Gm4AWo01Ai9EmoMVoE9BitAloMdoEtBhtAlqMNgEtRpuAFqNNQIvRJqDFaBPQYrQJaCkk6f8DK/JmX1NVAtQAAAAASUVORK5CYII="
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/artefactcategory": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Gets a list of artefact categories",
        "description": "Gets a list of all available artefact categories",
        "operationId": "ResourcesGetArtefactCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetArtefactCategoriesResponse"
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": 1,
                    "categoryName": "Marvel Cinematic Universe"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Creates an artefact category",
        "description": "Creates a category for classifying artefacts",
        "operationId": "ResourcesCreateArtefactCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing the category name",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryResponse"
            },
            "examples": {
              "application/json": {
                "categoryId": 1,
                "categoryName": "Marvel Cinematic Universe"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/artefact": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Creates an artefact",
        "description": "Creates a new artefact",
        "operationId": "ResourcesCreateArtefact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Instance",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "query",
            "name": "isDraft",
            "description": "Check if the artefact is draft and not published",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Is Draft",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing the category name",
            "schema": {
              "$ref": "#/definitions/PostArtefactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostArtefactResponse"
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI. ",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the plan’s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ArtefactCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ArtefactSection": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "resourceLocation": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CategoryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ChannelViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Container": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ContainerRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskFlow": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Document": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "reusableContent": {
          "type": "boolean"
        },
        "changeNote": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "EnrichedResponseVariation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      },
      "additionalProperties": false
    },
    "EnrichedSearchResult": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "searchScore": {
          "type": "number"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "primaryQuery": {
          "type": "string"
        },
        "panvivaDocumentId": {
          "type": "integer"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "highlights": {
          "$ref": "#/definitions/Highlights"
        }
      },
      "additionalProperties": false
    },
    "Facet": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringInt64NullableKeyValuePair"
          }
        }
      },
      "additionalProperties": false
    },
    "Folder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetArtefactCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactCategory"
          }
        }
      },
      "additionalProperties": false
    },
    "GetContainerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetDocumentContainerRelationshipsResponse": {
      "type": "object",
      "properties": {
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRelationship"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentContainersResponse": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "reusableContent": {
          "type": "boolean"
        },
        "changeNote": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "origin": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetEnrichedResponseResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string"
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrichedResponseVariation"
          }
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "primaryQuery": {
          "type": "string"
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "panvivaDocumentId": {
          "type": "integer"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetEnrichedSearchArtefactResponse": {
      "type": "object",
      "properties": {
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrichedSearchResult"
          }
        },
        "total": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "GetFileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "changeNote": {
          "type": "string"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetFolderChildrenResponse": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderRootResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      },
      "additionalProperties": false
    },
    "GetImageResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "contentType": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetSearchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSearchResult"
          }
        },
        "total": {
          "type": "integer"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "Highlights": {
      "type": "object",
      "properties": {
        "primaryQuery": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "MetaDataValueDetails": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataType": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostArtefactCategoryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostArtefactCategoryResponse": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostArtefactRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactSection"
          }
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseVariationModel"
          }
        },
        "category": {
          "$ref": "#/definitions/CategoryModel"
        },
        "primaryQuery": {
          "type": "string"
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariationModel"
          }
        },
        "panvivaDocumentId": {
          "type": "integer"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        }
      },
      "additionalProperties": false
    },
    "PostArtefactResponse": {
      "type": "object",
      "properties": {
        "hasErrors": {
          "type": "boolean",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostLiveCshRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The CSH term to search for.",
          "type": "string"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "PostLiveCshResponse": {
      "type": "object",
      "additionalProperties": false
    },
    "PostLiveDocumentRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "id": {
          "description": "The Document ID of the Panviva Document you wish to send.",
          "type": "string"
        },
        "location": {
          "description": "The Section ID you would like the user to see, when the specified document is opened. Note: Use location OR containerId, not both.)",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        },
        "containerId": {
          "description": "The Id of the Container you'd like the user to see when the specified document is opened. (Note: Use location OR containerId, not both.)",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostLiveDocumentResponse": {
      "type": "object",
      "additionalProperties": false
    },
    "PostLiveSearchRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The term to search for.",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "PostLiveSearchResponse": {
      "type": "object",
      "additionalProperties": false
    },
    "PutArtefactRequest": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "primaryResponse": {
          "type": "string"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactSection"
          }
        },
        "taggedSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedSectionWithContentViewModel"
          }
        },
        "category": {
          "$ref": "#/definitions/CategoryModel"
        },
        "panvivaDocumentId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "primaryQuery": {
          "type": "string"
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariationViewModel"
          }
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "responseVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseVariationViewModel"
          }
        }
      },
      "additionalProperties": false
    },
    "PutArtefactResponse": {
      "type": "object",
      "properties": {
        "hasErrors": {
          "type": "boolean",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "QueryVariation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "QueryVariationModel": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "QueryVariationViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ResourceSearchResult": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "matchedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "snippet": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "ResponseSection": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "resourceLocation": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ResponseVariationModel": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      },
      "additionalProperties": false
    },
    "ResponseVariationViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelViewModel"
          }
        },
        "content": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StringInt64NullableKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "format": "int64",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TaggedSectionWithContentViewModel": {
      "type": "object",
      "properties": {
        "sectionId": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Training": {
      "type": "object",
      "properties": {
        "failureFeedback": {
          "type": "string"
        },
        "forcePageSequence": {
          "type": "boolean"
        },
        "forceQuestionSequence": {
          "type": "boolean"
        },
        "passingScore": {
          "type": "integer"
        },
        "successFeedback": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "tags": [
    "certified-connectors"
  ]
}