{
  "swagger": "2.0",
  "info": {
    "title": "Panviva",
    "version": "1.0",
    "description": "Wouldn't it be great if you could share information seamlessly? This connector allows you to push your knowledge further and consume a complete list of Panviva's API offerings.\n\n**Content APIs** perform resource related operations , e.g. `document`, `folder`, `file`, `container`, `image`.\n\n**Live APIs** enable real-time communications with online users on our client application.\n\n**Artefact APIs** interact with curated Panviva content, created by Digital Orchestrator.",
    "contact": {
      "name": "Panviva Customer Advocacy Team",
      "url": "https://www.panviva.com/support",
      "email": "support@panviva.com"
    }
  },
  "host": "api.panviva.com",
  "basePath": "/v3",
  "schemes": ["https"],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.panviva.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.panviva.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Productivity"
    }
  ],
  "paths": {
    "/{instance}/operations/search": {
      "get": {
        "description": "Searches documents, folders, and files (external documents) for a term and returns paginated results",
        "operationId": "OperationsSearch",
        "summary": "Search",
        "tags": ["Operations"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Term",
            "name": "term",
            "in": "query",
            "description": "The word or phrase to be searched for",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Page Offset",
            "name": "pageOffset",
            "in": "query",
            "description": "The pagination offset to denote the number of initial search results to skip. For example, pageOffset of 100 and pageLimit of 10 would return records 101-110.",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "x-ms-summary": "Page Limit",
            "name": "pageLimit",
            "in": "query",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetSearchResponse"
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "type": "document",
                    "id": "123",
                    "name": "Spiderman",
                    "layout": "topTabsMedium",
                    "description": "The chronicles of Spiderman",
                    "classification": "films",
                    "updatedDate": "2018-05-04T00:00:00Z",
                    "matchedFields": ["name"],
                    "snippet": "Spiderman is a super<em>hero</em>",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/documents/123",
                        "rel": "document",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "folder",
                    "id": "32",
                    "name": "Marvel Trivia",
                    "description": "All things Marvel",
                    "matchedFields": ["name"],
                    "snippet": "<em>Marvel</em> Trivia",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/32",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "file",
                    "id": "124",
                    "name": "Spiderman Book",
                    "fileName": "spiderman-1.pdf",
                    "description": "A book detailing the history of Spiderman",
                    "classification": "books",
                    "updatedDate": "2018-05-04T00:00:00Z",
                    "matchedFields": ["content", "name", "fileName"],
                    "snippet": "Spiderman is a <em>hero</em> born in New York",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/files/124",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "total": 57,
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=0&pageLimit=2",
                    "rel": "first",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=56&pageLimit=2",
                    "rel": "last",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=2&pageLimit=2",
                    "rel": "prev",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=6&pageLimit=2",
                    "rel": "next",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/operations/artefact/nls": {
      "get": {
        "description": "Return search results for a given query",
        "operationId": "OperationsArtefactNls",
        "summary": "Search Artefacts",
        "tags": ["Operations"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Simple Query",
            "name": "simplequery",
            "in": "query",
            "description": "Natural language query string. For example: ```Action Movies```. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Advanced Query",
            "name": "advancedquery",
            "in": "query",
            "description": "Query string written in Lucene query syntax. For example: ```films AND \"a story\"```. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "x-ms-summary": "Filter",
            "name": "filter",
            "in": "query",
            "description": "Accepts a Lucene-formatted filter string. Examples: ```category eq 'Mortgages'```, ```panvivaDocumentVersion gt '8'```. (Filterable fields include dateCreated, dateModified, dateDeleted, categoryJson, queryVariationsJson, title, category, primaryQuery, isDeleted, timestamp, panvivaDocumentId, panvivaDocumentVersion, id)",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "x-ms-summary": "Channel",
            "name": "channel",
            "in": "query",
            "description": "Return response for a specific channel, instead of the default",
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Page Offset",
            "name": "pageOffset",
            "in": "query",
            "description": "The pagination offset to denote the number of initial search results to skip. For example, pageOffset of 100 and pageLimit of 10 would return records 101-110.",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "x-ms-summary": "Page Limit",
            "name": "pageLimit",
            "in": "query",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "x-ms-summary": "Facet",
            "name": "facet",
            "in": "query",
            "description": "Accepts a Lucene-formatted facet string. Examples: ```facet=Category,count:10&amp;facet=Rating```. (Facetable fields include metaData/values)",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetSearchArtefactResponse"
            },
            "examples": {
              "application/json": {
                "facets": null,
                "results": [
                  {
                    "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "category": {
                      "name": "Marvel Cinematic Universe",
                      "id": 1,
                      "dateCreated": "2018-09-05T04:12:52.83+00:00",
                      "dateModified": "2018-09-05T04:12:52.83+00:00"
                    },
                    "metaData": {
                      "Superheroes": {
                        "values": ["Captain America", "Captain Marvel"],
                        "dataType": "string"
                      },
                      "Villains": {
                        "values": ["Thanos"],
                        "dataType": "string"
                      }
                    },
                    "searchScore": 0.99844,
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/artefacts/12",
                        "rel": "artefact",
                        "type": "GET"
                      }
                    ],
                    "queryVariations": null,
                    "primaryQuery": "What is the Marvel Cinematic Universe?",
                    "panvivaDocumentId": 235,
                    "panvivaDocumentVersion": 5,
                    "title": "About Marvel Cinematic Universe"
                  }
                ],
                "total": 1
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/operations/live/csh": {
      "post": {
        "description": "Present a CSH search result page of the passing query on Panviva client to specified user on Panviva client",
        "operationId": "OperationsLiveCsh",
        "summary": "Live CSH",
        "tags": ["Operations"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "postLiveCshRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostLiveCshRequest"
            },
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveCshResponse"
            },
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/operations/live/document": {
      "post": {
        "description": "Present a document page to specified user on Panviva client",
        "operationId": "OperationsLiveDocument",
        "summary": "Live Document",
        "tags": ["Operations"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "postLiveDocumentRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentRequest"
            },
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentResponse"
            },
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/operations/live/search": {
      "post": {
        "description": "Present a search result page of the passing query on Panviva client to specified user on Panviva client",
        "operationId": "OperationsLiveSearch",
        "summary": "Live Search",
        "tags": ["Operations"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "postLiveSearchRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchRequest"
            },
            "description": "JSON object containing information required to perform a live activity<span>:</span>",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed. There is a possibility that the request will fail, if it is disallowed when processing actually takes place. There is no facility for sending a completion-status code from this operation.",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchResponse"
            },
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/resources/container/{id}": {
      "get": {
        "description": "Return a container using the container ID provided",
        "operationId": "ResourcesContainerById",
        "summary": "Container",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The id of a document container",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetContainerResponse"
            },
            "examples": {
              "application/json": {
                "id": "343-229-1-2",
                "name": "Captain America: Civil War",
                "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/document/{id}": {
      "get": {
        "description": "Return a document using the document ID provided",
        "operationId": "ResourcesDocumentById",
        "summary": "Document",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "A document unique identifier, Document ID. If a document is a translated document, this value represents Internal ID or IID in Panviva API v1.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Version",
            "name": "version",
            "in": "query",
            "description": "Request the API to return a particular version of the specified document.",
            "type": "integer",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentResponse"
            },
            "examples": {
              "application/json": {
                "id": "343",
                "name": "Marvel Cinematic Universe (Films)",
                "description": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                "version": 229,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective date",
                    "value": "2018-05-04T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "document",
                "release": 33,
                "released": true,
                "copyright": "Marvel Studios, LLC",
                "classification": "films",
                "status": "Phase Three",
                "percentage": 100,
                "releaseDate": "2017-09-09T04:12:52.83Z",
                "layout": "leftTabsMedium",
                "training": {
                  "failureFeedback": "Please review the Marvel documentation in document 343",
                  "forcePageSequence": true,
                  "forceQuestionSequence": true,
                  "passingScore": 10,
                  "successFeedback": "With great power comes great responsibility."
                },
                "keywords": [
                  "Iron Man",
                  "Hulk",
                  "Thor",
                  "Captain America",
                  "Avenger",
                  "Guardians of the Galaxy",
                  "Ant-Man",
                  "Doctor Strange",
                  "Spider-Man",
                  "Black Panter",
                  "Captain Marvel"
                ],
                "cshKeywords": ["Chrome", "MCU"],
                "updatedDate": "2017-09-09T04:12:52.83Z",
                "createdDate": "2017-08-09T04:02:46.907Z",
                "reusableContent": false,
                "changeNote": "Added in Captain Marvel",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/containers",
                    "rel": "containers",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/artefact/{id}": {
      "get": {
        "description": "Return an artefact using the ID provided",
        "operationId": "ResourcesArtefactById",
        "summary": "Artefact",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "Format - uuid. The id (ID) of an artefact",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetResponseResponse"
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343?version=229",
                    "rel": "document",
                    "type": "GET"
                  }
                ],
                "title": "About Marvel Cinematic Universe",
                "content": [
                  {
                    "mediaType": "text/plain",
                    "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                    "href": null,
                    "resourceLocation": null
                  },
                  {
                    "mediaType": "image/jpeg",
                    "text": null,
                    "href": "https://terrigen-cdn-dev.marvel.com/content/prod/1x/mi-promo-featured-half-dsk-1140x680.jpg",
                    "resourceLocation": "external"
                  }
                ],
                "variations": [
                  {
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe is a shared universe that is centered on a series of superhero films.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "channels": [
                      {
                        "name": "Amazon Alexa"
                      }
                    ],
                    "id": 2,
                    "dateCreated": "2018-09-10T04:12:52.83+00:00",
                    "dateModified": "2018-09-10T04:12:52.83+00:00"
                  }
                ],
                "category": {
                  "name": "Marvel Cinematic Universe",
                  "id": 1,
                  "dateCreated": "2018-09-05T04:12:52.83+00:00",
                  "dateModified": "2018-09-05T04:12:52.83+00:00"
                },
                "primaryQuery": "What is the Marvel Cinematic Universe?",
                "queryVariations": [
                  {
                    "id": 12,
                    "query": "What is MCU?"
                  }
                ],
                "panvivaDocumentId": 235,
                "panvivaDocumentVersion": 5,
                "metaData": {
                  "Superheroes": {
                    "values": ["Captain America", "Captain Marvel"],
                    "dataType": "string"
                  },
                  "Villains": {
                    "values": ["Thanos"],
                    "dataType": "string"
                  }
                },
                "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                "dateCreated": "2018-09-09T04:12:52.83+00:00",
                "dateModified": "2018-09-10T04:12:52.83+00:00"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/document/{id}/containers": {
      "get": {
        "description": "Return a list of containers using the document ID provided",
        "operationId": "ResourcesDocumentByIdContainers",
        "summary": "Document Containers",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva document",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainersResponse"
            },
            "examples": {
              "application/json": {
                "containers": [
                  {
                    "id": "343-229-0-0",
                    "name": "Phase Three",
                    "body": null
                  },
                  {
                    "id": "343-229-1-2",
                    "name": "Captain America: Civil War",
                    "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
                  },
                  {
                    "id": "343-229-3-4",
                    "name": "Doctor Strange",
                    "body": "<div data-link-id='4' data-db-id='208157'><div class='pv-task-header'>Doctor Strange</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208158' data-link-id='5'>Mr. Doctor?</p>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/document/{id}/containers/relationships": {
      "get": {
        "description": "Return a list of the parent-child relationship between each container for the document ID provided",
        "operationId": "ResourcesDocumentByIdContainersRelationships",
        "summary": "Document Container Relationships",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva document",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainerRelationshipsResponse"
            },
            "examples": {
              "application/json": {
                "relationships": [
                  {
                    "id": "343-229-0-0",
                    "parent": null,
                    "children": ["343-229-1-2", "343-229-3-4"],
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-1-2",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-3-4",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        }
      }
    },
    "/{instance}/resources/document/{id}/translations": {
      "get": {
        "description": "Return a list of all translations (per language and locale) of a Panviva document",
        "operationId": "ResourcesDocumentByIdTranslations",
        "summary": "Document Translations",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva document.",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetDocumentTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "568",
                    "name": "Univers cinÃƒÂ©matographique Marvel. (Films)",
                    "description": "Marvel Cinematic Universe (MCU) est une franchise de mÃ©dias amÃ©ricains et un univers partagÃ© centrÃ© sur une sÃ©rie de films de super hÃ©ros.",
                    "version": 52,
                    "language": "fr-FR",
                    "tags": [
                      {
                        "name": "Rang",
                        "value": "2"
                      },
                      {
                        "name": "Date effective",
                        "value": "2018-05-04T00:00:00Z"
                      }
                    ],
                    "hidden": false,
                    "type": "document",
                    "release": 23,
                    "released": true,
                    "copyright": "Marvel Studios, LLC",
                    "classification": "films",
                    "status": "Phase Trois",
                    "percentage": 100,
                    "releaseDate": "2017-09-09T04:12:52.83Z",
                    "layout": "leftTabsMedium",
                    "training": {
                      "failureFeedback": "Veuillez consulter la documentation Marvel dans le document 343",
                      "forcePageSequence": true,
                      "forceQuestionSequence": true,
                      "passingScore": 10,
                      "successFeedback": "Un grand pouvoir implique de grandes responsabilitÃ©s"
                    },
                    "keywords": [
                      "Iron Man",
                      "Hulk",
                      "Thor",
                      "Captain America",
                      "Avenger",
                      "Guardians of the Galaxy",
                      "Ant-Man",
                      "Doctor Strange",
                      "Spider-Man",
                      "Black Panter",
                      "Captain Marvel"
                    ],
                    "cshKeywords": ["Chrome", "MCU"],
                    "updatedDate": "2017-09-09T04:12:52.83Z",
                    "createdDate": "2017-08-09T04:02:46.907Z",
                    "reusableContent": false,
                    "changeNote": "Added in Captain Marvel",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/document/568/translations",
                        "rel": "translations",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "origin": "343"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/file/{id}": {
      "get": {
        "description": "Returns a file (external document) from Panviva",
        "operationId": "ResourcesFileById",
        "summary": "File",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva file (external document)",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFileResponse"
            },
            "examples": {
              "application/json": {
                "id": "file",
                "name": "A to Z in Marvel Comic Series",
                "description": "Contains details of all featured series.",
                "version": 2,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "custom-category",
                    "value": "MVU-10"
                  }
                ],
                "hidden": false,
                "type": "file",
                "content": "JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9DcmVhdG9yIChNb3ppbGxhLzUuMCBcKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NFwpIEFwcGxlV2ViS2l0LzUzNy4zNiBcKEtIVE1MLCBsaWtlIEdlY2tvXCkgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2KQovUHJvZHVjZXIgKFNraWEvUERGIG03MSkKL0NyZWF0aW9uRGF0ZSAoRDoyMDE5MDEzMDA1NTM0NyswMCcwMCcpCi9Nb2REYXRlIChEOjIwMTkwMTMwMDU1MzQ3KzAwJzAw  ...................................... CBuIAowMDAwMzgwMzI0IDAwMDAwIG4gCjAwMDAzODA1NDQgMDAwMDAgbiAKMDAwMDM4MDc2NyAwMDAwMCBuIAowMDAwMzgwOTg2IDAwMDAwIG4gCjAwMDAzODEyMDYgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDEwNwovUm9vdCAxOSAwIFIKL0luZm8gMSAwIFI+PgpzdGFydHhyZWYKMzgxNDIzCiUlRU9G",
                "fileName": "A to Z in Marvel Comic Series.pdf",
                "release": 2,
                "released": true,
                "copyright": "public domain",
                "classification": "general",
                "status": "released",
                "percentage": 100,
                "releaseDate": "2019-01-30T17:00:53.563Z",
                "keywords": ["general info", "series"],
                "cshKeywords": ["series"],
                "changeNote": "Uploaded linked document.",
                "updatedDate": "2019-01-30T17:00:53.563Z",
                "createdDate": "2019-01-30T16:54:51.637Z"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/resources/folder/{id}": {
      "get": {
        "description": "Return information about a Panviva folder and references to each of its direct children",
        "operationId": "ResourcesFolderById",
        "summary": "Folder",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderResponse"
            },
            "examples": {
              "application/json": {
                "id": "342",
                "name": "the films",
                "description": "Films that make a grown man squeal by the memories of his childhood.",
                "version": 10,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/children",
                    "rel": "children",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/translations",
                    "rel": "translations",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/folder/{id}/children": {
      "get": {
        "description": "Gets all the immediate children of a Panviva folder, not including grandchildren. Children can be folders, documents, or files (external documents)",
        "operationId": "ResourcesFolderByIdChildren",
        "summary": "Folder Children",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderChildrenResponse"
            },
            "examples": {
              "application/json": {
                "children": [
                  {
                    "id": "84374",
                    "name": "Infinity stones",
                    "description": "All information relating to Marvel's infinity stones.",
                    "version": 1,
                    "language": "en-AU",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15T00:00:00Z"
                      }
                    ],
                    "hidden": true,
                    "type": "folder",
                    "links": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/folder/{id}/translations": {
      "get": {
        "description": "Gets all the translations of a Panviva folder, along with each translated folders respective children",
        "operationId": "ResourcesFolderByIdTranslations",
        "summary": "Folder Translations",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The internal id (IID) of a Panviva folder",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "84374",
                    "name": "die Filme",
                    "description": "Filme, die einen erwachsenen Mann durch die Erinnerungen an seine Kindheit zum Quietschen bringen.",
                    "version": 1,
                    "language": "de-DE",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15T00:00:00Z"
                      }
                    ],
                    "hidden": false,
                    "type": "folder",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                        "rel": "translations",
                        "type": "GET"
                      },
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                        "rel": "children",
                        "type": "GET"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/folder/root": {
      "get": {
        "description": "Gets the root/home folder in all of Panviva, which can be drilled into using the Get Folder Children endpoint. Note this endpoint was formerly referred to as the 'Folder Search' endpoint",
        "operationId": "ResourcesFolderRoot",
        "summary": "Folder Root",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetFolderRootResponse"
            },
            "examples": {
              "application/json": {
                "id": "1",
                "name": "Home",
                "description": "The Home folder of Panviva",
                "version": 8,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15T00:00:00Z"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                    "rel": "children",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/{instance}/resources/image/{id}": {
      "get": {
        "description": "Returns an image from Panviva. Image data is represented as a base64 string",
        "operationId": "ResourcesImageById",
        "summary": "Image",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "name": "id",
            "in": "path",
            "description": "The id of a Panviva image",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetImageResponse"
            },
            "examples": {
              "application/json": {
                "id": "627",
                "name": "avengers-marvel-marvel-comics",
                "width": 128,
                "height": 128,
                "size": 12311,
                "contentType": "image/png",
                "content": "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAIAAABMXPacAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAC+sSURBVHhe7Xz3nxRl1u/90+7n3sh/tkrt4vFHyBAXgASfwuuzLg0LCJTeB7wp3ccA/yRs8O8I82DPvwjswME71psv ...................................... Y/zniEzcr3ZXrg2s9fxSz495H+/l9MgF9ZMtUoAbnc5Pev+qvCDq+EQ1OTAJik5xC+bXoE+LOH9tEc+QQwvIVhyxqce6crjvCNWPVz2zkCmmN8VnAEp+KNgEtRpuAFqNNQIvRJqDFaBPQYrQJaDHaBLQYbQJajDYBLUabgBajTUCL0SagxWgT0GK0CWgx2gS0GG0CWow2AS1Gm4AWo01Ai9EmoMVoE9BitAloMdoEtBhtAlqMNgEtRpuAFqNNQIvRJqDFaBPQYrQJaCkk6f8DK/JmX1NVAtQAAAAASUVORK5CYII="
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/{instance}/resources/artefactcategory": {
      "get": {
        "description": "Gets a list of all available artefact categories",
        "operationId": "ResourcesArtefactCategoriesGet",
        "summary": "Get Artefact Categories",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource. An example of a successful response can be seen in the Sample payload.",
            "schema": {
              "$ref": "#/definitions/GetArtefactCategoriesResponse"
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": 1,
                    "categoryName": "Marvel Cinematic Universe"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important"
      },
      "post": {
        "description": "Creates a category for classifying artefacts",
        "operationId": "ResourcesArtefactCategoryPost",
        "summary": "Create Artefact Category",
        "tags": ["Resources"],
        "parameters": [
          {
            "x-ms-summary": "Instance",
            "x-ms-url-encoding": "single",
            "name": "instance",
            "in": "path",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "postArtefactCategoryRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryRequest"
            },
            "description": "JSON object containing the category name"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryResponse"
            },
            "examples": {
              "application/json": {
                "categoryId": 1,
                "categoryName": "Marvel Cinematic Universe"
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax. The client should not repeat the request without modifications.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Out of call volume quota.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Document not found - The server has not found anything matching the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed - The method specified in the request is not allowed for the resource identified by the request URI.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable - The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. If accept headers is specified, application/json must be the only media type.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. The only supported media type is application/json.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "429": {
            "description": "Too many requests - The number of requests has reached the planâ€™s rate limit.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Panviva servers are under maintenance.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    }
  },
  "definitions": {
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResourceSearchResult": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "matchedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "snippet": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "GetSearchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSearchResult"
          }
        },
        "total": {
          "type": "integer"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "StringInt64NullableKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Facet": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringInt64NullableKeyValuePair"
          }
        }
      }
    },
    "ResponseSection": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "resourceLocation": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "MetaDataValueDetails": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataType": {
          "type": "string"
        }
      }
    },
    "QueryVariation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "searchScore": {
          "type": "number"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "primaryQuery": {
          "type": "string"
        },
        "panvivaDocumentId": {
          "type": "integer"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GetSearchArtefactResponse": {
      "type": "object",
      "properties": {
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResult"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "PostLiveCshRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The CSH term to search for.",
          "type": "string"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        }
      }
    },
    "PostLiveCshResponse": {
      "type": "object"
    },
    "PostLiveDocumentRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "id": {
          "description": "The Document ID of the Panviva Document you wish to send.",
          "type": "string"
        },
        "location": {
          "description": "The Section ID you would like the user to see, when the specified document is opened.",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        }
      }
    },
    "PostLiveDocumentResponse": {
      "type": "object"
    },
    "PostLiveSearchRequest": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The term to search for.",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        }
      }
    },
    "PostLiveSearchResponse": {
      "type": "object"
    },
    "GetContainerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Training": {
      "type": "object",
      "properties": {
        "failureFeedback": {
          "type": "string"
        },
        "forcePageSequence": {
          "type": "boolean"
        },
        "forceQuestionSequence": {
          "type": "boolean"
        },
        "passingScore": {
          "type": "integer"
        },
        "successFeedback": {
          "type": "string"
        }
      }
    },
    "GetDocumentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "reusableContent": {
          "type": "boolean"
        },
        "changeNote": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ResponseVariation": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        },
        "id": {
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetResponseResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseVariation"
          }
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "primaryQuery": {
          "type": "string"
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "panvivaDocumentId": {
          "type": "integer"
        },
        "panvivaDocumentVersion": {
          "type": "integer"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Container": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "GetDocumentContainersResponse": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        }
      }
    },
    "ContainerRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskFlow": {
          "type": "string"
        }
      }
    },
    "GetDocumentContainerRelationshipsResponse": {
      "type": "object",
      "properties": {
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRelationship"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "reusableContent": {
          "type": "boolean"
        },
        "changeNote": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "GetDocumentTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "origin": {
          "type": "string"
        }
      }
    },
    "GetFileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "changeNote": {
          "type": "string"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetFolderResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "GetFolderChildrenResponse": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      }
    },
    "Folder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "GetFolderTranslationsResponse": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      }
    },
    "GetFolderRootResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "GetImageResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "contentType": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "ArtefactCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        }
      }
    },
    "GetArtefactCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactCategory"
          }
        }
      }
    },
    "PostArtefactCategoryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PostArtefactCategoryResponse": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "tags": []
}
