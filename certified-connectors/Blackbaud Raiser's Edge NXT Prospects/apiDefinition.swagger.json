{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud Raisers Edge NXT Pro",
    "description": "Blackbaud Raiser's Edge NXT is a comprehensive cloud-based fundraising and donor management software solution built specifically for nonprofits and the entire social good community. Use the Prospects connector to manage prospects, opportunities, and ratings.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-raisers-edge-nxt"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "skyApiOAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2.sky.blackbaud.com/authorization",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "skyApiOAuth": []
    }
  ],
  "paths": {
    "/constituent/v1/constituents/{constituent_id}/prospectstatus": {
      "get": {
        "operationId": "GetConstituentProspectStatus",
        "summary": "Get constituent prospect status",
        "description": "Returns the current prospect status for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent for whom the prospect status is to be retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ProspectStatusRead"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the prospect status."
          },
          "404": {
            "description": "Returned when the specified constituent is not found or has no prospect status."
          }
        }
      }
    },
    "/constituent/v1/constituents/{constituent_id}/ratings": {
      "get": {
        "operationId": "ListConstituentRatings",
        "summary": "List constituent ratings",
        "description": "Returns the list of ratings for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive ratings?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "most_recent_only",
            "in": "query",
            "description": "Include only the most recent ratings?",
            "type": "boolean",
            "x-ms-summary": "Only most recent?",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfRatingRead"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the ratings."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/constituent/v1/ratings": {
      "post": {
        "operationId": "CreateConstituentRating",
        "summary": "Create a constituent rating",
        "description": "Creates a new constituent rating.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.RatingAdd"
            },
            "description": "An object that represents the rating to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a rating. The response body contains the ID of the new rating.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.CreatedConstituentRating"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the rating."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/constituent/v1/ratings/categories": {
      "get": {
        "operationId": "ListRatingCategories",
        "summary": "List rating categories",
        "description": "Lists the rating categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive categories?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?"
          },
          {
            "name": "source_name",
            "in": "query",
            "description": "The source to filter the categories. To return all categories, do not include source_name. To return all categories that do not have a source, include source_name in the request URL with an empty value.",
            "type": "string",
            "x-ms-summary": "Source name"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfRatingCategoryRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          }
        }
      }
    },
    "/constituent/v1/ratings/sources": {
      "get": {
        "operationId": "ListRatingSources",
        "summary": "List rating sources",
        "description": "Lists the country definitions.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive sources?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfRatingSourceRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameter is not in the appropriate format."
          }
        }
      }
    },
    "/list/v1/lists": {
      "get": {
        "operationId": "ListLists",
        "summary": "List lists",
        "description": "Get a list of lists.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_type",
            "in": "query",
            "description": "The type of list to return.",
            "required": true,
            "type": "string",
            "x-ms-summary": "List type",
            "default": "Constituent",
            "enum": [
              "Constituent",
              "Gift",
              "Action",
              "Opportunity"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ListApi.ApiCollectionOfList"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          }
        }
      }
    },
    "/opportunity/v1/opportunities": {
      "get": {
        "operationId": "ListOpportunities",
        "summary": "List opportunities",
        "description": "Returns a list of opportunities.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "query",
            "description": "Defines a list identifier used to filter the set of opportunities to those included in the specified list. If this value is set, other specified filters will be ignored.",
            "type": "string",
            "x-ms-summary": "List",
            "x-ms-dynamic-values": {
              "operationId": "ListLists",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "list_type": "Opportunity"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "ListLists",
              "itemsPath": "value",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "parameters": {
                "list_type": {
                  "value": "Opportunity"
                }
              }
            }
          },
          {
            "name": "constituent_id",
            "in": "query",
            "description": "Represents a comma-separated list of constituent system record IDs to filter the results. For example, \"280,1232\" returns only opportunities from constituent 280 or constituent 1232.",
            "type": "string",
            "x-ms-summary": "Constituent ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive opportunities?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to opportunities created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to opportunities modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.ApiCollectionOfOpportunityRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the opportunities."
          }
        }
      },
      "post": {
        "operationId": "CreateOpportunity",
        "summary": "Create an opportunity",
        "description": "Creates a new opportunity.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityAdd"
            },
            "description": "An object that represents the opportunity to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an opportunity. The response body contains the ID of the new opportunity.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.CreatedOpportunity"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the opportunity."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/{opportunity_id}": {
      "get": {
        "operationId": "GetOpportunity",
        "summary": "Get an opportunity",
        "description": "Returns information about an opportunity.  Note: This endpoint returns the status property with a latency of about 10 minutes.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "description": "The system record ID of the opportunity to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityRead"
            }
          },
          "400": {
            "description": "Returned when the specified opportunity ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the opportunity."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      },
      "patch": {
        "operationId": "EditOpportunity",
        "summary": "Update an opportunity",
        "description": "Updates an opportunity.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "description": "The system record ID of the opportunity to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityEdit"
            },
            "description": "An object that represents the properties of the opportunity to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the opportunity."
          },
          "400": {
            "description": "Returned when the specified opportunity ID in the request URL body or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to edit the opportunity."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/{opportunity_id}/attachments": {
      "get": {
        "operationId": "ListOpportunityAttachments",
        "summary": "List opportunity attachments",
        "description": "Lists the attachments for an opportunity.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "description": "The system record ID of the opportunity.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.ApiCollectionOfOpportunityAttachmentRead"
            }
          },
          "400": {
            "description": "Returned when the specified opportunity ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attachments."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/{opportunity_id}/customfields": {
      "get": {
        "operationId": "ListOpportunityCustomFields",
        "summary": "List opportunity custom fields",
        "description": "Lists the custom fields for an opportunity.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "opportunity_id",
            "in": "path",
            "description": "The system record ID of the opportunity.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Opportunity ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.ApiCollectionOfOpportunityCustomFieldRead"
            }
          },
          "400": {
            "description": "Returned when the specified opportunity ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the custom fields."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/attachments": {
      "post": {
        "operationId": "CreateOpportunityAttachment",
        "summary": "Create an opportunity attachment",
        "description": "Creates a new opportunity attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityAttachmentAdd"
            },
            "description": "An object that represents the attachment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an attachment. The response body contains the ID of the new attachment.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.CreatedOpportunityAttachment"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the attachment."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/attachments/{attachment_id}": {
      "patch": {
        "operationId": "EditOpportunityAttachment",
        "summary": "Update an opportunity attachment",
        "description": "Updates an opportunity attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "The system record ID of the attachment to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityAttachmentEdit"
            },
            "description": "An object that represents the properties of the attachment to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the attachment."
          },
          "400": {
            "description": "Returned when the specified attachment ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the attachment."
          },
          "404": {
            "description": "Returned when the specified attachment is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/customfields": {
      "post": {
        "operationId": "CreateOpportunityCustomField",
        "summary": "Create an opportunity custom field",
        "description": "Creates a new opportunity custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityCustomFieldAdd"
            },
            "description": "An object that represents the custom field to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a custom field. The response body contains the ID of the new custom field.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.CreatedOpportunityCustomField"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the custom field."
          },
          "404": {
            "description": "Returned when the specified opportunity is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/customfields/{custom_field_id}": {
      "patch": {
        "operationId": "EditOpportunityCustomField",
        "summary": "Update an opportunity custom field",
        "description": "Updates an opportunity custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "The system record ID of the custom field to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Custom field ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.OpportunityCustomFieldEdit"
            },
            "description": "An object that represents the properties of the custom field to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the custom field."
          },
          "400": {
            "description": "Returned when the specified custom field ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the custom field."
          },
          "404": {
            "description": "Returned when the specified custom field is not found."
          }
        }
      }
    },
    "/opportunity/v1/opportunities/customfields/categories": {
      "get": {
        "operationId": "ListOpportunityCustomFieldCategories",
        "summary": "List custom field categories",
        "description": "Lists the opportunity custom field categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/OpportunityApi.ApiCollectionOfCustomFieldCategoryRead"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view custom field categories."
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues": {
      "get": {
        "operationId": "GetDynamicValues",
        "summary": "Get dynamic values",
        "description": "List dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "route",
            "in": "query",
            "description": "The route within the specified SKY API to call to produce the values for the dynamic list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues/customfields": {
      "get": {
        "operationId": "GetCustomFieldCodeTableDynamicValues",
        "summary": "Get custom field code table dynamic values",
        "description": "List custom field code table dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicproperties/customfields": {
      "get": {
        "operationId": "GetCustomFieldDynamicProperties",
        "summary": "Get custom field dynamic properties",
        "description": "List custom field dynamic properties.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the endpoint that will be used to fetch the custom field category definition.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicProperties"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicproperties/ratings": {
      "get": {
        "operationId": "GetRatingDynamicProperties",
        "summary": "Get rating category dynamic properties",
        "description": "List rating category dynamic properties.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "source_name",
            "in": "query",
            "description": "The rating source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicProperties"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConstituentApi.ApiCollectionOfRatingCategoryRead": {
      "type": "object",
      "description": "Rating categories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.RatingCategoryRead"
          }
        }
      }
    },
    "ConstituentApi.ApiCollectionOfRatingRead": {
      "type": "object",
      "description": "Ratings",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.RatingRead"
          }
        }
      }
    },
    "ConstituentApi.ApiCollectionOfRatingSourceRead": {
      "type": "object",
      "description": "Rating sources",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.RatingSourceRead"
          }
        }
      }
    },
    "ConstituentApi.CreatedConstituentRating": {
      "type": "object",
      "description": "Created constituent rating",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent rating.",
          "x-ms-summary": "ID"
        }
      }
    },
    "ConstituentApi.ProspectStatusRead": {
      "type": "object",
      "description": "Prospect status",
      "properties": {
        "status": {
          "type": "string",
          "description": "The constituent's current prospect status.",
          "x-ms-summary": "Status"
        },
        "days_elapsed": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of days in the current prospect status based on the start date.",
          "x-ms-summary": "Days elapsed"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the prospect status.",
          "x-ms-summary": "Start date"
        },
        "comments": {
          "type": "string",
          "description": "The comments on the prospect status.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "ConstituentApi.RatingAdd": {
      "type": "object",
      "description": "Ratings indicate the estimated wealth of constituents and their capacity to give. Ratings information such as overall wealth ratings, suggested ask amounts, and total identified assets can help to determine where to focus efforts, whether to pursue prospects or major gifts, and how much to ask from donors.",
      "required": [
        "constituent_id",
        "source",
        "category",
        "date"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the rating.",
          "x-ms-summary": "Constituent ID"
        },
        "source": {
          "type": "string",
          "description": "The source of the new rating.",
          "x-ms-summary": "Source",
          "x-ms-dynamic-values": {
            "operationId": "ListRatingSources",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListRatingSources",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "category": {
          "type": "string",
          "description": "The category of the rating.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListRatingCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name",
            "parameters": {
              "source_name": {
                "parameter": "source"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListRatingCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name",
            "parameters": {
              "source_name": {
                "parameterReference": "body/source"
              }
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the rating (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetRatingDynamicProperties",
            "parameters": {
              "source_name": {
                "parameter": "source"
              },
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetRatingDynamicProperties",
            "parameters": {
              "source_name": {
                "parameterReference": "body/source"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "comment": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "A comment about the rating. Character limit: 255.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "ConstituentApi.RatingCategoryRead": {
      "type": "object",
      "description": "Rating category",
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "Is the category inactive?",
          "x-ms-summary": "Inactive?"
        },
        "name": {
          "type": "string",
          "description": "The name of the rating category.",
          "x-ms-summary": "Name"
        },
        "source_name": {
          "type": "string",
          "description": "The source of the category.",
          "x-ms-summary": "Source"
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the rating category.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "DateTime",
            "Currency",
            "Boolean",
            "CodeTable",
            "Unknown"
          ]
        }
      }
    },
    "ConstituentApi.RatingRead": {
      "type": "object",
      "description": "Rating",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the rating.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the rating.",
          "x-ms-summary": "Constituent ID"
        },
        "source": {
          "type": "string",
          "description": "The source of the new rating.",
          "x-ms-summary": "Source"
        },
        "category": {
          "type": "string",
          "description": "The category of the rating.",
          "x-ms-summary": "Category"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the rating.",
          "x-ms-summary": "Date"
        },
        "value": {
          "description": "The value of the rating.",
          "x-ms-summary": "Description"
        },
        "comment": {
          "type": "string",
          "description": "A comment about the rating.",
          "x-ms-summary": "Comments"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the rating inactive?",
          "x-ms-summary": "Inactive?"
        },
        "type": {
          "type": "string",
          "description": "This computed field indicates the type of data that the rating represents based on the category property.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "DateTime",
            "Currency",
            "Boolean",
            "CodeTable",
            "Unknown"
          ]
        }
      }
    },
    "ConstituentApi.RatingSourceRead": {
      "type": "object",
      "description": "Rating source",
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "Is the rating source inactive?",
          "x-ms-summary": "Inactive?"
        },
        "name": {
          "type": "string",
          "description": "The name of the rating source.",
          "x-ms-summary": "Name"
        }
      }
    },
    "ListApi.ApiCollectionOfList": {
      "type": "object",
      "description": "Lists",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of lists in the set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response.",
          "items": {
            "$ref": "#/definitions/ListApi.ApiList"
          }
        }
      }
    },
    "ListApi.ApiList": {
      "type": "object",
      "description": "List",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID for the list."
        },
        "name": {
          "type": "string",
          "description": "The name of the list."
        }
      }
    },
    "OpportunityApi.ApiCollectionOfCustomFieldCategoryRead": {
      "type": "object",
      "description": "Custom field categories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/OpportunityApi.CustomFieldCategoryRead"
          }
        }
      }
    },
    "OpportunityApi.ApiCollectionOfOpportunityAttachmentRead": {
      "type": "object",
      "description": "Attachments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/OpportunityApi.OpportunityAttachmentRead"
          }
        }
      }
    },
    "OpportunityApi.ApiCollectionOfOpportunityCustomFieldRead": {
      "type": "object",
      "description": "Custom fields",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/OpportunityApi.OpportunityCustomFieldRead"
          }
        }
      }
    },
    "OpportunityApi.ApiCollectionOfOpportunityRead": {
      "type": "object",
      "description": "Opportunities",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/OpportunityApi.OpportunityRead"
          }
        }
      }
    },
    "OpportunityApi.CreatedOpportunity": {
      "type": "object",
      "description": "Created opportunity",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created opportunity.",
          "x-ms-summary": "ID"
        }
      }
    },
    "OpportunityApi.CreatedOpportunityAttachment": {
      "type": "object",
      "description": "Created opportunity attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created opportunity attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "OpportunityApi.CreatedOpportunityCustomField": {
      "type": "object",
      "description": "Created opportunity attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created opportunity attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "OpportunityApi.CustomFieldCategoryRead": {
      "type": "object",
      "description": "Custom field category",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom field category.",
          "x-ms-summary": "Name"
        },
        "type": {
          "type": "string",
          "description": "The type of data that custom fields with this category represent.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        }
      }
    },
    "OpportunityApi.Fundraiser": {
      "type": "object",
      "description": "Fundraiser",
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the fundraiser.",
          "x-ms-summary": "Constituent ID"
        },
        "credit_amount": {
          "type": "object",
          "description": "The amount credited to the fundraiser for the opportunity.",
          "x-ms-summary": "Credit amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        }
      }
    },
    "OpportunityApi.OpportunityAdd": {
      "type": "object",
      "description": "Opportunities help you plan and track efforts to build relationships with prospects and secure major gifts. They can manage information about fundraising activities and the effectiveness of your efforts.",
      "required": [
        "constituent_id",
        "purpose",
        "name"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the opportunity.",
          "x-ms-summary": "Constituent ID"
        },
        "purpose": {
          "type": "string",
          "description": "The intended use for any money raised as a result of the opportunity.",
          "x-ms-summary": "Purpose",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "opportunity",
              "route": "opportunitypurposes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "route": {
                "value": "opportunitypurposes"
              }
            }
          }
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The name that identifies the opportunity throughout the program, such as in lists or on constituent records. Character limit: 255.",
          "x-ms-summary": "Name"
        },
        "status": {
          "type": "string",
          "description": "The status that indicates where the opportunity is in the solicitation process.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "opportunity",
              "route": "opportunitystatuses"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "route": {
                "value": "opportunitystatuses"
              }
            }
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The goal date for the opportunity to result in a gift (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Deadline"
        },
        "ask_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the solicitation was made (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Ask date"
        },
        "ask_amount": {
          "type": "object",
          "description": "The monetary amount solicited from the prospect for the opportunity.",
          "x-ms-summary": "Ask amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "expected_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect is expected to give in response to the opportunity (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Expected date"
        },
        "expected_amount": {
          "type": "object",
          "description": "The monetary amount that is realistically expected to result from the opportunity.",
          "x-ms-summary": "Expected amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "funded_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect gave in response to the opportunity (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Funded date"
        },
        "funded_amount": {
          "type": "object",
          "description": "The monetary amount that the prospect gave in response to the opportunity.",
          "x-ms-summary": "Funded amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the opportunity. The campaign sets the overall objectives for raising money.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the opportunity. The fund designates the specific financial purpose of a gift and identifies the financial account for that gift.",
          "x-ms-summary": "Fund ID"
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers assigned to the opportunity.",
          "x-ms-summary": "Fundraiser(s)",
          "items": {
            "$ref": "#/definitions/OpportunityApi.Fundraiser"
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the opportunity inactive?",
          "x-ms-summary": "Inactive?"
        }
      }
    },
    "OpportunityApi.OpportunityAttachmentAdd": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "required": [
        "parent_id",
        "type"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the attachment.",
          "x-ms-summary": "Opportunity ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z'). This field defaults to the current date and time if not supplied.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDynamicValues",
              "value-collection": "value",
              "value-path": "item",
              "value-title": "item",
              "parameters": {
                "api": "opportunity",
                "route": "attachmenttags"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "GetDynamicValues",
              "itemsPath": "value",
              "itemValuePath": "item",
              "itemTitlePath": "item",
              "parameters": {
                "api": {
                  "value": "opportunity"
                },
                "route": {
                  "value": "attachmenttags"
                }
              }
            }
          }
        }
      }
    },
    "OpportunityApi.OpportunityAttachmentEdit": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDynamicValues",
              "value-collection": "value",
              "value-path": "item",
              "value-title": "item",
              "parameters": {
                "api": "opportunity",
                "route": "attachmenttags"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "GetDynamicValues",
              "itemsPath": "value",
              "itemValuePath": "item",
              "itemTitlePath": "item",
              "parameters": {
                "api": {
                  "value": "opportunity"
                },
                "route": {
                  "value": "attachmenttags"
                }
              }
            }
          }
        }
      }
    },
    "OpportunityApi.OpportunityAttachmentRead": {
      "type": "object",
      "description": "Attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attachment.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the attachment.",
          "x-ms-summary": "Opportunity ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "thumbnail_url": {
          "type": "string",
          "description": "The URL for a thumbnail. For physical attachments that are images only. Contains a time-bound signature that limits access to 60 minutes.",
          "x-ms-summary": "Thumbnail URL"
        },
        "content_type": {
          "type": "string",
          "description": "The content type. For physical attachments only.",
          "x-ms-summary": "Content type"
        },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The file size in bytes. For physical attachments only.",
          "x-ms-summary": "File size"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpportunityApi.OpportunityCustomFieldAdd": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "required": [
        "parent_id",
        "category"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the custom field.",
          "x-ms-summary": "Opportunity ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListOpportunityCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListOpportunityCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "opportunity",
              "custom_field_type": "opportunities",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "custom_field_type": {
                "value": "opportunities"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "OpportunityApi.OpportunityCustomFieldEdit": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The custom field category (required if updating the custom field value).",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListOpportunityCustomFieldCategories",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListOpportunityCustomFieldCategories",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "opportunity",
              "custom_field_type": "opportunities",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "custom_field_type": {
                "value": "opportunities"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "OpportunityApi.OpportunityCustomFieldRead": {
      "type": "object",
      "description": "Custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the custom field.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the custom field.",
          "x-ms-summary": "Opportunity ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category"
        },
        "type": {
          "type": "string",
          "description": "The type of data that the custom field represents.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        },
        "value": {
          "description": "The value of the custom field.",
          "x-ms-summary": "Value"
        },
        "text_value": {
          "type": "string",
          "description": "The text value of the custom field.",
          "x-ms-summary": "Text value"
        },
        "number_value": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric value of the custom field.",
          "x-ms-summary": "Number value"
        },
        "date_value": {
          "type": "string",
          "format": "date",
          "description": "The date value of the custom field.",
          "x-ms-summary": "Date value"
        },
        "currency_value": {
          "type": "number",
          "format": "double",
          "description": "The currency value of the custom field.",
          "x-ms-summary": "Currency value"
        },
        "boolean_value": {
          "type": "boolean",
          "description": "The boolean value of the custom field.",
          "x-ms-summary": "Boolean value"
        },
        "codetableentry_value": {
          "type": "string",
          "description": "The table entry value of the custom field.",
          "x-ms-summary": "Table entry value"
        },
        "constituentid_value": {
          "type": "string",
          "description": "The constituent ID value of the custom field.",
          "x-ms-summary": "Constituent ID value"
        },
        "fuzzydate_value": {
          "type": "object",
          "description": "The fuzzy date value of the custom field.",
          "x-ms-summary": "Fuzzy date value",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field.",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "OpportunityApi.OpportunityEdit": {
      "type": "object",
      "description": "Opportunities help you plan and track efforts to build relationships with prospects and secure major gifts. They can manage information about fundraising activities and the effectiveness of your efforts.",
      "properties": {
        "purpose": {
          "type": "string",
          "description": "The intended use for any money raised as a result of the opportunity.",
          "x-ms-summary": "Purpose",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "opportunity",
              "route": "opportunitypurposes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "route": {
                "value": "opportunitypurposes"
              }
            }
          }
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The name that identifies the opportunity throughout the program, such as in lists or on constituent records. Character limit: 255.",
          "x-ms-summary": "Name"
        },
        "status": {
          "type": "string",
          "description": "The status that indicates where the opportunity is in the solicitation process.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "opportunity",
              "route": "opportunitystatuses"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "opportunity"
              },
              "route": {
                "value": "opportunitystatuses"
              }
            }
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The goal date for the opportunity to result in a gift (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Deadline"
        },
        "ask_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the solicitation was made (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Ask date"
        },
        "ask_amount": {
          "type": "object",
          "description": "The monetary amount solicited from the prospect for the opportunity.",
          "x-ms-summary": "Ask amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "expected_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect is expected to give in response to the opportunity (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Expected date"
        },
        "expected_amount": {
          "type": "object",
          "description": "The monetary amount that is realistically expected to result from the opportunity.",
          "x-ms-summary": "Expected amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "funded_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect gave in response to the opportunity (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Funded date"
        },
        "funded_amount": {
          "type": "object",
          "description": "The monetary amount that the prospect gave in response to the opportunity.",
          "x-ms-summary": "Funded amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the opportunity. The campaign sets the overall objectives for raising money.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the opportunity. The fund designates the specific financial purpose of a gift and identifies the financial account for that gift.",
          "x-ms-summary": "Fund ID"
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers assigned to the opportunity.",
          "x-ms-summary": "Fundraiser(s)",
          "items": {
            "$ref": "#/definitions/OpportunityApi.Fundraiser"
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the opportunity inactive?",
          "x-ms-summary": "Inactive?"
        }
      }
    },
    "OpportunityApi.OpportunityRead": {
      "type": "object",
      "description": "Opportunity",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the opportunity.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the opportunity.",
          "x-ms-summary": "Constituent ID"
        },
        "purpose": {
          "type": "string",
          "description": "The intended use for any money raised as a result of the opportunity.",
          "x-ms-summary": "Purpose"
        },
        "name": {
          "type": "string",
          "description": "The name that identifies the opportunity throughout the program, such as in lists or on constituent records. Character limit: 255.",
          "x-ms-summary": "Name"
        },
        "status": {
          "type": "string",
          "description": "The status that indicates where the opportunity is in the solicitation process.",
          "x-ms-summary": "Status"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The goal date for the opportunity to result in a gift.",
          "x-ms-summary": "Deadline"
        },
        "ask_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the solicitation was made.",
          "x-ms-summary": "Ask date"
        },
        "ask_amount": {
          "type": "object",
          "description": "The monetary amount solicited from the prospect for the opportunity.",
          "x-ms-summary": "Ask amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "expected_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect is expected to give in response to the opportunity.",
          "x-ms-summary": "Expected date"
        },
        "expected_amount": {
          "type": "object",
          "description": "The monetary amount that is realistically expected to result from the opportunity.",
          "x-ms-summary": "Expected amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "funded_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the prospect gave in response to the opportunity.",
          "x-ms-summary": "Funded date"
        },
        "funded_amount": {
          "type": "object",
          "description": "The monetary amount that the prospect gave in response to the opportunity.",
          "x-ms-summary": "Funded amount",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "description": "The monetary value.",
              "x-ms-summary": "value"
            }
          }
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the opportunity. The campaign sets the overall objectives for raising money.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the opportunity. The fund designates the specific financial purpose of a gift and identifies the financial account for that gift.",
          "x-ms-summary": "Fund ID"
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers assigned to the opportunity.",
          "x-ms-summary": "Fundraiser(s)",
          "items": {
            "$ref": "#/definitions/OpportunityApi.Fundraiser"
          }
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the opportunity inactive?",
          "x-ms-summary": "Inactive?"
        },
        "linked_gifts": {
          "description": "The system record IDs of the gifts related to the opportunity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the opportunity was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the opportunity was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "PowerAutomateUIApi.DynamicValue": {
      "type": "object",
      "description": "A single dynamic value item",
      "properties": {
        "id": {
          "type": "string",
          "description": "The dynamic value item identifier."
        },
        "item": {
          "type": "string",
          "description": "The dynamic value item."
        }
      }
    },
    "PowerAutomateUIApi.DynamicValuesCollection": {
      "type": "object",
      "description": "A collection of objects for use with dynamic values.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items in the list."
        },
        "value": {
          "type": "array",
          "description": "The set of objects for use with dynamic values.",
          "items": {
            "$ref": "#/definitions/PowerAutomateUIApi.DynamicValue"
          }
        }
      }
    },
    "PowerAutomateUIApi.DynamicProperties": {
      "type": "object",
      "description": "Defines some (but potentially not all) dynamic OpenApi metadata properties needed for a custom field.",
      "properties": {
        "items": {
          "type": "object",
          "description": "The OpenApi properties for the custom field value.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The OpenApi type."
            },
            "format": {
              "type": "string",
              "description": "The OpenApi format."
            },
            "description": {
              "type": "string",
              "description": "The OpenApi description."
            }
          }
        }
      }
    }
  }
}
