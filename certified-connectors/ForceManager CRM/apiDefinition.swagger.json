{
  "swagger": "2.0",
  "info": {
    "title": "ForceManager CRM",
    "description": "ForceManager CRM is designed by and for field sales representatives. Built with their needs and priorities in mind, ForceManager's goal is to make sales reps' jobs easier, so they can focus on what really matters: sales and building strong relationships with customers.",
    "version": "0.9.8",
    "contact": {
      "name": "ForceManager CRM",
      "url": "https://www.forcemanager.com/contact/",
      "email": "integrations@forcemanager.com"
    }
  },
  "host": "api.forcemanager.com",
  "basePath": "/api/v4",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [],
  "security": [],
  "securityDefinitions": {},
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.forcemanager.com"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.forcemanager.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Business Management"
    }
  ],
  "paths": {
    "/procedure/zapier_schema": {
      "post": {
        "operationId": "GetCustomFieldsSchema",
        "summary": "Get entity custom fields schema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "object",
              "x-ms-summary": "Requested schema",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Schema of the requested entity",
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{id}": {
      "delete": {
        "summary": "Delete a Webhook",
        "description": "This operation allows you to delete a specific Webhook.",
        "operationId": "DeleteWebhook",
        "x-ms-summary": "Delete a Webhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/branches": {
      "get": {
        "summary": "List Branches",
        "description": "Returns all Branches.",
        "operationId": "ListBranches",
        "x-ms-summary": "List Branches",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BranchResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/countries": {
      "get": {
        "summary": "List Countries",
        "description": "Returns all Countries available.",
        "operationId": "ListCountries",
        "x-ms-summary": "List Countries",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "summary": "List Currencies",
        "description": "Returns all Currencies available.",
        "operationId": "ListCurrencies",
        "x-ms-summary": "List Currencies",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/timezones": {
      "get": {
        "summary": "List Timezones",
        "description": "Returns all Timezones available.",
        "operationId": "ListTimezones",
        "x-ms-summary": "List Timezones",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimezoneResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accountTypes": {
      "get": {
        "summary": "List Account Types",
        "description": "Returns all Account Types available in the user's ForceManager implementation database.",
        "operationId": "ListAccountTypes",
        "x-ms-summary": "List Account Types",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericValueListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accountStatuses": {
      "get": {
        "summary": "List Account Statuses",
        "description": "Returns all Account Statuses available in the user's ForceManager implementation database.",
        "operationId": "ListAccountStatuses",
        "x-ms-summary": "List Account Statuses",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountStatusListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accountSegments": {
      "get": {
        "summary": "List Account Segments",
        "description": "Returns all Account Segments available in the user's ForceManager implementation database.",
        "operationId": "ListAccountSegments",
        "x-ms-summary": "List Account Segments",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericValueListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contactTypes": {
      "get": {
        "summary": "List Contact Types",
        "description": "Returns all Contact Types available in the user's ForceManager implementation database.",
        "operationId": "ListContactTypes",
        "x-ms-summary": "List Contact Types",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericValueListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/opportunityTypes": {
      "get": {
        "summary": "List Opportunity Types",
        "description": "Returns all Opportunity Types available in the user's ForceManager implementation database.",
        "operationId": "ListOpportunityTypes",
        "x-ms-summary": "List Opportunity Types",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericValueListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/opportunityStatuses": {
      "get": {
        "summary": "List Opportunity Statuses",
        "description": "Returns all Opportunity Statuses available in the user's ForceManager implementation database.",
        "operationId": "ListOpportunityStatuses",
        "x-ms-summary": "List Opportunity Statuses",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityStatusListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/salesorderStatuses": {
      "get": {
        "summary": "List Sales Order Statuses",
        "description": "Returns all Sales Order Statuses available in the user's ForceManager implementation database.",
        "operationId": "ListSalesOrderStatuses",
        "x-ms-summary": "List Sales Order Statuses",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderStatusListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },    
    "/activityTypes": {
      "get": {
        "summary": "List Activity Types",
        "description": "Returns all Activity Types available in the user's ForceManager implementation database.",
        "operationId": "ListActivityTypes",
        "x-ms-summary": "List Activity Types",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "getFullList",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-ms-visibility": "internal",
            "description": "Download full list at code level"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericValueListResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List Users",
        "description": "Returns Users available in the user's ForceManager implementation database.",
        "operationId": "ListUsers",
        "x-ms-summary": "List Users",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "List Accounts",
        "description": "Returns Accounts available in the user's ForceManager implementation database.",
        "operationId": "ListAccounts",
        "x-ms-summary": "List Accounts",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create an Account",
        "description": "This operation allows you to create am Account.",
        "operationId": "CreateAccount",
        "x-ms-summary": "Create am Account",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountModel",
              "required": [
                "branchId",
                "name",
                "salesRepId1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "summary": "Get an Account",
        "description": "This operation retrieves data of a specific Account.",
        "operationId": "GetAccount",
        "x-ms-summary": "Get an Account",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update an Account",
        "description": "This operation allows you to update a specific Account.",
        "operationId": "UpdateAccount",
        "x-ms-summary": "Update an Account",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PutResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Account",
        "description": "This operation allows you to delete a specific Account from the user's ForceManager implementation database.",
        "operationId": "DeleteAccount",
        "x-ms-summary": "Delete an Account",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/hooks/insert": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResponse"
          }
        }
      },
      "post": {
        "summary": "When an Account is created",
        "description": "This operation triggers a flow when a new Account is created.",
        "operationId": "CreateAccountWebhook",
        "x-ms-summary": "When an Account is created",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Account",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "insert",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "account",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/accounts/hooks/update": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResponse"
          }
        }
      },
      "post": {
        "summary": "When an Account is updated",
        "description": "This operation triggers a flow when a new Account is updated.",
        "operationId": "UpdateAccountWebhook",
        "x-ms-summary": "When an Account is updated",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Account",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "update",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "account",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "summary": "List Contacts",
        "description": "Returns Contacts available in the user's ForceManager implementation database.",
        "operationId": "ListContacts",
        "x-ms-summary": "List Contacts",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a Contact",
        "description": "This operation allows you to create a Contact.",
        "operationId": "CreateContact",
        "x-ms-summary": "Create a Contact",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactModel",
              "required": [
                "branchId",
                "firstName",
                "lastName",
                "accountId",
                "salesRepId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Get a Contact",
        "description": "This operation retrieves data of a specific Contact.",
        "operationId": "GetContact",
        "x-ms-summary": "Get a Contact",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Contact",
        "description": "This operation allows you to update a specific Contact.",
        "operationId": "UpdateContact",
        "x-ms-summary": "Update a Contact",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PutResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Contact",
        "description": "This operation allows you to delete a specific Contact from the user's ForceManager implementation database.",
        "operationId": "DeleteContact",
        "x-ms-summary": "Delete a Contact",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contacts/hooks/insert": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactResponse"
          }
        }        
      },
      "post": {
        "summary": "When an Contact is created",
        "description": "This operation triggers a flow when a new Contact is created.",
        "operationId": "CreateContactWebhook",
        "x-ms-summary": "When an Contact is created",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Contact",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "insert",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "contact",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/contacts/hooks/update": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactResponse"
          }
        }
      },
      "post": {
        "summary": "When an Contact is updated",
        "description": "This operation triggers a flow when a new Contact is updated.",
        "operationId": "UpdateContactWebhook",
        "x-ms-summary": "When an Contact is updated",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Contact",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "update",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "contact",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/opportunities": {
      "get": {
        "summary": "List Opportunities",
        "description": "Returns Opportunities available in the user's ForceManager implementation database.",
        "operationId": "ListOpportunities",
        "x-ms-summary": "List Opportunities",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpportunityResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create an Opportunity",
        "description": "This operation allows you to create an Opportunity.",
        "operationId": "CreateOpportunity",
        "x-ms-summary": "Create an Opportunity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpportunityModel",
              "required": [
                "branchId",
                "reference",
                "salesRepId",
                "salesProbability",
                "accountId1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/opportunities/{id}": {
      "get": {
        "summary": "Get an Opportunity",
        "description": "This operation retrieves data of a specific Opportunity.",
        "operationId": "GetOpportunity",
        "x-ms-summary": "Get an Opportunity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/OpportunityResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update an Opportunity",
        "description": "This operation allows you to update a specific Opportunity.",
        "operationId": "UpdateOpportunity",
        "x-ms-summary": "Update an Opportunity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpportunityModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PutResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Opportunity",
        "description": "This operation allows you to delete a specific Opportunity from the user's ForceManager implementation database.",
        "operationId": "DeleteOpportunity",
        "x-ms-summary": "Delete an Opportunity",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/opportunities/hooks/insert": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunityResponse"
          }
        }         
      },
      "post": {
        "summary": "When an Opportunity is created",
        "description": "This operation triggers a flow when a new Opportunity is created.",
        "operationId": "CreateOpportunityWebhook",
        "x-ms-summary": "When an Opportunity is created",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Opportunity",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "insert",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "opportunity",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/opportunities/hooks/update": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunityResponse"
          }
        }  
      },
      "post": {
        "summary": "When an Opportunity is updated",
        "description": "This operation triggers a flow when a new Opportunity is updated.",
        "operationId": "UpdateOpportunityWebhook",
        "x-ms-summary": "When an Opportunity is updated",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Opportunity",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "update",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "opportunity",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/salesorders": {
      "get": {
        "summary": "List Sales Orders",
        "description": "Returns Sales Orders available in the user's ForceManager implementation database.",
        "operationId": "ListSalesOrders",
        "x-ms-summary": "List Sales Orders",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a Sales Order",
        "description": "This operation allows you to create a Sales Order.",
        "operationId": "CreateSalesOrder",
        "x-ms-summary": "Create a Sales Order",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderModel",
              "required": [
                "branchId",
                "reference",
                "salesRepId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/salesorders/{id}": {
      "get": {
        "summary": "Get a Sales Order",
        "description": "This operation retrieves data of a specific Sales Order.",
        "operationId": "GetSalesOrder",
        "x-ms-summary": "Get a Sales Order",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/SalesOrderResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Sales Order",
        "description": "This operation allows you to update a specific Sales Order.",
        "operationId": "UpdateSalesOrder",
        "x-ms-summary": "Update a Sales Order",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PutResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Sales Order",
        "description": "This operation allows you to delete a specific Sales Order from the user's ForceManager implementation database.",
        "operationId": "DeleteSalesOrder",
        "x-ms-summary": "Delete a Sales Order",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/salesorders/hooks/insert": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderResponse"
          }
        }          
      },
      "post": {
        "summary": "When a Sales Order is created",
        "description": "This operation triggers a flow when a new Sales Order is created.",
        "operationId": "CreateSalesOrderWebhook",
        "x-ms-summary": "When a Sales Order is created",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Sales Order",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "insert",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "salesorder",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/salesorders/hooks/update": {
      "x-ms-notification-content": {
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderResponse"
          }
        } 
      },
      "post": {
        "summary": "When an Sales Order is updated",
        "description": "This operation triggers a flow when a new Sales Order is updated.",
        "operationId": "UpdateSalesOrderWebhook",
        "x-ms-summary": "When a Sales Order is updated",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-ms-visibility": "internal",
            "schema": {
              "type": "object",
              "x-ms-visibility": "internal",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name",
                  "default": "Power Automate Webhook - Insert Sales Order",
                  "x-ms-visibility": "internal",
                  "title": "The name of the Webhook"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "default": "update",
                  "x-ms-visibility": "internal",
                  "title": "The action associated to the Webhook"
                },
                "entity": {
                  "type": "string",
                  "description": "entity",
                  "default": "salesorder",
                  "x-ms-visibility": "internal",
                  "title": "The entity associated to the Webhook"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "The endpoint of the Webhook"
                }
              },
              "required": [
                "name",
                "action",
                "entity",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/salesordersLines": {
      "get": {
        "summary": "List Sales Orders Lines",
        "description": "Returns Sales Orders Lines available in the user's ForceManager implementation database.",
        "operationId": "ListSalesOrdersLines",
        "x-ms-summary": "List Sales Orders Lines",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "where",
            "x-ms-summary": "Where",
            "description": "Allows to filter data using any SQL string parameter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "x-ms-summary": "Page",
            "description": "Define the pagination data for the returned objects",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "x-ms-summary": "Order",
            "description": "Organise and view the results for a specific attribute in descendent order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lang",
            "x-ms-summary": "Language",
            "description": "Define the language in which you want to receive the response",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "x-ms-summary": "Count",
            "description": "The number of records to return in each page of results",
            "in": "header",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrderLineResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a Sales Order Line",
        "description": "This operation allows you to create a Sales Order Line.",
        "operationId": "CreateSalesOrderLine",
        "x-ms-summary": "Create a Sales Order Line",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderLineModel",
              "required": [
                "quantity",
                "price",
                "productId",
                "salesOrderId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or incorrect.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "408": {
            "description": "Request timed out. An operation has timed out on the client.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/salesordersLines/{id}": {
      "get": {
        "summary": "Get a Sales Order Line",
        "description": "This operation retrieves data of a specific Sales Order Line.",
        "operationId": "GetSalesOrderLine",
        "x-ms-summary": "Get a Sales Order Line",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/SalesOrderLineResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a Sales Order Line",
        "description": "This operation allows you to update a specific Sales Order Line.",
        "operationId": "UpdateSalesOrderLine",
        "x-ms-summary": "Update a Sales Order Line",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderLineModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/PutResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Sales Order Line",
        "description": "This operation allows you to delete a specific Sales Order Line from the user's ForceManager implementation database.",
        "operationId": "DeleteSalesOrderLine",
        "x-ms-summary": "Delete a Sales Order Line",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/IdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }   
  },
  "parameters": {
    "IdInPath": {
      "name": "id",
      "in": "path",
      "description": "Unique identifier of the entity",
      "required": true,
      "x-ms-summary": "Entity ID",
      "type": "integer",
      "x-ms-url-encoding": "single"
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AccountModel": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldsSchema",
            "value-path": "data",
            "parameters": {
              "entity": "empresas",
              "action": "create"
            }
          }
        },
        "name": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Name",
          "description": "Name of the Account"
        },
        "statusId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Status ID",
          "description": "Status ID of the Account",
          "x-ms-dynamic-values": {
            "operationId": "ListAccountStatuses",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "typeId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Type ID",
          "description": "Type ID of the Account",
          "x-ms-dynamic-values": {
            "operationId": "ListAccountTypes",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "vatNumber": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Vat Number",
          "description": "Value Added Tax identification number of the Account"
        },
        "phone": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Phone",
          "description": "First contact phone number for the Account"
        },
        "email": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Email",
          "description": "Account's email address"
        },
        "branchId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Branch ID",
          "description": "Branch ID of the Account",
          "x-ms-dynamic-values": {
            "operationId": "ListBranches",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "salesRepId1": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Rep 1 ID",
          "description": "First User responsible for the Account"
        },
        "salesRepId2": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Sales Rep 2 ID",
          "description": "Second User responsible for the Account"
        },
        "salesRepId3": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Sales Rep 3 ID",
          "description": "Third User responsible for the Account"
        },
        "salesRepId4": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Sales Rep 4 ID",
          "description": "Fourth User responsible for the Account"
        },
        "salesRepId5": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Sales Rep 5 ID",
          "description": "Fifth User responsible for the Account"
        },
        "comment": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Comment",
          "description": "Comment added to the Account"
        },
        "address1": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Address 1",
          "description": "The Account's main address. e.g. number, street, suite, apt#, postal code, etc."
        },
        "address2": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Address 2",
          "description": "The Account's second address"
        },
        "city": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "City",
          "description": "City name"
        },
        "postcode": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Postal Code",
          "description": "The Account's address postcode"
        },
        "region": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Region",
          "description": "Region/State name"
        },
        "countryId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Country ID",
          "description": "Country ID of the Account",
          "x-ms-dynamic-values": {
            "operationId": "ListCountries",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "extId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "External ID",
          "description": "External ID of the Account from a third party system"
        },
        "phone2": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Phone 2",
          "description": "Second contact phone number for the Account"
        },
        "phone3": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Phone 3",
          "description": "Third contact phone number for the Account"
        },
        "fax": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Fax",
          "description": "Account's fax number"
        },
        "website": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Website",
          "description": "The Account's website address"
        },
        "geocoded": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Geocoded",
          "description": "Flag to state if the Account has been geolocated"
        },
        "geocodingAccuracy": {
          "type": "integer",
          "x-ms-visibility": "advanced",
          "title": "Geocoding Accuracy",
          "description": "Accuracy radius based on information about cell towers and WiFi nodes that the mobile can detect"
        },
        "latitude": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Latitude",
          "description": "Geocode address for the latitude coordinates"
        },
        "longitude": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Longitude",
          "description": "Geocode address for the longitude coordinates"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Permission Level",
          "description": "Defines the visibility of the Account"
        },
        "public": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Public",
          "description": "Flag to state if the Account is visible to everyone regardless the permission level"
        },
        "readOnly": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Read-Only",
          "description": "Flag to state if the Account cannot be modified or deleted"
        },
        "rateId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Rate ID",
          "description": "Rate ID for the Account"
        },
        "segmentId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Segment ID",
          "description": "Segment ID for the Account",
          "x-ms-dynamic-values": {
            "operationId": "ListAccountSegments",
            "value-path": "id",
            "value-title": "description"
          }
        }
      }
    },
    "AccountResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "statusId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Status Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Status ID"
            }
          },
          "type": "object"
        },
        "typeId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Type Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Type ID"
            }
          },
          "type": "object"
        },
        "vatNumber": {
          "type": "string",
          "title": "Vat Number"
        },
        "phone": {
          "type": "string",
          "title": "Phone"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "branchId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Branch Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Branch ID"
            }
          },
          "type": "object"
        },
        "salesRepId1": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep 1 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep 1 ID"
            }
          },
          "type": "object"
        },
        "salesRepId2": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep 2 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep 2 ID"
            }
          },
          "type": "object"
        },
        "salesRepId3": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep 3 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep 3 ID"
            }
          },
          "type": "object"
        },
        "salesRepId4": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep 4 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep 4 ID"
            }
          },
          "type": "object"
        },
        "salesRepId5": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep 5 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep 5 ID"
            }
          },
          "type": "object"
        },
        "comment": {
          "type": "string",
          "title": "Comment"
        },
        "address1": {
          "type": "string",
          "title": "Address 1"
        },
        "address2": {
          "type": "string",
          "title": "Address 2"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "postcode": {
          "type": "string",
          "title": "Postal Code"
        },
        "region": {
          "type": "string",
          "title": "Region"
        },
        "countryId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Country Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Country ID"
            }
          },
          "type": "object"
        },
        "extId": {
          "type": "string",
          "title": "External ID"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "phone2": {
          "type": "string",
          "title": "Phone 2"
        },
        "phone3": {
          "type": "string",
          "title": "Phone 3"
        },
        "fax": {
          "type": "string",
          "title": "Fax"
        },
        "website": {
          "type": "string",
          "title": "Website"
        },
        "geocoded": {
          "type": "boolean",
          "title": "Geocoded"
        },
        "geocodingAccuracy": {
          "type": "integer",
          "title": "Geocoding Accuracy"
        },
        "latitude": {
          "type": "number",
          "title": "Latitude"
        },
        "longitude": {
          "type": "number",
          "title": "Longitude"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "title": "Permission Level"
        },
        "public": {
          "type": "boolean",
          "title": "Public"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read-Only"
        },
        "rateId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Rate Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Rate ID"
            }
          },
          "type": "object"
        },
        "segmentId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Segment Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Segment ID"
            }
          },
          "type": "object"
        }
      }
    },
    "ContactModel": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldsSchema",
            "value-path": "data",
            "parameters": {
              "entity": "contactos",
              "action": "create"
            }
          }
        },
        "firstName": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Name",
          "description": "First Name of the Contact"
        },
        "lastName": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Last Name",
          "description": "Last Name of the Contact"
        },
        "accountId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Account ID",
          "description": "Account ID related to the Contact"
        },
        "typeId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Type ID",
          "description": "Type ID of the Contact",
          "x-ms-dynamic-values": {
            "operationId": "ListContactTypes",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "phone1": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Phone 1",
          "description": "First phone number for the Contact"
        },
        "phone2": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Phone 2",
          "description": "Second phone number for the Contact"
        },
        "fax": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Fax",
          "description": "Contact's fax number"
        },
        "email": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Email",
          "description": "Contact's email address"
        },
        "email2": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Email 2",
          "description": "Contact's second email address"
        },
        "email3": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Email 3",
          "description": "Contact's third email address"
        },
        "salesRepId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Rep ID",
          "description": "User responsible for the Contact"
        },
        "comment": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Comment",
          "description": "Comment added to the Contact"
        },
        "address1": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Address 1",
          "description": "The Contact's main address. e.g. number, street, suite, apt#, postal code, etc."
        },
        "city": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "City",
          "description": "City name"
        },
        "postcode": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Postal Code",
          "description": "The Contact's address postcode"
        },
        "region": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Region",
          "description": "Region/State name"
        },
        "countryId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Country ID",
          "description": "Country ID of the Contact",
          "x-ms-dynamic-values": {
            "operationId": "ListCountries",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "extId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "External ID",
          "description": "External ID of the Contact from a third party system"
        },
        "birthday": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "title": "Birthday",
          "description": "The Contact's birthday"
        },
        "linkedin": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "LinkedIn",
          "description": "The Contact's LinkedIn profile name"
        },
        "skype": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Skype",
          "description": "The Contact's Skype name"
        },
        "useCompanyAddress": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Use Company Address",
          "description": "Flag to state if the Contact's address is the one of the associated Account"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Permission Level",
          "description": "Defines the visibility of the Contact"
        },
        "marketingCommunications": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Marketing Communications",
          "description": "Flag to state if the Contact can receive marketing communications"
        },
        "readOnly": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Read-Only",
          "description": "Flag to state if the Contact cannot be modified or deleted"
        },
        "gender": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Gender",
          "description": "Defines the gender (Male -> 0, Female -> 1)"
        }
      }
    },
    "ContactResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "firstName": {
          "type": "string",
          "title": "First Name"
        },
        "lasttName": {
          "type": "string",
          "title": "Last Name"
        },
        "accountId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account ID"
            }
          },
          "type": "object"
        },
        "typeId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Type Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Type ID"
            }
          },
          "type": "object"
        },
        "phone1": {
          "type": "string",
          "title": "Phone 1"
        },
        "phone2": {
          "type": "string",
          "title": "Phone 2"
        },
        "fax": {
          "type": "string",
          "title": "Fax"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "email2": {
          "type": "string",
          "title": "Email 2"
        },
        "email3": {
          "type": "string",
          "title": "Email 3"
        },
        "salesRepId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep ID"
            }
          },
          "type": "object"
        },
        "comment": {
          "type": "string",
          "title": "Comment"
        },
        "address1": {
          "type": "string",
          "title": "Address 1"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "postcode": {
          "type": "string",
          "title": "Postal Code"
        },
        "region": {
          "type": "string",
          "title": "Region"
        },
        "countryId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Country Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Country ID"
            }
          },
          "type": "object"
        },
        "extId": {
          "type": "string",
          "title": "External ID"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "birthday": {
          "type": "string",
          "format": "date-time",
          "title": "Birthday"
        },
        "linkedin": {
          "type": "string",
          "title": "LinkedIn"
        },
        "skype": {
          "type": "string",
          "title": "Skype"
        },
        "useCompanyAddress": {
          "type": "integer",
          "title": "Use Company Address"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "title": "Permission Level"
        },
        "marketingCommunications": {
          "type": "boolean",
          "title": "Marketing Communications"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read-Only"
        },
        "gender": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Gender Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Gender ID"
            }
          },
          "type": "object"
        }
      }
    },
    "OpportunityModel": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldsSchema",
            "value-path": "data",
            "parameters": {
              "entity": "expedientes",
              "action": "create"
            }
          }
        },
        "reference": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Reference",
          "description": "Opportunity's name"
        },
        "type_id": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Type ID",
          "description": "Type ID of the Opportunity",
          "x-ms-dynamic-values": {
            "operationId": "ListOpportunityTypes",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "statusId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Status ID",
          "description": "Status ID of the Opportunity",
          "x-ms-dynamic-values": {
            "operationId": "ListOpportunityStatuses",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "total": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Total",
          "description": "Total amount of the Opportunity"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Currency ID",
          "description": "Currency ID of the Opportunity",
          "x-ms-dynamic-values": {
            "operationId": "ListCurrencies",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "accountId1": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Account ID 1",
          "description": "First Account to whom the Opportunity is linked to"
        },
        "salesForecastDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "important",
          "title": "Sales Forecast Date",
          "description": "Forecast sale date"
        },
        "salesProbability": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Probability",
          "description": "Probability of sale"
        },
        "salesRepId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Rep ID",
          "description": "User responsible for the Opportunity"
        },
        "comments": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Comments",
          "description": "Comment added to the Opportunity"
        },
        "branchId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Branch ID",
          "description": "Branch ID of the Opportunity",
          "x-ms-dynamic-values": {
            "operationId": "ListBranches",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "accountId2": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Account ID 2",
          "description": "Second Account to whom the Opportunity is linked to"
        },
        "accountId3": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Account ID 3",
          "description": "Third Account to whom the Opportunity is linked to"
        },
        "address1": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Address 1",
          "description": "The Opportunity's main address. e.g. number, street, suite, apt#, postal code, etc."
        },
        "address2": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Address 2",
          "description": "The Opportunity's second address"
        },
        "city": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "City",
          "description": "City name"
        },
        "postcode": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Postal Code",
          "description": "The Opportunity's address postcode"
        },
        "region": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Region",
          "description": "Region/State name"
        },
        "countryId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Country ID",
          "description": "Country ID of the Opportunity",
          "x-ms-dynamic-values": {
            "operationId": "ListCountries",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "title": "Closed Date",
          "description": "Date when the Opportunity was closed"
        },
        "lostDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "title": "Lost Date",
          "description": "Date when the Opportunity was lost"
        },
        "wonDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "title": "Won Date",
          "description": "Date when the Opportunity was won"
        },
        "extId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "External ID",
          "description": "External ID of the Opportunity from a third party system"
        },
        "geocoded": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Geocoded",
          "description": "Flag to state if the Opportunity has been geolocated"
        },
        "geocodingAccuracy": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Geocoding Accuracy",
          "description": "Accuracy radius based on information about cell towers and WiFi nodes that the mobile can detect"
        },
        "latitude": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Latitude",
          "description": "Geocode address for the latitude coordinates"
        },
        "longitude": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Longitude",
          "description": "Geocode address for the longitude coordinates"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Permission Level",
          "description": "Defines the visibility of the Opportunity"
        },
        "readOnly": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Read-Only",
          "description": "Flag to state if the Opportunity cannot be modified or deleted"
        }
      }
    },
    "OpportunityResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "reference": {
          "type": "string",
          "title": "Reference"
        },
        "type_id": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Type Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Type ID"
            }
          },
          "type": "object"
        },
        "statusId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Status Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Status ID"
            }
          },
          "type": "object"
        },
        "total": {
          "type": "number",
          "title": "Total"
        },
        "currencyId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Currency Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Currency ID"
            }
          },
          "type": "object"
        },
        "accountId1": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account 1 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account 1 ID"
            }
          },
          "type": "object"
        },
        "salesForecastDate": {
          "type": "string",
          "format": "date-time",
          "title": "Sales Forecast Date"
        },
        "salesProbability": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Probability"
        },
        "salesRepId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep ID"
            }
          },
          "type": "object"
        },
        "comments": {
          "type": "string",
          "title": "Comments"
        },
        "branchId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Branch Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Branch ID"
            }
          },
          "type": "object"
        },
        "accountId2": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account 2 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account 2 ID"
            }
          },
          "type": "object"
        },
        "accountId3": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account 3 Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account 3 ID"
            }
          },
          "type": "object"
        },
        "address1": {
          "type": "string",
          "title": "Address 1"
        },
        "address2": {
          "type": "string",
          "title": "Address 2"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "postcode": {
          "type": "string",
          "title": "Postal Code"
        },
        "region": {
          "type": "string",
          "title": "Region"
        },
        "countryId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Country Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Country ID"
            }
          },
          "type": "object"
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Closed Date"
        },
        "wonDate": {
          "type": "string",
          "format": "date-time",
          "title": "Won Date"
        },
        "lostDate": {
          "type": "string",
          "format": "date-time",
          "title": "Lost Date"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Created"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Date Deleted"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Updated"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted"
        },
        "extId": {
          "type": "string",
          "title": "External ID"
        },
        "geocoded": {
          "type": "boolean",
          "title": "Geocoded"
        },
        "geocodingAccuracy": {
          "type": "integer",
          "format": "int32",
          "title": "Geocoding Accuracy"
        },
        "latitude": {
          "type": "number",
          "title": "Latitude"
        },
        "longitude": {
          "type": "number",
          "title": "Longitude"
        },
        "permissionLevel": {
          "type": "integer",
          "format": "int32",
          "title": "Permission Level"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read-Only"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Deletion)"
        }
      }
    },  
    "SalesOrderModel": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldsSchema",
            "value-path": "data",
            "parameters": {
              "entity": "tblSalesOrders",
              "action": "create"
            }
          }
        },
        "reference": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Reference",
          "description": "Sales Order's reference"
        },
        "number": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Number",
          "description": "Sales Order's number"
        },
        "year": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Year",
          "description": "Sales Order's year"
        },                
        "statusId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Status ID",
          "description": "Status ID of the Sales Order",
          "x-ms-dynamic-values": {
            "operationId": "ListSalesOrderStatuses",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "total": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Total",
          "description": "Total amount of the Sales Order"
        },
        "discount1": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Discount 1",
          "description": "Discount 1 of the Sales Order"
        },
        "discount2": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 2",
          "description": "Discount 2 of the Sales Order"
        },
        "discount3": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 3",
          "description": "Discount 3 of the Sales Order"
        },
        "discount4": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 4",
          "description": "Discount 4 of the Sales Order"
        },                                
        "currencyId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Currency ID",
          "description": "Currency ID of the Sales Order",
          "x-ms-dynamic-values": {
            "operationId": "ListCurrencies",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "accountId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Account ID",
          "description": "Account to whom the Sales Order is linked to"
        },
        "salesForcecastDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "important",
          "title": "Sales Forecast Date",
          "description": "Forecast sale date"
        },
        "salesRepId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Rep ID",
          "description": "User responsible for the Sales Order"
        },
        "comment": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Comment",
          "description": "Comment added to the Sales Order"
        },
        "internalComment": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "Internal Comment",
          "description": "Comment added to the Sales Order only visible internally"
        },        
        "branchId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Branch ID",
          "description": "Branch ID of the Sales Order",
          "x-ms-dynamic-values": {
            "operationId": "ListBranches",
            "value-path": "id",
            "value-title": "description"
          }
        },
        "opportunityId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Opportunity ID",
          "description": "Opportunity to whom the Sales Order is linked to"
        },
        "contactId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Contact ID",
          "description": "Contact to whom the Sales Order is linked to"
        },
        "rateId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Rate ID",
          "description": "Rate to whom the Sales Order is linked to"
        },
        "accountAddressId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "title": "Account Address ID",
          "description": "Account Address to whom the Sales Order is linked to"
        },                                
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "x-ms-visibility": "advanced",
          "title": "Closed Date",
          "description": "Date when the Sales Order was closed"
        },
        "mainSalesorder": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Main Sales Order",
          "description": "Flag to state if the Sales Order is relevant for the linked opportunity"
        },
        "archived": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Archived",
          "description": "Flag to state if the Sales Order is archived"
        },
        "blocked": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Blocked",
          "description": "Flag to state if the Sales Order cannot be edited temporarily"
        },                        
        "extId": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "title": "External ID",
          "description": "External ID of the Sales Order from a third party system"
        },
        "readOnly": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "title": "Read-Only",
          "description": "Flag to state if the Sales Order cannot be modified or deleted"
        }
      }
    },    
    "SalesOrderResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "reference": {
          "type": "string",
          "title": "Reference"
        },
        "number": {
          "type":"integer",
          "title":"Order Number"
       },
       "year": {
          "type":"integer",
          "title":"Year"
       },        
        "statusId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Status Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Status ID"
            }
          },
          "type": "object"
        },
        "total": {
          "type": "number",
          "title": "Total"
        },
        "discount1": {
          "type": "number",
          "title": "Discount 1"
        },  
        "discount2": {
          "type": "number",
          "title": "Discount 2"
        },  
        "discount3": {
          "type": "number",
          "title": "Discount 3"
        },  
        "discount4": {
          "type": "number",
          "title": "Discount 4"
        },                                
        "currencyId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Currency Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Currency ID"
            }
          },
          "type": "object"
        },
        "accountId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account ID"
            }
          },
          "type": "object"
        },
        "salesForecastDate": {
          "type": "string",
          "format": "date-time",
          "title": "Sales Forecast Date"
        },
        "salesRepId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Rep Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Rep ID"
            }
          },
          "type": "object"
        },
        "comment": {
          "type": "string",
          "title": "Comments"
        },
        "internalComment": {
          "type": "string",
          "title": "Comments"
        },        
        "branchId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Branch Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Branch ID"
            }
          },
          "type": "object"
        },
        "opportunityId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Opportunity Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Opportunity ID"
            }
          },
          "type": "object"
        },
        "contactId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Contact Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Contact ID"
            }
          },
          "type": "object"
        },
        "rateId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Rate Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Rate ID"
            }
          },
          "type": "object"
        },        
        "accountAddressId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Account Address Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Account Address ID"
            }
          },
          "type": "object"
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "title": "Closed Date"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Created"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Date Deleted"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Updated"
        },
        "mainSalesorder": {
          "type": "boolean",
          "title": "Main Sales Order"
        },
        "archived": {
          "type": "boolean",
          "title": "Archived"
        },
        "blocked": {
          "type": "boolean",
          "title": "Blocked"
        },        
        "deleted": {
          "type": "boolean",
          "title": "Deleted"
        },
        "extId": {
          "type": "string",
          "title": "External ID"
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read-Only"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Deletion)"
        }
      }
    },
    "SalesOrderLineModel": {
      "type": "object",
      "properties": {
        "customFields": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldsSchema",
            "value-path": "data",
            "parameters": {
              "entity": "tblSalesOrdersLines",
              "action": "create"
            }
          }
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "important",
          "title": "Description",
          "description": "Sales Order Line's description"
        },             
        "productId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Product ID",
          "description": "Product ID related to the Sales Order Line"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Quantity",
          "description": "Sales Order Line's quantity"
        },
        "price": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Price",
          "description": "Sales Order Line's price"
        },          
        "total": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Total",
          "description": "Total amount of the Sales Order Line"
        },
        "discount1": {
          "type": "number",
          "x-ms-visibility": "important",
          "title": "Discount 1",
          "description": "Discount 1 of the Sales Order Line"
        },
        "discount2": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 2",
          "description": "Discount 2 of the Sales Order Line"
        },
        "discount3": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 3",
          "description": "Discount 3 of the Sales Order Line"
        },
        "discount4": {
          "type": "number",
          "x-ms-visibility": "advanced",
          "title": "Discount 4",
          "description": "Discount 4 of the Sales Order Line"
        },
        "salesOrderId": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Sales Order ID",
          "description": "Sales Order to whom the Sales Order Line is linked to"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "important",
          "title": "Order",
          "description": "Order in which the Sales Order Line appears in the Sales Order"
        }
      }
    },
    "SalesOrderLineResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "description": {
          "type": "string",
          "title": "Description"
        },      
        "productId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Product Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Product ID"
            }
          },
          "type": "object"
        },
        "quantity": {
          "type":"integer",
          "format": "int32",
          "title":"Quantity"
       },
       "price": {
          "type":"number",
          "title":"Price"
       },  
        "total": {
          "type": "number",
          "title": "Total"
        },
        "discount1": {
          "type": "number",
          "title": "Discount 1"
        },  
        "discount2": {
          "type": "number",
          "title": "Discount 2"
        },  
        "discount3": {
          "type": "number",
          "title": "Discount 3"
        },  
        "discount4": {
          "type": "number",
          "title": "Discount 4"
        },                                
        "salesOrderId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Sales Order Reference"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Sales Order ID"
            }
          },
          "type": "object"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Created"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Date Deleted"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Date Updated"
        },       
        "deleted": {
          "type": "boolean",
          "title": "Deleted"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Opportunity Deletion)"
        }
      }
    },       
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "name": {
          "type": "string",
          "title": "First Name",
          "description": "User's first name"
        },
        "lastName": {
          "type": "string",
          "title": "Last Name",
          "description": "User's last name"
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "User's email"
        },
        "idPrefix": {
          "type": "integer",
          "format": "int32",
          "title": "Phone Country ID",
          "description": "User's phone number Country ID"
        },
        "phoneExtension": {
          "type": "string",
          "title": "Phone Extension",
          "description": "User's phone number extension"
        },
        "phone": {
          "type": "string",
          "title": "Phone",
          "description": "User's phone"
        },
        "nic": {
          "type": "string",
          "title": "Nickname",
          "description": "User's nickname"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "lastPasswordChangeDate": {
          "type": "string",
          "format": "date-time",
          "title": "Password Changed At",
          "description": "Date when the password was last changed"
        },
        "isActive": {
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to state if the User is activated, being visible and capable to login in the apps"
        },
        "billable": {
          "type": "boolean",
          "title": "Is Billable",
          "description": "Flag to state if the User must be counted as a payable licence"
        },
        "computeSfm": {
          "type": "boolean",
          "title": "Compute SFM",
          "description": "Flag to state if the User counts for the sales analytics"
        },
        "locale": {
          "type": "string",
          "title": "Locale",
          "description": "The User language"
        },
        "dbLanguage": {
          "type": "string",
          "title": "Database locale",
          "description": "The User database language"
        },
        "uiLanguage": {
          "type": "string",
          "title": "UI locale",
          "description": "The User language for mobile and web apps"
        },
        "extId": {
          "type": "string",
          "title": "External ID",
          "description": "External ID of the User from a third party system"
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "title": "Permission Level",
          "description": "Permission level of the User from 1 to 5"
        },
        "branchRestriction": {
          "type": "boolean",
          "title": "Branch Restriction",
          "description": "Flag to state if the User has limited visibility in some branches"
        },
        "branches": {
          "properties": {
            "description": {
              "type": "string",
              "title": "Branch Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Branch ID"
            }
          },
          "type": "object"
        },
        "userTypeId": {
          "properties": {
            "description": {
              "type": "string",
              "title": "Type Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Type ID"
            }
          },
          "type": "object"
        },
        "managerId": {
          "properties": {
            "description": {
              "type": "string",
              "title": "User Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "User ID"
            }
          },
          "type": "object"
        },
        "rateId": {
          "properties": {
            "description": {
              "type": "string",
              "title": "Rate Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Rate ID"
            }
          },
          "type": "object"
        }
      }
    },
    "PostResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "message": {
          "type": "string",
          "title": "Message"
        }
      }
    },
    "PutResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message"
        }
      }
    },
    "DeleteResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message"
        }
      }
    },
    "WebhookResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "url": {
          "type": "string",
          "title": "URL"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "title": "Version"
        },
        "secret_key": {
          "type": "string",
          "title": "Secret Key"
        },
        "action": {
          "type": "string",
          "title": "Action"
        },
        "entity": {
          "type": "string",
          "title": "Entity"
        },
        "user_created": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Webhook Creation)"
        },
        "user_updated": {
          "type": "string",
          "title": "Sales Rep ID (Webhook Deletion)"
        },
        "user_deleted": {
          "type": "string",
          "title": "Sales Rep ID (Webhook Deletion)"
        },
        "date_created": {
          "type": "string",
          "title": "Created At"
        },
        "date_updated": {
          "type": "string",
          "title": "Updated At"
        },
        "date_deleted": {
          "type": "string",
          "title": "Deleted At"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted"
        },
        "location": {
          "type": "string",
          "title": "Location",
          "description": "Contain the path to the webhook that is used with the HTTP DELETE as per it is requested by Power Automate"
        }
      }
    },
    "BranchResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "default": {
          "type": "boolean",
          "title": "Internal",
          "description": "Flag to state if the Branch is the one assigned by default"
        },
        "imperialSystem": {
          "type": "boolean",
          "title": "Public",
          "description": "Flag to state if the Branch adopts the imperial system measurement (i.e. miles instead of km)"
        },
        "mainEnvironment": {
          "type": "boolean",
          "title": "Public",
          "description": "Flag to state if the Branch is the main one, for long tail implementations"
        },
        "currencyId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Currency Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Currency ID"
            }
          },
          "type": "object"
        },
        "timeZoneId": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Time Zone Name"
            },
            "id": {
              "type": "integer",
              "format": "int32",
              "title": "Time Zone ID"
            }
          },
          "type": "object"
        }
      }
    },
    "CountryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "iso2": {
          "type": "string",
          "title": "ISO 3166 Alpha-2 Code",
          "description": "The ISO 3166 alpha-2 code of the Country"
        },
        "iso3": {
          "type": "string",
          "title": "ISO 3166 Alpha-3 Code",
          "description": "The ISO 3166 alpha-3 code of the Country"
        },
        "isoNum": {
          "type": "integer",
          "format": "int32",
          "title": "ISO 3166 Numeric Code",
          "description": "The ISO 3166 numeric code of the Country"
        },
        "phoneCode": {
          "type": "string",
          "title": "Phone Code",
          "description": "Phone code of the specific the Country"
        },
        "strName": {
          "type": "string",
          "title": "strName",
          "description": "Generic Country Name"
        }
      }
    },
    "CurrencyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "isoCode": {
          "type": "string",
          "title": "ISO4217 Code",
          "description": "The ISO 4217 code of the Currency"
        },
        "symbol": {
          "type": "string",
          "title": "Symbol",
          "description": "The literal symbol of the Currency"
        }
      }
    },
    "TimezoneResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "idIanaZone": {
          "type": "string",
          "title": "IANA Zone",
          "description": "The literal name of the IANA Zone"
        },
        "shortDescription": {
          "type": "string",
          "title": "Short Description",
          "description": "Time Zone brief description"
        },
        "fullDescription": {
          "type": "string",
          "title": "Full Description",
          "description": "Time Zone long description"
        }
      }
    },
    "GenericValueListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "branchVisibility": {
          "type": "array",
          "title": "Branch Visibility",
          "description": "In which Branch the entry is visible",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Branch Name"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "title": "Branch ID"
              }
            }
          }
        },
        "internal": {
          "type": "boolean",
          "title": "Internal",
          "description": "Flag to state if the entry is for internal use only"
        },
        "computeSfm": {
          "type": "boolean",
          "title": "Public",
          "description": "Flag to state if the entry counts for sales analytics"
        },
        "visitCycle": {
          "type": "integer",
          "format": "int32",
          "title": "Visit Cycle",
          "description": "Visit cycle linked to the entry"
        }
      }
    },
    "AccountStatusListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "branchVisibility": {
          "type": "array",
          "title": "Branch Visibility",
          "description": "In which Branch the entry is visible",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Branch Name"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "title": "Branch ID"
              }
            }
          }
        },
        "won": {
          "type": "boolean",
          "title": "Won",
          "description": "Flag to state if the entry refers to a won status"
        },
        "lost": {
          "type": "boolean",
          "title": "Lost",
          "description": "Flag to state if the entry refers to a lost status"
        }
      }
    },
    "OpportunityStatusListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "statusDetails": {
          "type": "string",
          "title": "statusDetails",
          "description": "Status Details"
        }, 
        "statusDetailsEN": {
          "type": "string",
          "title": "statusDetailsEN",
          "description": "Status Details in English"
        }, 
        "statusDetailsUS": {
          "type": "string",
          "title": "statusDetailsUS",
          "description": "Status Details in American English"
        }, 
        "statusDetailsIT": {
          "type": "string",
          "title": "statusDetailsIT",
          "description": "Status Details in Italian"
        }, 
        "statusDetailsDE": {
          "type": "string",
          "title": "statusDetailsDE",
          "description": "Status Details in German"
        }, 
        "statusDetailsFR": {
          "type": "string",
          "title": "statusDetailsFR",
          "description": "Status Details in French"
        }, 
        "statusDetailsBR": {
          "type": "string",
          "title": "statusDetailsBR",
          "description": "Status Details in Brasilian Portuguese"
        }, 
        "statusDetailsDK": {
          "type": "string",
          "title": "statusDetailsDK",
          "description": "Status Details in Dutch"
        },  
        "statusDetailsPT": {
          "type": "string",
          "title": "statusDetailPTs",
          "description": "Status Details in Portuguese"
        },  
        "statusDetailsRU": {
          "type": "string",
          "title": "statusDetailsRU",
          "description": "Status Details in Russian"
        },                      
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "branchVisibility": {
          "type": "array",
          "title": "Branch Visibility",
          "description": "In which Branch the entry is visible",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Branch Name"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "title": "Branch ID"
              }
            }
          }
        },
        "idParent": {
          "type": "integer",
          "format": "int32",
          "title": "Parent ID"
        },
        "won": {
          "type": "integer",
          "format": "int32",
          "title": "Won",
          "description": "Flag to state if the entry refers to a won or lost status"
        },
        "endStatus": {
          "type": "boolean",
          "title": "End Status",
          "description": "Flag to state if the entry refers to a closed status"
        }
      }
    },
    "SalesOrderStatusListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "ID",
          "description": "Unique identifier"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Order",
          "description": "The position of the entry in the value list"
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Flag to state if the entry has been deleted"
        },
        "description": {
          "type": "string",
          "title": "description",
          "description": "Entity label"
        },
        "descriptionES": {
          "type": "string",
          "title": "descriptionES",
          "description": "Entity label in Spanish"
        },
        "descriptionEN": {
          "type": "string",
          "title": "descriptionEN",
          "description": "Entity label in English"
        },
        "descriptionUS": {
          "type": "string",
          "title": "descriptionUS",
          "description": "Entity label in American English"
        },
        "descriptionIT": {
          "type": "string",
          "title": "descriptionIT",
          "description": "Entity label in Italian"
        },
        "descriptionDE": {
          "type": "string",
          "title": "descriptionDE",
          "description": "Entity label in German"
        },
        "descriptionFR": {
          "type": "string",
          "title": "descriptionFR",
          "description": "Entity label in French"
        },
        "descriptionBR": {
          "type": "string",
          "title": "descriptionBR",
          "description": "Entity label in Brasilian Portuguese"
        },
        "descriptionDK": {
          "type": "string",
          "title": "descriptionDK",
          "description": "Entity label in Dutch"
        },
        "descriptionPT": {
          "type": "string",
          "title": "descriptionPT",
          "description": "Entity label in Portuguese"
        },
        "descriptionRU": {
          "type": "string",
          "title": "descriptionRU",
          "description": "Entity label in Russian"
        },
        "statusDetails": {
          "type": "string",
          "title": "statusDetails",
          "description": "Status Details"
        }, 
        "statusDetailsEN": {
          "type": "string",
          "title": "statusDetailsEN",
          "description": "Status Details in English"
        }, 
        "statusDetailsUS": {
          "type": "string",
          "title": "statusDetailsUS",
          "description": "Status Details in American English"
        }, 
        "statusDetailsIT": {
          "type": "string",
          "title": "statusDetailsIT",
          "description": "Status Details in Italian"
        }, 
        "statusDetailsDE": {
          "type": "string",
          "title": "statusDetailsDE",
          "description": "Status Details in German"
        }, 
        "statusDetailsFR": {
          "type": "string",
          "title": "statusDetailsFR",
          "description": "Status Details in French"
        }, 
        "statusDetailsBR": {
          "type": "string",
          "title": "statusDetailsBR",
          "description": "Status Details in Brasilian Portuguese"
        }, 
        "statusDetailsDK": {
          "type": "string",
          "title": "statusDetailsDK",
          "description": "Status Details in Dutch"
        },  
        "statusDetailsPT": {
          "type": "string",
          "title": "statusDetailPTs",
          "description": "Status Details in Portuguese"
        },  
        "statusDetailsRU": {
          "type": "string",
          "title": "statusDetailsRU",
          "description": "Status Details in Russian"
        },                      
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "title": "Created At"
        },
        "dateUpdated": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time",
          "title": "Deleted At"
        },
        "salesRepIdCreated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Creation)"
        },
        "salesRepIdUpdated": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID  (Account Update)"
        },
        "salesRepIdDeleted": {
          "type": "integer",
          "format": "int32",
          "title": "Sales Rep ID (Account Deletion)"
        },
        "branchVisibility": {
          "type": "array",
          "title": "Branch Visibility",
          "description": "In which Branch the entry is visible",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Branch Name"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "title": "Branch ID"
              }
            }
          }
        },
        "won": {
          "type": "boolean",
          "title": "Won",
          "description": "Flag to state if the entry refers to a won status"
        },
        "lost": {
          "type": "boolean",
          "title": "Lost",
          "description": "Flag to state if the entry refers to a lost status"
        }
      }
    }    
  }
}