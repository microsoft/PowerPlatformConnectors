{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Criteo",
    "description": "Criteo publicly exposed API. Using this API, you can manage your audiences and advertisers.",
    "contact": {
      "name": "Criteo Support",
      "url": "https://www.criteo.com/contact-us/",
      "email": "Contact@criteo.com"
    }
  },
  "host": "api.criteo.com",
  "basePath": "/2023-01",
  "schemes": [
    "https"
  ],
  "paths": {
    "/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "summary": "Get audiences",
        "description": "Get a list of all the audiences for the user or for the given advertiser_id.",
        "operationId": "GetAudiences",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The list was retrieved.",
            "schema": {
              "$ref": "#/definitions/GetAudiencesResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Audience"
        ],
        "summary": "Create an audience",
        "description": "Create an audience for an advertiser.",
        "operationId": "CreateAudience",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewAudienceRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The audience was created.",
            "schema": {
              "$ref": "#/definitions/NewAudienceResponse"
            }
          }
        }
      }
    },
    "/audiences/{audience-id}/contactlist": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "summary": "Delete audience identifiers",
        "description": "Delete all identifiers from an audience.",
        "operationId": "DeleteIdentifiers",
        "parameters": [
          {
            "$ref": "#/parameters/AudienceIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The contactlist was deleted.",
            "schema": {
              "$ref": "#/definitions/DeleteAudienceContactListResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "summary": "Modify audience users",
        "description": "Add/remove users to or from an audience.",
        "operationId": "ModifyAudienceUsers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AudienceIdPathParam"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ContactlistAmendmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of created request.",
            "schema": {
              "$ref": "#/definitions/ModifyAudienceResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Audience 123 not found."
          }
        }
      }
    },
    "/audiences/{audience-id}": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "summary": "Delete an audience by id",
        "description": "Delete an audience by id.",
        "operationId": "RemoveAudience",
        "parameters": [
          {
            "$ref": "#/parameters/AudienceIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The audience was deleted.",
            "schema": {
              "$ref": "#/definitions/DeleteAudienceResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "summary": "Update audience",
        "description": "Update user audience specified by the audience id.",
        "operationId": "ModifyAudience",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AudienceIdPathParam"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReplaceAudienceRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The audience was updated.",
            "schema": {
              "$ref": "#/definitions/ReplaceAudienceResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/advertisers/me": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "summary": "Get advertisers",
        "description": "Fetch the portfolio of Advertisers for this account.",
        "operationId": "ApiPortfolioGet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPortfolioResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "AudienceType": {
      "description": "The type of audience.",
      "type": "string",
      "example": "Audience"
    },
    "GetAudiencesResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Audience"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Body of the GET audience operation."
    },
    "NewAudienceResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BasicAudienceDefinition"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Response of a newly created audience."
    },
    "DeleteAudienceContactListResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BasicAudienceDefinition"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Response of a contactlist deletion."
    },
    "ModifyAudienceResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ContactlistOperation"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Parameters to modify an audience."
    },
    "DeleteAudienceResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BasicAudienceDefinition"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Response of an audience deletion."
    },
    "ReplaceAudienceResponse": {
      "required": [
        "data",
        "errors",
        "warnings"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BasicAudienceDefinition"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceError"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AudienceWarning"
          }
        }
      },
      "description": "Response of an audience replacement."
    },
    "NewAudienceRequest": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/NewAudience"
        }
      },
      "description": "Body of creation of a new audience."
    },
    "ContactlistAmendmentRequest": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ContactlistAmendment"
        }
      },
      "description": "Request for a contactlist amendment."
    },
    "ReplaceAudienceRequest": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ReplaceAudience"
        }
      },
      "description": "Request to replace an audience."
    },
    "Audience": {
      "required": [
        "attributes",
        "id",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AudienceType"
        },
        "id": {
          "type": "string",
          "description": "Id of the Audience.",
          "example": "314159"
        },
        "attributes": {
          "required": [
            "created",
            "description",
            "name",
            "updated"
          ],
          "type": "object",
          "properties": {
            "advertiserId": {
              "type": "string",
              "description": "The advertiser id that owns this Audience."
            },
            "name": {
              "type": "string",
              "description": "The name of the Audience."
            },
            "description": {
              "type": "string",
              "description": "The string description of the Audience."
            },
            "created": {
              "type": "string",
              "description": "Date and time ISO 8601 formatted string.",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Date and time ISO 8601 formatted string.",
              "format": "date-time"
            },
            "nbLines": {
              "type": "integer",
              "description": "The number of line in the audience available once processed."
            },
            "nbLinesEmail": {
              "type": "integer",
              "description": "The number of email line in the audience available once processed."
            },
            "nbMatchesEmail": {
              "type": "integer",
              "description": "The number of email matches in the audience available once processed."
            }
          }
        }
      },
      "description": "Definition of an audience and all its information."
    },
    "AudienceError": {
      "required": [
        "code",
        "instance",
        "type"
      ],
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
        },
        "type": {
          "enum": [
            "access-control",
            "authentication",
            "authorization",
            "availability",
            "deprecation",
            "quota",
            "validation"
          ],
          "type": "string",
          "description": "(REQUIRED) The classification of the error."
        },
        "code": {
          "type": "string",
          "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
        },
        "instance": {
          "type": "string",
          "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem."
        },
        "title": {
          "type": "string",
          "description": "(RECOMMENDED) A short, human-readable summary of the problem type."
        },
        "detail": {
          "type": "string",
          "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem."
        },
        "source": {
          "type": "object",
          "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)."
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology."
        }
      },
      "description": "Definition of an audience error."
    },
    "AudienceWarning": {
      "required": [
        "code",
        "detail",
        "instance",
        "type"
      ],
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
        },
        "type": {
          "enum": [
            "access-control",
            "authentication",
            "authorization",
            "availability",
            "deprecation",
            "quota",
            "validation"
          ],
          "type": "string",
          "description": "(REQUIRED) The classification of the error."
        },
        "code": {
          "type": "string",
          "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
        },
        "instance": {
          "type": "string",
          "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem."
        },
        "title": {
          "type": "string",
          "description": "(RECOMMENDED) A short, human-readable summary of the problem type."
        },
        "detail": {
          "type": "string",
          "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem."
        },
        "source": {
          "type": "object",
          "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)."
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology."
        }
      },
      "description": "Definition of the warning."
    },
    "BasicAudienceDefinition": {
      "required": [
        "id",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the entity type."
        },
        "type": {
          "type": "string",
          "description": "The name of the entity type."
        },
        "attributes": {
          "$ref": "#/definitions/AudienceNameDescription"
        }
      },
      "description": "Common definition of an audience."
    },
    "ContactlistOperation": {
      "required": [
        "attributes",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The name of the entity type."
        },
        "attributes": {
          "required": [
            "operation"
          ],
          "type": "object",
          "properties": {
            "contactListId": {
              "type": "integer",
              "description": "The affected user list id."
            },
            "operation": {
              "type": "string",
              "description": "The action recorded."
            },
            "requestDate": {
              "type": "string",
              "description": "When the action was recorded.",
              "format": "date-time"
            },
            "identifierType": {
              "type": "string",
              "description": "The schema specified for of the identifiers."
            },
            "nbValidIdentifiers": {
              "type": "integer",
              "description": "How many identifiers were valid for the specified schema."
            },
            "nbInvalidIdentifiers": {
              "type": "integer",
              "description": "How many identifiers were invalid for the specified schema."
            },
            "sampleInvalidIdentifiers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A sample of invalid identifiers if there is some."
            }
          },
          "description": "The contactlist operation attributes."
        }
      },
      "description": "Response definition of a contactlist operation."
    },
    "NewAudience": {
      "required": [
        "attributes",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AudienceType"
        },
        "attributes": {
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "advertiserId": {
              "type": "string",
              "description": "The advertiser id to create the audience for."
            },
            "name": {
              "type": "string",
              "description": "The name of the new audience."
            },
            "description": {
              "type": "string",
              "description": "The description of the audience."
            }
          }
        }
      },
      "description": "Body for the creation of a new audience (name, advertiserId, etc)."
    },
    "ContactlistAmendment": {
      "required": [
        "attributes",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ContactlistAmendment"
          ],
          "description": "User List.",
          "example": "ContactlistAmendment"
        },
        "attributes": {
          "required": [
            "identifiers",
            "operation"
          ],
          "type": "object",
          "properties": {
            "operation": {
              "enum": [
                "add",
                "remove"
              ],
              "type": "string",
              "description": "Operation to add or remove users."
            },
            "identifierType": {
              "enum": [
                "email",
                "madid",
                "identityLink",
                "gum"
              ],
              "type": "string",
              "description": "What type of identifiers are used."
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The users tos add or remove, each in the schema specified."
            },
            "gumCallerId": {
              "type": "integer",
              "description": "The Gum caller id of the advertiser patching identifiers of type Gum."
            },
            "internalIdentifiers": {
              "type": "boolean",
              "description": "The flag to indicate if identifiers are external or internal."
            }
          },
          "description": "The name of the entity type."
        }
      },
      "description": "Parameters for the amendment of a contactlist."
    },
    "ReplaceAudience": {
      "required": [
        "attributes",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AudienceType"
        },
        "attributes": {
          "$ref": "#/definitions/AudienceNameDescription"
        }
      },
      "description": "Parameters required to replace an audience."
    },
    "AudienceNameDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to designate the audience by."
        },
        "description": {
          "type": "string",
          "description": "The description of the audience."
        }
      },
      "description": "Description of an audience with name and detailed description."
    },
    "GetPortfolioResponse": {
      "type": "object",
      "properties": {
        "data": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityOfPortfolioMessage"
          },
          "description": "The response\ufffds primary data."
        },
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CriteoApiError"
          },
          "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty."
        },
        "warnings": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CriteoApiWarning"
          },
          "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
        }
      },
      "description": "Portfolio fetch Response."
    },
    "EntityOfPortfolioMessage": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "campaign",
            "adset",
            "ad",
            "advertiser",
            "agency",
            "publisher",
            "address",
            "client",
            "contact",
            "industry"
          ],
          "type": "string",
          "description": "A string containing the entity type.",
          "example": "campaign"
        },
        "id": {
          "type": "string",
          "description": "A opaque string containing the unique Id of the entity."
        },
        "attributes": {
          "$ref": "#/definitions/PortfolioMessage"
        },
        "meta": {
          "type": "object",
          "description": "A meta object that contains application-specific metadata."
        }
      },
      "description": "Generic Criteo API successful data model."
    },
    "CriteoApiError": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "The correlation ID provided by the gateway."
        },
        "type": {
          "enum": [
            "access_control",
            "authentication",
            "authorization",
            "availability",
            "deprecation",
            "quota",
            "validation"
          ],
          "type": "string",
          "description": "A machine-readable code specifying error category.",
          "example": "access_control"
        },
        "code": {
          "enum": [
            "internal-error",
            "deprecated-field",
            "endpoint-deprecated",
            "required-field",
            "invalid-date-format",
            "invalid",
            "invalid-ranged",
            "invalid-timespan"
          ],
          "type": "string",
          "description": "A machine-readable error code string in kabab-case. Unique across Criteo.",
          "example": "internal-error"
        },
        "instance": {
          "type": "string",
          "description": "A URI reference that identifies the specific occurrence of the problem."
        },
        "title": {
          "type": "string",
          "description": "A short, human-readable remarks of the problem type."
        },
        "detail": {
          "type": "string",
          "description": "A human-readable explanation specific to this occurrence of the problem."
        },
        "source": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
        }
      },
      "description": "Criteo API response error."
    },
    "CriteoApiWarning": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "The correlation ID provided by the gateway."
        },
        "type": {
          "enum": [
            "access_control",
            "authentication",
            "authorization",
            "availability",
            "deprecation",
            "quota",
            "validation"
          ],
          "type": "string",
          "description": "A machine-readable code specifying error category.",
          "example": "access_control"
        },
        "code": {
          "enum": [
            "internal-error",
            "deprecated-field",
            "endpoint-deprecated",
            "required-field",
            "invalid-date-format",
            "invalid",
            "invalid-ranged",
            "invalid-timespan"
          ],
          "type": "string",
          "description": "A machine-readable error code string in kabab-case. Unique across Criteo.",
          "example": "internal-error"
        },
        "instance": {
          "type": "string",
          "description": "A URI reference that identifies the specific occurrence of the problem."
        },
        "title": {
          "type": "string",
          "description": "A short, human-readable remarks of the problem type."
        },
        "detail": {
          "type": "string",
          "description": "A human-readable explanation specific to this occurrence of the problem."
        }
      },
      "description": "Criteo API response warning."
    },
    "PortfolioMessage": {
      "type": "object",
      "properties": {
        "advertiserName": {
          "type": "string"
        }
      },
      "description": "Class with elementary info about advertiser."
    }
  },
  "parameters": {
    "AudienceIdPathParam": {
      "name": "audience-id",
      "in": "path",
      "description": "The id of the audience to amend.",
      "x-ms-summary": "The id of the audience to amend",
      "required": true,
      "type": "integer",
      "x-ms-url-encoding": "single"
    }
  },
  "securityDefinitions": {
    "OAuth": {
      "type": "oauth2",
      "authorizationUrl": "https://consent.criteo.com/request",
      "tokenUrl": "https://api.criteo.com/oauth2/token",
      "flow": "accessCode",
      "scopes": {}
    }
  },
  "security": [
    {
      "OAuth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.criteo.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.criteo.com/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Marketing;Website"
    }
  ]
}