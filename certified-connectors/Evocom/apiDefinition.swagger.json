{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Evocom",
    "description": "Evocom is an easy-to-use solution for collaborative workflows and task management for enterprises. According to the motto \"first digitize, then automate\", companies transform manual processes into digital processes in order to further integrate and automate them afterwards.",
    "contact": {
      "name": "Evocom Support",
      "url": "https://evocom.de/kontakt",
      "email": "support@evocom.de"
    }
  },
  "host": "productivity.evocom.net",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": [],
  "produces": [],
  "paths": {
    "/hooks/Tasks/New": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TaskResponse"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a new task is created",
        "description": "Is triggered when a new task is created",
        "operationId": "NewTaskTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "x-ms-summary": "Tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "taskType": {
                  "type": "integer",
                  "description": "Select the task type",
                  "x-ms-summary": "Task Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTaskTypes",
                    "value-path": "value",
                    "value-title": "title",
                    "parameters": {
                      "type": 1
                    }
                  }
                }
              },
              "required": ["callbackUrl"]
            }
          }
        ]
      }
    },
    "/hooks/Tasks/Change": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TaskResponse"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a task is changed",
        "description": "Is triggered when a task is changed",
        "operationId": "ChangedTaskTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "x-ms-summary": "Tenant",
            "description": "Select a tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "taskType": {
                  "type": "integer",
                  "description": "Select the task type",
                  "x-ms-summary": "Task Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTaskTypes",
                    "value-path": "value",
                    "value-title": "title",
                    "parameters": {
                      "type": 1
                    }
                  }
                },
                "changeType": {
                  "description": "Select the change type",
                  "title": "Type of change",
                  "type": "integer",
                  "x-ms-dynamic-values": {
                    "operationId": "GetChangeTypes",
                    "value-path": "value",
                    "value-title": "title",
                    "parameters": {
                      "type": 3
                    }
                  }
                },
                "taskStatus": {
                  "type": "integer",
                  "description": "Select the task status",
                  "title": "Status",
                  "x-ms-dynamic-values": {
                    "operationId": "GetStatus",
                    "value-path": "value",
                    "value-title": "title"
                  }
                }
              },
              "required": ["changeType", "callbackUrl"]
            }
          }
        ]
      }
    },
    "/hooks/Teams/New": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TeamResponse"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a new team is created",
        "description": "Is triggered when a new team is created",
        "operationId": "NewTeamTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "description": "Select a tenant",
            "x-ms-summary": "Tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": ["callbackUrl"]
            }
          }
        ]
      }
    },
    "/hooks/Teams/Change": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/TeamResponse"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a team is changed",
        "description": "Is triggered when a team is changed",
        "operationId": "ChangedTeamTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "x-ms-summary": "Tenant",
            "description": "Select a tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "changeType": {
                  "type": "integer",
                  "description": "Select the change type",
                  "title": "Type of change",
                  "x-ms-dynamic-values": {
                    "operationId": "GetChangeTypes",
                    "value-path": "value",
                    "value-title": "title",
                    "parameters": {
                      "type": 1
                    }
                  }
                }
              },
              "required": ["callbackUrl", "changeType"]
            }
          }
        ]
      }
    },
    "/hooks/{id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Hook not found"
          }
        },
        "summary": "Delete Hook",
        "description": "To delete a registered hook when not needed",
        "operationId": "DeleteHook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/hooks/Processes/New": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/ProcessResponse"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a new process is started",
        "description": "Triggered when a new process is started",
        "operationId": "NewProcessTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "x-ms-summary": "Tenant",
            "description": "Select a tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "definitionId": {
                  "type": "string",
                  "description": "Select a template",
                  "title": "Template",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTemplates",
                    "value-path": "id",
                    "value-title": "name",
                    "value-collection": "items",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameter": "x-ep-tenant"
                      },
                      "tenant": {
                        "parameter": "x-ep-tenant"
                      }
                    }
                  }
                }
              },
              "required": ["definitionId", "callbackUrl"]
            }
          }
        ]
      }
    },
    "/hooks/Processes/Change": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/ProcessResponseV2"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "When a process is changed",
        "description": "Triggered when a process is changed or completed",
        "operationId": "ChangedProcessTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "x-ms-summary": "Tenant",
            "description": "Select a tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "description": "callbackUrl",
                  "title": "",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "definitionId": {
                  "type": "string",
                  "description": "Select a template",
                  "title": "Template",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTemplates",
                    "value-path": "id",
                    "value-title": "name",
                    "value-collection": "items",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameter": "x-ep-tenant"
                      },
                      "tenant": {
                        "parameter": "x-ep-tenant"
                      }
                    }
                  }
                },
                "changeType": {
                  "type": "integer",
                  "description": "Select the change type",
                  "title": "Type of change",
                  "x-ms-dynamic-values": {
                    "operationId": "GetChangeTypes",
                    "value-path": "value",
                    "value-title": "title",
                    "parameters": {
                      "type": 2
                    }
                  }
                },
                "stepId": {
                  "type": "string",
                  "description": "Select a step",
                  "title": "Step",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTemplateSteps",
                    "value-path": "id",
                    "value-title": "name",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameter": "x-ep-tenant"
                      },
                      "id": {
                        "parameter": "definitionId"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetTemplateSteps",
                    "itemValuePath": "id",
                    "itemTitlePath": "name",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameterReference": "x-ep-tenant"
                      },
                      "id": {
                        "parameterReference": "body/definitionId"
                      }
                    }
                  }
                }
              },
              "required": ["callbackUrl", "changeType"]
            }
          }
        ]
      }
    },
    "/api/Tags": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagsResponse"
            }
          }
        },
        "summary": "Get tags",
        "description": "Get a list of all tags",
        "operationId": "GetTags",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/api/Teams": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamsResponse"
            }
          }
        },
        "summary": "Get teams",
        "description": "Get a list of all teams",
        "operationId": "GetTeams",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          }
        ]
      }
    },
    "/api/User/Get": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "No parameter is specified.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get user",
        "description": "Get user",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "azureId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Enter an Azure user id",
            "x-ms-summary": "User id (Azure)"
          },
          {
            "name": "login",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Enter an user e-mail",
            "x-ms-summary": "E-mail (EP)"
          }
        ]
      }
    },
    "/api/Tenants": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantsResponse"
            }
          }
        },
        "summary": "Get tenants",
        "description": "Gets a list of available tenants",
        "operationId": "GetTenants",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/api/Task": {
      "post": {
        "responses": {
          "201": {
            "description": "Task created",
            "schema": {
              "$ref": "#/definitions/TaskResponseV2"
            }
          },
          "400": {
            "description": "Error in input data.",
            "schema": {
              "type": "object",
              "description": "Dynamic content from API"
            }
          }
        },
        "summary": "Create task",
        "description": "Create a new task",
        "operationId": "CreateTask",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetTenants",
              "itemValuePath": "tenantId",
              "itemTitlePath": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "task-type",
            "in": "header",
            "required": true,
            "type": "integer",
            "description": "Select a task type",
            "x-ms-summary": "Task type",
            "x-ms-dynamic-values": {
              "operationId": "GetTaskTypes",
              "value-path": "value",
              "value-title": "title",
              "parameters": {
                "type": 1
              }
            }
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "x-ms-summary": "Task",
            "description": "Task to create",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetCreateTaskSchema",
                "parameters": {
                  "typeId": {
                    "parameter": "task-type"
                  },
                  "x-ep-tenant": {
                    "parameter": "x-ep-tenant"
                  }
                }
              }
            }
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Task changed",
            "schema": {
              "$ref": "#/definitions/TaskResponseV2"
            }
          },
          "400": {
            "description": "Error in input data.",
            "schema": {
              "type": "object",
              "description": "Dynamic content from API"
            }
          },
          "403": {
            "description": "User is not allowed to change the task.",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "Task not found.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Edit task",
        "description": "Edit an existing task",
        "operationId": "EditTask",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "x-ms-summary": "Task",
            "description": "Task to edit",
            "schema": {
              "$ref": "#/definitions/TaskPutRequest"
            }
          }
        ]
      }
    },
    "/api/Task/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponseV2"
            }
          },
          "403": {
            "description": "User is not allowed to see the task.",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "Task not found.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get task",
        "description": "Get a single task by it's Id",
        "operationId": "GetTask",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "description": "Select a tenant",
            "x-ms-summary": "Tenant"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter a task id",
            "x-ms-summary": "Id"
          }
        ]
      }
    },
    "/api/Tasks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "400": {
            "description": "Error in input data.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get tasks",
        "description": "Get task list",
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "x-ms-summary": "Page index",
            "description": "Index number of the current page"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1000,
            "x-ms-summary": "Items per page",
            "description": "Number of items to show per page"
          },
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant",
            "description": "Select a tenant"
          }
        ]
      }
    },
    "/api/Route/Definitions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RouteDefinitionsResponse"
            }
          }
        },
        "summary": "Get templates",
        "description": "Get process templates models",
        "operationId": "GetTemplates",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "description": "Index number of the current page",
            "x-ms-summary": "Page index"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1000,
            "description": "Number of items to show per page",
            "x-ms-summary": "Items per page"
          },
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-summary": "Tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetTenants",
              "itemValuePath": "tenantId",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "tenant",
            "in": "query",
            "type": "string",
            "x-ms-visibility": "internal",
            "required": false
          }
        ]
      }
    },
    "/api/Route/Definition/{templateId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RouteDefinitionResponse"
            }
          },
          "400": {
            "description": "Route definition id is missing or malformed.",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "Route definition not found.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get a process template",
        "description": "Get a single process template",
        "operationId": "GetTemplate",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter a template id",
            "x-ms-summary": "Id"
          }
        ]
      }
    },
    "/api/Schemas/StartFields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get start process schema",
        "operationId": "GetStartProcessSchema",
        "description": "Get a dynamic field schema for start process form",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Tenant",
            "description": "Tenent id"
          },
          {
            "name": "definitionId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Definition",
            "description": "Definition id"
          }
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/api/Schemas/ProcessFields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get process fields schema",
        "operationId": "GetProcessFieldsSchema",
        "description": "Get a dynamic field schema for process steps",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Tenant",
            "description": "Tenent id"
          },
          {
            "name": "definitionId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Definition",
            "description": "Definition id"
          },
          {
            "name": "stepId",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Step",
            "description": "Step id"
          }
        ]
      }
    },
    "/api/Route/Instance/Create2": {
      "post": {
        "responses": {
          "201": {
            "description": "Process started",
            "schema": {
              "$ref": "#/definitions/InstanceResponse"
            }
          },
          "400": {
            "description": "Error in input data.",
            "schema": {
              "type": "object",
              "description": "Dynamic content from API"
            }
          }
        },
        "summary": "Start process",
        "description": "Start a new process instance",
        "operationId": "StartProcess",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetTenants",
              "itemValuePath": "tenantId",
              "itemTitlePath": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "templateId-dynamic": {
                  "type": "string",
                  "description": "Select a template",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTemplates",
                    "value-path": "id",
                    "value-title": "name",
                    "value-collection": "items",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameter": "x-ep-tenant"
                      },
                      "tenant": {
                        "parameter": "x-ep-tenant"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetTemplates",
                    "itemValuePath": "id",
                    "itemTitlePath": "name",
                    "itemsPath": "items",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameterReference": "x-ep-tenant"
                      },
                      "tenant": {
                        "parameterReference": "x-ep-tenant"
                      }
                    }
                  },
                  "x-ms-summary": "Template"
                },
                "fields": {
                  "type": "object",
                  "description": "Dynamic Schema of fields in selected template",
                  "x-ms-dynamic-schema": {
                    "operationId": "GetStartProcessSchema",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameter": "x-ep-tenant"
                      },
                      "definitionId": {
                        "parameter": "templateId-dynamic"
                      }
                    }
                  },
                  "x-ms-dynamic-properties": {
                    "operationId": "GetStartProcessSchema",
                    "parameters": {
                      "x-ep-tenant": {
                        "parameterReference": "x-ep-tenant"
                      },
                      "definitionId": {
                        "parameterReference": "body/templateId-dynamic"
                      }
                    }
                  },
                  "x-ms-summary": "Fields"
                }
              },
              "required": ["templateId-dynamic"]
            }
          }
        ]
      }
    },
    "/api/Route/Instance/{processId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstanceResponse"
            }
          },
          "400": {
            "description": "Id is missing or malformed.",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "Route instance not found.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get process",
        "description": "Get a single process by id",
        "operationId": "GetProcess",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-summary": "Tenant"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Enter a process id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          }
        ]
      }
    },
    "/api/Route/Instances": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstancesResponse"
            }
          },
          "400": {
            "description": "Error in input data.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get processes",
        "description": "Get process list",
        "operationId": "GetProcesses",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "description": "Index number of the current page",
            "x-ms-summary": "Page index"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1000,
            "description": "Number of items to show per page",
            "x-ms-summary": "Items per page"
          },
          {
            "name": "definitionId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter Instances by definition",
            "x-ms-summary": "Definition id",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-summary": "Tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetTenants",
              "itemValuePath": "tenantId",
              "itemTitlePath": "name"
            }
          }
        ]
      }
    },
    "/api/Schemas/Tasks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get create task schema",
        "description": "Get create task schema",
        "operationId": "GetCreateTaskSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "typeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Task type id",
            "x-ms-summary": "Type"
          },
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Tenant id",
            "x-ms-summary": "Tenant"
          }
        ]
      }
    },
    "/api/Schemas/TaskTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get task types",
        "description": "Gets a list of available task",
        "operationId": "GetTaskTypes",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Task type id",
            "x-ms-summary": "Type"
          }
        ]
      }
    },
    "/api/Schemas/ChangeTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get taskchange-types",
        "description": "Gets a list of available taskchange-types",
        "operationId": "GetChangeTypes",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Change type id",
            "x-ms-summary": "Type"
          }
        ]
      }
    },
    "/api/Schemas/TaskStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get task status",
        "description": "Gets a list of available task-status",
        "operationId": "GetStatus",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/api/Route/Definition/Steps/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepsResponse"
            }
          },
          "400": {
            "description": "Id is missing or malformed.",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "Route definition not found.",
            "schema": { "type": "string" }
          }
        },
        "summary": "Get template steps",
        "description": "Get process template steps",
        "operationId": "GetTemplateSteps",
        "parameters": [
          {
            "name": "x-ep-tenant",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select a tenant",
            "x-ms-summary": "Tenant",
            "x-ms-dynamic-values": {
              "operationId": "GetTenants",
              "value-path": "tenantId",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "GetTenants",
              "itemValuePath": "tenantId",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter a template id",
            "x-ms-summary": "Template id"
          }
        ]
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://evocom.de"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://evocom.de/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ],
  "definitions": {
    "UserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User id (EP)",
          "title": "User id (EP)"
        },
        "login": {
          "type": "string",
          "description": "User login",
          "title": "Login"
        },
        "name": {
          "type": "string",
          "description": "User full name",
          "title": "Name"
        },
        "email": {
          "type": "string",
          "description": "E-mail address",
          "title": "E-mail"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id",
          "title": "Tenant id"
        },
        "externalId": {
          "type": "string",
          "description": "User id (Azure)",
          "title": "User id (Azure)"
        }
      }
    },
    "CreatorResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Creator name",
          "title": "Creator name"
        },
        "login": {
          "type": "string",
          "description": "Creator e-mail",
          "title": "Creator e-mail"
        }
      },
      "description": "Creator"
    },
    "EditorResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Editor name",
          "title": "Editor name"
        },
        "login": {
          "type": "string",
          "description": "Editor e-mail",
          "title": "Editor e-mail"
        }
      },
      "description": "Editor"
    },
    "AssignedToResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Task assigned to name",
          "title": "Assigned to name"
        },
        "login": {
          "type": "string",
          "description": "Task assigned to e-mail",
          "title": "Assigned to e-mail"
        }
      },
      "description": "Task assigned to"
    },
    "AssignedToTeamResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task assigned to team id",
          "title": "Assigned to team id"
        },
        "displayTitle": {
          "type": "string",
          "description": "Task assigned to team display title",
          "title": "Assigned to team display title"
        }
      },
      "description": "Task assigned to team"
    },
    "TagResponse": {
      "type": "object",
      "properties": {
        "fullText": {
          "type": "string",
          "description": "Tag full text"
        }
      }
    },
    "CountryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Country id",
          "title": "Country id"
        },
        "name": {
          "type": "string",
          "description": "Country name",
          "title": "Country name"
        }
      },
      "description": "Country"
    },
    "LocationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Location id",
          "title": "Location id"
        },
        "name": {
          "type": "string",
          "description": "Location name",
          "title": "Location nam)"
        }
      },
      "description": "Location"
    },
    "LocationResponseV2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Location name",
          "title": "Location name"
        }
      },
      "description": "Location"
    },
    "TaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The task id",
          "title": "Id"
        },
        "typeId": {
          "type": "integer",
          "description": "The task type id",
          "title": "Type id"
        },
        "title": {
          "type": "string",
          "description": "The task title",
          "title": "Title"
        },
        "description": {
          "type": "string",
          "description": "The task description",
          "title": "Description",
          "format": "html"
        },
        "startDate": {
          "type": "string",
          "description": "Task start date",
          "title": "Start date",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "description": "Task due date",
          "title": "Due date",
          "format": "date-time"
        },
        "creator": {
          "$ref": "#/definitions/CreatorResponse"
        },
        "creationDate": {
          "type": "string",
          "description": "Task create date",
          "title": "Create date",
          "format": "date-time"
        },
        "editor": {
          "$ref": "#/definitions/EditorResponse"
        },
        "editDate": {
          "type": "string",
          "description": "Task edit date",
          "title": "Edit date",
          "format": "date-time"
        },
        "assignedToName": {
          "type": "string",
          "description": "Name of the assignee",
          "title": "Assigned to name"
        },
        "assignedToEmail": {
          "type": "string",
          "description": "Email address of the assignee",
          "title": "Assigned to email"
        },
        "statusId": {
          "type": "integer",
          "description": "The task status id",
          "title": "Task status id"
        },
        "approvalStatusId": {
          "type": "integer",
          "description": "Approval status id",
          "title": "Approval status id"
        },
        "requestStatusId": {
          "type": "integer",
          "description": "Request status id",
          "title": "Request status id"
        }
      }
    },
    "TaskResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The task id",
          "title": "Id"
        },
        "typeId": {
          "type": "integer",
          "format": "int32",
          "description": "Task type id",
          "title": "Type id"
        },
        "title": {
          "type": "string",
          "description": "The task title",
          "title": "Title"
        },
        "description": {
          "type": "string",
          "description": "Task description",
          "title": "Description",
          "format": "html"
        },
        "startDate": {
          "type": "string",
          "description": "Task start date",
          "title": "Start date",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "description": "Task due date",
          "title": "Due date",
          "format": "date-time"
        },
        "creator": {
          "$ref": "#/definitions/CreatorResponse"
        },
        "creationDate": {
          "type": "string",
          "description": "Task create date",
          "title": "Create date",
          "format": "date-time"
        },
        "editor": {
          "$ref": "#/definitions/EditorResponse"
        },
        "editDate": {
          "type": "string",
          "description": "Task edit date",
          "title": "Edit date",
          "format": "date-time"
        },
        "assignedTo": {
          "$ref": "#/definitions/AssignedToResponse"
        },
        "assignedToTeam": {
          "$ref": "#/definitions/AssignedToTeamResponse"
        },
        "statusId": {
          "type": "integer",
          "format": "int32",
          "description": "Task status id",
          "title": "Status id"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "description": "Task tags",
          "x-ms-summary": "Tags"
        },
        "url": {
          "type": "string",
          "description": "Url link for the task",
          "title": "Url",
          "x-ms-visibility": "internal"
        }
      }
    },
    "TaskResponseV3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The task id",
          "title": "Id"
        },
        "title": {
          "type": "string",
          "description": "The task title",
          "title": "Title"
        }
      }
    },
    "TasksResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskResponseV3"
          },
          "description": "Tasks",
          "x-ms-summary": "Tasks"
        }
      }
    },
    "TeamResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Team id",
          "title": "Id"
        },
        "title": {
          "type": "string",
          "description": "Team title",
          "title": "Title"
        },
        "displayTitle": {
          "type": "string",
          "description": "Team display title  (title +  type + location)",
          "title": "Display title"
        },
        "countryName": {
          "type": "string",
          "description": "Team country name",
          "title": "Country name"
        },
        "locationName": {
          "type": "string",
          "description": "Team location name",
          "title": "Location name"
        }
      }
    },
    "TeamResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Team id",
          "title": "Id"
        },
        "title": {
          "type": "string",
          "description": "Team title",
          "title": "Title"
        },
        "displayTitle": {
          "type": "string",
          "description": "Team display title (title + type + location)",
          "title": "Display title"
        },
        "departmentId": {
          "type": "integer",
          "format": "int32",
          "description": "Team department id",
          "title": "Department id"
        },
        "typeId": {
          "type": "integer",
          "format": "int32",
          "description": "Team type id",
          "title": "Type id"
        },
        "country": {
          "$ref": "#/definitions/CountryResponse"
        },
        "location": {
          "$ref": "#/definitions/LocationResponse"
        }
      }
    },
    "TeamResponseV3": {
      "type": "object",
      "properties": {
        "displayTitle": {
          "type": "string",
          "description": "Team display title (title + type + location)",
          "title": "Display title"
        }
      },
      "description": "Team"
    },
    "TeamsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TeamResponseV2"
      },
      "description": "Teams",
      "x-ms-summary": "Teams"
    },
    "ProcessResponse": {
      "type": "object",
      "properties": {
        "templateName": {
          "type": "string",
          "description": "The process template name",
          "title": "Template name"
        },
        "description": {
          "type": "string",
          "description": "The process description",
          "title": "Description",
          "format": "html"
        },
        "id": {
          "type": "string",
          "description": "The process id",
          "title": "Id"
        },
        "name": {
          "type": "string",
          "description": "The process name",
          "title": "Name"
        },
        "creatorName": {
          "type": "string",
          "description": "Name of the process creator",
          "title": "Creator's name"
        },
        "creatorEmail": {
          "type": "string",
          "description": "Email address of the process creator",
          "title": "Creator's email"
        },
        "creationDate": {
          "type": "string",
          "description": "Date when the process was started",
          "title": "Start date",
          "format": "date-time"
        },
        "plannedEndDate": {
          "type": "string",
          "description": "Planned process end date",
          "title": "Planned end date",
          "format": "date-time"
        },
        "currentEndDate": {
          "type": "string",
          "description": "Current process end date",
          "title": "Current end date",
          "format": "date-time"
        },
        "templateVersion": {
          "type": "string",
          "description": "The process template version",
          "title": "Template version"
        },
        "fields": {
          "type": "object",
          "description": "Dynamic Schema of fields in selected template",
          "x-ms-dynamic-schema": {
            "operationId": "GetStartProcessSchema",
            "parameters": {
              "x-ep-tenant": {
                "parameter": "x-ep-tenant"
              },
              "definitionId": {
                "parameter": "definitionId"
              }
            }
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetStartProcessSchema",
            "parameters": {
              "x-ep-tenant": {
                "parameterReference": "x-ep-tenant"
              },
              "definitionId": {
                "parameterReference": "body/definitionId"
              }
            }
          },
          "x-ms-summary": "Fields"
        }
      }
    },
    "ProcessResponseV2": {
      "type": "object",
      "properties": {
        "templateName": {
          "type": "string",
          "description": "The process template name",
          "title": "Template name"
        },
        "description": {
          "type": "string",
          "description": "The process description",
          "title": "Description",
          "format": "html"
        },
        "id": {
          "type": "string",
          "description": "The process id",
          "title": "Id"
        },
        "name": {
          "type": "string",
          "description": "The process name",
          "title": "Name"
        },
        "creatorName": {
          "type": "string",
          "description": "Name of the process creator",
          "title": "Creator's name"
        },
        "creatorEmail": {
          "type": "string",
          "description": "Email address of the process creator",
          "title": "Creator's email"
        },
        "creationDate": {
          "type": "string",
          "description": "Date when the process was started",
          "title": "Start date",
          "format": "date-time"
        },
        "plannedEndDate": {
          "type": "string",
          "description": "Planned process end date",
          "title": "Planned end date",
          "format": "date-time"
        },
        "currentEndDate": {
          "type": "string",
          "description": "Current process end date",
          "title": "Current end date",
          "format": "date-time"
        },
        "templateVersion": {
          "type": "string",
          "description": "The process template version",
          "title": "Template version"
        },
        "percentComplete": {
          "type": "number",
          "description": "The process completion percentage",
          "title": "Completed (%)"
        },
        "fields": {
          "type": "object",
          "description": "Dynamic Schema of fields in selected template",
          "x-ms-dynamic-schema": {
            "operationId": "GetProcessFieldsSchema",
            "parameters": {
              "x-ep-tenant": {
                "parameter": "x-ep-tenant"
              },
              "definitionId": {
                "parameter": "definitionId"
              },
              "stepId": {
                "parameter": "stepId"
              }
            }
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetProcessFieldsSchema",
            "parameters": {
              "x-ep-tenant": {
                "parameterReference": "x-ep-tenant"
              },
              "definitionId": {
                "parameterReference": "body/definitionId"
              },
              "stepId": {
                "parameterReference": "body/stepId"
              }
            }
          },
          "x-ms-summary": "Fields"
        }
      }
    },
    "TagsResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Tag id",
            "title": "Id"
          },
          "parentId": {
            "type": "string",
            "description": "Parent tag id",
            "title": "Parent id"
          },
          "text": {
            "type": "string",
            "description": "Tag text",
            "title": "Text"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Deleted",
            "title": "Deleted"
          },
          "fullText": {
            "type": "string",
            "description": "Tag full text",
            "title": "Full text"
          }
        }
      }
    },
    "StepResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Process template step id",
          "title": "Step id"
        },
        "name": {
          "type": "string",
          "description": "Process template step name",
          "title": "names"
        }
      },
      "description": "Process template step"
    },
    "StepsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StepResponse"
      },
      "description": "Process template steps",
      "x-ms-summary": "step"
    },
    "EndToEndTypeResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Process template EndToEnd type name",
          "title": "name"
        }
      },
      "description": "Process template's EndToEnd type",
      "x-ms-summary": "EndToEnd"
    },
    "ProcessTypeResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Process template type name",
          "title": "name"
        }
      },
      "description": "Process landscape type",
      "x-ms-summary": "process type"
    },
    "RouteDefinitionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Process template id",
          "title": "id"
        },
        "name": {
          "type": "string",
          "description": "Process template name",
          "title": "name"
        },
        "description": {
          "type": "string",
          "description": "Process template description",
          "title": "description",
          "format": "html"
        },
        "creationDate": {
          "type": "string",
          "description": "Process template create date",
          "title": "Create date",
          "format": "date-time"
        },
        "creator": {
          "$ref": "#/definitions/CreatorResponse"
        },
        "team": {
          "$ref": "#/definitions/TeamResponseV3"
        },
        "steps": {
          "$ref": "#/definitions/StepsResponse"
        },
        "version": {
          "type": "string",
          "description": "Process template version",
          "title": "Version"
        },
        "endToEndType": {
          "$ref": "#/definitions/EndToEndTypeResponse"
        },
        "processType": {
          "$ref": "#/definitions/ProcessTypeResponse"
        },
        "location": {
          "$ref": "#/definitions/LocationResponseV2"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "description": "Process template tags",
          "x-ms-summary": "Tags"
        }
      },
      "description": "Process template",
      "x-ms-summary": "Process template"
    },
    "RouteDefinitionResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Process template id",
          "title": "id"
        },
        "name": {
          "type": "string",
          "description": "Process template name",
          "title": "name"
        },
        "startUrl": {
          "type": "string",
          "description": "Start new instance url",
          "title": "Start url",
          "x-ms-visibility": "internal"
        }
      }
    },
    "RouteDefinitionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteDefinitionResponseV2"
          },
          "description": "Route definitions",
          "x-ms-summary": "Process template"
        }
      }
    },
    "InstanceResponse": {
      "type": "object",
      "properties": {
        "routeDefinitionName": {
          "type": "string",
          "description": "Name of the route template",
          "title": "Template name"
        },
        "description": {
          "type": "string",
          "description": "Process description",
          "title": "Description",
          "format": "html"
        },
        "id": {
          "type": "string",
          "description": "Process id",
          "title": "Id"
        },
        "name": {
          "type": "string",
          "description": "Process name",
          "title": "Name"
        },
        "creator": {
          "$ref": "#/definitions/CreatorResponse"
        },
        "creationDate": {
          "type": "string",
          "description": "Process creation date",
          "title": "Create date",
          "format": "date-time"
        },
        "plannedEndDate": {
          "type": "string",
          "description": "Planned process end date",
          "title": "Planned end date",
          "format": "date-time"
        },
        "currentEndDate": {
          "type": "string",
          "description": "Current process end date",
          "title": "Current end date",
          "format": "date-time"
        },
        "version": {
          "type": "string",
          "description": "Process template version",
          "title": "Template version"
        },
        "location": {
          "$ref": "#/definitions/LocationResponseV2"
        },
        "team": {
          "$ref": "#/definitions/TeamResponseV3"
        },
        "steps": {
          "$ref": "#/definitions/StepsResponse"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "description": "Process template tags",
          "x-ms-summary": "Tags"
        }
      }
    },
    "InstanceResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Process id",
          "title": "Process id"
        },
        "name": {
          "type": "string",
          "description": "Process name",
          "title": "Process name"
        },
        "url": {
          "type": "string",
          "description": "Process url link",
          "title": "Process url",
          "x-ms-visibility": "internal"
        }
      },
      "description": "Process instance",
      "x-ms-summary": "Instance"
    },
    "InstancesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceResponseV2"
          },
          "description": "Process instances",
          "x-ms-summary": "Instances"
        }
      }
    },
    "TenantResponse": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant id",
          "title": "Tenant id"
        },
        "name": {
          "type": "string",
          "description": "Name",
          "title": "Name"
        }
      },
      "description": "Tenant",
      "x-ms-summary": "Tenant"
    },
    "TenantsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TenantResponse"
      },
      "description": "Tenants",
      "x-ms-summary": "Tenants"
    },
    "AssignedToRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "Enter an user e-mail",
          "title": "Assigned to e-mail"
        }
      },
      "description": "Task assigned to"
    },
    "AssignedToTeamRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Select a team",
          "title": "Assigned to team",
          "x-ms-dynamic-values": {
            "operationId": "GetTeams",
            "value-path": "id",
            "value-title": "displayTitle",
            "parameters": {
              "x-ep-tenant": {
                "parameter": "x-ep-tenant"
              }
            }
          }
        }
      },
      "description": "Task assigned to team"
    },
    "TagRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Select a tag",
          "x-ms-summary": "Tag",
          "x-ms-dynamic-values": {
            "operationId": "GetTags",
            "value-path": "ID",
            "value-title": "FullText",
            "parameters": {
              "x-ep-tenant": {
                "parameter": "x-ep-tenant"
              }
            }
          }
        }
      }
    },
    "TaskPutRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Task id",
          "title": "Id"
        },
        "title": {
          "type": "string",
          "description": "Task title",
          "title": "Title"
        },
        "description": {
          "type": "string",
          "description": "Task description",
          "title": "Description",
          "format": "html"
        },
        "startDate": {
          "type": "string",
          "description": "Task start date",
          "title": "Start date",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "description": "Task due date",
          "title": "Due date",
          "format": "date-time"
        },
        "assignedTo": {
          "$ref": "#/definitions/AssignedToRequest"
        },
        "assignedToTeam": {
          "$ref": "#/definitions/AssignedToTeamRequest"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagRequest"
          },
          "description": "Task tags",
          "x-ms-summary": "Tags"
        }
      },
      "required": ["id"]
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "tags": []
}
