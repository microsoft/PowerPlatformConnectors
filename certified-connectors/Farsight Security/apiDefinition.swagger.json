{
  "swagger": "2.0",
  "info": {
    "title": "Farsight DNSDB",
    "description": "Farsight Security DNSDB is the world's largest DNS intelligence database that provides a fact-based view of the configuration of the global Internet infrastructure. DNSDB leverages Farsight's Security Information Exchange (SIE) data-sharing platform and is engineered and operated by leading DNS experts. Farsight collects, filters, and verifies Passive DNS data from its global sensor array. DNSDB is the highest-quality and most comprehensive DNS intelligence data service of its kind.",
    "contact": {
      "name": "Farsight Security Technical Support",
      "url": "https://service.farsightsecurity.com/",
      "email": "support@farsightsecurity.com"
    },
    "version": "1.0"
  },
  "host": "openapi.dnsdb.info",
  "basePath": "/dnsdb/v2",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/lookup/rrset/{type}/{value}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RRSet Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RRSet_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "RRSet Lookup",
        "description": "The RRSet lookup queries DNSDB's RRset index, which supports forward lookups based on the owner name of an RRset.",
        "operationId": "RRSET",
        "parameters": [
          {
            "$ref": "#/parameters/RRSetType"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Aggr"
          },
          {
            "$ref": "#/parameters/HumanTime"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/lookup/rrset/{type}/{value}/{rrtype}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RRSet Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RRSet_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "RRSet Lookup with RRType",
        "description": "The RRSet lookup queries DNSDB's RRset index, which supports forward lookups based on the owner name of an RRset.",
        "operationId": "RRSET_RRTYPE",
        "parameters": [
          {
            "$ref": "#/parameters/RRSetType"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/RRType"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Aggr"
          },
          {
            "$ref": "#/parameters/HumanTime"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/lookup/rrset/{type}/{value}/{rrtype}/{bailiwick}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RRSet Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RRSet_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "RRSet Lookup with RRType and Bailiwick",
        "description": "The RRSet lookup queries DNSDB's RRset index, which supports forward lookups based on the owner name of an RRset.",
        "operationId": "RRSET_RRTYPE_BAILIWICK",
        "parameters": [
          {
            "$ref": "#/parameters/RRSetType"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/RRType"
          },
          {
            "$ref": "#/parameters/Bailiwick"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Aggr"
          },
          {
            "$ref": "#/parameters/HumanTime"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/lookup/rdata/{type}/{value}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RData Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RData_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "RData Lookup",
        "description": "The RData lookup queries DNSDB's Rdata index, which supports inverse lookups based on Rdata record values.",
        "operationId": "RDATA",
        "parameters": [
          {
            "$ref": "#/parameters/RDataType"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Aggr"
          },
          {
            "$ref": "#/parameters/HumanTime"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/lookup/rdata/{type}/{value}/{rrtype}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RData Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RData_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "RData Lookup with RRType",
        "description": "The RData lookup queries DNSDB's Rdata index, which supports inverse lookups based on Rdata record values.",
        "operationId": "RDATA_RRTYPE",
        "parameters": [
          {
            "$ref": "#/parameters/RDataType"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/RRType"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Aggr"
          },
          {
            "$ref": "#/parameters/HumanTime"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/{method}/{key}/{value}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Flex Search Records",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Flex_Results"
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "limit in period",
                "type": "number"
              },
              "X-RateLimit-Remaining": {
                "description": "remaining in period",
                "type": "number"
              },
              "X-RateLimit-Reset": {
                "description": "when period resets",
                "type": "number"
              },
              "X-RateLimit-Expires": {
                "description": "when period expires",
                "type": "number"
              }
            }
          }
        },
        "summary": "Flexible Search",
        "operationId": "FLEX",
        "description": "Flexible Search adds both Regular Expressions and Globbing support to the DNSDB API to expand the types of search queries and add more control to searches.",
        "parameters": [
          {
            "$ref": "#/parameters/FlexMethod"
          },
          {
            "$ref": "#/parameters/FlexKey"
          },
          {
            "$ref": "#/parameters/Value"
          },
          {
            "$ref": "#/parameters/TimeFirstBefore"
          },
          {
            "$ref": "#/parameters/TimeFirstAfter"
          },
          {
            "$ref": "#/parameters/TimeLastBefore"
          },
          {
            "$ref": "#/parameters/TimeLastAfter"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/FlexExclude"
          },
          {
            "$ref": "#/parameters/Offset"
          }
        ]
      }
    },
    "/rate_limit": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Rate Limit",
            "schema": {
              "$ref": "#/definitions/RateLimit_Results"
            },
            "examples": {
              "application/json": {
                "time based quota": {
                  "value": {
                    "rate": {
                      "reset": 1433980800,
                      "limit": 1000,
                      "remaining": 999
                    }
                  }
                },
                "block quota": {
                  "value": {
                    "rate": {
                      "reset": "n/a",
                      "burst_size": 10,
                      "expires": 1555370914,
                      "burst_window": 300,
                      "offset\\_max": 3000000,
                      "results_max": 256,
                      "limit": 600,
                      "remaining": 8
                    }
                  }
                },
                "unlimited": {
                  "value": {
                    "rate": {
                      "reset": "n/a",
                      "limit": "unlimited",
                      "remaining": "n/a"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Service Limits",
        "description": "Retrieve service limits",
        "operationId": "RATE_LIMIT"
      }
    },
    "/ping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "ping": {
                  "type": "string",
                  "description": "ping"
                }
              }
            }
          }
        },
        "summary": "Ping",
        "description": "This request is for end to end connectivity tests to the DNSDB API endpoint, letting you know that there are no firewall blockages. This request does not require an API key. It returns just a JSON object {'ping': 'ok'}.",
        "operationId": "PING"
      }
    }
  },
  "definitions": {
    "RRSet_Results": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The number of times the RRset was observed via passive DNS replication.",
          "title": "Count"
        },
        "time_first": {
          "type": "number",
          "description": "The first time that the RRset was observed.",
          "title": "Time First"
        },
        "time_last": {
          "type": "number",
          "description": "The most recent time that the RRset was observed.",
          "title": "Time Last"
        },
        "zone_time_first": {
          "type": "number",
          "description": "The first time that the RRset was observed via zone file import.",
          "title": "Zone Time First"
        },
        "zone_time_last": {
          "type": "number",
          "description": "The last time that the RRset was observed via zone file import.",
          "title": "Zone Time Last"
        },
        "rrname": {
          "type": "string",
          "description": "The owner name of the RRset in DNS presentation format.",
          "title": "RRName"
        },
        "rrtype": {
          "type": "string",
          "description": "The resource record type of the RRset, either using the standard DNS type mnemonic, or an RFC 3597 generic type, i.e. the string TYPE immediately followed by the decimal RRtype number.",
          "title": "RRType"
        },
        "bailiwick": {
          "type": "string",
          "description": "The closest enclosing zone delegated to a nameserver which served the RRset, or the name of the zone containing the RRset if FromZoneFile is True.",
          "title": "Bailiwick"
        },
        "rdata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "RData",
          "description": "An array of one or more Rdata values. The Rdata values are converted to the standard presentation format based on the rrtype value. If the encoder lacks a type-specific presentation format for the RRset's rrtype, then the RFC 3597 generic Rdata encoding will be used."
        }
      }
    },
    "RData_Results": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The number of times the resource record was observed via passive DNS replication.",
          "title": "Count"
        },
        "time_first": {
          "type": "number",
          "description": "The first time that the resource record was observed.",
          "title": "Time First"
        },
        "time_last": {
          "type": "number",
          "description": "The most recent time that the resource record was observed.",
          "title": "Time Last"
        },
        "zone_time_first": {
          "type": "number",
          "description": "The first time that the resource record was observed via zone file import.",
          "title": "Zone Time First"
        },
        "zone_time_last": {
          "type": "number",
          "description": "The last time that the resource record was observed via zone file import.",
          "title": "Zone Time Last"
        },
        "rrname": {
          "type": "string",
          "description": "The owner name of the resource record in DNS presentation format.",
          "title": "RRName"
        },
        "rrtype": {
          "type": "string",
          "description": "The resource record type of the resource record, either using the standard DNS type mnemonic, or an RFC 3597 generic type, i.e. the string TYPE immediately followed by the decimal RRtype number.",
          "title": "RRType"
        },
        "rdata": {
          "type": "array",
          "title": "RData",
          "items": {
            "type": "string"
          },
          "description": "The record data value. The Rdata value is converted to the standard presentation format based on the rrtype value. If the encoder lacks a type-specific presentation format for the resource record's type, then the RFC 3597 generic Rdata encoding will be used."
        }
      }
    },
    "Flex_Results": {
      "type": "object",
      "properties": {
        "rdata": {
          "type": "string",
          "description": "The record data value.",
          "title": "RData"
        },
        "rrname": {
          "type": "string",
          "description": "The owner name of the RRset in DNS presentation format.",
          "title": "RRName"
        },
        "rrtype": {
          "type": "string",
          "description": "The resource record type of the RRset/resource record, either using the standard DNS type mnemonic, or an RFC 3597 generic type, i.e. the string TYPE immediately followed by the decimal RRtype number.",
          "title": "RRType"
        },
        "raw_rdata": {
          "type": "string",
          "description": "The record data value as pairs of hex digits specifying a raw octet string. This value is used for pivoting from flexible search into standard search to get more details on rdata.",
          "title": "RAW_RDATA"
        }
      }
    },
    "RateLimit_Results": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "number",
          "description": "The maximum number of API lookups that may be performed. This is the initial quota.",
          "title": "Limit"
        },
        "remaining": {
          "type": "number",
          "description": "For time-based quotas: the remaining number of API lookups that may be performed until the reset time.For block-based quotas: the remaining number of API lookups in the block quota.",
          "title": "Remaining"
        },
        "reset": {
          "type": "number",
          "description": "For time-based quotas: UNIX epoch timestamp with second granularity indicating the next point in time when the quota limit will be reset. Usually this is at 00:00 (midnight) UTC.For block-based quotas: the value will be 'n/a'",
          "title": "Reset"
        },
        "expires": {
          "type": "number",
          "description": "Only present for block-based quota: UNIX epoch timestamp with second granularity indicating when the quota will expire.",
          "title": "Expires"
        },
        "results_max": {
          "type": "number",
          "description": "Returns the maximum number of results that can be returned by these lookup methods. This overrides a 'limit' query parameter if provided. For example, if '?limit=20000' is appended to the URL path but results_max=1000 then only up to 1000 results will be returned.",
          "title": "ResultsMax"
        },
        "offset_max": {
          "type": "number",
          "description": "The maximum value that the offset query parameter can be. If it is higher then an HTTP 416 'Requested Range Not Satisfiable' response code will be returned with message 'Error: offset value greater than maximum allowed.' If the value is 'n/a' then the offset parameter is not allowed for this API key, and similar 416 error will be generated.",
          "title": "OffsetMax"
        },
        "burst_size": {
          "type": "number",
          "description": "The maximum number of API lookups that may be performed within this burst_window number of seconds.",
          "title": "BurstSize"
        },
        "burst_window": {
          "type": "number",
          "description": "The number of seconds over which a burst of queries is measured.",
          "title": "BurstWindow"
        }
      }
    }
  },
  "parameters": {
    "RRSetType": {
      "name": "type",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "default": "name",
      "description": "Query type(name, raw) name: The VALUE is a DNS owner name in presentation format or wildcards as described below. We sometimes call this just an rrset search, raw: The VALUE is an even number of hexadecimal digits specifying a raw octet string.",
      "x-ms-summary": "type",
      "enum": [
        "name",
        "raw"
      ]
    },
    "RDataType": {
      "name": "type",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "default": "name",
      "x-ms-summary": "type",
      "enum": [
        "name",
        "ip",
        "raw"
      ],
      "description": "Query type(name, raw) name: The VALUE is a DNS domain name in presentation format, or a left-hand ('c.example.com') or right-hand ('www.example.') wildcard domain name. Note that left-hand wildcard queries are somewhat more expensive than right-hand wildcard queries.,ip: The VALUE is one of an IPv4 or IPv6 single address, with a prefix length, or with an address range. If a prefix is provided, the delimiter between the network address and prefix length is a single comma (',') character rather than the usual slash ('/') character to avoid clashing with the HTTP URI path name separator., raw: The VALUE is an even number of hexadecimal digits specifying a raw octet string."
    },
    "RRType": {
      "name": "rrtype",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "x-ms-summary": "rrtype",
      "default": "ANY",
      "description": "Query rrtype"
    },
    "FlexMethod": {
      "name": "method",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "default": "regex",
      "x-ms-summary": "method",
      "description": "flex search method (regex - regular expression search, glob - full wildcarding)",
      "enum": [
        "regex",
        "glob"
      ]
    },
    "FlexKey": {
      "name": "key",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "default": "rrnames",
      "description": "search key",
      "x-ms-summary": "key",
      "enum": [
        "rrnames",
        "rdata"
      ]
    },
    "FlexExclude": {
      "name": "exclude",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-summary": "exclude",
      "description": "The 'exclude' parameter is used to exclude (i.e. filter-out) results that match it. It is described below this table."
    },
    "Bailiwick": {
      "name": "bailiwick",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "x-ms-summary": "bailiwick",
      "description": "Query bailiwick"
    },
    "Value": {
      "name": "value",
      "in": "path",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "description": "Query value",
      "x-ms-summary": "value"
    },
    "TimeFirstBefore": {
      "name": "time_first_before",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "time_first_before (Unix/Epoch time)",
      "description": "Provide results before the defined timestamp for when the DNS record was first observed. For example, the URL parameter 'time_first_before=1420070400' will only provide matching DNS records that were first observed before (or older than) January 1, 2015."
    },
    "TimeFirstAfter": {
      "name": "time_first_after",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "time_first_after (Unix/Epoch time)",
      "description": "Provide results after the defined timestamp for when the DNS record was first observed. For example, the URL parameter 'time_first_after=-31536000' will only provide results that were first observed within the last year."
    },
    "TimeLastBefore": {
      "name": "time_last_before",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "time_last_before (Unix/Epoch time)",
      "description": "Provide results before the defined timestamp for when the DNS record was last observed. For example, the URL parameter 'time_last_before=1356998400' will only provide results for DNS records that were last observed before 2013."
    },
    "TimeLastAfter": {
      "name": "time_last_after",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "time_last_after (Unix/Epoch time)",
      "description": "Provide results after the defined timestamp for when the DNS record was last observed. For example, the URL parameter 'time_last_after=-2678400' will only provide results that were last observed after 31 days ago."
    },
    "Limit": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "limit",
      "description": "Limit for the number of results returned via these lookup methods. There is a built-in limit to the number of results that are returned via these lookup methods. The default limit is set at 10,000. This limit can be raised or lowered by setting the 'limit' query parameter.  There is also a maximum number of results allowed; requesting a limit greater than the maximum will only return the maximum. See results_max below for information on that maximum. If '?limit=0' is used then DNSDB will return the maximum number of results allowed. If there are less results for the query than the requested limit, only the actual amount can be returned."
    },
    "Aggr": {
      "name": "aggr",
      "in": "query",
      "required": false,
      "type": "boolean",
      "x-ms-summary": "aggr",
      "description": "Aggregated results group identical rrsets across all time periods and is the classic behavior from querying the DNSDB. This means you could get the total number of times an rrset has been observed, but not when it was observed. Unaggregated results ungroup identical rrsets, allowing you to see how the domain name was resolved in the DNS across the full-time range covered in DNSDB (subject to time fencing). This can give a more accurate impression of record request volume across time because it will reveal the distinct timestamps of records whose values are repeated. You can answer questions like, 'Was a domain parked for a long time, mostly unused, until it was repurposed for serving malware or relaying spam, but then was abandoned again?' It allows you to see if a record was observed heavily in the last week vs. having been observed constantly for years.  This is a boolean value. Use True, the default, for the aggregated results or False for unaggregated results."
    },
    "HumanTime": {
      "name": "humantime",
      "in": "query",
      "required": false,
      "type": "boolean",
      "x-ms-summary": "humantime",
      "description": "A boolean value that is True if time values (in time_first, time_last, zone_time_first, zone_time_last) should be returned in human readable (RFC3339 compliant) format or False if Unix-style time values in seconds since the epoch should be returned. False is the classic behavior from querying the DNSDB and is the default value for this option."
    },
    "Offset": {
      "name": "offset",
      "in": "query",
      "required": false,
      "type": "number",
      "x-ms-summary": "offset",
      "description": "How many rows to offset (e.g. skip) in the results. This implements an incremental result transfer feature, allowing you to view more of the available results for a single query. The rows are offset prior to the limit parameter being applied, therefore offset allows seeing additional results past a limit that matches the maximum number of results. Note that DNSDB recalculates the results for each query and the order of results might not be preserved. Therefore, this capability is not a valid way to walk all results over multiple queries - some results might be missing and some might be duplicated. The actual offset that can be used is limited or for certain API keys, offset is not allowed - see the offset_max rate_limit key below.  The offset value must be a positive integer.  The default is 0, which means do not offset the rows."
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.farsightsecurity.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.farsightsecurity.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Security;Data"
    }
  ]
}
