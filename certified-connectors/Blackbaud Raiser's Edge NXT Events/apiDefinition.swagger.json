{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud Raisers Edge NXT Eve",
    "description": "Blackbaud Raiser's Edge NXT is a comprehensive cloud-based fundraising and donor management software solution built specifically for nonprofits and the entire social good community. Use the Events connector to manage events and participants.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-raisers-edge-nxt"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "skyApiOAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2.sky.blackbaud.com/authorization",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "skyApiOAuth": []
    }
  ],
  "paths": {
    "/event/v1/eventcategories": {
      "get": {
        "operationId": "ListEventCategories",
        "summary": "List event categories",
        "description": "Lists the event categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfEventCategory"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view event categories."
          }
        }
      }
    },
    "/event/v1/eventlist": {
      "get": {
        "operationId": "ListEvents",
        "summary": "List events",
        "description": "Returns a list of events.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter based on event category.",
            "type": "string",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "ListEventCategories",
              "value-collection": "value",
              "value-path": "name",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "ListEventCategories",
              "itemsPath": "value",
              "itemValuePath": "name",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "lookup_id",
            "in": "query",
            "description": "A filter for results that match the custom identifier for the event record.",
            "type": "string",
            "x-ms-summary": "Lookup ID"
          },
          {
            "name": "start_date_from",
            "in": "query",
            "description": "Filter the results to events with start date on or after the specified date (ex: '2020-09-18').",
            "type": "string",
            "format": "date",
            "x-ms-summary": "Start date from"
          },
          {
            "name": "start_date_to",
            "in": "query",
            "description": "Filter the results to events with start date on or before the specified date (ex: '2020-09-18').",
            "type": "string",
            "format": "date",
            "x-ms-summary": "Start date to"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive events?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 10000.",
            "type": "integer",
            "format": "int32",
            "maximum": 10000,
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "event_id",
            "in": "query",
            "description": "Filter the events that match the specified system record ID.",
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter for events that match the specified name.",
            "type": "string",
            "x-ms-summary": "Name",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to events created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to events modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains a collection and count of filtered events.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfEventListEntry"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the event records."
          }
        }
      }
    },
    "/event/v1/events": {
      "post": {
        "operationId": "CreateEvent",
        "summary": "Create an event",
        "description": "Creates a new event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateEvent"
            },
            "description": "An object that represents the event to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new event.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedEvent"
            }
          },
          "400": {
            "description": "Returned when the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the event."
          }
        }
      }
    },
    "/event/v1/events/{event_id}": {
      "get": {
        "operationId": "GetEvent",
        "summary": "Get an event",
        "description": "Returns information about an event.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.Event"
            }
          },
          "400": {
            "description": "Returned when the specified event ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the event record."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      },
      "patch": {
        "operationId": "EditEvent",
        "summary": "Update an event",
        "description": "Updates the details about an event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.EditEvent"
            },
            "description": "An object that represents the properties of the event to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds."
          },
          "400": {
            "description": "Returned when the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to edit the event."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      }
    },
    "/event/v1/events/{event_id}/eventfees": {
      "get": {
        "operationId": "ListEventFees",
        "summary": "List event fees",
        "description": "Lists the fees for an event.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfEventFee"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the event fees."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateEventFee",
        "summary": "Create an event fee",
        "description": "Creates a new fee for an event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateEventFee"
            },
            "description": "An object that represents the event fee to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new event fee.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedEventFee"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the fee."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      }
    },
    "/event/v1/events/{event_id}/eventparticipantoptions": {
      "get": {
        "operationId": "ListEventParticipantOptions",
        "summary": "List event participant options",
        "description": "Lists the participant options for an event.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfEventParticipantOption"
            }
          },
          "400": {
            "description": "Returned when the specified request does not contain a valid ID."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the event record."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateEventParticipantOption",
        "summary": "Create an event participant option",
        "description": "Creates a new participant option for an event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateEventParticipantOption"
            },
            "description": "An object that represents the event participant option to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new event participant option.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedEventParticipantOption"
            }
          },
          "400": {
            "description": "Returned when the route does not contain a valid ID or the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to modify the event record."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      }
    },
    "/event/v1/events/{event_id}/participants": {
      "get": {
        "operationId": "ListEventParticipants",
        "summary": "List event participants",
        "description": "Lists the participants for an event.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "rsvp_status",
            "in": "query",
            "description": "Filter participants based on RSVP status.",
            "x-ms-summary": "RSVP status",
            "type": "string",
            "enum": [
              "NoResponse",
              "Attending",
              "Declined",
              "Interested",
              "Canceled",
              "Waitlisted",
              "NotApplicable"
            ]
          },
          {
            "name": "invitation_status",
            "in": "query",
            "description": "Filter participants based on invitation status.",
            "x-ms-summary": "Invitation status",
            "type": "string",
            "enum": [
              "NotApplicable",
              "NotInvited",
              "Invited"
            ]
          },
          {
            "name": "participation_level",
            "in": "query",
            "description": "Filter participants based on level of involvement.",
            "x-ms-summary": "Participation level",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "ListParticipationLevels",
              "value-collection": "value",
              "value-path": "name",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "ListParticipationLevels",
              "itemsPath": "value",
              "itemValuePath": "name",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "attended_filter",
            "in": "query",
            "description": "Filter for including or excluding participants marked as attended.",
            "type": "boolean",
            "x-ms-summary": "Attended?"
          },
          {
            "name": "fees_paid_filter",
            "in": "query",
            "description": "Filter for including or excluding participants that have paid their fees.",
            "type": "boolean",
            "x-ms-summary": "Fees paid?"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 10000.",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "is_constituent_filter",
            "in": "query",
            "description": "Filter for including or excluding participants who are constituents.",
            "type": "boolean",
            "x-ms-summary": "Is a constituent?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "email_eligible_filter",
            "in": "query",
            "description": "Filter for including or excluding participants based on whether they have a primary email address that's not marked Do not email?",
            "type": "boolean",
            "x-ms-summary": "Has an eligible email?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "phone_call_eligible_filter",
            "in": "query",
            "description": "Filter for including or excluding participants based on whether they have a primary phone number that's not marked Do not call.",
            "type": "boolean",
            "x-ms-summary": "Has an eligible phone?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter for participants that match the specified name.",
            "type": "string",
            "x-ms-summary": "Name",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to participants created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to participants modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipantListEntry"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant records."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateParticipant",
        "summary": "Create a participant",
        "description": "Creates a new participant for an event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The system record ID of the event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateParticipant"
            },
            "description": "An object that represents the participant to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new participant.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedParticipant"
            }
          },
          "400": {
            "description": "Returned when the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the participant."
          },
          "404": {
            "description": "Returned when the specified event is not found."
          }
        }
      }
    },
    "/event/v1/participantoptions/{option_id}": {
      "patch": {
        "operationId": "EditParticipantOption",
        "summary": "Update a participant option",
        "description": "Updates the details about a participant option.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "option_id",
            "in": "path",
            "description": "The system record ID of the participant option to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant option ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.EditParticipantOption"
            },
            "description": "An object that represents the event participant option to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds."
          },
          "400": {
            "description": "Returned when the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to modify the participant option record."
          },
          "404": {
            "description": "Returned when the specified participant option is not found."
          }
        }
      }
    },
    "/event/v1/participants/{participant_id}": {
      "get": {
        "operationId": "GetParticipant",
        "summary": "Get a participant",
        "description": "Returns information about a specific event participant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.Participant"
            }
          },
          "400": {
            "description": "Returned when the specified participant ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      },
      "patch": {
        "operationId": "EditParticipant",
        "summary": "Update a participant",
        "description": "Updates the details about a participant.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.EditParticipant"
            },
            "description": "An object that represents the properties of the participant to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds."
          },
          "400": {
            "description": "Returned when the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to edit the participant."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      }
    },
    "/event/v1/participants/{participant_id}/donations": {
      "get": {
        "operationId": "ListParticipantDonations",
        "summary": "List participant donations",
        "description": "Lists the donations for a participant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 10000.",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination. The default is 0.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipantDonation"
            }
          },
          "400": {
            "description": "Returned when the specified request does not contain a valid ID."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateParticipantDonation",
        "summary": "Create a participant donation",
        "description": "Creates a new donation for a participant.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateParticipantDonation"
            },
            "description": "An object that represents the participant donation to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new donation.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedParticipantDonation"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to modify the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      }
    },
    "/event/v1/participants/{participant_id}/feepayments": {
      "get": {
        "operationId": "ListParticipantFeePayments",
        "summary": "List participant fee payments",
        "description": "Lists the fee payments for a participant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 10000.",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination. The default is 0.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains a collection of participant fees.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipantFeePayment"
            }
          },
          "400": {
            "description": "Returned when the route does not contain a valid ID."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateParticipantFeePayment",
        "summary": "Create a participant fee payment",
        "description": "Creates a new fee payment for a participant.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateParticipantFeePayment"
            },
            "description": "An object that represents the participant fee payment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new fee payment.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedParticipantFeePayment"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to modify the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      }
    },
    "/event/v1/participants/{participant_id}/fees": {
      "get": {
        "operationId": "ListParticipantFees",
        "summary": "List participant fees",
        "description": "Lists the fees for a participant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 10000.",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination. The default is 0.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains a collection of participant fees.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipantFee"
            }
          },
          "400": {
            "description": "Returned when the request does not contain a valid ID."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateParticipantFee",
        "summary": "Create a participant fee",
        "description": "Creates a new fee for a participant.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateParticipantFee"
            },
            "description": "An object that represents the participant fee to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new participant fee.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedParticipantFee"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the participant fee."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      }
    },
    "/event/v1/participants/{participant_id}/participantoptions": {
      "get": {
        "operationId": "ListParticipantOptions",
        "summary": "List participant options",
        "description": "Lists the participant options for a participant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The system record ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipantOption"
            }
          },
          "400": {
            "description": "Returned when the specified request does not contain a valid ID."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      },
      "post": {
        "operationId": "CreateParticipantOption",
        "summary": "Create a participant option",
        "description": "Creates a new participant option for a participant.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "description": "The ID of the participant.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Participant ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EventApi.CreateParticipantOption"
            },
            "description": "An object that represents the participant option to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds. The response body contains the ID of the new participant option.",
            "schema": {
              "$ref": "#/definitions/EventApi.CreatedParticipantOption"
            }
          },
          "400": {
            "description": "Returned when the route does not contain a valid ID or the specified request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to modify the participant record."
          },
          "404": {
            "description": "Returned when the specified participant is not found."
          }
        }
      }
    },
    "/event/v1/participationlevels": {
      "get": {
        "operationId": "ListParticipationLevels",
        "summary": "List participation levels",
        "description": "Lists the participation levels.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/EventApi.ApiCollectionOfParticipationLevel"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view participant participation levels."
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues/participantoptionlistvalues": {
      "get": {
        "operationId": "GetParticipantOptionListDynamicValues",
        "summary": "Get participant option list dynamic values",
        "description": "List participant option list dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "description": "The event identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "event_participant_option_id",
            "in": "query",
            "description": "The event participant option identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicproperties/participantoptions": {
      "get": {
        "operationId": "GetParticipantOptionDynamicProperties",
        "summary": "Get participant option dynamic properties",
        "description": "List participant option dynamic properties.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "description": "The event identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "event_participant_option_id",
            "in": "query",
            "description": "The event participant option identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicProperties"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EventApi.AdministrativeArea": {
      "type": "object",
      "description": "Defines the data model used for an address' administrative area (ex: state in the US).",
      "x-ms-summary": "administrative area",
      "properties": {
        "id": {
          "type": "string",
          "description": "The record ID of the administrative area.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the administrative area.",
          "x-ms-summary": "name"
        },
        "short_description": {
          "type": "string",
          "description": "The short description of the administrative area.",
          "x-ms-summary": "short description"
        }
      }
    },
    "EventApi.ApiCollectionOfEventCategory": {
      "type": "object",
      "description": "Categories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.EventCategory"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfEventFee": {
      "type": "object",
      "description": "Fees",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.EventFee"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfEventListEntry": {
      "type": "object",
      "description": "Events",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.EventListEntry"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfEventParticipantOption": {
      "type": "object",
      "description": "Event participant options",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.EventParticipantOption"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipantDonation": {
      "type": "object",
      "description": "Donations",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantDonation"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipantFee": {
      "type": "object",
      "description": "Fees",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantFee"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipantFeePayment": {
      "type": "object",
      "description": "Fee payments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantFeePayment"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipantListEntry": {
      "type": "object",
      "description": "Participants",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantListEntry"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipantOption": {
      "type": "object",
      "description": "Participant options",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantOption"
          }
        }
      }
    },
    "EventApi.ApiCollectionOfParticipationLevel": {
      "type": "object",
      "description": "Participation levels",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipationLevel"
          }
        }
      }
    },
    "EventApi.Country": {
      "type": "object",
      "description": "Defines the data model used for an address' country.",
      "x-ms-summary": "country",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the country record.",
          "x-ms-summary": "ID"
        },
        "display_name": {
          "type": "string",
          "description": "The display name of the country.",
          "x-ms-summary": "display name"
        },
        "iso_alpha2_code": {
          "type": "string",
          "description": "The ISO 3166-1 alpha-2 code for the country.",
          "x-ms-summary": "ISO code"
        }
      }
    },
    "EventApi.CreatedEvent": {
      "type": "object",
      "description": "Created event",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created event.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedEventFee": {
      "type": "object",
      "description": "Created event fee",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created event fee.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedEventParticipantOption": {
      "type": "object",
      "description": "Created event participant option",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created event participant option.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedParticipant": {
      "type": "object",
      "description": "Created participant",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created participant.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedParticipantDonation": {
      "type": "object",
      "description": "Created participant donation",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created participant donation.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedParticipantFee": {
      "type": "object",
      "description": "Created participant fee",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created participant fee.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedParticipantFeePayment": {
      "type": "object",
      "description": "Created participant fee payment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created participant fee payment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreatedParticipantOption": {
      "type": "object",
      "description": "Created participant option",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created participant option.",
          "x-ms-summary": "ID"
        }
      }
    },
    "EventApi.CreateEvent": {
      "type": "object",
      "description": "Events are planned occasions that help organizations raise awareness for their missions, engage constituents, and encourage donations.",
      "required": [
        "name",
        "start_date"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event.",
          "x-ms-summary": "Event name"
        },
        "description": {
          "type": "string",
          "description": "The description of the event.",
          "x-ms-summary": "Description"
        },
        "category": {
          "type": "object",
          "description": "The event category",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The category name.",
              "x-ms-summary": "Category",
              "x-ms-dynamic-values": {
                "operationId": "ListEventCategories",
                "value-collection": "value",
                "value-path": "name",
                "value-title": "name"
              },
              "x-ms-dynamic-list": {
                "operationId": "ListEventCategories",
                "itemsPath": "value",
                "itemValuePath": "name",
                "itemTitlePath": "name"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the event (ex: '2020-09-18').",
          "x-ms-summary": "Start date"
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the event (ex: '07:30').",
          "x-ms-summary": "Start time"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the event (ex: '2020-09-18').",
          "x-ms-summary": "End date"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the event (ex: '07:30)'.",
          "x-ms-summary": "End time"
        },
        "lookup_id": {
          "type": "string",
          "description": "The lookup ID of the event.",
          "x-ms-summary": "Lookup ID",
          "x-ms-visibility": "advanced"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people that can attend the event.",
          "x-ms-summary": "Capacity",
          "x-ms-visibility": "advanced"
        },
        "goal": {
          "type": "number",
          "format": "double",
          "description": "The monetary goal of the event.",
          "x-ms-summary": "Goal",
          "x-ms-visibility": "advanced"
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the event.",
          "x-ms-summary": "Campaign ID",
          "x-ms-visibility": "advanced"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the event.",
          "x-ms-summary": "Fund ID",
          "x-ms-visibility": "advanced"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the event active?",
          "x-ms-summary": "Inactive?",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "EventApi.CreateEventFee": {
      "type": "object",
      "description": "Event fees are how much an organization charges for individuals or organizations to participate in or attend the event.",
      "required": [
        "name",
        "cost",
        "contribution_amount"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the fee.",
          "x-ms-summary": "Name"
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The amount of money associated with the fee.",
          "x-ms-summary": "Fee amount"
        },
        "contribution_amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the fee that's a donation above the costs of the event.",
          "x-ms-summary": "Contribution amount"
        }
      }
    },
    "EventApi.CreateEventParticipantOption": {
      "type": "object",
      "description": "Event participant options are fields that collect details about participants, such as t-shirt sizes, meal preferences, or seating requests. Set options and their values for an event and then add responses for each participant.",
      "required": [
        "name",
        "input_type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event participant option.",
          "x-ms-summary": "Name"
        },
        "input_type": {
          "type": "string",
          "description": "The types of values participants can use to provide responses.",
          "x-ms-summary": "Input type",
          "enum": [
            "Boolean",
            "String",
            "List"
          ]
        },
        "multi_select": {
          "type": "boolean",
          "description": "Allow more than one value for lists?",
          "x-ms-summary": "Allow multi-select?",
          "x-ms-visibility": "advanced"
        },
        "list_options": {
          "type": "array",
          "description": "The available options for the list.",
          "items": {
            "$ref": "#/definitions/EventApi.CreateParticipantOptionListOption"
          },
          "x-ms-visibility": "advanced"
        }
      }
    },
    "EventApi.CreateParticipant": {
      "type": "object",
      "description": "Participants are individuals or organizations who engage with the organization through an event. \r\nThey can include constituents who receive invitations or register for the event.",
      "required": [
        "constituent_id"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The constituent ID of the participant.",
          "x-ms-summary": "Constituent ID"
        },
        "host_id": {
          "type": "string",
          "description": "The ID of the host's participant record.",
          "x-ms-summary": "Host ID"
        },
        "rsvp_status": {
          "type": "string",
          "description": "The status of the participant's engagement with the event.",
          "x-ms-summary": "RSVP status",
          "enum": [
            "NoResponse",
            "Attending",
            "Declined",
            "Interested",
            "Canceled",
            "Waitlisted",
            "NotApplicable"
          ]
        },
        "attended": {
          "type": "boolean",
          "description": "Did the participant attend the event?",
          "x-ms-summary": "Attended?"
        },
        "invitation_status": {
          "type": "string",
          "description": "The status of the invitation to the participant.",
          "x-ms-summary": "Invitation status",
          "enum": [
            "NotApplicable",
            "NotInvited",
            "Invited"
          ]
        },
        "rsvp_date": {
          "type": "object",
          "description": "The date of the RSVP.",
          "x-ms-summary": "RSVP date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "invitation_date": {
          "type": "object",
          "description": "The date of the invitation.",
          "x-ms-summary": "Invitation date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "participation_level": {
          "type": "object",
          "description": "The participation level",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the participation level.",
              "x-ms-summary": "Participation level",
              "x-ms-dynamic-values": {
                "operationId": "ListParticipationLevels",
                "value-collection": "value",
                "value-path": "name",
                "value-title": "name"
              },
              "x-ms-dynamic-list": {
                "operationId": "ListParticipationLevels",
                "itemsPath": "value",
                "itemValuePath": "name",
                "itemTitlePath": "name"
              }
            }
          }
        },
        "summary_note": {
          "type": "string",
          "description": "Quick reference information pinned to the participant's record.",
          "x-ms-summary": "Summary note"
        }
      }
    },
    "EventApi.CreateParticipantDonation": {
      "type": "object",
      "description": "Participant donations are donations made toward the event.",
      "required": [
        "gift_id"
      ],
      "properties": {
        "gift_id": {
          "type": "string",
          "description": "The systetm record ID of the gift to which the participant donation is linked.",
          "x-ms-summary": "Gift ID"
        }
      }
    },
    "EventApi.CreateParticipantFee": {
      "type": "object",
      "description": "Participant fees are how much an individual or organization pays to participate in or attend the event.",
      "required": [
        "event_id",
        "event_fee_id",
        "quantity",
        "fee_amount",
        "contribution_amount"
      ],
      "properties": {
        "event_id": {
          "type": "string",
          "description": "The system record ID of the event.",
          "x-ms-summary": "Event ID"
        },
        "event_fee_id": {
          "type": "string",
          "description": "The event fee.",
          "x-ms-summary": "Fee",
          "x-ms-dynamic-values": {
            "operationId": "ListEventFees",
            "value-collection": "value",
            "value-path": "id",
            "value-title": "name",
            "parameters": {
              "event_id": {
                "parameter": "event_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListEventFees",
            "itemsPath": "value",
            "itemValuePath": "id",
            "itemTitlePath": "name",
            "parameters": {
              "event_id": {
                "parameterReference": "body/event_id"
              }
            }
          }
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity purchased.",
          "x-ms-summary": "Quantity"
        },
        "fee_amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of money associated with the fee.",
          "x-ms-summary": "Fee amount"
        },
        "contribution_amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the fee that's a donation above the costs of the event. This is the amount that typically appears on receipts.",
          "x-ms-summary": "Contribution amount"
        },
        "date": {
          "type": "object",
          "description": "The date of the participant fee.",
          "x-ms-summary": "Date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        }
      }
    },
    "EventApi.CreateParticipantFeePayment": {
      "type": "object",
      "description": "Participant fee payments are payments toward the participant's fees.",
      "required": [
        "gift_id",
        "applied_amount"
      ],
      "properties": {
        "gift_id": {
          "type": "string",
          "description": "The systetm record ID of the gift to which the participant fee is linked.",
          "x-ms-summary": "Gift ID"
        },
        "applied_amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the payment that applies toward the participant fees.",
          "x-ms-summary": "Applied amount"
        }
      }
    },
    "EventApi.CreateParticipantOption": {
      "type": "object",
      "description": "Participant options are the responses to an event participant option.",
      "required": [
        "event_id",
        "event_participant_option_id",
        "option_value"
      ],
      "properties": {
        "event_id": {
          "type": "string",
          "description": "The system record ID of the event.",
          "x-ms-summary": "Event ID"
        },
        "event_participant_option_id": {
          "type": "string",
          "description": "The event participant option.",
          "x-ms-summary": "Option",
          "x-ms-dynamic-values": {
            "operationId": "ListEventParticipantOptions",
            "value-collection": "value",
            "value-path": "id",
            "value-title": "name",
            "parameters": {
              "event_id": {
                "parameter": "event_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListEventParticipantOptions",
            "itemsPath": "value",
            "itemValuePath": "id",
            "itemTitlePath": "name",
            "parameters": {
              "event_id": {
                "parameterReference": "body/event_id"
              }
            }
          }
        },
        "option_value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetParticipantOptionDynamicProperties",
            "parameters": {
              "event_id": {
                "parameter": "event_id"
              },
              "event_participant_option_id": {
                "parameter": "event_participant_option_id"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetParticipantOptionDynamicProperties",
            "parameters": {
              "event_id": {
                "parameterReference": "body/event_id"
              },
              "event_participant_option_id": {
                "parameterReference": "body/event_participant_option_id"
              }
            },
            "itemValuePath": "items"
          }
        }
      }
    },
    "EventApi.CreateParticipantOptionListOption": {
      "type": "object",
      "description": "List options for event participant options are the values participants can select when they provide responses.",
      "x-ms-summary": "List options",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the list option.",
          "x-ms-summary": "name"
        },
        "sequence": {
          "type": "integer",
          "format": "int32",
          "description": "The 0-based sequence used for ordering.",
          "x-ms-summary": "sequence"
        }
      }
    },
    "EventApi.EditEvent": {
      "type": "object",
      "description": "Events are planned occasions that help organizations raise awareness for their missions, engage constituents, and encourage donations.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event.",
          "x-ms-summary": "Event name"
        },
        "description": {
          "type": "string",
          "description": "The description of the event.",
          "x-ms-summary": "Description"
        },
        "category": {
          "type": "object",
          "description": "The event category",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The category name.",
              "x-ms-summary": "Category",
              "x-ms-dynamic-values": {
                "operationId": "ListEventCategories",
                "value-collection": "value",
                "value-path": "name",
                "value-title": "name"
              },
              "x-ms-dynamic-list": {
                "operationId": "ListEventCategories",
                "itemsPath": "value",
                "itemValuePath": "name",
                "itemTitlePath": "name"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the event (ex: '2020-09-18').",
          "x-ms-summary": "Start date"
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the event (ex: '07:30').",
          "x-ms-summary": "Start time"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the event (ex: '2020-09-18').",
          "x-ms-summary": "End date"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the event (ex: '07:30').",
          "x-ms-summary": "End time"
        },
        "lookup_id": {
          "type": "string",
          "description": "The lookup ID of the event.",
          "x-ms-summary": "Lookup ID",
          "x-ms-visibility": "advanced"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people that can attend the event.",
          "x-ms-summary": "Capacity",
          "x-ms-visibility": "advanced"
        },
        "goal": {
          "type": "number",
          "format": "double",
          "description": "The monetary goal of the event.",
          "x-ms-summary": "Goal",
          "x-ms-visibility": "advanced"
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the event.",
          "x-ms-summary": "Campaign ID",
          "x-ms-visibility": "advanced"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the event.",
          "x-ms-summary": "Fund ID",
          "x-ms-visibility": "advanced"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the event active?",
          "x-ms-summary": "Inactive?",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "EventApi.EditParticipant": {
      "type": "object",
      "description": "Participants are individuals or organizations who engage with the organization through an event. \r\nThey can include constituents who receive invitations or register for the event.",
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The constituent ID of the participant.",
          "x-ms-summary": "Constituent ID"
        },
        "host_id": {
          "type": "string",
          "description": "The ID of the host's participant record.",
          "x-ms-summary": "Host ID"
        },
        "rsvp_status": {
          "type": "string",
          "description": "The status of the participant's engagement with the event.",
          "x-ms-summary": "RSVP status",
          "enum": [
            "NoResponse",
            "Attending",
            "Declined",
            "Interested",
            "Canceled",
            "Waitlisted",
            "NotApplicable"
          ]
        },
        "attended": {
          "type": "boolean",
          "description": "Did the participant attend the event?",
          "x-ms-summary": "Attended?"
        },
        "invitation_status": {
          "type": "string",
          "description": "The status of the invitation to the participant.",
          "x-ms-summary": "Invitation status",
          "enum": [
            "NotApplicable",
            "NotInvited",
            "Invited"
          ]
        },
        "rsvp_date": {
          "type": "object",
          "description": "The date of the RSVP.",
          "x-ms-summary": "RSVP date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "invitation_date": {
          "type": "object",
          "description": "The date of the invitation.",
          "x-ms-summary": "Invitation date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "participation_level": {
          "type": "object",
          "description": "The participation level",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the participation level.",
              "x-ms-summary": "Participation level",
              "x-ms-dynamic-values": {
                "operationId": "ListParticipationLevels",
                "value-collection": "value",
                "value-path": "name",
                "value-title": "name"
              },
              "x-ms-dynamic-list": {
                "operationId": "ListParticipationLevels",
                "itemsPath": "value",
                "itemValuePath": "name",
                "itemTitlePath": "name"
              }
            }
          }
        },
        "summary_note": {
          "type": "string",
          "description": "Quick reference information pinned to the participant's record.",
          "x-ms-summary": "Summary note"
        }
      }
    },
    "EventApi.EditParticipantOption": {
      "type": "object",
      "description": "A participant option",
      "required": [
        "option_value"
      ],
      "properties": {
        "option_value": {
          "type": "string",
          "description": "The participant's response to the option.",
          "x-ms-summary": "Value"
        }
      }
    },
    "EventApi.Event": {
      "type": "object",
      "description": "Event",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the event.  This is not the same as the user-definable event identifier, which is stored in the lookup_id.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the event.",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The description of the event.",
          "x-ms-summary": "Description"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the event.",
          "x-ms-summary": "Start date"
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the event.",
          "x-ms-summary": "Start time"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the event.",
          "x-ms-summary": "End date"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the event.",
          "x-ms-summary": "End time"
        },
        "category": {
          "$ref": "#/definitions/EventApi.EventCategory"
        },
        "lookup_id": {
          "type": "string",
          "description": "The lookup ID of the event.",
          "x-ms-summary": "Lookup ID"
        },
        "location": {
          "$ref": "#/definitions/EventApi.Location"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people that can attend the event.",
          "x-ms-summary": "Capacity"
        },
        "goal": {
          "type": "number",
          "format": "double",
          "description": "The monetary goal of the event.",
          "x-ms-summary": "Goal"
        },
        "campaign_id": {
          "type": "string",
          "description": "The system record ID of the campaign associated with the event.",
          "x-ms-summary": "Campaign ID"
        },
        "fund_id": {
          "type": "string",
          "description": "The system record ID of the fund associated with the event.",
          "x-ms-summary": "Fund ID"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the event inactive?",
          "x-ms-summary": "Inactive?"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the event was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the event was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "EventApi.EventCategory": {
      "type": "object",
      "description": "Event category is the custom categorization for the event.",
      "x-ms-summary": "Category",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the event category.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the event category.",
          "x-ms-summary": "name"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is this category inactive?",
          "x-ms-summary": "inactive?"
        }
      }
    },
    "EventApi.EventFee": {
      "type": "object",
      "description": "Event fees are how much an organization charges for individuals or organizations to participate in or attend the event.",
      "x-ms-summary": "Event fee",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the event fee.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the event fee.",
          "x-ms-summary": "name"
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The fee's cost.",
          "x-ms-summary": "amount"
        },
        "contribution_amount": {
          "type": "number",
          "format": "double",
          "description": "The tax deductible amount for this fee.",
          "x-ms-summary": "contribution amount"
        },
        "number_sold": {
          "type": "integer",
          "format": "int32",
          "description": "The number of fees sold.",
          "x-ms-summary": "number sold"
        }
      }
    },
    "EventApi.EventListEntry": {
      "type": "object",
      "description": "Event",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the event.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the event.",
          "x-ms-summary": "Name"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the event.",
          "x-ms-summary": "Start date"
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the event.",
          "x-ms-summary": "Start time"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the event.",
          "x-ms-summary": "End date"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the event.",
          "x-ms-summary": "End time"
        },
        "category": {
          "$ref": "#/definitions/EventApi.EventCategory"
        },
        "lookup_id": {
          "type": "string",
          "description": "The lookup ID of the event.",
          "x-ms-summary": "Lookup ID"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people that can attend the event.",
          "x-ms-summary": "Capacity"
        },
        "attending_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of event participants who plan to attend.",
          "x-ms-summary": "Attending"
        },
        "attended_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of event attendees.",
          "x-ms-summary": "Attended"
        },
        "invited_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of event invitees.",
          "x-ms-summary": "Invited"
        },
        "revenue": {
          "type": "number",
          "format": "double",
          "description": "The realized revenue of the event.",
          "x-ms-summary": "Revenue"
        },
        "goal": {
          "type": "number",
          "format": "double",
          "description": "The monetary goal of the event.",
          "x-ms-summary": "Goal"
        },
        "percent_of_goal": {
          "type": "integer",
          "format": "int32",
          "description": "The realized revenue as a percentage of the goal revenue.",
          "x-ms-summary": "Percent of goal"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the event inactive?",
          "x-ms-summary": "Inactive?"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the event was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the event was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "EventApi.EventParticipantOption": {
      "type": "object",
      "description": "Event participant options are fields that collects details about participants, such as t-shirt sizes, meal preferences, or seating requests. \r\nSet options and their values for an event and then add responses for each participant.",
      "x-ms-summary": "Event participant option",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the event participant option.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the event participant option.",
          "x-ms-summary": "name"
        },
        "input_type": {
          "type": "string",
          "description": "The type of the event participant option.",
          "x-ms-summary": "input type",
          "enum": [
            "Boolean",
            "String",
            "List"
          ]
        },
        "multi_select": {
          "type": "boolean",
          "description": "Allow more than one value for lists?",
          "x-ms-summary": "allow multi-select?"
        },
        "list_options": {
          "type": "array",
          "description": "The available list options.",
          "items": {
            "$ref": "#/definitions/EventApi.EventParticipantOptionListOption"
          }
        },
        "added_by_user": {
          "type": "string",
          "description": "The ID of the user that added the option.",
          "x-ms-summary": "added by user"
        },
        "updated_by_user": {
          "type": "string",
          "description": "The ID of the user who modified the option.",
          "x-ms-summary": "modified by user"
        },
        "added_by_service": {
          "type": "string",
          "description": "The name of the service that added this option.",
          "x-ms-summary": "added by service"
        },
        "updated_by_service": {
          "type": "string",
          "description": "The name of the service that modified this option.",
          "x-ms-summary": "modified by service"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the option was created.",
          "x-ms-summary": "date added"
        },
        "date_updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the option was last modified.",
          "x-ms-summary": "date modified"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version number of the option.",
          "x-ms-summary": "version"
        }
      }
    },
    "EventApi.EventParticipantOptionListOption": {
      "type": "object",
      "description": "A event participant option list option",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the list option",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the list option",
          "x-ms-summary": "name"
        },
        "sequence": {
          "format": "int32",
          "type": "integer",
          "description": "The sequence used to order the list options",
          "x-ms-summary": "sequence"
        }
      }
    },
    "EventApi.Locality": {
      "type": "object",
      "description": "Defines the data model used for an address' locality.",
      "x-ms-summary": "locality",
      "properties": {
        "id": {
          "type": "string",
          "description": "The record ID of the locality record.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the locality.",
          "x-ms-summary": "name"
        }
      }
    },
    "EventApi.Location": {
      "type": "object",
      "description": "Defines the data model used for a location.",
      "x-ms-summary": "Location",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the location.",
          "x-ms-summary": "name"
        },
        "address_lines": {
          "type": "string",
          "description": "The location's address lines.",
          "x-ms-summary": "address lines"
        },
        "postal_code": {
          "type": "string",
          "description": "The location's postal code.",
          "x-ms-summary": "postal code"
        },
        "locality": {
          "$ref": "#/definitions/EventApi.Locality"
        },
        "administrative_area": {
          "$ref": "#/definitions/EventApi.AdministrativeArea"
        },
        "sub_administrative_area": {
          "$ref": "#/definitions/EventApi.SubAdministrativeArea"
        },
        "country": {
          "$ref": "#/definitions/EventApi.Country"
        },
        "formatted_address": {
          "type": "string",
          "description": "The location's formatted address",
          "x-ms-summary": "formatted address"
        }
      }
    },
    "EventApi.Membership": {
      "type": "object",
      "description": "Membership information for the participant.",
      "properties": {
        "category": {
          "$ref": "#/definitions/EventApi.MembershipCategory"
        }
      }
    },
    "EventApi.MembershipCategory": {
      "type": "object",
      "description": "The individual's membership category.",
      "x-ms-summary": "Membership category",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the membership category.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the membership category.",
          "x-ms-summary": "name"
        }
      }
    },
    "EventApi.Participant": {
      "type": "object",
      "description": "Participant",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participant.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The constituent ID of the participant.",
          "x-ms-summary": "Constituent ID"
        },
        "event_id": {
          "type": "string",
          "description": "The system record ID of the event being attended.",
          "x-ms-summary": "Event ID"
        },
        "host_id": {
          "type": "string",
          "description": "The ID of the host's participant record.",
          "x-ms-summary": "Host ID"
        },
        "rsvp_status": {
          "type": "string",
          "description": "The status of the participant's engagement with the event.",
          "x-ms-summary": "RSVP status",
          "enum": [
            "NoResponse",
            "Attending",
            "Declined",
            "Interested",
            "Canceled",
            "Waitlisted",
            "NotApplicable"
          ]
        },
        "attended": {
          "type": "boolean",
          "description": "Did the participant attend the event?",
          "x-ms-summary": "Attended?"
        },
        "invitation_status": {
          "type": "string",
          "description": "The status of the invitation to the participant.",
          "x-ms-summary": "Invitation status",
          "enum": [
            "NotApplicable",
            "NotInvited",
            "Invited"
          ]
        },
        "rsvp_date": {
          "type": "object",
          "description": "The date of the RSVP.",
          "x-ms-summary": "RSVP date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "invitation_date": {
          "type": "object",
          "description": "The date of the invitation.",
          "x-ms-summary": "Invitation date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "summary_note": {
          "type": "string",
          "description": "Quick reference information pinned to the participant's record.",
          "x-ms-summary": "Summary note"
        },
        "participation_level": {
          "$ref": "#/definitions/EventApi.ParticipationLevel"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "EventApi.ParticipantDonation": {
      "type": "object",
      "description": "Defines a data model for a participant donation",
      "x-ms-summary": "Participant donation",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participant donation.",
          "x-ms-summary": "ID"
        },
        "gift_id": {
          "type": "string",
          "description": "The system record ID of the gift to which the participant donation is linked.",
          "x-ms-summary": "gift ID"
        }
      }
    },
    "EventApi.ParticipantFee": {
      "type": "object",
      "description": "Defines a data model for a participant fee",
      "x-ms-summary": "Participant fee",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the participant fee.",
          "x-ms-summary": "ID"
        },
        "participant_id": {
          "type": "string",
          "description": "The ID of the record that the participant fee is linked to.",
          "x-ms-summary": "participant ID"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity purchased.",
          "x-ms-summary": "quantity"
        },
        "fee_amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the participant fee.",
          "x-ms-summary": "fee amount"
        },
        "tax_receiptable_amount": {
          "type": "number",
          "format": "double",
          "description": "The tax deductible amount for this fee.",
          "x-ms-summary": "contribution amount"
        },
        "date": {
          "type": "object",
          "description": "The date of the participant fee.",
          "x-ms-summary": "Date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            }
          }
        },
        "event_fee": {
          "$ref": "#/definitions/EventApi.EventFee"
        }
      }
    },
    "EventApi.ParticipantFeePayment": {
      "type": "object",
      "description": "Defines a data model for a participant fee payment",
      "x-ms-summary": "Participant fee payment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participant fee payment.",
          "x-ms-summary": "ID"
        },
        "participant_id": {
          "type": "string",
          "description": "The system record ID of the participant to which the participant fee payment is linked.",
          "x-ms-summary": "participant ID"
        },
        "gift_id": {
          "type": "string",
          "description": "The system record ID of the gift to which the participant fee payment is linked.",
          "x-ms-summary": "gift ID"
        },
        "applied_amount": {
          "type": "number",
          "format": "double",
          "description": "The applied amount of the participant fee payment.",
          "x-ms-summary": "applied amount"
        }
      }
    },
    "EventApi.ParticipantListEntry": {
      "type": "object",
      "description": "Participant",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participant.",
          "x-ms-summary": "ID"
        },
        "contact_id": {
          "type": "string",
          "description": "The ID of the contact attending the event.",
          "x-ms-summary": "Contact ID"
        },
        "rsvp_status": {
          "type": "string",
          "description": "The status of the participant's engagement with the event.",
          "x-ms-summary": "RSVP status",
          "enum": [
            "NoResponse",
            "Attending",
            "Declined",
            "Interested",
            "Canceled",
            "Waitlisted",
            "NotApplicable"
          ]
        },
        "attended": {
          "type": "boolean",
          "description": "Did the participant attend the event?",
          "x-ms-summary": "Attended?"
        },
        "invitation_status": {
          "type": "string",
          "description": "The status of the invitation to the participant.",
          "x-ms-summary": "Invitation status",
          "enum": [
            "NotApplicable",
            "NotInvited",
            "Invited"
          ]
        },
        "rsvp_date": {
          "type": "object",
          "description": "The date of the RSVP.",
          "x-ms-summary": "RSVP date",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "participation_level": {
          "$ref": "#/definitions/EventApi.ParticipationLevel"
        },
        "title": {
          "type": "string",
          "description": "The participant's title.",
          "x-ms-summary": "Title"
        },
        "first_name": {
          "type": "string",
          "description": "The participant's first name.",
          "x-ms-summary": "First name"
        },
        "last_name": {
          "type": "string",
          "description": "The participant's last name.",
          "x-ms-summary": "Last name"
        },
        "name": {
          "type": "string",
          "description": "The participant's full name.",
          "x-ms-summary": "Name"
        },
        "preferred_name": {
          "type": "string",
          "description": "The participant's preferred name.",
          "x-ms-summary": "Preferred name"
        },
        "suffix": {
          "type": "string",
          "description": "The participant's suffix.",
          "x-ms-summary": "Suffix"
        },
        "lookup_id": {
          "type": "string",
          "description": "The LookupId of the participant.",
          "x-ms-summary": "Lookup ID"
        },
        "email": {
          "type": "string",
          "description": "The participant's email address.",
          "x-ms-summary": "Email"
        },
        "do_not_email": {
          "type": "boolean",
          "description": "Can the participant be contacted at this email address?",
          "x-ms-summary": "Do not email?"
        },
        "phone": {
          "type": "string",
          "description": "The participant's phone number.",
          "x-ms-summary": "Phone"
        },
        "do_not_call": {
          "type": "boolean",
          "description": "Can the participant be contacted at this number?",
          "x-ms-summary": "Do not call?"
        },
        "middle_name": {
          "type": "string",
          "description": "The participant's middle name.",
          "x-ms-summary": "Middle name"
        },
        "former_name": {
          "type": "string",
          "description": "The participant's former name.",
          "x-ms-summary": "Former name"
        },
        "is_constituent": {
          "type": "boolean",
          "description": "Is the participant a constituent?",
          "x-ms-summary": "Is a constituent?"
        },
        "class_of": {
          "type": "string",
          "description": "The participant's graduating class.",
          "x-ms-summary": "Class of"
        },
        "total_registration_fees": {
          "type": "number",
          "format": "double",
          "description": "The sum of the participant's fee amounts.",
          "x-ms-summary": "Total registration fees"
        },
        "total_paid": {
          "type": "number",
          "format": "double",
          "description": "The sum of the participant's paid gifts with a type of Registration Fees.",
          "x-ms-summary": "Total paid"
        },
        "seat": {
          "type": "string",
          "description": "The seat assignment for the participant.",
          "x-ms-summary": "Seat"
        },
        "name_tag": {
          "type": "string",
          "description": "The name tag for the participant",
          "x-ms-summary": "Name tag"
        },
        "summary_note": {
          "type": "string",
          "description": "Quick reference information pinned to the participant's record.",
          "x-ms-summary": "Summary note"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant was last modified.",
          "x-ms-summary": "Date modified"
        },
        "host": {
          "type": "object",
          "description": "The participant's basic summary information.",
          "x-ms-summary": "Host",
          "properties": {
            "contact_id": {
              "type": "string",
              "description": "The ID of the contact attending the event.",
              "x-ms-summary": "contact ID"
            },
            "participant_id": {
              "type": "string",
              "description": "The ID of the participant.",
              "x-ms-summary": "participant ID"
            },
            "name": {
              "type": "string",
              "description": "The participant's full name.",
              "x-ms-summary": "name"
            }
          }
        },
        "guests": {
          "type": "array",
          "description": "The guests of the participant.",
          "items": {
            "$ref": "#/definitions/EventApi.ParticipantListParticipantSummary"
          }
        },
        "memberships": {
          "type": "array",
          "description": "The membership information for the participant.",
          "items": {
            "$ref": "#/definitions/EventApi.Membership"
          }
        }
      }
    },
    "EventApi.ParticipantListParticipantSummary": {
      "type": "object",
      "description": "The participant's basic summary information.",
      "properties": {
        "contact_id": {
          "type": "string",
          "description": "The ID of the contact attending the event.",
          "x-ms-summary": "contact ID"
        },
        "participant_id": {
          "type": "string",
          "description": "The ID of the participant.",
          "x-ms-summary": "participant ID"
        },
        "name": {
          "type": "string",
          "description": "The participant's full name.",
          "x-ms-summary": "name"
        }
      }
    },
    "EventApi.ParticipantOption": {
      "type": "object",
      "description": "The participant option associated with a given participant",
      "x-ms-summary": "Participant option",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participant option.",
          "x-ms-summary": "ID"
        },
        "participant_id": {
          "type": "string",
          "description": "The system record ID of the participant.",
          "x-ms-summary": "participant ID"
        },
        "event_id": {
          "type": "string",
          "description": "The system record ID of the event.",
          "x-ms-summary": "event ID"
        },
        "event_participant_option_id": {
          "type": "string",
          "description": "The system record ID of the event participant option.",
          "x-ms-summary": "event participant option ID"
        },
        "option_value": {
          "type": "string",
          "description": "The participant's response to the option.",
          "x-ms-summary": "value"
        },
        "added_by_user": {
          "type": "string",
          "description": "The ID of the user that added the participant option.",
          "x-ms-summary": "added by user"
        },
        "updated_by_user": {
          "type": "string",
          "description": "The ID of the user who modified the participant option.",
          "x-ms-summary": "modified by user"
        },
        "added_by_service": {
          "type": "string",
          "description": "The name of the service that added this participant option.",
          "x-ms-summary": "added by service"
        },
        "updated_by_service": {
          "type": "string",
          "description": "The name of the service that modified this participant option.",
          "x-ms-summary": "modified by service"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant option was created.",
          "x-ms-summary": "date added"
        },
        "date_updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the participant option was last modified.",
          "x-ms-summary": "date modified"
        }
      }
    },
    "EventApi.ParticipationLevel": {
      "type": "object",
      "description": "Participation levels are the level of involvement participants have in an event.",
      "x-ms-summary": "Participation level",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the participation level.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the participation level.",
          "x-ms-summary": "name"
        },
        "is_inactive": {
          "type": "boolean",
          "description": "Is the participation level inactive?",
          "x-ms-summary": "inactive?"
        }
      }
    },
    "EventApi.SubAdministrativeArea": {
      "type": "object",
      "description": "Defines the data model used for an address' sub-administrative area (ex: city in the US).",
      "x-ms-summary": "sub-administrative area",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the sub-administrative area.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the sub-administrative area.",
          "x-ms-summary": "name"
        }
      }
    },
    "PowerAutomateUIApi.DynamicValue": {
      "type": "object",
      "description": "A single dynamic value item",
      "properties": {
        "id": {
          "type": "string",
          "description": "The dynamic value item identifier."
        },
        "item": {
          "type": "string",
          "description": "The dynamic value item."
        }
      }
    },
    "PowerAutomateUIApi.DynamicValuesCollection": {
      "type": "object",
      "description": "A collection of objects for use with dynamic values.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items in the list."
        },
        "value": {
          "type": "array",
          "description": "The set of objects for use with dynamic values.",
          "items": {
            "$ref": "#/definitions/PowerAutomateUIApi.DynamicValue"
          }
        }
      }
    },
    "PowerAutomateUIApi.DynamicProperties": {
      "type": "object",
      "description": "Defines some (but potentially not all) dynamic OpenApi metadata properties needed for a custom field.",
      "properties": {
        "items": {
          "type": "object",
          "description": "The OpenApi properties for the custom field value.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The OpenApi type."
            },
            "format": {
              "type": "string",
              "description": "The OpenApi format."
            },
            "description": {
              "type": "string",
              "description": "The OpenApi description."
            }
          }
        }
      }
    }
  }
}
