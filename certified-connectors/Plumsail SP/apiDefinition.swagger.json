{
  "swagger": "2.0",
  "info": {
    "title": "Plumsail Actions",
    "description": "Plumsail Actions provides enhanced actions to manage SharePoint, including advanced cross-site operations. It covers all possible permissions, allows you to manage documents, list items and folders, create SharePoint sites, lists or libraries, and manipulate their properties. More information at https://plumsail.com/actions/.",
    "contact": {
      "name": "Support",
      "url": "https://plumsail.com",
      "email": "support@plumsail.com"
    },
    "version": "v1"
  },
  "host": "api.plumsail.com",
  "basePath":"/",
  "schemes":[
      "https"
  ],
  "consumes":[
      "application/json"
  ],
  "produces":[
      "application/json"
  ],
  "paths": {
    "/flow/v1/SharePointFlow/jobs/{jobName}/{jobId}": {
      "get": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsByJobNameByJobIdGet",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "GetSharePointResult",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/ChangePermissions": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "x-ms-summary": "Action type",
            "description": "The type of the operation"
          },
          {
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "ChangePermissionsSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetRoleTypes": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaGetRoleTypesPost",
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "GetRoleTypesSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/CreateModernSite": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
        "parameters": [
          {
            "in": "query",
            "name": "siteType",
            "required": true,
            "type": "string",
            "enum": [
              "TeamSite",
              "CommunicationSite",
              "TeamSiteWithoutGroup"
            ],
            "x-ms-summary": "Site Type",
            "description": "The type of the site for create"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "CreateModernSiteSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetItemsByCAMLQuery": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "parameters": [
          {
            "in": "query",
            "name": "camlQuery",
            "required": true,
            "type": "string",
            "x-ms-summary": "CAML Query",
            "description": "CAML query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "GetItemsByCAMLQueryResponseSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/InviteExternalUser": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
        "parameters": [
          {
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "InviteExternalUserSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/GetModernSiteDesigns": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaGetModernSiteDesignsPost",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "GetModernSiteDesignsSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/RegExpMatch": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaRegExpMatchPost",
        "parameters": [
          {
            "in": "query",
            "name": "pattern",
            "required": true,
            "type": "string",
            "x-ms-summary": "Pattern",
            "description": "pattern"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "RegexMatchSchema",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/ParseCsv": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaParseCsvPost",
        "parameters": [
          {
            "in": "query",
            "name": "headers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "ParseCsv",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/Schema/ParseCsvBody": {
      "post": {
        "tags": [
          "SharePointFlowSchemaConroller"
        ],
        "operationId": "FlowV1SharePointFlowSchemaParseCsvBodyPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "headers",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "x-ms-visibility": "internal",
        "summary": "ParseCsvBody",
        "description": "System"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSiteFromTemplate": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateSiteFromTemplatePost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSiteFromTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Subsite from Template",
        "description": "Create a new SharePoint site based on specific template"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ChangePermissions": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsChangePermissionsPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "required": true,
            "type": "string",
            "enum": [
              "Grant",
              "Remove",
              "RemoveAll",
              "RestoreInheritance"
            ],
            "x-ms-summary": "Action type",
            "description": "The type of the operation"
          },
          {
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "List",
              "Item",
              "Folder",
              "Document"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaChangePermissionsPost",
                "value-path": "items",
                "parameters": {
                  "actionType": {
                    "parameter": "actionType"
                  },
                  "target": {
                    "parameter": "target"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Change SharePoint permissions",
        "description": "Grant, remove and restore permissions for the site, the list, and the item"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ActivateFeature": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsActivateFeaturePost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureActivationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Activate SharePoint Feature",
        "description": "Activate a feature with specific ID"
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeactivateFeature": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsDeactivateFeaturePost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureActivationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Deactivate SharePoint Feature",
        "description": "Deactivate a feature with specific ID"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateListOrLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateListOrLibraryPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateListOrLibraryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint List or Library",
        "description": "Create list or library by template"
      }
    },
    "/flow/v1/SharePointFlow/jobs/SetDefaultSiteGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsSetDefaultSiteGroupPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDefaultSiteGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Set Default SharePoint Site Group",
        "description": "Configure default groups for a site with the help of Microsoft Flow. It is alternative of the <site URL>/_layouts/15/permsetup.aspx page in SharePoint UI."
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentFromLibraryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document from Library",
        "description": "Copies the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentFromLibraryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document from Library",
        "description": "Moves the document from the document library to the specified URL. You can copy the document to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveDocumentByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveDocumentByUrlPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Document by URL",
        "description": "Remove the document by a specific URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateDocumentSetPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Document Set",
        "description": "Creates a new document set in the document library by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyDocumentSetPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Document Set",
        "description": "Copies the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveDocumentSet": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveDocumentSetPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentSetInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Document Set",
        "description": "Moves the document set from the document library to the specified URL. You can copy the document sets to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateFolderByUrlPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderByUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder by URL",
        "description": "Creates a new folder in the document library by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateFolderInList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateFolderInListPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderInListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Folder in List",
        "description": "Creates a new folder in the document library or list using the specified path"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveFolderByUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveFolderByUrlPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveFolderByUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Folder by URL",
        "description": "Removes the folder from the document library or list by the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyFolderFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyFolderFromLibraryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Folder from Library",
        "description": "Copies the folder from the document library to the specified URL. You can copy the folder to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveFolderFromLibrary": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveFolderFromLibraryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FolderInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Folder from Library",
        "description": "Moves the folder from the document library to the specified URL. You can move the folder to another document library cross-site or to another folder"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckInDocument": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCheckInDocumentPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckInDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check In SharePoint Document",
        "description": "Check-in the document at the specified URL with the specified comment"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckOutDocument": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCheckOutDocumentPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckOutDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentInfoResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check Out SharePoint Document",
        "description": "Check-out the document at the specified URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateModernSite": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateModernSitePost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "siteType",
            "required": true,
            "type": "string",
            "enum": [
              "TeamSite",
              "CommunicationSite",
              "TeamSiteWithoutGroup"
            ],
            "x-ms-summary": "Site Type",
            "description": "The type of the site for create"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaCreateModernSitePost",
                "value-path": "items",
                "parameters": {
                  "siteType": {
                    "parameter": "siteType"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create Modern SharePoint Site",
        "description": "Creates a modern SharePoint Team or Communication site"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ApplySiteDesign": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsApplySiteDesignPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplySiteDesignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebUrlResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Apply SharePoint Site Design",
        "description": "Applies design to target SharePoint site"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CreateSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCreateSharePointGroupPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Create SharePoint Group",
        "description": "Creates the SharePoint group with a specified name"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveSharePointGroupPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Group",
        "description": "Removes the SharePoint group by a specified name"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointGroupProperties": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointGroupPropertiesPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSPGroupPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Group Properties",
        "description": "Updates SharePoint group properties like AutoAcceptRequestToJoinLeave, AllowMembersEditMembership or other options described in MSDN"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CheckSharePointGroupExists": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCheckSharePointGroupExistsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupExistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupExistResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Check if SharePoint Group exists",
        "description": "Checks whether a specific SharePoint group exists"
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddUserToSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsAddUserToSharePointGroupPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUserToSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add User to SharePoint Group",
        "description": "Adds a user to a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveUserFromSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveUserFromSharePointGroupPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveUserFromSPGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove User from SharePoint Group",
        "description": "Removes a user from a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointGroupMembers": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetSharePointGroupMembersPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUsersFromGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSPGroupMembersResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get Members of SharePoint Group",
        "description": "Gets members of a specific SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UserExistInSharePointGroup": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUserExistInSharePointGroupPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserExistsInGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserExistsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Is User Member of SharePoint Group",
        "description": "Checks if a user is a member of a specifed SharePoint group"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateSharePointSiteProperties": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUpdateSharePointSitePropertiesPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSitePropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Site Properties",
        "description": "Updates web properties like Title, Description or other string options described in at MSDN"
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeleteSharePointSite": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsDeleteSharePointSitePost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseSPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Delete SharePoint Site",
        "description": "Deletes the SharePoint site by a specific URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetSharePointSiteOptionValueAsString": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetSharePointSiteOptionValueAsStringPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSiteOptionValueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SPSiteOptionValueResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Site Option Value",
        "description": "Reads a value from SharePoint Site Options (Property Bag)"
      }
    },
    "/flow/v1/SharePointFlow/jobs/InviteExternalUserToSharePoint": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsInviteExternalUserToSharePointPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "Site",
              "Item",
              "Group"
            ],
            "x-ms-summary": "Target",
            "description": "The target of the operation"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "x-ms-dynamic-schema": {
                "operationId": "FlowV1SharePointFlowSchemaInviteExternalUserPost",
                "value-path": "items",
                "parameters": {
                  "target": {
                    "parameter": "target"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Invite External User to SharePoint",
        "description": "Invites external users with specific permission to an SharePoint site, an specific SharePoint group or an item in a SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyAttachmentsToUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyAttachmentsToUrlPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyAttachmentsToUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy SharePoint Item Attachments to URL",
        "description": "Copies attachments from the SharePoint list item to the library using the specified folder URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveAttachmentsToUrl": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveAttachmentsToUrlPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveAttachmentsToUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFileUrlsResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move SharePoint Item Attachments to URL",
        "description": "Moves attachments from the SharePoint list item to the library using the specified folder URL"
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddContentTypeToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsAddContentTypeToSharePointListPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddContentTypeToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add Content Type to SharePoint List",
        "description": "Adds the specified content type to a SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/CopyListItemToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsCopyListItemToSharePointListPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyListItemToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Copy List Item to SharePoint List",
        "description": "Copies the specified list item to another SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/MoveListItemToSharePointList": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsMoveListItemToSharePointListPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveListItemToListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListItemIdResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Move List Item to SharePoint List",
        "description": "Moves the specified list item to another SharePoint list"
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartListWorkflow": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsStartListWorkflowPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartListWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint List Workflow (2013)",
        "description": "Starts a SharePoint list level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows"
      }
    },
    "/flow/v1/SharePointFlow/jobs/StartSiteWorkflow": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsStartSiteWorkflowPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartSiteWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkflowGuidResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Start SharePoint Site Workflow (2013)",
        "description": "Starts a SharePoint site level workflow and pass input parameters, if they were specified. The action can run only 2013 workflows"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetItemsByCamlQuery": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetItemsByCamlQueryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetItemsByCAMLQuerySchemaResponseClass"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Items By CAML Query",
        "description": "Executes a CAML query on a list or on a document library and returns the collection of elements"
      }
    },
    "/flow/v1/SharePointFlow/jobs/GetVersionsHistory": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsGetVersionsHistoryPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetListItemVersionsHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VersionsHistoryResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Get SharePoint Item Versions History",
        "description": "Returns the changes history for the specific field from the SharePoint list item"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ProvisionPnPTemplate": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsProvisionPnPTemplatePost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisionPnPTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Provision PnP Template to SharePoint",
        "description": "Applies a PnP template to a SharePoint site"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ProvisionPnPTenantTemplate": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsProvisionPnPTenantTemplatePost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisionPnPTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Provision PnP Tenant Template to SharePoint",
        "description": "Applies a PnP tenant template to SharePoint"
      }
    },
    "/flow/v1/SharePointFlow/jobs/AddSiteNavigation": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsAddSiteNavigationPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddSiteNavigationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Add SharePoint Site Navigation Node",
        "description": "Adds a menu item to either the quicklaunch or top navigation"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RemoveSiteNavigation": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRemoveSiteNavigationPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSiteNavigationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Remove SharePoint Site Navigation Node",
        "description": "Removes a menu item from either the quicklaunch or top navigation"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UpdateListItem": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUpdateListItemPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateListItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Update SharePoint Item",
        "description": "Updates an item in a SharePoint list or library"
      }
    },
    "/flow/v1/SharePointFlow/jobs/DeclareDocumentAsRecord": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsDeclareDocumentAsRecordPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclareDocumentAsRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Declare SharePoint Document as Record",
        "description": "Declares Document in SharePoint Library As Record"
      }
    },
    "/flow/v1/SharePointFlow/jobs/UndeclareDocumentAsRecord": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsUndeclareDocumentAsRecordPost",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UndeclareDocumentAsRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Undeclare SharePoint Document as Record",
        "description": "Undeclares Document in SharePoint Library As Record"
      }
    },
    "/flow/v1/SharePointFlow/jobs/ParseCsv": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsParseCsvPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParseCsvFlowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ParseCsvFlowSchemaResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Parse CSV",
        "description": "It works like Parse JSON but for CSV file"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RegExpMatch": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRegExpMatchPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegExpMatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegExpMatchFlowSchemaResponseClass"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Regular Expression Match",
        "description": "Searches an input string for all occurrences of a regular expression and returns all the matches. We would recommend you to use Regex Hero to test your expressions. It supports the same syntax as actions"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RegExpReplace": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRegExpReplacePost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegExpReplaceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResultResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Regular Expression Replace",
        "description": "In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string. We would recommend you to use Regex Hero to test your expressions. It supports the same syntax as actions"
      }
    },
    "/flow/v1/SharePointFlow/jobs/RegExpTest": {
      "post": {
        "tags": [
          "SharePointFlow"
        ],
        "operationId": "FlowV1SharePointFlowJobsRegExpTestPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegExpTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BooleanResultResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Contains URL where the result of job execution will be available",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The request did not have the correct authorization"
          },
          "404": {
            "description": "Response not found error, please write an email to support@plumsail.com"
          },
          "500": {
            "description": "Internal server error, please write an email to support@plumsail.com"
          }
        },
        "summary": "Regular Expression Test",
        "description": "Indicates whether the regular expression specified in the Regex constructor finds a match in a specified input string. We would recommend you to use Regex Hero to test your expressions. It supports the same syntax as actions"
      }
    }
  },
  "definitions": {
    "AddContentTypeToListRequest": {
      "required": [
        "contentTypeName",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "contentTypeName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content Type Name",
          "description": "Name of the content type"
        },
        "makeItDefault": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Make It Default",
          "description": "Make the content type default for the list"
        }
      }
    },
    "AddSiteNavigationRequest": {
      "required": [
        "location",
        "spUrl",
        "title"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "location": {
          "enum": [
            "Top",
            "QuickLaunch"
          ],
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Location",
          "description": "The location of the node to add"
        },
        "title": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title of navigation node"
        },
        "parent": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Parent",
          "description": "It is the title of a parent navigation item. If there are multiple top-level items with the same title, we will pick only the first."
        },
        "url": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Url",
          "description": "Target URL. If the URL is empty, then the top-level navigation item will be created"
        },
        "prepend": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Prepend",
          "description": "Yes or No. The default value is No"
        }
      }
    },
    "AddUserToSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl",
        "userLogin"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of the user which will be added to the specific group. Also you can specify multiple items using semicolon ';' delimited"
        },
        "sendEmail": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Send Email",
          "description": "Disable email notification"
        }
      }
    },
    "ApplySiteDesignRequest": {
      "required": [
        "siteDesign",
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The full qualified URL (e.g. https://yourtenant.sharepoint.com/sites/team-site)"
        },
        "siteDesign": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Site Design",
          "description": "The name or identifier of the SharePoint site design"
        }
      }
    },
    "BaseSPRequest": {
      "required": [
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        }
      }
    },
    "BooleanResultResponse": {
      "type": "object",
      "properties": {
        "isSuccess": {
          "type": "boolean",
          "x-ms-summary": "IsSuccess"
        }
      }
    },
    "CheckInDocumentRequest": {
      "required": [
        "documentUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "documentUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to check in"
        },
        "comment": {
          "type": "string",
          "x-ms-summary": "Comment",
          "description": "The comment to accompany document check in"
        }
      }
    },
    "CheckOutDocumentRequest": {
      "required": [
        "documentUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "documentUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to check in"
        }
      }
    },
    "CopyAttachmentsToUrlRequest": {
      "required": [
        "destinationUrl",
        "itemId",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination Folder URL",
          "description": "The URL of the folder where the attachments will be copied"
        },
        "overwrite": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite",
          "description": "Overwrite if a file with the same name already exists"
        }
      }
    },
    "CopyDocumentRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document will be copied. You can use full URL as well as domain relative URL"
        }
      }
    },
    "CopyDocumentSetRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document set to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document set will be copied. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the document set will be renamed"
        }
      }
    },
    "CopyFolderRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the folder to be copied. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source folder will be copied. You can use full URL as well as domain relative URL"
        }
      }
    },
    "CopyListItemToListRequest": {
      "required": [
        "destinationListUrl",
        "itemId",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationListUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination List URL",
          "description": "The URL of the destination list. This list must contain same fields like in the source list"
        },
        "copyAttachments": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Copy Attachments",
          "description": "Copy the item with attached files or not"
        }
      }
    },
    "CreateDocumentSetRequest": {
      "required": [
        "documentSetName",
        "spUrl",
        "targetListUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "documentSetName": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "DocumentSet Name",
          "description": "The name of the document set"
        },
        "targetListUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Target List",
          "description": "The name or the URL of a library or a list where the document set will be created. You can use full URL as well as domain relative URL"
        },
        "contentType": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Content Type",
          "description": "Specify Content-Type by name or id"
        }
      }
    },
    "CreateFolderByUrlRequest": {
      "required": [
        "folderUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "folderUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Folder URL",
          "description": "The URL of the folder. If you specify full path, you can create several folders"
        }
      }
    },
    "CreateFolderInListRequest": {
      "required": [
        "folderPath",
        "spUrl",
        "targetListUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "targetListUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Target List",
          "description": "The name or the URL of a library or a list where the folder will be created. You can use full URL as well as domain relative URL"
        },
        "folderPath": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Folder Path",
          "description": "The path where the folder will be created. The action will create all folders included into the path"
        }
      }
    },
    "CreateListOrLibraryRequest": {
      "required": [
        "spUrl",
        "template",
        "title"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "title": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Title",
          "description": "Title of the list"
        },
        "template": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Template",
          "description": "Title of the template that will be used for this list"
        },
        "partialUrl": {
          "type": "string",
          "x-ms-summary": "Partial URL",
          "description": "Partial url of the list"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Description of the list"
        },
        "onQuickLaunch": {
          "type": "boolean",
          "x-ms-summary": "On Quick Launch",
          "description": "Display this list on the Quick Launch"
        }
      }
    },
    "CreateSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "groupDescription": {
          "type": "string",
          "x-ms-summary": "Group Description",
          "description": "The description of the group"
        },
        "userLogin": {
          "type": "string",
          "x-ms-summary": "Group Owner",
          "description": "The owner of the group, can be email or the user login"
        }
      }
    },
    "CreateSiteFromTemplateRequest": {
      "required": [
        "leafUrl",
        "spUrl",
        "template",
        "title"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "title": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Title",
          "description": "Title of new site"
        },
        "template": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Template",
          "description": "Title of the site template that will be used for the new site"
        },
        "leafUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Leaf URL",
          "description": "A string that represents the URL leaf name"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Description",
          "description": "Description of the web"
        },
        "lcid": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Lcid",
          "description": "LCID of the new web"
        },
        "inheritPermissions": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Inherit Permissions",
          "description": "Specifies whether the new site will inherit permissions from its parent site"
        },
        "inheritNavigation": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Inherit Navigation",
          "description": "Specifies whether the site inherits navigation"
        },
        "onTopNav": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "On Top Navigation",
          "description": "Display this site on the top link bar of the parent site. Default value is Yes"
        },
        "onQuickLaunch": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "On Quick Launch",
          "description": "Display this site on the Quick Launch of the parent site. Default value is No"
        }
      }
    },
    "DeclareDocumentAsRecordRequest": {
      "required": [
        "itemId",
        "listName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List Name",
          "description": "Title of the list or library"
        },
        "itemId": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID or URL",
          "description": "The item Id or Url of document"
        }
      }
    },
    "DocumentInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document URL"
        }
      }
    },
    "DocumentSetInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Document set ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Document set URL"
        }
      }
    },
    "FeatureActivationRequest": {
      "required": [
        "featureId",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature ID",
          "description": "Guid of the feature"
        },
        "force": {
          "type": "boolean",
          "x-ms-summary": "Force",
          "description": "true to force action of the Feature even if there are errors; otherwise, false"
        }
      }
    },
    "FolderInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Folder ID"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Folder URL"
        }
      }
    },
    "GetItemsByCAMLQueryRequest": {
      "required": [
        "camlQuery",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "folderUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Folder URL",
          "description": "The server relative URL of a list folder from which results will be returned"
        },
        "camlQuery": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "CAML Query",
          "description": "CAML query that will be run"
        }
      }
    },
    "GetItemsByCAMLQuerySchemaResponseClass": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "value-path": "response",
        "parameters": {
          "camlQuery": {
            "parameter": "camlQuery"
          }
        }
      },
      "x-ms-dynamic-properties": {
        "operationId": "FlowV1SharePointFlowSchemaGetItemsByCAMLQueryPost",
        "parameters": {
          "camlQuery": {
            "parameterReference": "request/camlQuery"
          }
        },
        "itemValuePath": "response"
      }
    },
    "GetListItemVersionsHistoryRequest": {
      "required": [
        "fieldName",
        "itemId",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "Item ID of the item for which you want to get the version history"
        },
        "fieldName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Field Name",
          "description": "Name of the field for which you want to get the version history"
        }
      }
    },
    "GetSPGroupMembersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointUserResponse"
          },
          "x-ms-summary": "Users"
        }
      }
    },
    "GetSiteOptionValueRequest": {
      "required": [
        "optionName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "optionName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Option Name",
          "description": "Name of the option"
        }
      }
    },
    "GetUsersFromGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        }
      }
    },
    "GroupExistRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        }
      }
    },
    "GroupExistResponse": {
      "type": "object",
      "properties": {
        "groupExists": {
          "type": "boolean",
          "x-ms-summary": "Group Exists"
        }
      }
    },
    "ListFileUrlsResponse": {
      "type": "object",
      "properties": {
        "fileUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "File URLs"
        }
      }
    },
    "ListItemIdResponse": {
      "type": "object",
      "properties": {
        "resultItemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Result Item ID"
        }
      }
    },
    "MoveAttachmentsToUrlRequest": {
      "required": [
        "destinationUrl",
        "itemId",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination Folder URL",
          "description": "The URL of the folder where the attachments will be moved"
        },
        "overwrite": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite",
          "description": "Overwrite if a file with the same name already exists"
        }
      }
    },
    "MoveDocumentRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document will be moved. You can use full URL as well as domain relative URL"
        }
      }
    },
    "MoveDocumentSetRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the document set to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source document set will be moved. You can use full URL as well as domain relative URL. If the URL ends with slash '/' the document sets will be placed in this folder without name changes. Otherwise the Document set will be renamed"
        }
      }
    },
    "MoveFolderRequest": {
      "required": [
        "destinationUrl",
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Source URL",
          "description": "The URL of the folder to be moved. You can use full URL as well as domain relative URL"
        },
        "destinationUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Destination URL",
          "description": "The URL where the source folder will be moved. You can use full URL as well as domain relative URL"
        }
      }
    },
    "MoveListItemToListRequest": {
      "required": [
        "destinationListUrl",
        "itemId",
        "listUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "The ID of the source item"
        },
        "destinationListUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Destination List URL",
          "description": "The URL of the destination list. This list must contain same fields like in the source list"
        },
        "copyAttachments": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Move Attachments",
          "description": "Move the item with attached files or not"
        }
      }
    },
    "ParseCsvFlowRequest": {
      "required": [
        "content",
        "headers"
      ],
      "type": "object",
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Content of CSV document",
          "description": "Content of CSV document"
        },
        "delimiter": {
          "enum": [
            "Comma",
            "Semicolon",
            "Tab",
            "Pipe"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Delimiter",
          "description": "Delimiter of columns (by default it is just comma)"
        },
        "locale": {
          "default": "en-US",
          "enum": [
            "aa-DJ",
            "aa-ER",
            "aa-ET",
            "af-NA",
            "af-ZA",
            "agq-CM",
            "ak-GH",
            "am-ET",
            "ar-001",
            "ar-AE",
            "ar-BH",
            "ar-DJ",
            "ar-DZ",
            "ar-EG",
            "ar-ER",
            "ar-IL",
            "ar-IQ",
            "ar-JO",
            "ar-KM",
            "ar-KW",
            "ar-LB",
            "ar-LY",
            "ar-MA",
            "ar-MR",
            "ar-OM",
            "ar-PS",
            "ar-QA",
            "ar-SA",
            "ar-SD",
            "ar-SO",
            "ar-SS",
            "ar-SY",
            "ar-TD",
            "ar-TN",
            "ar-YE",
            "arn-CL",
            "as-IN",
            "asa-TZ",
            "ast-ES",
            "az-Cyrl-AZ",
            "az-Latn-AZ",
            "ba-RU",
            "bas-CM",
            "be-BY",
            "bem-ZM",
            "bez-TZ",
            "bg-BG",
            "bm-ML",
            "bn-BD",
            "bn-IN",
            "bo-CN",
            "bo-IN",
            "br-FR",
            "brx-IN",
            "bs-Cyrl-BA",
            "bs-Latn-BA",
            "byn-ER",
            "ca-AD",
            "ca-ES",
            "ca-FR",
            "ca-IT",
            "ccp-BD",
            "ccp-IN",
            "ce-RU",
            "ceb-PH",
            "cgg-UG",
            "chr-US",
            "ckb-IQ",
            "ckb-IR",
            "co-FR",
            "cs-CZ",
            "cu-RU",
            "cy-GB",
            "da-DK",
            "da-GL",
            "dav-KE",
            "de-AT",
            "de-BE",
            "de-CH",
            "de-DE",
            "de-IT",
            "de-LI",
            "de-LU",
            "dje-NE",
            "dsb-DE",
            "dua-CM",
            "dv-MV",
            "dyo-SN",
            "dz-BT",
            "ebu-KE",
            "ee-GH",
            "ee-TG",
            "el-CY",
            "el-GR",
            "en-001",
            "en-150",
            "en-AE",
            "en-AG",
            "en-AI",
            "en-AS",
            "en-AT",
            "en-AU",
            "en-BB",
            "en-BE",
            "en-BI",
            "en-BM",
            "en-BS",
            "en-BW",
            "en-BZ",
            "en-CA",
            "en-CC",
            "en-CH",
            "en-CK",
            "en-CM",
            "en-CX",
            "en-CY",
            "en-DE",
            "en-DK",
            "en-DM",
            "en-ER",
            "en-FI",
            "en-FJ",
            "en-FK",
            "en-FM",
            "en-GB",
            "en-GD",
            "en-GG",
            "en-GH",
            "en-GI",
            "en-GM",
            "en-GU",
            "en-GY",
            "en-HK",
            "en-IE",
            "en-IL",
            "en-IM",
            "en-IN",
            "en-IO",
            "en-JE",
            "en-JM",
            "en-KE",
            "en-KI",
            "en-KN",
            "en-KY",
            "en-LC",
            "en-LR",
            "en-LS",
            "en-MG",
            "en-MH",
            "en-MO",
            "en-MP",
            "en-MS",
            "en-MT",
            "en-MU",
            "en-MW",
            "en-MY",
            "en-NA",
            "en-NF",
            "en-NG",
            "en-NL",
            "en-NR",
            "en-NU",
            "en-NZ",
            "en-PG",
            "en-PH",
            "en-PK",
            "en-PN",
            "en-PR",
            "en-PW",
            "en-RW",
            "en-SB",
            "en-SC",
            "en-SD",
            "en-SE",
            "en-SG",
            "en-SH",
            "en-SI",
            "en-SL",
            "en-SS",
            "en-SX",
            "en-SZ",
            "en-TC",
            "en-TK",
            "en-TO",
            "en-TT",
            "en-TV",
            "en-TZ",
            "en-UG",
            "en-UM",
            "en-US",
            "en-US-POSIX",
            "en-VC",
            "en-VG",
            "en-VI",
            "en-VU",
            "en-WS",
            "en-ZA",
            "en-ZM",
            "en-ZW",
            "eo-001",
            "es-419",
            "es-AR",
            "es-BO",
            "es-BR",
            "es-BZ",
            "es-CL",
            "es-CO",
            "es-CR",
            "es-CU",
            "es-DO",
            "es-EC",
            "es-ES",
            "es-GQ",
            "es-GT",
            "es-HN",
            "es-MX",
            "es-NI",
            "es-PA",
            "es-PE",
            "es-PH",
            "es-PR",
            "es-PY",
            "es-SV",
            "es-US",
            "es-UY",
            "es-VE",
            "et-EE",
            "eu-ES",
            "ewo-CM",
            "fa-AF",
            "fa-IR",
            "ff-Latn-BF",
            "ff-Latn-CM",
            "ff-Latn-GH",
            "ff-Latn-GM",
            "ff-Latn-GN",
            "ff-Latn-GW",
            "ff-Latn-LR",
            "ff-Latn-MR",
            "ff-Latn-NE",
            "ff-Latn-NG",
            "ff-Latn-SL",
            "ff-Latn-SN",
            "fi-FI",
            "fil-PH",
            "fo-DK",
            "fo-FO",
            "fr-BE",
            "fr-BF",
            "fr-BI",
            "fr-BJ",
            "fr-BL",
            "fr-CA",
            "fr-CD",
            "fr-CF",
            "fr-CG",
            "fr-CH",
            "fr-CI",
            "fr-CM",
            "fr-DJ",
            "fr-DZ",
            "fr-FR",
            "fr-GA",
            "fr-GF",
            "fr-GN",
            "fr-GP",
            "fr-GQ",
            "fr-HT",
            "fr-KM",
            "fr-LU",
            "fr-MA",
            "fr-MC",
            "fr-MF",
            "fr-MG",
            "fr-ML",
            "fr-MQ",
            "fr-MR",
            "fr-MU",
            "fr-NC",
            "fr-NE",
            "fr-PF",
            "fr-PM",
            "fr-RE",
            "fr-RW",
            "fr-SC",
            "fr-SN",
            "fr-SY",
            "fr-TD",
            "fr-TG",
            "fr-TN",
            "fr-VU",
            "fr-WF",
            "fr-YT",
            "fur-IT",
            "fy-NL",
            "ga-IE",
            "gd-GB",
            "gl-ES",
            "gn-PY",
            "gsw-CH",
            "gsw-FR",
            "gsw-LI",
            "gu-IN",
            "guz-KE",
            "gv-IM",
            "ha-GH",
            "ha-NE",
            "ha-NG",
            "haw-US",
            "he-IL",
            "hi-IN",
            "hr-BA",
            "hr-HR",
            "hsb-DE",
            "hu-HU",
            "hy-AM",
            "ia-001",
            "id-ID",
            "ig-NG",
            "ii-CN",
            "is-IS",
            "it-CH",
            "it-IT",
            "it-SM",
            "it-VA",
            "iu-CA",
            "iu-Latn-CA",
            "ja-JP",
            "jgo-CM",
            "jmc-TZ",
            "jv-ID",
            "ka-GE",
            "kab-DZ",
            "kam-KE",
            "kde-TZ",
            "kea-CV",
            "khq-ML",
            "ki-KE",
            "kk-KZ",
            "kkj-CM",
            "kl-GL",
            "kln-KE",
            "km-KH",
            "kn-IN",
            "ko-KP",
            "ko-KR",
            "kok-IN",
            "ks-IN",
            "ksb-TZ",
            "ksf-CM",
            "ksh-DE",
            "kw-GB",
            "ky-KG",
            "lag-TZ",
            "lb-LU",
            "lg-UG",
            "lkt-US",
            "ln-AO",
            "ln-CD",
            "ln-CF",
            "ln-CG",
            "lo-LA",
            "lrc-IQ",
            "lrc-IR",
            "lt-LT",
            "lu-CD",
            "luo-KE",
            "luy-KE",
            "lv-LV",
            "mas-KE",
            "mas-TZ",
            "mer-KE",
            "mfe-MU",
            "mg-MG",
            "mgh-MZ",
            "mgo-CM",
            "mi-NZ",
            "mk-MK",
            "ml-IN",
            "mn-MN",
            "mn-Mong-CN",
            "mn-Mong-MN",
            "moh-CA",
            "mr-IN",
            "ms-BN",
            "ms-MY",
            "ms-SG",
            "mt-MT",
            "mua-CM",
            "my-MM",
            "mzn-IR",
            "naq-NA",
            "nb-NO",
            "nb-SJ",
            "nd-ZW",
            "nds-DE",
            "nds-NL",
            "ne-IN",
            "ne-NP",
            "nl-AW",
            "nl-BE",
            "nl-BQ",
            "nl-CW",
            "nl-NL",
            "nl-SR",
            "nl-SX",
            "nmg-CM",
            "nn-NO",
            "nnh-CM",
            "nqo-GN",
            "nr-ZA",
            "nso-ZA",
            "nus-SS",
            "nyn-UG",
            "oc-FR",
            "om-ET",
            "om-KE",
            "or-IN",
            "os-GE",
            "os-RU",
            "pa-Arab-PK",
            "pa-Guru-IN",
            "pl-PL",
            "prg-001",
            "ps-AF",
            "ps-PK",
            "pt-AO",
            "pt-BR",
            "pt-CH",
            "pt-CV",
            "pt-GQ",
            "pt-GW",
            "pt-LU",
            "pt-MO",
            "pt-MZ",
            "pt-PT",
            "pt-ST",
            "pt-TL",
            "qu-BO",
            "qu-EC",
            "qu-PE",
            "quc-GT",
            "rm-CH",
            "rn-BI",
            "ro-MD",
            "ro-RO",
            "rof-TZ",
            "ru-BY",
            "ru-KG",
            "ru-KZ",
            "ru-MD",
            "ru-RU",
            "ru-UA",
            "rw-RW",
            "rwk-TZ",
            "sa-IN",
            "sah-RU",
            "saq-KE",
            "sbp-TZ",
            "sd-PK",
            "se-FI",
            "se-NO",
            "se-SE",
            "seh-MZ",
            "ses-ML",
            "sg-CF",
            "shi-Latn-MA",
            "shi-Tfng-MA",
            "si-LK",
            "sk-SK",
            "sl-SI",
            "sma-NO",
            "sma-SE",
            "smj-NO",
            "smj-SE",
            "smn-FI",
            "sms-FI",
            "sn-ZW",
            "so-DJ",
            "so-ET",
            "so-KE",
            "so-SO",
            "sq-AL",
            "sq-MK",
            "sq-XK",
            "sr-Cyrl-BA",
            "sr-Cyrl-ME",
            "sr-Cyrl-RS",
            "sr-Cyrl-XK",
            "sr-Latn-BA",
            "sr-Latn-ME",
            "sr-Latn-RS",
            "sr-Latn-XK",
            "ss-SZ",
            "ss-ZA",
            "ssy-ER",
            "st-LS",
            "st-ZA",
            "sv-AX",
            "sv-FI",
            "sv-SE",
            "sw-CD",
            "sw-KE",
            "sw-TZ",
            "sw-UG",
            "syr-SY",
            "ta-IN",
            "ta-LK",
            "ta-MY",
            "ta-SG",
            "te-IN",
            "teo-KE",
            "teo-UG",
            "tg-TJ",
            "th-TH",
            "ti-ER",
            "ti-ET",
            "tig-ER",
            "tk-TM",
            "tn-BW",
            "tn-ZA",
            "to-TO",
            "tr-CY",
            "tr-TR",
            "ts-ZA",
            "tt-RU",
            "twq-NE",
            "tzm-MA",
            "ug-CN",
            "uk-UA",
            "ur-IN",
            "ur-PK",
            "uz-Arab-AF",
            "uz-Cyrl-UZ",
            "uz-Latn-UZ",
            "vai-Latn-LR",
            "vai-Vaii-LR",
            "ve-ZA",
            "vi-VN",
            "vo-001",
            "vun-TZ",
            "wae-CH",
            "wal-ET",
            "wo-SN",
            "xh-ZA",
            "xog-UG",
            "yav-CM",
            "yi-001",
            "yo-BJ",
            "yo-NG",
            "zgh-MA",
            "zh-Hans-CN",
            "zh-Hans-HK",
            "zh-Hans-MO",
            "zh-Hans-SG",
            "zh-Hant-HK",
            "zh-Hant-MO",
            "zh-Hant-TW",
            "zu-ZA"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Locale",
          "description": "The locale that will be applyed to the document"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Limit",
          "description": "Returns the first \"n\" rows"
        },
        "headers": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Headers",
          "description": "Comma separated list of headers in the same order as CSV columns"
        },
        "skipFirstLine": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Skip first line",
          "description": "Select \"Yes\" if your CSV has headers as a first line."
        }
      }
    },
    "ParseCsvFlowSchemaResponse": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "FlowV1SharePointFlowSchemaParseCsvBodyPost",
        "value-path": "response",
        "parameters": {
          "headers": {
            "parameter": "headers"
          }
        }
      },
      "x-ms-dynamic-properties": {
        "operationId": "FlowV1SharePointFlowSchemaParseCsvBodyPost",
        "parameters": {
          "headers": {
            "parameterReference": "request/headers"
          }
        },
        "itemValuePath": "response"
      }
    },
    "ProvisionPnPTemplateRequest": {
      "required": [
        "spUrl",
        "xmlTemplateContent"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "xmlTemplateContent": {
          "format": "byte",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Template Content",
          "description": "The content of an XML or PnP template"
        },
        "overwriteSystemPropertyBagValues": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite System PropertyBag Values",
          "description": "Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.)"
        },
        "ignoreDuplicateDataRowErrors": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Ignore Duplicate Data Row Errors",
          "description": "Ignore duplicate data row errors when the data row in the template already exists."
        },
        "clearNavigation": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Clear Navigation",
          "description": "If you specify this value the navigation nodes will always be removed before adding the nodes in the template"
        },
        "provisionContentTypesToSubWebs": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Provision Content Types To SubWebs",
          "description": "If set content types will be provisioned if the target web is a subweb."
        },
        "provisionFieldsToSubWebs": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Provision Fields To SubWebs",
          "description": "If set fields will be provisioned if the target web is a subweb."
        },
        "handlers": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Handlers",
          "description": "Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Visit https://docs.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers for possible values."
        },
        "excludeHandlers": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Exclude Handlers",
          "description": "Allows you to run all handlers, excluding the ones specified."
        },
        "parameters": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Parameters",
          "description": "Allows you to specify parameters that can be referred to in the template by means of the <Key>=<Value>; token"
        }
      }
    },
    "RegExpMatchFlowSchemaResponseClass": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "FlowV1SharePointFlowSchemaRegExpMatchPost",
        "value-path": "response",
        "parameters": {
          "pattern": {
            "parameter": "pattern"
          }
        }
      },
      "x-ms-dynamic-properties": {
        "operationId": "FlowV1SharePointFlowSchemaRegExpMatchPost",
        "parameters": {
          "pattern": {
            "parameterReference": "request/pattern"
          }
        },
        "itemValuePath": "response"
      }
    },
    "RegExpMatchRequest": {
      "required": [
        "pattern",
        "text"
      ],
      "type": "object",
      "properties": {
        "pattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Pattern",
          "description": "Regular expression pattern"
        },
        "text": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "String to search for matches"
        }
      }
    },
    "RegExpReplaceRequest": {
      "required": [
        "pattern",
        "text"
      ],
      "type": "object",
      "properties": {
        "pattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Pattern",
          "description": "Regular expression pattern"
        },
        "text": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "String to search for matches"
        },
        "replacement": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Replacement",
          "description": "Replacement string"
        }
      }
    },
    "RegExpTestRequest": {
      "required": [
        "pattern",
        "text"
      ],
      "type": "object",
      "properties": {
        "pattern": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Pattern",
          "description": "Regular expression pattern"
        },
        "text": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Text",
          "description": "String to search for matches"
        }
      }
    },
    "RemoveDocumentRequest": {
      "required": [
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Document URL",
          "description": "The URL of the document to be removed. You can use full URL as well as domain relative URL"
        }
      }
    },
    "RemoveFolderByUrlRequest": {
      "required": [
        "sourceUrl",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "sourceUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Folder URL",
          "description": "The URL of the library where the source folder will be removed. You can use full URL as well as domain relative URL"
        }
      }
    },
    "RemoveSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        }
      }
    },
    "RemoveSiteNavigationRequest": {
      "required": [
        "location",
        "spUrl",
        "title"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "location": {
          "enum": [
            "Top",
            "QuickLaunch"
          ],
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Location",
          "description": "The location of the node to add"
        },
        "title": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "Title of navigation node"
        },
        "parent": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Parent",
          "description": "It is the title of a parent navigation item. If there are multiple top-level items with the same title, we will pick only the first."
        }
      }
    },
    "RemoveUserFromSPGroupRequest": {
      "required": [
        "groupName",
        "spUrl",
        "userLogin"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of the user which will be removed from the specific group. Also you can specify multiple items using semicolon ';' delimited"
        }
      }
    },
    "SPGroupProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "The title for the group"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description",
          "description": "The description for the group"
        },
        "owner": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Owner",
          "description": "The owner for the group, which can be a user or another group"
        },
        "allowMembersEditMembership": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Allow Members Edit Membership",
          "description": "A value that specifies whether group members can modify membership in the group"
        },
        "allowRequestToJoinLeave": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Allow Request to Join Leave",
          "description": "A value that specifies whether to allow users to request membership in the group and to allow users to request to leave the group"
        },
        "autoAcceptRequestToJoinLeave": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Auto Accept Request to Join Leave",
          "description": "A value that specifies whether users are automatically added or removed when they make a request"
        },
        "onlyAllowMembersViewMembership": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Only Allow Members View Membership",
          "description": "A value that specifies whether only group members are allowed to view the list of members in the group"
        },
        "requestToJoinLeaveEmailSetting": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Request to Join Leave Email Setting",
          "description": "The e-mail address to which membership requests are sent"
        }
      }
    },
    "SPSiteOptionValueResponse": {
      "type": "object",
      "properties": {
        "optionValue": {
          "type": "string",
          "x-ms-summary": "Option Value"
        }
      }
    },
    "SPWebProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Title",
          "description": "The title for the website"
        },
        "description": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Description",
          "description": "The description for the site"
        },
        "quickLaunchEnabled": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Quick Launch Enabled",
          "description": "A value that specifies whether the Quick Launch area is enabled on the website"
        },
        "treeViewEnabled": {
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Tree View Enabled",
          "description": "A value that specifies whether the SharePoint Foundation TreeView is enabled in the left navigational area of website pages"
        },
        "siteLogoUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Site Logo URL",
          "description": "The absolute URL of the website logo"
        },
        "alternateCssUrl": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Alternate Css URL",
          "description": "The URL for an alternate cascading style sheet (CSS) to use in the website"
        },
        "associatedMemberGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Member Group",
          "description": "The users who have been given contribute permissions to the website"
        },
        "associatedOwnerGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Owner Group",
          "description": "The associated owner groups of the website"
        },
        "associatedVisitorGroup": {
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Associated Visitor Group",
          "description": "The associated visitor group of the website"
        },
        "containsConfidentialInfo": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Contains Confidential Info",
          "description": "A value that specifies whether the SharePoint site contain a confidential information"
        },
        "customMasterUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Custom Master URL",
          "description": "The URL for a custom master page file to apply to the website"
        },
        "enableMinimalDownload": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Enable Minimal Download",
          "description": "A value that specifies whether the Web site should use Minimal Download Strategy"
        },
        "isMultilingual": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Is Multilingual",
          "description": "A value that indicates whether a multilingual user interface is enabled for the website"
        },
        "masterUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Master URL",
          "description": "The URL of the master page that is used for the website"
        },
        "membersCanShare": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Members Can Share",
          "description": "Allow Members to share the site and invite others"
        },
        "noCrawl": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "No Crawl",
          "description": "A value that specifies whether searching is enabled for the website"
        },
        "overwriteTranslationsOnChange": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Overwrite Translations on Change",
          "description": "A value that indicates whether changes made to user-specified text in the default language should automatically overwrite existing translations made in all alternate languages"
        },
        "requestAccessEmail": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Request Access Email",
          "description": "The e-mail address to which requests for access are sent"
        },
        "saveSiteAsTemplateEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Save Site as Template Enabled",
          "description": "A value that specifies whether the Web site can be saved as a site template"
        },
        "serverRelativeUrl": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Server Relative URL",
          "description": "The server-relative URL for the website"
        },
        "syndicationEnabled": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Syndication Enabled",
          "description": "A value that specifies whether Really Simple Syndication (RSS) is enabled in the website"
        },
        "uiVersion": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "UI Version",
          "description": "The current version number of the user interface"
        }
      }
    },
    "SetDefaultSiteGroupRequest": {
      "required": [
        "groupName",
        "groupType",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupType": {
          "enum": [
            "Owner",
            "Member",
            "Visitor"
          ],
          "type": "string",
          "x-ms-summary": "Group Type",
          "description": "Type of the group"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Group Name",
          "description": "Name of the group"
        }
      }
    },
    "SharePointUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "User ID"
        },
        "loginName": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "claims": {
          "type": "string",
          "x-ms-summary": "User Claims"
        }
      }
    },
    "SharePointVersionResponse": {
      "type": "object",
      "properties": {
        "editor": {
          "$ref": "#/definitions/SharePointUserResponse"
        },
        "modified": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Modified"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      }
    },
    "StartListWorkflowRequest": {
      "required": [
        "itemId",
        "listUrl",
        "spUrl",
        "workflowName"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "workflowName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Workflow Name",
          "description": "Name of the workflow which will be started"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-ms-summary": "Input Parameters",
          "description": "JSON string that contains input parameters for workflow"
        },
        "listUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List URL",
          "description": "List name, URL or Guid"
        },
        "itemId": {
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID",
          "description": "Item ID of the item for which you want to start the list workflow"
        }
      }
    },
    "StartSiteWorkflowRequest": {
      "required": [
        "spUrl",
        "workflowName"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "workflowName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Workflow Name",
          "description": "Name of the workflow which will be started"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-ms-summary": "Input Parameters",
          "description": "JSON string that contains input parameters for workflow"
        }
      }
    },
    "StringResultResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "x-ms-summary": "Result"
        }
      }
    },
    "UndeclareDocumentAsRecordRequest": {
      "required": [
        "itemId",
        "listName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List Name",
          "description": "Title of the list or library"
        },
        "itemId": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID or URL",
          "description": "The item Id or Url of document"
        }
      }
    },
    "UpdateListItemRequest": {
      "required": [
        "data",
        "itemId",
        "listName",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "listName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "List Name",
          "description": "Title of the list or library"
        },
        "itemId": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Item ID or URL",
          "description": "The item Id or Url of document/folder"
        },
        "data": {
          "type": "object",
          "x-ms-visibility": "important",
          "x-ms-summary": "Field values",
          "description": "JSON object like { \"InternalFieldName\": \"FieldValue\" }"
        }
      }
    },
    "UpdateSPGroupPropertiesRequest": {
      "required": [
        "groupName",
        "properties",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "properties": {
          "$ref": "#/definitions/SPGroupProperties"
        }
      }
    },
    "UpdateSitePropertiesRequest": {
      "required": [
        "properties",
        "spUrl"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "properties": {
          "$ref": "#/definitions/SPWebProperties"
        }
      }
    },
    "UserExistsInGroupRequest": {
      "required": [
        "groupName",
        "spUrl",
        "userLogin"
      ],
      "type": "object",
      "properties": {
        "spUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "SharePoint Site URL",
          "description": "The action will be executed on the specified SharePoint site"
        },
        "groupName": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Group Name",
          "description": "The name of the group"
        },
        "userLogin": {
          "minLength": 1,
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "User",
          "description": "Login or email of a user for checking if he is a member in the specified group"
        }
      }
    },
    "UserExistsResponse": {
      "type": "object",
      "properties": {
        "userExists": {
          "type": "boolean",
          "x-ms-summary": "User Exists"
        }
      }
    },
    "VersionsHistoryResponse": {
      "type": "object",
      "properties": {
        "countVersions": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "x-ms-summary": "Count Versions"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointVersionResponse"
          },
          "x-ms-summary": "Versions"
        }
      }
    },
    "WebUrlResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "x-ms-summary": "Web URL"
        }
      }
    },
    "WorkflowGuidResponse": {
      "type": "object",
      "properties": {
        "workflowGuid": {
          "type": "string",
          "x-ms-summary": "Workflow GUID"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "API key issued by account.plumsail.com"
    }
  },
  "security": [
    {
      "api_key": [ ]
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://plumsail.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://plumsail.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Content and Files"
    }
  ]
}