{
  "basePath": "/",
  "consumes": ["application/json"],
  "definitions": {
    "GetTemplates": {
      "items": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": ["id", "title"],
        "type": "object"
      },
      "type": "array"
    }
  },
  "host": "msflow.scrive.com",
  "info": {
    "description": "Scrive, the Nordic market leader for electronic signatures, offers a growing suite of solutions for document workflows requiring e-signing and identity verification.",
    "title": "Scrive eSign",
    "version": "1.0",
    "contact": {
      "name": "Scrive Support",
      "url": "https://support.scrive.com",
      "email": "support@scrive.com"
    }
  },
  "parameters": {},
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.scrive.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.scrive.com/privacy-notice/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ],
  "paths": {
    "/documents/{templateID}/fields/schema": {
      "get": {
        "description": "Gets the fields schema of the selected template",
        "operationId": "GetTemplateSchema",
        "parameters": [
          {
            "description": "Select Template you want outputs from",
            "in": "path",
            "name": "templateID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Template"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Gets the fields schema of the selected template",
        "x-ms-visibility": "internal"
      }
    },
    "/documents/{templateID}/properties/schema": {
      "get": {
        "description": "Gets the properties schema of the selected template",
        "operationId": "GetTemplatePropertiesSchema",
        "parameters": [
          {
            "description": "Select Template you want outputs from",
            "in": "path",
            "name": "templateID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Template"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get's the properties schema of the selected template",
        "x-ms-visibility": "internal"
      }
    },
    "/getdocumentjson": {
      "post": {
        "description": "Gets the document JSON",
        "operationId": "GetDocJson",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Document ID",
                  "type": "string"
                }
              },
              "required": ["documentId"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got Document JSON",
            "schema": {
              "description": "The document JSON",
              "title": "Document JSON",
              "type": "string"
            }
          }
        },
        "summary": "Get Document JSON"
      }
    },
    "/getdocumentpdfcontent": {
      "post": {
        "description": "Gets the content of the document PDF",
        "operationId": "GetDocumentPdfContent",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Document ID",
                  "type": "string"
                }
              },
              "required": ["documentId"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got PDF Content",
            "schema": {
              "format": "byte",
              "title": "Document PDF content",
              "type": "string"
            }
          }
        },
        "summary": "Get document PDF content"
      }
    },
    "/newfromtemplate/{templateId-dynamic}": {
      "post": {
        "description": "Create a new document from the selected template",
        "operationId": "NewDocumentFromTemplate",
        "parameters": [
          {
            "description": "Select Template you want outputs from",
            "in": "path",
            "name": "templateId-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template"
          }
        ],
        "responses": {
          "201": {
            "description": "Document Created",
            "schema": {
              "description": "ID of the created document",
              "format": "",
              "title": "New document ID",
              "type": "string"
            }
          }
        },
        "summary": "Create new document from template"
      }
    },
    "/startsigning": {
      "post": {
        "description": "Start the signing process for the document",
        "operationId": "StartSigning",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Id of document to start signing",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": ["documentId"],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Signing started",
            "schema": {
              "description": "The document ID being signed",
              "title": "Document ID being signed",
              "type": "string"
            }
          }
        },
        "summary": "Start signing process"
      }
    },
    "/templates": {
      "get": {
        "description": "Get templates",
        "operationId": "GetTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTemplates"
            }
          }
        },
        "summary": "Gets all the templates you have access to",
        "x-ms-visibility": "internal"
      }
    },
    "/updatedocumentjson": {
      "post": {
        "description": "Updates the document JSON with a provided JSON",
        "operationId": "UpdateDocJson",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Id of document to update",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "documentJson": {
                  "description": "document",
                  "title": "Document JSON",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": ["documentId", "documentJson"],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Document Updated"
          }
        },
        "summary": "Update document JSON"
      }
    },
    "/updatepartiesfields/{templateID-dynamic}": {
      "post": {
        "description": "Updates party fields based on the selected template - Uses Dynamic values and dynamic schema to draw form",
        "operationId": "UpdatePartiesFields",
        "parameters": [
          {
            "description": "Select Template you want fields from",
            "in": "path",
            "name": "templateID-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template"
          },
          {
            "description": "Dynamic Schema of fields in selected template",
            "in": "body",
            "name": "dynamicTemplateSchema",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetTemplateSchema",
                "parameters": {
                  "templateID": {
                    "parameter": "templateID-dynamic"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Update fields based on template"
      }
    },
    "/updatepartiesproperties/{templateID-dynamic}": {
      "post": {
        "description": "Updates properties based on the selected template - Uses Dynamic values and dynamic schema to draw form",
        "operationId": "UpdatePartiesProperties",
        "parameters": [
          {
            "description": "Select Template you want meta parameters from",
            "in": "path",
            "name": "templateID-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template"
          },
          {
            "description": "Dynamic Schema of meta from selected template",
            "in": "body",
            "name": "dynamicTemplateMetaSchema",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetTemplatePropertiesSchema",
                "parameters": {
                  "templateID": {
                    "parameter": "templateID-dynamic"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Update properties of parties based on template"
      }
    },
    "/setfile": {
      "post": {
        "description": "Sets the main PDF for the document",
        "operationId": "SetFile",
        "summary": "Set file for document",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Id of document to update",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "pdfContent": {
                  "description": "The file contents of the new PDF",
                  "title": "New PDF content",
                  "format": "byte",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": ["documentId", "pdfContent"],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got Document JSON",
            "schema": {
              "description": "The document JSON",
              "title": "Document JSON",
              "type": "string"
            }
          }
        }
      }
    },
    "/webhooks/delete/{webhook_id}": {
      "delete": {
        "description": "Deletes a webhook",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "description": "ID of the webhook being deleted",
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Webhook ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Webhook Deleted"
          }
        },
        "summary": "Deletes a webhook",
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/signed/create": {
      "post": {
        "description": "Creates a webhook",
        "operationId": "WebhookOnDocumentSign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Document ID",
                  "type": "string"
                },
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": ["webhookUrl", "documentId"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the created document",
              "format": "",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document is signed by all signatories",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "/webhooks/signed/createandstart": {
      "post": {
        "description": "Creates a webhook",
        "operationId": "StartAndOnDocumentSign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "documentId",
                  "title": "Document ID",
                  "type": "string"
                },
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": ["webhookUrl", "documentId"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the created document",
              "format": "",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document is signed by all signatories (Start Signing)",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "/webhooks/signedfromtemplate/create/{templateId-dynamic}": {
      "post": {
        "description": "Creates a webhook",
        "operationId": "WebhookFromTemplateSign",
        "parameters": [
          {
            "description": "Select Template you want outputs from",
            "in": "path",
            "name": "templateId-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": ["webhookUrl"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the triggering document",
              "format": "",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document from template is signed by all signatories",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "produces": ["application/json"],
  "responses": {},
  "schemes": ["https"],
  "security": [],
  "securityDefinitions": {
    "undefined": {
      "type": "basic"
    }
  },
  "swagger": "2.0",
  "tags": []
}
