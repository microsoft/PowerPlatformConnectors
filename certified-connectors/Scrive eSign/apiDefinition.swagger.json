{
  "swagger": "2.0",
  "info": {
    "description": "Scrive, the Nordic market leader for electronic signatures, offers a growing suite of solutions for document workflows requiring e-signing and identity verification.",
    "title": "Scrive eSign",
    "version": "1.0",
    "contact": {
      "name": "Scrive Support",
      "url": "https://support.scrive.com",
      "email": "support@scrive.com"
    }
  },
  "host": "msflow.scrive.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/documents/{templateID}/fields/schema": {
      "get": {
        "description": "Fetches the fields from a template that can be used to populate the fields of a new document from that template.",
        "operationId": "GetTemplateSchema",
        "parameters": [
          {
            "description": "Select template to fetch fields from.",
            "in": "path",
            "name": "templateID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Gets the fields schema of the selected template",
        "x-ms-visibility": "internal"
      }
    },
    "/documents/{templateID}/properties/schema": {
      "get": {
        "description": "Fetches the properties fields of a template that can be used to populate the properties of a new document from that template.",
        "operationId": "GetTemplatePropertiesSchema",
        "parameters": [
          {
            "description": "Select template to fetch properties from.",
            "in": "path",
            "name": "templateID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get's the properties schema of the selected template",
        "x-ms-visibility": "internal"
      }
    },
    "/getdocumentjson": {
      "post": {
        "description": "Gets the document JSON.",
        "operationId": "GetDocJson",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "ID of the document to get JSON from.",
                  "title": "Document ID",
                  "type": "string"
                }
              },
              "required": [
                "documentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got Document JSON",
            "schema": {
              "description": "Document JSON",
              "title": "Document JSON",
              "type": "object"
            }
          }
        },
        "summary": "Get Document JSON"
      }
    },
    "/getdocumentpdfcontent": {
      "post": {
        "description": "Gets the content of the document PDF file.",
        "operationId": "GetDocumentPdfContent",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "Document ID to get the PDF file from.",
                  "title": "Document ID",
                  "type": "string"
                }
              },
              "required": [
                "documentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got PDF Content",
            "schema": {
              "format": "byte",
              "title": "Document PDF content",
              "type": "string"
            }
          }
        },
        "summary": "Get document PDF file content"
      }
    },
    "/newfromtemplate/{templateId-dynamic}": {
      "post": {
        "description": "Create a new document from the selected template.",
        "operationId": "NewDocumentFromTemplate",
        "parameters": [
          {
            "description": "Select template to start a new document from.",
            "in": "path",
            "name": "templateId-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "description": "Document Created",
            "schema": {
              "description": "ID of the created document",
              "title": "New document ID",
              "type": "string"
            }
          }
        },
        "summary": "Create new document from template"
      }
    },
    "/startsigning": {
      "post": {
        "description": "Start the signing process for a document.",
        "operationId": "StartSigning",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "ID of the document to start.",
                  "title": "Document ID",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "documentId"
              ],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Signing started",
            "schema": {
              "description": "ID of document being signed",
              "title": "Document ID being signed",
              "type": "string"
            }
          }
        },
        "summary": "Start signing process"
      }
    },
    "/templates": {
      "get": {
        "description": "Fetches all templates for the Scrive e-archive templates.",
        "operationId": "GetTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTemplates"
            }
          }
        },
        "summary": "Gets all the templates you have access to",
        "x-ms-visibility": "internal"
      }
    },
    "/updatedocumentjson": {
      "post": {
        "description": "Updates the document JSON with a provided JSON.",
        "operationId": "UpdateDocJson",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "Document ID of the document to update.",
                  "title": "Document ID",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "documentJson": {
                  "description": "JSON used to update document metadata.",
                  "title": "Document JSON",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "documentId",
                "documentJson"
              ],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Document Updated"
          }
        },
        "summary": "Update document JSON"
      }
    },
    "/updatepartiesfields/{templateID-dynamic}": {
      "post": {
        "description": "Updates party fields based on the selected template.",
        "operationId": "UpdatePartiesFields",
        "parameters": [
          {
            "description": "Select Template you want fields from.",
            "in": "path",
            "name": "templateID-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Dynamic Schema of fields in selected template.",
            "in": "body",
            "name": "dynamicTemplateSchema",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetTemplateSchema",
                "parameters": {
                  "templateID": {
                    "parameter": "templateID-dynamic"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Update fields based on template"
      }
    },
    "/updatepartiesproperties/{templateID-dynamic}": {
      "post": {
        "description": "Updates properties based on the selected template.",
        "operationId": "UpdatePartiesProperties",
        "parameters": [
          {
            "description": "Select template you want the property fields from.",
            "in": "path",
            "name": "templateID-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          },
          {
            "description": "Dynamic Schema of properties from selected template.",
            "in": "body",
            "name": "dynamicTemplateMetaSchema",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetTemplatePropertiesSchema",
                "parameters": {
                  "templateID": {
                    "parameter": "templateID-dynamic"
                  }
                },
                "value-path": "items"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Update properties of parties based on template"
      }
    },
    "/setfile": {
      "post": {
        "description": "Sets the main PDF file for the document.",
        "operationId": "SetFile",
        "summary": "Set file for document",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "ID of the document to update.",
                  "title": "Document ID",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "pdfContent": {
                  "description": "New PDF file content.",
                  "title": "New PDF content",
                  "format": "byte",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "documentId",
                "pdfContent"
              ],
              "type": "object",
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Got Document JSON",
            "schema": {
              "description": "Document JSON",
              "title": "Document JSON",
              "type": "object"
            }
          }
        }
      }
    },
    "/newfrompdf": {
      "post": {
        "description": "Creates a document from a PDF file.",
        "operationId": "NewFromPdf",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "pdfContent": {
                  "description": "File content of the PDF file that will be used for the new document.",
                  "title": "PDF content",
                  "format": "byte",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "authorRole": {
                  "description": "Role of the author in the signing process.",
                  "title": "Author role",
                  "type": "string",
                  "default": "signing_party",
                  "enum": [
                    "signing_party",
                    "viewer"
                  ],
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "pdfContent",
                "authorRole"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201 Created Document",
            "schema": {
              "description": "Document ID of the created document.",
              "title": "Document ID",
              "type": "string"
            }
          }
        },
        "summary": "Create new document from PDF"
      }
    },
    "/addparty": {
      "post": {
        "description": "Adds a new party to the document as a signatory, viewer or approver.",
        "operationId": "AddParty",
        "parameters": [
          {
            "default": "application/json",
            "description": "Content type of parameter.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Content type",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "ID of the document to add the new party to.",
                  "title": "Document ID",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "partyEmail": {
                  "description": "Email of the new party",
                  "title": "Party email",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "partyRole": {
                  "description": "Role of the new party in the signing process.",
                  "title": "Party role",
                  "type": "string",
                  "default": "signing_party",
                  "enum": [
                    "signing_party",
                    "viewer",
                    "approver"
                  ]
                },
                "firstname": {
                  "description": "Firstname of the new party.",
                  "title": "Firstname",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "lastname": {
                  "description": "Lastname of the new party.",
                  "title": "Lastname",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "company": {
                  "description": "Company of the new party.",
                  "title": "Company",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "mobile": {
                  "description": "Mobile phone number of the new party.",
                  "title": "Mobile",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "personalNumber": {
                  "description": "Personal number of the new party. For use with various eIDs.",
                  "title": "Party ID number",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                },
                "signOrder": {
                  "description": "New party's order in the signing process.",
                  "title": "Invitation order",
                  "type": "number",
                  "x-ms-visibility": "advanced"
                },
                "deliveryMethod": {
                  "description": "How the party will be invited to sign.",
                  "title": "Invitation method",
                  "type": "string",
                  "default": "email",
                  "enum": [
                    "email",
                    "mobile",
                    "email_mobile",
                    "pad",
                    "api"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "authenticationToView": {
                  "description": "Authentication method needed to view the document.",
                  "title": "Auth to view",
                  "type": "string",
                  "default": "standard",
                  "enum": [
                    "standard",
                    "sms_pin",
                    "se_bankid",
                    "no_bankid",
                    "dk_nemid",
                    "fi_tupas",
                    "verimi",
                    "nl_idin"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "authenticationToViewArchived": {
                  "description": "Authentication method needed to view the archived document.",
                  "title": "Auth to view archived",
                  "type": "string",
                  "default": "standard",
                  "enum": [
                    "standard",
                    "sms_pin",
                    "se_bankid",
                    "no_bankid",
                    "dk_nemid",
                    "fi_tupas",
                    "verimi",
                    "nl_idin"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "authenticationToSign": {
                  "description": "Authentication method needed to sign the document.",
                  "title": "Auth to sign",
                  "type": "string",
                  "default": "standard",
                  "enum": [
                    "standard",
                    "sms_pin",
                    "se_bankid",
                    "no_bankid",
                    "dk_nemid",
                    "fi_tupas",
                    "onfido_document_check",
                    "onfido_document_and_photo_check"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "confirmation": {
                  "description": "Method for sending confirmation.",
                  "title": "Confirmation",
                  "type": "string",
                  "default": "email",
                  "enum": [
                    "email",
                    "mobile",
                    "email_mobile",
                    "email_link",
                    "email_link_mobile",
                    "none"
                  ],
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "documentId",
                "partyEmail",
                "partyRole"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Party Added"
          }
        },
        "summary": "Add new party"
      }
    },
    "/attachments": {
      "get": {
        "description": "Fetches all attachments from the Scrive e-archive.",
        "operationId": "GetAttachments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAttachments"
            }
          }
        },
        "summary": "Gets all the attachments you have access to",
        "x-ms-visibility": "internal"
      }
    },
    "/setattachment": {
      "post": {
        "description": "Adds a PDF to a document as an attachment. Choose between existing attachments from your Scrive account or create a new attachment by providing a PDF file.",
        "operationId": "SetAuthorAttachment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "fileId": {
                  "description": "Select an existing attachment.",
                  "title": "Select Attachment",
                  "type": "string",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAttachments",
                    "value-path": "id",
                    "value-title": "title"
                  },
                  "x-ms-visibility": "important"
                },
                "documentId": {
                  "description": "ID of the document to add the attachment to.",
                  "title": "Document ID",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "attachmentName": {
                  "description": "File name for the attachment.",
                  "title": "Attachment name.",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "required": {
                  "description": "Whether or not to present the attachment with a mandatory checkmark before signing.",
                  "title": "Required for signing",
                  "type": "string",
                  "enum": [
                    "Yes",
                    "No"
                  ],
                  "x-ms-visibility": "important"
                },
                "addToSealedFile": {
                  "description": "Whether or not to include the attachment in the sealed document after signing.",
                  "title": "Add to sealed file",
                  "type": "string",
                  "enum": [
                    "Yes",
                    "No"
                  ],
                  "x-ms-visibility": "important"
                },
                "pdfContent": {
                  "description": "PDF file content for the new attachment. Use this OR \"Select Attachment\".",
                  "title": "New Attachment PDF",
                  "format": "byte",
                  "type": "string",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "documentId",
                "attachmentName",
                "required",
                "addToSealedFile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Attachment Added"
          }
        },
        "summary": "Set attachment"
      }
    },
    "/webhooks/delete/{webhook_id}": {
      "delete": {
        "description": "Deletes a webhook.",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "description": "ID of the webhook being deleted.",
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Webhook ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "200 Webhook Deleted"
          }
        },
        "summary": "Deletes a webhook",
        "x-ms-visibility": "internal"
      }
    },
    "/webhooks/signed/create": {
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document.",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "post": {
        "description": "Waits for a document to be signed.",
        "operationId": "WebhookOnDocumentSign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "Document ID to trigger on when signed.",
                  "title": "Document ID",
                  "type": "string"
                },
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "webhookUrl",
                "documentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the created document.",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document is signed by all signatories",
        "x-ms-trigger": "single"
      }
    },
    "/webhooks/signed/createandstart": {
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document.",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "post": {
        "description": "Starts the signing process for a document and waits for it to be signed.",
        "operationId": "StartAndOnDocumentSign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "documentId": {
                  "description": "ID of document to start and trigger from on signed.",
                  "title": "Document ID",
                  "type": "string"
                },
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "webhookUrl",
                "documentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the created document.",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document is signed by all signatories (Start Signing)",
        "x-ms-trigger": "single"
      }
    },
    "/webhooks/signedfromtemplate/create/{templateId-dynamic}": {
      "x-ms-notification-content": {
        "description": "Default",
        "schema": {
          "properties": {
            "signedDocumentId": {
              "description": "Document ID for triggering document",
              "title": "Signed Document ID",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "post": {
        "description": "Watches a template and waits for one of its documents to be signed.",
        "operationId": "WebhookFromTemplateSign",
        "parameters": [
          {
            "description": "Choose template whose documents will trigger the flow when signed.",
            "in": "path",
            "name": "templateId-dynamic",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTemplates",
              "value-path": "id",
              "value-title": "title"
            },
            "x-ms-summary": "Select Template",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "webhookUrl": {
                  "description": "webhookUrl",
                  "title": "Webhook url",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "webhookUrl"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook Pushed",
            "schema": {
              "description": "ID of the triggering document.",
              "title": "Signed document ID",
              "type": "string"
            }
          }
        },
        "summary": "When a document from template is signed by all signatories",
        "x-ms-trigger": "single"
      }
    }
  },
  "definitions": {
    "GetTemplates": {
      "items": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "GetAttachments": {
      "items": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title"
        ],
        "type": "object"
      },
      "type": "array"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": [
        "Email",
        "Password",
        "API Host URL"
      ]
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.scrive.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.scrive.com/privacy-notice/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ]
}
