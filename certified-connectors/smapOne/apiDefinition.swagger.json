{
  "swagger": "2.0",
  "info": {
    "version": "1.1",
    "title": "smapOne",
    "description": "Use this connector to retrieve data regarding your smaps from the smapOne plattform, update datasources or create tasks for your users.",
    "contact": {
      "name": "smapOne AG",
      "url": "https://www.smapone.com",
      "email": "support@smapone.com"
    }
  },
  "host": "platform.smapone.com",
  "basePath": "/Backend",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.smapone.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://en.smapone.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Productivity"
    }
  ],
  "paths": {
    "/intern/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get information about user",
        "description": "This operation returns information about the current user. For example users e-mail and subscriptionId.",
        "operationId": "GETAccount",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfoModel"
            },
            "examples": {
              "application/json": {
                "accountIsActivated": false,
                "subscriptionId": "b15c0366-fe98-e511-9bed-e8b1fc2a2cbc",
                "userName": null,
                "companyName": null,
                "email": "max.mustermann@smapone.com",
                "originalMail": null,
                "contract": "Business",
                "roles": null,
                "smapLimit": 0,
                "publisher": "smapOne AG",
                "source": "SmapOne",
                "isInternal": false,
                "userLimit": 0,
                "publishedSmaps": 0,
                "availableFeatures": null,
                "culture": null
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          }
        },
        "deprecated": false
      }
    },
    "/intern/Account/Stats": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get statistics about user and subscription",
        "operationId": "GETAccount_Stats",
        "description": "This operation gives you statistics about your subscription like the data count.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountStatistics"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          }
        },
        "deprecated": false
      }
    },
    "/intern/DataSource": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get datasources",
        "description": "Returns a list of datasources available in your subscription. The returned entities can be used to query for datasource versions using a given dataSourceId.",
        "operationId": "GETDataSources",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataSourceListModel"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          }
        },
        "deprecated": false
      }
    },
    "/intern/DataSource/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get datasource details",
        "description": "Returns the details to a given Datasource.",
        "operationId": "GETDataSource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataSourceId",
            "description": "The id of the datasource",
            "x-ms-summary": "DatasourceId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceModel"
            }
          },
          "403": {
            "description": "Invalid or missing access token."
          }
        },
        "deprecated": false
      }
    },
    "/intern/DataSource/{dataSourceId}/Versions/{dataSourceVersion}/Definition/Values": {
      "get": {
        "tags": [
          "DataSource/Definition"
        ],
        "summary": "Get datasource values",
        "description": "Returns the values of a specific datasource version.",
        "operationId": "GETDataSource_Definition_Values",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "description": "The datasource id",
            "x-ms-summary": "DatasourceId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceVersion",
            "in": "path",
            "description": "The datasource version number (e.g. 1.0)",
            "x-ms-summary": "Datasource version",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "examples": {
              "application/json": [
                {
                  "guid": "844c9fe0-81d3-4512-a835-2d0164a7d1a4",
                  "balance": "$1,856.96",
                  "name": "Franck Ribery"
                },
                {
                  "guid": "e81d0854-9455-44ea-b3ab-ce7da12c2788",
                  "balance": "$2,507.11",
                  "name": "Thomas Valenzuela"
                },
                {
                  "guid": "2770751d-61d8-42a0-bf8e-36e723c78b5a",
                  "balance": "$3,241.55",
                  "name": "Thomas Doyle"
                }
              ]
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "DataSource/Definition"
        ],
        "summary": "Update datasource",
        "description": "Update a datasource. The columns must be equal. That means that the column-ids must match.",
        "operationId": "PUTDataSource_Definition_Values",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataSourceId",
            "in": "path",
            "description": "The datasource id",
            "x-ms-summary": "DatasourceId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceVersion",
            "in": "path",
            "description": "The version number of the current datasource version (e.g. 1.0)",
            "x-ms-summary": "Version",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "values",
            "in": "body",
            "description": "The list of key value pairs",
            "x-ms-summary": "Values",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataSourceVersionModel"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "DataSource not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps": {
      "get": {
        "tags": [
          "Smaps"
        ],
        "summary": "Get all smaps",
        "description": "Returns all smaps of your subscription. The returned entities can be used to query for available smap versions using a given smapId or to query for data records of a smap.",
        "operationId": "GETSmaps",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmapModel"
              }
            },
            "examples": {
              "application/json": [
                {
                  "name": "My first smap",
                  "smapId": "047c3027-ba72-48b4-b4ec-39b9e1ced5aa",
                  "logoId": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "name": "Conference-smap",
                  "smapId": "98912199-0cef-4bc6-8724-a07989511613",
                  "logoId": "00000000-0000-0000-0000-000000000000"
                }
              ]
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "A given resource was not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}": {
      "get": {
        "tags": [
          "Smaps"
        ],
        "summary": "Get details for a specific smap",
        "operationId": "GETSmap",
        "description": "Get all the metadata for a specific smap",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smapId of a smap to be requested",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SmapModel"
            },
            "examples": {
              "application/json": {
                "groupLicenseCount": 2,
                "changeType": "None",
                "userLicenseCount": 3,
                "lastChanged": "2022-11-05T22:03:36.2013322Z",
                "isUpToDate": false,
                "installationsCount": 12,
                "lastPublishedVersion": null,
                "totalDataCount": 246,
                "totalOpenTasksCount": 0,
                "tasksActivated": false,
                "isCompanyTemplate": false,
                "name": "My first smap",
                "smapId": "047c3027-ba72-48b4-b4ec-39b9e1ced5aa",
                "logoId": "00000000-0000-0000-0000-000000000000"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Smap not found"
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Data.{format}": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get all data records for all versions of a smap",
        "description": "Returns all records to a given smapId. Data records of all smap versions are returned. Be aware that the results may not be mutually compatible because the data schema may have changed between smap version.",
        "operationId": "GETSmap_Data_format",
        "consumes": [],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "markAsExported",
            "in": "query",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "description": "Mark all requested records as exported",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format (.json, .xml), Default is Json",
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "default": "Json",
            "enum": [
              "Json",
              "Xml"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter records for their state: new, exported or incomplete (Task)",
            "x-ms-summary": "State of Record",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Exported",
              "Incomplete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response model for JSON format",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataRecordApi"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Data.pdf": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get the reports for all data records of all versions of a smap",
        "description": "Returns the reports for all record of a given smapId. Reports of all smap versions are returned.",
        "operationId": "GETSmap_Data_report",
        "consumes": [],
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "markAsExported",
            "in": "query",
            "description": "Mark the data records of all requested reports as exported",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter records for their state: new, exported or incomplete (Task)",
            "x-ms-summary": "State of Record",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Exported",
              "Incomplete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response model for JSON format",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions/{version}/Data": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get all data records for smap version",
        "description": "Returns all records for a specific smap version using a given smapId. For all new records the export date will be updated automatically. You can use the state parameter to filter for new records.",
        "operationId": "GETSmap_Version_Data",
        "consumes": [],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version in major (e.g. 1) or major.minor (e.g. 1.1) format",
            "required": true,
            "type": "string"
          },
          {
            "name": "markAsExported",
            "in": "query",
            "description": "Mark all requested records as exported",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "format",
            "in": "query",
            "description": "Output format (.json oder .xml), Default is Json",
            "x-ms-summary": "Format",
            "required": false,
            "type": "string",
            "default": "Json",
            "enum": [
              "Json",
              "Xml"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "filter the records for state new, exported or incomplete",
            "x-ms-summary": "State of Record",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Exported",
              "Incomplete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response model for JSON format",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataRecordApi"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Delete data records of a smap version",
        "description": "Deletes all data records to a given smap version. Be aware that you delete all of your records if you do no set the state filter!",
        "operationId": "DELETESmap_Version_Data",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "filter the records for state new, exported or incomplete",
            "x-ms-summary": "State of Record",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Exported",
              "Incomplete"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }      
    },
    "/intern/Smaps/{smapId}/Versions/{version}/Data": {
    "post": {
        "tags": [
          "Smaps/Tasks"
        ],
        "summary": "Create Task for a smap version",
        "description": "Create a task - a prefilled data record that can be assigned to a user",
        "operationId": "POSTSmaps_Data_Version",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "task",
            "in": "body",
            "description": "The new record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTaskDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataRecordApi"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
  },
    "/v1/Smaps/{smapId}/Versions/{version}/Data.pdf": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get the reports for all data records from a specific smap version",
        "description": "Returns the reports for all records of a specific smap version. For all new records the export date will be updated automatically. You can use the state parameter to filter for new records.",
        "operationId": "GETSmap_Version_Data_report",
        "consumes": [],
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version in major or major.minor format",
            "required": true,
            "type": "string"
          },
          {
            "name": "markAsExported",
            "in": "query",
            "description": "Mark the data records of all requested reports as exported",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter the records for state new, exported or incomplete",
            "x-ms-summary": "State of Record",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Exported",
              "Incomplete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response model for JSON format",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions/{version}/Data/{recordId}.{format}": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get the report of a data record",
        "description": "Returns the report of a specific data record of a given smap version.",
        "operationId": "GETSmap_Version_Record_report",
        "consumes": [],
        "produces": [
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "application/msword",
          "application/pdf",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordId",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The data record id",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Pdf, Docx, Doc, Html, Xml, Txt (for testing purposes)",
            "x-ms-summary": "Format",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string",
            "default": "Pdf",
            "enum": [
              "Pdf",
              "Doc",
              "Docx",
              "Html",
              "Txt"
            ]
          },
          {
            "name": "markAsExported",
            "in": "query",
            "description": "Mark record as exported",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "useDefault",
            "in": "query",
            "description": "If true a new template is generated and the uploaded report template will be ignored.",
            "x-ms-summary": "Use default template",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response File",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions/{version}/Data/{recordId}": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get data record",
        "description": "Returns a specific data record of a given smap version.",
        "operationId": "GETSmap_Version_Record_format",
        "consumes": [],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordId",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The data record id",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Json, Xml",
            "x-ms-summary": "Format",
            "required": false,
            "type": "string",
            "default": "Json",
            "enum": [
              "Json",
              "Xml"
            ]
          },
          {
            "name": "markAsExported",
            "in": "query",
            "description": "Mark the record as exported",
            "x-ms-summary": "Mark Exported",
            "x-ms-visibility": "advanced",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response model for JSON format",
            "schema": {
              "$ref": "#/definitions/DataRecordApi"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Delete data record",
        "description": "Deletes a specific data record of the given smap version.",
        "operationId": "DELETESmap_Version_Data_record",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordId",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The data record id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions/{version}/Data/{recordId}/Files": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get all file meta data for data record",
        "description": "Returns the meta data for all files of this data record.",
        "operationId": "GETSmap_Version_Record_Files",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordId",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The data record id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SingleFileValue"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions/{version}/Data/{recordId}/Files/{fileId}": {
      "get": {
        "tags": [
          "Smaps/Data"
        ],
        "summary": "Get file of data record",
        "description": "Returns a specific file for the given recordId of the given smap version.",
        "operationId": "GETSmap_Version_Record_File",
        "consumes": [],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordId",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The record id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The file Id",
            "x-ms-summary": "FileId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image with mediaType image/png."
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/intern/Smaps/{smapId}/Versions/{version}/Tasks/{taskId}/State": {
      "put": {
        "tags": [
          "Smaps/Tasks"
        ],
        "summary": "Assign or remove task",
        "description": "Assign or remove a task from a user",
        "operationId": "PUTSmap_Version_Task_State",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The record id",
            "x-ms-summary": "recordId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "body",
            "description": "The change action",
            "x-ms-summary": "Action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataRecordSetState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataRecordApi"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Data not found."
          }
        },
        "deprecated": false
      }
    },
    "/intern/Smaps/{smapId}/Versions/Current/DataSources/Update": {
      "put": {
        "tags": [
          "Smaps/Version"
        ],
        "summary": "Update all datasources in a smap",
        "description": "Check all referenced datasources for an update. If there are newer minor versions of the referenced datasources the references were updated and a new version of this smap is published. If their are no updates available no publish will be executed and the latest version will be returned.",
        "operationId": "PUTSmap_Versions_Current_DataSources_Update",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateEditVersion",
            "in": "query",
            "description": "If the current designer version should be updated too",
            "x-ms-summary": "Update Designer Version",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SmapVersionModel"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Smap not found."
          }
        },
        "deprecated": false
      }
    },
    "/v1/Smaps/{smapId}/Versions": {
      "get": {
        "tags": [
          "Smaps/Version"
        ],
        "summary": "Get all smap versions",
        "description": "Returns als versions that belong to the given smapId. The returned entities can be used to query for data records to a given version. The Version 0.0 is the version currently edited, not jet published verrsion of a smap.",
        "operationId": "GETSmap_Versions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmapVersionModel"
              }
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Smap not found."
          }
        },
        "deprecated": false
      }
    },
    "/intern/Smaps/{smapId}/Versions/{version}": {
      "get": {
        "tags": [
          "Smaps/Version"
        ],
        "summary": "Get specific smap version",
        "description": "Get metadata for a specific version of a smap",
        "operationId": "GETSmap_Version",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SmapVersionModel"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Smap not found."
          }
        },
        "deprecated": false
      }
    },
    "/intern/Smaps/{smapId}/Versions/{version}/Schema": {
      "get": {
        "tags": [
          "Smaps/Version"
        ],
        "summary": "Get schema for dataRecord",
        "description": "Get the json schema for the data of this smap",
        "operationId": "GETSmap_Version_Schema",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smapId",
            "in": "path",
            "description": "The smap id",
            "x-ms-summary": "smapId",
            "x-ms-url-encoding": "single",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "x-ms-summary": "smapVersion",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "The smap version number (e.g. 1.0)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JSchema"
            }
          },
          "400": {
            "description": "Malformed query parameter."
          },
          "403": {
            "description": "Invalid or missing access token."
          },
          "404": {
            "description": "Version not found."
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "UserInfoModel": {
      "description": "Information to a user",
      "type": "object",
      "properties": {
        "accountIsActivated": {
          "description": "Indicates if the account has been activated. If not, the user has not yet verified the account.",
          "type": "boolean",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "The subscription id of the user",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "The user's name",
          "type": "string",
          "readOnly": true
        },
        "companyName": {
          "description": "The company name registered for the subscription",
          "type": "string",
          "readOnly": true
        },
        "email": {
          "description": "The email address of the user",
          "type": "string",
          "readOnly": true
        },
        "originalMail": {
          "description": "If the current account was accessed using impersonation then this shows the email address of the original user.",
          "type": "string",
          "readOnly": true
        },
        "contract": {
          "description": "The contract type",
          "type": "string",
          "readOnly": true
        },
        "roles": {
          "description": "A list of roles that apply to the user",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "smapLimit": {
          "format": "int32",
          "description": "Maximum number of smaps that this user is allowed to publish. A value of null means unlimited.",
          "type": "integer",
          "readOnly": true
        },
        "publisher": {
          "description": "A text describing the publisher to its users.",
          "type": "string",
          "readOnly": true
        },
        "source": {
          "description": "The origin of the subscription.",
          "enum": [
            "SmapOne",
            "Telekom",
            "Apple",
            "Stripe"
          ],
          "type": "string",
          "readOnly": true
        },
        "isInternal": {
          "description": "Indicates that this account is internally used by smapOne.",
          "type": "boolean",
          "readOnly": true
        },
        "userLimit": {
          "format": "int32",
          "description": "The maximum of users that the creator can create",
          "type": "integer",
          "readOnly": true
        },
        "publishedSmaps": {
          "format": "int32",
          "description": "Number of published smaps of this account",
          "type": "integer",
          "readOnly": true
        },
        "availableFeatures": {
          "description": "A list of available features for this account",
          "type": "array",
          "items": {
            "enum": [
              "CustomReportTemplates",
              "ReportMasterTemplate",
              "GroupLicenses",
              "AppDataLink",
              "RecordBulkDownload",
              "DataNotifications",
              "DataNotificationCopy",
              "RestAPI",
              "MasterImpersonification",
              "SubscriptionRoles",
              "DataNotificationCopyV2",
              "CreateTasks",
              "CompanyTemplates",
              "SmapVersionDeletion",
              "PdfSigning",
              "PublicDataFilesAccess",
              "DataGridV2",
              "ExcelExportV2",
              "MarkAsExported",
              "SendHiddenPushMessagesToIOS",
              "AllowWebPurchase",
              "None"
            ],
            "type": "string"
          },
          "readOnly": true
        },
        "settings": {
          "description": "Custom settings stored on this account. Will only be output if the \"embed\" parameter is set on the request.",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "culture": {
          "description": "Currently selected culture for this account. Given as two digit culture code, e.g. \"en\".",
          "type": "string"
        }
      }
    },
    "Cust": {
      "type": "object",
      "properties": {},
      "additionalProperties": true
    },
    "AccountStatistics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "subscriptionType": {
          "enum": [
            "None",
            "Guest",
            "Free",
            "Smart",
            "AppPlan",
            "Business",
            "Enterprise",
            "Freemium",
            "Unlimited"
          ],
          "type": "string",
          "readOnly": true
        },
        "subscriptionTypeChanged": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "subscriptionTypeTitle": {
          "type": "string",
          "readOnly": true
        },
        "subscriptionTypeValue": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "isMasterSubscription": {
          "type": "boolean",
          "readOnly": true
        },
        "smapLimit": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "groupCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "trialDurationInDays": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "daysLeftForTrial": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "userCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "userLimit": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "daysSinceCreation": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "culture": {
          "type": "string",
          "readOnly": true
        },
        "langCode": {
          "type": "string",
          "readOnly": true
        },
        "isInternal": {
          "type": "boolean",
          "readOnly": true
        },
        "systemVersion": {
          "type": "string",
          "readOnly": true
        },
        "domain": {
          "type": "string",
          "readOnly": true
        },
        "isChildSubscription": {
          "type": "boolean",
          "readOnly": true
        },
        "isImpersonating": {
          "type": "boolean",
          "readOnly": true
        },
        "dataCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "smapCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "publishedSmapCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "notPublishedSmapCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "distributedSmapCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "installedSmapsCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "groupLicenseCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "lastSmapId": {
          "type": "string",
          "readOnly": true
        },
        "previewSmapCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DataSourceListModel": {
      "description": "Source Model",
      "type": "object",
      "properties": {
        "createdDate": {
          "format": "date-time",
          "description": "Date when the datasource was created",
          "type": "string",
          "readOnly": true
        },
        "latestVersion": {
          "description": "The latest version available for this datasource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the datasource",
          "type": "string",
          "readOnly": true
        },
        "dataSourceId": {
          "description": "The id of the datasource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the datasource.",
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "CreatedDate": "2022-11-05T22:03:34.1231994Z",
        "LatestVersion": "2.0",
        "Type": "StaticTable",
        "DataSourceId": "afbb1edc-3129-419c-94de-e38301c42dc2",
        "Name": "Categories"
      }
    },
    "DataSourceVersionModel": {
      "description": "Data Source Version Model",
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/AbstractDataSourceDefinition"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this version of the data source was created",
          "type": "string"
        },
        "version": {
          "description": "The version number of this data source version",
          "type": "string"
        },
        "dataSourceId": {
          "description": "The id of the data source",
          "type": "string"
        },
        "name": {
          "description": "The name of the data source.",
          "type": "string"
        }
      },
      "example": {
        "CreatedDate": "2022-11-05T22:03:34.1700651Z",
        "Version": "2.0",
        "DataSourceId": "80c2d681-be99-49ea-a9bc-8e08fc781c86",
        "Name": "Testdata"
      }
    },
    "AbstractDataSourceDefinition": {
      "description": "The definition of this data source version",
      "required": [
        "title",
        "type",
        "id",
        "dataSourceId"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "StaticTable"
          ]
        },
        "id": {
          "type": "string"
        },
        "dataSourceId": {
          "description": "The id of the data source",
          "type": "string"
        }
      },
      "example": {
        "Columns": [
          {
            "ColumnId": "guid",
            "Title": "",
            "DataType": "String"
          },
          {
            "ColumnId": "balance",
            "Title": "",
            "DataType": "String"
          },
          {
            "ColumnId": "name",
            "Title": "",
            "DataType": "String"
          }
        ],
        "Type": "StaticTable",
        "Values": [
          {
            "guid": "844c9fe0-81d3-4512-a835-2d0164a7d1a4",
            "balance": "$1,856.96",
            "name": "Franck Ribery"
          },
          {
            "guid": "e81d0854-9455-44ea-b3ab-ce7da12c2788",
            "balance": "$2,507.11",
            "name": "Thomas Valenzuela"
          },
          {
            "guid": "2770751d-61d8-42a0-bf8e-36e723c78b5a",
            "balance": "$3,241.55",
            "name": "Thomas Doyle"
          }
        ],
        "Title": "Testdata",
        "_partitionKey": "00000000-0000-0000-0000-000000000000"
      }
    },
    "DataSourceModel": {
      "description": "Source Model",
      "type": "object",
      "properties": {
        "dataSourceId": {
          "description": "The id of the data source",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the data source",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the data source",
          "type": "string",
          "readOnly": true
        },
        "createdDate": {
          "format": "date-time",
          "description": "Date when the data source was created",
          "type": "string",
          "readOnly": true
        },
        "latestVersion": {
          "description": "The latest version available for this data source",
          "type": "string",
          "readOnly": true
        },
        "usedInSmaps": {
          "description": "smaps that use this data source",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceSmapModel"
          },
          "readOnly": true
        }
      },
      "example": {
        "DataSourceId": "6bbe6282-47d9-4a8f-8cc5-da1604be1afb",
        "Type": "StaticTable",
        "Name": "Categories",
        "CreatedDate": "2022-11-05T22:03:34.3106877Z",
        "LatestVersion": "2.0",
        "UsedInSmaps": [
          {
            "SmapName": "My First smap",
            "SmapId": "c3681f17-1b42-4113-8769-c56f0c180fa0"
          },
          {
            "SmapName": "My Second smap",
            "SmapId": "ea3baac7-47d1-430c-b2e1-1ae03d5055b5"
          }
        ]
      }
    },
    "DataSourceSmapModel": {
      "description": "Describes a smap",
      "type": "object",
      "properties": {
        "smapName": {
          "description": "Name of a smap",
          "type": "string"
        },
        "smapId": {
          "description": "Id of a smap",
          "type": "string"
        }
      }
    },
    "SmapModel": {
      "description": "Basic information about a smap",
      "type": "object",
      "properties": {
        "groupLicenseCount": {
          "format": "int32",
          "description": "Count of group licenses",
          "type": "integer"
        },
        "changeType": {
          "description": "Indicates what kind of changes have been made to the smap compared to the last published version.",
          "enum": [
            "None",
            "Minor",
            "Major",
            "Incomplete",
            "PreviewPossible"
          ],
          "type": "string"
        },
        "userLicenseCount": {
          "format": "int32",
          "description": "Count of user licenses",
          "type": "integer"
        },
        "lastChanged": {
          "format": "date-time",
          "description": "Date when that last change has been made to the smap",
          "type": "string"
        },
        "isUpToDate": {
          "description": "Indicates that the smap has not been changed since it was last published",
          "type": "boolean"
        },
        "installationsCount": {
          "format": "int32",
          "description": "Number of installations of the smap",
          "type": "integer"
        },
        "lastPublishedVersion": {
          "$ref": "#/definitions/SmapVersionModel"
        },
        "totalDataCount": {
          "format": "int32",
          "description": "Count of all data records for all versions of a smap",
          "type": "integer"
        },
        "totalOpenTasksCount": {
          "format": "int32",
          "description": "Number of open tasks for this smap",
          "type": "integer"
        },
        "tasksActivated": {
          "description": "Indicates that the option to create tasks from data records is activated for this smap.",
          "type": "boolean"
        },
        "isCompanyTemplate": {
          "description": "Indicates if this smap was made available as company template",
          "type": "boolean"
        },
        "name": {
          "description": "Name of a smap",
          "type": "string",
          "readOnly": true
        },
        "smapId": {
          "description": "Id of a smap",
          "type": "string",
          "readOnly": true
        },
        "logoId": {
          "description": "Id for the logo of a smap",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SmapVersionModel": {
      "description": "Info to a Smap-Version",
      "type": "object",
      "properties": {
        "lastChanged": {
          "format": "date-time",
          "description": "Date when this version was published. For version 0.0 (edit version) it shows when the last change was made to the smap.",
          "type": "string"
        },
        "lastRecordReceived": {
          "format": "date-time",
          "description": "Date when last data record has been received for this version of a smap",
          "type": "string"
        },
        "dataCount": {
          "format": "int32",
          "description": "Number of data records for this smap version",
          "type": "integer"
        },
        "smapVersionId": {
          "description": "The id of this version of a smap",
          "type": "string"
        },
        "version": {
          "description": "The version number of this version of a smap",
          "type": "string"
        }
      }
    },
    "DataRecordApi": {
      "description": "REST API model for data records",
      "type": "object",
      "properties": {
        "schemaVersion": {
          "format": "int32",
          "description": "Data format version",
          "type": "integer",
          "enum": [
            1
          ]
        },
        "id": {
          "description": "Identifier of the data record",
          "type": "string",
          "readOnly": true
        },
        "recordType": {
          "description": "Describes the type of the data record. It is either a task or a self-created data record.",
          "enum": [
            "Task",
            "Record"
          ],
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Identifier of the subscription which the data record and the according smap belongs to.",
          "type": "string",
          "readOnly": true
        },
        "smapId": {
          "description": "Identifier of a smap the data record belongs to.",
          "type": "string",
          "readOnly": true
        },
        "smapVersionId": {
          "description": "Identifier of a smap version the data record belongs to.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Human-readable smap version the data record belongs to.",
          "type": "string",
          "readOnly": true
        },
        "tokenId": {
          "description": "Identifier of a smap token with which the data record was created.",
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "description": "Identifier of the user who created the data record",
          "type": "string",
          "readOnly": true
        },
        "userEmail": {
          "description": "Email address of the user who created the data record",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "Name of the user who created the data record. Attention: When the data record was created via an anonymous license, this field has an unreadable unique identifier in it.",
          "type": "string",
          "readOnly": true
        },
        "sendDate": {
          "format": "date-time",
          "description": "Time stamp when the data record was completed by the user and queued for sending to the server in the smapOne App.",
          "type": "string",
          "readOnly": true
        },
        "clientCreatedDate": {
          "format": "date-time",
          "description": "Time stamp of when a data record was forwarded by the user and thus became a task.",
          "type": "string"
        },
        "receivedDate": {
          "format": "date-time",
          "description": "Time stamp at which the data record was received by the server. This will be set when the record itself has been transferred to the server, but the associated files might not have yet. This time stamp will be later than sendDate but before completedDate.",
          "type": "string",
          "readOnly": true
        },
        "completedDate": {
          "format": "date-time",
          "description": "Time stamp at which the completed data record itself and all referenced files were completely transferred to and received by the server.",
          "type": "string",
          "readOnly": true
        },
        "deletedDate": {
          "format": "date-time",
          "description": "Time stamp at which the data record was deleted",
          "type": "string",
          "readOnly": true
        },
        "lastExportDate": {
          "format": "date-time",
          "description": "Time stamp when the data record was exported the last time",
          "type": "string",
          "readOnly": true
        },
        "toCompleteOn": {
          "format": "date-time",
          "description": "The date on which the data record is to be published",
          "type": "string",
          "readOnly": true
        },
        "title": {
          "description": "Name of the task or data record.",
          "type": "string",
          "readOnly": true
        },
        "comment": {
          "description": "Single comment to a task",
          "type": "string",
          "readOnly": true
        },
        "data": {
          "description": "The collected data from the smap. A list of key value pairs where the key is the id of each module of a smap and the value is the actual data from that module."
        }
      },
      "example": {
        "SchemaVersion": 2,
        "id": "1975c77d-bb18-4ccc-9378-97e0842a4ca4",
        "RecordType": "Record",
        "SubscriptionId": "5b649e3c-b4e3-4c79-89da-81213af3a3fc",
        "SmapId": "e7310b21-2743-4b9d-a6f0-ab7007476394",
        "SmapVersionId": "c457904b-452d-4c05-ac21-e8bab4338076",
        "Version": "2.1",
        "TokenId": "7070e1e4-3887-4a79-9ee9-5cf06549cb6b",
        "UserId": "a5ad71a6-bb40-4c61-b29d-a9a36832bfed",
        "UserEmail": "user@example.com",
        "UserName": "User Example Name",
        "SendDate": "2022-11-05T22:03:36.2794541Z",
        "ClientCreatedDate": "0001-01-01T00:00:00",
        "ReceivedDate": "2022-11-05T22:03:36.2794541Z",
        "CompletedDate": "2022-11-05T22:03:36.2794541Z",
        "DeletedDate": "2022-11-05T22:03:36.2794541Z",
        "Title": "Example Title",
        "Data": {
          "number": 2.99,
          "checkbox": true
        }
      }
    },
    "CreateTaskDto": {
      "required": [
        "title",
        "data"
      ],
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string"
        },
        "title": {
          "description": "The name of the task",
          "type": "string"
        },
        "comment": {
          "description": "Comment from the creator of the task",
          "type": "string"
        },
        "hasPriority": {
          "description": "Task is prioritized",
          "type": "boolean"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "SingleFileValue": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "checkSum": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/FileMetaData"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "FileMetaData": {
      "type": "object",
      "properties": {
        "audioDuration": {
          "type": "string"
        }
      }
    },
    "AbstractDataSource": {
      "required": [
        "dataSourceId",
        "title"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the data source",
          "type": "string",
          "readOnly": true
        },
        "dataSourceId": {
          "description": "Id of the data source",
          "type": "string"
        },
        "title": {
          "description": "A title describing the data source",
          "type": "string"
        }
      },
      "example": [
        {
          "DataSourceId": "c130c0eb-6901-4f3d-95d1-fe408e62fc16",
          "Type": "DataSource",
          "Title": "Test data"
        },
        {
          "Type": "DataSourceReference",
          "DataSourceId": "1",
          "Title": "Test data"
        },
        {
          "Values": [
            "Choice A",
            "Choice B",
            "Choice C"
          ],
          "Type": "StaticStringList",
          "DataSourceId": "2",
          "Title": "Test data"
        }
      ]
    },
    "Version": {
      "type": "object",
      "properties": {
        "major": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "minor": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Major": 1,
        "Minor": 0,
        "Build": -1,
        "Revision": -1,
        "MajorRevision": -1,
        "MinorRevision": -1
      }
    },
    "DataRecordSetState": {
      "type": "object",
      "properties": {
        "action": {
          "enum": [
            "Assign",
            "Remove"
          ],
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "JSchema": {
      "type": "object"
    },
    "JsonValidator": {
      "type": "object",
      "properties": {}
    },
    "Creator": {
      "description": "Managed Subscription also named Creator",
      "type": "object",
      "properties": {
        "costCenter": {
          "description": "Cost Center of the managed subscription",
          "type": "string"
        },
        "userId": {
          "description": "User Id",
          "type": "string"
        },
        "email": {
          "description": "Email address of the Creator (subscription owner)",
          "type": "string"
        },
        "title": {
          "description": "Title of the subscription",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "Date when this subscription was created",
          "type": "string"
        },
        "lastLoginTime": {
          "format": "date-time",
          "description": "Date of the last login to the subscription",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Id of the subscription",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher name for the subscription",
          "type": "string"
        },
        "smapCount": {
          "format": "int32",
          "description": "Number of smaps of the subscription",
          "type": "integer"
        },
        "installationCount": {
          "format": "int32",
          "description": "Number of active installations for all smaps of the subscription",
          "type": "integer"
        },
        "dataCount": {
          "format": "int32",
          "description": "Number of all data records for all smaps of the subscription",
          "type": "integer"
        },
        "userCount": {
          "format": "int32",
          "description": "Number of smap users of the subscription",
          "type": "integer"
        },
        "apiToken": {
          "description": "REST API Token of the subscription",
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Token": {
      "type": "apiKey",
      "in": "query",
      "name": "accessToken"
    }
  },
  "security": [
    {
      "API Token": []
    }
  ],
  "tags": []
}
