{
  "basePath": "/",
  "consumes": [],
  "definitions": {
    "Address": {
      "properties": {
        "city": {
          "type": "string",
          "x-ms-summary": "City"
        },
        "country": {
          "$ref": "#/definitions/Country",
          "x-ms-summary": "Country"
        },
        "countryIso": {
          "type": "string",
          "x-ms-summary": "Country Iso"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "houseNumber": {
          "type": "string",
          "x-ms-summary": "House Number"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "postalCode": {
          "type": "string",
          "x-ms-summary": "Postal Code"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "streetName": {
          "type": "string",
          "x-ms-summary": "Street Name"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "AfterOrderText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "AssociatedFeatureProperty": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "feature": {
          "$ref": "#/definitions/Feature",
          "x-ms-summary": "Feature"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "featurePropertyId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Property Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "BulkJsonPatchDocument[Quotation]": {
      "properties": {
        "ids": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Ids"
        },
        "operations": {
          "items": {
            "$ref": "#/definitions/Operation[Quotation]"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Operations"
        },
        "patchDocuments": {
          "items": {
            "$ref": "#/definitions/JsonPatchDocument[Quotation]"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Patch Documents"
        }
      },
      "type": "object"
    },
    "CameraPosition": {
      "properties": {
        "cameraFov": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Fov"
        },
        "cameraPivotX": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pivot X"
        },
        "cameraPivotY": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pivot Y"
        },
        "cameraPivotZ": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pivot Z"
        },
        "cameraPosX": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pos X"
        },
        "cameraPosY": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pos Y"
        },
        "cameraPosZ": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Pos Z"
        },
        "cameraTargetX": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Target X"
        },
        "cameraTargetY": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Target Y"
        },
        "cameraTargetZ": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera Target Z"
        },
        "cameraWorldUpX": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera World Up X"
        },
        "cameraWorldUpY": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera World Up Y"
        },
        "cameraWorldUpZ": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Camera World Up Z"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelNode": {
          "$ref": "#/definitions/FeatureModelNode",
          "x-ms-summary": "Feature Model Node"
        },
        "featureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Node Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "rotationX": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rotation X"
        },
        "rotationY": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rotation Y"
        },
        "rotationZ": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rotation Z"
        },
        "state": {
          "type": "string",
          "x-ms-summary": "State"
        },
        "stepId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Step Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "Category": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "linkedFeatures": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Linked Features"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "order": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Order"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "parentId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Parent Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "texts": {
          "items": {
            "$ref": "#/definitions/CategoryText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Texts"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "CategoryText": {
      "properties": {
        "categoryId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Category Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "ConfiguratorImage": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelNodeIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Feature Model Node Ids"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "isHidden": {
          "type": "boolean",
          "x-ms-summary": "Is Hidden"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "stepId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Step Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "type": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url"
        },
        "x": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "X"
        },
        "y": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Y"
        },
        "z": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Z"
        }
      },
      "type": "object"
    },
    "Country": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-ms-summary": "Active"
        },
        "capital": {
          "type": "string",
          "x-ms-summary": "Capital"
        },
        "englishName": {
          "type": "string",
          "x-ms-summary": "English Name"
        },
        "iso": {
          "type": "string",
          "x-ms-summary": "Iso"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "phonePrefix": {
          "type": "string",
          "x-ms-summary": "Phone Prefix"
        }
      },
      "type": "object"
    },
    "CrmAccount": {
      "properties": {
        "city": {
          "type": "string",
          "x-ms-summary": "City"
        },
        "cocNumber": {
          "type": "string",
          "x-ms-summary": "C O C Number"
        },
        "companyName": {
          "type": "string",
          "x-ms-summary": "Company Name"
        },
        "contacts": {
          "items": {
            "$ref": "#/definitions/CrmContact"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Contacts"
        },
        "country": {
          "type": "string",
          "x-ms-summary": "Country"
        },
        "countryIso": {
          "maxLength": 2,
          "type": "string",
          "x-ms-summary": "Country Iso"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "customerReference": {
          "type": "string",
          "x-ms-summary": "Customer Reference"
        },
        "defaultContact": {
          "$ref": "#/definitions/CrmContact",
          "x-ms-summary": "Default Contact"
        },
        "defaultContactId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Default Contact Id"
        },
        "defaultVatId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Default Vat Id"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Email"
        },
        "firstName": {
          "type": "string",
          "x-ms-summary": "First Name"
        },
        "fullLastName": {
          "type": "string",
          "x-ms-summary": "Full Last Name"
        },
        "fullName": {
          "type": "string",
          "x-ms-summary": "Full Name"
        },
        "houseNumber": {
          "type": "string",
          "x-ms-summary": "House Number"
        },
        "iban": {
          "type": "string",
          "x-ms-summary": "I B A N"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "lastName": {
          "type": "string",
          "x-ms-summary": "Last Name"
        },
        "lastNamePrefix": {
          "type": "string",
          "x-ms-summary": "Last Name Prefix"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "phone1": {
          "type": "string",
          "x-ms-summary": "Phone1"
        },
        "phone2": {
          "type": "string",
          "x-ms-summary": "Phone2"
        },
        "postalCode": {
          "type": "string",
          "x-ms-summary": "Postal Code"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "salutation": {
          "type": "string",
          "x-ms-summary": "Salutation"
        },
        "shoeSize": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Shoe Size"
        },
        "streetName": {
          "type": "string",
          "x-ms-summary": "Street Name"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "type": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "vatNumber": {
          "type": "string",
          "x-ms-summary": "V A T Number"
        }
      },
      "type": "object"
    },
    "CrmContact": {
      "properties": {
        "city": {
          "type": "string",
          "x-ms-summary": "City"
        },
        "companyName": {
          "type": "string",
          "x-ms-summary": "Company Name"
        },
        "contactReference": {
          "type": "string",
          "x-ms-summary": "Contact Reference"
        },
        "countryIso": {
          "maxLength": 2,
          "type": "string",
          "x-ms-summary": "Country Iso"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "crmAccountId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Crm Account Id"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Email"
        },
        "firstName": {
          "type": "string",
          "x-ms-summary": "First Name"
        },
        "fullLastName": {
          "type": "string",
          "x-ms-summary": "Full Last Name"
        },
        "fullName": {
          "type": "string",
          "x-ms-summary": "Full Name"
        },
        "houseNumber": {
          "type": "string",
          "x-ms-summary": "House Number"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "lastName": {
          "type": "string",
          "x-ms-summary": "Last Name"
        },
        "lastNamePrefix": {
          "type": "string",
          "x-ms-summary": "Last Name Prefix"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "phone1": {
          "type": "string",
          "x-ms-summary": "Phone1"
        },
        "phone2": {
          "type": "string",
          "x-ms-summary": "Phone2"
        },
        "postalCode": {
          "type": "string",
          "x-ms-summary": "Postal Code"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "salutation": {
          "type": "string",
          "x-ms-summary": "Salutation"
        },
        "streetName": {
          "type": "string",
          "x-ms-summary": "Street Name"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "useParentAddress": {
          "type": "boolean",
          "x-ms-summary": "Use Parent Address"
        }
      },
      "type": "object"
    },
    "Currency": {
      "properties": {
        "decimalDigits": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Decimal Digits"
        },
        "iso": {
          "type": "string",
          "x-ms-summary": "Iso"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "namePlural": {
          "type": "string",
          "x-ms-summary": "Name Plural"
        },
        "rounding": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rounding"
        },
        "symbol": {
          "type": "string",
          "x-ms-summary": "Symbol"
        }
      },
      "type": "object"
    },
    "ExchangeRate": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "currencyIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Currency Iso"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "rate": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rate"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "Expression": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "expressionString": {
          "type": "string",
          "x-ms-summary": "Expression String"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "variables": {
          "items": {
            "$ref": "#/definitions/ExpressionVariable"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Variables"
        }
      },
      "type": "object"
    },
    "ExpressionVariable": {
      "properties": {
        "children": {
          "type": "boolean",
          "x-ms-summary": "Children"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "exists": {
          "type": "boolean",
          "x-ms-summary": "Exists"
        },
        "expressionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Expression Id"
        },
        "featurePropertyId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Property Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "nodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Node Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "tag": {
          "type": "string",
          "x-ms-summary": "Tag"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "useUnitPrice": {
          "type": "boolean",
          "x-ms-summary": "Use Unit Price"
        }
      },
      "type": "object"
    },
    "Feature": {
      "properties": {
        "articleCode": {
          "type": "string",
          "x-ms-summary": "Article Code"
        },
        "cardImageUrl": {
          "type": "string",
          "x-ms-summary": "Card Image Url"
        },
        "category": {
          "$ref": "#/definitions/Category",
          "x-ms-summary": "Category"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Category Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "disallowDiscount": {
          "type": "boolean",
          "x-ms-summary": "Disallow Discount"
        },
        "hiddenThreeDModelItems": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Hidden Three D Model Items"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "marginPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin Pct"
        },
        "maxValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Max Value"
        },
        "minValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Min Value"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "packingUnit": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Packing Unit"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "salesPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Sales Price"
        },
        "salesPriceLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Sales Price Label"
        },
        "stepValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Step Value"
        },
        "subcategoryIds": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Subcategory Ids"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Tags"
        },
        "texts": {
          "items": {
            "$ref": "#/definitions/FeatureText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Texts"
        },
        "threeDModelItems": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Three D Model Items"
        },
        "type": {
          "enum": [
            0,
            2,
            3
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "unitOfMeasurement": {
          "$ref": "#/definitions/UnitOfMeasurement",
          "x-ms-summary": "Unit Of Measurement"
        },
        "unitOfMeasurementId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Unit Of Measurement Id"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "vatId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "V A T Id"
        }
      },
      "type": "object"
    },
    "FeatureHasFeatureProperty": {
      "properties": {
        "associatedFeatureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Associated Feature Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "featurePropertyId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Property Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "textValue": {
          "type": "string",
          "x-ms-summary": "Text Value"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "FeatureModel": {
      "properties": {
        "attachmentNodes": {
          "items": {
            "$ref": "#/definitions/FeatureModelAttachmentNode"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Attachment Nodes"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "displayPrices": {
          "type": "boolean",
          "x-ms-summary": "Display Prices"
        },
        "dynamicGroups": {
          "items": {
            "$ref": "#/definitions/FeatureModelDynamicGroup"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Dynamic Groups"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "nodes": {
          "items": {
            "$ref": "#/definitions/FeatureModelNode"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Nodes"
        },
        "order": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Order"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "relationships": {
          "items": {
            "$ref": "#/definitions/FeatureModelRelationship"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Relationships"
        },
        "revisionOf": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Revision Of"
        },
        "rootFeatureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Root Feature Id"
        },
        "status": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Status"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureModelAttachmentNode": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "rotation": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Rotation"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "x": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "X"
        },
        "y": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Y"
        },
        "z": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Z"
        }
      },
      "type": "object"
    },
    "FeatureModelDynamicGroup": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "featureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Node Id"
        },
        "filters": {
          "items": {
            "$ref": "#/definitions/FeatureModelDynamicGroupFilter"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Filters"
        },
        "hideInConfigurator": {
          "type": "boolean",
          "x-ms-summary": "Hide In Configurator"
        },
        "hideInOrderEntry": {
          "type": "boolean",
          "x-ms-summary": "Hide In Order Entry"
        },
        "hideInQuotation": {
          "type": "boolean",
          "x-ms-summary": "Hide In Quotation"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "orderByFeatureProperty": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Order By Feature Property"
        },
        "orderByPrice": {
          "type": "boolean",
          "x-ms-summary": "Order By Price"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "relationshipType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Relationship Type"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureModelDynamicGroupFilter": {
      "properties": {
        "associatedFeature": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Associated Feature"
        },
        "associatedFeatureParentId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Associated Feature Parent Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelDynamicGroupFilterValueType": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Feature Model Dynamic Group Filter Value Type"
        },
        "featureModelDynamicGroupId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Dynamic Group Id"
        },
        "featurePropertyId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Property Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Value"
        },
        "valueFeatureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Value Feature Model Node Id"
        }
      },
      "type": "object"
    },
    "FeatureModelNode": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "defaultValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Default Value"
        },
        "divergentPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Divergent Price"
        },
        "divergentPriceExpressionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Divergent Price Expression Id"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "hiddenThreeDModelItems": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Hidden Three D Model Items"
        },
        "hideInConfigurator": {
          "type": "boolean",
          "x-ms-summary": "Hide In Configurator"
        },
        "hideInOrderEntry": {
          "type": "boolean",
          "x-ms-summary": "Hide In Order Entry"
        },
        "hideInQuotation": {
          "type": "boolean",
          "x-ms-summary": "Hide In Quotation"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "infoField": {
          "type": "string",
          "x-ms-summary": "Info Field"
        },
        "isMandatory": {
          "type": "boolean",
          "x-ms-summary": "Is Mandatory"
        },
        "isPhantom": {
          "type": "boolean",
          "x-ms-summary": "Is Phantom"
        },
        "isPreconfiguration": {
          "type": "boolean",
          "x-ms-summary": "Is Preconfiguration"
        },
        "isQuotationGroup": {
          "type": "boolean",
          "x-ms-summary": "Is Quotation Group"
        },
        "maxValueExpressionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Max Value Expression Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "threeDModelItems": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Three D Model Items"
        },
        "totalPriceExVAT": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Price Ex V A T"
        },
        "totalPriceExVATLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Total Price Ex V A T Label"
        },
        "totalPriceIncVAT": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Price Inc V A T"
        },
        "totalPriceIncVATLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Total Price Inc V A T Label"
        },
        "unitPriceExVAT": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unit Price Ex V A T"
        },
        "unitPriceExVATExExchangeRate": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unit Price Ex V A T Ex Exchange Rate"
        },
        "unitPriceExVATLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Unit Price Ex V A T Label"
        },
        "unitPriceIncVAT": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unit Price Inc V A T"
        },
        "unitPriceIncVATLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Unit Price Inc V A T Label"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureModelRelationship": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "default": {
          "type": "boolean",
          "x-ms-summary": "Default"
        },
        "displaySeperateBlade": {
          "type": "boolean",
          "x-ms-summary": "Display Seperate Blade"
        },
        "displayType": {
          "enum": [
            0,
            1,
            2,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Display Type"
        },
        "expressionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Expression Id"
        },
        "featureModelDynamicGroupFromId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Dynamic Group From Id"
        },
        "featureModelDynamicGroupToId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Dynamic Group To Id"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "fromNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "From Node Id"
        },
        "hideExcludeInView": {
          "type": "boolean",
          "x-ms-summary": "Hide Exclude In View"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "impliesExpression": {
          "type": "string",
          "x-ms-summary": "Implies Expression"
        },
        "impliesFromValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Implies From Value"
        },
        "impliesRoundingType": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Implies Rounding Type"
        },
        "impliesToValue": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Implies To Value"
        },
        "impliesType": {
          "enum": [
            0,
            1,
            3
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Implies Type"
        },
        "isDefaultSelector": {
          "type": "boolean",
          "x-ms-summary": "Is Default Selector"
        },
        "order": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Order"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "toNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "To Node Id"
        },
        "type": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureModelRelationshipCondition": {
      "properties": {
        "conditionExpression": {
          "$ref": "#/definitions/Expression",
          "x-ms-summary": "Condition Expression"
        },
        "conditionExpressionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Condition Expression Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelRelationshipId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Relationship Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureProperty": {
      "properties": {
        "associatedFeatures": {
          "items": {
            "$ref": "#/definitions/AssociatedFeatureProperty"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Associated Features"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "single": {
          "type": "boolean",
          "x-ms-summary": "Single"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "type": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "FeatureText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "type": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "FileEntity": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url"
        }
      },
      "type": "object"
    },
    "Hotspot": {
      "properties": {
        "color": {
          "type": "string",
          "x-ms-summary": "Color"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Node Id"
        },
        "guidedSellingNodeIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Guided Selling Node Ids"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "parentFeatureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Parent Feature Model Node Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "showMoreInfo": {
          "type": "boolean",
          "x-ms-summary": "Show More Info"
        },
        "stepId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Step Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "x": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "X"
        },
        "y": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Y"
        },
        "z": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Z"
        }
      },
      "type": "object"
    },
    "JsonPatchDocument[Quotation]": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "#/definitions/Operation[Quotation]"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Operations"
        }
      },
      "type": "object"
    },
    "MaterialList": {
      "properties": {
        "articleCode": {
          "type": "string",
          "x-ms-summary": "Article Code"
        },
        "customerReference": {
          "type": "string",
          "x-ms-summary": "Customer Reference"
        },
        "lines": {
          "items": {
            "$ref": "#/definitions/MaterialListLine"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Lines"
        },
        "quotationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Id"
        },
        "totalMarginPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Margin Price"
        },
        "totalPriceDifference": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Price Difference"
        },
        "totalPriceDifferenceIncVAT": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Price Difference Inc V A T"
        },
        "totalPurchasePrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Purchase Price"
        },
        "wholeSaleDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Whole Sale Discount Pct"
        }
      },
      "type": "object"
    },
    "MaterialListLine": {
      "properties": {
        "articleCode": {
          "type": "string",
          "x-ms-summary": "Article Code"
        },
        "cardImageUrl": {
          "type": "string",
          "x-ms-summary": "Card Image Url"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "extendedDescription": {
          "type": "string",
          "x-ms-summary": "Extended Description"
        },
        "feature": {
          "$ref": "#/definitions/Feature",
          "x-ms-summary": "Feature"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "marginPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin Pct"
        },
        "marginPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin Price"
        },
        "marginPriceLabel": {
          "type": "string",
          "x-ms-summary": "Margin Price Label"
        },
        "moreInfo": {
          "type": "string",
          "x-ms-summary": "More Info"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "priceDifference": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Price Difference"
        },
        "priceDifferenceLabel": {
          "type": "string",
          "x-ms-summary": "Price Difference Label"
        },
        "purchasePrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Purchase Price"
        },
        "purchasePriceLabel": {
          "type": "string",
          "x-ms-summary": "Purchase Price Label"
        },
        "quantity": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Quantity"
        },
        "quantityDifference": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Quantity Difference"
        },
        "quantityFormatted": {
          "type": "string",
          "x-ms-summary": "Quantity Formatted"
        },
        "quotationText": {
          "type": "string",
          "x-ms-summary": "Quotation Text"
        },
        "textValue": {
          "type": "string",
          "x-ms-summary": "Text Value"
        },
        "totalExclPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Excl Price"
        },
        "totalInclPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Incl Price"
        },
        "totalPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Price"
        },
        "totalPriceExclLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Excl Label"
        },
        "totalPriceInclVATLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Incl V A T Label"
        },
        "unitPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unit Price"
        },
        "unitPriceLabel": {
          "type": "string",
          "x-ms-summary": "Unit Price Label"
        },
        "uom": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Uom"
        },
        "vat": {
          "$ref": "#/definitions/VAT",
          "x-ms-summary": "V A T"
        },
        "vatId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "V A T Id"
        }
      },
      "type": "object"
    },
    "NotificationViewModel": {
      "properties": {
        "cancelText": {
          "type": "string",
          "x-ms-summary": "Cancel Text"
        },
        "confirmText": {
          "type": "string",
          "x-ms-summary": "Confirm Text"
        },
        "content": {
          "type": "string",
          "x-ms-summary": "Content"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Title"
        },
        "userId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "User Id"
        }
      },
      "type": "object"
    },
    "Operation": {
      "properties": {
        "from": {
          "type": "string",
          "x-ms-summary": "From",
          "x-ms-visibility": "internal"
        },
        "op": {
          "default": "replace",
          "type": "string",
          "x-ms-summary": "Op",
          "x-ms-visibility": "internal"
        },
        "path": {
          "type": "string",
          "x-ms-summary": "Path"
        },
        "value": {
          "type": "object",
          "x-ms-summary": "Value"
        }
      },
      "required": [
        "op"
      ],
      "type": "object"
    },
    "Operation[Quotation]": {
      "properties": {
        "from": {
          "type": "string",
          "x-ms-summary": "From"
        },
        "op": {
          "type": "string",
          "x-ms-summary": "Op"
        },
        "path": {
          "type": "string",
          "x-ms-summary": "Path"
        },
        "value": {
          "type": "object",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "Organization": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "currencyIso": {
          "type": "string",
          "x-ms-summary": "Currency Iso"
        },
        "defaultDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Default Discount Pct"
        },
        "defaultUpValuePct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Default Up Value Pct"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "OrganizationSellsFeature": {
      "properties": {
        "allowedToSell": {
          "type": "boolean",
          "x-ms-summary": "Allowed To Sell"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "purchaseDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Purchase Discount Pct"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "upValuePct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Up Value Pct"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "OrganizationSellsFeatureModel": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organization": {
          "$ref": "#/definitions/Organization",
          "x-ms-summary": "Organization"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "purchaseDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Purchase Discount Pct"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "upValuePct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Up Value Pct"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "Quotation": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "currencyIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Currency Iso"
        },
        "customerReference": {
          "type": "string",
          "x-ms-summary": "Customer Reference"
        },
        "debtorContactId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Debtor Contact Id"
        },
        "debtorId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Debtor Id"
        },
        "deliverydate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Deliverydate"
        },
        "expiresDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Expires Date"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/QuotationFile"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Files"
        },
        "formattedVerifiedDate": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Formatted Verified Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "isExpired": {
          "readOnly": true,
          "type": "boolean",
          "x-ms-summary": "Is Expired"
        },
        "isVerified": {
          "readOnly": true,
          "type": "boolean",
          "x-ms-summary": "Is Verified"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "leaseTermAmount": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Lease Term Amount"
        },
        "leaseTermType": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Lease Term Type"
        },
        "lines": {
          "items": {
            "$ref": "#/definitions/QuotationLine"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Lines"
        },
        "margin": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "quotationNumber": {
          "format": "int64",
          "type": "integer",
          "x-ms-summary": "Quotation Number"
        },
        "quotationReference": {
          "type": "string",
          "x-ms-summary": "Quotation Reference"
        },
        "quotationTemplateId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Template Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "remarks": {
          "type": "string",
          "x-ms-summary": "Remarks"
        },
        "revisionOfId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Revision Of Id"
        },
        "sellerContactId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Seller Contact Id"
        },
        "sellerId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Seller Id"
        },
        "shipToContactId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Ship To Contact Id"
        },
        "shipToId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Ship To Id"
        },
        "status": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Status"
        },
        "statusDescription": {
          "type": "string",
          "x-ms-summary": "Status Description"
        },
        "subTotalExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Sub Total Excl Price"
        },
        "subTotalExclPriceLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Sub Total Excl Price Label"
        },
        "subTotalInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Sub Total Incl Price"
        },
        "subTotalInclPriceLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Sub Total Incl Price Label"
        },
        "subject": {
          "type": "string",
          "x-ms-summary": "Subject"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "totalDiscountAmntLabel": {
          "readOnly": true,
          "type": "string",
          "x-ms-summary": "Total Discount Amnt Label"
        },
        "totalDiscountAmt": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Discount Amt"
        },
        "totalDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Total Discount Pct"
        },
        "totalExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Excl Price"
        },
        "totalInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Incl Price"
        },
        "totalPriceExclVATLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Excl V A T Label"
        },
        "totalPriceInclVAT": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Price Incl V A T"
        },
        "totalPriceInclVATLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Incl V A T Label"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "verifiedBy": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Verified By"
        },
        "verifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Verified Date"
        },
        "versionNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Version Number"
        }
      },
      "required": [
        "lines"
      ],
      "type": "object"
    },
    "QuotationCustomMailText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "QuotationFile": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "file": {
          "$ref": "#/definitions/FileEntity",
          "x-ms-summary": "File"
        },
        "fileId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "File Id"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "quotationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "QuotationLine": {
      "properties": {
        "addedFromConfiguration": {
          "type": "boolean",
          "x-ms-summary": "Added From Configuration"
        },
        "articleCode": {
          "default": "-",
          "type": "string",
          "x-ms-summary": "Article Code"
        },
        "basePrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Base Price"
        },
        "cardImageUrl": {
          "type": "string",
          "x-ms-summary": "Card Image Url"
        },
        "configurationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Configuration Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "defaultPurchasePriceDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Default Purchase Price Discount Pct"
        },
        "deliverydate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Deliverydate"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "discountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Discount Pct"
        },
        "extendedDescription": {
          "type": "string",
          "x-ms-summary": "Extended Description"
        },
        "featureId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Id"
        },
        "featureModelNodeId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Node Id"
        },
        "groupAdditionalExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Additional Excl Price"
        },
        "groupAdditionalExclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Additional Excl Price Label"
        },
        "groupAdditionalInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Additional Incl Price"
        },
        "groupAdditionalInclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Additional Incl Price Label"
        },
        "groupBaseExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Base Excl Price"
        },
        "groupBaseExclPriceDiscountExclVat": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Base Excl Price Discount Excl Vat"
        },
        "groupBaseInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Base Incl Price"
        },
        "groupDefaultExclPriceExclDiscountLabel": {
          "type": "string",
          "x-ms-summary": "Group Default Excl Price Excl Discount Label"
        },
        "groupDefaultExclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Default Excl Price Label"
        },
        "groupDefaultInclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Default Incl Price Label"
        },
        "groupDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Group Discount Pct"
        },
        "groupExclMarginLabel": {
          "type": "string",
          "x-ms-summary": "Group Excl Margin Label"
        },
        "groupId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Group Id"
        },
        "groupMargin": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Margin"
        },
        "groupOrder": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Group Order"
        },
        "groupPriceExclLabel": {
          "type": "string",
          "x-ms-summary": "Group Price Excl Label"
        },
        "groupPriceInclLabel": {
          "type": "string",
          "x-ms-summary": "Group Price Incl Label"
        },
        "groupPurchasePrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Purchase Price"
        },
        "groupPurchasePriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Purchase Price Label"
        },
        "groupTitle": {
          "type": "string",
          "x-ms-summary": "Group Title"
        },
        "groupTotalExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Total Excl Price"
        },
        "groupTotalExclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Total Excl Price Label"
        },
        "groupTotalInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Group Total Incl Price"
        },
        "groupTotalInclPriceLabel": {
          "type": "string",
          "x-ms-summary": "Group Total Incl Price Label"
        },
        "groupedRootLine": {
          "type": "boolean",
          "x-ms-summary": "Grouped Root Line"
        },
        "hidden": {
          "type": "boolean",
          "x-ms-summary": "Hidden"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "lineNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Line Number"
        },
        "marginPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin Pct"
        },
        "moreInfo": {
          "type": "string",
          "x-ms-summary": "More Info"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "originalUnitPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Original Unit Price"
        },
        "parentLineId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Parent Line Id"
        },
        "purchasePrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Purchase Price"
        },
        "purchasePriceDiscountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Purchase Price Discount Pct"
        },
        "purchasePriceLabel": {
          "type": "string",
          "x-ms-summary": "Purchase Price Label"
        },
        "quantityAmount": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Quantity Amount"
        },
        "quantityFormatted": {
          "type": "string",
          "x-ms-summary": "Quantity Formatted"
        },
        "quotationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Id"
        },
        "quotationText": {
          "type": "string",
          "x-ms-summary": "Quotation Text"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "tenantPurchasePrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Tenant Purchase Price"
        },
        "textValue": {
          "type": "string",
          "x-ms-summary": "Text Value"
        },
        "totalExclMargin": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Excl Margin"
        },
        "totalExclMarginLabel": {
          "type": "string",
          "x-ms-summary": "Total Excl Margin Label"
        },
        "totalExclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Excl Price"
        },
        "totalExclPriceExclDiscount": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Excl Price Excl Discount"
        },
        "totalExclPriceExclDiscountLabel": {
          "type": "string",
          "x-ms-summary": "Total Excl Price Excl Discount Label"
        },
        "totalInclMargin": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Incl Margin"
        },
        "totalInclMarginLabel": {
          "type": "string",
          "x-ms-summary": "Total Incl Margin Label"
        },
        "totalInclPrice": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Total Incl Price"
        },
        "totalPriceExclLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Excl Label"
        },
        "totalPriceInclLabel": {
          "type": "string",
          "x-ms-summary": "Total Price Incl Label"
        },
        "unitPrice": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Unit Price"
        },
        "unitPriceLabel": {
          "type": "string",
          "x-ms-summary": "Unit Price Label"
        },
        "uom": {
          "type": "string",
          "x-ms-summary": "Uom"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "vatId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "V A T Id"
        }
      },
      "type": "object"
    },
    "QuotationProperty": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/QuotationPropertyField"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Fields"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "isRequired": {
          "type": "boolean",
          "x-ms-summary": "Is Required"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "QuotationPropertyField": {
      "properties": {
        "code": {
          "type": "string",
          "x-ms-summary": "Code"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "quotationPropertyId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Property Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "texts": {
          "items": {
            "$ref": "#/definitions/QuotationPropertyFieldText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Texts"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "QuotationPropertyFieldText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "quotationPropertyFieldId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Quotation Property Field Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "QuotationTemplate": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "isDefault": {
          "type": "boolean",
          "x-ms-summary": "Is Default"
        },
        "languageIso": {
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "quotationStatus": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Quotation Status"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "tenantDefaultLanguage": {
          "type": "string",
          "x-ms-summary": "Tenant Default Language"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Url"
        }
      },
      "type": "object"
    },
    "SeoDescriptionText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "SeoTitleText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "Settings": {
      "properties": {
        "accentColor": {
          "type": "string",
          "x-ms-summary": "Accent Color"
        },
        "accentFontColor": {
          "type": "string",
          "x-ms-summary": "Accent Font Color"
        },
        "address": {
          "$ref": "#/definitions/Address",
          "x-ms-summary": "Address"
        },
        "afterOrderText": {
          "type": "string",
          "x-ms-summary": "After Order Text"
        },
        "afterOrderTexts": {
          "items": {
            "$ref": "#/definitions/AfterOrderText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "After Order Texts"
        },
        "attachPdfToMail": {
          "type": "boolean",
          "x-ms-summary": "Attach Pdf To Mail"
        },
        "configuratorAdresses": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Configurator Adresses"
        },
        "configuratorTitle": {
          "type": "string",
          "x-ms-summary": "Configurator Title"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "crmAccount": {
          "$ref": "#/definitions/CrmAccount",
          "x-ms-summary": "Crm Account"
        },
        "crmAccountId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Crm Account Id"
        },
        "crn": {
          "type": "string",
          "x-ms-summary": "Crn"
        },
        "customCss": {
          "type": "string",
          "x-ms-summary": "Custom Css"
        },
        "customCssEms": {
          "type": "string",
          "x-ms-summary": "Custom Css Ems"
        },
        "defaultVat": {
          "$ref": "#/definitions/VAT",
          "x-ms-summary": "Default Vat"
        },
        "defaultVatId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Default Vat Id"
        },
        "disableConflictDialog": {
          "type": "boolean",
          "x-ms-summary": "Disable Conflict Dialog"
        },
        "disableConflictDialogOrderEntry": {
          "type": "boolean",
          "x-ms-summary": "Disable Conflict Dialog Order Entry"
        },
        "disableFullOverview": {
          "type": "boolean",
          "x-ms-summary": "Disable Full Overview"
        },
        "disableProductSelection": {
          "type": "boolean",
          "x-ms-summary": "Disable Product Selection"
        },
        "displayContactInfo": {
          "type": "boolean",
          "x-ms-summary": "Display Contact Info"
        },
        "displayVatPrices": {
          "type": "boolean",
          "x-ms-summary": "Display Vat Prices"
        },
        "divergentFeatureModelNodePrices": {
          "type": "boolean",
          "x-ms-summary": "Divergent Feature Model Node Prices"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Email"
        },
        "enableConfigurator": {
          "type": "boolean",
          "x-ms-summary": "Enable Configurator"
        },
        "enableLeaseTable": {
          "type": "boolean",
          "x-ms-summary": "Enable Lease Table"
        },
        "enableMultipleConfigurations": {
          "type": "boolean",
          "x-ms-summary": "Enable Multiple Configurations"
        },
        "enableWelcomePage": {
          "type": "boolean",
          "x-ms-summary": "Enable Welcome Page"
        },
        "facebookApiKey": {
          "type": "string",
          "x-ms-summary": "Facebook Api Key"
        },
        "faviconUrl": {
          "type": "string",
          "x-ms-summary": "Favicon Url"
        },
        "featureModelVersioning": {
          "type": "boolean",
          "x-ms-summary": "Feature Model Versioning"
        },
        "fontFamily": {
          "type": "string",
          "x-ms-summary": "Font Family"
        },
        "googleAnalyticsApiKey": {
          "type": "string",
          "x-ms-summary": "Google Analytics Api Key"
        },
        "hideQuotationDiscounts": {
          "type": "boolean",
          "x-ms-summary": "Hide Quotation Discounts"
        },
        "homeImageUrl": {
          "type": "string",
          "x-ms-summary": "Home Image Url"
        },
        "iban": {
          "type": "string",
          "x-ms-summary": "Iban"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "inMaintenance": {
          "type": "boolean",
          "x-ms-summary": "In Maintenance"
        },
        "lastQuotationDateTime": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Last Quotation Date Time"
        },
        "lightLogoUrl": {
          "type": "string",
          "x-ms-summary": "Light Logo Url"
        },
        "linkedInApiKey": {
          "type": "string",
          "x-ms-summary": "Linked In Api Key"
        },
        "loginPageBackgroundUrl": {
          "type": "string",
          "x-ms-summary": "Login Page Background Url"
        },
        "logoUrl": {
          "type": "string",
          "x-ms-summary": "Logo Url"
        },
        "mandatoryCrmValues": {
          "type": "string",
          "x-ms-summary": "Mandatory Crm Values"
        },
        "map3DToNodes": {
          "type": "boolean",
          "x-ms-summary": "Map3 D To Nodes"
        },
        "margin": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Margin"
        },
        "nextQuotationNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Next Quotation Number"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "phone": {
          "type": "string",
          "x-ms-summary": "Phone"
        },
        "priceCalculationMethod": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Price Calculation Method"
        },
        "primaryColor": {
          "type": "string",
          "x-ms-summary": "Primary Color"
        },
        "primaryFontColor": {
          "type": "string",
          "x-ms-summary": "Primary Font Color"
        },
        "privacyPolicyAppendixIFrame": {
          "type": "string",
          "x-ms-summary": "Privacy Policy Appendix I Frame"
        },
        "productSelectionPageBackgroundUrl": {
          "type": "string",
          "x-ms-summary": "Product Selection Page Background Url"
        },
        "quotationCustomMailSubject": {
          "type": "string",
          "x-ms-summary": "Quotation Custom Mail Subject"
        },
        "quotationCustomMailTexts": {
          "items": {
            "$ref": "#/definitions/QuotationCustomMailText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Quotation Custom Mail Texts"
        },
        "quotationExpiresInDays": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Quotation Expires In Days"
        },
        "quotationNumberFormat": {
          "type": "string",
          "x-ms-summary": "Quotation Number Format"
        },
        "quotationNumberResetPeriod": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Quotation Number Reset Period"
        },
        "quotationRequestRedirectUrl": {
          "type": "string",
          "x-ms-summary": "Quotation Request Redirect Url"
        },
        "quotationRequestedAction": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Quotation Requested Action"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "requireLogin": {
          "type": "boolean",
          "x-ms-summary": "Require Login"
        },
        "requireOfferedTo": {
          "type": "boolean",
          "x-ms-summary": "Require Offered To"
        },
        "requiredQuotationFields": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Required Quotation Fields"
        },
        "sendMailToCustomer": {
          "type": "boolean",
          "x-ms-summary": "Send Mail To Customer"
        },
        "sendQuotationRequestMail": {
          "type": "string",
          "x-ms-summary": "Send Quotation Request Mail"
        },
        "seoDescriptionTexts": {
          "items": {
            "$ref": "#/definitions/SeoDescriptionText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Seo Description Texts"
        },
        "seoTitleTexts": {
          "items": {
            "$ref": "#/definitions/SeoTitleText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Seo Title Texts"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "website": {
          "type": "string",
          "x-ms-summary": "Website"
        },
        "welcomePageBackgroundUrl": {
          "type": "string",
          "x-ms-summary": "Welcome Page Background Url"
        },
        "welcomePageYouTubeId": {
          "type": "string",
          "x-ms-summary": "Welcome Page You Tube Id"
        },
        "welcomeTexts": {
          "items": {
            "$ref": "#/definitions/WelcomePageText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Welcome Texts"
        },
        "wholeSaleDiscount": {
          "items": {
            "$ref": "#/definitions/WholeSaleDiscountRow"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Whole Sale Discount"
        }
      },
      "type": "object"
    },
    "Step": {
      "properties": {
        "backgroundUrl": {
          "type": "string",
          "x-ms-summary": "Background Url"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "featureModelId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Feature Model Id"
        },
        "iconUrl": {
          "type": "string",
          "x-ms-summary": "Icon Url"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "listviewEnabled": {
          "type": "boolean",
          "x-ms-summary": "Listview Enabled"
        },
        "mainCameraPositionId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Main Camera Position Id"
        },
        "order": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Order"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "requiredHotspots": {
          "type": "boolean",
          "x-ms-summary": "Required Hotspots"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "texts": {
          "items": {
            "$ref": "#/definitions/StepText"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Texts"
        },
        "type": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Type"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "visibleNodes": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Visible Nodes"
        }
      },
      "type": "object"
    },
    "StepText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "stepId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Step Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "UnitOfMeasurement": {
      "properties": {
        "code": {
          "type": "string",
          "x-ms-summary": "Code"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "avatar": {
          "type": "string",
          "x-ms-summary": "Avatar"
        },
        "contactId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Contact Id"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "crmId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Crm Id"
        },
        "currencyIso": {
          "type": "string",
          "x-ms-summary": "Currency Iso"
        },
        "enableTwoFactorAuthentication": {
          "type": "boolean",
          "x-ms-summary": "Enable Two Factor Authentication"
        },
        "finishedOnboardings": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Finished Onboardings"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "isSeller": {
          "type": "boolean",
          "x-ms-summary": "Is Seller"
        },
        "isTenant": {
          "readOnly": true,
          "type": "boolean",
          "x-ms-summary": "Is Tenant"
        },
        "languageIso": {
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "lastActivity": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Last Activity"
        },
        "newPassword": {
          "type": "string",
          "x-ms-summary": "New Password"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "passwordResetDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Password Reset Date"
        },
        "passwordResetString": {
          "type": "string",
          "x-ms-summary": "Password Reset String"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "Permissions"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "twoFactorAuthenticationBarcode": {
          "type": "string",
          "x-ms-summary": "Two Factor Authentication Barcode"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "userName": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "userPermissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false,
          "x-ms-summary": "User Permissions"
        }
      },
      "type": "object"
    },
    "VAT": {
      "properties": {
        "coefficient": {
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-ms-summary": "Coefficient"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "defaultVat": {
          "type": "boolean",
          "x-ms-summary": "Default Vat"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "includesVAT": {
          "type": "boolean",
          "x-ms-summary": "Includes V A T"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "pct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Pct"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    },
    "WebHooksSubscription": {
      "properties": {
        "callbackUrl": {
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-summary": "Callback Url",
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "callbackUrl"
      ],
      "type": "object"
    },
    "WelcomePageText": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "languageIso": {
          "maxLength": 3,
          "type": "string",
          "x-ms-summary": "Language Iso"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "type": "object"
    },
    "WholeSaleDiscountRow": {
      "properties": {
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Created Date"
        },
        "discountPct": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Discount Pct"
        },
        "fromAmount": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "From Amount"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Organization Id"
        },
        "reference": {
          "type": "string",
          "x-ms-summary": "Reference"
        },
        "settingsId": {
          "format": "uuid",
          "type": "string",
          "x-ms-summary": "Settings Id"
        },
        "synced": {
          "type": "boolean",
          "x-ms-summary": "Synced"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Updated Date"
        }
      },
      "type": "object"
    }
  },
  "host": "api.elfskot.cloud",
  "info": {
    "description": "The Elfsquad Product Configurator enables sellers, or even end-customers to configure complex products. Create error-free quotations within minutes. Elfsquad uses Microsoft Power Automate to sync with other applications. E.g. Sync contacts and quotes to CRM, Bill of Materials (BOM) to ERP and fill parametric models in CAD.",
    "title": "Elfsquad Product Configurator",
    "version": "v2"
  },
  "parameters": {},
  "paths": {
    "/api/2/categories": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available categories",
        "operationId": "Categories_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Category"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get categories",
        "tags": [
          "Categories"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new category",
        "operationId": "Categories_Post",
        "parameters": [
          {
            "description": "Category to create",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "summary": "Create category",
        "tags": [
          "Categories"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a category",
        "operationId": "Categories_Update",
        "parameters": [
          {
            "description": "Category to update",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "summary": "Update category",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/2/categories/subcategories/{id}": {
      "get": {
        "consumes": [],
        "description": "Retrieve a list of available subcategories for a given category",
        "operationId": "Categories_Subcategories_GetById",
        "parameters": [
          {
            "description": "Identifier of the category",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Category"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Retrieve subcategories",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/2/categories/{id}": {
      "delete": {
        "consumes": [],
        "description": "Delete a category by its identifier",
        "operationId": "Categories_DeleteById",
        "parameters": [
          {
            "description": "Category identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete category",
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieve a category by its identifier",
        "operationId": "Categories_GetById",
        "parameters": [
          {
            "description": "Category identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "summary": "Get category by id",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a category",
        "operationId": "Categories_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "summary": "Patch category",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/2/crmaccounts": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all avaible CRM Accounts",
        "operationId": "CrmAccounts_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/CrmAccount"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get CRM Accounts",
        "tags": [
          "CRM Accounts"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new CRM Account",
        "operationId": "CrmAccounts_Post",
        "parameters": [
          {
            "description": "New CRM Account",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        },
        "summary": "Create new CRM Account",
        "tags": [
          "CRM Accounts"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a CRM Account",
        "operationId": "CrmAccounts_Update",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        },
        "summary": "Update CRM Account",
        "tags": [
          "CRM Accounts"
        ]
      }
    },
    "/api/2/crmaccounts/{id}": {
      "delete": {
        "consumes": [],
        "description": "Delete a CRM Account by it's id",
        "operationId": "CrmAccounts_DeleteById",
        "parameters": [
          {
            "description": "Identifier of the CRM Account",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete CRM Account",
        "tags": [
          "CRM Accounts"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a CRM Account by its identifier",
        "operationId": "CrmAccounts_GetById",
        "parameters": [
          {
            "description": "Identifier of the CRM Account",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        },
        "summary": "Get CRM Account by id",
        "tags": [
          "CRM Accounts"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a CRM Account",
        "operationId": "CrmAccounts_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmAccount"
            }
          }
        },
        "summary": "Patch CRM Account",
        "tags": [
          "CRM Accounts"
        ]
      }
    },
    "/api/2/crmcontacts": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all avaible CRM Contacts",
        "operationId": "CrmContacts_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/CrmContact"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get CRM Contacts",
        "tags": [
          "CRM Contacts"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new CRM Contact",
        "operationId": "CrmContacts_Post",
        "parameters": [
          {
            "description": "New CRM Contact",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        },
        "summary": "Create new CRM Contact",
        "tags": [
          "CRM Contacts"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a CRM Contact",
        "operationId": "CrmContacts_Update",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        },
        "summary": "Update CRM Contact",
        "tags": [
          "CRM Contacts"
        ]
      }
    },
    "/api/2/crmcontacts/{id}": {
      "delete": {
        "consumes": [],
        "description": "Delete a CRM Contact by it's id",
        "operationId": "CrmContacts_DeleteById",
        "parameters": [
          {
            "description": "Identifier of the CRM Contact",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete CRM Contact",
        "tags": [
          "CRM Contacts"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a CRM Contact by its identifier",
        "operationId": "CrmContacts_GetById",
        "parameters": [
          {
            "description": "Identifier of the CRM Contact",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        },
        "summary": "Get CRM Contact by id",
        "tags": [
          "CRM Contacts"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a CRM Contact",
        "operationId": "CrmContacts_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmContact"
            }
          }
        },
        "summary": "Patch CRM Contact",
        "tags": [
          "CRM Contacts"
        ]
      }
    },
    "/api/2/featurehasfeatureproperties": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all relationships between features and properties",
        "operationId": "FeatureHasProperties_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/FeatureHasFeatureProperty"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get feature has properties",
        "tags": [
          "Feature has Property"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a relationship between feature and property",
        "operationId": "FeatureHasProperties_Post",
        "parameters": [
          {
            "description": "Relationship to create",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureHasFeatureProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureHasFeatureProperty"
            }
          }
        },
        "summary": "Create a relationship between feature and property",
        "tags": [
          "Feature has Property"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a relationship between feature and property",
        "operationId": "FeatureHasProperties_Update",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureHasFeatureProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureHasFeatureProperty"
            }
          }
        },
        "summary": "Update a relationship between feature and property",
        "tags": [
          "Feature has Property"
        ]
      }
    },
    "/api/2/featurehasfeatureproperties/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a relationship between a feature a feature property",
        "operationId": "FeatureHasProperties_Delete",
        "parameters": [
          {
            "description": "Identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete a feature has property relationship",
        "tags": [
          "Feature has Property"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a relationship between feature and property",
        "operationId": "FeatureHasProperties_Patch",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureHasFeatureProperty"
            }
          }
        },
        "summary": "Patch a relationship between feature and property",
        "tags": [
          "Feature has Property"
        ]
      }
    },
    "/api/2/featuremodels": {
      "get": {
        "consumes": [],
        "description": "Retrieve a list of all available feature models",
        "operationId": "FeatureModels_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/FeatureModel"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get feature models",
        "tags": [
          "Feature Models"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a feature model",
        "operationId": "FeatureModels_Post",
        "parameters": [
          {
            "description": "Feature model to create",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        },
        "summary": "Create feature model",
        "tags": [
          "Feature Models"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a feature model",
        "operationId": "FeatureModels_Update",
        "parameters": [
          {
            "description": "Feature model to update",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        },
        "summary": "Update feature model",
        "tags": [
          "Feature Models"
        ]
      }
    },
    "/api/2/featuremodels/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a feature model by its identifier",
        "operationId": "FeatureModels_DeleteById",
        "parameters": [
          {
            "description": "Identifier of the feature model to remove",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete feature model",
        "tags": [
          "Feature Models"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a feature model its identifier",
        "operationId": "FeatureModels_GetById",
        "parameters": [
          {
            "description": "Feature model identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        },
        "summary": "Get feature model by id",
        "tags": [
          "Feature Models"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a feature model",
        "operationId": "FeatureModels_Patch",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureModel"
            }
          }
        },
        "summary": "Patch feature model",
        "tags": [
          "Feature Models"
        ]
      }
    },
    "/api/2/featureproperties": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available feature properties",
        "operationId": "FeaturesProperties_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/FeatureProperty"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get feature properties",
        "tags": [
          "Feature Properties"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new feature property",
        "operationId": "FeaturesProperties_Post",
        "parameters": [
          {
            "description": "Feature property to create",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        },
        "summary": "Create new feature property",
        "tags": [
          "Feature Properties"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a feature property",
        "operationId": "FeaturesProperties_Update",
        "parameters": [
          {
            "description": "Feature property to update",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        },
        "summary": "Update a feature property",
        "tags": [
          "Feature Properties"
        ]
      }
    },
    "/api/2/featureproperties/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a feature property by its identifier",
        "operationId": "FeaturesProperties_Delete",
        "parameters": [
          {
            "description": "Identifier of the property to delete",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete feature property",
        "tags": [
          "Feature Properties"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a feature property by its identifier",
        "operationId": "FeaturesProperties_GetById",
        "parameters": [
          {
            "description": "Identifier of the feature property",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        },
        "summary": "Get feature property by id",
        "tags": [
          "Feature Properties"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a feature property",
        "operationId": "FeaturesProperties_Patch",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureProperty"
            }
          }
        },
        "summary": "Patch a feature property",
        "tags": [
          "Feature Properties"
        ]
      }
    },
    "/api/2/features": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available features",
        "operationId": "Features_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Feature"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get features",
        "tags": [
          "FeaturesApi"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new feature",
        "operationId": "Features_Post",
        "parameters": [
          {
            "description": "Feature to create",
            "in": "body",
            "name": "feature",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        },
        "summary": "Create new feature",
        "tags": [
          "FeaturesApi"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a feature",
        "operationId": "Features_Update",
        "parameters": [
          {
            "description": "Feature to update",
            "in": "body",
            "name": "feature",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        },
        "summary": "Update feature",
        "tags": [
          "FeaturesApi"
        ]
      }
    },
    "/api/2/features/copy/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Copies multiple features and returns the newly created features",
        "operationId": "Features_Copy",
        "parameters": [
          {
            "description": "Features to copy",
            "in": "body",
            "name": "features",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Feature"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Feature"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Copy features",
        "tags": [
          "FeaturesApi"
        ]
      }
    },
    "/api/2/features/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a feature by its identifier",
        "operationId": "Features_DeleteById",
        "parameters": [
          {
            "description": "Feature identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete feature",
        "tags": [
          "FeaturesApi"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Gets a feature by its identifier",
        "operationId": "Features_GetById",
        "parameters": [
          {
            "description": "Feature identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        },
        "summary": "Get feature by id",
        "tags": [
          "FeaturesApi"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a feature",
        "operationId": "Features_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        },
        "summary": "Patch feature",
        "tags": [
          "FeaturesApi"
        ]
      }
    },
    "/api/2/files": {
      "post": {
        "consumes": [
          "application/form-data"
        ],
        "description": "Uploads a new file and returns its url",
        "operationId": "Files_Post",
        "parameters": [
          {
            "description": "Upload file",
            "in": "formData",
            "name": "File",
            "required": true,
            "type": "file"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Upload a new file",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/2/notifications": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "If the user is logged in, open a prompt dialog",
        "operationId": "Notifications_Send",
        "parameters": [
          {
            "description": "Notification to display",
            "in": "body",
            "name": "notification",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationViewModel"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "true if the user confirmed the dialog; false if the user canceled the dialog; null if the user did not respond to the dialog",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "summary": "Open a prompt dialog for a specific user",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/2/organizationsellsfeatures": {
      "get": {
        "consumes": [],
        "description": "Retrieves OrganizationSellsFeatures relationships",
        "operationId": "OrgSellsFeature_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/OrganizationSellsFeature"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get OrganizationSellsFeatures",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a OrganizationSellsFeature relationship",
        "operationId": "OrgSellsFeature_Post",
        "parameters": [
          {
            "description": "OrganizationSellsFeature relationship to create",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        },
        "summary": "Create a OrganizationSellsFeature relationship",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a OrganizationSellsFeature relationship",
        "operationId": "OrgSellsFeature_Update",
        "parameters": [
          {
            "description": "OrganizationSellsFeature relationship to update",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        },
        "summary": "Update OrganizationSellsFeature relationship",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      }
    },
    "/api/2/organizationsellsfeatures/byfeatureid/{id}": {
      "get": {
        "consumes": [],
        "description": "Retrieves OrganizationSellsFeature relationships by feature id",
        "operationId": "OrgSellsFeature_GetByFeatureId",
        "parameters": [
          {
            "description": "Feature identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Retrieve OrganizationSellsFeature relationships by feature id",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      }
    },
    "/api/2/organizationsellsfeatures/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a OrganizationSellsFeature relationship",
        "operationId": "OrgSellsFeature_Delete",
        "parameters": [
          {
            "description": "Identifier of OrganizationSellsFeature relationship",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete OrganizationSellsFeature relationship",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a OrganizationSellsFeature relationship by its identifier",
        "operationId": "OrgSellsFeature_GetById",
        "parameters": [
          {
            "description": "Identifier of OrganizationSellsFeature relationship",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        },
        "summary": "Retrieve OrganizationSellsFeature relationship by id",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a OrganizationSellsFeature relationship",
        "operationId": "OrgSellsFeature_Patch",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSellsFeature"
            }
          }
        },
        "summary": "Patch OrganizationSellsFeature relationship",
        "tags": [
          "OrganizationSellsFeatures"
        ]
      }
    },
    "/api/2/quotationproperties": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available quotation properties",
        "operationId": "QuotationProperties_Get55",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/QuotationProperty"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get quotation properties",
        "tags": [
          "Quotation Properties"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new quotation property",
        "operationId": "QuotationProperties_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        },
        "summary": "Create quotation property",
        "tags": [
          "Quotation Properties"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a quotation property",
        "operationId": "QuotationProperties_Update",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        },
        "summary": "Update quotation property",
        "tags": [
          "Quotation Properties"
        ]
      }
    },
    "/api/2/quotationproperties/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a quotation by property by id",
        "operationId": "QuotationProperties_Get",
        "parameters": [
          {
            "description": "Identifier of the quotation property",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete quotation property",
        "tags": [
          "Quotation Properties"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a quotation property by its identifier",
        "operationId": "QuotationProperties_GetById",
        "parameters": [
          {
            "description": "Identifier of the quotaton property",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        },
        "summary": "Get quotation property by id",
        "tags": [
          "Quotation Properties"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a quotation property",
        "operationId": "QuotationProperties_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QuotationProperty"
            }
          }
        },
        "summary": "Patch quotation property",
        "tags": [
          "Quotation Properties"
        ]
      }
    },
    "/api/2/quotationpropertyfields": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available quotation property fields",
        "operationId": "QuotationPropertyFields_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/QuotationPropertyField"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get quotation property fields",
        "tags": [
          "Quotation Property Fields"
        ]
      }
    },
    "/api/2/quotationpropertyfields/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a quotation property fields by its id",
        "operationId": "QuotationPropertyFields_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete quotation property field",
        "tags": [
          "Quotation Property Fields"
        ]
      }
    },
    "/api/2/quotations": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available quotations",
        "operationId": "Quotations_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Quotation"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get quotations",
        "tags": [
          "Quotations"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new quotation",
        "operationId": "Quotations_Post",
        "parameters": [
          {
            "description": "New quotation",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Create new quotation",
        "tags": [
          "Quotations"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a quotation",
        "operationId": "Quotations_Update",
        "parameters": [
          {
            "description": "Quotation to update",
            "in": "body",
            "name": "quotation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Update a quotation",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/bulk": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates multiple quotations",
        "operationId": "Quotations_Patch_Bulk",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkJsonPatchDocument[Quotation]"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Patch multiple quotations",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a quotation by its identifier",
        "operationId": "Quotations_DeleteById",
        "parameters": [
          {
            "description": "Identifier of quotation to delete",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete quotation",
        "tags": [
          "Quotations"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Retrieves a quotation by its identifier",
        "operationId": "Quotations_GetById",
        "parameters": [
          {
            "description": "Identifier of the quotation",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": "Lines",
            "description": "",
            "in": "query",
            "name": "include",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Get quotation by id",
        "tags": [
          "Quotations"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a quotation",
        "operationId": "Quotations_Patch",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Patch a quotation",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}/addconfigurations": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Adds multiple configurations to a quotation",
        "operationId": "Quotations_AddConfigurations",
        "parameters": [
          {
            "description": "Quotation identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifiers of configurations to add",
            "in": "body",
            "name": "configurationIds",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Add configurations to a quotation",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}/addfile": {
      "post": {
        "consumes": [
          "application/form-data"
        ],
        "description": "Adds a file to a quotation",
        "operationId": "Quotations_AddFile",
        "parameters": [
          {
            "description": "Identifier of the quotation",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Upload file",
            "in": "formData",
            "name": "File",
            "required": true,
            "type": "file"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Add file to quotation",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}/copy": {
      "get": {
        "consumes": [],
        "description": "Copies an existing quotation",
        "operationId": "Quotations_Copy",
        "parameters": [
          {
            "description": "The identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Copy quotation",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}/pdf": {
      "get": {
        "consumes": [],
        "description": "Generates a PDF of a quotation",
        "operationId": "Quotations_GetPdf",
        "parameters": [
          {
            "description": "Identifier of the quotation",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Generate quotation PDF",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/quotations/{id}/revise": {
      "put": {
        "consumes": [],
        "description": "Create a revision of a existing quotation",
        "operationId": "Quotations_Revise",
        "parameters": [
          {
            "description": "The identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        },
        "summary": "Create quotation revision",
        "tags": [
          "Quotations"
        ]
      }
    },
    "/api/2/steps": {
      "get": {
        "consumes": [],
        "description": "Retrieves a list of all available steps",
        "operationId": "Steps_Get",
        "parameters": [],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Step"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "summary": "Get steps",
        "tags": [
          "Steps"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new step",
        "operationId": "Steps_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        },
        "summary": "Create new step",
        "tags": [
          "Steps"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a step",
        "operationId": "Steps_Update",
        "parameters": [
          {
            "description": "Step to update",
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        },
        "summary": "Update step",
        "tags": [
          "Steps"
        ]
      }
    },
    "/api/2/steps/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a step by its identifier",
        "operationId": "Steps_DeleteById",
        "parameters": [
          {
            "description": "Step identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete step",
        "tags": [
          "Steps"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Gets a step by its identifier",
        "operationId": "Steps_GetById",
        "parameters": [
          {
            "description": "Step identifier",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        },
        "summary": "Get step by id",
        "tags": [
          "Steps"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a step",
        "operationId": "Steps_Patch",
        "parameters": [
          {
            "in": "body",
            "name": "patchDocument",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Operation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Step"
            }
          }
        },
        "summary": "Patch step",
        "tags": [
          "Steps"
        ]
      }
    },
    "/api/2/webhooks/custom.{identifier}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create your own custom triggers",
        "operationId": "Webhooks_Custom",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Custom trigger",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.accepted": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is accepted",
        "operationId": "Webhooks_QuotationAccepted",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is accepted",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.configurationadded": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a configuration is added to a quotation",
        "operationId": "Webhooks_QuotationConfigurationAdded",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a configuration is added to a quotation",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for configuration added webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "configurationId": {
                  "type": "string"
                },
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.declined": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is declined",
        "operationId": "Webhooks_QuotationDenied",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is declined",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.requested": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is requested",
        "operationId": "Webhooks_QuotationRequested",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is requested",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.revised": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is revised",
        "operationId": "Webhooks_QuotationRevised",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is revised",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.submitted": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is submitted",
        "operationId": "Webhooks_QuotationSubmitted",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is submitted",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "/api/2/webhooks/quotation.verified": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Triggered when a quotation is verified",
        "operationId": "Webhooks_QuotationVerified",
        "parameters": [
          {
            "description": "Request body of the webhook",
            "in": "body",
            "name": "webHooksSubscription",
            "required": false,
            "schema": {
              "properties": {
                "callbackUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "callbackUrl"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "When a quotation is verified",
        "tags": [
          "Webhooks"
        ],
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for quotation webhook response",
        "schema": {
          "properties": {
            "content": {
              "properties": {
                "quotationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "undefined": [
        "openid profile offline_access Elfskot.Api"
      ]
    }
  ],
  "securityDefinitions": {
    "undefined": {
      "authorizationUrl": "https://login.elfskot.cloud/connect/authorize",
      "flow": "accessCode",
      "scopes": {
        "openid profile offline_access Elfskot.Api": "openid profile offline_access Elfskot.Api"
      },
      "tokenUrl": "https://login.elfskot.cloud/connect/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": []
}