{
  "swagger": "2.0",
  "info": {
    "title": "AIForged",
    "description": "AIForged is an Intelligent Document Processing solution to complex problems. AIForged can automate the processing and extraction of structured data from unstructured images. The connector provides integration and automation of intellegent document extraction with AIForged",
    "contact": {
      "name": "AIForged",
      "url": "https://www.aiforged.com",
      "email": "support@aiforged.com"
    },
    "version": "v1.0"
  },
  "host": "portal.aiforged.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Account/GetCurrentUser": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get current logged in user",
        "description": "Get current logged in user",
        "operationId": "Account_GetCurrentUser",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "User data",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.UserViewModel"
            }
          }
        }
      }
    },
    "/api/Account/GetAPIKey": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get api key for a user",
        "description": "Get api key for a user",
        "operationId": "Account_GetApiKey",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "API-Key",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/Classes/Get": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get classification information",
        "description": "Get classification information",
        "operationId": "Classes_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "Id",
            "in": "query",
            "description": "The id of the classification",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The id of the classification"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The class/category",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
            }
          }
        }
      }
    },
    "/api/Classes/GetByProject": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get all categories by project",
        "description": "Get all categories by project",
        "operationId": "Classes_GetByProject",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The ptoject id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The ptoject id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of classes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Classes/GetByUser": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get by user and project",
        "description": "Get by user and project",
        "operationId": "Classes_GetByUser",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of classes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Document/Get": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get a document by Id",
        "description": "Get a document by Id",
        "operationId": "Document_GetDocument",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          }
        }
      }
    },
    "/api/Document/GetHierarchy": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get a document and its related documents",
        "description": "Get a document and its related documents",
        "operationId": "Document_GetHierarchy",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "Document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Hierarchy of documents",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          }
        }
      }
    },
    "/api/Document/Delete": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a document by id",
        "description": "Delete a document by id",
        "operationId": "Document_Delete",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "Document id to delete",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id to delete"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The deleted document",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          }
        }
      }
    },
    "/api/Document/GetPreviews": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get preview documents and images for a service",
        "description": "Get preview documents and images for a service",
        "operationId": "Document_GetPreviews",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user that owns the service",
            "x-nullable": true,
            "x-ms-summary": "The user that owns the service"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The preview document",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Document/GetExtended": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Find documnets by using structured search criteria. The results can be paged",
        "description": "Find documnets by using structured search criteria. The results can be paged",
        "operationId": "Document_GetExtendedV0_9",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "Owner of the document",
            "x-nullable": true,
            "x-ms-summary": "Owner of the document"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "usage",
            "in": "query",
            "description": "The folder or usage",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.UsageType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              10,
              90,
              98,
              99
            ],
            "x-ms-summary": "The folder or usage"
          },
          {
            "type": "integer",
            "name": "status",
            "in": "query",
            "description": "The status",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
            },
            "x-nullable": true,
            "enum": [
              0,
              3,
              4,
              5,
              8,
              9,
              10,
              81,
              90,
              98,
              99,
              103,
              108,
              109,
              110,
              190
            ],
            "x-ms-summary": "The status"
          },
          {
            "type": "string",
            "name": "classname",
            "in": "query",
            "description": "A class name filter",
            "x-nullable": true,
            "x-ms-summary": "A class name filter"
          },
          {
            "type": "string",
            "name": "filename",
            "in": "query",
            "description": "Filename filter",
            "x-nullable": true,
            "x-ms-summary": "Filename filter"
          },
          {
            "type": "string",
            "name": "filetype",
            "in": "query",
            "description": "File type filter",
            "x-nullable": true,
            "x-ms-summary": "File type filter"
          },
          {
            "type": "string",
            "name": "start",
            "in": "query",
            "description": "Start date range for documents",
            "format": "date-time",
            "x-nullable": true,
            "x-ms-summary": "Start date range for documents"
          },
          {
            "type": "string",
            "name": "end",
            "in": "query",
            "description": "End date range for documents",
            "format": "date-time",
            "x-nullable": true,
            "x-ms-summary": "End date range for documents"
          },
          {
            "type": "integer",
            "name": "masterid",
            "in": "query",
            "description": "Master or parent of the document",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Master or parent of the document"
          },
          {
            "type": "integer",
            "name": "pageNo",
            "in": "query",
            "description": "Page number",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Page number"
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "description": "Size of a page",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Size of a page"
          },
          {
            "type": "integer",
            "name": "sortField",
            "in": "query",
            "description": "Sort by field",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.SortField"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "x-ms-summary": "Sort by field"
          },
          {
            "type": "integer",
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction based on the sortfield",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.SortDirection"
            },
            "x-nullable": true,
            "enum": [
              0,
              1
            ],
            "x-ms-summary": "Sort direction based on the sortfield"
          },
          {
            "type": "string",
            "name": "comment",
            "in": "query",
            "description": "Filter for comments",
            "x-nullable": true,
            "x-ms-summary": "Filter for comments"
          },
          {
            "type": "string",
            "name": "result",
            "in": "query",
            "description": "Filter for results",
            "x-nullable": true,
            "x-ms-summary": "Filter for results"
          },
          {
            "type": "string",
            "name": "resultId",
            "in": "query",
            "description": "Filter for a result id",
            "x-nullable": true,
            "x-ms-summary": "Filter for a result id"
          },
          {
            "type": "integer",
            "name": "resultIndex",
            "in": "query",
            "description": "Filter for result index",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Filter for result index"
          },
          {
            "type": "string",
            "name": "externalId",
            "in": "query",
            "description": "Filter for external ids",
            "x-nullable": true,
            "x-ms-summary": "Filter for external ids"
          },
          {
            "type": "string",
            "name": "docGuid",
            "in": "query",
            "description": "Filter for doc guids",
            "x-nullable": true,
            "x-ms-summary": "Filter for doc guids"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of documents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Document/GetImages": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document images",
        "description": "Get document images",
        "operationId": "Document_GetImages",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "Service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Service id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of document images",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentDataViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Document/GetData": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document images",
        "description": "Get document images",
        "operationId": "Document_GetDataV09",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "Document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id"
          },
          {
            "type": "integer",
            "name": "type",
            "in": "query",
            "description": "Image type",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.DocumentDataType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              10,
              11
            ],
            "x-ms-summary": "Image type"
          },
          {
            "type": "string",
            "name": "contentType",
            "in": "query",
            "description": "Image content type",
            "x-nullable": true,
            "x-ms-summary": "Image content type"
          },
          {
            "type": "string",
            "name": "text",
            "in": "query",
            "description": "A test filter",
            "x-nullable": true,
            "x-ms-summary": "A test filter"
          },
          {
            "type": "integer",
            "name": "blobid",
            "in": "query",
            "description": "The related blob id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The related blob id"
          },
          {
            "type": "integer",
            "name": "pageindex",
            "in": "query",
            "description": "The page index",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The page index"
          },
          {
            "type": "integer",
            "name": "imagesCount",
            "in": "query",
            "description": "Number of images to return",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Number of images to return"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of document images",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentDataViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Document/GetBlob": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get the data blob for a document id by image type",
        "description": "Get the data blob for a document id by image type",
        "operationId": "Document_GetBlobV09",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "User id that owns the document",
            "x-nullable": true,
            "x-ms-summary": "User id that owns the document"
          },
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "Blob id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Blob id"
          },
          {
            "type": "integer",
            "name": "type",
            "in": "query",
            "description": "The blob type",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.DocumentDataType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              10,
              11
            ],
            "x-ms-summary": "The blob type"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The blob",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Document/GetBlobById": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get blob by blob key",
        "description": "Get blob by blob key",
        "operationId": "Document_GetBlobById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The blob id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The blob id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The blob",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Document/DeleteBlob": {
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a document blob",
        "description": "Delete a document blob",
        "operationId": "Document_DeleteBlob",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The blob id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The blob id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The result",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Document/Classify": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload and classify a document",
        "description": "Upload and classify a document",
        "operationId": "Document_Classify",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "Project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Project id"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "The file data",
            "x-nullable": true,
            "x-ms-summary": "The file data"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          }
        }
      }
    },
    "/api/Document/ExtractAndVerify": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload and extract information for verification",
        "description": "Upload and extract information for verification",
        "operationId": "Document_ExtractAndVerify",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "The file",
            "x-nullable": true,
            "x-ms-summary": "The file"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
            }
          }
        }
      }
    },
    "/api/Document/GetClassification": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Upload get a document classification",
        "description": "Upload get a document classification",
        "operationId": "Document_GetClassification",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document classification",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ClassesViewModel"
            }
          }
        }
      }
    },
    "/api/ParamDef/Get": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get definition by Id",
        "description": "Get definition by Id",
        "operationId": "ParamDef_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The definition id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The definition id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The definition parameter",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          }
        }
      }
    },
    "/api/ParamDef/GetParentService": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get parent service for a parameter def by Id",
        "description": "Get parent service for a parameter def by Id",
        "operationId": "ParamDef_GetParentService",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "The parameter definition id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter definition id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parent service",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          }
        }
      }
    },
    "/api/ParamDef/GetHierachy": {
      "get": {
        "tags": [
          "ParamDef"
        ],
        "summary": "Get hierarchy of fields for a service",
        "description": "Get hierarchy of fields for a service",
        "operationId": "ParamDef_GetHierachy",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "boolean",
            "name": "includeCount",
            "in": "query",
            "description": "Include counter stats",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include counter stats"
          },
          {
            "type": "boolean",
            "name": "includeSettings",
            "in": "query",
            "description": "Include settings",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include settings"
          },
          {
            "type": "boolean",
            "name": "includeChildren",
            "in": "query",
            "description": "Include child definiitions",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include child definiitions"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The definition hierarchy",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          }
        }
      }
    },
    "/api/Parameters/Get": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get parameter value",
        "description": "Get parameter value",
        "operationId": "Parameters_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "category",
            "in": "query",
            "description": "Parameter category",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              20,
              21,
              22,
              40
            ],
            "x-ms-summary": "Parameter category"
          },
          {
            "type": "integer",
            "name": "grouping",
            "in": "query",
            "description": "Parameter grouping",
            "x-schema": {
              "$ref": "#/definitions/AIForged.DAL.GroupingType"
            },
            "x-nullable": true,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              99
            ],
            "x-ms-summary": "Parameter grouping"
          },
          {
            "type": "boolean",
            "name": "includeverification",
            "in": "query",
            "description": "Include verification data",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include verification data"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parameters",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Parameters/GetHierarchy": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get parameter hierarchy",
        "description": "Get parameter hierarchy",
        "operationId": "Parameters_GetHierarchy",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "boolean",
            "name": "includeverification",
            "in": "query",
            "description": "Include verification data",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include verification data"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Parameter hierarchy",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Parameters/Delete": {
      "delete": {
        "tags": [
          "Parameters"
        ],
        "summary": "Delete a parameter",
        "description": "Delete a parameter",
        "operationId": "Parameters_Delete",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "paramid",
            "in": "query",
            "description": "The parameter id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The parameter id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Delete a parameter",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
            }
          }
        }
      }
    },
    "/api/Parameters/GetByVerification": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get a parameter by verification id",
        "description": "Get a parameter by verification id",
        "operationId": "Parameters_GetByVerification",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "The verification id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The verification id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The document parameters",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
            }
          }
        }
      }
    },
    "/api/Parameters/GetSummary": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get a summary of verifications",
        "description": "Get a summary of verifications",
        "operationId": "Parameters_GetSummary",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A summary of parameter data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocParamSummary"
              }
            }
          }
        }
      }
    },
    "/api/Parameters/Extract": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Extract document parameters",
        "description": "Extract document parameters",
        "operationId": "Parameters_Extract",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docid",
            "in": "query",
            "description": "The document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The document id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Flat structure of document parameters",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DocumentExtraction"
              }
            }
          }
        }
      }
    },
    "/api/Project/GetByUser": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects and services linked to a user",
        "description": "Get projects and services linked to a user",
        "operationId": "Project_GetByUser",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of projects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Project/GetUserProject": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a specific project",
        "description": "Get a specific project",
        "operationId": "Project_GetUserProject",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The project",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
            }
          }
        }
      }
    },
    "/api/Project/GetHierachies": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get hierarchy of fields for all services in a project",
        "description": "Get hierarchy of fields for all services in a project",
        "operationId": "Project_GetHierachies",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The service id"
          },
          {
            "type": "integer",
            "name": "groupId",
            "in": "query",
            "description": "The group id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The group id"
          },
          {
            "type": "boolean",
            "name": "includeCount",
            "in": "query",
            "description": "Include counter stats",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include counter stats"
          },
          {
            "type": "boolean",
            "name": "onlyServices",
            "in": "query",
            "description": "Only include services",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Only include services"
          },
          {
            "type": "boolean",
            "name": "includeSettings",
            "in": "query",
            "description": "Include settings",
            "default": true,
            "x-nullable": false,
            "x-ms-summary": "Include settings"
          },
          {
            "type": "boolean",
            "name": "includeChildren",
            "in": "query",
            "description": "Include children",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Include children"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The parameters definitions linked to the service",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Project/GetByName": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Find a project by name",
        "description": "Find a project by name",
        "operationId": "Project_GetByName",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "description": "Project name",
            "x-nullable": true,
            "x-ms-summary": "Project name"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The project",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ProjectViewModel"
            }
          }
        }
      }
    },
    "/api/Project/GetServices": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get services related to a project",
        "description": "Get services related to a project",
        "operationId": "Project_GetServices",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "The user id",
            "x-nullable": true,
            "x-ms-summary": "The user id"
          },
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stlfilter",
            "in": "query",
            "description": "Service type filter",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Service type filter"
          },
          {
            "type": "string",
            "name": "enginefilter",
            "in": "query",
            "description": "Filter by engine",
            "x-nullable": true,
            "x-ms-summary": "Filter by engine"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of Services",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Services/Get": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get a service by id",
        "description": "Get a service by id",
        "operationId": "Services_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "The service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "The service id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The service",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          }
        }
      }
    },
    "/api/System/GetSystemDate": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get the current service Data and Time",
        "description": "Get the current service Data and Time",
        "operationId": "System_GetSystemDate",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The system date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "/api/System/GetSystemInfo": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system and application information",
        "description": "Get system and application information",
        "operationId": "System_GetSystemInfo",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Application info",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/System/GetDataTypes": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get data types",
        "description": "Get data types",
        "operationId": "System_GetDataTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of data typs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.DataTypeViewModel"
              }
            }
          }
        }
      }
    },
    "/api/System/GetEnumData": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system enum values",
        "description": "Get system enum values",
        "operationId": "System_GetEnumData",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of system enums",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.EnumDataViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Verification/Get": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a verification by id",
        "description": "Get a verification by id",
        "operationId": "Verification_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "Verification id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Verification id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A verificacation",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
            }
          }
        }
      }
    },
    "/api/Verification/GetAll": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get verifications on a parameter",
        "description": "Get verifications on a parameter",
        "operationId": "Verification_GetAll",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "Document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id"
          },
          {
            "type": "integer",
            "name": "parameterId",
            "in": "query",
            "description": "Parameter id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Parameter id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of verifications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
              }
            }
          }
        }
      }
    },
    "/api/Verification/GetLatest": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get latest verification on a parameter",
        "description": "Get latest verification on a parameter",
        "operationId": "Verification_GetLatest",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "Document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id"
          },
          {
            "type": "integer",
            "name": "parameterId",
            "in": "query",
            "description": "Parameter id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Parameter id"
          },
          {
            "type": "integer",
            "name": "pdId",
            "in": "query",
            "description": "Definition id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Definition id"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A verification",
            "schema": {
              "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
            }
          }
        }
      }
    },
    "/api/Verification/GetShred": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a verification image shred",
        "description": "Get a verification image shred",
        "operationId": "Verification_GetShred",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "description": "User for the shred",
            "x-nullable": true,
            "x-ms-summary": "User for the shred"
          },
          {
            "type": "integer",
            "name": "docId",
            "in": "query",
            "description": "Document id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Document id"
          },
          {
            "type": "integer",
            "name": "parId",
            "in": "query",
            "description": "Parameter id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Parameter id"
          },
          {
            "type": "integer",
            "name": "verificationId",
            "in": "query",
            "description": "Verification id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Verification id"
          },
          {
            "type": "boolean",
            "name": "inline",
            "in": "query",
            "description": "Should the image be inline",
            "default": false,
            "x-nullable": false,
            "x-ms-summary": "Should the image be inline"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "A shred image",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Verification/GetSummary": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get a summary of verifications",
        "description": "Get a summary of verifications",
        "operationId": "Verification_GetSummary",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "Project id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "Project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "Service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Service id"
          },
          {
            "type": "integer",
            "name": "pdId",
            "in": "query",
            "description": "Definition id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Definition id"
          },
          {
            "type": "boolean",
            "name": "latestOnly",
            "in": "query",
            "description": "Only latest or history",
            "default": true,
            "x-nullable": true,
            "x-ms-summary": "Only latest or history"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "List of verifications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationSummary"
              }
            }
          }
        }
      }
    },
    "/api/Verification/GetHeatmap": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get verification analytics",
        "description": "Get verification analytics",
        "operationId": "Verification_GetHeatmap",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "The project id",
            "format": "int32",
            "x-nullable": true,
            "x-ms-summary": "The project id"
          },
          {
            "type": "integer",
            "name": "stpdId",
            "in": "query",
            "description": "Service id",
            "format": "int32",
            "x-nullable": false,
            "x-ms-summary": "Service id"
          },
          {
            "type": "boolean",
            "name": "latestOnly",
            "in": "query",
            "description": "Only the latest",
            "default": true,
            "x-nullable": true,
            "x-ms-summary": "Only the latest"
          },
          {
            "type": "string",
            "name": "X-Api-Version",
            "in": "header",
            "required": true,
            "description": "API version header",
            "x-nullable": true,
            "x-ms-summary": "API version header"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A summary of verifications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AIForged.ViewModels.VerificationSummary"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AIForged.ViewModels.UserViewModel": {
      "type": "object",
      "description": "User information",
      "required": [
        "userName",
        "email",
        "isEnabled",
        "isLockedOut",
        "createdDate",
        "updatedDate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 2
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 200,
          "minLength": 0
        },
        "jobTitle": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "format": "phone"
        },
        "configuration": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isLockedOut": {
          "type": "boolean"
        },
        "friendlyName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AIForged.ViewModels.ClassesViewModel": {
      "type": "object",
      "description": "Categories/Classes for training and classification",
      "required": [
        "id",
        "projectId",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.ClassType"
        },
        "related": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.DAL.ClassType": {
      "type": "integer",
      "description": "System category type",
      "x-enumNames": [
        "System",
        "Definition",
        "Other"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "AIForged.ViewModels.DocumentViewModel": {
      "type": "object",
      "description": "Document metadata info",
      "required": [
        "id",
        "projectId",
        "serviceId",
        "status",
        "usage",
        "dtc",
        "dtm",
        "canVerify",
        "canClassify",
        "canTrain",
        "trained"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "usage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "contentType": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "documentId": {
          "type": "string",
          "format": "guid"
        },
        "externalId": {
          "type": "string"
        },
        "masterId": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "string"
        },
        "resultId": {
          "type": "string"
        },
        "resultIndex": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "resultParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentDataViewModel"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentViewModel"
          }
        },
        "originId": {
          "type": "integer",
          "format": "int32"
        },
        "canVerify": {
          "type": "boolean"
        },
        "canClassify": {
          "type": "boolean"
        },
        "canTrain": {
          "type": "boolean"
        },
        "trained": {
          "type": "boolean"
        },
        "linkedDocsCount": {
          "type": "integer",
          "format": "int32"
        },
        "trainingFieldCount": {
          "type": "integer",
          "format": "int32"
        },
        "trainedParametersCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.DAL.DocumentStatus": {
      "type": "integer",
      "description": "Indicate the status of a document in the system",
      "x-enumNames": [
        "None",
        "Received",
        "Analyzed",
        "Trained",
        "Processing",
        "Verification",
        "Processed",
        "InsufficientBalance",
        "Error",
        "Archive",
        "Deleted",
        "CustomReceived",
        "CustomBusy",
        "CustomVerification",
        "CustomProcessed",
        "CustomError"
      ],
      "enum": [
        0,
        3,
        4,
        5,
        8,
        9,
        10,
        81,
        90,
        98,
        99,
        103,
        108,
        109,
        110,
        190
      ]
    },
    "AIForged.DAL.UsageType": {
      "type": "integer",
      "description": "Why do we store this document",
      "x-enumNames": [
        "Definition",
        "Training",
        "Inbox",
        "Outbox",
        "Label",
        "DataSet",
        "System",
        "Sample",
        "Preview"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        10,
        90,
        98,
        99
      ]
    },
    "AIForged.DAL.Availability": {
      "type": "integer",
      "description": "Avalability of a record",
      "x-enumNames": [
        "None",
        "Private",
        "Public",
        "Marketplace",
        "Inherit",
        "Internal",
        "Training",
        "DataSet",
        "Hidden",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        99
      ]
    },
    "AIForged.ViewModels.DocumentParameterViewModel": {
      "type": "object",
      "description": "Fields values linked ot extracted from documents",
      "required": [
        "id",
        "documentId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "documentId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefId": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "sourceId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "colIndex": {
          "type": "integer",
          "format": "int32"
        },
        "colSpan": {
          "type": "integer",
          "format": "int32"
        },
        "rowIndex": {
          "type": "integer",
          "format": "int32"
        },
        "rowSpan": {
          "type": "integer",
          "format": "int32"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "paramDef": {
          "description": "Service, settings abd rules definitions",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
            }
          ]
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.DocumentParameterViewModel"
          }
        },
        "verifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.VerificationViewModel"
          }
        }
      }
    },
    "AIForged.ViewModels.ParameterDefViewModel": {
      "type": "object",
      "description": "Service, settings abd rules definitions",
      "required": [
        "id",
        "projectId",
        "serviceTypeId",
        "status",
        "valueType",
        "required",
        "userCount",
        "parameterCount",
        "documentCount"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionStatus"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "valueTypeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "required": {
          "$ref": "#/definitions/AIForged.DAL.RequiredOption"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "info": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
          }
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.DAL.Models.ParameterDefSettingViewModel"
          }
        },
        "totalCharge": {
          "type": "number",
          "format": "double"
        },
        "userCount": {
          "type": "integer",
          "format": "int32"
        },
        "parameterCount": {
          "type": "integer",
          "format": "int32"
        },
        "documentCount": {
          "type": "integer",
          "format": "int32"
        },
        "validation": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.ParameterDefinitionStatus": {
      "type": "integer",
      "description": "Status of definition",
      "x-enumNames": [
        "Default",
        "Deleted"
      ],
      "enum": [
        0,
        99
      ]
    },
    "AIForged.DAL.ParameterDefinitionCategory": {
      "type": "integer",
      "description": "Category of definition",
      "x-enumNames": [
        "None",
        "Setting",
        "Service",
        "Statistics",
        "Results",
        "Dependency",
        "Verification",
        "DataSet",
        "PreProcessor",
        "Processor",
        "PostProcessor",
        "Extraction"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        20,
        21,
        22,
        40
      ]
    },
    "AIForged.DAL.GroupingType": {
      "type": "integer",
      "description": "Type of field grouping",
      "x-enumNames": [
        "None",
        "Page",
        "Cluster",
        "Table",
        "Row",
        "Column",
        "Paragraph",
        "Line",
        "Word",
        "Array",
        "Form",
        "Field",
        "Anchor",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        99
      ]
    },
    "AIForged.DAL.ValueType": {
      "type": "integer",
      "description": "The type of values used for rules and settings",
      "x-enumNames": [
        "None",
        "String",
        "Number",
        "Currency",
        "Boolean",
        "DateTime",
        "TimeSpan",
        "Email",
        "Enum",
        "Picture",
        "Password",
        "SecureString",
        "Address",
        "IDNo",
        "Country",
        "Code",
        "TelephoneNo",
        "GPS",
        "ServiceType",
        "Service",
        "Data",
        "DataSet",
        "System",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        90,
        91,
        98,
        99
      ]
    },
    "AIForged.DAL.RequiredOption": {
      "type": "integer",
      "description": "Indicate the if an option is required",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Optional",
        "UseDefault",
        "UseBestFit",
        "Hidden",
        "Utility",
        "VerificationService",
        "Trained",
        "Conditional"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256
      ]
    },
    "AIForged.DAL.Models.ParameterDefSettingViewModel": {
      "type": "object",
      "description": "Detailed settings for rules and settings",
      "required": [
        "id",
        "parameterDefId",
        "type",
        "status",
        "dtc",
        "dtm",
        "isCaseSensative",
        "invert",
        "oneLine",
        "oneWord",
        "isHandwriting",
        "clearBefore",
        "clearAfter",
        "cleanupValuesBefore",
        "cleanupValuesAfter",
        "validateValuesBefore",
        "validateValuesAfter",
        "abortOnValidationError",
        "isReplacementCaseSensative",
        "maxRetry"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterDefId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.SettingType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.SettingStatus"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "minValue": {
          "type": "string"
        },
        "maxValue": {
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "minConfidence": {
          "type": "number",
          "format": "float"
        },
        "maxConfidence": {
          "type": "number",
          "format": "float"
        },
        "isCaseSensative": {
          "type": "boolean"
        },
        "invert": {
          "type": "boolean"
        },
        "oneLine": {
          "type": "boolean"
        },
        "oneWord": {
          "type": "boolean"
        },
        "isHandwriting": {
          "type": "boolean"
        },
        "orientation": {
          "$ref": "#/definitions/AIForged.DAL.Orientation"
        },
        "marking": {
          "$ref": "#/definitions/AIForged.DAL.MarkingType"
        },
        "cells": {
          "type": "integer",
          "format": "int32"
        },
        "clearBefore": {
          "$ref": "#/definitions/AIForged.DAL.OptionStatusFlags"
        },
        "clearAfter": {
          "$ref": "#/definitions/AIForged.DAL.OptionStatusFlags"
        },
        "cleanupValuesBefore": {
          "type": "boolean"
        },
        "cleanupValuesAfter": {
          "type": "boolean"
        },
        "validateValuesBefore": {
          "type": "boolean"
        },
        "validateValuesAfter": {
          "type": "boolean"
        },
        "abortOnValidationError": {
          "type": "boolean"
        },
        "isReplacementCaseSensative": {
          "type": "boolean"
        },
        "compileResults": {
          "type": "string"
        },
        "maxRetry": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.SettingType": {
      "type": "integer",
      "description": "The type of setting related to a parameter",
      "x-enumNames": [
        "None",
        "Setting",
        "Rule",
        "Dependency",
        "Template",
        "Runtime"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        9,
        10
      ]
    },
    "AIForged.DAL.SettingStatus": {
      "type": "integer",
      "description": "The status of a setting related to a parameter",
      "x-enumNames": [
        "Active",
        "Disabled",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        99
      ]
    },
    "AIForged.DAL.Orientation": {
      "type": "integer",
      "description": "Text orientation of a field",
      "x-enumNames": [
        "None",
        "Horizontal",
        "Vertical",
        "VerticalReverse"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "AIForged.DAL.MarkingType": {
      "type": "integer",
      "description": "Marking type of text ",
      "x-enumNames": [
        "None",
        "Simple",
        "Undelined",
        "SimpleComb",
        "TextInFrame",
        "CombInFrame",
        "PartitionedFrame",
        "CharBox",
        "GreyBox"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AIForged.DAL.OptionStatusFlags": {
      "type": "integer",
      "description": "Status flag of options",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Suspicious",
        "DefaultUsed",
        "Verified",
        "Bypassed",
        "Error",
        "Done",
        "Success",
        "RangeProblem",
        "IsValid",
        "Warnings"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024
      ]
    },
    "AIForged.ViewModels.VerificationViewModel": {
      "type": "object",
      "description": "System and user verification info for fields on documents",
      "required": [
        "id",
        "parameterId",
        "dt",
        "type",
        "status",
        "charge"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "symbolsConfidence": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "result": {
          "type": "string"
        },
        "box": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "userName": {
          "type": "string"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "settingId": {
          "type": "integer",
          "format": "int32"
        },
        "workItem": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "integer",
          "format": "int32"
        },
        "charge": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AIForged.DAL.VerificationType": {
      "type": "integer",
      "description": "Type of verification",
      "x-enumNames": [
        "None",
        "Provider",
        "System",
        "User",
        "Service",
        "Training",
        "RPA",
        "API",
        "DataSet"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AIForged.DAL.VerificationStatus": {
      "type": "integer",
      "description": "Verification status flags",
      "x-enumFlags": true,
      "x-enumNames": [
        "Required",
        "Suspicious",
        "DefaultUsed",
        "Verified",
        "Bypassed",
        "Error",
        "Done",
        "Success",
        "RangeProblem",
        "IsValid",
        "Warnings",
        "Service",
        "Training",
        "Scripted",
        "Deleted"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384
      ]
    },
    "AIForged.ViewModels.DocumentDataViewModel": {
      "type": "object",
      "description": "Document blob data",
      "required": [
        "id",
        "documentId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "documentId": {
          "type": "integer",
          "format": "int32"
        },
        "blobId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.DocumentDataType"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "preview": {
          "type": "string",
          "format": "byte"
        },
        "text": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "resultId": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "resolution": {
          "type": "number",
          "format": "double"
        },
        "availability": {
          "$ref": "#/definitions/AIForged.DAL.Availability"
        }
      }
    },
    "AIForged.DAL.DocumentDataType": {
      "type": "integer",
      "description": "Indicate the type of data related to a document",
      "x-enumNames": [
        "Image",
        "Result",
        "Page",
        "Definition",
        "Training"
      ],
      "enum": [
        0,
        1,
        2,
        10,
        11
      ]
    },
    "AIForged.DAL.SortField": {
      "type": "integer",
      "description": "Field to user for Sorting",
      "x-enumNames": [
        "Id",
        "Name",
        "Description",
        "Date",
        "Status",
        "Category"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AIForged.DAL.SortDirection": {
      "type": "integer",
      "description": "Direction of sort",
      "x-enumNames": [
        "Ascending",
        "Descending"
      ],
      "enum": [
        0,
        1
      ]
    },
    "AIForged.ViewModels.DocParamSummary": {
      "type": "object",
      "description": "Document summary for statistics with parameters info",
      "required": [
        "serviceType",
        "serviceId",
        "usage",
        "status",
        "count",
        "pdId",
        "valueType"
      ],
      "properties": {
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceType": {
          "type": "integer",
          "format": "int32"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "usage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "name": {
          "type": "string"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "labelledCount": {
          "type": "integer",
          "format": "int32"
        },
        "pdId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefName": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "value": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AIForged.ViewModels.DocumentExtraction": {
      "type": "object",
      "description": "Transposed extraction of structured document results",
      "required": [
        "id",
        "valueType",
        "paramId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.ParameterDefinitionCategory"
        },
        "grouping": {
          "$ref": "#/definitions/AIForged.DAL.GroupingType"
        },
        "valueType": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "paramId": {
          "type": "integer",
          "format": "int32"
        },
        "parentParamId": {
          "type": "integer",
          "format": "int32"
        },
        "paramIndex": {
          "type": "integer",
          "format": "int32"
        },
        "paramValue": {
          "type": "string"
        },
        "verificationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "charge": {
          "type": "number",
          "format": "double"
        },
        "provider": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "AIForged.ViewModels.ProjectViewModel": {
      "type": "object",
      "description": "Projects is a container for billing and services",
      "required": [
        "id",
        "status",
        "dtc",
        "dtm"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.ProjectStatus"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "dtc": {
          "type": "string",
          "format": "date-time"
        },
        "dtm": {
          "type": "string",
          "format": "date-time"
        },
        "balance": {
          "description": "Accounting info for projects and services",
          "allOf": [
            {
              "$ref": "#/definitions/AIForged.ViewModels.AccountBalanceItem"
            }
          ]
        },
        "totalDocsCount": {
          "type": "integer",
          "format": "int32"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AIForged.ViewModels.ParameterDefViewModel"
          }
        }
      }
    },
    "AIForged.DAL.ProjectStatus": {
      "type": "integer",
      "description": "Used to indicate the status of a project",
      "x-enumNames": [
        "None",
        "Active",
        "Disabled",
        "Requested",
        "Verification",
        "Rejected",
        "Deleted",
        "Error"
      ],
      "enum": [
        0,
        1,
        2,
        10,
        11,
        20,
        90,
        99
      ]
    },
    "AIForged.ViewModels.AccountBalanceItem": {
      "type": "object",
      "description": "Accounting info for projects and services",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "guid"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "bundleId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "drCount": {
          "type": "number",
          "format": "double"
        },
        "crCount": {
          "type": "number",
          "format": "double"
        },
        "dr": {
          "type": "number",
          "format": "double"
        },
        "cr": {
          "type": "number",
          "format": "double"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "project": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "bundle": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "AIForged.ViewModels.DataTypeViewModel": {
      "type": "object",
      "description": "Data types used for rules and internal processing",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/AIForged.DAL.ValueType"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/AIForged.DAL.DataTypeCategory"
        },
        "valueTypeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.DataTypeCategory": {
      "type": "integer",
      "description": "The category of data types",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Setting",
        "Service",
        "Statistics",
        "Result",
        "Dependency",
        "Verification",
        "PreProcessor",
        "Processor",
        "PostProcessor"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512
      ]
    },
    "AIForged.ViewModels.EnumDataViewModel": {
      "type": "object",
      "description": "List of system Enums and basic UI info",
      "required": [
        "id",
        "type",
        "typeName",
        "name",
        "value"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.EnumType"
        },
        "typeName": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "AIForged.DAL.EnumType": {
      "type": "integer",
      "description": "Enum of all enums in the system",
      "x-enumNames": [
        "EnumType",
        "DataTypeCategory",
        "ProjectStatus",
        "ServiceOptions",
        "ServiceStatus",
        "ProjectUserStatus",
        "LinkType",
        "ConstraintType",
        "ConstraintStatus",
        "ConstraintIntervalType",
        "DocumentStatus",
        "UsageType",
        "ParameterDefinitionCategory",
        "ParameterDefinitionStatus",
        "DocumentDataType",
        "ChargeStatus",
        "ServiceEventType",
        "ServiceEventStatus",
        "BundleType",
        "PaymentStatus",
        "VerificationStatus",
        "FieldRequired",
        "VerificationType",
        "Availability",
        "WorkItemType",
        "WorkItemStatus",
        "WorkItemAction",
        "WorkItemMethod",
        "NotificationType",
        "NotificationStatus",
        "NotificationEvent",
        "SettingType",
        "SettingStatus",
        "MarkingType",
        "Orientation",
        "ReferenceType",
        "ValueType",
        "GroupingType",
        "OptionStatusFlags",
        "RatingType",
        "UserGroupType",
        "UserGroupStatus",
        "LogType",
        "AuditEntity",
        "AuditAccessType",
        "WizardState",
        "WizardType",
        "SortField",
        "SortDirection"
      ],
      "enum": [
        0,
        1,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        22,
        24,
        26,
        27,
        29,
        30,
        31,
        35,
        41,
        50,
        51,
        52,
        55,
        60,
        61,
        62,
        63,
        70,
        71,
        72,
        80,
        81,
        85,
        86,
        90,
        91,
        92,
        95,
        96,
        100,
        101,
        110,
        200,
        201,
        1000,
        1001,
        2000,
        2001
      ]
    },
    "AIForged.ViewModels.VerificationSummary": {
      "type": "object",
      "description": "System and user verification info for fields on documents",
      "required": [
        "id",
        "parameterId",
        "dt",
        "type",
        "status",
        "charge",
        "paramDefId",
        "projectId",
        "docId",
        "year",
        "month",
        "day",
        "dayOfWeek",
        "count"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameterId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dt": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "symbolsConfidence": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/AIForged.DAL.VerificationType"
        },
        "status": {
          "$ref": "#/definitions/AIForged.DAL.VerificationStatus"
        },
        "result": {
          "type": "string"
        },
        "box": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "userName": {
          "type": "string"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceDocId": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "settingId": {
          "type": "integer",
          "format": "int32"
        },
        "workItem": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "integer",
          "format": "int32"
        },
        "charge": {
          "type": "number",
          "format": "double"
        },
        "paramDefId": {
          "type": "integer",
          "format": "int32"
        },
        "paramDefName": {
          "type": "string"
        },
        "projectId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "docId": {
          "type": "integer",
          "format": "int32"
        },
        "docFileName": {
          "type": "string"
        },
        "docContentType": {
          "type": "string"
        },
        "docUsage": {
          "$ref": "#/definitions/AIForged.DAL.UsageType"
        },
        "docStatus": {
          "$ref": "#/definitions/AIForged.DAL.DocumentStatus"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/System.DayOfWeek"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "average": {
          "type": "number",
          "format": "float"
        },
        "min": {
          "type": "number",
          "format": "float"
        },
        "max": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "System.DayOfWeek": {
      "type": "integer",
      "description": "The calendar day of the week",
      "x-enumNames": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://portal.aiforged.com/connect/authorize",
      "tokenUrl": "https://portal.aiforged.com/connect/token",
      "scopes": {
        "openid": "openId",
        "email": "User email",
        "phone": "User phone number",
        "profile": "User profile info",
        "roles": "User roles",
        "aiforgedapi": "Api Scope"
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "openid",
        "email",
        "phone",
        "profile",
        "roles",
        "aiforgedapi"
      ]
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.aiforged.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://portal.aiforged.com/privacypolicy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Content and Files"
    }
  ]
}