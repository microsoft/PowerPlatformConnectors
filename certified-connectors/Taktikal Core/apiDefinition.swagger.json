{
  "swagger": "2.0",
  "info": {
    "title": "Taktikal Core",
    "version": "1.0",
    "description": "With Taktikal Core, you have the capability to sign, seal, authenticate, and obtain detailed information regarding your signing processes.",
    "contact": {
      "name": "Taktikal",
      "url": "https://docs.taktikal.com/",
      "email": "help@taktikal.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://taktikal.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.taktikal.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ],
  "host": "onboarding.taktikal.is",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/signing/activity/{ProcessKey}": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "get": {
        "tags": [
          "signing activity"
        ],
        "summary": "Gets activity log for Signing process",
        "x-ms-summary": "Gets activity log for Signing process",
        "description": "Get the the Activity Log for a Signing process.",
        "operationId": "GetSigningProcessActivityactivityProcessKey_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "query",
            "description": "The email of the user.",
            "x-ms-summary": "The email of the user.",
            "type": "string",
            "required": false
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "x-ms-summary": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date of the log to be searched, must be a bigger date than StartDate.",
            "x-ms-summary": "End date of the log to be searched, must be a bigger date than StartDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ProcessKey",
            "in": "path",
            "description": "Use if to be filtered on a single signing process.",
            "x-ms-summary": "Use if to be filtered on a single signing process.",
            "type": "string",
            "required": true,
            "x-ms-url-encoding": "single"
          },
          {
            "name": "FlowType",
            "in": "query",
            "description": "Can be used to only get activity for a specific flow type.",
            "x-ms-summary": "Can be used to only get activity for a specific flow type.",
            "type": "string",
            "required": false,
            "enum": [
              "RenderFlow",
              "DropAndSign",
              "FillAndSign",
              "PEP",
              "Thinglysingar",
              "Compliance",
              "CompanyLookup"
            ]
          },
          {
            "name": "Take",
            "in": "query",
            "description": "used to page the result set and only return N many results.",
            "x-ms-summary": "used to page the result set and only return N many results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "used to page the result set and skip the first N results.",
            "x-ms-summary": "used to page the result set and skip the first N results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "FlowKey",
            "in": "query",
            "description": "If it has a value we only return records that match this flowKey.",
            "x-ms-summary": "If it has a value we only return records that match this flowKey.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "List<SigningProcessActivityLogWrapper>",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SigningProcessActivityLogWrapper"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/signing/activity/user/": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "get": {
        "tags": [
          "signing activity"
        ],
        "summary": "Gets activity log for a user (email) for a specific period",
        "x-ms-summary": "Gets activity log for a user (email) for a specific period",
        "description": "Gets activity log for a user for a period.",
        "operationId": "GetSigningProcessActivityForUseractivityuser_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "query",
            "description": "The email of the user.",
            "x-ms-summary": "The email of the user.",
            "type": "string",
            "required": false
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "x-ms-summary": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date of the log to be searched, must be a bigger date than StartDate.",
            "x-ms-summary": "End date of the log to be searched, must be a bigger date than StartDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "ProcessKey",
            "in": "query",
            "description": "Use if to be filtered on a single signing process.",
            "x-ms-summary": "Use if to be filtered on a single signing process.",
            "type": "string",
            "required": false
          },
          {
            "name": "FlowType",
            "in": "query",
            "description": "Can be used to only get activity for a specific flow type.",
            "x-ms-summary": "Can be used to only get activity for a specific flow type.",
            "type": "string",
            "required": false,
            "enum": [
              "RenderFlow",
              "DropAndSign",
              "FillAndSign",
              "PEP",
              "Thinglysingar",
              "Compliance",
              "CompanyLookup"
            ]
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Used to page the result set and only return N many results.",
            "x-ms-summary": "Used to page the result set and only return N many results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Used to page the result set and skip the first N results.",
            "x-ms-summary": "Used to page the result set and skip the first N results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "FlowKey",
            "in": "query",
            "description": "If it has a value we only return records that match this flowKey.",
            "x-ms-summary": "If it has a value we only return records that match this flowKey",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "List<SigningProcessActivityLogWrapper>",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SigningProcessActivityLogWrapper"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/signing/activity/company": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "get": {
        "tags": [
          "signing activity"
        ],
        "summary": "Gets activity log for a Company",
        "description": "Gets activity log for a Company",
        "x-ms-summary": "Gets activity log for a Company",
        "operationId": "GetSigningProcessActivityByCompanyactivitycompany_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "x-ms-summary": "Start date of the log to be searched, must be a smaller date than EndDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date of the log to be searched, must be a bigger date than StartDate.",
            "x-ms-summary": "End date of the log to be searched, must be a bigger date than StartDate.",
            "type": "string",
            "format": "date-time",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Used to page the result set and only return N many results.",
            "x-ms-summary": "Used to page the result set and only return N many results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Used to page the result set and skip the first N results.",
            "x-ms-summary": "Used to page the result set and skip the first N results.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "name": "User",
            "in": "query",
            "description": "The email of the user.",
            "x-ms-summary": "The email of the user.",
            "type": "string",
            "required": false
          },
          {
            "name": "FlowType",
            "in": "query",
            "description": "Can be used to only get activity for a specific flow type.",
            "x-ms-summary": "Can be used to only get activity for a specific flow type.",
            "type": "string",
            "required": false,
            "enum": [
              "RenderFlow",
              "DropAndSign",
              "FillAndSign",
              "PEP",
              "Thinglysingar",
              "Compliance",
              "CompanyLookup"
            ]
          },
          {
            "name": "FlowKey",
            "in": "query",
            "description": "If it has a value we only return records that match this flowKey.",
            "x-ms-summary": "If it has a value we only return records that match this flowKey.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "List<SigningProcessActivityLogWrapper>",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SigningProcessActivityLogWrapper"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/management/sealing": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "post": {
        "tags": [
          "document sealing"
        ],
        "summary": "Seals a PDF document",
        "x-ms-summary": "Seals a PDF document",
        "description": "Seals a provided PDF document provided as a base64 string.",
        "operationId": "SealingRequestsealing_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SealingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SealingResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/management/signing": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "delete": {
        "tags": [
          "signing"
        ],
        "summary": "Cancel a Signing process",
        "x-ms-summary": "Cancel a Signing process",
        "description": "Cancel the Signing process based for a given Process Key.",
        "operationId": "CancelSigningProcesssigning_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ProcessKey",
            "in": "query",
            "type": "string",
            "description": "Unique identifier for a single document Signing process.",
            "x-ms-summary": "Unique identifier for a single document Signing process."
          },
          {
            "name": "User",
            "in": "query",
            "type": "string",
            "description": "String object, usually the email of the employee that has access to the portal.",
            "x-ms-summary": "String object, usually the email of the employee that has access to the portal."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SigningProcess"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "signing"
        ],
        "summary": "Creates a new Signing process with one or more signees",
        "x-ms-summary": "Creates a new Signing process with one or more signees",
        "description": "Creates a new Signing process with with one or more signees.",
        "operationId": "CreateSigningProcesssigning_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateSigningProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SigningProcess"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/management/sealing/xml": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "post": {
        "tags": [
          "document sealing"
        ],
        "summary": "Seals an XML document",
        "x-ms-summary": "Seals an XML document",
        "description": "Seals a provided XML document provided as a base64 string.",
        "operationId": "SealingXmlRequestsealingxml_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SealingXmlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/management/signing/sequential": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "delete": {
        "tags": [
          "signing"
        ],
        "summary": "Cancel the sequential Signing process",
        "x-ms-summary": "Cancel the sequential Signing process",
        "description": "Cancel the sequential Signing process based for a given Sequence Key. A user (email) can be provided that cancels the sequential process.",
        "operationId": "CancelSequenceSigningsigningsequential_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SequenceKey",
            "in": "query",
            "description": "Sequential signing process identifier that has to be provided.",
            "x-ms-summary": "Sequential signing process identifier that has to be provided.",
            "type": "string",
            "required": true
          },
          {
            "name": "User",
            "in": "query",
            "description": "Only the user who started the signing process can cancel it.",
            "x-ms-summary": "Only the user who started the signing process can cancel it.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SequentialSigning"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "signing"
        ],
        "summary": "Creates a new Sequential (Bulk) Signing processes",
        "x-ms-summary": "Creates a new Sequential (Bulk) Signing processes",
        "description": "Creates a new Sequential Signing process (Bulk) with one or more Signing Processes.\nEach Signing process in a sequence has one or more signees.\n\nExample: \n* A company wants document A and B signed. Signee X should sign document A and B, Signee Y should sign document A and Signee Z should sign Document B.\n* Then A new CreateSequentalSigning with array of two CreateSigningProcess object. Signees X and Y are added as signees for CreateSigningProcess for Document A and signees X and Z are added as signees for Document B.\n\nDetailed documentation can be found on https://docs.taktikal.is/docs/api/using-the-signing-api/sequence-signing/",
        "operationId": "CreateSequentialSigningsigningsequential_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateSequentialSigning"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SequentialSigning"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basic-auth": []
          }
        ]
      }
    },
    "/Auth/Start": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Initiates a authentication process with Icelandic e-id",
        "x-ms-summary": "Initiates a authentication process with Icelandic e-id",
        "description": "\nAuthenticating with the Icelandic e-id can be done with a mobile phone or Audkenni app.\n* Using Mobile Phone: The AuthenticationContextType should be set to 'Sim' and the phoneNumber must be set to an Icelandic mobile phone number. The ssn is ignored.\n* Using Audkenni App: The AuthenticationContextType should be set to 'App' and the ssn must be set to an Icdlandic social security number. The phoneNumber is ignored. \n\nflowKey should always be provided and is acccessible in Taktikal portal. ",
        "operationId": "AuthStartStart_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuthStart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartAuthResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Auth/Poll": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Checks the status of authentication for a user using their Icelandic e-id",
        "x-ms-summary": "Checks the status of authentication for a user using their Icelandic e-id",
        "description": "After a successful response from /Auth/Start a AuthRequestId is returned and is used to check if authentication is finished.\nIf authentication is finished and is successful the customer object is populated depending on the LookupType. The lookup type indicates the type of information is retrieved for the Icelandic National Registry.\n\n There are three different datasets returned depending on the LookupType: \n  1. Name: Will only return the SSN and Name of the authenticated person. This has no additional lookup cost.\n  \n  2. NameAddress: Will return Name, SSN and address information. This has an additional lookup cost. This is the default value if no value is given for LookupType.\n                \n  3. NameAddressFamily: Returns Name, SSN, Address data, gender code, and family information.\n                \nIf 'LookupType.NameAddressFamily' is selected then the extra values returned will be returned in 'Meta'.\n            \nIf the response has errors or is not finished, the customer object will be null and a StatusMessage will have a detailed message.\n            ",
        "operationId": "AuthPollPoll_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuthPoll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PollCustomer"
            }
          }
        },
        "deprecated": false
      }
    },
    "/signing/sequential/{SequenceKey}/auth": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "post": {
        "tags": [
          "signing"
        ],
        "summary": "Starts an auth process with Icelandic e-id for a sequential signing processes",
        "x-ms-summary": "Starts an auth process with Icelandic e-id for a sequential signing processes",
        "description": "\nAuthenticating with the Icelandic e-id can be done with a mobile phone or Audkenni app.\n* Using Mobile Phone: The AuthenticationContextType should be set to 'Sim' and the phoneNumber must be set to an Ucelandic mobile phone number. The ssn is ignored.\n* Using Audkenni App: The AuthenticationContextType should be set to 'App' and the ssn must be set to an Icdlandic social security number. The phoneNumber is ignored. ",
        "operationId": "RequestToViewSequenceStartsequentialSequenceKeyauth_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SequenceKey",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique identifier for a sequence (Bulk) Signing processes.",
            "x-ms-summary": "Unique identifier for a sequence (Bulk) Signing processes.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RequestToViewSequenceStart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartAuthResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/signing/{ProcessKey}/signee/{SigneeKey}": {
      "parameters": [
        {
          "$ref": "#/parameters/Accept"
        }
      ],
      "get": {
        "tags": [
          "signing"
        ],
        "summary": "Gets the signing process by processKey and signeeKey",
        "x-ms-summary": "Gets the signing process by processKey and signeeKey",
        "description": "Get's the signing process by processkey and signeeKey.",
        "operationId": "GetSigningProcessBySigneeProcessKeysigneeSigneeKey_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ProcessKey",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique identifier for a single document Signing process.",
            "x-ms-summary": "Unique identifier for a single document Signing process.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "SigneeKey",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique identifier of a person signing a single signing process.",
            "x-ms-summary": "Unique identifier of a person signing a single signing process.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "UserAgent",
            "in": "query",
            "type": "string",
            "description": "A User Agent is software acting for a user, like a web browser or email client.",
            "x-ms-summary": "A User Agent is software acting for a user, like a web browser or email client."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SigningProcess"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "signing"
        ],
        "summary": "Update a Signee for given ProcessKey and SigneeKey",
        "x-ms-summary": "Update a Signee for given ProcessKey and SigneeKey",
        "description": "Signee properties can be updated based having provided the ProcessKey and the SigneeKey.",
        "operationId": "UpdateSigneeProcessKeysigneeSigneeKey_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SigneeKey",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique identifier of a person signing a single signing process.",
            "x-ms-summary": "Unique identifier of a person signing a single signing process.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "ProcessKey",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique identifier for a single document Signing process.",
            "x-ms-summary": "Unique identifier for a single document Signing process.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSignee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Signee"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Object": {
      "properties": {},
      "description": "Object",
      "type": "object"
    },
    "Signee": {
      "title": "Signee",
      "properties": {
        "name": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "signed": {
          "type": "boolean",
          "x-nullable": false
        },
        "signedAt": {
          "type": "string",
          "format": "date-time"
        },
        "processKey": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "hidePersonalCode": {
          "type": "boolean",
          "x-nullable": false
        },
        "communicationDeliveryType": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "signatureType": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "customSmsText": {
          "type": "string"
        }
      },
      "description": "Signee",
      "type": "object"
    },
    "SigningAttachment": {
      "title": "SigningAttachment",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileContent": {
          "type": "string"
        }
      },
      "description": "SigningAttachment",
      "type": "object"
    },
    "AttachmentReference": {
      "title": "AttachmentReference",
      "properties": {
        "id": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "contentLength": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        },
        "contentType": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "processKey": {
          "type": "string"
        },
        "attachmentType": {
          "type": "string"
        },
        "signeeKey": {
          "type": "string"
        }
      },
      "description": "AttachmentReference",
      "type": "object"
    },
    "Dictionary_String_String_": {
      "title": "Dictionary<String,String>",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Dictionary<String,String>",
      "type": "object"
    },
    "SealingRequest": {
      "title": "SealingRequest",
      "required": [
        "pdfDocument",
        "flowKey"
      ],
      "properties": {
        "pdfDocument": {
          "description": "A Base64String of the PDF document to seal.",
          "type": "string"
        },
        "flowKey": {
          "description": "Unique identifier for a Flow that belongs to a Company.",
          "type": "string"
        },
        "reason": {
          "description": "set the reason to display in the seal",
          "type": "string"
        },
        "languageType": {
          "type": "string"
        }
      },
      "description": "SealingRequest",
      "type": "object"
    },
    "CreateSigningProcess": {
      "title": "CreateSigningProcess",
      "required": [
        "flowKey"
      ],
      "properties": {
        "pdfDocument": {
          "description": "is a base64 string of the document to sign. This is not required if the flowKey takes care of creating the document.",
          "type": "string"
        },
        "pdfFileName": {
          "description": "If PdfDocument is being used a value for the file name needs to be provided.",
          "type": "string"
        },
        "flowKey": {
          "description": "FlowKey is provided by Taktikal. This key will tell Taktikal how to handle this request.\n            For some flowKeys Taktikal will take care of creating the document.\n            It will also control where the signed document is delivered after signing.",
          "type": "string"
        },
        "createSignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSignee"
          }
        },
        "meta": {
          "$ref": "#/definitions/Dictionary_String_String_",
          "description": "Is a key-value store that is used to store additional data for this particular signingProcess.\n    The data here can be used to create the document if needed, and displayed in emails.\n    All data in meta is also delivered in the webhook response"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigningAttachment"
          }
        },
        "attachmentReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentReference"
          }
        },
        "requiresAuth": {
          "description": "Default value is false. If set to true then all signers need to use\n                    there e-Id to authenticate before being able to view the document. ",
          "type": "boolean",
          "x-nullable": false
        },
        "signInOrder": {
          "description": "Default value is false. Will control the order of signers.\n              It will only send a signing request to the first person in the signers list to begin with.\n              After he has signed the next signee and so on.",
          "type": "boolean",
          "x-nullable": false
        },
        "signatureLocation": {
          "description": "Can be BottomLastPage or the default value TopFirstPage. Will control where to display the signature in the document.",
          "type": "string",
          "enum": [
            "TopFirstPage",
            "BottomLastPage"
          ]
        },
        "user": {
          "description": "email address of the user that send the request. Can be empty.",
          "type": "string"
        },
        "sequenceKey": {
          "type": "string"
        },
        "activityDisplayName": {
          "type": "string"
        },
        "flattenDocument": {
          "description": "Default value is false. If set to true then we will attempt to flatten the documents\n        input fields. ",
          "type": "boolean",
          "x-nullable": false
        },
        "reminderRule": {
          "description": "Sends reminders, leave empty for none. format should be \"firstReminder after x days:Then every y days\" e.g. \"1:3\" will send one reminder after 1 day, and then every three days after that. Leave empty or null for no reminders, valid values will be for first reminder to be sent between 0-30 days (0 means no reminder), and then send every 0-15 days (0, again, meaning no reminders, So 0:10 would only send reminder every 10 days, while 12:0 would send only one reminder after 12 days",
          "type": "string"
        }
      },
      "description": "CreateSigningProcess",
      "type": "object"
    },
    "CreateSignee": {
      "title": "CreateSignee",
      "properties": {
        "processKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "hidePersonalCode": {
          "type": "boolean",
          "x-nullable": false
        },
        "communicationDeliveryType": {
          "type": "string"
        },
        "customSmsText": {
          "type": "string"
        },
        "signatureType": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      },
      "description": "CreateSignee",
      "type": "object"
    },
    "SealingXmlRequest": {
      "title": "SealingXmlRequest",
      "required": [
        "xmlDocument",
        "flowKey"
      ],
      "properties": {
        "xmlDocument": {
          "description": "Base64String of the XML document to seal",
          "type": "string"
        },
        "flowKey": {
          "description": "A valid flowKey provided by Taktikal that can be used for sealing",
          "type": "string"
        }
      },
      "description": "SealingXmlRequest",
      "type": "object"
    },
    "CreateSequentialSigning": {
      "title": "CreateSequentialSigning",
      "required": [
        "createSigningProcesses",
        "user"
      ],
      "properties": {
        "createSigningProcesses": {
          "description": "List of signing processes. At least 1 signing process is required.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSigningProcess"
          }
        },
        "user": {
          "description": "The user who starts the sequential signing process",
          "type": "string"
        },
        "requiresAuth": {
          "description": "Default value is false. If set to true then all signers need to use\n                    there e-Id to authenticate before being able to view the document. ",
          "type": "boolean",
          "x-nullable": false
        },
        "signInOrder": {
          "description": "Default value is false. Will control the order of signers.\n              It will only send a signing request to the first person in the signers list to begin with.\n              After he has signed the next signee and so on.",
          "type": "boolean",
          "x-nullable": false
        }
      },
      "description": "CreateSequentialSigning",
      "type": "object"
    },
    "AuthStart": {
      "title": "AuthStart",
      "required": [
        "flowKey",
        "authenticationContextType"
      ],
      "properties": {
        "ssn": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "flowKey": {
          "type": "string",
          "description": "Unique identifier for a Flow that belongs to a Company."
        },
        "authenticationContextType": {
          "type": "string",
          "enum": [
            "Sim",
            "App"
          ]
        }
      },
      "description": "AuthStart",
      "type": "object"
    },
    "AuthPoll": {
      "title": "AuthPoll",
      "required": [
        "authRequestId",
        "flowKey",
        "lookupType"
      ],
      "properties": {
        "authRequestId": {
          "type": "string"
        },
        "flowKey": {
          "type": "string",
          "description": "Unique identifier for a Flow that belongs to a Company."
        },
        "lookupType": {
          "type": "string",
          "enum": [
            "NameAddress",
            "Name",
            "NameAddressFamily"
          ]
        }
      },
      "description": "AuthPoll",
      "type": "object"
    },
    "RequestToViewSequenceStart": {
      "title": "RequestToViewSequenceStart",
      "required": [
        "sequenceKey",
        "loginHint",
        "authenticationContextType"
      ],
      "properties": {
        "sequenceKey": {
          "type": "string"
        },
        "loginHint": {
          "type": "string"
        },
        "authenticationContextType": {
          "type": "string",
          "enum": [
            "Sim",
            "App"
          ]
        }
      },
      "description": "RequestToViewSequenceStart",
      "type": "object"
    },
    "UpdateSignee": {
      "title": "UpdateSignee",
      "required": [
        "signeeKey",
        "processKey"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "signeeKey": {
          "type": "string"
        },
        "processKey": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "description": "UpdateSignee",
      "type": "object"
    },
    "SigningProcessActivityLogWrapper": {
      "title": "SigningProcessActivityLogWrapper",
      "properties": {
        "processKey": {
          "type": "string"
        },
        "activityLog": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigningProcessActivityLog"
          }
        },
        "signees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigneeActivityLog"
          }
        },
        "sequenceSignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SequentialSigningSigneeActivityLog"
          }
        },
        "attachmentReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentReference"
          }
        },
        "activityDisplayName": {
          "type": "string"
        }
      },
      "description": "SigningProcessActivityLogWrapper",
      "type": "object"
    },
    "SigningProcessActivityLog": {
      "title": "SigningProcessActivityLog",
      "properties": {
        "flowKey": {
          "type": "string",
          "description": "Unique identifier for a Flow that belongs to a Company."
        },
        "processKey": {
          "type": "string"
        },
        "signeeKey": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "createdBy": {
          "type": "string"
        },
        "requiresAuth": {
          "type": "boolean"
        },
        "signInOrder": {
          "type": "boolean"
        },
        "signatureLocation": {
          "type": "string"
        },
        "sequenceKey": {
          "type": "string"
        }
      },
      "description": "SigningProcessActivityLog",
      "type": "object"
    },
    "SigneeActivityLog": {
      "title": "SigneeActivityLog",
      "properties": {
        "processKey": {
          "type": "string"
        },
        "signeeKey": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "signatureType": {
          "type": "string"
        }
      },
      "description": "SigneeActivityLog",
      "type": "object"
    },
    "SequentialSigningSigneeActivityLog": {
      "title": "SequentialSigningSigneeActivityLog",
      "properties": {
        "sequenceKey": {
          "type": "string"
        },
        "signeeKey": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "signingKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigneeKeys"
          }
        }
      },
      "description": "SequentialSigningSigneeActivityLog",
      "type": "object"
    },
    "SigneeKeys": {
      "title": "SigneeKeys",
      "properties": {
        "signeeKey": {
          "type": "string"
        },
        "processKey": {
          "type": "string"
        }
      },
      "description": "SigneeKeys",
      "type": "object"
    },
    "SequentialSigning": {
      "title": "SequentialSigning",
      "properties": {
        "key": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "requiresAuth": {
          "type": "boolean",
          "x-nullable": false
        },
        "user": {
          "type": "string"
        },
        "signInOrder": {
          "type": "boolean",
          "x-nullable": false
        },
        "signees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SequentialSigningSignee"
          }
        },
        "signingProcesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigningProcess"
          }
        }
      },
      "description": "SequentialSigning",
      "type": "object"
    },
    "SequentialSigningSignee": {
      "title": "SequentialSigningSignee",
      "properties": {
        "key": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "signingKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigneeKeys"
          }
        }
      },
      "description": "SequentialSigningSignee",
      "type": "object"
    },
    "SigningProcess": {
      "title": "SigningProcess",
      "properties": {
        "key": {
          "type": "string"
        },
        "signees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signee"
          }
        },
        "flowKey": {
          "type": "string",
          "description": "Unique identifier for a Flow that belongs to a Company."
        },
        "status": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        },
        "pdfFileName": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SigningAttachment"
          }
        },
        "attachmentReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentReference"
          }
        },
        "requiresAuth": {
          "type": "boolean",
          "x-nullable": false
        },
        "user": {
          "type": "string"
        },
        "signInOrder": {
          "type": "boolean",
          "x-nullable": false
        },
        "signatureLocation": {
          "type": "string"
        },
        "sequenceKey": {
          "type": "string"
        },
        "flattenDocument": {
          "type": "boolean",
          "x-nullable": false
        }
      },
      "description": "SigningProcess",
      "type": "object"
    },
    "StartAuthResponse": {
      "title": "StartAuthResponse",
      "properties": {
        "authRequestId": {
          "type": "string"
        },
        "verificationCode": {
          "type": "string"
        }
      },
      "description": "StartAuthResponse",
      "type": "object"
    },
    "ResponseStatus": {
      "title": "ResponseStatus",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseError"
          }
        },
        "meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "ResponseStatus",
      "type": "object"
    },
    "ResponseError": {
      "title": "ResponseError",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "ResponseError",
      "type": "object"
    },
    "SealingResponse": {
      "title": "SealingResponse",
      "properties": {
        "pdfDocument": {
          "type": "string"
        }
      },
      "description": "SealingResponse",
      "type": "object"
    },
    "ErrorResponse": {
      "title": "ErrorResponse",
      "properties": {
        "responseStatus": {
          "$ref": "#/definitions/ResponseStatus"
        }
      },
      "description": "ErrorResponse",
      "type": "object"
    },
    "Customer": {
      "title": "Customer",
      "properties": {
        "name": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "flowKey": {
          "type": "string",
          "description": "Unique identifier for a Flow that belongs to a Company."
        },
        "meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "Customer",
      "type": "object"
    },
    "PollCustomer": {
      "title": "PollCustomer",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "statusMessage": {
          "type": "string"
        },
        "waitingForUserInput": {
          "type": "boolean",
          "x-nullable": false
        }
      },
      "description": "PollCustomer",
      "type": "object"
    }
  },
  "parameters": {
    "Accept": {
      "name": "Accept",
      "in": "header",
      "description": "Accept Header",
      "x-ms-summary": "Accept Header",
      "type": "string",
      "required": true,
      "enum": [
        "application/json"
      ]
    }
  },
  "securityDefinitions": {
    "basic-auth": {
      "type": "basic"
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication with Icelandic EId (Au\u00f0kenni) methods."
    },
    {
      "name": "document sealing",
      "description": "ApiResource: Sealing"
    },
    {
      "name": "signing",
      "description": "ApiResource: Signing"
    },
    {
      "name": "signing activity",
      "description": "ApiResource: Signing"
    }
  ],
  "security": [
    {
      "basic-auth": []
    }
  ]
}