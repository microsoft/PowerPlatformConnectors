{
  "swagger": "2.0",
  "info": {
    "title": "SignNow",
    "description": "SignNow makes it easy to sign, send, and manage documents anywhere on any device with a simple and secure electronic signature solution.",
    "version": "1.2.1",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "snflowproxy.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/document": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentProperties"
              }
            }
          }
        },
        "summary": "Get Document List",
        "operationId": "GetListDoc",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "template",
            "x-ms-summary": "Template",
            "description": "Specify if documents or templates should be retrieved",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "includeDefaultTemplate",
            "x-ms-summary": "Include Default Template",
            "description": "Specify if default template should be added to templates list",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-visibility": "advanced"
          }
        ],
        "description": "Retrieve a list of user's documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/DocumentId"
                }
              }
            }
          }
        },
        "summary": "Upload Document",
        "description": "Upload a document to SignNow",
        "operationId": "UploadDocument",
        "x-ms-visibility": "important",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "File to upload",
            "x-ms-summary": "File",
            "required": true,
            "type": "file"
          }
        ]
      }
    },
    "/document/{doc_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentProperties"
            }
          }
        },
        "parameters": [
          {
            "name": "template",
            "x-ms-summary": "Template",
            "description": "Specify if documents or templates should be retrieved",
            "x-ms-visibility": "important",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important",
            "description": "Specify a unique document ID or select a document from the list",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": {
                  "parameter": "template"
                }
              }
            }
          }
        ],
        "summary": "Get Document Information",
        "description": "Get document properties like name, id, create/update dates etc.",
        "x-ms-visibility": "important",
        "operationId": "GetDoc"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Document removal status",
                  "x-ms-summary": "Status",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Delete Document",
        "description": "Delete a document from SignNow",
        "operationId": "DeleteDoc",
        "x-ms-visibility": "advanced"
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/DocumentId"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document Template",
            "description": "Select a template from the list",
            "x-ms-visibility": "important",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "document_name": {
                  "type": "string",
                  "x-ms-summary": "Document Name",
                  "description": "Enter new file name for the document",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        ],
        "summary": "Create Document from Template",
        "description": "Generate a document from a selected template",
        "x-ms-visibility": "important",
        "operationId": "CreateFromTemplate"
      }
    },
    "/schema/invite": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "GetInviteSchema",
        "summary": "Get invite request body schema",
        "x-ms-visibility": "internal",
        "description": "Retrieve the OpenAPI request body schema for the invite to sign the document"
      }
    },
    "/document/{doc_id}/link": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "url_no_signup": {
                  "type": "string",
                  "description": "Signing Link",
                  "x-ms-summary": "URL",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID or select a document from the list",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          }
        ],
        "summary": "Create Signing Link",
        "description": "Generate a link to the document and share it to have the document signed",
        "operationId": "CreateSigningLink",
        "x-ms-visibility": "important"
      }
    },
    "/document/{template_id}/invite": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "template",
            "x-ms-summary": "Template",
            "description": "Specify if documents or templates should be retrieved",
            "in": "query",
            "required": true,
            "default": true,
            "type": "boolean",
            "x-ms-visibility": "important"
          },
          {
            "name": "template_id",
            "x-ms-summary": "Document",
            "x-ms-visibility": "important",
            "description": "Select a template from the list",
            "in": "path",
            "required": true,
            "default": "(default)",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "includeDefaultTemplate": true,
                "template": {
                  "parameter": "template"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetInviteSchema",
                "parameters": {
                  "doc_id": {
                    "parameter": "template_id"
                  }
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetInviteSchema",
                "parameters": {
                  "doc_id": {
                    "parameterReference": "template_id"
                  }
                }
              }
            }
          }
        ],
        "summary": "Invite to sign",
        "description": "Invite others to fill out and sign the document",
        "operationId": "SendInvite",
        "x-ms-visibility": "important"
      }
    },
    "/document/{doc_id}/download": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID or select a document from the list",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "mode",
            "x-ms-summary": "Format",
            "description": "Select a document format for downloading",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "Collapsed",
            "x-ms-dynamic-values": {
              "operationId": "GetEnumValues",
              "value-path": "value",
              "value-title": "name",
              "parameters": {
                "definitionKey": "DownloadMode"
              }
            },
            "x-ms-visibility": "advanced"
          }
        ],
        "summary": "Download Document",
        "description": "Download a document from SignNow",
        "operationId": "DownloadDocument",
        "x-ms-visibility": "important"
      }
    },
    "/document/{doc_id}/fields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFields"
            }
          }
        },
        "parameters": [
          {
            "name": "template_id",
            "x-ms-summary": "Template",
            "description": "Specify a document template to get fields from",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          },
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get Document Fields",
        "description": "Get document field values.",
        "operationId": "GetDocFields",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "x-ms-api-annotation": {
          "family": "DocumentFields",
          "status": "Preview",
          "revision": 1
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/DocumentId"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "template_id",
            "x-ms-summary": "Template",
            "description": "Specify a document template to get fields from",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          },
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "body",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetDocSchema",
                "parameters": {
                  "doc_id": {
                    "parameter": "template_id"
                  },
                  "select": "text"
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetDocSchema",
                "parameters": {
                  "doc_id": {
                    "parameterReference": "template_id"
                  }
                }
              }
            }
          }
        ],
        "summary": "Prefill Document Field Values",
        "description": "Prefill field values and properties.",
        "operationId": "UpdateFieldValues",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "x-ms-api-annotation": {
          "family": "PutDocumentFields",
          "status": "Preview",
          "revision": 1
        }
      }
    },
    "/v2/document/{doc_id}/fields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentFields_V2"
            }
          }
        },
        "parameters": [
          {
            "name": "template_id",
            "x-ms-summary": "Template",
            "description": "Specify a document template to get fields from",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          },
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get Document Fields",
        "description": "Retrieve values from the fillable fields in the document",
        "operationId": "GetDocFields_V2",
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "family": "DocumentFields",
          "status": "Preview",
          "revision": 2
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/DocumentId"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "template_id",
            "x-ms-summary": "Template",
            "description": "Specify a document template to get fields from",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetListDoc",
              "value-path": "id",
              "value-title": "document_name",
              "parameters": {
                "template": true
              }
            }
          },
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "body",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetDocSchema_V2",
                "parameters": {
                  "doc_id": {
                    "parameter": "template_id"
                  },
                  "select": "text"
                },
                "value-path": "properties"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetDocSchema_V2",
                "parameters": {
                  "doc_id": {
                    "parameterReference": "template_id"
                  }
                }
              }
            }
          }
        ],
        "summary": "Prefill Document Field Values",
        "description": "Automatically populate fillable fields in the document with specific values",
        "operationId": "UpdateFieldValues_V2",
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "family": "PutDocumentFields",
          "status": "Preview",
          "revision": 2
        }
      }
    },
    "/schema/fields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "select",
            "x-ms-summary": "Field type filter",
            "description": "Separate with a comma what field types you'd like to retrieve",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "GetDocSchema",
        "summary": "Get document schema",
        "description": "Get OpenAPI document schema",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "x-ms-api-annotation": {
          "family": "SchemaFields",
          "status": "Preview",
          "revision": 1
        }
      }
    },
    "/v2/schema/fields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "doc_id",
            "x-ms-summary": "Document ID",
            "description": "Specify a unique document ID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "select",
            "x-ms-summary": "Field type filter",
            "description": "Separate with a comma what field types you'd like to retrieve",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "GetDocSchema_V2",
        "summary": "Get document schema",
        "x-ms-visibility": "internal",
        "description": "Retrieve the OpenAPI document schema",
        "x-ms-api-annotation": {
          "family": "SchemaFields",
          "status": "Preview",
          "revision": 2
        }
      }
    },
    "/enum/{definitionKey}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "value": {
                    "type": "string",
                    "description": "value"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "definitionKey",
            "description": "Enum definition name. Complete list of definitions can be found calling /enum endpoint",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "GetEnumValues",
        "summary": "Get Enum Values",
        "x-ms-visibility": "internal",
        "description": "Retrieve available enums for dynamic values"
      }
    },
    "/event/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "x-ms-summary": "id"
                },
                "status": {
                  "type": "string",
                  "description": "status",
                  "x-ms-summary": "status"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event subscription being deleted",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Delete Event Subscription",
        "description": "Remove the user's subscription for a particular event",
        "operationId": "DeleteEvent",
        "x-ms-visibility": "internal",
        "deprecated": true,
        "x-ms-api-annotation": {
          "family": "DeleteEvent",
          "status": "Preview",
          "revision": 1
        }
      }
    },
    "/event": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "meta": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "integer",
                  "description": "Date and time when the event occured (Unix timestamp format).",
                  "x-ms-summary": "Timestamp",
                  "x-ms-visibility": "advanced"
                },
                "event": {
                  "type": "string",
                  "description": "Document event that caused the trigger.",
                  "x-ms-summary": "Event",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "content": {
              "type": "object",
              "properties": {
                "document_id": {
                  "type": "string",
                  "description": "Unique ID of target document which caused the event.",
                  "x-ms-summary": "Document ID",
                  "x-ms-visibility": "important"
                },
                "document_name": {
                  "type": "string",
                  "description": "Target document file name without extension",
                  "x-ms-summary": "Document Name",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "description": "Response"
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id",
                        "x-ms-summary": "id"
                      },
                      "event": {
                        "type": "string",
                        "description": "event",
                        "x-ms-summary": "event"
                      },
                      "created": {
                        "type": "string",
                        "description": "created",
                        "x-ms-summary": "created"
                      }
                    }
                  },
                  "description": "subscriptions",
                  "x-ms-summary": "subscriptions"
                }
              }
            }
          }
        },
        "parameters": [],
        "summary": "Get Event Subscription",
        "description": "Retrieve the event subscriptions for a particular user",
        "operationId": "GetEvent",
        "x-ms-visibility": "internal"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "x-ms-summary": "id"
                },
                "created": {
                  "type": "string",
                  "description": "created",
                  "x-ms-summary": "created"
                },
                "updated": {
                  "type": "string",
                  "description": "updated",
                  "x-ms-summary": "updated"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "string",
                  "description": "Select event which should trigger the Flow.",
                  "x-ms-summary": "Event",
                  "x-ms-visibility": "important",
                  "default": "document.complete",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEnumValues",
                    "value-path": "value",
                    "value-title": "name",
                    "parameters": {
                      "definitionKey": "DocumentEvent"
                    }
                  }
                },
                "callback_url": {
                  "type": "string",
                  "description": "callback_url",
                  "x-ms-summary": "callback_url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "event",
                "callback_url"
              ]
            }
          }
        ],
        "summary": "Start flow on document event",
        "description": "You can create trigger for one of this event: document create, document update, document delete, document complete, invite create, invite update",
        "operationId": "Triggers",
        "x-ms-trigger": "single",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "x-ms-api-annotation": {
          "family": "PostEvent",
          "status": "Preview",
          "revision": 1
        }
      }
    },
    "/multievent/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "x-ms-summary": "id"
                },
                "status": {
                  "type": "string",
                  "description": "status",
                  "x-ms-summary": "status"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event subscription being deleted",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Delete Event Subscription",
        "description": "Remove the user's subscription for a particular event",
        "operationId": "DeleteEvent_V2",
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "family": "DeleteEvent",
          "status": "Preview",
          "revision": 2
        }
      }
    },
    "/multievent": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "meta": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "string",
                  "description": "Document event that caused the trigger.",
                  "x-ms-summary": "Event",
                  "x-ms-visibility": "advanced"
                },
                "environment": {
                  "type": "string",
                  "description": "Environment",
                  "x-ms-summary": "Environment",
                  "x-ms-visibility": "internal"
                },
                "callback_url": {
                  "type": "string",
                  "description": "Callback URL",
                  "x-ms-summary": "Callback Url",
                  "x-ms-visibility": "internal"
                }
              }
            },
            "content": {
              "type": "object",
              "properties": {
                "document_id": {
                  "type": "string",
                  "description": "Unique ID of target document which caused the event.",
                  "x-ms-summary": "Document ID",
                  "x-ms-visibility": "important"
                },
                "document_name": {
                  "type": "string",
                  "description": "Target document file name without extension",
                  "x-ms-summary": "Document Name",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "description": "Response"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id",
                  "x-ms-summary": "id"
                },
                "created": {
                  "type": "string",
                  "description": "created",
                  "x-ms-summary": "created"
                },
                "updated": {
                  "type": "string",
                  "description": "updated",
                  "x-ms-summary": "updated"
                }
              }
            }
          }
        },
        "summary": "Start flow on document event",
        "description": "Select the event to trigger on: the new or updated signature invite; when someone creates, updates, completes, or deletes a document",
        "operationId": "Triggers_V2",
        "x-ms-trigger": "single",
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "family": "PostEvent",
          "status": "Preview",
          "revision": 2
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "string",
                  "description": "Select event which should trigger the Flow",
                  "x-ms-summary": "Event",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEnumValues",
                    "value-path": "value",
                    "value-title": "name",
                    "parameters": {
                      "definitionKey": "DocumentEventV2"
                    }
                  },
                  "default": "user.document.complete"
                },
                "entity_id": {
                  "type": "string",
                  "description": "entity_id",
                  "title": "entity_id",
                  "x-ms-visibility": "internal",
                  "default": "00000000-0000-0000-0000-000000000000"
                },
                "action": {
                  "type": "string",
                  "description": "action",
                  "title": "action",
                  "x-ms-visibility": "internal",
                  "default": "callback"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "callback": {
                      "type": "string",
                      "description": "callback",
                      "x-ms-notification-url": true,
                      "x-ms-visibility": "internal",
                      "title": "callback"
                    }
                  },
                  "description": "attributes",
                  "required": [
                    "callback"
                  ]
                }
              },
              "required": [
                "action",
                "attributes",
                "entity_id",
                "event"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "DocumentFields": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetDocSchema",
        "parameters": {
          "doc_id": {
            "parameter": "template_id"
          }
        },
        "value-path": "properties"
      },
      "x-ms-dynamic-properties": {
        "operationId": "GetDocSchema",
        "parameters": {
          "doc_id": {
            "parameterReference": "template_id"
          }
        }
      }
    },
    "DocumentFields_V2": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetDocSchema_V2",
        "parameters": {
          "doc_id": {
            "parameter": "template_id"
          }
        },
        "value-path": "properties"
      },
      "x-ms-dynamic-properties": {
        "operationId": "GetDocSchema_V2",
        "parameters": {
          "doc_id": {
            "parameterReference": "template_id"
          }
        }
      }
    },
    "DocumentProperties": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/DocumentId"
        },
        "document_name": {
          "type": "string",
          "x-ms-visibility": "important",
          "description": "Document file name without extension",
          "x-ms-summary": "Document Name"
        },
        "page_count": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "description": "Number of pages in the document",
          "x-ms-summary": "Page count"
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "description": "Date and time the document was created in Unix Timestamp format",
          "x-ms-summary": "Created",
          "title": "Created"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "description": "The date and time the document was updated in Unix Timestamp format",
          "x-ms-summary": "Updated",
          "title": "Updated"
        },
        "original_filename": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "description": "Template file name with extension (if any)",
          "x-ms-summary": "Template name"
        },
        "origin_document_id": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "description": "Template document ID (if any)",
          "x-ms-summary": "Template ID"
        },
        "template": {
          "type": "boolean",
          "x-ms-visibility": "advanced",
          "description": "true if document is template.",
          "x-ms-summary": "Is template"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "unique_id": {
                "type": "string",
                "description": "Unique Role ID",
                "title": "Role ID"
              },
              "signing_order": {
                "type": "string",
                "description": "Preset order of signing for multiple signers",
                "title": "Signing Order"
              },
              "name": {
                "type": "string",
                "description": "Unique role name in the document",
                "title": "Role"
              }
            }
          },
          "x-ms-visibility": "internal",
          "description": "Document signers settings.",
          "x-ms-summary": "Roles"
        }
      }
    },
    "DocumentId": {
      "type": "string",
      "description": "Unique document ID",
      "x-ms-summary": "Document ID",
      "x-ms-visibility": "important"
    }
  },
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://signnow.com/proxy/index.php/authorize",
      "tokenUrl": "https://api.signnow.com/oauth2/token",
      "scopes": {}
    }
  }
}
