{
  "swagger": "2.0",
  "info": {
    "title": "Elead Product Reference Data",
    "version": "1.0",
    "description": "This API provides data to be used in conjunction with other eLeads APIs as needed. API searches, retrieves and provides the following details - Opportunity sources and sub sources for a specified company and up types, opportunity statuses for a specified company, sales steps for a specified company, employee positions for a specified company, employees by company and position, sender email addresses for a specified company, available vehicle class, year, make, model, trim.",
    "contact": {
      "name": "CDK Global",
      "url": "https://serviceconnect.support.cdk.com",
      "email": "mbd_support@cdk.com"
    }
  },
  "host": "cdkapi.azure-api.net",
  "basePath": "/elead-product-reference-data",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://fortellis.io"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://fortellis.io/privacy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Data"
      }
  ],
  "paths": {
    "/companyOpportunityStatuses": {
      "get": {
        "description": "Gets the opportunity statuses for the specified company",
        "operationId": "GetCompanyOpportunityStatuses",
        "summary": "Gets the opportunity statuses for the specified company",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyOpportunityStatusCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companyOpportunitySources": {
      "get": {
        "description": "Gets the opportunity sources for the specified company and up types",
        "operationId": "GetCompanyOpportunitySources",
        "summary": "Gets the opportunity sources for the specified company and up types",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "upType",
            "in": "query",
            "description": "The opportunity source up type",
            "type": "string",
            "x-ms-summary": "Up Type"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyOpportunitySourceCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/opportunitySubSources": {
      "get": {
        "description": "Retrieves the opportunity subsources for the specified source and up types",
        "operationId": "GetOpportunitySubSources",
        "summary": "Retrieves the opportunity subsources for the specified source and up types",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "sourceName",
            "in": "query",
            "description": "The source name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Source Name"
          },
          {
            "name": "upType",
            "in": "query",
            "description": "The opportunity source up type",
            "required": true,
            "type": "string",
            "x-ms-summary": "Up Type"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OpportunitySubSourceCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companySalesSteps": {
      "get": {
        "description": "Gets the sales steps for the specified company",
        "operationId": "GetCompanySalesSteps",
        "summary": "Gets the sales steps for the specified company",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanySalesStepCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companyPositions": {
      "get": {
        "description": "Gets the positions for the specified company",
        "operationId": "GetCompanyPositions",
        "summary": "Gets the positions for the specified company",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyPositionCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companyEmployees": {
      "get": {
        "description": "Gets the employees for the specified company and position",
        "operationId": "GetCompanyEmployees",
        "summary": "Gets the employees for the specified company and position",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "positionName",
            "in": "query",
            "description": "The position name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Position Name"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyEmployeeCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companyEmails": {
      "get": {
        "description": "Gets the \"from\" email addresses for the specified company",
        "operationId": "GetCompanyEmails",
        "summary": "Gets the \"from\" email addresses for the specified company",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyEmailCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleClasses": {
      "get": {
        "description": "Gets the available vehicle class types",
        "operationId": "GetVehicleClasses",
        "summary": "Gets the available vehicle class types",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/VehicleClassCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleYears": {
      "get": {
        "description": "Gets the available vehicle years",
        "operationId": "GetVehicleYears",
        "summary": "Gets the available vehicle years",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/VehicleYearCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleMakes": {
      "get": {
        "description": "Gets the available vehicle makes by year and vehicle class (optional)",
        "operationId": "GetVehicleMakes",
        "summary": "Gets the available vehicle makes by year and vehicle class (optional)",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Year of Manufacturing",
            "x-ms-summary": "Year"
          },
          {
            "name": "class",
            "in": "query",
            "type": "string",
            "description": "Class of the vehicle",
            "x-ms-summary": "Class"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/VehicleMakeCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleModels": {
      "get": {
        "description": "Gets the available vehicle models by year and make",
        "operationId": "GetVehicleModels",
        "summary": "Gets the available vehicle models by year and make",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Year of Manufacturing",
            "x-ms-summary": "Year"
          },
          {
            "name": "make",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Make of the Car",
            "x-ms-summary": "Make"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/VehicleModelCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicleTrims": {
      "get": {
        "description": "Gets the available vehicle trims by year, make, and model",
        "operationId": "GetVehicleTrims",
        "summary": "Gets the available vehicle trims by year, make, and model",
        "tags": [
          "ProductReferenceData"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Year of Manufacturing",
            "x-ms-summary": "Year"
          },
          {
            "name": "make",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Make of the Car",
            "x-ms-summary": "Make"
          },
          {
            "name": "model",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Model of the Car",
            "x-ms-summary": "Model"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/VehicleTrimCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UpType": {
      "description": "Opportunity Source UpType",
      "type": "string",
      "enum": [
        "Campaign",
        "Internet",
        "Phone",
        "Showroom"
      ],
      "example": "Internet"
    },
    "LinkDescriptionObject": {
      "type": "object",
      "properties": {
        "href": {
          "description": "The target URI",
          "type": "string"
        },
        "rel": {
          "description": "The link relation type",
          "type": "string",
          "example": "create"
        },
        "method": {
          "description": "The HTTP verb that MUST be used to make a request to the target of the link",
          "type": "string",
          "example": "POST"
        },
        "title": {
          "description": "The title that describes the object",
          "type": "string",
          "example": "Create Opportunity"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "title"
      ],
      "example": {
        "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
        "rel": "self",
        "method": "GET",
        "title": "Get Customer"
      }
    },
    "CompanyOpportunityStatusCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company opportunity statuses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyOpportunityStatus"
          }
        }
      },
      "required": [
        "items"
      ],
      "example": {
        "items": [
          {
            "status": "Active",
            "subStatuses": [
              {
                "subStatus": "New"
              },
              {
                "subStatus": "Hot"
              }
            ]
          },
          {
            "status": "Sold",
            "subStatuses": [
              {
                "subStatus": "CRM Sold"
              },
              {
                "subStatus": "Fleet"
              }
            ]
          }
        ]
      }
    },
    "CompanyOpportunitySourceCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company opportunity sources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyOpportunitySource"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "name": "Company Opportunity Source 1",
            "upType": "Internet",
            "isActive": true,
            "requestPhrase": "Optional Request Phrase",
            "requiresSubSource": false,
            "hasSubSources": true,
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/opportunitySubSources?sourceName=Company%20Opportunity%20Source%201&upType=Internet",
                "rel": "collection",
                "method": "GET",
                "title": "Fetch opportunity subsources"
              }
            ]
          },
          {
            "name": "Company Opportunity Source 2",
            "upType": "Phone",
            "isActive": true,
            "requestPhrase": "Optional Request Phrase",
            "requiresSubSource": false,
            "hasSubSources": true,
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/opportunitySubSources?sourceName=Company%20Opportunity%20Source%202&upType=Phone",
                "rel": "collection",
                "method": "GET",
                "title": "Fetch opportunity subsources"
              }
            ]
          },
          {
            "name": "Company Opportunity Source 3",
            "upType": "Showroom",
            "isActive": true,
            "requestPhrase": "Optional Request Phrase",
            "requiresSubSource": false,
            "hasSubSources": false,
            "links": []
          }
        ],
        "links": []
      }
    },
    "CompanyOpportunityStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Company Opportunity Status Name",
          "type": "string"
        },
        "subStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyOpportunitySubStatus"
          }
        }
      },
      "required": [
        "status"
      ],
      "example": {
        "status": "Sold"
      }
    },
    "CompanyOpportunitySubStatus": {
      "type": "object",
      "properties": {
        "subStatus": {
          "description": "Description of the sub status",
          "type": "string"
        }
      },
      "required": [
        "subStatus"
      ],
      "example": {
        "subStatus": "CRM Sold"
      }
    },
    "CompanyOpportunitySource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Company Opportunity Source Name",
          "type": "string"
        },
        "upType": {
          "$ref": "#/definitions/UpType"
        },
        "isActive": {
          "description": "true/false whether this company opportunity source is active",
          "type": "boolean"
        },
        "requestPhrase": {
          "description": "(Future Use) Request phrase for the specified company opportunity source",
          "type": "string"
        },
        "requiresSubSource": {
          "description": "true/false whether this company opportunity source requires a Subsource",
          "type": "boolean"
        },
        "hasSubSources": {
          "description": "true/false whether this company opportunity source has subsources (path to retrieve these subsources is in the HATEOAS links collection)\n",
          "type": "boolean"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "upType",
        "isActive",
        "requiresSubSource",
        "hasSubSources",
        "links"
      ],
      "example": {
        "name": "Company Opportunity Source 1",
        "upType": "Internet",
        "isActive": true,
        "requestPhrase": "Optional Request Phrase",
        "requiresSubSource": false,
        "hasSubSources": true,
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/opportunitySubSources?sourceName=Company%20Opportunity%20Source%201&upType=Internet",
            "rel": "collection",
            "method": "GET",
            "title": "Fetch opportunity subsources"
          }
        ]
      }
    },
    "OpportunitySubSourceCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of opportunity subsources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpportunitySubSource"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "name": "Opportunity Subsource 1",
            "isActive": true
          },
          {
            "name": "Opportunity Subsource 2",
            "isActive": true
          },
          {
            "name": "Opportunity Subsource 3",
            "isActive": true
          }
        ],
        "links": []
      }
    },
    "OpportunitySubSource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Opportunity subsource name",
          "type": "string"
        },
        "isActive": {
          "description": "true/false whether this opportunity subsource is active",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "isActive"
      ],
      "example": {
        "name": "Opportunity Subsource 1",
        "isActive": true
      }
    },
    "CompanySalesStepCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company sales steps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySalesStep"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "name": "Step 1",
            "abbrevation": "S1",
            "isActive": true,
            "sortOrder": 0
          },
          {
            "name": "Step 2",
            "abbrevation": "S2",
            "isActive": true,
            "sortOrder": 1
          },
          {
            "name": "Step 3",
            "abbrevation": "S3",
            "isActive": true,
            "sortOrder": 2
          }
        ],
        "links": []
      }
    },
    "CompanySalesStep": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Sales step name",
          "type": "string"
        },
        "abbreviation": {
          "description": "Abbreviation for the sales step name",
          "type": "string"
        },
        "isActive": {
          "description": "true/false whether this sales step is active",
          "type": "boolean"
        },
        "sortOrder": {
          "description": "Intended order of the sales step if building a drop down in UI",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "abbreviation",
        "isActive",
        "sortOrder"
      ],
      "example": {
        "name": "Step 1",
        "abbrevation": "S1",
        "isActive": true,
        "sortOrder": 0
      }
    },
    "CompanyPositionCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company positions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyPosition"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "name": "Company Position 1",
            "code": "P1",
            "hasEmployees": true,
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/companyEmployees?positionName=Company%20Position%201",
                "rel": "collection",
                "method": "GET",
                "title": "Fetch employees"
              }
            ]
          },
          {
            "name": "Company Position 2",
            "code": "P2",
            "hasEmployees": true,
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/companyEmployees?positionName=Company%20Position%202",
                "rel": "collection",
                "method": "GET",
                "title": "Fetch employees"
              }
            ]
          },
          {
            "name": "Company Position 3",
            "code": "P3",
            "hasEmployees": false,
            "links": []
          }
        ],
        "links": []
      }
    },
    "CompanyPosition": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Position name",
          "type": "string"
        },
        "code": {
          "description": "Position code",
          "type": "string"
        },
        "hasEmployees": {
          "description": "true/false whether this company position has employees (path to retrieve these employees is in the HATEOAS links collection)\n",
          "type": "boolean"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "code",
        "hasEmployees",
        "links"
      ],
      "example": {
        "name": "Company Position 1",
        "code": "P1",
        "hasEmployees": true,
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/companyEmployees?positionName=Company%20Position%201",
            "rel": "collection",
            "method": "GET",
            "title": "Fetch employees"
          }
        ]
      }
    },
    "CompanyEmployeeCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company employees",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "id": "a8627409-05e1-4725-824b-fd0896c92b09",
            "firstName": "Michael",
            "lastName": "Scott",
            "isActive": true,
            "isOff": true,
            "links": []
          },
          {
            "id": "f5fd7d68-6805-4075-aadc-fa012429c8bf",
            "firstName": "Pam",
            "lastName": "Beesly",
            "isActive": true,
            "isOff": false,
            "links": []
          },
          {
            "id": "8b376cc4-9770-4fe7-bfce-af4ec65ba140",
            "firstName": "Dwight",
            "lastName": "Schrute",
            "isActive": true,
            "isOff": true,
            "links": []
          }
        ],
        "links": []
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Employee identifier",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "description": "Employee first name",
          "type": "string"
        },
        "lastName": {
          "description": "Employee last name",
          "type": "string"
        },
        "isActive": {
          "description": "true/false whether this employee is active within the company",
          "type": "boolean"
        },
        "isOff": {
          "description": "true/false whether this employee is currently working and can accept new internet opportunities being processed into the system\n",
          "type": "boolean"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "isActive",
        "isOff",
        "links"
      ],
      "example": {
        "id": "a8627409-05e1-4725-824b-fd0896c92b09",
        "firstName": "Michael",
        "lastName": "Scott",
        "isActive": true,
        "isOff": true,
        "links": []
      }
    },
    "CompanyEmailCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of company \"from\" email addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyEmail"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "address": "email1@sample.com"
          },
          {
            "address": "email2@sample.com"
          }
        ],
        "links": []
      }
    },
    "CompanyEmail": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Email address",
          "type": "string"
        }
      },
      "required": [
        "address"
      ],
      "example": {
        "address": "email1@sample.com"
      }
    },
    "VehicleClassCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of vehicle classes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleClass"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "name": "Vehicle Class 1",
            "links": []
          },
          {
            "name": "Vehicle Class 2",
            "links": []
          },
          {
            "name": "Vehicle Class 3",
            "links": []
          }
        ],
        "links": []
      }
    },
    "VehicleClass": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Vehicle class name",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "links"
      ],
      "example": {
        "name": "Vehicle Class 1",
        "links": []
      }
    },
    "VehicleYearCollection": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of vehicle years",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleYear"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "links"
      ],
      "example": {
        "items": [
          {
            "year": 2021,
            "links": []
          },
          {
            "year": 2020,
            "links": []
          },
          {
            "year": 2019,
            "links": []
          },
          {
            "year": 2018,
            "links": []
          }
        ]
      }
    },
    "VehicleYear": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Vehicle year",
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "year",
        "links"
      ],
      "example": {
        "year": 2020,
        "links": []
      }
    },
    "VehicleMakeCollection": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Vehicle year for this collection of vehicle makes",
          "type": "integer"
        },
        "items": {
          "description": "A collection of vehicle makes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleMake"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "year",
        "items",
        "links"
      ],
      "example": {
        "year": 2020,
        "items": [
          {
            "name": "OEM Make 1",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleModels?year=2020&make=OEM%20Make%201",
                "rel": "models",
                "method": "GET",
                "title": "Fetch models"
              }
            ]
          },
          {
            "name": "OEM Make 2",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleModels?year=2020&make=OEM%20Make%202",
                "rel": "models",
                "method": "GET",
                "title": "Fetch models"
              }
            ]
          },
          {
            "name": "OEM Make 3",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleModels?year=2020&make=OEM%20%20Make%203",
                "rel": "models",
                "method": "GET",
                "title": "Fetch models"
              }
            ]
          }
        ],
        "links": []
      }
    },
    "VehicleMake": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Vehicle make name",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "links"
      ],
      "example": {
        "name": "OEM Make 1",
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleModels?year=2020&make=OEM%20Make%201",
            "rel": "models",
            "method": "GET",
            "title": "Fetch models"
          }
        ]
      }
    },
    "VehicleModelCollection": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Vehicle year for this collection of vehicle models",
          "type": "integer"
        },
        "make": {
          "description": "Vehicle make for this collection of vehicle models",
          "type": "string"
        },
        "items": {
          "description": "A collection of vehicle models",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleModel"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "year",
        "make",
        "items",
        "links"
      ],
      "example": {
        "year": 2020,
        "make": "OEM Make 1",
        "items": [
          {
            "name": "Model 1",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleTrims?year=2020&make=OEM%20Make%201&model=Model%201",
                "rel": "models",
                "method": "GET",
                "title": "Fetch trims"
              }
            ]
          },
          {
            "name": "Model 2",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleTrims?year=2020&make=OEM%20Make%201&model=Model%202",
                "rel": "models",
                "method": "GET",
                "title": "Fetch trims"
              }
            ]
          },
          {
            "name": "Model 3",
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleTrims?year=2020&make=OEM%20%20Make%201&model=Model%203",
                "rel": "models",
                "method": "GET",
                "title": "Fetch trims"
              }
            ]
          }
        ],
        "links": []
      }
    },
    "VehicleModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Vehicle Model Name",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "links"
      ],
      "example": {
        "name": "Model 1",
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/productreferencedata/vehicleTrims?year=2020&make=OEM%20Make%201&model=Model%201",
            "rel": "models",
            "method": "GET",
            "title": "Fetch trims"
          }
        ]
      }
    },
    "VehicleTrimCollection": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Vehicle year for this collection of vehicle trims",
          "type": "integer"
        },
        "make": {
          "description": "Vehicle make for this collection of vehicle trims",
          "type": "string"
        },
        "model": {
          "description": "Vehicle model for this collection of vehicle trims",
          "type": "string"
        },
        "items": {
          "description": "A collection of vehicle trims",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleTrim"
          }
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "year",
        "make",
        "model",
        "items",
        "links"
      ],
      "example": {
        "year": 2020,
        "make": "OEM Make 1",
        "model": "Model 1",
        "items": [
          {
            "name": "Trim 1",
            "links": []
          },
          {
            "name": "Trim 2",
            "links": []
          },
          {
            "name": "Trim 3",
            "links": []
          }
        ],
        "links": []
      }
    },
    "VehicleTrim": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Vehicle trim name",
          "type": "string"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "name",
        "links"
      ],
      "example": {
        "name": "Trim 1",
        "links": []
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code further identifying the error."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "link": {
          "type": "string",
          "description": "An optional link with further information about the error type."
        },
        "referenceId": {
          "type": "string",
          "format": "uuid",
          "description": "A reference identifier used for correlation puproses."
        }
      },
      "required": [
        "code",
        "message",
        "referenceId"
      ],
      "example": {
        "code": "ExampleErrorCode",
        "message": "Example of an error message.",
        "referenceId": "9e88d251-9b50-3dfb-00ef-00c5009b003d"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "tags": []
}
