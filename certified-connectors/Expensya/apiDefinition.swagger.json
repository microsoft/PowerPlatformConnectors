{
  "swagger": "2.0",
  "info": {
    "title": "Expensya",
    "version": "1.0",
    "description": "Expensya is a leading Spend Management solution in Europe, and this connector allows to build on top of our technology, automate integration to third party systems, and extend existing features.",
    "contact": {
      "name": "Expensya",
      "url": "https://www.expensya.com",
      "email": "support@expensya.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.expensya.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.expensya.com/en/tou"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Website"
    }
  ],
  "host": "pubapi.expensya.com",
  "basePath": "/Api.svc",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/expense/{expenseId}/image": {
      "get": {
        "description": "This API returns the image of the expense as Stream. The image can be jpg, jpeg, png or pdf. The type of the image is mentioned in the expense object property \"FileType\".",
        "operationId": "GetExpenseImage",
        "summary": "Get Expense Image",
        "tags": [
          "Image"
        ],
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the expense.",
            "x-ms-summary": "Format - guid. Unique identifier of the expense.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ApiExpenseExpenseIdImageGet200ApplicationJsonResponse"
            }
          },
          "400": {
            "description": "Invalid input."
          },
          "401": {
            "description": "The expensya token is invalid or has expired."
          },
          "403": {
            "description": "The expensya token has no right to get the image."
          },
          "404": {
            "description": "No image was found."
          }
        }
      }
    },
    "/api/export/expenses/{exportId}/": {
      "get": {
        "description": "Export expenses on specified export format based on given filters.",
        "operationId": "ExportExpenses",
        "summary": "Export Expense",
        "tags": [
          "Export"
        ],
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the export.",
            "x-ms-summary": "Format - guid. Unique identifier of the export.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Filter with the unique identifier of the report related to the expenses.",
            "x-ms-summary": "Filter with the unique identifier of the report related to the expenses.",
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Filter with the unique identifier of the category related to the expenses.",
            "x-ms-summary": "Filter with the unique identifier of the category related to the expenses.",
            "type": "string"
          },
          {
            "name": "expenseName",
            "in": "query",
            "description": "Filter with the name of the expense.",
            "x-ms-summary": "Filter with the name of the expense.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter with the start date based on dateFilterType (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the start date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter with the end date based on dateFilterType (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the end date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "expenseStates",
            "in": "query",
            "description": "List of expenses state seperated by ',' : Validated = 3 ValidatedByAccountant = 4 Rejected = 99.",
            "x-ms-summary": "List of expenses state seperated by ','",
            "type": "string"
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of reports state related to the expenses seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Validated = 4 Closed = 5 ValidatedAndExported = 6",
            "x-ms-summary": "List of reports state related to the expenses seperated by ','",
            "type": "string"
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique identifiers of the expenses' owners seperated by ','.",
            "x-ms-summary": "List of unique identifiers of the expenses' owners seperated by ','.",
            "type": "string"
          },
          {
            "name": "userMail",
            "in": "query",
            "description": "List of e-mails of the expenses' owners seperated by ','.",
            "x-ms-summary": "List of e-mails of the expenses' owners seperated by ','.",
            "type": "string"
          },
          {
            "name": "reportIds",
            "in": "query",
            "description": "List of unique identifiers of the reports related tp expenses by ','.",
            "x-ms-summary": "List of unique identifiers of the reports related tp expenses by ','.",
            "type": "string"
          },
          {
            "name": "expenseIds",
            "in": "query",
            "description": "List of unique identifiers of the expense seperated by ','.",
            "x-ms-summary": "List of unique identifiers of the expense seperated by ','.",
            "type": "string"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Filter with the report name related to the expenses.",
            "x-ms-summary": "Filter with the report name related to the expenses.",
            "type": "string"
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Filter with the internal identifier of the expenses' report. ",
            "x-ms-summary": "Filter with the internal identifier of the expenses' report. ",
            "type": "string"
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 CreationDate = 6.",
            "x-ms-summary": "Format - enum. Indicates the target of date filters.",
            "type": "integer"
          },
          {
            "name": "payId",
            "in": "query",
            "description": "Filter with the serial of the expense's owner.",
            "x-ms-summary": "Filter with the serial of the expense's owner.",
            "type": "string"
          },
          {
            "name": "payId2",
            "in": "query",
            "description": "Filter with the first analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the first analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "payId3",
            "in": "query",
            "description": "Filter with the second analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the second analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "accountingPeriod",
            "in": "query",
            "description": "Filter with the accounting period of the expenses.",
            "x-ms-summary": "Filter with the accounting period of the expenses.",
            "type": "string"
          },
          {
            "name": "includeReceipts",
            "in": "query",
            "description": "Indicates if the expenses receipts should be added to the export.",
            "x-ms-summary": "Indicates if the expenses receipts should be added to the export.",
            "type": "boolean"
          },
          {
            "name": "expenseUseTypes",
            "in": "query",
            "description": "List of expense use type seperated by ',' : Invoice = 1 Advance = 2 Purchase = 4 Subscription = 8 MissionOrder = 16.",
            "x-ms-summary": "List of expense use type seperated by ','",
            "type": "integer"
          },
          {
            "name": "archiveExpenses",
            "in": "query",
            "description": "Indicates if the reports related to the expenses will be archived, applied only for expenses related to validated or validatedAndExported reports.",
            "x-ms-summary": "Indicates if the reports related to the expenses will be archived.",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultExportResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/export/report/{reportId}/pdf/": {
      "get": {
        "description": "Export report as pdf.",
        "operationId": "PrintMission",
        "summary": "Export Report",
        "tags": [
          "Export"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the report.",
            "x-ms-summary": "Format - guid. Unique identifier of the report.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultExportResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/exports/": {
      "get": {
        "description": "List of export formats.",
        "operationId": "ExportFormats",
        "summary": "Get Export Formats",
        "tags": [
          "Export"
        ],
        "parameters": [
          {
            "name": "isForExpenses",
            "in": "query",
            "description": "Bring only expenses export formats, if false brings report export formats.",
            "x-ms-summary": "Bring only expenses export formats.",
            "type": "boolean"
          },
          {
            "name": "exportType",
            "in": "query",
            "description": "Format - enum. Indicates the type of export: InvoiceAndPurchase = 1 Advance = 2 Balance = 4.",
            "x-ms-summary": "Format - enum. Indicates the type of export.",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListExportFormatResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/projects/": {
      "post": {
        "description": "Add new projects to Expensya.",
        "operationId": "AddProjects",
        "summary": "Add Projects",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "addOrUpdateProjectInputArray",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOrUpdateProjectInputArray"
            },
            "description": "List of project inputs to add."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListAddOrUpdateEntityResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      },
      "put": {
        "description": "Update projects already added to Expensya",
        "operationId": "UpdateProjects",
        "summary": "Update Projects",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "addOrUpdateProjectInputArray",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOrUpdateProjectInputArray"
            },
            "description": "List of project inputs to update."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListAddOrUpdateEntityResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/receipt/": {
      "post": {
        "description": "Add a new expense to your expensya account with a receipt.",
        "operationId": "AddReciept",
        "summary": "Add Reciept",
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "addReceiptInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddReceiptInput"
            },
            "description": "Input of the receipt to add."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/revokeUserToken/": {
      "get": {
        "description": "Revoke your user token.",
        "operationId": "RevokeUserToken",
        "summary": "Revoke Token",
        "tags": [
          "Token"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/{validatorMail}/reports/": {
      "get": {
        "description": "Get the list of validator's reports with paging.",
        "operationId": "ValidatorReports",
        "summary": "Get Validator Reports",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "validatorMail",
            "in": "path",
            "description": "The e-mail of the report's validator.",
            "x-ms-summary": "The e-mail of the report's validator.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Filter with the name of the report.",
            "x-ms-summary": "Filter with the name of the report.",
            "type": "string"
          },
          {
            "name": "reportStartDate",
            "in": "query",
            "description": "Filter with the start date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the start date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "reportEndDate",
            "in": "query",
            "description": "Filter with the end date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the end date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of report states seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Closed = 5 ValidatedAndExported = 6 Reimbursed = 7 PreSubmitted = 8 InValidation = 50.",
            "x-ms-summary": "List of report states seperated by ','.",
            "type": "string"
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Filter with the report inetrnal identifier.",
            "x-ms-summary": "Filter with the report inetrnal identifier.",
            "type": "string"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Filter with the unique identifier of the report's owner.",
            "x-ms-summary": "Filter with the unique identifier of the report's owner.",
            "type": "string"
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "Filter with the serial of the report's owner.",
            "x-ms-summary": "Filter with the serial of the report's owner.",
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Filter with the unique identifier of the project that the report is linked to.",
            "x-ms-summary": "Filter with the unique identifier of the project that the report is linked to.",
            "type": "string"
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 PurchaseAccountingValidationDate = 5 CreationDate = 6",
            "x-ms-summary": "Format - enum. Indicates the target of date filters.",
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 StartDate = 13 Name = 20 State = 30 Value = 31 InvoicesCount = 32 InvoicesCount = 32 UserFirstName = 40 UserLastName = 41 Budget = 50 ValueToReimburse = 51 ClientCode = 53 IdShort = 54",
            "x-ms-summary": "Format - enum. List can be sorted by.",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultReportResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/categories/": {
      "get": {
        "description": "Get the list of categories with paging.",
        "operationId": "GetCategoriesV2",
        "summary": "Get Categories",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter with the unique identifier of the category.",
            "x-ms-summary": "Filter with the unique identifier of the category.",
            "type": "string"
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Filter with the category name.",
            "x-ms-summary": "Filter with the category name.",
            "type": "string"
          },
          {
            "name": "costAccount",
            "in": "query",
            "description": "Filter with the unique identifier of the category.",
            "x-ms-summary": "Filter with the unique identifier of the category.",
            "type": "string"
          },
          {
            "name": "vatAccount",
            "in": "query",
            "description": "Filter with the unique identifier of the category.",
            "x-ms-summary": "Filter with the unique identifier of the category.",
            "type": "string"
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active categories.",
            "x-ms-summary": "Bring only active categories.",
            "type": "boolean"
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "x-ms-summary": "List of tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : Name_FR = 5, Name_EN = 10, CostAccount = 15, IsActive = 20, VatAccount = 25",
            "x-ms-summary": "Format - enum. List can be sorted by.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultCategoryResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/expenses/": {
      "get": {
        "description": "Get the list of expenses with paging.",
        "operationId": "GetExpensesWithPagingV2",
        "summary": "Get Expenses",
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "description": "Filter with the unique report identifier related to the expense.",
            "x-ms-summary": "Filter with the unique report identifier related to the expense.",
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Filter with the unique category identifier related to the expense.",
            "x-ms-summary": "Filter with the unique category identifier related to the expense.",
            "type": "string"
          },
          {
            "name": "expenseName",
            "in": "query",
            "description": "Filter with the name of the expense.",
            "x-ms-summary": "Filter with the name of the expense.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter with the start date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the start date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter with the end date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the end date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "reportState",
            "in": "query",
            "description": "Format - enum. State of the expense's report.",
            "x-ms-summary": "Format - enum. State of the expense's report.",
            "type": "integer"
          },
          {
            "name": "expenseStates",
            "in": "query",
            "description": "List Of expenseStates seperated by ',' : Uploading = 0 Uploaded = 1 Ready = 2 Validated = 3 ValidatedByAccountant = 4 Rejected = 99.",
            "x-ms-summary": "List Of expenseStates seperated by ','",
            "type": "string"
          },
          {
            "name": "isReimbusable",
            "in": "query",
            "description": "Shows if the expense is to reimburse.",
            "x-ms-summary": "Shows if the expense is to reimburse.",
            "type": "boolean"
          },
          {
            "name": "valueInCurrency",
            "in": "query",
            "description": "Filter with the value in currency of the owner of the expense.",
            "x-ms-summary": "Filter with the value in currency of the owner of the expense.",
            "type": "number"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Filter with the unique owner identifier of the expense.",
            "x-ms-summary": "Filter with the unique owner identifier of the expense.",
            "type": "string"
          },
          {
            "name": "ownerMail",
            "in": "query",
            "description": "Filter with the mail of the expense.",
            "x-ms-summary": "Filter with the mail of the expense.",
            "type": "string"
          },
          {
            "name": "ownerPayId",
            "in": "query",
            "description": "Filter with the serial of the expense's owner.",
            "x-ms-summary": "Filter with the serial of the expense's owner.",
            "type": "string"
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "Filter with the first analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the first analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "ownerPayId3",
            "in": "query",
            "description": "Filter with the second analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the second analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "ownerPayId4",
            "in": "query",
            "description": "Filter with the third analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the third analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "ownerPayId5",
            "in": "query",
            "description": "Filter with the fourth analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with the fourth analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "ownerPayId6",
            "in": "query",
            "description": "Filter with the fifth analytical axis of the owner of the expense.",
            "x-ms-summary": "Filter with fifth analytical axis of the owner of the expense.",
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Filter with the unique project identifier related to the expense.",
            "x-ms-summary": "Filter with the unique project identifier related to the expense.",
            "type": "string"
          },
          {
            "name": "isBillable",
            "in": "query",
            "description": "Shows if the expense is billable to client.",
            "x-ms-summary": "Shows if the expense is billable to client.",
            "type": "boolean"
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 CreationDate = 6.",
            "x-ms-summary": "Format - enum. Indicates the target of date filters.",
            "type": "integer"
          },
          {
            "name": "merchantCountries",
            "in": "query",
            "description": "List of merchant countries related to the expense seperated by ',' ex: 'FR,ES'",
            "x-ms-summary": "List of merchant countries related to the expense seperated by ',' ex: 'FR,ES'",
            "type": "string"
          },
          {
            "name": "currencies",
            "in": "query",
            "description": "List of currencies related to the expense seperated by ',' ex: 'EUR,USD'",
            "x-ms-summary": "List of currencies related to the expense seperated by ',' ex: 'EUR,USD'",
            "type": "string"
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "Filter with the file type of the expense : pdf, jpg ...",
            "x-ms-summary": "Filter with the file type of the expense : pdf, jpg ...",
            "type": "string"
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Filter with the internal identifier of the expenses' report.",
            "x-ms-summary": "Filter with the internal identifier of the expenses' report.",
            "type": "string"
          },
          {
            "name": "expenseUseTypes",
            "in": "query",
            "description": "List of expense use types seperated by ',' : Invoice = 1 Advance = 2 Purchase = 4 Subscription = 8 MissionOrder = 16.",
            "x-ms-summary": "List of expense use types seperated by ','.",
            "type": "string"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Filter with the unique supplier identifier of the expense.",
            "x-ms-summary": "Filter with the unique supplier identifier of the expense.",
            "type": "string"
          },
          {
            "name": "expenseIds",
            "in": "query",
            "description": "List of unique identifiers of the expense seperated by ','.",
            "x-ms-summary": "List of unique identifiers of the expense seperated by ','.",
            "type": "string"
          },
          {
            "name": "merchantName",
            "in": "query",
            "description": "Filter with the merchant name of the expense.",
            "x-ms-summary": "Filter with the merchant name of the expense.",
            "type": "string"
          },
          {
            "name": "vatCode",
            "in": "query",
            "description": "Filter with the merchant VAT number of the expense.",
            "x-ms-summary": "Filter with the merchant VAT number of the expense.",
            "type": "string"
          },
          {
            "name": "valueHTInExpenseCurrency",
            "in": "query",
            "description": "Filter with excluding tax amount of the expense.",
            "x-ms-summary": "Filter with excluding tax amount of the expense.",
            "type": "number"
          },
          {
            "name": "vatRate",
            "in": "query",
            "description": "Filter with VAT rate of the expense.",
            "x-ms-summary": "Filter with VAT rate of the expense.",
            "type": "number"
          },
          {
            "name": "vatValue",
            "in": "query",
            "description": "Filter with VAT value of the expense.",
            "x-ms-summary": "Filter with VAT value of the expense.",
            "type": "number"
          },
          {
            "name": "reportsIds",
            "in": "query",
            "description": "List of unique reports' identifiers related to the expense seperated by ','.",
            "x-ms-summary": "List of unique reports' identifiers related to the expense seperated by ','.",
            "type": "string"
          },
          {
            "name": "dateTimeOffset",
            "in": "query",
            "description": "Filter with the UTC offset of the expense.",
            "x-ms-summary": "Filter with the UTC offset of the expense.",
            "type": "integer"
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "x-ms-summary": "List of tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 DateInvoice = 12 Name = 20 Value = 30 ValueInCurrency = 31 HasPhoto = 40 State = 60 Category = 70.",
            "x-ms-summary": "Format - enum. List can be sorted by.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultExpenseResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/project/{projectId}/": {
      "get": {
        "description": "Get the details of the project.",
        "operationId": "GetProjectDetailsV2",
        "summary": "Get Project Details",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the project.",
            "x-ms-summary": "Format - guid. Unique identifier of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultProjectResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/projects/": {
      "get": {
        "description": "Get the list of projects.",
        "operationId": "GetProjectsV2",
        "summary": "Get Projects",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "Filter with the name of the project.",
            "x-ms-summary": "Filter with the name of the project.",
            "type": "string"
          },
          {
            "name": "projectIds",
            "in": "query",
            "description": "List of unique projects' identifiers seperated by ','.",
            "x-ms-summary": "List of unique projects' identifiers seperated by ','.",
            "type": "string"
          },
          {
            "name": "validatorName",
            "in": "query",
            "description": "Filter with the name of the project validator.",
            "x-ms-summary": "Filter with the name of the project validator.",
            "type": "string"
          },
          {
            "name": "projectReferenceOrExternalId",
            "in": "query",
            "description": "Filter with the reference or the external id of the project.",
            "x-ms-summary": "Filter with the reference or the external id of the project.",
            "type": "string"
          },
          {
            "name": "bringAllProjects",
            "in": "query",
            "description": "Bring the projects that are not shared with all employees.",
            "x-ms-summary": "Bring the projects that are not shared with all employees.",
            "type": "boolean"
          },
          {
            "name": "projectUseType",
            "in": "query",
            "description": "Format - enum. Project use type flag: Invoice = 0x1 Purchase = 0x2 Subscription = 0x4 Advance = 0x8 MissionOrder = 0x10 MileageOnly = 0x20 InvoiceOnly = 0x40 VirtualCard = 0x80.",
            "x-ms-summary": "Format - enum. Project use type flag.",
            "type": "integer"
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active projects.",
            "x-ms-summary": "Bring only active projects.",
            "type": "boolean"
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "x-ms-summary": "List of tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "customFieldsIds",
            "in": "query",
            "description": "List of unique custom fields' identifiers seperated by ','.",
            "x-ms-summary": "List of unique custom fields' identifiers seperated by ','.",
            "type": "string"
          },
          {
            "name": "expenseDate",
            "in": "query",
            "description": "The date of the expense. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "The date of the expense. Format - date-time (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Filter with the unique identifier of expense's owner.",
            "x-ms-summary": "Filter with the unique identifier of expense's owner.",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Sort the list by : StartDate = 11 EndDate = 12 Name = 20 ProjectRef = 21 FullName = 22 Validator = 23 ClientName = 24 Value = 25.",
            "x-ms-summary": "Format - enum. Sort the list by.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultProjectResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/projects/states/": {
      "put": {
        "description": "Batch update list of projects state.",
        "operationId": "UpdateProjectStateV2",
        "summary": "Update Projects State",
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "updateProjectStateInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProjectStateInput"
            },
            "description": "List of project state inputs to update."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListAddOrUpdateEntityResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/quickexpense/{userId}/": {
      "post": {
        "description": "Add a new expense to your expensya account.",
        "operationId": "AddQuickExpenseV2",
        "summary": "Add QuickExpense",
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the user that expense will be linked to.",
            "x-ms-summary": "Format - guid. Unique identifier of the user that expense will be linked to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quickExpenseInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/QuickExpenseInput"
            },
            "description": "Input of the quick expense."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/refreshUserToken/": {
      "get": {
        "description": "Refresh your userToken.",
        "operationId": "RefreshUserTokenV2",
        "summary": "Refresh Token",
        "tags": [
          "Token"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/report/{reportId}/updateStatus/": {
      "put": {
        "description": "Update the statuts of the report.",
        "operationId": "UpdateReportStatus",
        "summary": "Update Report Status",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the report.",
            "x-ms-summary": "Format - guid. Unique identifier of the report.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reportUpdateStatusInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReportUpdateStatusInput"
            },
            "description": "Input of the report status to update."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/report/history/": {
      "get": {
        "description": "Get the history of the report.",
        "operationId": "GetReportHistoryV2",
        "summary": "Get Report History",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "description": "Filter with the unique Identifier of the report.",
            "x-ms-summary": "Filter with the unique Identifier of the report.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListEventResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/reports/": {
      "get": {
        "description": "Get the list of reports with paging.",
        "operationId": "CompanyReports",
        "summary": "Get Reports",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportName",
            "in": "query",
            "description": "Filter with the name of the report.",
            "x-ms-summary": "Filter with the name of the report.",
            "type": "string"
          },
          {
            "name": "reportStartDate",
            "in": "query",
            "description": "Filter with the start date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the start date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "reportEndDate",
            "in": "query",
            "description": "Filter with the end date based on dateFilterType. Format - date-time (as date-time in RFC3339).",
            "x-ms-summary": "Filter with the end date based on dateFilterType (as date-time in RFC3339).",
            "type": "string"
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of report states seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Closed = 5 ValidatedAndExported = 6 Reimbursed = 7 PreSubmitted = 8 InValidation = 50.",
            "x-ms-summary": "List of report states seperated by ','.",
            "type": "string"
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Filter with the report inetrnal identifier.",
            "x-ms-summary": "Filter with the report inetrnal identifier.",
            "type": "string"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Filter with the unique identifier of the report's owner.",
            "x-ms-summary": "Filter with the unique identifier of the report's owner.",
            "type": "string"
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "Filter with the serial of the report's owner.",
            "x-ms-summary": "Filter with the serial of the report's owner.",
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Filter with the unique identifier of the project that the report is linked to.",
            "x-ms-summary": "Filter with the unique identifier of the project that the report is linked to.",
            "type": "string"
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "x-ms-summary": "List of tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 PurchaseAccountingValidationDate = 5 CreationDate = 6",
            "x-ms-summary": "Format - enum. Indicates the target of date filters.",
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 StartDate = 13 Name = 20 State = 30 Value = 31 InvoicesCount = 32 InvoicesCount = 32 UserFirstName = 40 UserLastName = 41 Budget = 50 ValueToReimburse = 51 ClientCode = 53 IdShort = 54",
            "x-ms-summary": "Format - enum. List can be sorted by.",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultReportResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/user/": {
      "post": {
        "description": "Add user to Expensya.",
        "operationId": "InviteUserV2",
        "summary": "Invite User",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userInviteInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserInviteInput"
            },
            "description": "Input of the user to invite."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/user/{userId}/": {
      "put": {
        "description": "Update user already added in Expensya.",
        "operationId": "UpateUserV2",
        "summary": "Update User",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the user to update.",
            "x-ms-summary": "Format - guid. Unique identifier of the user to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shouldUpdateValidators",
            "in": "query",
            "description": "Shows if the validators of the user should be updated or not.",
            "x-ms-summary": "Shows if the validators of the user should be updated or not.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "userUpdateInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdateInput"
            },
            "description": "Input of the user to update."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/users/": {
      "get": {
        "description": "Get the list of users with paging.",
        "operationId": "CompanyUsers",
        "summary": "Get Users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter with the unique identifier of the user.",
            "x-ms-summary": "Filter with the unique identifier of the user.",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Filter with the first name of the user.",
            "x-ms-summary": "Filter with the first name of the user.",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Filter with the last name of the user.",
            "x-ms-summary": "Filter with the last name of the user.",
            "type": "string"
          },
          {
            "name": "mail",
            "in": "query",
            "description": "Filter with the mail of the user.",
            "x-ms-summary": "Filter with the mail of the user.",
            "type": "string"
          },
          {
            "name": "payId",
            "in": "query",
            "description": "Filter with the serial the user.",
            "x-ms-summary": "Filter with the serial the user.",
            "type": "string"
          },
          {
            "name": "mailOrNameOrPayId",
            "in": "query",
            "description": "Filter with the mail or name or serial of the user.",
            "x-ms-summary": "Filter with the mail or name or serial of the user.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which is the type of the user : Employee = 1 Administrator = 2 Accountant = 4",
            "x-ms-summary": "Format - enum. Enum flag attribute which is the type of the user.",
            "type": "integer"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which is the user state : Validated = 1 Active = 2.",
            "x-ms-summary": "Format - enum. Enum flag attribute which is the user state.",
            "type": "integer"
          },
          {
            "name": "reviewerId",
            "in": "query",
            "description": "Filter with the unique identifier of the user's first validator.",
            "x-ms-summary": "Filter with the unique identifier of the user's first validator.",
            "type": "string"
          },
          {
            "name": "reviewerName",
            "in": "query",
            "description": "Filter with the name of the user's reviwer.",
            "x-ms-summary": "Filter with the name of the user's reviwer.",
            "type": "string"
          },
          {
            "name": "managerId",
            "in": "query",
            "description": "Filter with the unique identifier of the user's second validator.",
            "x-ms-summary": "Filter with the unique identifier of the user's second validator.",
            "type": "string"
          },
          {
            "name": "managerName",
            "in": "query",
            "description": "Filter with the name of the user's manager.",
            "x-ms-summary": "Filter with the name of the user's manager.",
            "type": "string"
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique identifiers of the users seperated by ','.",
            "x-ms-summary": "List of unique identifiers of the users seperated by ','.",
            "type": "string"
          },
          {
            "name": "userMails",
            "in": "query",
            "description": "List of e-mails of the users seperated by ','.",
            "x-ms-summary": "List of e-mails of the users seperated by ','.",
            "type": "string"
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "x-ms-summary": "List of tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "simpleTagsNames",
            "in": "query",
            "description": "List of simple tags' names seperated by ','.",
            "x-ms-summary": "List of simple tags' names seperated by ','.",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : CreationDate = 11 LastLoginDate = 12 LastName = 20 FirstName = 21 ManagerLastName = 30 ManagerFirstName = 31 UserState = 40 UserType = 41 Mail = 50 Address = 60 PhoneNumber = 61 PayId = 62 LocalCurrency = 63",
            "x-ms-summary": "Format - enum. List can be sorted by.",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "x-ms-summary": "The page number.",
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of elements per page.",
            "x-ms-summary": "The number of elements per page.",
            "type": "integer"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc.",
            "x-ms-summary": "Order the list by desc or asc.",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/ListAndPagesCountResultUserResponse"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    },
    "/api/v2/users/state/": {
      "put": {
        "description": "Update expensya users status.",
        "operationId": "UpdateUsersStateV2",
        "summary": "Update Users Status",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "updateUserStateInputArray",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateUserStateInputArray"
            },
            "description": "List of user state inputs to update."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The call was successful.",
            "schema": {
              "$ref": "#/definitions/BaseResultListUpdateUserResult"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    }
  },
  "definitions": {
    "BrokenRule": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "DescriptionForCredit": {
          "type": "string",
          "uniqueItems": false
        },
        "Budget": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "RuleType": {
          "description": "\r\n\r\n    Mandatory = 0 \r\n    Warning = 1 \r\n    ReimbursableByCeiling = 2 \r\n    ReimbursableByFlatRate = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "AllowExceptions": {
          "type": "boolean",
          "uniqueItems": false
        },
        "RuleElementType": {
          "description": "\r\n\r\n    Invoices = 0 \r\n    VirtualCards = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IntervalType": {
          "description": "\r\n\r\n    Day = 0 \r\n    WeekDays = 1 \r\n    Month = 2 \r\n    Year = 3 \r\n    Invoice = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Language": {
          "type": "string",
          "uniqueItems": false
        },
        "RuleCurrenciesWithBudget": {
          "$ref": "#/definitions/TupleStringDecimal"
        },
        "ForAllCompany": {
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BrokenRule"
    },
    "Category": {
      "properties": {
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Name_EN": {
          "type": "string",
          "uniqueItems": false
        },
        "Name_FR": {
          "type": "string",
          "uniqueItems": false
        },
        "EntityName": {
          "type": "string",
          "uniqueItems": false
        },
        "Parent": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "PrimitiveCategories": {
          "type": "string",
          "uniqueItems": false
        },
        "ParentCategory_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Icon": {
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsActiveAsDefault": {
          "type": "boolean",
          "uniqueItems": false
        },
        "FieldsStatesStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ReimbursementRatesStr": {
          "type": "string",
          "uniqueItems": false
        },
        "CostAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "VatAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "ExtraData": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "VatClaimRate": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "VatAccountsByRateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "AccountingModelCategory_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ExtraLanguagesStr": {
          "type": "string",
          "uniqueItems": false
        },
        "SpecialFieldsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "CategoryUseType": {
          "description": "\r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "VatClaimRatesStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ExternalId": {
          "type": "string",
          "uniqueItems": false
        },
        "IsSpecial": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IconName": {
          "type": "string",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "MileagePrimitiveCategory": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Category"
    },
    "DuplicatedInvoiceDetails": {
      "properties": {
        "InvoiceId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "InvoiceName": {
          "type": "string",
          "uniqueItems": false
        },
        "UserFirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "UserLastName": {
          "type": "string",
          "uniqueItems": false
        },
        "MissionId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "DuplicatedInvoiceDetails"
    },
    "ExtendedInvoice": {
      "properties": {
        "Project": {
          "$ref": "#/definitions/Project"
        },
        "Mission": {
          "$ref": "#/definitions/ExtendedMission"
        },
        "PaymentInstrument": {
          "$ref": "#/definitions/PaymentInstrument"
        },
        "IsOwner": {
          "type": "boolean",
          "uniqueItems": false
        },
        "LogInvoiceAttributes": {
          "$ref": "#/definitions/HistoryAttributes"
        },
        "User_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "CanEdit": {
          "type": "boolean",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "IsAllowedToUse": {
          "type": "boolean",
          "uniqueItems": false
        },
        "BrokenRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokenRule"
          },
          "uniqueItems": false
        },
        "Duplicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DuplicatedInvoiceDetails"
          },
          "uniqueItems": false
        },
        "Supplier": {
          "$ref": "#/definitions/SupplierInDb"
        },
        "Vehicle": {
          "$ref": "#/definitions/Vehicle"
        },
        "TransactionsSumValue": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "TransactionsSumInCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "TransactionsSumInLocalCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "uniqueItems": false
        },
        "PerdiemCountry": {
          "type": "string",
          "uniqueItems": false
        },
        "PerdiemCalculationPeriodType": {
          "description": "\r\n\r\n    CalendarDay = 0 \r\n    TwentyFourHours = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "PerDiemType": {
          "description": "\r\n\r\n    Time = 0 \r\n    Distance = 1 \r\n    IEG = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "RawOcrResult": {
          "type": "string",
          "uniqueItems": false
        },
        "GuestsCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "FullUnits": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueStrWithCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueInLocalCurrencyStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueInLocalCurrencyStrWithLocalCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueInCurrencyStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueInCurrencyStrWithCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerFirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId2": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId3": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId4": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId5": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId6": {
          "type": "string",
          "uniqueItems": false
        },
        "UserState": {
          "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "OwnerLocalCountry": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerConfigurationSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePairStringString"
          },
          "uniqueItems": false
        },
        "OwnerValidationSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePairStringString"
          },
          "uniqueItems": false
        },
        "OwnerLastName": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerLocalCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerFullName": {
          "type": "string",
          "uniqueItems": false
        },
        "OwnerExternalUserType": {
          "description": "\r\n\r\n    None = 0 \r\n    FromBackend = 1 \r\n    FromPartner = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "CountryAndCity": {
          "type": "string",
          "uniqueItems": false
        },
        "DateInvoiceStr": {
          "type": "string",
          "uniqueItems": false
        },
        "DateCreationStr": {
          "type": "string",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsMissionReadOnly": {
          "type": "boolean",
          "uniqueItems": false
        },
        "StateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ReadOnlyReason": {
          "type": "string",
          "uniqueItems": false
        },
        "TooltipStateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "StateColor": {
          "$ref": "#/definitions/Object"
        },
        "IsPerDiem": {
          "type": "boolean",
          "uniqueItems": false
        },
        "TruncatedName": {
          "type": "string",
          "uniqueItems": false
        },
        "IsValueInCurrencyUpdated": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsValueToReimburseUpdated": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Category": {
          "$ref": "#/definitions/Category"
        },
        "IsMileage": {
          "type": "boolean",
          "uniqueItems": false
        },
        "UseType": {
          "description": "\r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburse": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburseComputed": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ReimbursementRate": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoiceQuality": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "PaymentInstrument_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Mission_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Category_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "DateCreation": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "DateInvoice": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "DateUtcOffset": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "DateInvoiceSortableStr": {
          "type": "string",
          "uniqueItems": false
        },
        "PhotoVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "HasPhoto": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueInCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueInLocalCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "MerchantInvoiceId": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantCountry": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantCity": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantZipCode": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantAddress": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantName": {
          "type": "string",
          "uniqueItems": false
        },
        "MerchantVatNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "SignatureInfoStr": {
          "type": "string",
          "uniqueItems": false
        },
        "FileHash": {
          "type": "string",
          "uniqueItems": false
        },
        "Units": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "State": {
          "description": "\r\n\r\n    Uploading = 0 \r\n    Uploaded = 1 \r\n    Ready = 2 \r\n    Validated = 3 \r\n    ValidatedByAccountant = 4 \r\n    Rejected = 99 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsFromEmail": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Source": {
          "description": "\r\n\r\n    Email = 0 \r\n    Digidom = 1 \r\n    API = 2 \r\n    Travel = 3 \r\n    Card = 4 \r\n    Collector = 5 \r\n    Mobile = 10 \r\n    Web = 11 \r\n    Android = 12 \r\n    iOS = 13 \r\n    WindowsPhone = 14 \r\n    Transaction = 15 \r\n    Egencia = 16 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "PhotoSource": {
          "description": "\r\n\r\n    NoPhoto = 0 \r\n    ExpensyaWeb = 1 \r\n    ExpensyaMobile = 2 \r\n    Gallery = 3 \r\n    ExternalApp = 4 \r\n    Email = 5 \r\n    API = 6 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "HasEmailAttachement": {
          "type": "boolean",
          "uniqueItems": false
        },
        "VATStr": {
          "type": "string",
          "uniqueItems": false
        },
        "VATAvgRate": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "AttachedFilesCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "CategoryExtraDataStr": {
          "type": "string",
          "uniqueItems": false
        },
        "Vehicle_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ToReimburse": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsBillable": {
          "type": "boolean",
          "uniqueItems": false
        },
        "CustomFieldsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "OcrValue": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "UniqueExternalKey": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueHT": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Project_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SubscriptionStartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "SubscriptionEndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "SubscriptionType": {
          "description": "\r\n\r\n    Weekly = 0 \r\n    Monthly = 1 \r\n    Yearly = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "FileType": {
          "type": "string",
          "uniqueItems": false
        },
        "CoworkersStr": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoiceSource_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "CreditSource_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "DefaultRate": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Supplier_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SubStatus": {
          "description": "\r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsDuplicable": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ExtendedInvoice": {
          "$ref": "#/definitions/ExtendedInvoice"
        },
        "IsFromEmailIconVisible": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsFileAttachedIconVisible": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ImageUrl": {
          "type": "string",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExtendedInvoice"
    },
    "ExtendedMission": {
      "properties": {
        "CurrencySymbol": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoicesCountStr": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoicesCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Value": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueInLocalCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburse": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "IsValueToReimburseModified": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ValueToReimburseInLocalCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "StartDateForMileageExpenses": {
          "type": "string",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "AccountingDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "HasExternalProjectValidator": {
          "type": "boolean",
          "uniqueItems": false
        },
        "InvoiceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedInvoice"
          },
          "uniqueItems": false
        },
        "IsAllowedToUse": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MissionValidator"
          },
          "uniqueItems": false
        },
        "CallerCanUpdateMissionState": {
          "type": "boolean",
          "uniqueItems": false
        },
        "InvoicesTransactionsSumInCurrency": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "IssuesDicStr": {
          "type": "string",
          "uniqueItems": false
        },
        "MissionOrderDetails": {
          "type": "string",
          "uniqueItems": false
        },
        "MissionOrderStartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "MissionOrderEndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "MissionOrderDestination": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoiceAttachedFilesCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "uniqueItems": false
        },
        "InvoicesWithProblems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceWithProblemsDetails"
          },
          "uniqueItems": false
        },
        "CustomFieldsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "CanSubmit": {
          "type": "boolean",
          "uniqueItems": false
        },
        "SubmitDisabledReason": {
          "type": "string",
          "uniqueItems": false
        },
        "CanClose": {
          "type": "boolean",
          "uniqueItems": false
        },
        "CloseDisabledReason": {
          "type": "string",
          "uniqueItems": false
        },
        "AreAllInvoicesValidated": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ValueStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueStrWithCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueToReimburseStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ValueToReimburseStrWithCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "StartDateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "EndDateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "StateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ReadOnlyReason": {
          "type": "string",
          "uniqueItems": false
        },
        "ValidationOrRejectionMessage": {
          "type": "string",
          "uniqueItems": false
        },
        "TooltipStateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "IsVisibleInMissionList": {
          "type": "boolean",
          "uniqueItems": false
        },
        "TruncatedName": {
          "type": "string",
          "uniqueItems": false
        },
        "Location": {
          "type": "string",
          "uniqueItems": false
        },
        "StartAndEndDateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "StateColor": {
          "$ref": "#/definitions/Object"
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "DateCreation": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Budget": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "MissionType": {
          "description": "\r\n\r\n    UserCreated = 0 \r\n    Default = 1 \r\n    TravelAgencyImport = 2 \r\n    Advance = 3 \r\n    MissionOrder = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "State": {
          "description": "\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    InValidation = 50 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Comments": {
          "type": "string",
          "uniqueItems": false
        },
        "IdShort": {
          "type": "string",
          "uniqueItems": false
        },
        "AccountingPeriod": {
          "type": "string",
          "uniqueItems": false
        },
        "SubStatus": {
          "description": "\r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "CurrentValidator_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LastValidatorReminderDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "HasIssues": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ExtendedMission": {
          "$ref": "#/definitions/ExtendedMission"
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsOwner": {
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExtendedMission"
    },
    "HistoryAttributes": {
      "properties": {
        "LastModificationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "InvoiceEventType": {
          "description": "\r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserWhoModifiedId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "MissionEventType": {
          "description": "\r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "HistoryAttributes"
    },
    "InvoiceWithProblemsDetails": {
      "properties": {
        "InvoiceId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "InvoiceName": {
          "type": "string",
          "uniqueItems": false
        },
        "InvoiceProblemList": {
          "description": "\r\n\r\n    None = 0 \r\n    BrokenRule = 1 \r\n    Exception = 2 \r\n    Fraud = 3 \r\n    ExchangeRateModified = 4 \r\n    MileageDistanceModified = 5 \r\n    DuplicatedInvoices = 6 \r\n    MandatoryCustomFields = 7 \r\n    OutOfProjectDateRange = 8 \r\n    AssignedGroupConflict = 9 \r\n    DeactivatedProject = 10 \r\n    OutOfRangeVehicleAssignment = 11 \r\n    InvoiceStateNotReady = 12 \r\n    DeactivatedVehicle = 13 \r\n    NotEligibaleProject = 14 \r\n    NotApprovedVehicle = 15 \r\n    RejectedVehicle = 16 \r\n",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "enum"
          },
          "uniqueItems": false
        },
        "IsMileage": {
          "type": "boolean",
          "uniqueItems": false
        },
        "MissionState": {
          "description": "\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    InValidation = 50 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "InvoiceWithProblemsDetails"
    },
    "MissionValidator": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "FullName": {
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "MissionValidator"
    },
    "PaymentInstrument": {
      "properties": {
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "InstrumentType": {
          "description": "\r\n\r\n    Cash = 0 \r\n    Card = 1 \r\n    Check = 2 \r\n    EWallet = 3 \r\n    Coupon = 4 \r\n    Wire = 5 \r\n    Bank = 6 \r\n    Other = 99 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "AccountType": {
          "description": "\r\n\r\n    None = 0 \r\n    Professional = 1 \r\n    Personal = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "LastDigits": {
          "type": "string",
          "uniqueItems": false
        },
        "CardKey": {
          "type": "string",
          "uniqueItems": false
        },
        "JournalCode": {
          "type": "string",
          "uniqueItems": false
        },
        "Auxiliary": {
          "type": "string",
          "uniqueItems": false
        },
        "AccountNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "PaymentInstrument"
    },
    "Project": {
      "properties": {
        "ExternalId": {
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "ProjectRef": {
          "type": "string",
          "uniqueItems": false
        },
        "Validator_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ClientName": {
          "type": "string",
          "uniqueItems": false
        },
        "ForAllCompany": {
          "type": "boolean",
          "uniqueItems": false
        },
        "IsBillableDefaultValue": {
          "type": "boolean",
          "uniqueItems": false
        },
        "PayId2": {
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "ExtraData": {
          "type": "string",
          "uniqueItems": false
        },
        "DescriptionsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ProjectUseType": {
          "description": "\r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "CustomField_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "CustomFieldParent_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "CategoriesIdsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "FullName": {
          "type": "string",
          "uniqueItems": false
        },
        "FullNameWithClientName": {
          "type": "string",
          "uniqueItems": false
        },
        "IsClientNameVisible": {
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "EndDateStr": {
          "type": "string",
          "uniqueItems": false
        },
        "HasBillable": {
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "type": "string",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Project"
    },
    "SupplierInDb": {
      "properties": {
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "SupplierAccountName": {
          "type": "string",
          "uniqueItems": false
        },
        "SupplierAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "CostAccountName": {
          "type": "string",
          "uniqueItems": false
        },
        "CostAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "VatAccountName": {
          "type": "string",
          "uniqueItems": false
        },
        "VatAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "MerchantNameStr": {
          "type": "string",
          "uniqueItems": false
        },
        "VatRegime": {
          "description": "\r\n\r\n    AtCollection = 0 \r\n    Debit = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "PaymentDelays": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Category_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SupplierCollectiveAccount": {
          "type": "string",
          "uniqueItems": false
        },
        "External_Id": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "SupplierInDb"
    },
    "Tag": {
      "properties": {
        "DefinitionStr": {
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "TagType": {
          "description": "\r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UseType": {
          "description": "\r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "PartnerOrCompany_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Tag"
    },
    "Vehicle": {
      "properties": {
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "DateCreation": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CreationYearKm": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "CreationYearMiles": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "LastYearDistanceKm": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "LastUpdatedYear": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "VehicleType": {
          "description": "\r\n\r\n    Car = 1 \r\n    Moped = 2 \r\n    Scooter = 3 \r\n    Motocyle = 4 \r\n    Bicycle = 5 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "InternalVehicleType": {
          "description": "\r\n\r\n    None = 0 \r\n    Personal = 1 \r\n    Professional = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "CurrentValidator_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LastValidatorReminderDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Comments": {
          "type": "string",
          "uniqueItems": false
        },
        "State": {
          "description": "\r\n\r\n    Disabled = 0 \r\n    Active = 1 \r\n    Submitted = 2 \r\n    Approved = 3 \r\n    Rejected = 4 \r\n    All = -1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "ExternalId": {
          "type": "string",
          "uniqueItems": false
        },
        "AdministrativePower": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "AttachedFilesCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "CreationType": {
          "description": "\r\n\r\n    UserCreated = 0 \r\n    DefaultVehicle = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "AssignmentState": {
          "description": "\r\n\r\n    All = 0 \r\n    Assigned = 1 \r\n    Free = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "type": "boolean",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Vehicle"
    },
    "AddOrUpdateProjectInput": {
      "required": [
        "HasBillable",
        "IsActive",
        "ExternalId",
        "Name",
        "ProjectRef",
        "ForAllCompany"
      ],
      "properties": {
        "HasBillable": {
          "description": "Specifies if expenses assigned to this project can be billable to client or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "If the project is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurations": {
          "description": "Mileage Configurations of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ExternalId": {
          "description": "External identifier of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectRef": {
          "description": "Reference of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Validator_Id": {
          "description": "Unique identifier of the project validator.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "Unique identifier of the project reviewer.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ClientName": {
          "description": "Name of the client.",
          "type": "string",
          "uniqueItems": false
        },
        "ForAllCompany": {
          "description": "If the project is for all company or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsBillableDefaultValue": {
          "description": "Expenses assigned to the project are billable by default.",
          "type": "boolean",
          "uniqueItems": false
        },
        "PayId2": {
          "description": "First analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "description": "Currency of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ExtraData": {
          "description": "Extrat data for the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectUseType": {
          "description": "Enum flag attribute which is the use type of the project: \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128
          ]
        },
        "Description": {
          "description": "Description about the project.",
          "type": "string",
          "uniqueItems": false
        },
        "CategoriesIds": {
          "description": "Unique identifiers of the categories.If it's empty, the project will be applicable to all categories.",
          "type": "string",
          "uniqueItems": false
        },
        "TagsToAssign": {
          "description": "List of tags' names that will be assigned to the project.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "TagsToUnassign": {
          "description": "List of tags' names that will be unassigned from the project.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AddOrUpdateProjectInput"
    },
    "AddReceiptInput": {
      "required": [
        "UserId",
        "ReceiptContent",
        "ReceiptName"
      ],
      "properties": {
        "UserId": {
          "description": "Unique identifier of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ReceiptContent": {
          "description": "Content of the receipt on base 64.",
          "type": "string",
          "uniqueItems": false
        },
        "ReceiptName": {
          "description": "Name of the receipt.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AddReceiptInput"
    },
    "AddUserProjectInput": {
      "required": [
        "ExternalId",
        "ProjectExternalId",
        "HasBillable",
        "IsActive",
        "UserMail",
        "UserPayId",
        "ElementType"
      ],
      "properties": {
        "ExternalId": {
          "description": "External identifier of the user project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectExternalId": {
          "description": "External identifier of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "HasBillable": {
          "description": "If the project has billable expenses or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "description": "Start date of the project.",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "description": "End date of the project.",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "If the project is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurations": {
          "description": "Mileage Configurations of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "UserMail": {
          "description": "Mail of the user assigned to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "UserPayId": {
          "description": "Serail of the user assigned to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ElementType": {
          "description": "Type of the element : \r\n\r\n    Invoice = 1 \r\n    Mission = 2 \r\n    User = 3 \r\n    UserCollectorConnection = 4 \r\n    Company = 5 \r\n    Partner = 6 \r\n    PartnerUser = 7 \r\n    BackendUser = 8 \r\n    DelegateAccess = 9 \r\n    PartnerContract = 10 \r\n    PartnerBill = 11 \r\n    VirtualCard = 12 \r\n    CompanyConfigurationSettings = 13 \r\n    PartnerConfigurationSettings = 14 \r\n    ExportFormat = 15 \r\n    PartnerExportFormat = 16 \r\n    ImportFormat = 17 \r\n    CompanyOffer = 18 \r\n    CompanyBill = 19 \r\n    CompanyContract = 20 \r\n    Project = 21 \r\n    ProPaymentInstrument = 22 \r\n    FavoritePlaces = 23 \r\n    OrangeApiUser = 24 \r\n    UserProject = 25 \r\n    CustomField = 26 \r\n    Contact = 27 \r\n    Card = 28 \r\n    Rule = 29 \r\n    Tag = 30 \r\n    CustomFieldValue = 31 \r\n    UserCustomFieldValue = 32 \r\n    CompanyIntegrationSettings = 33 \r\n    CompanyIntegration = 34 \r\n    UserBankAccount = 35 \r\n    CompanyBankAccount = 36 \r\n    PaymentInstrument = 37 \r\n    Category = 38 \r\n    Vehicle = 39 \r\n    TagAssignment = 40 \r\n    CompanyContact = 41 \r\n    Validator = 42 \r\n    UserWithValidators = 43 \r\n    CompanySftp = 44 \r\n    CompanyOrder = 45 \r\n    Supplier = 46 \r\n    CustomIkRate = 47 \r\n    DefaultIkRate = 48 \r\n    ExtraSettings = 49 \r\n    SSo = 50 \r\n    CustomIntegration = 51 \r\n    AccountSettings = 52 \r\n    Perdiem = 53 \r\n    MileageConfiguration = 54 \r\n    FieldPosition = 55 \r\n    VirtualPayment = 56 \r\n    LegalStorage = 57 \r\n    MobileConfiguration = 58 \r\n    BICube = 59 \r\n    ExportCustom = 60 \r\n    Domain = 61 \r\n    BiConfiguration = 62 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62
          ]
        },
        "ExtraData": {
          "description": "Extrat data for the project.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AddUserProjectInput"
    },
    "ContactInput": {
      "required": [
        "ContactFirstName",
        "ContactLastName",
        "ContactMail",
        "ContactCountryCode",
        "IsCoworker",
        "IsShared"
      ],
      "properties": {
        "ContactFirstName": {
          "description": "First name of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactLastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactRole": {
          "description": "Role of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactMail": {
          "description": "Mail of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "description": "Phone number of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactAddress": {
          "description": "Address of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactZipCode": {
          "description": "Zip code of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCity": {
          "description": "City of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCountryCode": {
          "description": "Country code of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "IsCoworker": {
          "description": "Shows if the contact is a coworker or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsShared": {
          "description": "Shows if the contact is shared or not with all employees.",
          "type": "boolean",
          "uniqueItems": false
        },
        "ContactCompanyName": {
          "description": "Name of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyMail": {
          "description": "Mail of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyWebSite": {
          "description": "Website of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyPhoneNumber": {
          "description": "Phone number of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyAddress": {
          "description": "Address of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyZipCode": {
          "description": "Zip code of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyCity": {
          "description": "City of the contact company.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactCompanyCountryCode": {
          "description": "Country code of the contact company.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ContactInput"
    },
    "CustomFieldValueInput": {
      "required": [
        "Name",
        "Value",
        "ExternalId",
        "IsActive"
      ],
      "properties": {
        "Name": {
          "description": "Name of the custom field value.",
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "description": "Value of the custom field value.",
          "type": "string",
          "uniqueItems": false
        },
        "ExternalId": {
          "description": "External identifier of the custom field value.",
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "This boolean represents the custom field state whether it's hidden or visible.",
          "type": "boolean",
          "uniqueItems": false
        },
        "Validator_Id": {
          "description": "The validator of the custom field value.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "The reviewer of the custom field value.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "The starting date of the use of the custom field value.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "The ending date of the use of the custom field value.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Enum flag attribute which is the use type of the custom field value : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128
          ]
        },
        "TagsToAssign": {
          "description": "List of tags' names that will be assigned to the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "CustomFieldValueInput"
    },
    "QuickExpenseInput": {
      "required": [
        "FileToSend"
      ],
      "properties": {
        "FileToSend": {
          "description": "The file to Send on bease64.",
          "type": "string",
          "uniqueItems": false
        },
        "Title": {
          "description": "Title of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "TransactionAmount": {
          "description": "Transaction amount of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "VatRates": {
          "description": "Vate rates of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "VatAmounts": {
          "description": "Vate amounts of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "CurrencyCode": {
          "description": "Currency code of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "TransactionDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "MerchantName": {
          "description": "Merchant name of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "LocationCountry": {
          "description": "Location country of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "LocationCity": {
          "description": "Location city of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "Comment": {
          "description": "Comment of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantExpenseId": {
          "description": "Unique expense identifier of the merchant.",
          "type": "string",
          "uniqueItems": false
        },
        "IsEncrypted": {
          "description": "If the expense is encrypted ot not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "ExpenseUseType": {
          "description": "Enum flag attribute which is the use type of the expense: \r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16
          ]
        },
        "PaymentTypeCode": {
          "description": "Payment type code of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "ExpenseTypeCode": {
          "description": "Type code of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "FileType": {
          "description": "File type of the expense.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "QuickExpenseInput"
    },
    "ReportUpdateStatusInput": {
      "required": [
        "Operation",
        "Message"
      ],
      "properties": {
        "Operation": {
          "description": "The operation type that will be apply to the report.\r\n\r\n    None = 0 \r\n    Submit = 2 \r\n    Reject = 3 \r\n    Validate = 4 \r\n    Close = 5 \r\n    ValidateAndExport = 6 \r\n    Reimburse = 7 \r\n    ValidatedByAccountant = 8 \r\n    Tag = 9 \r\n    CloseAndTag = 10 \r\n    Disable = 11 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ]
        },
        "Message": {
          "description": "The update comment that will be show to the owner's report.",
          "type": "string",
          "uniqueItems": false
        },
        "InvoiceIdsToReject": {
          "description": "List of the invoice that will be reject.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "AccountingPeriod": {
          "description": "The accounting period of the report.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ReportUpdateStatusInput"
    },
    "TagsToAssignOrUnassignInput": {
      "required": [
        "ElementsToTag",
        "ElementsType"
      ],
      "properties": {
        "ExistingTagsToAssign": {
          "description": "List of names of existing tags to assign.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "ExistingTagsToUnassign": {
          "description": "List of names of existing tags to unassign.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "ElementsToTag": {
          "description": "List of unique identifiers of elements to tag.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "ElementsType": {
          "description": "Enum attribute which is the type of the elements to tag : \r\n\r\n    InvoiceAndFK = 0 \r\n    Report = 1 \r\n    Category = 2 \r\n    Project = 3 \r\n    Company = 4 \r\n    PartnerUser = 5 \r\n    BackendUser = 6 \r\n    InvoiceOnly = 7 \r\n    FkOnly = 8 \r\n    Rule = 9 \r\n    User = 10 \r\n    CustomFieldValue = 11 \r\n    SimpleTag = 12 \r\n    PurchaseOnly = 13 \r\n    Vehicule = 14 \r\n    PaymentInstrument = 15 \r\n    UserBankAccounts = 16 \r\n    CompanyBankAccounts = 17 \r\n    VehicleAssignment = 18 \r\n    Export = 19 \r\n    Trip = 20 \r\n    Tag = 21 \r\n    CustomField = 22 \r\n    Contact = 23 \r\n    Undefined = 255 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            255
          ]
        }
      },
      "type": "object",
      "format": "TagsToAssignOrUnassignInput"
    },
    "Address": {
      "properties": {
        "StreetName": {
          "description": "StreetName",
          "type": "string",
          "uniqueItems": false
        },
        "CountryName": {
          "type": "string",
          "uniqueItems": false
        },
        "CountryCode": {
          "type": "string",
          "uniqueItems": false
        },
        "CityName": {
          "type": "string",
          "uniqueItems": false
        },
        "CityCode": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Address"
    },
    "Breakdown": {
      "required": [
        "Type",
        "Amount",
        "Currency"
      ],
      "properties": {
        "Type": {
          "description": "Type of the breakDown. can be: BASE, TAXES, FEE",
          "type": "string",
          "uniqueItems": false
        },
        "Amount": {
          "description": "The amount of the price for a given currency.",
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "Currency": {
          "description": "The currency code of the amount in iso-alpha-3 code. e.g: EUR, USD",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Breakdown"
    },
    "CustomDataField": {
      "properties": {
        "Id": {
          "description": "External identifier of the custom data field",
          "type": "string",
          "uniqueItems": false
        },
        "Label": {
          "description": "Label of the custom data field",
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "description": "External identifier of the custom data field",
          "type": "string",
          "uniqueItems": false
        },
        "ENLabel": {
          "description": "Label of the custom data field in english",
          "type": "string",
          "uniqueItems": false
        },
        "FRLabel": {
          "description": "Label of the custom data field in frensh",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "CustomDataField"
    },
    "Location": {
      "required": [
        "Type",
        "Name"
      ],
      "properties": {
        "Type": {
          "description": "Defines what kind of location it is: Airport, TrainStation, Hotel",
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "description": "The name of the airport, or the station, or the hotel.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      },
      "type": "object",
      "format": "Location"
    },
    "OriginDestination": {
      "required": [
        "Segments"
      ],
      "properties": {
        "Segments": {
          "description": "Segments that composes the Trip Origin Destination. If a flight Paris → New York as a stop in London, it will have 2 segments: \n 1 - Paris → London \n 2 - London → New York",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "OriginDestination"
    },
    "Price": {
      "required": [
        "Currency",
        "Amount"
      ],
      "properties": {
        "Currency": {
          "description": "The currency code of the amount in iso-alpha-3 code. e.g: EUR, USD",
          "type": "string",
          "uniqueItems": false
        },
        "Amount": {
          "description": "The amount of the price for a given currency.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Breakdowns": {
          "description": "Contains the list of Breakdown objects describing how the price is composed such as: product amount, fee amount, taxes amount",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Breakdown"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Price"
    },
    "Segment": {
      "required": [
        "Departure",
        "Arrival"
      ],
      "properties": {
        "Departure": {
          "description": "The segment's departure.",
          "$ref": "#/definitions/SegmentStep"
        },
        "Arrival": {
          "description": "The segment's arrival.",
          "$ref": "#/definitions/SegmentStep"
        },
        "Carrier": {
          "description": "This is the carrier Object, this is the company operating the flight.",
          "$ref": "#/definitions/ServiceProvider"
        },
        "Provider": {
          "description": "This is the provider Object, this is the company selling the ticket.",
          "$ref": "#/definitions/ServiceProvider"
        },
        "BookingClass": {
          "description": "The booking class code. Used for train and flight.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "Segment"
    },
    "SegmentStep": {
      "required": [
        "Location",
        "DateTime"
      ],
      "properties": {
        "Location": {
          "description": "Location",
          "$ref": "#/definitions/Location"
        },
        "DateTime": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "SegmentStep"
    },
    "ServiceProvider": {
      "properties": {
        "Code": {
          "description": "Code of the company",
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the company",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ServiceProvider"
    },
    "TripBooking": {
      "required": [
        "ExpenseId",
        "ExpenseType",
        "State",
        "Price"
      ],
      "properties": {
        "ExpenseId": {
          "description": "A unique identifier of the booking.",
          "type": "string",
          "uniqueItems": false
        },
        "Label": {
          "description": "Label of the booking",
          "type": "string",
          "uniqueItems": false
        },
        "BookingLink": {
          "description": "Direct link to the booking.",
          "type": "string",
          "uniqueItems": false
        },
        "ExpenseType": {
          "description": "The type of the booking. Can be: \r\n\r\n    HOTEL, \r\n    TRAIN, \r\n    FLIGHT, \r\n    CAR, \r\n    GROUND (for taxi or bus), \r\n    FEE \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "State": {
          "description": "the state of the booking. Can be: \r\n\r\n    PENDING,  \r\n    BOOKED, \r\n    CANCELLED  \r\n",
          "type": "string",
          "uniqueItems": false
        },
        "Price": {
          "description": "The price of the booking",
          "$ref": "#/definitions/Price"
        },
        "OriginDestinations": {
          "description": "List of orgin destinations that composes the trip. This is required for flight, taxi or bus bookings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OriginDestination"
          },
          "uniqueItems": false
        },
        "RouteNumber": {
          "description": "List of route numbers of the trip.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "Vehicle": {
          "description": "The vehicle of the trip for car booking.",
          "$ref": "#/definitions/TripVehicle"
        },
        "PickUp": {
          "description": "Pickup segment of the booking. Specified for car bookings",
          "$ref": "#/definitions/SegmentStep"
        },
        "DropOff": {
          "description": "Dropoff segment of the booking. Specified for car bookings",
          "$ref": "#/definitions/SegmentStep"
        },
        "CheckIn": {
          "description": "Checkin date. This is required for hotel bookings.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CheckOut": {
          "description": "Checkout date. This is required for hotel bookings.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Location": {
          "description": "Hotel booking location. This is required for hotel bookings.",
          "$ref": "#/definitions/Location"
        },
        "StarRating": {
          "description": "Hotel booking star rating.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "TripBooking"
    },
    "TripVehicle": {
      "properties": {
        "Type": {
          "description": "Type of the vehicle.",
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "TripVehicle"
    },
    "UpdateCustomFieldValueInput": {
      "required": [
        "Id",
        "Name",
        "Value",
        "IsActive"
      ],
      "properties": {
        "Id": {
          "description": "Unique Identifier of the custom field value.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the custom field value.",
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "description": "Value of the custom field value.",
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "This boolean represents the custom field state whether it's hidden or visible.",
          "type": "boolean",
          "uniqueItems": false
        },
        "Validator_Id": {
          "description": "The validator of the custom field value.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "The reviewer of the custom field value.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "The starting date of the use of the custom field value.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "The ending date of the use of the custom field value.",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Enum flag attribute which is the use type of the custom field value : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128
          ]
        },
        "TagsToAssign": {
          "description": "List of tags' names that will be assigned to the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "TagsToUnassign": {
          "description": "List of tags' names that will be unassigned from the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UpdateCustomFieldValueInput"
    },
    "UpdateProjectStateInput": {
      "required": [
        "ItemIds",
        "ProjectState"
      ],
      "properties": {
        "ItemIds": {
          "description": "List of projects' unique identifiers to update.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "ProjectState": {
          "description": "New state: true for active and false for disable.",
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UpdateProjectStateInput"
    },
    "UpdateTagsStateInput": {
      "required": [
        "TagsNames",
        "TagsState"
      ],
      "properties": {
        "TagsNames": {
          "description": "List of tags' names to update.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "TagsState": {
          "description": "New state: true for active and false for disable.",
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UpdateTagsStateInput"
    },
    "UpdateUserProjectInput": {
      "required": [
        "ExternalId",
        "ProjectExternalId",
        "HasBillable",
        "UserMail",
        "ElementType"
      ],
      "properties": {
        "ExternalId": {
          "description": "External identifier of the user project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectExternalId": {
          "description": "External identifier of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "HasBillable": {
          "description": "If the project has billable expenses or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "If the project is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurations": {
          "description": "Mileage Configurations of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "UserMail": {
          "description": "Mail of the user assigned to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "UserPayId": {
          "description": "Serail of the user assigned to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ElementType": {
          "description": "Type of the element : \r\n\r\n    Invoice = 1 \r\n    Mission = 2 \r\n    User = 3 \r\n    UserCollectorConnection = 4 \r\n    Company = 5 \r\n    Partner = 6 \r\n    PartnerUser = 7 \r\n    BackendUser = 8 \r\n    DelegateAccess = 9 \r\n    PartnerContract = 10 \r\n    PartnerBill = 11 \r\n    VirtualCard = 12 \r\n    CompanyConfigurationSettings = 13 \r\n    PartnerConfigurationSettings = 14 \r\n    ExportFormat = 15 \r\n    PartnerExportFormat = 16 \r\n    ImportFormat = 17 \r\n    CompanyOffer = 18 \r\n    CompanyBill = 19 \r\n    CompanyContract = 20 \r\n    Project = 21 \r\n    ProPaymentInstrument = 22 \r\n    FavoritePlaces = 23 \r\n    OrangeApiUser = 24 \r\n    UserProject = 25 \r\n    CustomField = 26 \r\n    Contact = 27 \r\n    Card = 28 \r\n    Rule = 29 \r\n    Tag = 30 \r\n    CustomFieldValue = 31 \r\n    UserCustomFieldValue = 32 \r\n    CompanyIntegrationSettings = 33 \r\n    CompanyIntegration = 34 \r\n    UserBankAccount = 35 \r\n    CompanyBankAccount = 36 \r\n    PaymentInstrument = 37 \r\n    Category = 38 \r\n    Vehicle = 39 \r\n    TagAssignment = 40 \r\n    CompanyContact = 41 \r\n    Validator = 42 \r\n    UserWithValidators = 43 \r\n    CompanySftp = 44 \r\n    CompanyOrder = 45 \r\n    Supplier = 46 \r\n    CustomIkRate = 47 \r\n    DefaultIkRate = 48 \r\n    ExtraSettings = 49 \r\n    SSo = 50 \r\n    CustomIntegration = 51 \r\n    AccountSettings = 52 \r\n    Perdiem = 53 \r\n    MileageConfiguration = 54 \r\n    FieldPosition = 55 \r\n    VirtualPayment = 56 \r\n    LegalStorage = 57 \r\n    MobileConfiguration = 58 \r\n    BICube = 59 \r\n    ExportCustom = 60 \r\n    Domain = 61 \r\n    BiConfiguration = 62 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62
          ]
        },
        "ExtraData": {
          "description": "Extrat data for the project.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UpdateUserProjectInput"
    },
    "UserInviteInput": {
      "required": [
        "LastName",
        "FirstName",
        "Mail",
        "Language",
        "UserType",
        "UserRole"
      ],
      "properties": {
        "LastName": {
          "description": "Last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "description": "First name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "description": "Mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "MailAlias": {
          "description": "Mail alias of the user and it should be different from user mail.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId": {
          "description": "Serial of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId2": {
          "description": "First analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId3": {
          "description": "Second analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId4": {
          "description": "Third analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId5": {
          "description": "Forth analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId6": {
          "description": "Fifth analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "description": "Language of the user: FR, US, SE...",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "description": "Local currency of the user: EUR, TND, USD...",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCountry": {
          "description": "Local country of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerId": {
          "description": "Unique identifier of the second validator.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ReviewerId": {
          "description": "Unique identifier of the first validator.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserType": {
          "description": "Enum flag attribute which is the type of the user and it is necessary to combine the user type 'Employee' with the other types for example: Employee + Administrator or Employee + Accountant. The user typs are : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32,
            56
          ]
        },
        "Vendor": {
          "description": "Name of the vendor",
          "type": "string",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "Enum flag attribute which is the role of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            8192,
            16384,
            32768,
            65536,
            131072,
            262144,
            524288,
            1048576,
            2097152,
            4194304,
            8388608,
            16777216,
            33554432,
            67108864
          ]
        },
        "DefaultProjectId": {
          "description": "Unique identifier of the user default project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "IKRatesId": {
          "description": "Unique identifier of the mileage compensation rates.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "AdditionalValidators": {
          "description": "List of additional validators of the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorInput"
          },
          "uniqueItems": false
        },
        "TagsToAssign": {
          "description": "List of tags' names that will be assigned to the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserInviteInput"
    },
    "UserUpdateInput": {
      "properties": {
        "LastName": {
          "description": "Last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "description": "First name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "description": "Mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "MailAlias": {
          "description": "Mail alias of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId": {
          "description": "Serial of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId2": {
          "description": "First analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId3": {
          "description": "Second analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId4": {
          "description": "Third analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId5": {
          "description": "Forth analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId6": {
          "description": "Fifth analytical axis.",
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "description": "Language of the user: FR, US, SE...",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "description": "Local currency of the user: EUR, TND, USD...",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCountry": {
          "description": "Local country of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Manager_Id": {
          "description": "Unique identifier of second validator.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "Unique identifier of the first validaor.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserType": {
          "description": "Enum flag attribute which is the type of the user and it is necessary to combine the user type 'Employee' with the other types for exemple: Employee + Administrator or Employee + Accountant. The user typs are : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32,
            56
          ]
        },
        "Vendor": {
          "description": "The name of the vendor.",
          "type": "string",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "Enum flag attribute which is the role of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            8192,
            16384,
            32768,
            65536,
            131072,
            262144,
            524288,
            1048576,
            2097152,
            4194304,
            8388608,
            16777216,
            33554432,
            67108864
          ]
        },
        "JobTitle": {
          "description": "Title of the user job.",
          "type": "string",
          "uniqueItems": false
        },
        "CanAddPurchase": {
          "description": "If the user can add purchase or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "DefaultProjectId": {
          "description": "Unique identifier of the user default project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "IKRates_Id": {
          "description": "Unique identifier of the mileage compensation rates.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "AdditionalValidators": {
          "description": "List of additional validators of the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorInput"
          },
          "uniqueItems": false
        },
        "TagsToAssign": {
          "description": "List of tags' names that will be assigned to the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "TagsToUnassign": {
          "description": "List of tags' names that will be unassigned from the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserUpdateInput"
    },
    "ValidatorInput": {
      "required": [
        "Mail"
      ],
      "properties": {
        "Mail": {
          "description": "Mail of the validator",
          "type": "string",
          "uniqueItems": false
        },
        "MinimumAmount": {
          "description": "If the ammount exceed the ammount the expense should be sent to the validator",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ValidatorInput"
    },
    "AddOrUpdateEntityResult": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the updated project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ExternalId": {
          "description": "The External identifier of the updated project.",
          "type": "string",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AddOrUpdateEntityResult"
    },
    "BaseResult": {
      "properties": {
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResult"
    },
    "BaseResultExportResponse": {
      "properties": {
        "ResultItem": {
          "$ref": "#/definitions/ExportResponse"
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultExportResponse"
    },
    "BaseResultProjectResponse": {
      "properties": {
        "ResultItem": {
          "$ref": "#/definitions/ProjectResponse"
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultProjectResponse"
    },
    "BaseResultListAddOrUpdateEntityResult": {
      "properties": {
        "ResultItem": {
          "description": "Item sent by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOrUpdateEntityResult"
          },
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultListAddOrUpdateEntityResult"
    },
    "BaseResultListBaseResult": {
      "properties": {
        "ResultItem": {
          "description": "Item sent by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseResult"
          },
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultListBaseResult"
    },
    "BaseResultListEventResponse": {
      "properties": {
        "ResultItem": {
          "description": "Item sent by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventResponse"
          },
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultListEventResponse"
    },
    "BaseResultListExportFormatResponse": {
      "properties": {
        "ResultItem": {
          "description": "Item sent by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportFormatResponse"
          },
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultListExportFormatResponse"
    },
    "BaseResultListUpdateUserResult": {
      "properties": {
        "ResultItem": {
          "description": "Item sent by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateUserResult"
          },
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BaseResultListUpdateUserResult"
    },
    "BrokenRuleResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the broken rule.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the broken rule.",
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the broken rule.",
          "type": "string",
          "uniqueItems": false
        },
        "DescriptionForCredit": {
          "description": "Description for credit of the broken rule.",
          "type": "string",
          "uniqueItems": false
        },
        "Budget": {
          "description": "Budget of the broken rule.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "RuleType": {
          "description": "Type of the broken rule : \r\n\r\n    Mandatory = 0 \r\n    Warning = 1 \r\n    ReimbursableByCeiling = 2 \r\n    ReimbursableByFlatRate = 3 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "Currency": {
          "description": "Currency of the broken rule.",
          "type": "string",
          "uniqueItems": false
        },
        "AllowExceptions": {
          "description": "Shows if exceptions are allowed in broken rule.",
          "type": "boolean",
          "uniqueItems": false
        },
        "RuleElementType": {
          "description": "Type of the rule element : \r\n\r\n    Invoices = 0 \r\n    VirtualCards = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1
          ]
        },
        "IntervalType": {
          "description": "Type of the interval of the broken rule : \r\n\r\n    Day = 0 \r\n    WeekDays = 1 \r\n    Month = 2 \r\n    Year = 3 \r\n    Invoice = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        },
        "Language": {
          "description": "Language of the broken rule.",
          "type": "string",
          "uniqueItems": false
        },
        "RuleCurrenciesWithBudget": {
          "$ref": "#/definitions/TupleStringDecimal"
        },
        "ForAllCompany": {
          "description": "Shows if the broken rule is for all company or not.",
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "BrokenRuleResponse"
    },
    "CategoryResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the category.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "EntityName": {
          "description": "Entity Name of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "Parent": {
          "description": "Parent of the category (category can be linked to an other categroy).",
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "PrimitiveCategories": {
          "description": "Sub categories.",
          "type": "string",
          "uniqueItems": false
        },
        "ParentCategory_Id": {
          "description": "Unique parent identifier of the category (category can be linked to an other categroy).",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Shows if the category is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsActiveAsDefault": {
          "description": "Default category when user add new expense.",
          "type": "boolean",
          "uniqueItems": false
        },
        "CostAccount": {
          "description": "Cost account of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "VatAccount": {
          "description": "VAT account of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "ExtraData": {
          "description": "Additional informations about the category.",
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "description": "Creation date of the category. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "VatClaimRate": {
          "description": "VAT claim rate of the category.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "VatClaimRates": {
          "description": "VAT claim rate of the category by year.",
          "type": "string",
          "uniqueItems": false
        },
        "CategoryUseType": {
          "description": "Category use type : \r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4
          ]
        },
        "ExternalId": {
          "description": "External identifier of the category.",
          "type": "string",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "description": "Shows if the category is just read only.",
          "type": "boolean",
          "uniqueItems": false
        },
        "CategoryTags": {
          "description": "List of tags of the category.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "CategoryResponse"
    },
    "ContactResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the contact.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "User_Id": {
          "description": "Unique identifier of the user who added the contact.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ContactCompany_Id": {
          "description": "Contact company identifier related to the contact.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "FirstName": {
          "description": "First name of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "LastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "Role": {
          "description": "Role of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "description": "Mail of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "description": "Phone number of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "CountryCode": {
          "description": "ISO Country code of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "IsCoworker": {
          "description": "Shows if the contact is a coworker.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsShared": {
          "description": "Shows if the contact is shared with all users.",
          "type": "boolean",
          "uniqueItems": false
        },
        "CreationDate": {
          "description": "Creation date of the contact. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "ExtraData": {
          "description": "Additional Informations about the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Shows if the contact is active.",
          "type": "boolean",
          "uniqueItems": false
        },
        "FullName": {
          "description": "Full name of the contact.",
          "type": "string",
          "uniqueItems": false
        },
        "ContactInfo": {
          "description": "Extra Informations about the contact.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ContactResponse"
    },
    "EventResponse": {
      "properties": {
        "EventDate": {
          "description": "Date of the event. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EventType": {
          "description": "Type of the event: submitMission, validateMission...\r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            41,
            42,
            43,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129
          ]
        },
        "UserId": {
          "description": "Unique identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserLastName": {
          "description": "Last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "UserFirstName": {
          "description": "First name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "UserMail": {
          "description": "Mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the evnt",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "EventResponse"
    },
    "ExpenseResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the expense.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "description": "Value of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburse": {
          "description": "Value to reimbures of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ReimbursementRate": {
          "description": "Reimbursement rate of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Type of the expense : \r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16
          ]
        },
        "DateCreation": {
          "description": "Creation date of the expense. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "DateInvoice": {
          "description": "Date of the expense. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "DateUtcOffset": {
          "description": "Date offset of the expense.",
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "HasPhoto": {
          "description": "Shows if the expense has photo.",
          "type": "boolean",
          "uniqueItems": false
        },
        "Currency": {
          "description": "Currency of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "ValueInCurrency": {
          "description": "Value in currency of the owner of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueInLocalCurrency": {
          "description": "Value in local currency of the owner of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "MerchantInvoiceId": {
          "description": "Merchant Invoice external identifier",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantCountry": {
          "description": "Merchant country of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantCity": {
          "description": "Merchant city of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantZipCode": {
          "description": "Merchant zip code of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantAddress": {
          "description": "Merchant address of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantName": {
          "description": "Merchant name of the expense",
          "type": "string",
          "uniqueItems": false
        },
        "MerchantVatNumber": {
          "description": "Merchant VAT number of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "Units": {
          "description": "Number of units of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "State": {
          "description": "State of the expense : \r\n\r\n    Uploading = 0 \r\n    Uploaded = 1 \r\n    Ready = 2 \r\n    Validated = 3 \r\n    ValidatedByAccountant = 4 \r\n    Rejected = 99 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            99
          ]
        },
        "VAT": {
          "$ref": "#/definitions/VATResponse"
        },
        "VATAvgRate": {
          "description": "VAT rate of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "AttachedFilesCount": {
          "description": "Number of attached files to the expense.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ToReimburse": {
          "description": "Shows if the expense is to reimburse.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsBillable": {
          "description": "Shows if the expense is billable to client.",
          "type": "boolean",
          "uniqueItems": false
        },
        "CustomFields": {
          "description": "Custom fields of the expense.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePairGuidString"
          },
          "uniqueItems": false
        },
        "FileType": {
          "description": "File type of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "DefaultRate": {
          "description": "Default rate of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "CreditSource_Id": {
          "description": "Unique credit source identifier of the expense.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "User_Id": {
          "description": "Unique user identifier of the expense.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Project": {
          "$ref": "#/definitions/ProjectResponse"
        },
        "Report": {
          "$ref": "#/definitions/ReportResponse"
        },
        "PaymentInstrument": {
          "$ref": "#/definitions/PaymentInstrumentResponse"
        },
        "Vehicle": {
          "$ref": "#/definitions/VehicleResponse"
        },
        "TransactionsSumValue": {
          "description": "Transactions sum value of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "TransactionsSumInCurrency": {
          "description": "Transactions sum value in currency of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "TransactionsSumInLocalCurrency": {
          "description": "Transactions sum value in Local currency of the expense.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "PerdiemCountry": {
          "description": "Country of the perdiem.",
          "type": "string",
          "uniqueItems": false
        },
        "PerdiemCalculationPeriodType": {
          "description": "Type of the perdiem calculation period : \r\n\r\n    CalendarDay = 0 \r\n    TwentyFourHours = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1
          ]
        },
        "PerDiemType": {
          "description": "Type of the perdiem : \r\n\r\n    Time = 0 \r\n    Distance = 1 \r\n    IEG = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "Category": {
          "$ref": "#/definitions/CategoryResponse"
        },
        "BrokenRules": {
          "description": "List of broken rules of the expense.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokenRuleResponse"
          },
          "uniqueItems": false
        },
        "IsMileage": {
          "description": "Shows if the expense is Mileage.",
          "type": "boolean",
          "uniqueItems": false
        },
        "CategoryExtraDataStr": {
          "description": "Extra date for the category of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "Guests": {
          "description": "List of guests of the expense.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestResponse"
          },
          "uniqueItems": false
        },
        "SubStatus": {
          "description": "Enum flag attribute which is the substatus of the expense : \r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024
          ]
        },
        "OwnerPayId": {
          "description": "Serial of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId2": {
          "description": "First analytical axis of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId3": {
          "description": "Second analytical axis of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId4": {
          "description": "Third analytical axis of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId5": {
          "description": "Fourth analytical axis of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "OwnerPayId6": {
          "description": "Fifth analytical axis of the owner of the expense.",
          "type": "string",
          "uniqueItems": false
        },
        "ExpenseTags": {
          "description": "List of tag of the expense.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExpenseResponse"
    },
    "ExportFormatResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the export format.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "The name of export format.",
          "type": "string",
          "uniqueItems": false
        },
        "Extension": {
          "description": "The extension of the export format.",
          "type": "string",
          "uniqueItems": false
        },
        "CodePath": {
          "description": "Unique code path of the export format.",
          "type": "string",
          "uniqueItems": false
        },
        "MissionExport": {
          "description": "Shows if the export format is available for reports.",
          "type": "boolean",
          "uniqueItems": false
        },
        "InvoicesExport": {
          "description": "Shows if the export format is available for expenses.",
          "type": "boolean",
          "uniqueItems": false
        },
        "AutoExport": {
          "description": "Shows if it's an auto export format.",
          "type": "boolean",
          "uniqueItems": false
        },
        "LastAutoExportDate": {
          "description": "Date of the last auto export if it happened and if the export format is auto export format. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExportFormatResponse"
    },
    "ExportResponse": {
      "properties": {
        "FileUrl": {
          "description": "The url of the exported file.",
          "type": "string",
          "uniqueItems": false
        },
        "FileExtension": {
          "description": "The extension of the exported file.",
          "type": "string",
          "uniqueItems": false
        },
        "FileName": {
          "description": "The name of the exported file.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExportResponse"
    },
    "GuestResponse": {
      "properties": {
        "Mail": {
          "description": "Mail of the guest.",
          "type": "string",
          "uniqueItems": false
        },
        "FullName": {
          "description": "Full name of the guest.",
          "type": "string",
          "uniqueItems": false
        },
        "Id": {
          "description": "Unique identifier of the guest.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "IsCoworker": {
          "description": "Shows if the guest is coworker or not.",
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "GuestResponse"
    },
    "ListAndPagesCountResultCategoryResponse": {
      "properties": {
        "List": {
          "description": "List of elements to return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryResponse"
          },
          "uniqueItems": false
        },
        "PagesCount": {
          "description": "Total number of pages.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalListCount": {
          "description": "Total number of elements per page.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ListAndPagesCountResultCategoryResponse"
    },
    "ListAndPagesCountResultExpenseResponse": {
      "properties": {
        "List": {
          "description": "List of elements to return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpenseResponse"
          },
          "uniqueItems": false
        },
        "PagesCount": {
          "description": "Total number of pages.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalListCount": {
          "description": "Total number of elements per page.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ListAndPagesCountResultExpenseResponse"
    },
    "ListAndPagesCountResultProjectResponse": {
      "properties": {
        "List": {
          "description": "List of elements to return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectResponse"
          },
          "uniqueItems": false
        },
        "PagesCount": {
          "description": "Total number of pages.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalListCount": {
          "description": "Total number of elements per page.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ListAndPagesCountResultProjectResponse"
    },
    "ListAndPagesCountResultReportResponse": {
      "properties": {
        "List": {
          "description": "List of elements to return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportResponse"
          },
          "uniqueItems": false
        },
        "PagesCount": {
          "description": "Total number of pages.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalListCount": {
          "description": "Total number of elements per page.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ListAndPagesCountResultReportResponse"
    },
    "ListAndPagesCountResultUserResponse": {
      "properties": {
        "List": {
          "description": "List of elements to return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponse"
          },
          "uniqueItems": false
        },
        "PagesCount": {
          "description": "Total number of pages.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalListCount": {
          "description": "Total number of elements per page.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ListAndPagesCountResultUserResponse"
    },
    "LoginResponse": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserToken": {
          "type": "string",
          "uniqueItems": false
        },
        "LastName": {
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "type": "string",
          "uniqueItems": false
        },
        "MailAlias": {
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CountryCode": {
          "type": "string",
          "uniqueItems": false
        },
        "FaxNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "ShemaVersion": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Login_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Manager_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserType": {
          "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserTokenDurationSeconds": {
          "type": "integer",
          "format": "uint64",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "LoginResponse"
    },
    "OfferResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the offer.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "Start date of the offer. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "End date of the offer. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "OfferType": {
          "description": "Type of the offer : \r\n\r\n    SilverDefault = 0 \r\n    Free = 1 \r\n    AlwaysFree = 2 \r\n    SilverYearly = 3 \r\n    CustomExport = 4 \r\n    TestPeriod = 5 \r\n    OrangeStandard = 6 \r\n    OrangePremium = 7 \r\n    GoldDefault = 11 \r\n    GoldYearly = 12 \r\n    AppDirectSilverDefault = 13 \r\n    AppDirectGoldDefault = 14 \r\n    CegidSilverDefault = 15 \r\n    OrangePlatiniumOffer = 16 \r\n    OrangeGoldOffer = 17 \r\n    OrangeSilverOffer = 18 \r\n    ImplementationOffer = 19 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ]
        },
        "FutureOfferType": {
          "description": "Type of the futur offer : \r\n\r\n    SilverDefault = 0 \r\n    Free = 1 \r\n    AlwaysFree = 2 \r\n    SilverYearly = 3 \r\n    CustomExport = 4 \r\n    TestPeriod = 5 \r\n    OrangeStandard = 6 \r\n    OrangePremium = 7 \r\n    GoldDefault = 11 \r\n    GoldYearly = 12 \r\n    AppDirectSilverDefault = 13 \r\n    AppDirectGoldDefault = 14 \r\n    CegidSilverDefault = 15 \r\n    OrangePlatiniumOffer = 16 \r\n    OrangeGoldOffer = 17 \r\n    OrangeSilverOffer = 18 \r\n    ImplementationOffer = 19 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ]
        }
      },
      "type": "object",
      "format": "OfferResponse"
    },
    "PaymentInstrumentResponse": {
      "properties": {
        "Name": {
          "description": "Name of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Shows if the payment instrument is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "InstrumentType": {
          "description": "Type of the payment instrument : \r\n\r\n    Cash = 0 \r\n    Card = 1 \r\n    Check = 2 \r\n    EWallet = 3 \r\n    Coupon = 4 \r\n    Wire = 5 \r\n    Bank = 6 \r\n    Other = 99 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            99
          ]
        },
        "AccountType": {
          "description": "Type of the payment instrument account : \r\n\r\n    None = 0 \r\n    Professional = 1 \r\n    Personal = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "LastDigits": {
          "description": "Last digits of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "CardKey": {
          "description": "Card key of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "JournalCode": {
          "description": "Journal code of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "Auxiliary": {
          "description": "Auxiliary account of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        },
        "AccountNumber": {
          "description": "Account number of the payment instrument.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "PaymentInstrumentResponse"
    },
    "ProjectResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "HasBillable": {
          "description": "Project is billable to client.",
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "Start date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "End date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Show if the project is Active.",
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "description": "Mileage configuration of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ExternalId": {
          "description": "External identifier of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the Project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectRef": {
          "description": "Reference of the project",
          "type": "string",
          "uniqueItems": false
        },
        "Validator_Id": {
          "description": "Unique validator identifier of the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "Unique  reviwer identifier of the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ClientName": {
          "description": "Client name of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ForAllCompany": {
          "description": "Project is shared with all users.",
          "type": "boolean",
          "uniqueItems": false
        },
        "IsBillableDefaultValue": {
          "description": "Project is by default billable to client.",
          "type": "boolean",
          "uniqueItems": false
        },
        "PayId2": {
          "description": "Second Analytical axis relevant to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "description": "Currency of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ExtraData": {
          "description": "Additional informations about the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ProjectUseType": {
          "description": "Enum flag attribute that shows to which entity the project will be applied to : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128
          ]
        },
        "CustomField_Id": {
          "description": "Unique custom field identifier related to the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "CustomFieldParent_Id": {
          "description": "Unique parent custom Field identifier related to the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "CategoriesIdsStr": {
          "description": "Categories identifiers relevant to the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ValidatorFullName": {
          "description": "Validator full name of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ValidatorMail": {
          "description": "Validator mail of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerFullName": {
          "description": "Reviwer full name of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerMail": {
          "description": "Reviewer mail of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "IsReadOnly": {
          "description": "Shows if the project is just read only.",
          "type": "boolean",
          "uniqueItems": false
        },
        "ProjectTags": {
          "description": "List of tags of the project.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ProjectResponse"
    },
    "ReportResponse": {
      "properties": {
        "Id": {
          "description": "Unique report identifier.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the report.",
          "type": "string",
          "uniqueItems": false
        },
        "DateCreation": {
          "description": "Creation date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Budget": {
          "description": "Budget of the report.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "State": {
          "description": "State of the report : Active, rejected, valideted...\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    InValidation = 50 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            50
          ]
        },
        "User_Id": {
          "description": "Unique identifier of report's owner.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserLastName": {
          "description": "Last name of report's owner.",
          "type": "string",
          "uniqueItems": false
        },
        "UserFirstName": {
          "description": "First name of report's owner.",
          "type": "string",
          "uniqueItems": false
        },
        "UserMail": {
          "description": "Mail of report's owner.",
          "type": "string",
          "uniqueItems": false
        },
        "Manager_Id": {
          "description": "Unique manager identifier of the report's user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Accountant_Id": {
          "description": "Unique accountant identifier of the report's user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "description": "Unique reviwer identifier of the report's user",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "InvoicesCount": {
          "description": "Invoices count related to the report.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Value": {
          "description": "Value of the report.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburse": {
          "description": "Value to reimburse of the report.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueInLocalCurrency": {
          "description": "Value in user local currency of the report.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ValueToReimburseInLocalCurrency": {
          "description": "Value to reimburse in user local currency of the report.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "Start date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "End date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "UserCurrency": {
          "description": "User currency of the report.",
          "type": "string",
          "uniqueItems": false
        },
        "UserLocalCurrency": {
          "description": "User local currency of the report.",
          "type": "string",
          "uniqueItems": false
        },
        "IdShort": {
          "description": "Auto-generated identifier of the report.",
          "type": "string",
          "uniqueItems": false
        },
        "CurrentValidator_Id": {
          "description": "Unique current validator identifier of the report.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "InvoiceAttachedFilesCount": {
          "description": "Expense attached file count relevant to the report.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ReportTags": {
          "description": "List of tags of the report.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ReportResponse"
    },
    "TagResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the tag.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "description": "Name of the tag.",
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "description": "Description of the tag.",
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "description": "Creation date of the tag. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Shows if the tag is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "TagType": {
          "description": "Enum attribute which is the type of the tag : \r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2
          ]
        },
        "DefinitionStr": {
          "description": "Definition of the tag.",
          "type": "string",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Enum attribute which is the use type of the tag : \r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            2,
            4,
            8,
            16,
            32,
            64,
            128
          ]
        }
      },
      "type": "object",
      "format": "TagResponse"
    },
    "UpdateUserResult": {
      "properties": {
        "UserResponse": {
          "$ref": "#/definitions/UserResponse"
        },
        "ResultCode": {
          "description": "Expensya response internal codes: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1, \r\n    InvalidData = 7, \r\n    NotAdmin = 20, \r\n    NotAllowed = 30, \r\n    Failed = 70, \r\n    NothingToDo = 91, \r\n    AlreadyExists = 1006... ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            10,
            11,
            12,
            20,
            30,
            50,
            60,
            70,
            71,
            80,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            303,
            400,
            401,
            404,
            901,
            902,
            903,
            910,
            913,
            1001,
            1004,
            1005,
            1006,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2007,
            2008
          ]
        },
        "Message": {
          "description": "Extra details sent by the server.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UpdateUserResult"
    },
    "UserProject": {
      "properties": {
        "User_Id": {
          "description": "Unique identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ExternalId": {
          "description": "External identifier of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Project_Id": {
          "description": "Unique identifier of the project.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ElementType": {
          "description": "Type of the element.\r\n\r\n    Invoice = 1 \r\n    Mission = 2 \r\n    User = 3 \r\n    UserCollectorConnection = 4 \r\n    Company = 5 \r\n    Partner = 6 \r\n    PartnerUser = 7 \r\n    BackendUser = 8 \r\n    DelegateAccess = 9 \r\n    PartnerContract = 10 \r\n    PartnerBill = 11 \r\n    VirtualCard = 12 \r\n    CompanyConfigurationSettings = 13 \r\n    PartnerConfigurationSettings = 14 \r\n    ExportFormat = 15 \r\n    PartnerExportFormat = 16 \r\n    ImportFormat = 17 \r\n    CompanyOffer = 18 \r\n    CompanyBill = 19 \r\n    CompanyContract = 20 \r\n    Project = 21 \r\n    ProPaymentInstrument = 22 \r\n    FavoritePlaces = 23 \r\n    OrangeApiUser = 24 \r\n    UserProject = 25 \r\n    CustomField = 26 \r\n    Contact = 27 \r\n    Card = 28 \r\n    Rule = 29 \r\n    Tag = 30 \r\n    CustomFieldValue = 31 \r\n    UserCustomFieldValue = 32 \r\n    CompanyIntegrationSettings = 33 \r\n    CompanyIntegration = 34 \r\n    UserBankAccount = 35 \r\n    CompanyBankAccount = 36 \r\n    PaymentInstrument = 37 \r\n    Category = 38 \r\n    Vehicle = 39 \r\n    TagAssignment = 40 \r\n    CompanyContact = 41 \r\n    Validator = 42 \r\n    UserWithValidators = 43 \r\n    CompanySftp = 44 \r\n    CompanyOrder = 45 \r\n    Supplier = 46 \r\n    CustomIkRate = 47 \r\n    DefaultIkRate = 48 \r\n    ExtraSettings = 49 \r\n    SSo = 50 \r\n    CustomIntegration = 51 \r\n    AccountSettings = 52 \r\n    Perdiem = 53 \r\n    MileageConfiguration = 54 \r\n    FieldPosition = 55 \r\n    VirtualPayment = 56 \r\n    LegalStorage = 57 \r\n    MobileConfiguration = 58 \r\n    BICube = 59 \r\n    ExportCustom = 60 \r\n    Domain = 61 \r\n    BiConfiguration = 62 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62
          ]
        },
        "ExtraData": {
          "description": "Additional informations about the project.",
          "type": "string",
          "uniqueItems": false
        },
        "HasBillable": {
          "description": "Shows if the project is billable to client.",
          "type": "boolean",
          "uniqueItems": false
        },
        "StartDate": {
          "description": "Start date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "End date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Show if the project is Active.",
          "type": "boolean",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "description": "Mileage configuration of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the project.",
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "description": "City of the project.",
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserProject"
    },
    "UserProjectResponse": {
      "properties": {
        "UserProject": {
          "$ref": "#/definitions/UserProject"
        },
        "User": {
          "$ref": "#/definitions/UserResponse"
        },
        "Project": {
          "$ref": "#/definitions/ProjectResponse"
        }
      },
      "type": "object",
      "format": "UserProjectResponse"
    },
    "UserResponse": {
      "properties": {
        "Id": {
          "description": "Unique identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LastName": {
          "description": "Last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "description": "First name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "description": "Address of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "description": "Phone Number of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "description": "Mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "MailAlias": {
          "description": "Mail alias of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "description": "Zip code of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "FaxNumber": {
          "description": "Fax number of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "description": "Creation date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CountryCode": {
          "description": "Country code of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "description": "Language of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "description": "Currency of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "description": "Local currency of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "LocalCountry": {
          "description": "Local country of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "CanCreateCategories": {
          "description": "Sows if the user has right to create categories.",
          "type": "boolean",
          "uniqueItems": false
        },
        "Manager_Id": {
          "description": "Unique manager identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "AccountantMail": {
          "description": "Accountant mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "AccountantPayId": {
          "description": "Accountant analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "UserType": {
          "description": "User Type : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32,
            56
          ]
        },
        "UserState": {
          "description": "User State : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "PayId": {
          "description": "Analytacal axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId2": {
          "description": "Second analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId3": {
          "description": "Third analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId4": {
          "description": "Fourth analytical axis of the user",
          "type": "string",
          "uniqueItems": false
        },
        "PayId5": {
          "description": "Fifth analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PayId6": {
          "description": "Sixth analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerFirstName": {
          "description": "Manager first name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerLastName": {
          "description": "Manager last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerMail": {
          "description": "Manager mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerPayId": {
          "description": "Manager analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ManagerUserState": {
          "description": "Manager state of the user : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "Reviewer_Id": {
          "description": "Unique reviwer identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ReviewerFirstName": {
          "description": "Reviwer first name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerLastName": {
          "description": "Reviwer last name of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerMail": {
          "description": "Reviwer mail of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerPayId": {
          "description": "Reviwer analytical axis of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerUserState": {
          "description": "Reviwer state of the user : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "JobTitle": {
          "description": "Job title of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "Vendor": {
          "description": "Vendor of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "description": "Mileage configuration of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "PerDiemConfigName": {
          "description": "Perdiem configuration of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "Roles access of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            8192,
            16384,
            32768,
            65536,
            131072,
            262144,
            524288,
            1048576,
            2097152,
            4194304,
            8388608,
            16777216,
            33554432,
            67108864
          ]
        },
        "ConfigurationSettingsStr": {
          "description": "Additional configurations of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "ConfigurationSettingsReference": {
          "description": "Configuration reference of the user.",
          "type": "string",
          "uniqueItems": false
        },
        "LastLoginDate": {
          "description": "Last login date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "LastSignInDate": {
          "description": "Last signIn date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Validators": {
          "description": "List of validators of the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorResponse"
          },
          "uniqueItems": false
        },
        "UserSimpleTags": {
          "description": "List of simple tags of the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        },
        "UserTags": {
          "description": "List of tags of the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        },
        "RestrictedTags": {
          "description": "Restricted tags with are managed by the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResponse"
          },
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserResponse"
    },
    "ValidatorResponse": {
      "properties": {
        "Mail": {
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "LastName": {
          "type": "string",
          "uniqueItems": false
        },
        "MinimumAmount": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ValidatorResponse"
    },
    "VATResponse": {
      "properties": {
        "Rates": {
          "description": "VAT rates  of the expense.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "decimal"
          },
          "uniqueItems": false
        },
        "Values": {
          "description": "AT values  of the expense.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "decimal"
          },
          "uniqueItems": false
        },
        "VatFreeAmount": {
          "description": "Free amount of the VAT.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "Tips": {
          "description": "Tips of the expense ",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "VATResponse"
    },
    "VehicleResponse": {
      "properties": {
        "Name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "uniqueItems": false
        },
        "DateCreation": {
          "description": "Creation date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CreationYearKm": {
          "description": "Distance already filed outside Expensya in the creation year in Km.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "CreationYearMiles": {
          "description": "Distance already filed outside Expensya in the creation year in mile.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "LastYearDistanceKm": {
          "description": "Distance already filed outside Expensya in the last year in Km.",
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "LastUpdatedYear": {
          "description": "Last updated year of the vehicle.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "VehicleType": {
          "description": "Type of the vehicle : \r\n\r\n    Car = 1 \r\n    Moped = 2 \r\n    Scooter = 3 \r\n    Motocyle = 4 \r\n    Bicycle = 5 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "InternalVehicleType": {
          "description": "Internal type of the vehicle : \r\n\r\n    None = 0 \r\n    Personal = 1 \r\n    Professional = 2 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2
          ]
        },
        "CurrentValidator_Id": {
          "description": "Unique identifier of the current validator of the vehicle.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LastValidatorReminderDate": {
          "description": "Last validator reminder date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Comments": {
          "description": "Comments of the vehicle.",
          "type": "string",
          "uniqueItems": false
        },
        "State": {
          "description": "State of the vehicle : \r\n\r\n    Disabled = 0 \r\n    Active = 1 \r\n    Submitted = 2 \r\n    Approved = 3 \r\n    Rejected = 4 \r\n    All = -1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            -1
          ]
        },
        "ExternalId": {
          "description": "External identifier of the vehicle.",
          "type": "string",
          "uniqueItems": false
        },
        "AdministrativePower": {
          "description": "Administrative power of the vehicle.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "IsActive": {
          "description": "Shows if the vehicle is active or not.",
          "type": "boolean",
          "uniqueItems": false
        },
        "AttachedFilesCount": {
          "description": "Count of the attached files to the vehicle.",
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "CreationType": {
          "description": "Type of the creation of the vehicle : \r\n\r\n    UserCreated = 0 \r\n    DefaultVehicle = 1 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            0,
            1
          ]
        },
        "StartDate": {
          "description": "Start date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "EndDate": {
          "description": "CEnd date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "VehicleResponse"
    },
    "KeyValuePairGuidString": {
      "properties": {
        "Key": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Value": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "KeyValuePairGuidString"
    },
    "KeyValuePairStringString": {
      "properties": {
        "Key": {
          "type": "string",
          "uniqueItems": false
        },
        "Value": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "KeyValuePairStringString"
    },
    "Object": {
      "type": "object",
      "format": "Object"
    },
    "TimeSpan": {
      "properties": {
        "Ticks": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "Days": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Hours": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Milliseconds": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Minutes": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Seconds": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "TotalDays": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "TotalHours": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "TotalMilliseconds": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "TotalMinutes": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "TotalSeconds": {
          "type": "number",
          "format": "double",
          "uniqueItems": false
        },
        "Zero": {
          "$ref": "#/definitions/TimeSpan"
        },
        "MaxValue": {
          "$ref": "#/definitions/TimeSpan"
        },
        "MinValue": {
          "$ref": "#/definitions/TimeSpan"
        },
        "TicksPerMillisecond": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "TicksPerSecond": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "TicksPerMinute": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "TicksPerHour": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "TicksPerDay": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "TimeSpan"
    },
    "TupleStringDecimal": {
      "properties": {
        "Item1": {
          "type": "string",
          "uniqueItems": false
        },
        "Item2": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "TupleStringDecimal"
    },
    "CustomFieldValueInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomFieldValueInput"
      }
    },
    "UpdateCustomFieldValueInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpdateCustomFieldValueInput"
      }
    },
    "ApiExpenseExpenseIdImageGet200ApplicationJsonResponse": {
      "type": "string",
      "format": "stream"
    },
    "AddOrUpdateProjectInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddOrUpdateProjectInput"
      }
    },
    "AddUserProjectInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddUserProjectInput"
      }
    },
    "UpdateUserProjectInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpdateUserProjectInput"
      }
    },
    "AssignTagsInput": {
      "properties": {
        "NewTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOrUpdateTagInput"
          },
          "uniqueItems": false
        },
        "ExistingTagsToAssign": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "ExistingTagsToUnassign": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "ElementsToTag": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "guid"
          },
          "uniqueItems": false
        },
        "ElementsType": {
          "description": "InvoiceAndFK = 0 Report = 1 Category = 2 Project = 3 Company = 4 PartnerUser = 5 BackendUser = 6 InvoiceOnly = 7 FkOnly = 8 Rule = 9 User = 10 CustomFieldValue = 11 SimpleTag = 12 Vehicule = 14 PaymentInstrument = 15 UserBankAccounts = 16 CompanyBankAccounts = 17 VehicleAssignment = 18 Undefined = 255 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AssignTagsInput"
    },
    "AddOrUpdateTagInput": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "DefinitionStr": {
          "type": "string",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "AddLocal = 0 DeleteLocal = 1 Sync = 3 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "AssignTagsInput": {
          "$ref": "#/definitions/AssignTagsInput"
        },
        "TagType": {
          "description": "Tag = 1 SimpleTag = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Invoice = 2 Mileage = 4 Purchase = 8 Subscription = 16 Mission = 32 User = 64 Balance = 128 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "AddOrUpdateTagInput"
    },
    "ExtendedValidator": {
      "properties": {
        "Mail": {
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "LastName": {
          "type": "string",
          "uniqueItems": false
        },
        "FullName": {
          "type": "string",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Validator_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "NextValidator_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "MinimumAmount": {
          "type": "number",
          "format": "decimal",
          "uniqueItems": false
        },
        "ElementType": {
          "description": "Invoice = 1 Mission = 2 User = 3 UserCollectorConnection = 4 Company = 5 Partner = 6 PartnerUser = 7 BackendUser = 8 DelegateAccess = 9 PartnerContract = 10 PartnerBill = 11 VirtualCard = 12 CompanyConfigurationSettings = 13 PartnerConfigurationSettings = 14 ExportFormat = 15 PartnerExportFormat = 16 ImportFormat = 17 CompanyOffer = 18 CompanyBill = 19 CompanyContract = 20 Project = 21 ProPaymentInstrument = 22 FavoritePlaces = 23 OrangeApiUser = 24 UserProject = 25 CustomField = 26 Contact = 27 Card = 28 Rule = 29 Tag = 30 CustomFieldValue = 31 UserCustomFieldValue = 32 CompanyIntegrationSettings = 33 CompanyIntegration = 34 UserBankAccount = 35 CompanyBankAccount = 36 PaymentInstrument = 37 Category = 38 Vehicle = 39 TagAssignment = 40 CompanyContact = 41 Validator = 42 UserWithValidators = 43 CompanySftp = 44 CompanyOrder = 45 Supplier = 46 CustomIkRate = 47 DefaultIkRate = 48 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Element_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SkipConditions": {
          "description": "None = 0 WarningRuleWithInterval = 1 ShouldBeTheLastValidator = 2 WarningRule = 4 EmptyLevel = 8 RefundException = 16 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "ExtendedValidator"
    },
    "UserResult": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LastName": {
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "Address": {
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "Mail": {
          "type": "string",
          "uniqueItems": false
        },
        "MailAlias": {
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "type": "string",
          "uniqueItems": false
        },
        "FaxNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CountryCode": {
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "type": "string",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "LocalCountry": {
          "type": "string",
          "uniqueItems": false
        },
        "CanCreateCategories": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ShemaVersion": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "ExternalUserType": {
          "description": "None = 0 FromBackend = 1 FromPartner = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Manager_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Login_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "AccountantMail": {
          "type": "string",
          "uniqueItems": false
        },
        "AccountantPayId": {
          "type": "string",
          "uniqueItems": false
        },
        "UserType": {
          "description": "None = 0 Employee = 1 Administrator = 2 Accountant = 4 CanRefund = 8 NotDisabledInImport = 16 NotUpdatedInImport = 32 UserTypeToIgnore = 56 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserState": {
          "description": "None = 0 Validated = 1 Active = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsTest": {
          "type": "boolean",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "PayId": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId2": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId3": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId4": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId5": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId6": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerFirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerLastName": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerMail": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerPayId": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerUserState": {
          "description": "None = 0 Validated = 1 Active = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ReviewerFirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerLastName": {
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerMail": {
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerPayId": {
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerUserState": {
          "description": "None = 0 Validated = 1 Active = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "JobTitle": {
          "type": "string",
          "uniqueItems": false
        },
        "UserValidators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedValidator"
          },
          "uniqueItems": false
        },
        "Vendor": {
          "type": "string",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "IKRates_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "PerDiemConfiguration_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "PerDiemConfigName": {
          "type": "string",
          "uniqueItems": false
        },
        "IKRatesReference": {
          "type": "string",
          "uniqueItems": false
        },
        "ConfigurationSettings_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "All = 0 Users = 2 Missions = 4 Invoices = 8 Projects = 16 Rules = 32 Settings = 64 Integrations = 128 SubscriptionAndBills = 256 BiReports = 512 Categories = 1024 Mileage = 2048 ReadOnly = 4096 Vehicles = 8192 SuppliersManagement = 16384 Advances = 32768 VirtualPayment = 65536 Purchases = 131072 CustomFields = 262144 ProPaymentInstruments = 524288 MissionOrders = 1048576 BankAccounts = 2097152 Bookings = 4194304 Contact = 8388608 IntegrationsHistory = 16777216 TechnicalIntegration = 33554432 Reimbursements = 67108864 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "ConfigurationSettingsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ConfigurationSettingsReference": {
          "type": "string",
          "uniqueItems": false
        },
        "LastLoginDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "SessionIdsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "LastSignInDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "uniqueItems": false
        },
        "SimpleTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleTag"
          },
          "uniqueItems": false
        },
        "SimpleTagsNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": false
        },
        "Groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "uniqueItems": false
        },
        "FullName": {
          "type": "string",
          "uniqueItems": false
        },
        "ManagerFullName": {
          "type": "string",
          "uniqueItems": false
        },
        "ReviewerFullName": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserResult"
    },
    "SimpleTag": {
      "properties": {
        "Name": {
          "type": "string",
          "uniqueItems": false
        },
        "Description": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "IsActive": {
          "type": "boolean",
          "uniqueItems": false
        },
        "TagType": {
          "description": "Tag = 1 SimpleTag = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UseType": {
          "description": "Invoice = 2 Mileage = 4 Purchase = 8 Subscription = 16 Mission = 32 User = 64 Balance = 128 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "PartnerOrCompany_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "CreationVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SyncState": {
          "description": "AddLocal = 0 DeleteLocal = 1 Sync = 3 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "SimpleTag"
    },
    "UserAndLogin": {
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Mail": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId2": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId3": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId4": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId5": {
          "type": "string",
          "uniqueItems": false
        },
        "PayId6": {
          "type": "string",
          "uniqueItems": false
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "CanCreateCategories": {
          "type": "boolean",
          "uniqueItems": false
        },
        "ShemaVersion": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "Company_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Currency": {
          "type": "string",
          "uniqueItems": false
        },
        "Manager_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Login_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "UserType": {
          "description": "None = 0 Employee = 1 Administrator = 2 Accountant = 4 CanRefund = 8 NotDisabledInImport = 16 NotUpdatedInImport = 32 UserTypeToIgnore = 56 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserRole": {
          "description": "All = 0 Users = 2 Missions = 4 Invoices = 8 Projects = 16 Rules = 32 Settings = 64 Integrations = 128 SubscriptionAndBills = 256 BiReports = 512 Categories = 1024 Mileage = 2048 ReadOnly = 4096 Vehicles = 8192 SuppliersManagement = 16384 Advances = 32768 VirtualPayment = 65536 Purchases = 131072 CustomFields = 262144 ProPaymentInstruments = 524288 MissionOrders = 1048576 BankAccounts = 2097152 Bookings = 4194304 Contact = 8388608 IntegrationsHistory = 16777216 TechnicalIntegration = 33554432 Reimbursements = 67108864 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "IsTest": {
          "type": "boolean",
          "uniqueItems": false
        },
        "SyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "UserState": {
          "description": "None = 0 Validated = 1 Active = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "ExternalLoginProviderStr": {
          "type": "string",
          "uniqueItems": false
        },
        "InvalidLoginCount": {
          "type": "integer",
          "format": "int32",
          "uniqueItems": false
        },
        "LastInvalidLoginDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "LocalCurrency": {
          "type": "string",
          "uniqueItems": false
        },
        "LocalCountry": {
          "type": "string",
          "uniqueItems": false
        },
        "Vendor": {
          "type": "string",
          "uniqueItems": false
        },
        "MileageConfigurationsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "IKRates_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ConfigurationSettings_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "PerDiemConfiguration_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ConfigSyncVersion": {
          "type": "integer",
          "format": "int64",
          "uniqueItems": false
        },
        "SessionIdsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "ExternalUserType": {
          "description": "None = 0 FromBackend = 1 FromPartner = 2 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "JobTitle": {
          "type": "string",
          "uniqueItems": false
        },
        "AcceptedServiceTerms": {
          "type": "boolean",
          "uniqueItems": false
        },
        "LastLoginDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "LastSignInDate": {
          "type": "string",
          "format": "date-time",
          "uniqueItems": false
        },
        "Address": {
          "type": "string",
          "uniqueItems": false
        },
        "ZipCode": {
          "type": "string",
          "uniqueItems": false
        },
        "PhoneNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "FaxNumber": {
          "type": "string",
          "uniqueItems": false
        },
        "Reviewer_Id": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Updated": {
          "type": "boolean",
          "uniqueItems": false
        },
        "PasswordHash": {
          "type": "string",
          "uniqueItems": false
        },
        "FullName": {
          "type": "string",
          "uniqueItems": false
        },
        "ConfigurationSettingsStr": {
          "type": "string",
          "uniqueItems": false
        },
        "LastName": {
          "type": "string",
          "uniqueItems": false
        },
        "FirstName": {
          "type": "string",
          "uniqueItems": false
        },
        "Language": {
          "type": "string",
          "uniqueItems": false
        },
        "City": {
          "type": "string",
          "uniqueItems": false
        },
        "CountryCode": {
          "type": "string",
          "uniqueItems": false
        },
        "UseGps": {
          "type": "boolean",
          "uniqueItems": false
        },
        "MailAlias": {
          "type": "string",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "UserAndLogin"
    },
    "SignupResponse": {
      "properties": {
        "UserId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "LoginId": {
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "ResultCode": {
          "description": "Success = 0 PartialSuccess = 1 NotPaid = 2 OldAppVersion = 3 InvalidCredentials = 4 AdditionalInformationNeeded = 5 InvalidPinCode = 6 InvalidData = 7 UserEmailExists = 10 CompanyEmailExists = 11 UserEmailAliasExists = 12 NotAdmin = 20 NotAllowed = 30 NotManager = 50 ExceedLimits = 60 Failed = 70 LockedOut = 71 UserDisabled = 80 UserNotValidated = 90 NothingToDo = 91 NotVerifiedInvoice = 92 ClientError = 96 NetworkError = 97 ServiceError = 98 UnknownError = 99 NotValidZipCode = 100 InvalidCoupon = 101 BadRequest = 400 NotFound = 404 WalletNotFound = 901 WalletDisabled = 902 PaymentInstrumentExpired = 903 AccountantExists = 910 AccountantNotExists = 913 PartnerExists = 1001 PartnerNotExists = 1004 NotEnoughLicences = 1005 AlreadyExists = 1006 BnppLimitActiveCardsError = 2000 BnppLimitAmountAccountError = 2001 BnppEndUsageError = 2002 BnppWrongAccountIdError = 2003 BnppWrongCurrencyCodeError = 2004 BnppWrongCertificateOrEndpointError = 2005 MissionShortIdNull = 2007 AlreadyDeleted = 2008 ",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false
        },
        "UserMessage": {
          "type": "string",
          "uniqueItems": false
        },
        "Details": {
          "type": "string",
          "uniqueItems": false
        },
        "IsSuccess": {
          "type": "boolean",
          "uniqueItems": false
        }
      },
      "type": "object",
      "format": "SignupResponse"
    },
    "UpdateUserStateInput": {
      "properties": {
        "UserId": {
          "description": "Unique identifier of the user.",
          "type": "string",
          "format": "guid",
          "uniqueItems": false
        },
        "Operation": {
          "description": "Operation that will be applied to the user.\r\n\r\n    Validate = 2 \r\n    Activate = 3 \r\n    Deactivate = 4 \r\n",
          "type": "integer",
          "format": "enum",
          "uniqueItems": false,
          "enum": [
            2,
            3,
            4
          ]
        }
      },
      "type": "object",
      "format": "UpdateUserStateInput"
    },
    "UpdateUserStateInputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpdateUserStateInput"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Expensya-Token"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}