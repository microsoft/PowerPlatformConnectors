{
  "swagger": "2.0",
  "info": {
    "title": "AssemblyAI",
    "description": "Transcribe and extract data from audio using AssemblyAI's Speech AI.",
    "version": "1.0.0",
    "contact": {
      "name": "Support",
      "email": "support@assemblyai.com",
      "url": "https://www.assemblyai.com/docs/"
    }
  },
  "tags": [
    {
      "name": "transcript",
      "description": "Transcript related operations",
      "externalDocs": {
        "url": "https://www.assemblyai.com/docs/guides/transcribing-an-audio-file"
      }
    },
    {
      "name": "LeMUR",
      "description": "LeMUR related operations",
      "externalDocs": {
        "url": "https://www.assemblyai.com/docs/guides/processing-audio-with-llms-using-lemur"
      }
    },
    {
      "name": "streaming",
      "description": "Streaming Speech-to-Text",
      "externalDocs": {
        "url": "https://www.assemblyai.com/docs/speech-to-text/streaming"
      }
    }
  ],
  "security": [
    {
      "AssemblyAI API Key": []
    }
  ],
  "paths": {
    "/v2/upload": {
      "post": {
        "tags": ["transcript"],
        "summary": "Upload a File",
        "description": "Upload your media file directly to the AssemblyAI API if it isn't accessible via a URL already.",
        "operationId": "UploadFile",
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "file",
            "x-ms-summary": "File Content",
            "x-ms-visibility": "important",
            "required": true,
            "description": "The file to upload.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "consumes": ["text/plain"]
      }
    },
    "/v2/transcript": {
      "post": {
        "tags": ["transcript"],
        "summary": "Transcribe Audio",
        "description": "Create a transcript from an audio or video file that is accessible via a URL.",
        "operationId": "CreateTranscript",
        "responses": {
          "200": {
            "description": "Transcript created and queued for processing",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranscriptParams"
            },
            "x-ms-summary": "Body"
          }
        ]
      },
      "get": {
        "tags": ["transcript"],
        "summary": "List transcripts",
        "operationId": "ListTranscripts",
        "description": "Retrieve a list of transcripts you created.\nTranscripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of transcripts to retrieve",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 200,
            "required": false,
            "x-ms-summary": "Limit"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
            "type": "string",
            "enum": ["queued", "processing", "completed", "error"],
            "required": false,
            "x-ms-summary": "Status"
          },
          {
            "name": "created_on",
            "in": "query",
            "description": "Only get transcripts created on this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-ms-summary": "Created On"
          },
          {
            "name": "before_id",
            "in": "query",
            "description": "Get transcripts that were created before this transcript ID",
            "type": "string",
            "format": "uuid",
            "required": false,
            "x-ms-summary": "Before ID"
          },
          {
            "name": "after_id",
            "in": "query",
            "description": "Get transcripts that were created after this transcript ID",
            "type": "string",
            "format": "uuid",
            "required": false,
            "x-ms-summary": "After ID"
          },
          {
            "name": "throttled_only",
            "in": "query",
            "description": "Only get throttled transcripts, overrides the status filter",
            "type": "boolean",
            "required": false,
            "x-ms-summary": "Throttled Only"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transcripts. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
            "schema": {
              "$ref": "#/definitions/TranscriptList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Transcript",
        "operationId": "GetTranscript",
        "description": "Get the transcript resource. The transcript is ready when the \"status\" is \"completed\".",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The transcript resource",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": ["transcript"],
        "summary": "Delete Transcript",
        "description": "Delete the transcript.\nDeleting does not delete the resource itself, but removes the data from the resource and marks it as deleted.",
        "operationId": "DeleteTranscript",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted transcript response",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/{subtitle_format}": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Subtitles of Transcript",
        "description": "Export your transcript in SRT or VTT format, to be plugged into a video player for subtitles and closed captions.",
        "operationId": "GetSubtitles",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          },
          {
            "name": "subtitle_format",
            "in": "path",
            "description": "Format of the subtitles",
            "required": true,
            "type": "string",
            "enum": ["srt", "vtt"],
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Subtitle Format"
          },
          {
            "name": "chars_per_caption",
            "in": "query",
            "description": "The maximum number of characters per caption",
            "type": "integer",
            "required": false,
            "x-ms-summary": "Number of Characters per Caption"
          }
        ],
        "responses": {
          "200": {
            "description": "The exported captions as text",
            "schema": {
              "type": "string",
              "example": "WEBVTT\n00:12.340 --> 00:16.220\nLast year I showed these two slides said that demonstrate\n00:16.200 --> 00:20.040\nthat the Arctic ice cap which for most of the last 3,000,000 years has been the\n00:20.020 --> 00:25.040\nsize of the lower 48 States has shrunk by 40% but this understates\n"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/sentences": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Sentences of Transcript",
        "operationId": "GetTranscriptSentences",
        "description": "Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Exported sentences",
            "schema": {
              "$ref": "#/definitions/SentencesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/paragraphs": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Paragraphs of Transcript",
        "operationId": "GetTranscriptParagraphs",
        "description": "Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Exported paragraphs",
            "schema": {
              "$ref": "#/definitions/ParagraphsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/word-search": {
      "get": {
        "tags": ["transcript"],
        "summary": "Search Transcript for Words",
        "description": "Search through the transcript for a specific set of keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.",
        "operationId": "WordSearch",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          },
          {
            "name": "words",
            "in": "query",
            "description": "Keywords to search for",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-ms-summary": "Words"
          }
        ],
        "responses": {
          "200": {
            "description": "Word search response",
            "schema": {
              "$ref": "#/definitions/WordSearchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/redacted-audio": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Redacted Audio",
        "description": "Retrieve the redacted audio object containing the status and URL to the redacted audio.",
        "operationId": "GetRedactedAudio",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The redacted audio object containing the status and URL to the redacted audio",
            "schema": {
              "$ref": "#/definitions/RedactedAudioResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/lemur/v3/generate/task": {
      "post": {
        "tags": ["LeMUR"],
        "summary": "Run a Task using LeMUR",
        "description": "Use the LeMUR task endpoint to input your own LLM prompt.",
        "operationId": "LemurTask",
        "responses": {
          "200": {
            "description": "LeMUR task response",
            "schema": {
              "$ref": "#/definitions/LemurTaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LemurTaskParams"
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/lemur/v3/{request_id}": {
      "delete": {
        "tags": ["LeMUR"],
        "summary": "Purge LeMUR Request Data",
        "description": "Delete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.",
        "operationId": "PurgeLemurRequestData",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "description": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "LeMUR Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "LeMUR request data deleted",
            "schema": {
              "$ref": "#/definitions/PurgeLemurRequestDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    }
  },
  "responses": {},
  "definitions": {
    "RedactedAudioResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["status", "redacted_audio_url"],
      "properties": {
        "status": {
          "description": "The status of the redacted audio",
          "x-ms-summary": "Status",
          "type": "string",
          "enum": ["redacted_audio_ready"]
        },
        "redacted_audio_url": {
          "description": "The URL of the redacted audio file",
          "type": "string",
          "x-ms-summary": "Redacted Audio URL"
        }
      },
      "example": {
        "redacted_audio_url": "https://s3.us-west-2.amazonaws.com/api.assembly.ai.usw2/redacted-audio/785efd9e-0e20-45e1-967b-3db17770ed9f.wav?AWSAccessKeyId=ASIAVASQFLPGLUP5JD7Y&Signature=z1r2MOA46esiiAmk%2FreBkL8rl6g%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEPv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHxKoUJdd5P%2Fdy4WlfvRNppQtauTy7OuAb5azR2OIoYSAiEA8iPx4xAx0pbZztT4e7fGnzPS4phvNCnYKflIijUoxDsq%2BwMIMxAEGgwzNDQ4MzkyNDg4NDQiDJxsCgo0cDg789FV0CrYAwPK3CHbRHoNPFiQ%2FO6EdHZ4OSFRcS%2FDvDyHQRNnYNSwG4JB2mUMWEVw808JWTya%2But4wEcmPiUCVJMTvh70cxhILAxP84CBTuWGM%2Fszbj4tn1thjVsqovf9YZmP17OCFa77Bc9%2F9RwtRaABEqJ2eb6%2Bsir7w0MMzhe1z%2F%2B1PUKxicJAZasBv3Ova%2BTY2eNkPZHQ4Njie4X5sh05b%2BrKnz58E7GTQ1sHZQDYHZecwb5fP0B3LR0vuqNtK%2BdpMAxw5H7BinQ4rdccLmsLLMQeVn8jdRDZNEvsdmoeQL0y0qD%2BUcyGMJoAjMT4FnXhBhVxc3bgkVUbHlZMn48FNCYcmzM8UB9wGmSnr6iQoqEaFElfQVbvAzsW7lnlfLROZxMvGXyliobPYPSaYZlVYgHcIxeWuOAXRtEtmL2jbaX4ghCVgJBVO3BBzTgub2jB0KPU6lYZLLM4kf%2B8hKX8iyxSRc6ZVEefTcyruoDppjB028pA9q75hLH1CZwhfLoM%2F3z5f0aFCl05zQnaa10nbcKj0hERELf4FXqS8yWbSutlRcd7Rr9o8jN31QGUscpsuIvl%2FpyJcZmItX8nO%2FF0s1QjrIi11DLYD9YoOh7eVkN8eKKn5w4cHldVI2sw4NCPqgY6pQE%2BM9va2ad1%2BNrXeQ9t8K41lojTN0BFmM8ERD5fF77xcTlW8VdV%2FiJeLLHDvnYYWVKcga9hSROlmsqvMyn3Tmhz7KQbIepSAOKhcHM%2FyUaLfErvCtjXGwo8nsKForL7SKiGkaRCBmwfQtkSVP6m4tGT50YdGxakh54f8uyC55SbkElknRbpl5haiZ%2F82UddFBkdPcM3t0s7vwbEy%2BbilYyetOr6htc%3D&Expires=1698966551",
        "status": "redacted_audio_ready"
      }
    },
    "WordSearchResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID of the transcript",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "total_count": {
          "description": "The total count of all matched instances. For e.g., word 1 matched 2 times, and word 2 matched 3 times, total_count will equal 5.",
          "type": "integer",
          "x-ms-summary": "Total Count of Matches"
        },
        "matches": {
          "description": "The matches of the search",
          "type": "array",
          "items": {
            "x-ms-summary": "Match",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "text": {
                "description": "The matched word",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "count": {
                "description": "The total amount of times the word is in the transcript",
                "type": "integer",
                "x-ms-summary": "Count"
              },
              "timestamps": {
                "description": "An array of timestamps",
                "type": "array",
                "items": {
                  "x-ms-summary": "Timestamp",
                  "description": "An array of timestamps structured as [start_time, end_time] in milliseconds",
                  "type": "array",
                  "items": {
                    "description": "Timestamp in milliseconds",
                    "type": "integer",
                    "x-ms-summary": "Timestamp"
                  },
                  "example": [250, 650]
                },
                "x-ms-summary": "Timestamps"
              },
              "indexes": {
                "description": "An array of all index locations for that word within the words array of the completed transcript",
                "type": "array",
                "items": {
                  "type": "integer",
                  "x-ms-summary": "Index"
                },
                "x-ms-summary": "Indexes"
              }
            },
            "required": ["text", "count", "timestamps", "indexes"],
            "example": {
              "text": "smoke",
              "count": 6,
              "timestamps": [
                [250, 650],
                [49168, 49398],
                [55284, 55594],
                [168888, 169118],
                [215108, 215386],
                [225944, 226170]
              ],
              "indexes": [0, 136, 156, 486, 652, 698]
            }
          },
          "x-ms-summary": "Matches"
        }
      },
      "required": ["id", "total_count", "matches"],
      "example": {
        "id": "d5a3d302-066e-43fb-b63b-8f57baf185db",
        "total_count": 10,
        "matches": [
          {
            "text": "smoke",
            "count": 6,
            "timestamps": [
              [250, 650],
              [49168, 49398],
              [55284, 55594],
              [168888, 169118],
              [215108, 215386],
              [225944, 226170]
            ],
            "indexes": [0, 136, 156, 486, 652, 698]
          },
          {
            "text": "wildfires",
            "count": 4,
            "timestamps": [
              [1668, 2346],
              [33852, 34546],
              [50118, 51110],
              [231356, 232354]
            ],
            "indexes": [4, 90, 140, 716]
          }
        ]
      }
    },
    "TranscriptParams": {
      "description": "The parameters for creating a transcript",
      "type": "object",
      "additionalProperties": false,
      "example": {
        "speech_model": null,
        "language_code": "en_us",
        "audio_url": "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
        "punctuate": true,
        "format_text": true,
        "dual_channel": true,
        "webhook_url": "https://your-webhook-url/path",
        "webhook_auth_header_name": "webhook-secret",
        "webhook_auth_header_value": "webhook-secret-value",
        "auto_highlights": true,
        "audio_start_from": 10,
        "audio_end_at": 280,
        "word_boost": ["aws", "azure", "google cloud"],
        "boost_param": "high",
        "filter_profanity": true,
        "redact_pii": true,
        "redact_pii_audio": true,
        "redact_pii_audio_quality": "mp3",
        "redact_pii_policies": [
          "us_social_security_number",
          "credit_card_number"
        ],
        "redact_pii_sub": "hash",
        "speaker_labels": true,
        "speakers_expected": 2,
        "content_safety": true,
        "iab_categories": true,
        "language_detection": false,
        "custom_spelling": [],
        "disfluencies": false,
        "sentiment_analysis": true,
        "auto_chapters": true,
        "entity_detection": true,
        "speech_threshold": 0.5,
        "summarization": true,
        "summary_model": "informative",
        "summary_type": "bullets",
        "custom_topics": true,
        "topics": []
      },
      "properties": {
        "audio_url": {
          "description": "The URL of the audio or video file to transcribe.",
          "type": "string",
          "x-ms-summary": "Audio URL"
        },
        "language_code": {
          "description": "The language of your audio file. Possible values are found in Supported Languages.\nThe default value is 'en_us'.",
          "x-ms-visibility": "important",
          "type": "string",
          "x-ms-summary": "Language Code"
        },
        "punctuate": {
          "description": "Enable Automatic Punctuation, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Punctuate"
        },
        "format_text": {
          "description": "Enable Text Formatting, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Format Text"
        },
        "dual_channel": {
          "description": "Enable Dual Channel transcription, can be true or false.",
          "type": "boolean",
          "x-ms-summary": "Dual Channel"
        },
        "speech_model": {
          "description": "The speech model to use for the transcription.",
          "x-ms-summary": "Speech Model",
          "type": "string",
          "enum": ["best", "nano", "conformer-2"]
        },
        "webhook_url": {
          "description": "The URL to which AssemblyAI send webhooks upon transcription completion",
          "type": "string",
          "x-ms-summary": "Webhook URL"
        },
        "webhook_auth_header_name": {
          "description": "The header name which should be sent back with webhook calls",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Name"
        },
        "webhook_auth_header_value": {
          "description": "Specify a header name and value to send back with a webhook call for added security",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Value"
        },
        "auto_highlights": {
          "description": "Enable Key Phrases, either true or false",
          "type": "boolean",
          "x-ms-summary": "Key Phrases"
        },
        "audio_start_from": {
          "description": "The point in time, in milliseconds, to begin transcribing in your media file",
          "type": "integer",
          "x-ms-summary": "Audio Start From"
        },
        "audio_end_at": {
          "description": "The point in time, in milliseconds, to stop transcribing in your media file",
          "type": "integer",
          "x-ms-summary": "Audio End At"
        },
        "word_boost": {
          "description": "The list of custom vocabulary to boost transcription probability for",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Word to Boost"
          },
          "x-ms-summary": "Word Boost"
        },
        "boost_param": {
          "description": "The word boost parameter value",
          "x-ms-summary": "Boost Param",
          "type": "string",
          "enum": ["low", "default", "high"]
        },
        "filter_profanity": {
          "description": "Filter profanity from the transcribed text, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Filter Profanity"
        },
        "redact_pii": {
          "description": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Redact PII"
        },
        "redact_pii_audio": {
          "description": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See PII redaction for more details.",
          "type": "boolean",
          "x-ms-summary": "Redact PII Audio"
        },
        "redact_pii_audio_quality": {
          "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See PII redaction for more details.",
          "x-ms-summary": "Redact PII Audio Quality",
          "type": "string",
          "enum": ["mp3", "wav"],
          "example": "mp3"
        },
        "redact_pii_policies": {
          "description": "The list of PII Redaction policies to enable. See PII redaction for more details.",
          "type": "array",
          "items": {
            "x-ms-summary": "PII Policy",
            "type": "string",
            "enum": [
              "medical_process",
              "medical_condition",
              "blood_type",
              "drug",
              "injury",
              "number_sequence",
              "email_address",
              "date_of_birth",
              "phone_number",
              "us_social_security_number",
              "credit_card_number",
              "credit_card_expiration",
              "credit_card_cvv",
              "date",
              "nationality",
              "event",
              "language",
              "location",
              "money_amount",
              "person_name",
              "person_age",
              "organization",
              "political_affiliation",
              "occupation",
              "religion",
              "drivers_license",
              "banking_information"
            ]
          },
          "x-ms-summary": "Redact PII Policies"
        },
        "redact_pii_sub": {
          "description": "The replacement logic for detected PII, can be \"entity_name\" or \"hash\". See PII redaction for more details.",
          "x-ms-summary": "Redact PII Substitution",
          "type": "string",
          "enum": ["entity_name", "hash"]
        },
        "speaker_labels": {
          "description": "Enable Speaker diarization, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Speaker Labels"
        },
        "speakers_expected": {
          "description": "Tells the speaker label model how many speakers it should attempt to identify, up to 10. See Speaker diarization for more details.",
          "type": "integer",
          "x-ms-summary": "Speakers Expected"
        },
        "content_safety": {
          "description": "Enable Content Moderation, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Content Moderation"
        },
        "content_safety_confidence": {
          "description": "The confidence threshold for content moderation. Values must be between 25 and 100.",
          "type": "integer",
          "x-ms-summary": "Content Safety Confidence"
        },
        "iab_categories": {
          "description": "Enable Topic Detection, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Topic Detection"
        },
        "language_detection": {
          "description": "Enable Automatic language detection, either true or false.",
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Language Detection"
        },
        "custom_spelling": {
          "description": "Customize how words are spelled and formatted using to and from values",
          "type": "array",
          "items": {
            "x-ms-summary": "Custom Spelling",
            "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "from": {
                "description": "Words or phrases to replace",
                "type": "array",
                "items": {
                  "description": "Word or phrase to replace",
                  "type": "string",
                  "x-ms-summary": "Word or Phrase"
                },
                "x-ms-summary": "From"
              },
              "to": {
                "description": "Word or phrase to replace with",
                "type": "string",
                "x-ms-summary": "To"
              }
            },
            "required": ["from", "to"],
            "example": {
              "from": ["dicarlo"],
              "to": "Decarlo"
            }
          },
          "x-ms-summary": "Custom Spelling"
        },
        "disfluencies": {
          "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
          "type": "boolean",
          "x-ms-summary": "Disfluencies"
        },
        "sentiment_analysis": {
          "description": "Enable Sentiment Analysis, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Sentiment Analysis"
        },
        "auto_chapters": {
          "description": "Enable Auto Chapters, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Auto Chapters"
        },
        "entity_detection": {
          "description": "Enable Entity Detection, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Entity Detection"
        },
        "speech_threshold": {
          "description": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Speech Threshold"
        },
        "summarization": {
          "description": "Enable Summarization, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Enable Summarization"
        },
        "summary_model": {
          "description": "The model to summarize the transcript",
          "x-ms-summary": "Summary Model",
          "type": "string",
          "enum": ["informative", "conversational", "catchy"]
        },
        "summary_type": {
          "description": "The type of summary",
          "x-ms-summary": "Summary Type",
          "type": "string",
          "enum": [
            "bullets",
            "bullets_verbose",
            "gist",
            "headline",
            "paragraph"
          ]
        },
        "custom_topics": {
          "description": "Enable custom topics, either true or false",
          "type": "boolean",
          "x-ms-summary": "Enable Custom Topics"
        },
        "topics": {
          "description": "The list of custom topics",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Topic"
          },
          "x-ms-summary": "Custom Topics"
        }
      },
      "required": ["audio_url"]
    },
    "Transcript": {
      "description": "A transcript object",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The unique identifier of your transcript",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "ID"
        },
        "language_model": {
          "description": "The language model that was used for the transcript",
          "type": "string",
          "x-ms-summary": "Language Model"
        },
        "acoustic_model": {
          "description": "The acoustic model that was used for the transcript",
          "type": "string",
          "x-ms-summary": "Acoustic Model"
        },
        "status": {
          "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
          "x-ms-summary": "Status",
          "type": "string",
          "enum": ["queued", "processing", "completed", "error"]
        },
        "language_code": {
          "description": "The language of your audio file.\nPossible values are found in Supported Languages.\nThe default value is 'en_us'.",
          "type": "string",
          "x-ms-summary": "Language Code"
        },
        "audio_url": {
          "description": "The URL of the media that was transcribed",
          "type": "string",
          "x-ms-summary": "Audio URL"
        },
        "text": {
          "description": "The textual transcript of your media file",
          "type": "string",
          "x-ms-summary": "Text"
        },
        "words": {
          "description": "An array of temporally-sequential word objects, one for each word in the transcript.\nSee Speech recognition for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Word",
            "type": "object",
            "additionalProperties": false,
            "required": ["confidence", "start", "end", "text"],
            "properties": {
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "example": {
              "text": "Smoke",
              "start": 250,
              "end": 650,
              "confidence": 0.97465,
              "speaker": null
            }
          },
          "x-ms-summary": "Words"
        },
        "utterances": {
          "description": "When dual_channel or speaker_labels is enabled, a list of turn-by-turn utterance objects.\nSee Speaker diarization for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Utterance",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "confidence": {
                "description": "The confidence score for the transcript of this utterance",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "start": {
                "description": "The starting time, in milliseconds, of the utterance in the audio file",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, of the utterance in the audio file",
                "type": "integer",
                "x-ms-summary": "End"
              },
              "text": {
                "description": "The text for this utterance",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "words": {
                "description": "The words in the utterance.",
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  },
                  "example": {
                    "text": "Smoke",
                    "start": 250,
                    "end": 650,
                    "confidence": 0.97465,
                    "speaker": null
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of this utterance, where each speaker is assigned a sequential capital letter - e.g. \"A\" for Speaker A, \"B\" for Speaker B, etc.",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "required": [
              "confidence",
              "start",
              "end",
              "text",
              "words",
              "speaker"
            ],
            "example": {
              "confidence": 0.9359033333333334,
              "end": 26950,
              "speaker": "A",
              "start": 250,
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
              "words": [
                {
                  "text": "Smoke",
                  "start": 250,
                  "end": 650,
                  "confidence": 0.97503,
                  "speaker": "A"
                },
                {
                  "text": "from",
                  "start": 730,
                  "end": 1022,
                  "confidence": 0.99999,
                  "speaker": "A"
                },
                {
                  "text": "hundreds",
                  "start": 1076,
                  "end": 1418,
                  "confidence": 0.99843,
                  "speaker": "A"
                },
                {
                  "text": "of",
                  "start": 1434,
                  "end": 1614,
                  "confidence": 0.85,
                  "speaker": "A"
                },
                {
                  "text": "wildfires",
                  "start": 1652,
                  "end": 2346,
                  "confidence": 0.89657,
                  "speaker": "A"
                },
                {
                  "text": "in",
                  "start": 2378,
                  "end": 2526,
                  "confidence": 0.99994,
                  "speaker": "A"
                },
                {
                  "text": "Canada",
                  "start": 2548,
                  "end": 3130,
                  "confidence": 0.93864,
                  "speaker": "A"
                },
                {
                  "text": "is",
                  "start": 3210,
                  "end": 3454,
                  "confidence": 0.999,
                  "speaker": "A"
                },
                {
                  "text": "triggering",
                  "start": 3492,
                  "end": 3946,
                  "confidence": 0.75366,
                  "speaker": "A"
                },
                {
                  "text": "air",
                  "start": 3978,
                  "end": 4174,
                  "confidence": 1,
                  "speaker": "A"
                },
                {
                  "text": "quality",
                  "start": 4212,
                  "end": 4558,
                  "confidence": 0.87745,
                  "speaker": "A"
                },
                {
                  "text": "alerts",
                  "start": 4644,
                  "end": 5114,
                  "confidence": 0.94739,
                  "speaker": "A"
                },
                {
                  "text": "throughout",
                  "start": 5162,
                  "end": 5466,
                  "confidence": 0.99726,
                  "speaker": "A"
                },
                {
                  "text": "the",
                  "start": 5498,
                  "end": 5694,
                  "confidence": 0.79,
                  "speaker": "A"
                },
                {
                  "text": "US.",
                  "start": 5732,
                  "end": 6382,
                  "confidence": 0.88,
                  "speaker": "A"
                }
              ]
            }
          },
          "x-ms-summary": "Utterances"
        },
        "confidence": {
          "description": "The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)",
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "description": "The duration of this transcript object's media file, in seconds",
          "type": "number",
          "format": "float",
          "x-ms-summary": "Audio Duration"
        },
        "punctuate": {
          "description": "Whether Automatic Punctuation is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Punctuate"
        },
        "format_text": {
          "description": "Whether Text Formatting is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Format Text"
        },
        "dual_channel": {
          "description": "Whether Dual channel transcription was enabled in the transcription request, either true or false",
          "type": "boolean",
          "x-ms-summary": "Dual Channel"
        },
        "speech_model": {
          "description": "The speech model to use for the transcription.",
          "x-ms-summary": "Speech Model",
          "type": "string",
          "enum": ["best", "nano", "conformer-2"]
        },
        "webhook_url": {
          "description": "The URL to which we send webhooks upon transcription completion",
          "type": "string",
          "x-ms-summary": "Webhook URL"
        },
        "webhook_status_code": {
          "description": "The status code we received from your server when delivering your webhook, if a webhook URL was provided",
          "type": "integer",
          "x-ms-summary": "Webhook HTTP Status Code"
        },
        "webhook_auth": {
          "description": "Whether webhook authentication details were provided",
          "type": "boolean",
          "x-ms-summary": "Webhook Auth Enabled"
        },
        "webhook_auth_header_name": {
          "description": "The header name which should be sent back with webhook calls",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Name"
        },
        "speed_boost": {
          "description": "Whether speed boost is enabled",
          "type": "boolean",
          "x-ms-summary": "Speed Boost"
        },
        "auto_highlights": {
          "description": "Whether Key Phrases is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Key Phrases"
        },
        "auto_highlights_result": {
          "description": "An array of results for the Key Phrases model, if it is enabled.\nSee Key phrases for more information.",
          "x-ms-summary": "Key Phrases Result",
          "type": "object",
          "required": ["status", "results"],
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "description": "A temporally-sequential array of Key Phrases",
              "type": "array",
              "items": {
                "x-ms-summary": "Auto Highlight Result",
                "type": "object",
                "additionalProperties": false,
                "required": ["count", "rank", "text", "timestamps"],
                "properties": {
                  "count": {
                    "description": "The total number of times the key phrase appears in the audio file",
                    "type": "integer",
                    "x-ms-summary": "Count"
                  },
                  "rank": {
                    "description": "The total relevancy to the overall audio file of this key phrase - a greater number means more relevant",
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1,
                    "x-ms-summary": "Rank"
                  },
                  "text": {
                    "description": "The text itself of the key phrase",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "timestamps": {
                    "description": "The timestamp of the of the key phrase",
                    "type": "array",
                    "items": {
                      "x-ms-summary": "Timestamp",
                      "description": "Timestamp containing a start and end property in milliseconds",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "start": {
                          "description": "The start time in milliseconds",
                          "type": "integer",
                          "x-ms-summary": "Start"
                        },
                        "end": {
                          "description": "The end time in milliseconds",
                          "type": "integer",
                          "x-ms-summary": "End"
                        }
                      },
                      "required": ["start", "end"],
                      "example": {
                        "start": 3978,
                        "end": 5114
                      }
                    },
                    "x-ms-summary": "Timestamps"
                  }
                },
                "example": {
                  "count": 1,
                  "rank": 0.08,
                  "text": "air quality alerts",
                  "timestamps": [
                    {
                      "start": 3978,
                      "end": 5114
                    }
                  ]
                }
              },
              "x-ms-summary": "Results"
            }
          },
          "example": {
            "status": "success",
            "results": [
              {
                "count": 1,
                "rank": 0.08,
                "text": "air quality alerts",
                "timestamps": [
                  {
                    "start": 3978,
                    "end": 5114
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.08,
                "text": "wide ranging air quality consequences",
                "timestamps": [
                  {
                    "start": 235388,
                    "end": 238694
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.07,
                "text": "more wildfires",
                "timestamps": [
                  {
                    "start": 230972,
                    "end": 232354
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.07,
                "text": "air pollution",
                "timestamps": [
                  {
                    "start": 156004,
                    "end": 156910
                  }
                ]
              },
              {
                "count": 3,
                "rank": 0.07,
                "text": "weather systems",
                "timestamps": [
                  {
                    "start": 47344,
                    "end": 47958
                  },
                  {
                    "start": 205268,
                    "end": 205818
                  },
                  {
                    "start": 211588,
                    "end": 213434
                  }
                ]
              },
              {
                "count": 2,
                "rank": 0.06,
                "text": "high levels",
                "timestamps": [
                  {
                    "start": 121128,
                    "end": 121646
                  },
                  {
                    "start": 155412,
                    "end": 155866
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.06,
                "text": "health conditions",
                "timestamps": [
                  {
                    "start": 152138,
                    "end": 152666
                  }
                ]
              },
              {
                "count": 2,
                "rank": 0.06,
                "text": "Peter de Carlo",
                "timestamps": [
                  {
                    "start": 18948,
                    "end": 19930
                  },
                  {
                    "start": 268298,
                    "end": 269194
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.06,
                "text": "New York City",
                "timestamps": [
                  {
                    "start": 125768,
                    "end": 126274
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.05,
                "text": "respiratory conditions",
                "timestamps": [
                  {
                    "start": 152964,
                    "end": 153786
                  }
                ]
              },
              {
                "count": 3,
                "rank": 0.05,
                "text": "New York",
                "timestamps": [
                  {
                    "start": 125768,
                    "end": 126034
                  },
                  {
                    "start": 171448,
                    "end": 171938
                  },
                  {
                    "start": 176008,
                    "end": 176322
                  }
                ]
              },
              {
                "count": 3,
                "rank": 0.05,
                "text": "climate change",
                "timestamps": [
                  {
                    "start": 229548,
                    "end": 230230
                  },
                  {
                    "start": 244576,
                    "end": 245162
                  },
                  {
                    "start": 263348,
                    "end": 263950
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.05,
                "text": "Johns Hopkins University Varsity",
                "timestamps": [
                  {
                    "start": 23972,
                    "end": 25490
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.05,
                "text": "heart conditions",
                "timestamps": [
                  {
                    "start": 153988,
                    "end": 154506
                  }
                ]
              },
              {
                "count": 1,
                "rank": 0.05,
                "text": "air quality warnings",
                "timestamps": [
                  {
                    "start": 12308,
                    "end": 13434
                  }
                ]
              }
            ]
          }
        },
        "audio_start_from": {
          "description": "The point in time, in milliseconds, in the file at which the transcription was started",
          "type": "integer",
          "x-ms-summary": "Audio Start From"
        },
        "audio_end_at": {
          "description": "The point in time, in milliseconds, in the file at which the transcription was terminated",
          "type": "integer",
          "x-ms-summary": "Audio End At"
        },
        "word_boost": {
          "description": "The list of custom vocabulary to boost transcription probability for",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Boosted Word"
          },
          "x-ms-summary": "Word Boost"
        },
        "boost_param": {
          "description": "The word boost parameter value",
          "type": "string",
          "x-ms-summary": "Boost"
        },
        "filter_profanity": {
          "description": "Whether Profanity Filtering is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Filter Profanity"
        },
        "redact_pii": {
          "description": "Whether PII Redaction is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Redact PII"
        },
        "redact_pii_audio": {
          "description": "Whether a redacted version of the audio file was generated,\neither true or false. See PII redaction for more information.",
          "type": "boolean",
          "x-ms-summary": "Redact PII Audio"
        },
        "redact_pii_audio_quality": {
          "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See PII redaction for more details.",
          "x-ms-summary": "Redact PII Audio Quality",
          "type": "string",
          "enum": ["mp3", "wav"],
          "example": "mp3"
        },
        "redact_pii_policies": {
          "description": "The list of PII Redaction policies that were enabled, if PII Redaction is enabled.\nSee PII redaction for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "PII Policy",
            "type": "string",
            "enum": [
              "medical_process",
              "medical_condition",
              "blood_type",
              "drug",
              "injury",
              "number_sequence",
              "email_address",
              "date_of_birth",
              "phone_number",
              "us_social_security_number",
              "credit_card_number",
              "credit_card_expiration",
              "credit_card_cvv",
              "date",
              "nationality",
              "event",
              "language",
              "location",
              "money_amount",
              "person_name",
              "person_age",
              "organization",
              "political_affiliation",
              "occupation",
              "religion",
              "drivers_license",
              "banking_information"
            ]
          },
          "x-ms-summary": "Redact PII Policies"
        },
        "redact_pii_sub": {
          "description": "The replacement logic for detected PII, can be \"entity_name\" or \"hash\". See PII redaction for more details.",
          "x-ms-summary": "Redact PII Substitution",
          "type": "string",
          "enum": ["entity_name", "hash"]
        },
        "speaker_labels": {
          "description": "Whether Speaker diarization is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Speaker Labels"
        },
        "speakers_expected": {
          "description": "Tell the speaker label model how many speakers it should attempt to identify, up to 10. See Speaker diarization for more details.",
          "type": "integer",
          "x-ms-summary": "Speakers Expected"
        },
        "content_safety": {
          "description": "Whether Content Moderation is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Content Safety"
        },
        "content_safety_labels": {
          "description": "An array of results for the Content Moderation model, if it is enabled.\nSee Content moderation for more information.",
          "x-ms-summary": "Content Safety Labels",
          "type": "object",
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "type": "array",
              "items": {
                "x-ms-summary": "Content Safety Label Result",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "text",
                  "labels",
                  "sentences_idx_start",
                  "sentences_idx_end",
                  "timestamp"
                ],
                "properties": {
                  "text": {
                    "description": "The transcript of the section flagged by the Content Moderation model",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "labels": {
                    "description": "An array of safety labels, one per sensitive topic that was detected in the section",
                    "type": "array",
                    "items": {
                      "x-ms-summary": "Label",
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["label", "confidence", "severity"],
                      "properties": {
                        "label": {
                          "description": "The label of the sensitive topic",
                          "type": "string",
                          "x-ms-summary": "Label"
                        },
                        "confidence": {
                          "description": "The confidence score for the topic being discussed, from 0 to 1",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Confidence"
                        },
                        "severity": {
                          "description": "How severely the topic is discussed in the section, from 0 to 1",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Severity"
                        }
                      },
                      "example": {
                        "label": "disasters",
                        "confidence": 0.8142836093902588,
                        "severity": 0.4093044400215149
                      }
                    },
                    "x-ms-summary": "Labels"
                  },
                  "sentences_idx_start": {
                    "description": "The sentence index at which the section begins",
                    "type": "integer",
                    "x-ms-summary": "Sentence Index Start"
                  },
                  "sentences_idx_end": {
                    "description": "The sentence index at which the section ends",
                    "type": "integer",
                    "x-ms-summary": "Sentence Index End"
                  },
                  "timestamp": {
                    "description": "Timestamp containing a start and end property in milliseconds",
                    "x-ms-summary": "Timestamp",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "start": {
                        "description": "The start time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "Start"
                      },
                      "end": {
                        "description": "The end time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "End"
                      }
                    },
                    "required": ["start", "end"],
                    "example": {
                      "start": 3978,
                      "end": 5114
                    }
                  }
                },
                "example": {
                  "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                  "labels": [
                    {
                      "label": "disasters",
                      "confidence": 0.8142836093902588,
                      "severity": 0.4093044400215149
                    }
                  ],
                  "sentences_idx_start": 0,
                  "sentences_idx_end": 5,
                  "timestamp": {
                    "start": 250,
                    "end": 28840
                  }
                }
              },
              "x-ms-summary": "Results"
            },
            "summary": {
              "description": "A summary of the Content Moderation confidence results for the entire audio file",
              "type": "object",
              "additionalProperties": {
                "description": "A confidence score for the presence of the sensitive topic \"topic\" across the entire audio file",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1
              },
              "x-ms-summary": "Summary"
            },
            "severity_score_summary": {
              "description": "A summary of the Content Moderation severity results for the entire audio file",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SeverityScoreSummary"
              },
              "x-ms-summary": "Severity Score Summary"
            }
          },
          "example": {
            "status": "success",
            "results": [
              {
                "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                "labels": [
                  {
                    "label": "disasters",
                    "confidence": 0.8142836093902588,
                    "severity": 0.4093044400215149
                  }
                ],
                "sentences_idx_start": 0,
                "sentences_idx_end": 5,
                "timestamp": {
                  "start": 250,
                  "end": 28840
                }
              }
            ],
            "summary": {
              "disasters": 0.9940800441842205,
              "health_issues": 0.9216489289040967
            },
            "severity_score_summary": {
              "disasters": {
                "low": 0.5733263024656846,
                "medium": 0.42667369753431533,
                "high": 0
              },
              "health_issues": {
                "low": 0.22863814977924785,
                "medium": 0.45014154926938227,
                "high": 0.32122030095136983
              }
            }
          }
        },
        "iab_categories": {
          "description": "Whether Topic Detection is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Topic Detection"
        },
        "iab_categories_result": {
          "description": "The result of the Topic Detection model, if it is enabled.\nSee Topic Detection for more information.",
          "x-ms-summary": "Topic Detection Result",
          "type": "object",
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "description": "An array of results for the Topic Detection model",
              "type": "array",
              "items": {
                "x-ms-summary": "Topic Detection Result",
                "description": "The result of the topic detection model",
                "type": "object",
                "additionalProperties": false,
                "required": ["text"],
                "properties": {
                  "text": {
                    "description": "The text in the transcript in which a detected topic occurs",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["relevance", "label"],
                      "properties": {
                        "relevance": {
                          "description": "How relevant the detected topic is of a detected topic",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Relevance"
                        },
                        "label": {
                          "description": "The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship",
                          "type": "string",
                          "x-ms-summary": "Label"
                        }
                      },
                      "x-ms-summary": "Label"
                    },
                    "x-ms-summary": "Labels"
                  },
                  "timestamp": {
                    "x-ms-summary": "Timestamp",
                    "description": "Timestamp containing a start and end property in milliseconds",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "start": {
                        "description": "The start time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "Start"
                      },
                      "end": {
                        "description": "The end time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "End"
                      }
                    },
                    "required": ["start", "end"],
                    "example": {
                      "start": 3978,
                      "end": 5114
                    }
                  }
                },
                "example": {
                  "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                  "labels": [
                    {
                      "relevance": 0.988274097442627,
                      "label": "Home&Garden>IndoorEnvironmentalQuality"
                    },
                    {
                      "relevance": 0.5821335911750793,
                      "label": "NewsAndPolitics>Weather"
                    },
                    {
                      "relevance": 0.0042327106930315495,
                      "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth"
                    },
                    {
                      "relevance": 0.0033971222583204508,
                      "label": "NewsAndPolitics>Disasters"
                    },
                    {
                      "relevance": 0.002469958271831274,
                      "label": "BusinessAndFinance>Business>GreenSolutions"
                    },
                    {
                      "relevance": 0.0014376690378412604,
                      "label": "MedicalHealth>DiseasesAndConditions>Cancer"
                    },
                    {
                      "relevance": 0.0014294233405962586,
                      "label": "Science>Environment"
                    },
                    {
                      "relevance": 0.001234519761055708,
                      "label": "Travel>TravelLocations>PolarTravel"
                    },
                    {
                      "relevance": 0.0010231725173071027,
                      "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu"
                    },
                    {
                      "relevance": 0.0007445293595083058,
                      "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry"
                    }
                  ],
                  "timestamp": {
                    "start": 250,
                    "end": 28840
                  }
                }
              },
              "x-ms-summary": "Results"
            },
            "summary": {
              "description": "The overall relevance of topic to the entire audio file",
              "type": "object",
              "additionalProperties": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1
              },
              "x-ms-summary": "Summary"
            }
          },
          "example": {
            "status": "success",
            "results": [
              {
                "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                "labels": [
                  {
                    "relevance": 0.988274097442627,
                    "label": "Home&Garden>IndoorEnvironmentalQuality"
                  },
                  {
                    "relevance": 0.5821335911750793,
                    "label": "NewsAndPolitics>Weather"
                  },
                  {
                    "relevance": 0.0042327106930315495,
                    "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth"
                  },
                  {
                    "relevance": 0.0033971222583204508,
                    "label": "NewsAndPolitics>Disasters"
                  },
                  {
                    "relevance": 0.002469958271831274,
                    "label": "BusinessAndFinance>Business>GreenSolutions"
                  },
                  {
                    "relevance": 0.0014376690378412604,
                    "label": "MedicalHealth>DiseasesAndConditions>Cancer"
                  },
                  {
                    "relevance": 0.0014294233405962586,
                    "label": "Science>Environment"
                  },
                  {
                    "relevance": 0.001234519761055708,
                    "label": "Travel>TravelLocations>PolarTravel"
                  },
                  {
                    "relevance": 0.0010231725173071027,
                    "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu"
                  },
                  {
                    "relevance": 0.0007445293595083058,
                    "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry"
                  }
                ],
                "timestamp": {
                  "start": 250,
                  "end": 28840
                }
              }
            ],
            "summary": {
              "NewsAndPolitics>Weather": 1,
              "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
              "Science>Environment": 0.16117265820503235,
              "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
              "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
              "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
              "NewsAndPolitics>Disasters": 0.05041387677192688,
              "Travel>TravelLocations>PolarTravel": 0.01308488193899393,
              "HealthyLiving": 0.008222488686442375,
              "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
              "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
              "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
              "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
              "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
              "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
              "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
              "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
              "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
              "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
              "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877
            }
          }
        },
        "language_detection": {
          "description": "Whether Automatic language detection is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Language Detection"
        },
        "custom_spelling": {
          "description": "Customize how words are spelled and formatted using to and from values",
          "type": "array",
          "items": {
            "x-ms-summary": "Custom Spelling",
            "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "from": {
                "description": "Words or phrases to replace",
                "type": "array",
                "items": {
                  "description": "Word or phrase to replace",
                  "type": "string",
                  "x-ms-summary": "Word or Phrase"
                },
                "x-ms-summary": "From"
              },
              "to": {
                "description": "Word or phrase to replace with",
                "type": "string",
                "x-ms-summary": "To"
              }
            },
            "required": ["from", "to"],
            "example": {
              "from": ["dicarlo"],
              "to": "Decarlo"
            }
          },
          "x-ms-summary": "Custom Spelling"
        },
        "auto_chapters": {
          "description": "Whether Auto Chapters is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Auto Chapters Enabled"
        },
        "chapters": {
          "description": "An array of temporally sequential chapters for the audio file",
          "type": "array",
          "items": {
            "x-ms-summary": "Chapter",
            "description": "Chapter of the audio file",
            "type": "object",
            "additionalProperties": false,
            "required": ["gist", "headline", "summary", "start", "end"],
            "properties": {
              "gist": {
                "description": "An ultra-short summary (just a few words) of the content spoken in the chapter",
                "type": "string",
                "x-ms-summary": "Gist"
              },
              "headline": {
                "description": "A single sentence summary of the content spoken during the chapter",
                "type": "string",
                "x-ms-summary": "Headline"
              },
              "summary": {
                "description": "A one paragraph summary of the content spoken during the chapter",
                "type": "string",
                "x-ms-summary": "Summary"
              },
              "start": {
                "description": "The starting time, in milliseconds, for the chapter",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The starting time, in milliseconds, for the chapter",
                "type": "integer",
                "x-ms-summary": "End"
              }
            },
            "example": {
              "summary": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.",
              "gist": "Smoggy air quality alerts across US",
              "headline": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
              "start": 250,
              "end": 28840
            }
          },
          "x-ms-summary": "Chapters"
        },
        "summarization": {
          "description": "Whether Summarization is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Summarization Enabled"
        },
        "summary_type": {
          "description": "The type of summary generated, if Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary Type"
        },
        "summary_model": {
          "description": "The Summarization model used to generate the summary,\nif Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary Model"
        },
        "summary": {
          "description": "The generated summary of the media file, if Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary"
        },
        "custom_topics": {
          "description": "Whether custom topics is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Custom Topics Enabled"
        },
        "topics": {
          "description": "The list of custom topics provided if custom topics is enabled",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Topic"
          },
          "x-ms-summary": "Topics"
        },
        "disfluencies": {
          "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
          "type": "boolean",
          "x-ms-summary": "Disfluencies"
        },
        "sentiment_analysis": {
          "description": "Whether Sentiment Analysis is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Sentiment Analysis"
        },
        "sentiment_analysis_results": {
          "description": "An array of results for the Sentiment Analysis model, if it is enabled.\nSee Sentiment analysis for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Sentiment Analysis Result",
            "description": "The result of the sentiment analysis model",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "sentiment", "confidence"],
            "properties": {
              "text": {
                "description": "The transcript of the sentence",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "description": "The starting time, in milliseconds, of the sentence",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, of the sentence",
                "type": "integer",
                "x-ms-summary": "End"
              },
              "sentiment": {
                "description": "The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE",
                "x-ms-summary": "Sentiment",
                "enum": ["POSITIVE", "NEUTRAL", "NEGATIVE"]
              },
              "confidence": {
                "description": "The confidence score for the detected sentiment of the sentence, from 0 to 1",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "example": {
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
              "start": 250,
              "end": 6350,
              "sentiment": "NEGATIVE",
              "confidence": 0.8181032538414001,
              "speaker": null
            }
          },
          "x-ms-summary": "Sentiment Analysis Results"
        },
        "entity_detection": {
          "description": "Whether Entity Detection is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Entity Detection"
        },
        "entities": {
          "description": "An array of results for the Entity Detection model, if it is enabled.\nSee Entity detection for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Entity",
            "description": "A detected entity",
            "type": "object",
            "additionalProperties": false,
            "required": ["entity_type", "text", "start", "end"],
            "properties": {
              "entity_type": {
                "description": "The type of entity for the detected entity",
                "x-ms-summary": "Entity Type",
                "type": "string",
                "enum": [
                  "banking_information",
                  "blood_type",
                  "credit_card_cvv",
                  "credit_card_expiration",
                  "credit_card_number",
                  "date",
                  "date_of_birth",
                  "drivers_license",
                  "drug",
                  "email_address",
                  "event",
                  "injury",
                  "language",
                  "location",
                  "medical_condition",
                  "medical_process",
                  "money_amount",
                  "nationality",
                  "occupation",
                  "organization",
                  "password",
                  "person_age",
                  "person_name",
                  "phone_number",
                  "political_affiliation",
                  "religion",
                  "time",
                  "url",
                  "us_social_security_number"
                ]
              },
              "text": {
                "description": "The text for the detected entity",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "description": "The starting time, in milliseconds, at which the detected entity appears in the audio file",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, for the detected entity in the audio file",
                "type": "integer",
                "x-ms-summary": "End"
              }
            },
            "example": {
              "entity_type": "location",
              "text": "Canada",
              "start": 2548,
              "end": 3130
            }
          },
          "x-ms-summary": "Entities"
        },
        "speech_threshold": {
          "description": "Defaults to null. Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "x-ms-summary": "Speech Threshold"
        },
        "throttled": {
          "description": "True while a request is throttled and false when a request is no longer throttled",
          "type": "boolean",
          "x-ms-summary": "Throttled"
        },
        "error": {
          "description": "Error message of why the transcript failed",
          "type": "string",
          "x-ms-summary": "Error"
        }
      },
      "required": [
        "id",
        "language_model",
        "acoustic_model",
        "status",
        "audio_url",
        "webhook_auth",
        "auto_highlights",
        "redact_pii",
        "summarization"
      ],
      "example": {
        "id": "9ea68fd3-f953-42c1-9742-976c447fb463",
        "speech_model": null,
        "language_model": "assemblyai_default",
        "acoustic_model": "assemblyai_default",
        "language_code": "en_us",
        "status": "completed",
        "audio_url": "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
        "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning. What is it about the conditions right now that have caused this round of wildfires to affect so many people so far away? Well, there's a couple of things. The season has been pretty dry already. And then the fact that we're getting hit in the US. Is because there's a couple of weather systems that are essentially channeling the smoke from those Canadian wildfires through Pennsylvania into the Mid Atlantic and the Northeast and kind of just dropping the smoke there. So what is it in this haze that makes it harmful? And I'm assuming it is harmful. It is. The levels outside right now in Baltimore are considered unhealthy. And most of that is due to what's called particulate matter, which are tiny particles, microscopic smaller than the width of your hair that can get into your lungs and impact your respiratory system, your cardiovascular system, and even your neurological your brain. What makes this particularly harmful? Is it the volume of particulant? Is it something in particular? What is it exactly? Can you just drill down on that a little bit more? Yeah. So the concentration of particulate matter I was looking at some of the monitors that we have was reaching levels of what are, in science, big 150 micrograms per meter cubed, which is more than ten times what the annual average should be and about four times higher than what you're supposed to have on a 24 hours average. And so the concentrations of these particles in the air are just much, much higher than we typically see. And exposure to those high levels can lead to a host of health problems. And who is most vulnerable? I noticed that in New York City, for example, they're canceling outdoor activities. And so here it is in the early days of summer, and they have to keep all the kids inside. So who tends to be vulnerable in a situation like this? It's the youngest. So children, obviously, whose bodies are still developing. The elderly, who are their bodies are more in decline and they're more susceptible to the health impacts of breathing, the poor air quality. And then people who have preexisting health conditions, people with respiratory conditions or heart conditions can be triggered by high levels of air pollution. Could this get worse? That's a good question. In some areas, it's much worse than others. And it just depends on kind of where the smoke is concentrated. I think New York has some of the higher concentrations right now, but that's going to change as that air moves away from the New York area. But over the course of the next few days, we will see different areas being hit at different times with the highest concentrations. I was going to ask you about more fires start burning. I don't expect the concentrations to go up too much higher. I was going to ask you how and you started to answer this, but how much longer could this last? Or forgive me if I'm asking you to speculate, but what do you think? Well, I think the fires are going to burn for a little bit longer, but the key for us in the US. Is the weather system changing. And so right now, it's kind of the weather systems that are pulling that air into our mid Atlantic and Northeast region. As those weather systems change and shift, we'll see that smoke going elsewhere and not impact us in this region as much. And so I think that's going to be the defining factor. And I think the next couple of days we're going to see a shift in that weather pattern and start to push the smoke away from where we are. And finally, with the impacts of climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences or circumstances? I mean, that is one of the predictions for climate change. Looking into the future, the fire season is starting earlier and lasting longer, and we're seeing more frequent fires. So, yeah, this is probably something that we'll be seeing more frequently. This tends to be much more of an issue in the Western US. So the eastern US. Getting hit right now is a little bit new. But yeah, I think with climate change moving forward, this is something that is going to happen more frequently. That's Peter De Carlo, associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Sergeant Carlo, thanks so much for joining us and sharing this expertise with us. Thank you for having me.",
        "words": [
          {
            "text": "Smoke",
            "start": 250,
            "end": 650,
            "confidence": 0.97465,
            "speaker": null
          },
          {
            "text": "from",
            "start": 730,
            "end": 1022,
            "confidence": 0.99999,
            "speaker": null
          },
          {
            "text": "hundreds",
            "start": 1076,
            "end": 1418,
            "confidence": 0.99844,
            "speaker": null
          },
          {
            "text": "of",
            "start": 1434,
            "end": 1614,
            "confidence": 0.84,
            "speaker": null
          },
          {
            "text": "wildfires",
            "start": 1652,
            "end": 2346,
            "confidence": 0.89572,
            "speaker": null
          },
          {
            "text": "in",
            "start": 2378,
            "end": 2526,
            "confidence": 0.99994,
            "speaker": null
          },
          {
            "text": "Canada",
            "start": 2548,
            "end": 3130,
            "confidence": 0.93953,
            "speaker": null
          },
          {
            "text": "is",
            "start": 3210,
            "end": 3454,
            "confidence": 0.999,
            "speaker": null
          },
          {
            "text": "triggering",
            "start": 3492,
            "end": 3946,
            "confidence": 0.74794,
            "speaker": null
          },
          {
            "text": "air",
            "start": 3978,
            "end": 4174,
            "confidence": 1,
            "speaker": null
          },
          {
            "text": "quality",
            "start": 4212,
            "end": 4558,
            "confidence": 0.88077,
            "speaker": null
          },
          {
            "text": "alerts",
            "start": 4644,
            "end": 5114,
            "confidence": 0.94814,
            "speaker": null
          },
          {
            "text": "throughout",
            "start": 5162,
            "end": 5466,
            "confidence": 0.99726,
            "speaker": null
          },
          {
            "text": "the",
            "start": 5498,
            "end": 5694,
            "confidence": 0.79,
            "speaker": null
          },
          {
            "text": "US.",
            "start": 5732,
            "end": 6382,
            "confidence": 0.89,
            "speaker": null
          }
        ],
        "utterances": [
          {
            "confidence": 0.9359033333333334,
            "end": 26950,
            "speaker": "A",
            "start": 250,
            "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
            "words": [
              {
                "text": "Smoke",
                "start": 250,
                "end": 650,
                "confidence": 0.97503,
                "speaker": "A"
              },
              {
                "text": "from",
                "start": 730,
                "end": 1022,
                "confidence": 0.99999,
                "speaker": "A"
              },
              {
                "text": "hundreds",
                "start": 1076,
                "end": 1418,
                "confidence": 0.99843,
                "speaker": "A"
              },
              {
                "text": "of",
                "start": 1434,
                "end": 1614,
                "confidence": 0.85,
                "speaker": "A"
              },
              {
                "text": "wildfires",
                "start": 1652,
                "end": 2346,
                "confidence": 0.89657,
                "speaker": "A"
              },
              {
                "text": "in",
                "start": 2378,
                "end": 2526,
                "confidence": 0.99994,
                "speaker": "A"
              },
              {
                "text": "Canada",
                "start": 2548,
                "end": 3130,
                "confidence": 0.93864,
                "speaker": "A"
              },
              {
                "text": "is",
                "start": 3210,
                "end": 3454,
                "confidence": 0.999,
                "speaker": "A"
              },
              {
                "text": "triggering",
                "start": 3492,
                "end": 3946,
                "confidence": 0.75366,
                "speaker": "A"
              },
              {
                "text": "air",
                "start": 3978,
                "end": 4174,
                "confidence": 1,
                "speaker": "A"
              },
              {
                "text": "quality",
                "start": 4212,
                "end": 4558,
                "confidence": 0.87745,
                "speaker": "A"
              },
              {
                "text": "alerts",
                "start": 4644,
                "end": 5114,
                "confidence": 0.94739,
                "speaker": "A"
              },
              {
                "text": "throughout",
                "start": 5162,
                "end": 5466,
                "confidence": 0.99726,
                "speaker": "A"
              },
              {
                "text": "the",
                "start": 5498,
                "end": 5694,
                "confidence": 0.79,
                "speaker": "A"
              },
              {
                "text": "US.",
                "start": 5732,
                "end": 6382,
                "confidence": 0.88,
                "speaker": "A"
              }
            ]
          }
        ],
        "confidence": 0.9404651451800253,
        "audio_duration": 281,
        "punctuate": true,
        "format_text": true,
        "dual_channel": false,
        "webhook_url": "https://your-webhook-url.tld/path",
        "webhook_status_code": 200,
        "webhook_auth": true,
        "webhook_auth_header_name": "webhook-secret",
        "auto_highlights_result": {
          "status": "success",
          "results": [
            {
              "count": 1,
              "rank": 0.08,
              "text": "air quality alerts",
              "timestamps": [
                {
                  "start": 3978,
                  "end": 5114
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.08,
              "text": "wide ranging air quality consequences",
              "timestamps": [
                {
                  "start": 235388,
                  "end": 238694
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.07,
              "text": "more wildfires",
              "timestamps": [
                {
                  "start": 230972,
                  "end": 232354
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.07,
              "text": "air pollution",
              "timestamps": [
                {
                  "start": 156004,
                  "end": 156910
                }
              ]
            },
            {
              "count": 3,
              "rank": 0.07,
              "text": "weather systems",
              "timestamps": [
                {
                  "start": 47344,
                  "end": 47958
                },
                {
                  "start": 205268,
                  "end": 205818
                },
                {
                  "start": 211588,
                  "end": 213434
                }
              ]
            },
            {
              "count": 2,
              "rank": 0.06,
              "text": "high levels",
              "timestamps": [
                {
                  "start": 121128,
                  "end": 121646
                },
                {
                  "start": 155412,
                  "end": 155866
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.06,
              "text": "health conditions",
              "timestamps": [
                {
                  "start": 152138,
                  "end": 152666
                }
              ]
            },
            {
              "count": 2,
              "rank": 0.06,
              "text": "Peter de Carlo",
              "timestamps": [
                {
                  "start": 18948,
                  "end": 19930
                },
                {
                  "start": 268298,
                  "end": 269194
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.06,
              "text": "New York City",
              "timestamps": [
                {
                  "start": 125768,
                  "end": 126274
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.05,
              "text": "respiratory conditions",
              "timestamps": [
                {
                  "start": 152964,
                  "end": 153786
                }
              ]
            },
            {
              "count": 3,
              "rank": 0.05,
              "text": "New York",
              "timestamps": [
                {
                  "start": 125768,
                  "end": 126034
                },
                {
                  "start": 171448,
                  "end": 171938
                },
                {
                  "start": 176008,
                  "end": 176322
                }
              ]
            },
            {
              "count": 3,
              "rank": 0.05,
              "text": "climate change",
              "timestamps": [
                {
                  "start": 229548,
                  "end": 230230
                },
                {
                  "start": 244576,
                  "end": 245162
                },
                {
                  "start": 263348,
                  "end": 263950
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.05,
              "text": "Johns Hopkins University Varsity",
              "timestamps": [
                {
                  "start": 23972,
                  "end": 25490
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.05,
              "text": "heart conditions",
              "timestamps": [
                {
                  "start": 153988,
                  "end": 154506
                }
              ]
            },
            {
              "count": 1,
              "rank": 0.05,
              "text": "air quality warnings",
              "timestamps": [
                {
                  "start": 12308,
                  "end": 13434
                }
              ]
            }
          ]
        },
        "auto_highlights": true,
        "audio_start_from": 10,
        "audio_end_at": 280,
        "word_boost": ["aws", "azure", "google cloud"],
        "boost_param": "high",
        "filter_profanity": true,
        "redact_pii": true,
        "redact_pii_audio": true,
        "redact_pii_audio_quality": "mp3",
        "redact_pii_policies": [
          "us_social_security_number",
          "credit_card_number"
        ],
        "redact_pii_sub": "hash",
        "speaker_labels": true,
        "content_safety": true,
        "iab_categories": true,
        "content_safety_labels": {
          "status": "success",
          "results": [
            {
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
              "labels": [
                {
                  "label": "disasters",
                  "confidence": 0.8142836093902588,
                  "severity": 0.4093044400215149
                }
              ],
              "sentences_idx_start": 0,
              "sentences_idx_end": 5,
              "timestamp": {
                "start": 250,
                "end": 28840
              }
            }
          ],
          "summary": {
            "disasters": 0.9940800441842205,
            "health_issues": 0.9216489289040967
          },
          "severity_score_summary": {
            "disasters": {
              "low": 0.5733263024656846,
              "medium": 0.42667369753431533,
              "high": 0
            },
            "health_issues": {
              "low": 0.22863814977924785,
              "medium": 0.45014154926938227,
              "high": 0.32122030095136983
            }
          }
        },
        "iab_categories_result": {
          "status": "success",
          "results": [
            {
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
              "labels": [
                {
                  "relevance": 0.988274097442627,
                  "label": "Home&Garden>IndoorEnvironmentalQuality"
                },
                {
                  "relevance": 0.5821335911750793,
                  "label": "NewsAndPolitics>Weather"
                },
                {
                  "relevance": 0.0042327106930315495,
                  "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth"
                },
                {
                  "relevance": 0.0033971222583204508,
                  "label": "NewsAndPolitics>Disasters"
                },
                {
                  "relevance": 0.002469958271831274,
                  "label": "BusinessAndFinance>Business>GreenSolutions"
                },
                {
                  "relevance": 0.0014376690378412604,
                  "label": "MedicalHealth>DiseasesAndConditions>Cancer"
                },
                {
                  "relevance": 0.0014294233405962586,
                  "label": "Science>Environment"
                },
                {
                  "relevance": 0.001234519761055708,
                  "label": "Travel>TravelLocations>PolarTravel"
                },
                {
                  "relevance": 0.0010231725173071027,
                  "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu"
                },
                {
                  "relevance": 0.0007445293595083058,
                  "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry"
                }
              ],
              "timestamp": {
                "start": 250,
                "end": 28840
              }
            }
          ],
          "summary": {
            "NewsAndPolitics>Weather": 1,
            "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
            "Science>Environment": 0.16117265820503235,
            "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
            "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
            "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
            "NewsAndPolitics>Disasters": 0.05041387677192688,
            "Travel>TravelLocations>PolarTravel": 0.01308488193899393,
            "HealthyLiving": 0.008222488686442375,
            "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
            "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
            "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
            "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
            "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
            "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
            "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
            "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
            "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
            "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
            "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877
          }
        },
        "language_detection": false,
        "custom_spelling": null,
        "throttled": null,
        "auto_chapters": true,
        "summarization": true,
        "summary_type": "bullets",
        "summary_model": "informative",
        "custom_topics": true,
        "topics": [],
        "speech_threshold": 0.5,
        "disfluencies": false,
        "sentiment_analysis": true,
        "chapters": [
          {
            "summary": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.",
            "gist": "Smoggy air quality alerts across US",
            "headline": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
            "start": 250,
            "end": 28840
          },
          {
            "summary": "Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?",
            "gist": "What is it about the conditions right now that have caused this round",
            "headline": "High particulate matter in wildfire smoke can lead to serious health problems",
            "start": 29610,
            "end": 280340
          }
        ],
        "sentiment_analysis_results": null,
        "entity_detection": true,
        "entities": [
          {
            "entity_type": "location",
            "text": "Canada",
            "start": 2548,
            "end": 3130
          },
          {
            "entity_type": "location",
            "text": "the US",
            "start": 5498,
            "end": 6382
          },
          {
            "entity_type": "location",
            "text": "Maine",
            "start": 7492,
            "end": 7914
          },
          {
            "entity_type": "location",
            "text": "Maryland",
            "start": 8212,
            "end": 8634
          },
          {
            "entity_type": "location",
            "text": "Minnesota",
            "start": 8932,
            "end": 9578
          },
          {
            "entity_type": "person_name",
            "text": "Peter de Carlo",
            "start": 18948,
            "end": 19930
          },
          {
            "entity_type": "occupation",
            "text": "associate professor",
            "start": 20292,
            "end": 21194
          },
          {
            "entity_type": "organization",
            "text": "Department of Environmental Health and Engineering",
            "start": 21508,
            "end": 23706
          },
          {
            "entity_type": "organization",
            "text": "Johns Hopkins University Varsity",
            "start": 23972,
            "end": 25490
          },
          {
            "entity_type": "occupation",
            "text": "professor",
            "start": 26076,
            "end": 26950
          },
          {
            "entity_type": "location",
            "text": "the US",
            "start": 45184,
            "end": 45898
          },
          {
            "entity_type": "nationality",
            "text": "Canadian",
            "start": 49728,
            "end": 50086
          }
        ],
        "summary": "- Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.\\n- Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?",
        "speakers_expected": 2
      }
    },
    "SeverityScoreSummary": {
      "type": "object",
      "required": ["low", "medium", "high"],
      "properties": {
        "low": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Low"
        },
        "medium": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Medium"
        },
        "high": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "High"
        }
      },
      "example": {
        "low": 0.5733263024656846,
        "medium": 0.42667369753431533,
        "high": 0
      }
    },
    "SentencesResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "confidence", "audio_duration", "sentences"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "type": "number",
          "x-ms-summary": "Audio Duration"
        },
        "sentences": {
          "type": "array",
          "items": {
            "x-ms-summary": "Sentence",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "confidence", "words"],
            "properties": {
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "words": {
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  },
                  "example": {
                    "text": "Smoke",
                    "start": 250,
                    "end": 650,
                    "confidence": 0.97465,
                    "speaker": null
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "example": {
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
              "start": 250,
              "end": 6350,
              "confidence": 0.72412,
              "words": [
                {
                  "text": "Smoke",
                  "start": 250,
                  "end": 650,
                  "confidence": 0.72412,
                  "speaker": null
                },
                {
                  "text": "from",
                  "start": 730,
                  "end": 1022,
                  "confidence": 0.99996,
                  "speaker": null
                },
                {
                  "text": "hundreds",
                  "start": 1076,
                  "end": 1466,
                  "confidence": 0.99992,
                  "speaker": null
                },
                {
                  "text": "of",
                  "start": 1498,
                  "end": 1646,
                  "confidence": 1,
                  "speaker": null
                }
              ],
              "speaker": null
            }
          },
          "x-ms-summary": "Sentences"
        }
      },
      "example": {
        "sentences": [
          {
            "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
            "start": 250,
            "end": 6350,
            "confidence": 0.72412,
            "words": [
              {
                "text": "Smoke",
                "start": 250,
                "end": 650,
                "confidence": 0.72412,
                "speaker": null
              },
              {
                "text": "from",
                "start": 730,
                "end": 1022,
                "confidence": 0.99996,
                "speaker": null
              },
              {
                "text": "hundreds",
                "start": 1076,
                "end": 1466,
                "confidence": 0.99992,
                "speaker": null
              },
              {
                "text": "of",
                "start": 1498,
                "end": 1646,
                "confidence": 1,
                "speaker": null
              }
            ],
            "speaker": null
          },
          {
            "text": "Skylines from Maine to Maryland to Minnesota are gray and smoggy.",
            "start": 6500,
            "end": 11050,
            "confidence": 0.99819,
            "words": [
              {
                "text": "Skylines",
                "start": 6500,
                "end": 7306,
                "confidence": 0.99819,
                "speaker": null
              },
              {
                "text": "from",
                "start": 7338,
                "end": 7534,
                "confidence": 0.99987,
                "speaker": null
              },
              {
                "text": "Maine",
                "start": 7572,
                "end": 7962,
                "confidence": 0.9972,
                "speaker": null
              },
              {
                "text": "to",
                "start": 8026,
                "end": 8206,
                "confidence": 1,
                "speaker": null
              },
              {
                "text": "Maryland",
                "start": 8228,
                "end": 8650,
                "confidence": 0.5192,
                "speaker": null
              },
              {
                "text": "to",
                "start": 8730,
                "end": 8926,
                "confidence": 1,
                "speaker": null
              }
            ],
            "speaker": null
          }
        ],
        "id": "d5a3d302-066e-43fb-b63b-8f57baf185db",
        "confidence": 0.9579390654205628,
        "audio_duration": 281
      }
    },
    "ParagraphsResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "confidence", "audio_duration", "paragraphs"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "type": "number",
          "x-ms-summary": "Audio Duration"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "x-ms-summary": "Paragraph",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "confidence", "words"],
            "properties": {
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "words": {
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  },
                  "example": {
                    "text": "Smoke",
                    "start": 250,
                    "end": 650,
                    "confidence": 0.97465,
                    "speaker": null
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "example": {
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter Decarlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Good morning, professor.",
              "start": 250,
              "end": 26950,
              "confidence": 0.73033,
              "words": [
                {
                  "text": "Smoke",
                  "start": 250,
                  "end": 650,
                  "confidence": 0.73033,
                  "speaker": null
                },
                {
                  "text": "from",
                  "start": 730,
                  "end": 1022,
                  "confidence": 1,
                  "speaker": null
                },
                {
                  "text": "hundreds",
                  "start": 1076,
                  "end": 1466,
                  "confidence": 0.99992,
                  "speaker": null
                },
                {
                  "text": "of",
                  "start": 1498,
                  "end": 1646,
                  "confidence": 1,
                  "speaker": null
                }
              ]
            }
          },
          "x-ms-summary": "Paragraphs"
        }
      },
      "example": {
        "paragraphs": [
          {
            "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter Decarlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Good morning, professor.",
            "start": 250,
            "end": 26950,
            "confidence": 0.73033,
            "words": [
              {
                "text": "Smoke",
                "start": 250,
                "end": 650,
                "confidence": 0.73033,
                "speaker": null
              },
              {
                "text": "from",
                "start": 730,
                "end": 1022,
                "confidence": 1,
                "speaker": null
              },
              {
                "text": "hundreds",
                "start": 1076,
                "end": 1466,
                "confidence": 0.99992,
                "speaker": null
              },
              {
                "text": "of",
                "start": 1498,
                "end": 1646,
                "confidence": 1,
                "speaker": null
              }
            ]
          },
          {
            "text": "Good morning. So what is it about the conditions right now that have caused this round of wildfires to affect so many people so far away? Well, there's a couple of things. The season has been pretty dry already, and then the fact that we're getting hit in the US. Is because there's a couple of weather systems that are essentially channeling the smoke from those Canadian wildfires through Pennsylvania into the Mid Atlantic and the Northeast and kind of just dropping the smoke there.",
            "start": 27850,
            "end": 56190,
            "confidence": 0.99667,
            "words": [
              {
                "text": "Good",
                "start": 27850,
                "end": 28262,
                "confidence": 0.99667,
                "speaker": null
              },
              {
                "text": "morning.",
                "start": 28316,
                "end": 28920,
                "confidence": 0.99742,
                "speaker": null
              },
              {
                "text": "So",
                "start": 29290,
                "end": 29702,
                "confidence": 0.94736,
                "speaker": null
              }
            ]
          }
        ],
        "id": "d5a3d302-066e-43fb-b63b-8f57baf185db",
        "confidence": 0.9578730257009361,
        "audio_duration": 281
      }
    },
    "TranscriptList": {
      "description": "A list of transcripts. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
      "type": "object",
      "additionalProperties": false,
      "required": ["page_details", "transcripts"],
      "properties": {
        "page_details": {
          "x-ms-summary": "Page Details",
          "description": "Details of the transcript page. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
          "type": "object",
          "additionalProperties": false,
          "required": ["limit", "result_count", "current_url"],
          "properties": {
            "limit": {
              "description": "The number of results this page is limited to",
              "type": "integer",
              "x-ms-summary": "Limit"
            },
            "result_count": {
              "description": "The actual number of results in the page",
              "type": "integer",
              "x-ms-summary": "Result Count"
            },
            "current_url": {
              "description": "The URL used to retrieve the current page of transcripts",
              "type": "string",
              "x-ms-summary": "Current URL"
            },
            "prev_url": {
              "description": "The URL to the next page of transcripts. The previous URL always points to a page with older transcripts.",
              "type": "string",
              "x-ms-summary": "Previous URL"
            },
            "next_url": {
              "description": "The URL to the next page of transcripts. The next URL always points to a page with newer transcripts.",
              "type": "string",
              "x-ms-summary": "Next URL"
            }
          },
          "example": {
            "limit": 10,
            "result_count": 10,
            "current_url": "https://api.assemblyai.com/v2/transcript?limit=10",
            "prev_url": "https://api.assemblyai.com/v2/transcript?limit=10&before_id=62npeahu2b-a8ea-4112-854c-69542c20d90c",
            "next_url": "https://api.assemblyai.com/v2/transcript?limit=10&after_id=62nfw3mlar-01ad-4631-92f6-629929496eed"
          }
        },
        "transcripts": {
          "type": "array",
          "items": {
            "x-ms-summary": "Transcript List Item",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "resource_url",
              "status",
              "created",
              "audio_url"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "x-ms-summary": "ID"
              },
              "resource_url": {
                "type": "string",
                "x-ms-summary": "Resource URL"
              },
              "status": {
                "x-ms-summary": "Status",
                "type": "string",
                "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
                "enum": ["queued", "processing", "completed", "error"]
              },
              "created": {
                "type": "string",
                "pattern": "^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$",
                "x-ms-summary": "Created"
              },
              "completed": {
                "type": "string",
                "pattern": "^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$",
                "x-ms-summary": "Completed"
              },
              "audio_url": {
                "type": "string",
                "x-ms-summary": "Audio URL"
              },
              "error": {
                "description": "Error message of why the transcript failed",
                "type": "string",
                "x-ms-summary": "Error"
              }
            },
            "example": {
              "id": "9ea68fd3-f953-42c1-9742-976c447fb463",
              "resource_url": "https://api.assemblyai.com/v2/transcript/9ea68fd3-f953-42c1-9742-976c447fb463",
              "status": "completed",
              "created": "2023-11-02T21:49:25.586965",
              "completed": "2023-11-02T21:49:25.586965",
              "audio_url": "https://github.com/AssemblyAI-Examples/audio-examples/raw/main/20230607_me_canadian_wildfires.mp3",
              "error": null
            }
          },
          "x-ms-summary": "Transcripts"
        }
      },
      "example": {
        "page_details": {
          "limit": 3,
          "result_count": 3,
          "current_url": "https://api.assemblyai.com/v2/transcript?limit=3",
          "prev_url": "https://api.assemblyai.com/v2/transcript?limit=3&before_id=28a73d01-98db-41dd-9e98-2533ba0af117",
          "next_url": "https://api.assemblyai.com/v2/transcript?limit=3&after_id=b33f4691-85b7-4f31-be12-a87cef1c1229"
        },
        "transcripts": [
          {
            "id": "b33f4691-85b7-4f31-be12-a87cef1c1229",
            "resource_url": "https://api.assemblyai.com/v2/transcript/b33f4691-85b7-4f31-be12-a87cef1c1229",
            "status": "completed",
            "created": "2024-03-11T21:29:59.936851",
            "completed": "2024-03-11T21:30:07.314223",
            "audio_url": "http://deleted_by_user",
            "error": null
          },
          {
            "id": "ce522f10-d204-42e8-a838-6b95098145cc",
            "resource_url": "https://api.assemblyai.com/v2/transcript/ce522f10-d204-42e8-a838-6b95098145cc",
            "status": "error",
            "created": "2024-03-11T21:23:59.979420",
            "completed": null,
            "audio_url": "https://storage.googleapis.com/client-docs-samples/nbc.mp3",
            "error": "Download error, unable to download https://storage.googleapis.com/client-docs-samples/nbc.mp3. Please make sure the file exists and is accessible from the internet."
          },
          {
            "id": "28a73d01-98db-41dd-9e98-2533ba0af117",
            "resource_url": "https://api.assemblyai.com/v2/transcript/28a73d01-98db-41dd-9e98-2533ba0af117",
            "status": "completed",
            "created": "2024-03-11T21:12:57.372215",
            "completed": "2024-03-11T21:13:03.267020",
            "audio_url": "https://storage.googleapis.com/aai-docs-samples/nbc.mp3",
            "error": null
          }
        ]
      }
    },
    "UploadedFile": {
      "type": "object",
      "additionalProperties": false,
      "required": ["upload_url"],
      "properties": {
        "upload_url": {
          "description": "A URL that points to your audio file, accessible only by AssemblyAI's servers",
          "type": "string",
          "x-ms-summary": "Uploaded File URL"
        }
      },
      "example": {
        "upload_url": "https://cdn.assemblyai.com/upload/f756988d-47e2-4ca3-96ce-04bb168f8f2a"
      }
    },
    "PurgeLemurRequestDataResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "request_id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the deletion request of the LeMUR request",
          "x-ms-summary": "Purge Request ID"
        },
        "request_id_to_purge": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the LeMUR request to purge the data for",
          "x-ms-summary": "LeMUR Request ID to Purge"
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the request data was deleted",
          "x-ms-summary": "Deleted"
        }
      },
      "required": ["request_id", "request_id_to_purge", "deleted"],
      "example": {
        "request_id": "914fe7e4-f10a-4364-8946-34614c2873f6",
        "request_id_to_purge": "b7eb03ec-1650-4181-949b-75d9de317de1",
        "deleted": true
      }
    },
    "LemurTaskResponse": {
      "type": "object",
      "example": {
        "request_id": "5e1b27c2-691f-4414-8bc5-f14678442f9e",
        "response": "Based on the transcript, the following locations were mentioned as being affected by wildfire smoke from Canada:\n\n- Maine\n- Maryland\n- Minnesota\n- Mid Atlantic region\n- Northeast region\n- New York City\n- Baltimore\n"
      },
      "properties": {
        "response": {
          "description": "The response generated by LeMUR.",
          "type": "string",
          "x-ms-summary": "Response"
        },
        "request_id": {
          "description": "The ID of the LeMUR request",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "LeMUR Request ID"
        }
      },
      "required": ["response", "request_id"]
    },
    "LemurTaskParams": {
      "type": "object",
      "example": {
        "transcript_ids": ["64nygnr62k-405c-4ae8-8a6b-d90b40ff3cce"],
        "prompt": "List all the locations affected by wildfires.",
        "context": "This is an interview about wildfires.",
        "final_model": "default",
        "temperature": 0,
        "max_output_size": 3000
      },
      "properties": {
        "prompt": {
          "description": "Your text to prompt the model to produce a desired output, including any context you want to pass into the model.",
          "type": "string",
          "x-ms-summary": "Prompt"
        },
        "transcript_ids": {
          "description": "A list of completed transcripts with text. Up to a maximum of 100 files or 100 hours, whichever is lower.\nUse either transcript_ids or input_text as input into LeMUR.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Transcript ID"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Transcript IDs"
        },
        "input_text": {
          "description": "Custom formatted transcript data. Maximum size is the context limit of the selected model, which defaults to 100000.\nUse either transcript_ids or input_text as input into LeMUR.",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Input Text"
        },
        "context": {
          "description": "Context to provide the model. This can be a string or a free-form JSON value.",
          "x-ms-visibility": "important",
          "type": "string",
          "x-ms-summary": "Context"
        },
        "final_model": {
          "description": "The model that is used for the final prompt after compression is performed.\nDefaults to \"default\".",
          "x-ms-visibility": "important",
          "type": "string",
          "x-ms-summary": "Final Model"
        },
        "max_output_size": {
          "description": "Max output size in tokens, up to 4000",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Max Output Size"
        },
        "temperature": {
          "description": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1,
          "x-ms-visibility": "important",
          "x-ms-summary": "Temperature"
        }
      },
      "required": ["prompt"]
    },
    "Error": {
      "type": "object",
      "additionalProperties": false,
      "required": ["error"],
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string",
          "x-ms-summary": "Error Message"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status"
        }
      },
      "example": {
        "error": "format_text must be a Boolean"
      }
    }
  },
  "securityDefinitions": {
    "AssemblyAI API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "host": "api.assemblyai.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "parameters": {},
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.assemblyai.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.assemblyai.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}
