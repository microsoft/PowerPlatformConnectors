{
  "swagger": "2.0",
  "info": {
    "title": "AssemblyAI",
    "description": "Transcribe and extract data from audio using AssemblyAI's Speech AI.",
    "version": "1.1.0",
    "termsOfService": "https://www.assemblyai.com/legal/terms-of-service",
    "contact": {
      "name": "Support",
      "email": "support@assemblyai.com",
      "url": "https://www.assemblyai.com/docs/"
    }
  },
  "tags": [
    {
      "name": "transcript",
      "description": "Transcript related operations"
    },
    {
      "name": "LeMUR",
      "description": "LeMUR related operations"
    },
    {
      "name": "streaming",
      "description": "Streaming Speech-to-Text"
    }
  ],
  "security": [
    {
      "AssemblyAI API Key": []
    }
  ],
  "paths": {
    "/v2/upload": {
      "post": {
        "tags": ["transcript"],
        "summary": "Upload a Media File",
        "description": "Upload a media file to AssemblyAI's servers.",
        "operationId": "UploadFile",
        "responses": {
          "200": {
            "description": "Media file uploaded successfully",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "in": "body",
            "name": "file",
            "x-ms-summary": "File Content",
            "x-ms-visibility": "important",
            "required": true,
            "description": "The file to upload.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "consumes": ["text/plain"]
      }
    },
    "/v2/transcript": {
      "post": {
        "tags": ["transcript"],
        "summary": "Transcribe Audio",
        "description": "Create a transcript from a media file that is accessible via a URL.",
        "operationId": "CreateTranscript",
        "responses": {
          "200": {
            "description": "Transcript created and queued for processing",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranscriptParams"
            },
            "x-ms-summary": "Body"
          }
        ]
      },
      "get": {
        "tags": ["transcript"],
        "summary": "List Transcripts",
        "operationId": "ListTranscripts",
        "description": "Retrieve a list of transcripts you created.\nTranscripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of transcripts to retrieve",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 200,
            "required": false,
            "x-ms-summary": "Limit"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
            "type": "string",
            "enum": ["queued", "processing", "completed", "error"],
            "required": false,
            "x-ms-summary": "Status"
          },
          {
            "name": "created_on",
            "in": "query",
            "description": "Only get transcripts created on this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-ms-summary": "Created On"
          },
          {
            "name": "before_id",
            "in": "query",
            "description": "Get transcripts that were created before this transcript ID",
            "type": "string",
            "format": "uuid",
            "required": false,
            "x-ms-summary": "Before ID"
          },
          {
            "name": "after_id",
            "in": "query",
            "description": "Get transcripts that were created after this transcript ID",
            "type": "string",
            "format": "uuid",
            "required": false,
            "x-ms-summary": "After ID"
          },
          {
            "name": "throttled_only",
            "in": "query",
            "description": "Only get throttled transcripts, overrides the status filter",
            "type": "boolean",
            "required": false,
            "x-ms-summary": "Throttled Only"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transcripts. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
            "schema": {
              "$ref": "#/definitions/TranscriptList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Transcript",
        "operationId": "GetTranscript",
        "description": "Get the transcript resource. The transcript is ready when the \"status\" is \"completed\".",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The transcript resource",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": ["transcript"],
        "summary": "Delete Transcript",
        "description": "Delete the transcript.\nDeleting does not delete the resource itself, but removes the data from the resource and marks it as deleted.",
        "operationId": "DeleteTranscript",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted transcript response",
            "schema": {
              "$ref": "#/definitions/Transcript"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/{subtitle_format}": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Subtitles for Transcript",
        "description": "Export your transcript in SRT or VTT format to use with a video player for subtitles and closed captions.",
        "operationId": "GetSubtitles",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          },
          {
            "name": "subtitle_format",
            "in": "path",
            "description": "Format of the subtitles",
            "required": true,
            "type": "string",
            "enum": ["srt", "vtt"],
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Subtitle Format"
          },
          {
            "name": "chars_per_caption",
            "in": "query",
            "description": "The maximum number of characters per caption",
            "type": "integer",
            "required": false,
            "x-ms-summary": "Number of Characters per Caption"
          }
        ],
        "responses": {
          "200": {
            "description": "The exported captions as text",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/sentences": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Sentences in Transcript",
        "operationId": "GetTranscriptSentences",
        "description": "Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Exported sentences",
            "schema": {
              "$ref": "#/definitions/SentencesResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/paragraphs": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Paragraphs in Transcript",
        "operationId": "GetTranscriptParagraphs",
        "description": "Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Exported paragraphs",
            "schema": {
              "$ref": "#/definitions/ParagraphsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/word-search": {
      "get": {
        "tags": ["transcript"],
        "summary": "Search Words in Transcript",
        "description": "Search through the transcript for keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.",
        "operationId": "WordSearch",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          },
          {
            "name": "words",
            "in": "query",
            "description": "Keywords to search for",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "x-ms-summary": ""
            },
            "collectionFormat": "csv",
            "x-ms-summary": "Words"
          }
        ],
        "responses": {
          "200": {
            "description": "Word search response",
            "schema": {
              "$ref": "#/definitions/WordSearchResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/v2/transcript/{transcript_id}/redacted-audio": {
      "get": {
        "tags": ["transcript"],
        "summary": "Get Redacted Audio",
        "description": "Retrieve the redacted audio object containing the status and URL to the redacted audio.",
        "operationId": "GetRedactedAudio",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "description": "ID of the transcript",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Transcript ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The redacted audio object containing the status and URL to the redacted audio",
            "schema": {
              "$ref": "#/definitions/RedactedAudioResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    },
    "/lemur/v3/generate/task": {
      "post": {
        "tags": ["LeMUR"],
        "summary": "Run a Task Using LeMUR",
        "description": "Use the LeMUR task endpoint to input your own LLM prompt.",
        "operationId": "LemurTask",
        "responses": {
          "200": {
            "description": "LeMUR task response",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Maximum number of allowed requests in a 60 second window.",
                "type": "integer"
              },
              "X-RateLimit-Remaining": {
                "description": "Number of remaining requests in the current time window.",
                "type": "integer"
              },
              "X-RateLimit-Reset": {
                "description": "Number of seconds until the remaining requests resets to the value of X-RateLimit-Limit.",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/LemurTaskResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LemurTaskParams"
            },
            "x-ms-summary": "Body"
          }
        ]
      }
    },
    "/lemur/v3/{request_id}": {
      "get": {
        "tags": ["LeMUR"],
        "summary": "Retrieve LeMUR Response",
        "description": "Retrieve a LeMUR response that was previously generated.",
        "operationId": "GetLemurResponse",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "description": "The ID of the LeMUR request you previously made.\nThis would be found in the response of the original request.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "LeMUR Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "LeMUR response",
            "schema": {
              "$ref": "#/definitions/LemurResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      },
      "delete": {
        "tags": ["LeMUR"],
        "summary": "Purge LeMUR Request Data",
        "description": "Delete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.",
        "operationId": "PurgeLemurRequestData",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "description": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "LeMUR Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "LeMUR request data deleted",
            "schema": {
              "$ref": "#/definitions/PurgeLemurRequestDataResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before retrying the request",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "An error occurred while processing the request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        }
      }
    }
  },
  "responses": {},
  "definitions": {
    "RedactedAudioResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["status", "redacted_audio_url"],
      "properties": {
        "status": {
          "description": "The status of the redacted audio",
          "x-ms-summary": "Status",
          "type": "string",
          "enum": ["redacted_audio_ready"]
        },
        "redacted_audio_url": {
          "description": "The URL of the redacted audio file",
          "type": "string",
          "x-ms-summary": "Redacted Audio URL"
        }
      }
    },
    "WordSearchResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The ID of the transcript",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "total_count": {
          "description": "The total count of all matched instances. For e.g., word 1 matched 2 times, and word 2 matched 3 times, total_count will equal 5.",
          "type": "integer",
          "x-ms-summary": "Total Count of Matches"
        },
        "matches": {
          "description": "The matches of the search",
          "type": "array",
          "items": {
            "x-ms-summary": "Match",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "text": {
                "description": "The matched word",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "count": {
                "description": "The total amount of times the word is in the transcript",
                "type": "integer",
                "x-ms-summary": "Count"
              },
              "timestamps": {
                "description": "An array of timestamps",
                "type": "array",
                "items": {
                  "x-ms-summary": "Timestamp",
                  "description": "An array of timestamps structured as [start_time, end_time] in milliseconds",
                  "type": "array",
                  "items": {
                    "description": "Timestamp in milliseconds",
                    "type": "integer",
                    "x-ms-summary": "Timestamp"
                  }
                },
                "x-ms-summary": "Timestamps"
              },
              "indexes": {
                "description": "An array of all index locations for that word within the words array of the completed transcript",
                "type": "array",
                "items": {
                  "type": "integer",
                  "x-ms-summary": "Index"
                },
                "x-ms-summary": "Indexes"
              }
            },
            "required": ["text", "count", "timestamps", "indexes"]
          },
          "x-ms-summary": "Matches"
        }
      },
      "required": ["id", "total_count", "matches"]
    },
    "TranscriptParams": {
      "description": "The parameters for creating a transcript",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "audio_url": {
          "description": "The URL of the audio or video file to transcribe.",
          "type": "string",
          "x-ms-summary": "Audio URL"
        },
        "language_code": {
          "description": "The language of your audio file. Possible values are found in Supported Languages.\nThe default value is 'en_us'.",
          "x-ms-visibility": "important",
          "type": "string",
          "enum": [
            "en",
            "en_au",
            "en_uk",
            "en_us",
            "es",
            "fr",
            "de",
            "it",
            "pt",
            "nl",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "as",
            "az",
            "ba",
            "eu",
            "be",
            "bn",
            "bs",
            "br",
            "bg",
            "my",
            "ca",
            "zh",
            "hr",
            "cs",
            "da",
            "et",
            "fo",
            "fi",
            "gl",
            "ka",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "he",
            "hi",
            "hu",
            "is",
            "id",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "lo",
            "la",
            "lv",
            "ln",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "ne",
            "no",
            "nn",
            "oc",
            "pa",
            "ps",
            "fa",
            "pl",
            "ro",
            "ru",
            "sa",
            "sr",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "su",
            "sw",
            "sv",
            "tl",
            "tg",
            "ta",
            "tt",
            "te",
            "th",
            "bo",
            "tr",
            "tk",
            "uk",
            "ur",
            "uz",
            "vi",
            "cy",
            "yi",
            "yo"
          ],
          "x-ms-summary": "Language Code"
        },
        "language_detection": {
          "description": "Enable Automatic language detection, either true or false.",
          "type": "boolean",
          "x-ms-visibility": "important",
          "x-ms-summary": "Language Detection"
        },
        "speech_model": {
          "description": "The speech model to use for the transcription.",
          "x-ms-summary": "Speech Model",
          "type": "string",
          "enum": ["best", "nano"]
        },
        "punctuate": {
          "description": "Enable Automatic Punctuation, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Punctuate"
        },
        "format_text": {
          "description": "Enable Text Formatting, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Format Text"
        },
        "disfluencies": {
          "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
          "type": "boolean",
          "x-ms-summary": "Disfluencies"
        },
        "dual_channel": {
          "description": "Enable Dual Channel transcription, can be true or false.",
          "type": "boolean",
          "x-ms-summary": "Dual Channel"
        },
        "webhook_url": {
          "description": "The URL to which we send webhook requests. We sends two different types of webhook requests. One request when a transcript is completed or failed, and one request when the redacted audio is ready if redact_pii_audio is enabled.",
          "type": "string",
          "x-ms-summary": "Webhook URL"
        },
        "webhook_auth_header_name": {
          "description": "The header name to be sent with the transcript completed or failed webhook requests",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Name"
        },
        "webhook_auth_header_value": {
          "description": "The header value to send back with the transcript completed or failed webhook requests for added security",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Value"
        },
        "auto_highlights": {
          "description": "Enable Key Phrases, either true or false",
          "type": "boolean",
          "x-ms-summary": "Key Phrases"
        },
        "audio_start_from": {
          "description": "The point in time, in milliseconds, to begin transcribing in your media file",
          "type": "integer",
          "x-ms-summary": "Audio Start From"
        },
        "audio_end_at": {
          "description": "The point in time, in milliseconds, to stop transcribing in your media file",
          "type": "integer",
          "x-ms-summary": "Audio End At"
        },
        "word_boost": {
          "description": "The list of custom vocabulary to boost transcription probability for",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Word to Boost"
          },
          "x-ms-summary": "Word Boost"
        },
        "boost_param": {
          "description": "How much to boost specified words",
          "x-ms-summary": "Word Boost Level",
          "type": "string",
          "enum": ["low", "default", "high"]
        },
        "filter_profanity": {
          "description": "Filter profanity from the transcribed text, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Filter Profanity"
        },
        "redact_pii": {
          "description": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Redact PII"
        },
        "redact_pii_audio": {
          "description": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See PII redaction for more details.",
          "type": "boolean",
          "x-ms-summary": "Redact PII Audio"
        },
        "redact_pii_audio_quality": {
          "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See PII redaction for more details.",
          "x-ms-summary": "Redact PII Audio Quality",
          "type": "string",
          "enum": ["mp3", "wav"]
        },
        "redact_pii_policies": {
          "description": "The list of PII Redaction policies to enable. See PII redaction for more details.",
          "type": "array",
          "items": {
            "x-ms-summary": "PII Policy",
            "description": "The type of PII to redact",
            "type": "string",
            "enum": [
              "account_number",
              "banking_information",
              "blood_type",
              "credit_card_cvv",
              "credit_card_expiration",
              "credit_card_number",
              "date",
              "date_interval",
              "date_of_birth",
              "drivers_license",
              "drug",
              "duration",
              "email_address",
              "event",
              "filename",
              "gender_sexuality",
              "healthcare_number",
              "injury",
              "ip_address",
              "language",
              "location",
              "marital_status",
              "medical_condition",
              "medical_process",
              "money_amount",
              "nationality",
              "number_sequence",
              "occupation",
              "organization",
              "passport_number",
              "password",
              "person_age",
              "person_name",
              "phone_number",
              "physical_attribute",
              "political_affiliation",
              "religion",
              "statistics",
              "time",
              "url",
              "us_social_security_number",
              "username",
              "vehicle_id",
              "zodiac_sign"
            ]
          },
          "x-ms-summary": "Redact PII Policies"
        },
        "redact_pii_sub": {
          "description": "The replacement logic for detected PII, can be \"entity_name\" or \"hash\". See PII redaction for more details.",
          "x-ms-summary": "Redact PII Substitution",
          "type": "string",
          "enum": ["entity_name", "hash"]
        },
        "speaker_labels": {
          "description": "Enable Speaker diarization, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Speaker Labels"
        },
        "speakers_expected": {
          "description": "Tells the speaker label model how many speakers it should attempt to identify, up to 10. See Speaker diarization for more details.",
          "type": "integer",
          "x-ms-summary": "Speakers Expected"
        },
        "content_safety": {
          "description": "Enable Content Moderation, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Content Moderation"
        },
        "content_safety_confidence": {
          "description": "The confidence threshold for the Content Moderation model. Values must be between 25 and 100.",
          "type": "integer",
          "x-ms-summary": "Content Moderation Confidence"
        },
        "iab_categories": {
          "description": "Enable Topic Detection, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Topic Detection"
        },
        "custom_spelling": {
          "description": "Customize how words are spelled and formatted using to and from values",
          "type": "array",
          "items": {
            "x-ms-summary": "Custom Spelling",
            "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "from": {
                "description": "Words or phrases to replace",
                "type": "array",
                "items": {
                  "description": "Word or phrase to replace",
                  "type": "string",
                  "x-ms-summary": "Word or Phrase"
                },
                "x-ms-summary": "From"
              },
              "to": {
                "description": "Word or phrase to replace with",
                "type": "string",
                "x-ms-summary": "To"
              }
            },
            "required": ["from", "to"]
          },
          "x-ms-summary": "Custom Spellings"
        },
        "sentiment_analysis": {
          "description": "Enable Sentiment Analysis, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Sentiment Analysis"
        },
        "auto_chapters": {
          "description": "Enable Auto Chapters, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Auto Chapters"
        },
        "entity_detection": {
          "description": "Enable Entity Detection, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Entity Detection"
        },
        "speech_threshold": {
          "description": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Speech Threshold"
        },
        "summarization": {
          "description": "Enable Summarization, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Enable Summarization"
        },
        "summary_model": {
          "description": "The model to summarize the transcript",
          "x-ms-summary": "Summary Model",
          "type": "string",
          "enum": ["informative", "conversational", "catchy"]
        },
        "summary_type": {
          "description": "The type of summary",
          "x-ms-summary": "Summary Type",
          "type": "string",
          "enum": [
            "bullets",
            "bullets_verbose",
            "gist",
            "headline",
            "paragraph"
          ]
        },
        "custom_topics": {
          "description": "Enable custom topics, either true or false",
          "type": "boolean",
          "x-ms-summary": "Enable Custom Topics"
        },
        "topics": {
          "description": "The list of custom topics",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Topic"
          },
          "x-ms-summary": "Custom Topics"
        }
      },
      "required": ["audio_url"]
    },
    "Transcript": {
      "description": "A transcript object",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The unique identifier of your transcript",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "ID"
        },
        "audio_url": {
          "description": "The URL of the media that was transcribed",
          "type": "string",
          "x-ms-summary": "Audio URL"
        },
        "status": {
          "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
          "x-ms-summary": "Status",
          "type": "string",
          "enum": ["queued", "processing", "completed", "error"]
        },
        "language_code": {
          "description": "The language of your audio file.\nPossible values are found in Supported Languages.\nThe default value is 'en_us'.",
          "type": "string",
          "enum": [
            "en",
            "en_au",
            "en_uk",
            "en_us",
            "es",
            "fr",
            "de",
            "it",
            "pt",
            "nl",
            "af",
            "sq",
            "am",
            "ar",
            "hy",
            "as",
            "az",
            "ba",
            "eu",
            "be",
            "bn",
            "bs",
            "br",
            "bg",
            "my",
            "ca",
            "zh",
            "hr",
            "cs",
            "da",
            "et",
            "fo",
            "fi",
            "gl",
            "ka",
            "el",
            "gu",
            "ht",
            "ha",
            "haw",
            "he",
            "hi",
            "hu",
            "is",
            "id",
            "ja",
            "jw",
            "kn",
            "kk",
            "km",
            "ko",
            "lo",
            "la",
            "lv",
            "ln",
            "lt",
            "lb",
            "mk",
            "mg",
            "ms",
            "ml",
            "mt",
            "mi",
            "mr",
            "mn",
            "ne",
            "no",
            "nn",
            "oc",
            "pa",
            "ps",
            "fa",
            "pl",
            "ro",
            "ru",
            "sa",
            "sr",
            "sn",
            "sd",
            "si",
            "sk",
            "sl",
            "so",
            "su",
            "sw",
            "sv",
            "tl",
            "tg",
            "ta",
            "tt",
            "te",
            "th",
            "bo",
            "tr",
            "tk",
            "uk",
            "ur",
            "uz",
            "vi",
            "cy",
            "yi",
            "yo"
          ],
          "x-ms-summary": "Language Code"
        },
        "language_detection": {
          "description": "Whether Automatic language detection is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Language Detection"
        },
        "speech_model": {
          "description": "The speech model to use for the transcription.",
          "x-ms-summary": "Speech Model",
          "type": "string",
          "enum": ["best", "nano"]
        },
        "text": {
          "description": "The textual transcript of your media file",
          "type": "string",
          "x-ms-summary": "Text"
        },
        "words": {
          "description": "An array of temporally-sequential word objects, one for each word in the transcript.\nSee Speech recognition for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Word",
            "type": "object",
            "additionalProperties": false,
            "required": ["confidence", "start", "end", "text"],
            "properties": {
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            }
          },
          "x-ms-summary": "Words"
        },
        "utterances": {
          "description": "When dual_channel or speaker_labels is enabled, a list of turn-by-turn utterance objects.\nSee Speaker diarization for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Utterance",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "confidence": {
                "description": "The confidence score for the transcript of this utterance",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "start": {
                "description": "The starting time, in milliseconds, of the utterance in the audio file",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, of the utterance in the audio file",
                "type": "integer",
                "x-ms-summary": "End"
              },
              "text": {
                "description": "The text for this utterance",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "words": {
                "description": "The words in the utterance.",
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of this utterance, where each speaker is assigned a sequential capital letter - e.g. \"A\" for Speaker A, \"B\" for Speaker B, etc.",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            },
            "required": [
              "confidence",
              "start",
              "end",
              "text",
              "words",
              "speaker"
            ]
          },
          "x-ms-summary": "Utterances"
        },
        "confidence": {
          "description": "The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)",
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "description": "The duration of this transcript object's media file, in seconds",
          "type": "integer",
          "x-ms-summary": "Audio Duration"
        },
        "punctuate": {
          "description": "Whether Automatic Punctuation is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Punctuate"
        },
        "format_text": {
          "description": "Whether Text Formatting is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Format Text"
        },
        "disfluencies": {
          "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
          "type": "boolean",
          "x-ms-summary": "Disfluencies"
        },
        "dual_channel": {
          "description": "Whether Dual channel transcription was enabled in the transcription request, either true or false",
          "type": "boolean",
          "x-ms-summary": "Dual Channel"
        },
        "webhook_url": {
          "description": "The URL to which we send webhook requests.\nWe sends two different types of webhook requests.\nOne request when a transcript is completed or failed, and one request when the redacted audio is ready if redact_pii_audio is enabled.",
          "type": "string",
          "x-ms-summary": "Webhook URL"
        },
        "webhook_status_code": {
          "description": "The status code we received from your server when delivering the transcript completed or failed webhook request, if a webhook URL was provided",
          "type": "integer",
          "x-ms-summary": "Webhook HTTP Status Code"
        },
        "webhook_auth": {
          "description": "Whether webhook authentication details were provided",
          "type": "boolean",
          "x-ms-summary": "Webhook Auth Enabled"
        },
        "webhook_auth_header_name": {
          "description": "The header name to be sent with the transcript completed or failed webhook requests",
          "type": "string",
          "x-ms-summary": "Webhook Auth Header Name"
        },
        "speed_boost": {
          "description": "Whether speed boost is enabled",
          "type": "boolean",
          "x-ms-summary": "Speed Boost"
        },
        "auto_highlights": {
          "description": "Whether Key Phrases is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Key Phrases"
        },
        "auto_highlights_result": {
          "description": "An array of results for the Key Phrases model, if it is enabled.\nSee Key phrases for more information.",
          "x-ms-summary": "Key Phrases Result",
          "type": "object",
          "required": ["status", "results"],
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "description": "A temporally-sequential array of Key Phrases",
              "type": "array",
              "items": {
                "x-ms-summary": "Auto Highlight Result",
                "type": "object",
                "additionalProperties": false,
                "required": ["count", "rank", "text", "timestamps"],
                "properties": {
                  "count": {
                    "description": "The total number of times the key phrase appears in the audio file",
                    "type": "integer",
                    "x-ms-summary": "Count"
                  },
                  "rank": {
                    "description": "The total relevancy to the overall audio file of this key phrase - a greater number means more relevant",
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1,
                    "x-ms-summary": "Rank"
                  },
                  "text": {
                    "description": "The text itself of the key phrase",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "timestamps": {
                    "description": "The timestamp of the of the key phrase",
                    "type": "array",
                    "items": {
                      "x-ms-summary": "Timestamp",
                      "description": "Timestamp containing a start and end property in milliseconds",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "start": {
                          "description": "The start time in milliseconds",
                          "type": "integer",
                          "x-ms-summary": "Start"
                        },
                        "end": {
                          "description": "The end time in milliseconds",
                          "type": "integer",
                          "x-ms-summary": "End"
                        }
                      },
                      "required": ["start", "end"]
                    },
                    "x-ms-summary": "Timestamps"
                  }
                }
              },
              "x-ms-summary": "Results"
            }
          }
        },
        "audio_start_from": {
          "description": "The point in time, in milliseconds, in the file at which the transcription was started",
          "type": "integer",
          "x-ms-summary": "Audio Start From"
        },
        "audio_end_at": {
          "description": "The point in time, in milliseconds, in the file at which the transcription was terminated",
          "type": "integer",
          "x-ms-summary": "Audio End At"
        },
        "word_boost": {
          "description": "The list of custom vocabulary to boost transcription probability for",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Boosted Word"
          },
          "x-ms-summary": "Word Boost"
        },
        "boost_param": {
          "description": "The word boost parameter value",
          "type": "string",
          "x-ms-summary": "Boost"
        },
        "filter_profanity": {
          "description": "Whether Profanity Filtering is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Filter Profanity"
        },
        "redact_pii": {
          "description": "Whether PII Redaction is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Redact PII"
        },
        "redact_pii_audio": {
          "description": "Whether a redacted version of the audio file was generated,\neither true or false. See PII redaction for more information.",
          "type": "boolean",
          "x-ms-summary": "Redact PII Audio"
        },
        "redact_pii_audio_quality": {
          "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See PII redaction for more details.",
          "x-ms-summary": "Redact PII Audio Quality",
          "type": "string",
          "enum": ["mp3", "wav"]
        },
        "redact_pii_policies": {
          "description": "The list of PII Redaction policies that were enabled, if PII Redaction is enabled.\nSee PII redaction for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "PII Policy",
            "description": "The type of PII to redact",
            "type": "string",
            "enum": [
              "account_number",
              "banking_information",
              "blood_type",
              "credit_card_cvv",
              "credit_card_expiration",
              "credit_card_number",
              "date",
              "date_interval",
              "date_of_birth",
              "drivers_license",
              "drug",
              "duration",
              "email_address",
              "event",
              "filename",
              "gender_sexuality",
              "healthcare_number",
              "injury",
              "ip_address",
              "language",
              "location",
              "marital_status",
              "medical_condition",
              "medical_process",
              "money_amount",
              "nationality",
              "number_sequence",
              "occupation",
              "organization",
              "passport_number",
              "password",
              "person_age",
              "person_name",
              "phone_number",
              "physical_attribute",
              "political_affiliation",
              "religion",
              "statistics",
              "time",
              "url",
              "us_social_security_number",
              "username",
              "vehicle_id",
              "zodiac_sign"
            ]
          },
          "x-ms-summary": "Redact PII Policies"
        },
        "redact_pii_sub": {
          "description": "The replacement logic for detected PII, can be \"entity_name\" or \"hash\". See PII redaction for more details.",
          "x-ms-summary": "Redact PII Substitution",
          "type": "string",
          "enum": ["entity_name", "hash"]
        },
        "speaker_labels": {
          "description": "Whether Speaker diarization is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Speaker Labels"
        },
        "speakers_expected": {
          "description": "Tell the speaker label model how many speakers it should attempt to identify, up to 10. See Speaker diarization for more details.",
          "type": "integer",
          "x-ms-summary": "Speakers Expected"
        },
        "content_safety": {
          "description": "Whether Content Moderation is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Content Moderation"
        },
        "content_safety_labels": {
          "description": "An array of results for the Content Moderation model, if it is enabled.\nSee Content moderation for more information.",
          "x-ms-summary": "Content Moderation Labels",
          "type": "object",
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "type": "array",
              "items": {
                "x-ms-summary": "Content Moderation Label Result",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "text",
                  "labels",
                  "sentences_idx_start",
                  "sentences_idx_end",
                  "timestamp"
                ],
                "properties": {
                  "text": {
                    "description": "The transcript of the section flagged by the Content Moderation model",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "labels": {
                    "description": "An array of safety labels, one per sensitive topic that was detected in the section",
                    "type": "array",
                    "items": {
                      "x-ms-summary": "Label",
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["label", "confidence", "severity"],
                      "properties": {
                        "label": {
                          "description": "The label of the sensitive topic",
                          "type": "string",
                          "x-ms-summary": "Label"
                        },
                        "confidence": {
                          "description": "The confidence score for the topic being discussed, from 0 to 1",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Confidence"
                        },
                        "severity": {
                          "description": "How severely the topic is discussed in the section, from 0 to 1",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Severity"
                        }
                      }
                    },
                    "x-ms-summary": "Labels"
                  },
                  "sentences_idx_start": {
                    "description": "The sentence index at which the section begins",
                    "type": "integer",
                    "x-ms-summary": "Sentence Index Start"
                  },
                  "sentences_idx_end": {
                    "description": "The sentence index at which the section ends",
                    "type": "integer",
                    "x-ms-summary": "Sentence Index End"
                  },
                  "timestamp": {
                    "description": "Timestamp containing a start and end property in milliseconds",
                    "x-ms-summary": "Timestamp",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "start": {
                        "description": "The start time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "Start"
                      },
                      "end": {
                        "description": "The end time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "End"
                      }
                    },
                    "required": ["start", "end"]
                  }
                }
              },
              "x-ms-summary": "Results"
            },
            "summary": {
              "description": "A summary of the Content Moderation confidence results for the entire audio file",
              "type": "object",
              "additionalProperties": {
                "description": "A confidence score for the presence of the sensitive topic \"topic\" across the entire audio file",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1
              },
              "x-ms-summary": "Summary"
            },
            "severity_score_summary": {
              "description": "A summary of the Content Moderation severity results for the entire audio file",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SeverityScoreSummary"
              },
              "x-ms-summary": "Severity Score Summary"
            }
          }
        },
        "iab_categories": {
          "description": "Whether Topic Detection is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Topic Detection"
        },
        "iab_categories_result": {
          "description": "The result of the Topic Detection model, if it is enabled.\nSee Topic Detection for more information.",
          "x-ms-summary": "Topic Detection Result",
          "type": "object",
          "properties": {
            "status": {
              "description": "Either success, or unavailable in the rare case that the model failed",
              "x-ms-summary": "Status",
              "type": "string",
              "enum": ["success", "unavailable"]
            },
            "results": {
              "description": "An array of results for the Topic Detection model",
              "type": "array",
              "items": {
                "x-ms-summary": "Topic Detection Result",
                "description": "The result of the topic detection model",
                "type": "object",
                "additionalProperties": false,
                "required": ["text"],
                "properties": {
                  "text": {
                    "description": "The text in the transcript in which a detected topic occurs",
                    "type": "string",
                    "x-ms-summary": "Text"
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["relevance", "label"],
                      "properties": {
                        "relevance": {
                          "description": "How relevant the detected topic is of a detected topic",
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "x-ms-summary": "Relevance"
                        },
                        "label": {
                          "description": "The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship",
                          "type": "string",
                          "x-ms-summary": "Label"
                        }
                      },
                      "x-ms-summary": "Label"
                    },
                    "x-ms-summary": "Labels"
                  },
                  "timestamp": {
                    "x-ms-summary": "Timestamp",
                    "description": "Timestamp containing a start and end property in milliseconds",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "start": {
                        "description": "The start time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "Start"
                      },
                      "end": {
                        "description": "The end time in milliseconds",
                        "type": "integer",
                        "x-ms-summary": "End"
                      }
                    },
                    "required": ["start", "end"]
                  }
                }
              },
              "x-ms-summary": "Results"
            },
            "summary": {
              "description": "The overall relevance of topic to the entire audio file",
              "type": "object",
              "additionalProperties": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1
              },
              "x-ms-summary": "Summary"
            }
          }
        },
        "custom_spelling": {
          "description": "Customize how words are spelled and formatted using to and from values",
          "type": "array",
          "items": {
            "x-ms-summary": "Custom Spelling",
            "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "from": {
                "description": "Words or phrases to replace",
                "type": "array",
                "items": {
                  "description": "Word or phrase to replace",
                  "type": "string",
                  "x-ms-summary": "Word or Phrase"
                },
                "x-ms-summary": "From"
              },
              "to": {
                "description": "Word or phrase to replace with",
                "type": "string",
                "x-ms-summary": "To"
              }
            },
            "required": ["from", "to"]
          },
          "x-ms-summary": "Custom Spellings"
        },
        "auto_chapters": {
          "description": "Whether Auto Chapters is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Auto Chapters Enabled"
        },
        "chapters": {
          "description": "An array of temporally sequential chapters for the audio file",
          "type": "array",
          "items": {
            "x-ms-summary": "Chapter",
            "description": "Chapter of the audio file",
            "type": "object",
            "additionalProperties": false,
            "required": ["gist", "headline", "summary", "start", "end"],
            "properties": {
              "gist": {
                "description": "An ultra-short summary (just a few words) of the content spoken in the chapter",
                "type": "string",
                "x-ms-summary": "Gist"
              },
              "headline": {
                "description": "A single sentence summary of the content spoken during the chapter",
                "type": "string",
                "x-ms-summary": "Headline"
              },
              "summary": {
                "description": "A one paragraph summary of the content spoken during the chapter",
                "type": "string",
                "x-ms-summary": "Summary"
              },
              "start": {
                "description": "The starting time, in milliseconds, for the chapter",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The starting time, in milliseconds, for the chapter",
                "type": "integer",
                "x-ms-summary": "End"
              }
            }
          },
          "x-ms-summary": "Chapters"
        },
        "summarization": {
          "description": "Whether Summarization is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Summarization Enabled"
        },
        "summary_type": {
          "description": "The type of summary generated, if Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary Type"
        },
        "summary_model": {
          "description": "The Summarization model used to generate the summary,\nif Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary Model"
        },
        "summary": {
          "description": "The generated summary of the media file, if Summarization is enabled",
          "type": "string",
          "x-ms-summary": "Summary"
        },
        "custom_topics": {
          "description": "Whether custom topics is enabled, either true or false",
          "type": "boolean",
          "x-ms-summary": "Custom Topics Enabled"
        },
        "topics": {
          "description": "The list of custom topics provided if custom topics is enabled",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-summary": "Topic"
          },
          "x-ms-summary": "Topics"
        },
        "sentiment_analysis": {
          "description": "Whether Sentiment Analysis is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Sentiment Analysis"
        },
        "sentiment_analysis_results": {
          "description": "An array of results for the Sentiment Analysis model, if it is enabled.\nSee Sentiment Analysis for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Sentiment Analysis Result",
            "description": "The result of the Sentiment Analysis model",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "sentiment", "confidence"],
            "properties": {
              "text": {
                "description": "The transcript of the sentence",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "description": "The starting time, in milliseconds, of the sentence",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, of the sentence",
                "type": "integer",
                "x-ms-summary": "End"
              },
              "sentiment": {
                "description": "The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE",
                "x-ms-summary": "Sentiment",
                "enum": ["POSITIVE", "NEUTRAL", "NEGATIVE"]
              },
              "confidence": {
                "description": "The confidence score for the detected sentiment of the sentence, from 0 to 1",
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            }
          },
          "x-ms-summary": "Sentiment Analysis Results"
        },
        "entity_detection": {
          "description": "Whether Entity Detection is enabled, can be true or false",
          "type": "boolean",
          "x-ms-summary": "Entity Detection"
        },
        "entities": {
          "description": "An array of results for the Entity Detection model, if it is enabled.\nSee Entity detection for more information.",
          "type": "array",
          "items": {
            "x-ms-summary": "Entity",
            "description": "A detected entity",
            "type": "object",
            "additionalProperties": false,
            "required": ["entity_type", "text", "start", "end"],
            "properties": {
              "entity_type": {
                "description": "The type of entity for the detected entity",
                "x-ms-summary": "Entity Type",
                "type": "string",
                "enum": [
                  "account_number",
                  "banking_information",
                  "blood_type",
                  "credit_card_cvv",
                  "credit_card_expiration",
                  "credit_card_number",
                  "date",
                  "date_interval",
                  "date_of_birth",
                  "drivers_license",
                  "drug",
                  "duration",
                  "email_address",
                  "event",
                  "filename",
                  "gender_sexuality",
                  "healthcare_number",
                  "injury",
                  "ip_address",
                  "language",
                  "location",
                  "marital_status",
                  "medical_condition",
                  "medical_process",
                  "money_amount",
                  "nationality",
                  "number_sequence",
                  "occupation",
                  "organization",
                  "passport_number",
                  "password",
                  "person_age",
                  "person_name",
                  "phone_number",
                  "physical_attribute",
                  "political_affiliation",
                  "religion",
                  "statistics",
                  "time",
                  "url",
                  "us_social_security_number",
                  "username",
                  "vehicle_id",
                  "zodiac_sign"
                ]
              },
              "text": {
                "description": "The text for the detected entity",
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "description": "The starting time, in milliseconds, at which the detected entity appears in the audio file",
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "description": "The ending time, in milliseconds, for the detected entity in the audio file",
                "type": "integer",
                "x-ms-summary": "End"
              }
            }
          },
          "x-ms-summary": "Entities"
        },
        "speech_threshold": {
          "description": "Defaults to null. Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "x-ms-summary": "Speech Threshold"
        },
        "throttled": {
          "description": "True while a request is throttled and false when a request is no longer throttled",
          "type": "boolean",
          "x-ms-summary": "Throttled"
        },
        "error": {
          "description": "Error message of why the transcript failed",
          "type": "string",
          "x-ms-summary": "Error"
        },
        "language_model": {
          "description": "The language model that was used for the transcript",
          "type": "string",
          "x-ms-summary": "Language Model"
        },
        "acoustic_model": {
          "description": "The acoustic model that was used for the transcript",
          "type": "string",
          "x-ms-summary": "Acoustic Model"
        }
      },
      "required": [
        "id",
        "language_model",
        "acoustic_model",
        "status",
        "audio_url",
        "webhook_auth",
        "auto_highlights",
        "redact_pii",
        "summarization"
      ]
    },
    "SeverityScoreSummary": {
      "type": "object",
      "required": ["low", "medium", "high"],
      "properties": {
        "low": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Low"
        },
        "medium": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Medium"
        },
        "high": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "High"
        }
      }
    },
    "SentencesResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "confidence", "audio_duration", "sentences"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "type": "number",
          "x-ms-summary": "Audio Duration"
        },
        "sentences": {
          "type": "array",
          "items": {
            "x-ms-summary": "Sentence",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "confidence", "words"],
            "properties": {
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "words": {
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            }
          },
          "x-ms-summary": "Sentences"
        }
      }
    },
    "ParagraphsResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "confidence", "audio_duration", "paragraphs"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "Transcript ID"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 1,
          "x-ms-summary": "Confidence"
        },
        "audio_duration": {
          "type": "number",
          "x-ms-summary": "Audio Duration"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "x-ms-summary": "Paragraph",
            "type": "object",
            "additionalProperties": false,
            "required": ["text", "start", "end", "confidence", "words"],
            "properties": {
              "text": {
                "type": "string",
                "x-ms-summary": "Text"
              },
              "start": {
                "type": "integer",
                "x-ms-summary": "Start"
              },
              "end": {
                "type": "integer",
                "x-ms-summary": "End"
              },
              "confidence": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1,
                "x-ms-summary": "Confidence"
              },
              "words": {
                "type": "array",
                "items": {
                  "x-ms-summary": "Word",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["confidence", "start", "end", "text"],
                  "properties": {
                    "confidence": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "x-ms-summary": "Confidence"
                    },
                    "start": {
                      "type": "integer",
                      "x-ms-summary": "Start"
                    },
                    "end": {
                      "type": "integer",
                      "x-ms-summary": "End"
                    },
                    "text": {
                      "type": "string",
                      "x-ms-summary": "Text"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                      "type": "string",
                      "x-ms-summary": "Speaker"
                    }
                  }
                },
                "x-ms-summary": "Words"
              },
              "speaker": {
                "description": "The speaker of the sentence if Speaker Diarization is enabled, else null",
                "type": "string",
                "x-ms-summary": "Speaker"
              }
            }
          },
          "x-ms-summary": "Paragraphs"
        }
      }
    },
    "TranscriptList": {
      "description": "A list of transcripts. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
      "type": "object",
      "additionalProperties": false,
      "required": ["page_details", "transcripts"],
      "properties": {
        "page_details": {
          "x-ms-summary": "Page Details",
          "description": "Details of the transcript page. Transcripts are sorted from newest to oldest. The previous URL always points to a page with older transcripts.",
          "type": "object",
          "additionalProperties": false,
          "required": ["limit", "result_count", "current_url"],
          "properties": {
            "limit": {
              "description": "The number of results this page is limited to",
              "type": "integer",
              "x-ms-summary": "Limit"
            },
            "result_count": {
              "description": "The actual number of results in the page",
              "type": "integer",
              "x-ms-summary": "Result Count"
            },
            "current_url": {
              "description": "The URL used to retrieve the current page of transcripts",
              "type": "string",
              "x-ms-summary": "Current URL"
            },
            "prev_url": {
              "description": "The URL to the next page of transcripts. The previous URL always points to a page with older transcripts.",
              "type": "string",
              "x-ms-summary": "Previous URL"
            },
            "next_url": {
              "description": "The URL to the next page of transcripts. The next URL always points to a page with newer transcripts.",
              "type": "string",
              "x-ms-summary": "Next URL"
            }
          }
        },
        "transcripts": {
          "type": "array",
          "items": {
            "x-ms-summary": "Transcript List Item",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "resource_url",
              "status",
              "created",
              "audio_url"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "x-ms-summary": "ID"
              },
              "resource_url": {
                "type": "string",
                "x-ms-summary": "Resource URL"
              },
              "status": {
                "x-ms-summary": "Status",
                "type": "string",
                "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
                "enum": ["queued", "processing", "completed", "error"]
              },
              "created": {
                "type": "string",
                "pattern": "^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$",
                "x-ms-summary": "Created"
              },
              "completed": {
                "type": "string",
                "pattern": "^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$",
                "x-ms-summary": "Completed"
              },
              "audio_url": {
                "type": "string",
                "x-ms-summary": "Audio URL"
              },
              "error": {
                "description": "Error message of why the transcript failed",
                "type": "string",
                "x-ms-summary": "Error"
              }
            }
          },
          "x-ms-summary": "Transcripts"
        }
      }
    },
    "UploadedFile": {
      "type": "object",
      "additionalProperties": false,
      "required": ["upload_url"],
      "properties": {
        "upload_url": {
          "description": "A URL that points to your audio file, accessible only by AssemblyAI's servers",
          "type": "string",
          "x-ms-summary": "Uploaded File URL"
        }
      }
    },
    "PurgeLemurRequestDataResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "request_id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the deletion request of the LeMUR request",
          "x-ms-summary": "Purge Request ID"
        },
        "request_id_to_purge": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the LeMUR request to purge the data for",
          "x-ms-summary": "LeMUR Request ID to Purge"
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the request data was deleted",
          "x-ms-summary": "Deleted"
        }
      },
      "required": ["request_id", "request_id_to_purge", "deleted"]
    },
    "LemurTaskResponse": {
      "type": "object",
      "properties": {
        "response": {
          "description": "The response generated by LeMUR.",
          "type": "string",
          "x-ms-summary": "Response"
        },
        "request_id": {
          "description": "The ID of the LeMUR request",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "LeMUR Request ID"
        },
        "usage": {
          "description": "The usage numbers for the LeMUR request",
          "x-ms-summary": "Usage",
          "type": "object",
          "additionalProperties": false,
          "required": ["input_tokens", "output_tokens"],
          "properties": {
            "input_tokens": {
              "description": "The number of input tokens used by the model",
              "type": "integer",
              "minimum": 0,
              "x-ms-summary": "Input Tokens"
            },
            "output_tokens": {
              "description": "The number of output tokens generated by the model",
              "type": "integer",
              "minimum": 0,
              "x-ms-summary": "Output Tokens"
            }
          }
        }
      },
      "required": ["response", "request_id", "usage"]
    },
    "LemurResponse": {
      "type": "object",
      "properties": {
        "response": {
          "description": "The response generated by LeMUR.",
          "type": "string",
          "x-ms-summary": "Response"
        },
        "request_id": {
          "description": "The ID of the LeMUR request",
          "type": "string",
          "format": "uuid",
          "x-ms-summary": "LeMUR Request ID"
        },
        "usage": {
          "description": "The usage numbers for the LeMUR request",
          "x-ms-summary": "Usage",
          "type": "object",
          "additionalProperties": false,
          "required": ["input_tokens", "output_tokens"],
          "properties": {
            "input_tokens": {
              "description": "The number of input tokens used by the model",
              "type": "integer",
              "minimum": 0,
              "x-ms-summary": "Input Tokens"
            },
            "output_tokens": {
              "description": "The number of output tokens generated by the model",
              "type": "integer",
              "minimum": 0,
              "x-ms-summary": "Output Tokens"
            }
          }
        }
      },
      "required": ["response", "request_id", "usage"]
    },
    "LemurTaskParams": {
      "type": "object",
      "properties": {
        "prompt": {
          "description": "Your text to prompt the model to produce a desired output, including any context you want to pass into the model.",
          "type": "string",
          "x-ms-summary": "Prompt"
        },
        "transcript_ids": {
          "description": "A list of completed transcripts with text. Up to a maximum of 100 files or 100 hours, whichever is lower.\nUse either transcript_ids or input_text as input into LeMUR.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Transcript ID"
          },
          "x-ms-visibility": "important",
          "x-ms-summary": "Transcript IDs"
        },
        "input_text": {
          "description": "Custom formatted transcript data. Maximum size is the context limit of the selected model, which defaults to 100000.\nUse either transcript_ids or input_text as input into LeMUR.",
          "type": "string",
          "x-ms-visibility": "important",
          "x-ms-summary": "Input Text"
        },
        "context": {
          "description": "Context to provide the model. This can be a string or a free-form JSON value.",
          "x-ms-visibility": "important",
          "type": "string",
          "x-ms-summary": "Context"
        },
        "final_model": {
          "description": "The model that is used for the final prompt after compression is performed.",
          "x-ms-visibility": "important",
          "type": "string",
          "enum": [
            "anthropic/claude-3-5-sonnet",
            "anthropic/claude-3-opus",
            "anthropic/claude-3-haiku",
            "anthropic/claude-3-sonnet",
            "anthropic/claude-2-1",
            "anthropic/claude-2",
            "default",
            "anthropic/claude-instant-1-2",
            "basic",
            "assemblyai/mistral-7b"
          ],
          "x-ms-summary": "Final Model"
        },
        "max_output_size": {
          "description": "Max output size in tokens, up to 4000",
          "type": "integer",
          "x-ms-visibility": "important",
          "x-ms-summary": "Maximum Output Size"
        },
        "temperature": {
          "description": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1,
          "x-ms-visibility": "important",
          "x-ms-summary": "Temperature"
        }
      },
      "required": ["prompt"]
    },
    "Error": {
      "type": "object",
      "additionalProperties": false,
      "required": ["error"],
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string",
          "x-ms-summary": "Error Message"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status"
        }
      }
    }
  },
  "securityDefinitions": {
    "AssemblyAI API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "host": "api.assemblyai.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "parameters": {},
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.assemblyai.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.assemblyai.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}
