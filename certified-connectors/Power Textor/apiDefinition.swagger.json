{
  "swagger": "2.0",
  "info": {
    "title": "Power Textor",
    "description": "With the Power Textor connector, send SMS messages to your customers and get push notifications when a text message is received. Build brand loyalty by a one-on-one conversation with customers with Power Textor actions that support a range of text message sending options; including on-demand SMS, scheduled SMS, event reminders, and Google Review requests. Each functionality is available for an individual number or a group of numbers.",
    "version": "1.0",
    "contact": {
      "name": "Power Textor Support",
      "url": "https://powertextor.com/#contact",
      "email": "info@powertextor.com"
    }
  },
  "host": "api-powertextor-v2.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/messages/send": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body",
                      "title": "Body of the message."
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with the sent message, if any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total numbers of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to multiple contacts",
        "description": "Send bulk text (SMS) message to multiple Power Textor Contacts at once.",
        "operationId": "SendTextMessageToMultipleContacts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Contact Names from the dropdown"
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/schedulereviewcontacts": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message for multiple contacts",
        "description": "Schedule review messages in bulk for Power Textor contacts by specifying date and time on which the messages should be sent. Send pin location of your business or service area within the text message.",
        "operationId": "ScheduleReviewTextMessageForContacts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple Contact Names from Dropdown"
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                },
                "GooglePlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                }
              },
              "required": [
                "GooglePlaceId",
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendgroup": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "string",
                  "description": "Error messages associated with the sent message, if any.",
                  "title": "Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to multiple groups",
        "description": "Send bulk text (SMS) message to multiple Power Textor groups at once.",
        "operationId": "SendTextMessageToMultipleGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupName": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetGroups",
                      "value-path": "GroupId",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Group Names from Dropdown"
                  },
                  "description": "GroupName"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GroupName",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendreview": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "string",
                  "description": "Error messages associated with the sent message, if any.",
                  "title": "Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to multiple groups",
        "description": "Send review text messages to Power Textor multiple groups to get feedback from customers. Send pin location of your business or service area within the text messages.",
        "operationId": "SendReviewTextGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupName": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetGroups",
                      "value-path": "GroupId",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Group Names from Dropdown"
                  },
                  "description": "GroupName"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GroupName",
                "PlaceId",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduletext": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the Groups associated with the sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of Contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total numbers of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule text (SMS) message for a contact",
        "description": "Schedule text (SMS) message for a Power Textor contact and specify schedule date and time on which the text message should be sent.",
        "operationId": "ScheduleMessageForAContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose Contact Name from Dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                }
              },
              "required": [
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduletextbulk": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "Groups associated with the sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contacts associated with the message, If any",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule text (SMS) message for multiple groups",
        "description": "Schedule bulk text messages to groups, by configuring date and time settings when the text message should be sent.",
        "operationId": "ScheduleMessageForGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetGroups",
                      "value-path": "GroupId",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple group Names from Dropdown"
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                }
              },
              "required": [
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/schedulereviewtext": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message for a contact",
        "description": "Schedule review message for Power Textor contact by specifying date and time on which the message should be sent. Send pin location of your business or service area within the text message.",
        "operationId": "ScheduleReviewMessageForAContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose contact name from Dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GooglePlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GooglePlaceId",
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduledbulkreview": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total numbers of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message for multiple groups",
        "description": "Schedule review messages in bulk for Power Textor groups by specifying date and time on which the messages should be sent. Send pin location of your business or service area within the text message.",
        "operationId": "ScheduleReviewGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupName": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetGroups",
                      "value-path": "GroupId",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple group Names from Dropdown"
                  },
                  "description": "GroupName"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GroupName",
                "PlaceId",
                "ScheduledDate",
                "ScheduledTime",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "GroupId": {
                        "type": "string",
                        "description": "Unique identifier of the group"
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name of the group"
                      },
                      "ContactsCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Count of the contacts contained in the group"
                      }
                    }
                  },
                  "description": "Response data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates success or failure"
                },
                "Error": {
                  "type": "string",
                  "description": "Describes the error"
                }
              }
            }
          }
        },
        "summary": "Get Groups",
        "description": "Get list of Groups",
        "operationId": "GetGroups",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/api/places": {
      "get": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "PlaceId": {
                        "type": "string",
                        "description": "Unique identifier of the place"
                      },
                      "AccountId": {
                        "type": "string",
                        "description": "Unique identifier of the account related to the place"
                      },
                      "GooglePlaceId": {
                        "type": "string",
                        "description": "Google Place identifier of the place"
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name of the place"
                      },
                      "CreatedAt": {
                        "type": "string",
                        "description": "Date and time when the place was saved in the system"
                      }
                    }
                  },
                  "description": "Response data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates success or failure"
                },
                "Error": {
                  "type": "string",
                  "description": "Describes the error"
                }
              }
            }
          }
        },
        "summary": "Get Places",
        "description": "Get list of places",
        "operationId": "GetPlaces",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/api/messages/sendmessagesinglecontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the sent message, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to a contact",
        "description": "Send text message to your Power Textor Contact.",
        "operationId": "SendTextToAContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose Contact Name from the dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduletextmulticontacts": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message, if any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total numbers of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule text (SMS) messages for multiple contacts",
        "description": "Schedule bulk text messages to multiple contacts, by configuring date and time settings when the text message should be sent.",
        "operationId": "ScheduleTextToMultipleContacts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple Contact Names from Dropdown"
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                }
              },
              "required": [
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendereviewsinglecontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "MessageId": {
                      "type": "string",
                      "description": "ID of the message associated with sent message.",
                      "title": "MessageId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "ReferenceId": {
                      "type": "string",
                      "description": "ID of the reference associated with sent message, if any.",
                      "title": "ReferenceId"
                    },
                    "Direction": {
                      "type": "string",
                      "description": "Direction defines whether message is incoming text message or outgoing text message.",
                      "title": "Direction"
                    },
                    "From": {
                      "type": "string",
                      "description": "Phone number of the sender",
                      "title": "From"
                    },
                    "To": {
                      "type": "string",
                      "description": "Phone number of the receiver",
                      "title": "To"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "Rating": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Feedback from the customer. if any",
                      "title": "Rating"
                    },
                    "Segments": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of segments the message was divided into.",
                      "title": "Segments"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Deleted": {
                      "type": "boolean",
                      "description": "Indicates whether message is deleted or not.  True if deleted otherwise false",
                      "title": "Deleted",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "Account": {
                      "type": "object",
                      "properties": {
                        "AccountId": {
                          "type": "string",
                          "description": "ID of the account associated with sent message.",
                          "title": "AccountId"
                        },
                        "Name": {
                          "type": "string",
                          "description": "Name of contacts",
                          "title": "Name"
                        },
                        "ServicePhone": {
                          "type": "string",
                          "description": "Service phone associated with sent message",
                          "title": "ServicePhone"
                        },
                        "StripeCustomerId": {
                          "type": "string",
                          "description": "Stripe Customer Id associated with the sent message",
                          "title": "StripeCustomerId"
                        },
                        "StripeSubscriptionId": {
                          "type": "string",
                          "description": "Stripe subscription Id associated with the sent message",
                          "title": "StripeSubscriptionId"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Sent status of the message.",
                          "title": "Status"
                        },
                        "CreatedAt": {
                          "type": "string",
                          "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                          "title": "CreatedAt"
                        }
                      },
                      "description": "Account"
                    },
                    "Contact": {
                      "type": "object",
                      "properties": {
                        "ContactId": {
                          "type": "string",
                          "description": "ID of the contact associated with sent message.",
                          "title": "ContactId"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Phone number of the contact associated with the message",
                          "title": "Phone"
                        },
                        "Name": {
                          "type": "string",
                          "description": "Name of contacts",
                          "title": "Name"
                        },
                        "WelcomeSent": {
                          "type": "boolean",
                          "description": "Indicates whether welcome message has been sent to this contact or not. True if sent otherwise false.",
                          "title": "WelcomeSent",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "Status": {
                          "type": "string",
                          "description": "Sent status of the message.",
                          "title": "Status"
                        },
                        "Groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "GroupId": {
                                "type": "string",
                                "description": "ID of the group associated with sent message. If any",
                                "title": "GroupId"
                              },
                              "Name": {
                                "type": "string",
                                "description": "Name of contacts",
                                "title": "Name"
                              },
                              "ContactsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Total numbers of receivers",
                                "title": "ContactsCount"
                              }
                            }
                          },
                          "description": "Groups"
                        }
                      },
                      "description": "Contact"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to a contact",
        "description": "Send review text message to a Power Textor contact to get feedback of a customer. Send pin location of your business or service area within the text message.",
        "operationId": "SendReviewSingleContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose Contact Name from Dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GooglePlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GooglePlaceId",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendereviewmulticontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to multiple contacts",
        "description": "Send review text messages to Power Textor contacts to get feedback from customers. Send pin location of your business or service area within the text messages.",
        "operationId": "SendReviewTextMultipleContacts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple Contact Names from Dropdown"
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GooglePlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "GooglePlaceId",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendreminderssinglecontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to a contact",
        "description": "Schedule an event reminder to a Power Textor contact by specifying event date. Provide the number of days before the event day and the time when the text should be sent.",
        "operationId": "SendTextMessageEventReminderToAContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose Contact Name from the dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Text Time"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "Day",
                "EventDate",
                "Time",
                "To",
                "ReminderText"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendremindersmulticontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total numbers of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to multiple contacts",
        "description": "Schedule bulk event reminders to Power Textor contacts by specifying event date. Provide the number of days before the event day and the time when the texts should be sent.",
        "operationId": "SendTextMessageEventReminderToMultipleContacts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple Contact Names from Dropdown"
                  },
                  "description": "To"
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Text Time"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "Day",
                "EventDate",
                "Time",
                "To",
                "ReminderText"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendremindertogroups": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to multiple groups",
        "description": "Schedule bulk event reminders to Power Textor group(s) by specifying event date. Provide the number of days before the event day and the time when the texts should be sent.",
        "operationId": "SendTextMessageEventReminderToGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "GroupName": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "To",
                    "x-ms-dynamic-values": {
                      "operationId": "GetGroups",
                      "value-path": "GroupId",
                      "value-collection": "Data",
                      "value-title": "Name"
                    },
                    "description": "Choose Multiple group Names from Dropdown"
                  },
                  "description": "GroupName"
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Text Time"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "Day",
                "EventDate",
                "GroupName",
                "Time",
                "ReminderText"
              ]
            }
          }
        ]
      }
    },
    "/api/contacts": {
      "get": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ContactId": {
                        "type": "string",
                        "description": "Unique identifier of the contact"
                      },
                      "Phone": {
                        "type": "string",
                        "description": "Phone number of the contact"
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name of the contact"
                      },
                      "WelcomeSent": {
                        "type": "boolean",
                        "description": "Indicates whether a welcome message has yet been sent to the contact or not"
                      },
                      "Status": {
                        "type": "string",
                        "description": "Status of the contact"
                      },
                      "Groups": {
                        "type": "string",
                        "description": "Groups the contact belongs to"
                      }
                    }
                  },
                  "description": "Response data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates success or failure"
                },
                "Error": {
                  "type": "string",
                  "description": "Describes the error"
                }
              }
            }
          }
        },
        "summary": "Get Contacts",
        "description": "Get list of contacts",
        "operationId": "GetContacts",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/api/messages/sendsimple": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "IsReminder"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Success"
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Message"
                    }
                  },
                  "description": "Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to a number",
        "description": "Send text message to a number directly, without specifying name of the user , while the contact is automatically created in Power Textor.",
        "operationId": "SendTextMessageToANumber",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduledsingleGroupreview": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message for a group",
        "operationId": "ScheduleReviewTextMessageForAGroup",
        "description": "Schedule review message for Power Textor group by specifying date and time on which the message should be sent. Send pin location of your business or service area within the text message.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose group name from Dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGroups",
                    "value-path": "GroupId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place Name",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "PlaceId",
                "ScheduledTime",
                "To",
                "ScheduledDate",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduletextsingleGroup": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "string",
                  "description": "Error messages associated with the sent message, if any.",
                  "title": "Error"
                }
              }
            }
          }
        },
        "summary": "Schedule text (SMS) messages for a group",
        "operationId": "ScheduleTextMessagesForAGroup",
        "description": "Schedule bulk text messages to group, by configuring date and time settings when the text message should be sent.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose group name from the dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGroups",
                    "value-path": "GroupId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendremindertosinglegroup": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to a group",
        "operationId": "SendTextEventReminderToAGroup",
        "description": "Schedule bulk event reminders to a Power Textor group by specifying event date. Provide the number of days before the event day and the time when the texts should be sent.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose group name from the dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGroups",
                    "value-path": "GroupId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "Day",
                "EventDate",
                "Time",
                "To",
                "ReminderText"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendreviewtosinglegroup": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to a group",
        "operationId": "SendReviewTextMessageToAGroup",
        "description": "Send review text message to a Power Textor group to get feedback of a customer. Send pin location of your business or service area within the text message.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose group name from Dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGroups",
                    "value-path": "GroupId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place Name",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "PlaceId",
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendsinglegroup": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name  of contact",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of recievers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to a group",
        "operationId": "SendTextMessageToAGroup",
        "description": "Send bulk text (SMS) message to a PowerTextor group at once.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Choose group name from the dropdown",
                  "title": "To",
                  "x-ms-dynamic-values": {
                    "operationId": "GetGroups",
                    "value-path": "GroupId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/creategroupsend": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to a new group",
        "description": "Create a new group to send text message using Power Textor while the group is automatically created and saved in Power Textor.",
        "operationId": "SendTextToANewGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Choose names of contacts from dropdown.",
                    "title": "Add Contacts",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    }
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "GroupName": {
                  "type": "string",
                  "description": "Set name of the group",
                  "title": "Group Name"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body",
                "GroupName"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduledcreategroupsend": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule a text (SMS) message for a new group",
        "description": "Create a new group and schedule a text message for the group using Power Textor in the same flow.",
        "operationId": "ScheduleTextForANewGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Choose names of contacts from dropdown.",
                    "title": "Add Contacts",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    }
                  },
                  "description": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "GroupName": {
                  "type": "string",
                  "description": "Set name of the group",
                  "title": "Group Name"
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Scheduled Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Scheduled Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "Body",
                "GroupName"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/creategroupremindersend": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups associated with the sent message, if any.",
                      "title": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to a new group",
        "description": "Create a group to send a text message event reminder using Power Textor while the group is automatically created and saved in Power Textor.",
        "operationId": "SendTextEventReminderToNewGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Choose names of contacts from dropdown.",
                    "title": "Add Contacts",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    }
                  },
                  "description": "To"
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "GroupName": {
                  "type": "string",
                  "description": "Set name of the group",
                  "title": "Group Name"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message.",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "Day",
                "EventDate",
                "Time",
                "To",
                "ReminderText",
                "GroupName"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendsimplewithName": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "Group Ids associated with the sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of receivers",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to a new contact",
        "operationId": "SendMessageToANewContact",
        "description": "Create a new contact, and send a text message to this contact using Power Textor in the same flow.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactName": {
                  "type": "string",
                  "description": "Enter name of the contact.",
                  "title": "Contact Name"
                },
                "ContactLastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                },
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "Contact Number"
                },
                "Message": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "Message"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/schedulereviewtextwithcontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "Group Ids associated with the sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message to a new contact",
        "operationId": "ScheduleReviewTextMessageToANewContact",
        "description": "Schedule text message to a new contact based on time and date using Power Textor while the contact is automatically created and saved in Power Textor.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactName": {
                  "type": "string",
                  "description": "Enter first name of the contact.",
                  "title": "Contact First Name"
                },
                "ContactLastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                },
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "Contact Number"
                },
                "ReviewText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GooglePlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "GooglePlaceId",
                "ScheduledDate",
                "ScheduledTime",
                "ReviewText"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/createcontactreviewsend": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contact",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to a new contact",
        "operationId": "SendReviewTextMessageToANewContact",
        "description": "Create a contact to send a review text message using Power Textor while the contact is automatically created in Power Textor.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactName": {
                  "type": "string",
                  "description": "Enter first name of the contact.",
                  "title": "Contact First Name"
                },
                "ContactLastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                },
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "Contact Number"
                },
                "ReviewText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "PlaceId",
                "ReviewText"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/creategroupschedulereview": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contacts",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule review text (SMS) message to a new group",
        "description": "Schedule text message to a new group based on time and date using Power Textor while the group is automatically created and saved in Power Textor.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Choose Contact Name from the dropdown",
                    "title": "Add Contacts",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    }
                  },
                  "description": "To"
                },
                "ReviewText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GroupName": {
                  "type": "string",
                  "description": "Set name of the group",
                  "title": "Group Name"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Schedule Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Schedule Time"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "PlaceId",
                "ScheduledDate",
                "ScheduledTime",
                "To",
                "ReviewText",
                "GroupName"
              ]
            }
          }
        ],
        "operationId": "ScheduleReviewToANewGroup"
      }
    },
    "/api/messages/creategroupreviewsend": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the sent message, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message.If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contacts associated with the message, If any",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send review text (SMS) message to a new group",
        "description": "Create a group to send a review text message using Power Textor while the group is automatically created and saved in Power Textor.",
        "operationId": "SendReviewToANewGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Choose names of contacts from dropdown.",
                    "title": "Add Contacts",
                    "x-ms-dynamic-values": {
                      "operationId": "GetContacts",
                      "value-path": "Phone",
                      "value-collection": "Data",
                      "value-title": "Name"
                    }
                  },
                  "description": "To"
                },
                "ReviewText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Review Text"
                },
                "GroupName": {
                  "type": "string",
                  "description": "Set name of the group",
                  "title": "Group Name"
                },
                "PlaceId": {
                  "type": "string",
                  "description": "Select Place name from dropdown to get feedback from customer",
                  "title": "Place",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPlaces",
                    "value-path": "GooglePlaceId",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "PlaceId",
                "To",
                "ReviewText",
                "GroupName"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/scheduletextwithname": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the sent message, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message. If any",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created.Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contacts associated with the message, If any",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          }
        },
        "summary": "Schedule a text (SMS) message for a new contact",
        "description": "Create a new contact and schedule a text message for the contact using Power Textor in the same flow.",
        "operationId": "ScheduleTextForANewContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactName": {
                  "type": "string",
                  "description": "Enter first name of the contact.",
                  "title": "Contact First Name"
                },
                "ContactLastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                },
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "Contact Number"
                },
                "Message": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ScheduledDate": {
                  "type": "string",
                  "description": "Select a date to send the text message on. Format should be MM/DD/YYYY",
                  "title": "Scheduled Date"
                },
                "ScheduledTime": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Scheduled Time (UTC)"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "ScheduledDate",
                "ScheduledTime",
                "Message"
              ]
            }
          }
        ]
      }
    },
    "/api/contacts/contactnew": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Availability status of the contact",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the action, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "ContactId": {
                      "type": "string",
                      "description": "The unique identifier of the contact",
                      "title": "ContactId"
                    },
                    "Phone": {
                      "type": "string",
                      "description": "Phone number of the contact",
                      "title": "Phone"
                    },
                    "Name": {
                      "type": "string",
                      "description": "Name of the contact",
                      "title": "Name"
                    },
                    "WelcomeSent": {
                      "type": "boolean",
                      "description": "Indicates whether welcome message has been sent to this contact or not. True if sent otherwise false.",
                      "title": "WelcomeSent",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Status": {
                      "type": "string",
                      "description": "Availability status of the contact",
                      "title": "Status"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contact",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of contacts",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Create a Contact",
        "operationId": "CreateAContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Phone": {
                  "type": "string",
                  "description": "Enter Phone Number",
                  "title": "Contact Number"
                },
                "Name": {
                  "type": "string",
                  "description": "Enter first name of the contact. If the number already exists in PowerTextor, the contact name will be updated",
                  "title": "Contact First Name"
                },
                "LastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                }
              },
              "required": [
                "Phone"
              ]
            }
          }
        ],
        "description": "Create a new contact from a flow to save the contact in Power Textor"
      }
    },
    "/api/messages/sendreminderwithcontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the sent message, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contacts associated with the message, If any",
                            "title": "Name"
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Schedule text (SMS) message event reminder to a new contact",
        "operationId": "SendMessageEventReminderToANewContact",
        "description": "Create a contact to schedule a text message event reminder using Power Textor while the contact is automatically created in Power Textor.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactName": {
                  "type": "string",
                  "description": "Enter first name of the contact.",
                  "title": "Contact First Name"
                },
                "ContactLastName": {
                  "type": "string",
                  "description": "Enter last name of the contact.",
                  "title": "Contact Last Name"
                },
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "Contact Number"
                },
                "ReminderText": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Reminder Text"
                },
                "EventDate": {
                  "type": "string",
                  "description": "Select a date of event is going to be held. Format should be MM/DD/YYYY",
                  "title": "Event Date"
                },
                "Day": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of days before the event to send the text message",
                  "title": "Number of Days"
                },
                "Time": {
                  "type": "string",
                  "description": "Select time to send the text message at. Time should be in Coordinated Universal Time. UTC. Format HH:mm AM/PM",
                  "title": "Reminder Time"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate in the end of text message and User can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate in the end of text message",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "Day",
                "EventDate",
                "Time",
                "ReminderText"
              ]
            }
          }
        ]
      }
    },
    "/api/contacts/contactupdate": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Availability status of the contact",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the action, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "ContactId": {
                      "type": "string",
                      "description": "The unique identifier of the contact",
                      "title": "ContactId"
                    },
                    "Phone": {
                      "type": "string",
                      "description": "Phone number of contact",
                      "title": "Phone"
                    },
                    "Name": {
                      "type": "string",
                      "description": "Name of contact",
                      "title": "Name"
                    },
                    "WelcomeSent": {
                      "type": "boolean",
                      "description": "Indicates whether welcome message has been sent to this contact or not. True if sent otherwise false.",
                      "title": "WelcomeSent",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Status": {
                      "type": "string",
                      "description": "Availability status of the contact",
                      "title": "Status"
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "Group id associated with the contact, if any.",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of contact",
                            "title": "Name"
                          },
                          "IsVisible": {
                            "type": "boolean",
                            "description": "Indicate whether associated group is user created or system created. True, If group is created by user otherwise false",
                            "title": "IsVisible",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of contacts associated with this action",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Update a Power Textor Contact",
        "description": "Update the contact name of an existing contact in Power Textor. The contact name in Power Textor is changed to the new name as the flow runs and succeeds.",
        "operationId": "UpdateAPowerTextorContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Contact": {
                  "type": "string",
                  "description": "Select a contact",
                  "title": "Contact",
                  "x-ms-dynamic-values": {
                    "operationId": "GetContacts",
                    "value-path": "Phone",
                    "value-collection": "Data",
                    "value-title": "Name"
                  }
                },
                "UpdatedContactName": {
                  "type": "string",
                  "description": "Set the updated first name for the contact",
                  "title": "Updated Contact First Name"
                },
                "UpdatedContactLastName": {
                  "type": "string",
                  "description": "Set the last name for the contact.",
                  "title": "Updated Contact Last Name"
                },
                "UpdatedContactNumber": {
                  "type": "string",
                  "description": "Set the updated number for the contact",
                  "title": "Updated Contact Number"
                }
              },
              "required": [
                "Contact"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendtomulticontact": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates whether action run successfully or not. True if action run successfully otherwise false.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error messages associated with the sent message, if any.",
                      "title": "Message"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GroupId": {
                            "type": "string",
                            "description": "ID of the group associated with sent message. If any",
                            "title": "GroupId"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the contact",
                            "title": "Name"
                          },
                          "IsVisible": {
                            "type": "boolean",
                            "description": "Indicate whether contact's group id system created  or user created. True if created by user otherwise false.",
                            "title": "IsVisible",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "ContactsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Total number of receivers",
                            "title": "ContactsCount"
                          }
                        }
                      },
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers",
                      "title": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers who got message successfully",
                      "title": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total numbers of receivers to whom message does not reach",
                      "title": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "summary": "Send text (SMS) message to multiple numbers",
        "description": "Send SMS to multiple contact numbers directly while numbers are saved in Power Textor.",
        "operationId": "SendMessageToMultipleNumbers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ContactNumber": {
                  "type": "string",
                  "description": "Enter multiple comma separated contact numbers. E.g +1234590,+1236781,+1234580",
                  "title": "Contact Numbers"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate in the end of text message and User can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate in the end of text message",
                  "title": "Reply STOP To Opt_Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "ContactNumber",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/twilio/registration": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "SmsSid": {
              "type": "string",
              "description": "SID of the sent message.",
              "title": "SmsSid"
            },
            "Body": {
              "type": "string",
              "description": "Body of the message.",
              "title": "Body"
            },
            "MessageStatus": {
              "type": "string",
              "description": "Sent status of the message.",
              "title": "MessageStatus"
            },
            "OptOutType": {
              "type": "string",
              "description": "It is an option for unsubscribing or leaving membership from a website",
              "title": "OptOutType"
            },
            "MessagingServiceSid": {
              "type": "string",
              "description": "Unique id of the messaging Service.",
              "title": "MessagingServiceSid"
            },
            "AccountSid": {
              "type": "string",
              "description": "SID of the account associated with the sent message.",
              "title": "AccountSid"
            },
            "From": {
              "type": "string",
              "description": "Phone number from which the message was sent.",
              "title": "From"
            },
            "To": {
              "type": "string",
              "description": "Phone number to which the message was sent.",
              "title": "To"
            },
            "FromCity": {
              "type": "string",
              "description": "The city of the sender",
              "title": "FromCity"
            },
            "FromState": {
              "type": "string",
              "description": "The state or province of the sender",
              "title": "FromState"
            },
            "FromZip": {
              "type": "string",
              "description": "The postal code of the sender",
              "title": "FromZip"
            },
            "FromCountry": {
              "type": "string",
              "description": "The city of the caller",
              "title": "FromCountry"
            },
            "ToCity": {
              "type": "string",
              "description": "The receiver's city, such as \"FARMINGDALE\".",
              "title": "ToCity"
            },
            "ToState": {
              "type": "string",
              "description": "The state or province of receiver",
              "title": "ToState"
            },
            "ToZip": {
              "type": "string",
              "description": "The postal code of receiver",
              "title": "ToZip"
            },
            "ToCountry": {
              "type": "string",
              "description": "The receiver's country",
              "title": "ToCountry"
            }
          }
        },
        "description": "The webhook response contains details of the SMS message received on the number configured in the custom connector connection."
      },
      "post": {
        "responses": {},
        "x-ms-trigger": "single",
        "summary": "When a text (SMS) message is received",
        "description": "This operation triggers a flow when a new text message arrives. The flow gets information of sender number, text message body, sender location and address details, recipient number, and recipient location and address details.",
        "operationId": "ProductionWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "WebHookUri": {
                  "type": "string",
                  "description": "Webhook URI for registration of webhook. This parameter is passed dynamically whenever a new flow is created using this trigger.",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "WebHookUri"
                }
              },
              "required": [
                "WebHookUri"
              ]
            }
          }
        ]
      }
    },
    "/api/twilio/{RegistrationId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "description": "Indicates success or failure.",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "string",
                  "description": "Error messages associated with the action, if any.",
                  "title": "Error"
                }
              }
            }
          }
        },
        "operationId": "InternalActionForWebhookDeletion",
        "summary": "Action for Webhook Deletion",
        "description": "This action is internal and will be executed when a flow is deleted. It will delete the webhook subscription.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "RegistrationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Webhook registration Id created by the system whenever new flow is created by the user"
          }
        ]
      }
    },
    "/api/messages/sendsimpletext": {
      "post": {
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "IsReminder"
                    },
                    "Groups": {
                      "type": "string",
                      "description": "Groups"
                    },
                    "Reach": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Reach"
                    },
                    "SentCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "SentCount"
                    },
                    "UndeliveredCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "UndeliveredCount"
                    }
                  },
                  "description": "Data"
                },
                "Success": {
                  "type": "boolean",
                  "description": "Success"
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Status"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Message"
                    }
                  },
                  "description": "Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "description": "Send text message to a number directly, without specifying name of the user , while the contact is automatically created in PowerTextor.",
        "summary": "Send a text (SMS) message",
        "operationId": "SendTextMessage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "To": {
                  "type": "string",
                  "description": "Enter a number to send the Text message to.",
                  "title": "To"
                },
                "Body": {
                  "type": "string",
                  "description": "Message body",
                  "title": "Text Message"
                },
                "ReplySTOPToOptOut": {
                  "type": "boolean",
                  "description": "IF 'Yes' THEN populate 'STOP to opt out' in the end of text message, and the contact can unsubscribe to text messages by replying 'STOP' to the text message. If the user replies to the text message with 'START', he/she gets subscribed back to the service again and starts receiving the text messages again. IF 'No' THEN do not populate the unsubscribe text in the end of the text message.",
                  "title": "Reply STOP To Opt-Out",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "To",
                "Body"
              ]
            }
          }
        ]
      }
    },
    "/api/messages/sendmmsgroup": {
      "post": {
        "summary": "Send an MMS to a Group",
        "tags": [
          "Misc"
        ],
        "operationId": "SendMMSGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "GroupName",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "To",
            "description": "Choose a group from the dropdown",
            "x-ms-dynamic-values": {
              "operationId": "GetGroups",
              "value-path": "GroupId",
              "value-collection": "Data",
              "value-title": "Name"
            }
          },
          {
            "name": "Message",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Type your message",
            "x-ms-summary": "Text Message"
          },
          {
            "name": "Attachment",
            "in": "formData",
            "required": true,
            "x-ms-summary": "File Content",
            "type": "file",
            "description": "Attachment"
          },
          {
            "name": "ReplySTOPToOptOut",
            "in": "formData",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Reply STOP To Opt-Out",
            "description": "Select YES/NO from the dropdown to add Reply STOP to Opt-out in the end of the text message."
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "description": "Send an MMS to a PowerTextor group at once."
      }
    },
    "/api/messages/sendmmsnewcontact": {
      "post": {
        "summary": "Send an MMS",
        "tags": [
          "Misc"
        ],
        "operationId": "SendMMSNewContact",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "ContactNumber",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Enter a number to send the MMS to",
            "x-ms-summary": "Contact Number"
          },
          {
            "name": "ContactName",
            "in": "formData",
            "type": "string",
            "description": "Enter a Contact's first name",
            "x-ms-summary": "Contact First Name"
          },
          {
            "name": "ContactLastName",
            "in": "formData",
            "type": "string",
            "description": "Enter a Contact's last name.",
            "x-ms-summary": "Contact Last Name"
          },
          {
            "name": "Attachment",
            "in": "formData",
            "x-ms-summary": "File Content",
            "required": true,
            "type": "file",
            "description": "Attachment"
          },
          {
            "name": "Message",
            "in": "formData",
            "required": true,
            "x-ms-summary": "Text Message",
            "type": "string",
            "description": "Type your message"
          },
          {
            "name": "ReplySTOPToOptOut",
            "in": "formData",
            "required": false,
            "type": "boolean",
            "description": "Select YES/NO from the dropdown to add Reply STOP to Opt-out in the end of the text message.",
            "x-ms-summary": "Reply STOP To Opt-out"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "description": "Send an MMS directly to a phone number"
      }
    },
    "/api/messages/sendmmscontacts": {
      "post": {
        "summary": "Send an MMS to a Contact",
        "tags": [
          "Misc"
        ],
        "operationId": "SendMMSContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "To",
            "in": "formData",
            "required": true,
            "x-ms-summary": "To",
            "description": "Choose a contact from the dropdown",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetContacts",
              "value-path": "Phone",
              "value-collection": "Data",
              "value-title": "Name"
            }
          },
          {
            "name": "Message",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Type your text message",
            "x-ms-summary": "Text Message"
          },
          {
            "name": "Attachment",
            "in": "formData",
            "x-ms-summary": "File Content",
            "required": true,
            "type": "file",
            "description": "Attachment"
          },
          {
            "name": "ReplySTOPToOptOut",
            "in": "formData",
            "required": false,
            "type": "boolean",
            "description": "Select YES/NO from the dropdown to add Reply STOP to Opt-out in the end of the text message.",
            "x-ms-summary": "Reply STOP To Opt-out"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "Success": {
                  "type": "boolean",
                  "title": "Success",
                  "enum": [
                    true,
                    false
                  ]
                },
                "Error": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "title": "Status"
                    },
                    "Message": {
                      "type": "string"
                    }
                  },
                  "description": "Error"
                },
                "Data": {
                  "type": "object",
                  "properties": {
                    "CampaignId": {
                      "type": "string",
                      "description": "ID of the campaign associated with sent message.",
                      "title": "CampaignId"
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with sent message.",
                      "title": "AccountId"
                    },
                    "Type": {
                      "type": "string",
                      "description": "Type defines the category in which sent message lies i.e., Message or Review",
                      "title": "Type"
                    },
                    "Body": {
                      "type": "string",
                      "description": "Body of the message.",
                      "title": "Body"
                    },
                    "SendDate": {
                      "type": "string",
                      "description": "Date and time on which message should be deliverd. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "SendDate"
                    },
                    "PlaceId": {
                      "type": "string",
                      "description": "ID of the place associated with sent message, if any.",
                      "title": "PlaceId"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Sent status of the message.",
                      "title": "Status"
                    },
                    "CreatedAt": {
                      "type": "string",
                      "description": "Date and time on which message is created. Example: yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
                      "title": "CreatedAt"
                    },
                    "CreatedBy": {
                      "type": "string",
                      "description": "ID of the sender.",
                      "title": "CreatedBy"
                    },
                    "IsReminder": {
                      "type": "boolean",
                      "description": "Indicated whether sent message belongs to reminders or not. True if it belongs to reminders otherwise false.",
                      "title": "IsReminder",
                      "enum": [
                        true,
                        false
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. See response body for more details"
          }
        },
        "description": "Send an MMS to your PowerTextor Contact."
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "ApiKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://powertextor.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://powertextor.com/legal/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Marketing;Communication"
    }
  ]
}