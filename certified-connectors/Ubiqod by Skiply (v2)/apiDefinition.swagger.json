{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Ubiqod by Skiply (v2)",
    "description": "Ubiqod provides a simple and powerful platform to connect your Skiply IoT buttons and Qods to third party platforms. This connector triggers a flow every time data is sent by any of the QR codes.",
    "contact": {
      "name": "Skiply Support",
      "url": "https://www.skiply.eu/docs/?utm_source=PowerAutomate",
      "email": "support@ubiqod.com"
    }
  },
  "host": "api.ubiqod.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/badges/{badgeListId}/codes": {
      "delete": {
        "summary": "Delete Badges from Badge List",
        "description": "Delete existing badges from an existing badge list",
        "operationId": "DeleteCodesFromABadgeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "badgeListId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a Badge list ID.",
            "x-ms-summary": "Deletes codes from the specified badge list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Badge IDs to delete",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Badge ID",
                "title": "Badge ID"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "post": {
        "summary": "Adds new badges to badge list",
        "description": "Add new badges to an existing badge list",
        "consumes": [
          "application/json"
        ],
        "x-ms-summary": "Adds new badges to the specified list",
        "operationId": "AddNewBadgesToTheBadgeList",
        "parameters": [
          {
            "name": "badgeListId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Adds new badges to the specified list",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            },
            "description": "Choose a Badge list ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Badge to add",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Badge Label",
                        "title": "Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Badge ID",
                        "title": "Badge ID"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {},
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "label",
                      "pin"
                    ]
                  },
                  "description": "list"
                }
              },
              "required": [
                "list"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update existing badges from a badge list",
        "description": "Update existing badges from a badge list",
        "operationId": "UpdateExistingCodesFromABadgeList",
        "x-ms-summary": "Updates codes from the specified badge list",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "badgeListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Choose a Badge list ID",
            "x-ms-summary": "Updates codes from the specified badge list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Badges to update",
            "in": "body",
            "required": true,
            "x-ms-summary": "Updates codes from the specified badge list",
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "label",
                        "title": "Badge Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Badge ID",
                        "title": "Badge ID"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {
                          "additionalProp1": {
                            "type": "string",
                            "description": "additionalProp",
                            "title": "External references"
                          }
                        },
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "label",
                      "pin"
                    ]
                  },
                  "description": "list"
                }
              },
              "required": [
                "list"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/badges/{badgeListId}": {
      "get": {
        "summary": "Get a Badge list from its ID",
        "description": "Fetch one badge list by ID",
        "operationId": "GetABadgeListFromItsId",
        "x-ms-summary": "Fetches a badge list by its ID",
        "parameters": [
          {
            "name": "badgeListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter a Badge list ID",
            "x-ms-summary": "Fetches a badge list by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "delete": {
        "summary": "Delete a badge list",
        "description": "Delete a badge list via its ID",
        "operationId": "DeleteABadgeListViaItsId",
        "x-ms-summary": "Deletes a badge list by its ID",
        "parameters": [
          {
            "name": "badgeListId",
            "default": "<uuid>",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Enter a Badge list ID",
            "x-ms-summary": "Deletes a badge list by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              },
              "example": {
                "message": "Successfully deleted 1 badge list."
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a badge list",
        "description": "Update a badge list",
        "operationId": "UpdateABadgeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "badgeListId",
            "in": "path",
            "type": "string",
            "required": true,
            "x-ms-summary": "Updates a badge list by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            },
            "description": "Enter a Badge list ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "label"
                }
              },
              "default": {
                "label": "<string>"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/badges/": {
      "get": {
        "summary": "Get all Badge lists associated with your account",
        "description": "Get all Badge lists associated with your account",
        "operationId": "GetAllBadgeListsAssociatedWithYourAccount",
        "parameters": [
          {
            "description": "The number of items to skip before starting to collect the result set. Default is 0.",
            "x-ms-summary": "Items to skip before collecting results. Default is 0.",
            "name": "limit",
            "default": "100",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "description": "The number of items to return. Default is 100.",
            "x-ms-summary": "The number of items to return. Default is 100.",
            "name": "offset",
            "default": "0",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of Badge lists",
            "schema": {
              "description": "List of Badge lists",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BadgeList"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        },
        "x-ms-visibility": "advanced"
      },
      "post": {
        "summary": "Create a badge list",
        "description": "Create a new badge list",
        "operationId": "CreateOneBadgeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Badge",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Badge list Label",
                  "title": "Badge list Label"
                },
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "badge Label",
                        "title": "Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Badge ID",
                        "title": "Badge ID"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {
                          "additionalProp1": {
                            "type": "string",
                            "description": "additionalProp",
                            "title": "External references"
                          }
                        },
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "pin",
                      "label"
                    ]
                  },
                  "description": "list"
                }
              },
              "required": [
                "list",
                "label"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created badge list",
            "schema": {
              "$ref": "#/definitions/BadgeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/pincodes/{pinCodeListId}/codes": {
      "delete": {
        "summary": "Delete codes from pin code list",
        "description": "Delete existing codes from an existing pin code list",
        "operationId": "DeleteCodesFromAPinCodeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pinCodeListId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a Pin code list",
            "x-ms-summary": "Deletes codes from the specified pin code list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Pin codes to delete",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Pin Code",
                "title": "Code"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "post": {
        "summary": "Add new codes to pin code list",
        "description": "Add new codes to an existing pin code list",
        "operationId": "AddNewCodesToThePinCodeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pinCodeListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pin codes to add",
            "x-ms-summary": "Adds codes to the specified pin code list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Pin codes to add",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Pin Code Label",
                        "title": "Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Code",
                        "title": "Code"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {
                          "additionalProp": {
                            "type": "string",
                            "description": "additionalProp",
                            "title": "External references"
                          }
                        },
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "label",
                      "pin"
                    ]
                  },
                  "description": "list"
                }
              },
              "required": [
                "list"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update codes from a pin code list",
        "description": "Update existing codes from an existing pin code list",
        "operationId": "UpdateExistingCodesFromAPinCodeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pinCodeListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Choose a Pin code list",
            "x-ms-summary": "Updates codes from the specified pin code list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Pin codes to update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "label",
                        "title": "Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Code",
                        "title": "Code"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {
                          "additionalProp": {
                            "type": "string",
                            "description": "additionalProp",
                            "title": "External references"
                          }
                        },
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "label",
                      "pin"
                    ]
                  },
                  "description": "list"
                }
              },
              "required": [
                "list"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/pincodes/{pinCodeListId}": {
      "get": {
        "summary": "Get pin code list data",
        "description": "Fetch one pin code list by ID",
        "operationId": "GetAPinCodeListFromItsId",
        "parameters": [
          {
            "name": "pinCodeListId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a Pin code list",
            "x-ms-summary": "Fetches a pin code list by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a pin code list",
        "description": "Delete a pin code list via its ID",
        "operationId": "DeleteAPinCodeListViaItsId",
        "parameters": [
          {
            "name": "pinCodeListId",
            "default": "<uuid>",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a Pin code list",
            "x-ms-summary": "Deletes a pin code list by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a pin code list",
        "description": "Update a pin code list",
        "operationId": "UpdateAPinCodeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pinCodeListId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a Pin code list",
            "x-ms-summary": "Updates a pin code list",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "label"
                }
              },
              "default": {
                "label": "<string>"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/pincodes/": {
      "get": {
        "summary": "Get all PIN code lists associated with your account",
        "description": "Get all PIN code lists associated with your account",
        "operationId": "GetAllPinCodeListsAssociatedWithYourAccount",
        "parameters": [
          {
            "description": "The number of items to return. Default is 100.",
            "x-ms-summary": "The number of items to return. Default is 100.",
            "name": "limit",
            "default": "100",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "description": "The number of items to skip before starting to collect the result set. Default is 0.",
            "x-ms-summary": "Number of items to skip before collecting results. Default is 0.",
            "name": "offset",
            "default": "0",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PinCodeList"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "post": {
        "summary": "Create a pin code list",
        "description": "Create a new pin code list",
        "operationId": "CreateOnePinCodeList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Pin codes List",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Pin code list Label",
                  "title": "Pin code list Label"
                },
                "list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Label",
                        "title": "Label"
                      },
                      "pin": {
                        "type": "string",
                        "description": "Code",
                        "title": "Code"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {},
                        "description": "externalReferences"
                      }
                    },
                    "required": [
                      "label",
                      "pin"
                    ]
                  },
                  "description": "list"
                }
              },
              "default": {
                "label": "<string>",
                "list": [
                  {
                    "label": "<string>",
                    "pin": "<string>",
                    "externalReferences": {
                      "consectetur_8": "<string>",
                      "aliquip_92e": "<string>",
                      "ut_4bb": "<string>",
                      "veniamc1": "<string>",
                      "deserunt69": "<string>"
                    }
                  },
                  {
                    "label": "<string>",
                    "pin": "<string>",
                    "externalReferences": {
                      "ut_4bb": "<string>",
                      "veniamc1": "<string>",
                      "deserunt69": "<string>"
                    }
                  }
                ]
              },
              "required": [
                "label",
                "list"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/PinCodeList"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/sites/{siteId}": {
      "get": {
        "summary": "Get site data",
        "description": "Fetch one site by ID",
        "operationId": "GetASiteFromItsId",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a site",
            "x-ms-summary": "Fetches a site by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllSitesAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a site",
        "description": "Delete a site via its ID",
        "operationId": "DeleteASiteViaItsId",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Choose a site",
            "x-ms-summary": "Deletes a site by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllSitesAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a site",
        "description": "Update a site",
        "operationId": "UpdateASite",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Choose a site",
            "x-ms-summary": "Updates a site by its ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllSitesAssociatedWithYourAccount",
              "value-path": "id",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Site",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Site Label",
                  "title": "Site Label"
                },
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "float",
                      "description": "Latitude",
                      "title": "Latitude"
                    },
                    "longitude": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Longitude",
                      "title": "Longitude"
                    }
                  },
                  "description": "coordinates"
                },
                "distanceMargin": {
                  "type": "number",
                  "format": "float",
                  "description": "Site Geofencing Validation Distance",
                  "title": "Site Geofencing Validation Distance"
                },
                "externalReferences": {
                  "type": "object",
                  "properties": {
                    "additionalProp": {
                      "type": "string",
                      "description": "additionalProp"
                    }
                  },
                  "description": "externalReferences"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/sites/bulk": {
      "delete": {
        "summary": "Delete Multiple Sites",
        "description": "Delete sites in bulk",
        "operationId": "DeleteSitesInBulkViaTheirId",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Sites List IDs",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Enter a Site ID",
                "title": "Site"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "type": "object",
              "description": "Not Found",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "error": {
                  "type": "string",
                  "example": "Not found"
                },
                "message": {
                  "type": "string",
                  "example": "2 trackers not found."
                },
                "slugs": {
                  "type": "array",
                  "description": "The list of invalid slugs.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Multiple Sites",
        "description": "Create Multiple New Sites",
        "operationId": "CreateSitesInBulk",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Sites List",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sites": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Site Label",
                        "title": "Site Label"
                      },
                      "coordinates": {
                        "type": "object",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "format": "float",
                            "description": "Latitude",
                            "title": "Latitude"
                          },
                          "longitude": {
                            "type": "number",
                            "format": "float",
                            "description": "Longitude",
                            "title": "Longitude"
                          }
                        },
                        "description": "coordinates",
                        "required": [
                          "latitude",
                          "longitude"
                        ]
                      },
                      "distanceMargin": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Site Geofencing Distance Margin (meters)",
                        "title": "Site Geofencing Distance Margin (meters)"
                      },
                      "externalReferences": {
                        "type": "object",
                        "properties": {
                          "additionalProp1": {
                            "type": "string",
                            "description": "additionalProp1",
                            "title": "External references",
                            "x-ms-visibility": "internal"
                          }
                        },
                        "description": "externalReferences"
                      },
                      "trackers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "trackers"
                      }
                    },
                    "required": [
                      "coordinates",
                      "label"
                    ]
                  },
                  "description": "sites"
                }
              },
              "required": [
                "sites"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Site"
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "type": "object",
              "description": "Not Found",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "description": "HTTP status code",
                  "example": 404
                },
                "error": {
                  "type": "string",
                  "description": "Error message",
                  "example": "Not found"
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message explaining the reason for the error",
                  "example": "Requested resource was not found."
                },
                "slugs": {
                  "type": "array",
                  "description": "The list of invalid slugs.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sites/": {
      "get": {
        "summary": "Get all sites associated with your account",
        "description": "Get all sites associated with your account",
        "operationId": "GetAllSitesAssociatedWithYourAccount",
        "parameters": [
          {
            "description": "The number of items to return. Default is 100.",
            "x-ms-summary": "The number of items to return. Default is 100.",
            "name": "limit",
            "default": "100",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "description": "The number of items to skip before starting to collect the result set. Default is 0.",
            "x-ms-summary": "Skip items before collecting results. Default is 0.",
            "name": "offset",
            "default": "0",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Site"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "post": {
        "summary": "Create a site",
        "description": "Create a new site",
        "operationId": "CreateOneSite",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Site",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Site Label",
                  "title": "Site Label"
                },
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "float",
                      "description": "Latitude",
                      "title": "Latitude"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "float",
                      "description": "Longitude",
                      "title": "Longitude"
                    }
                  },
                  "description": "coordinates",
                  "required": [
                    "latitude",
                    "longitude"
                  ]
                },
                "distanceMargin": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Site Geofencing Validation Distance (meters)",
                  "title": "distanceMargin"
                },
                "externalReferences": {
                  "type": "object",
                  "properties": {
                    "additionalProp1": {
                      "type": "string",
                      "description": "additionalProp1"
                    }
                  },
                  "description": "externalReferences"
                },
                "trackers": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Trackers List",
                    "title": "Trackers List"
                  },
                  "description": "trackers"
                }
              },
              "required": [
                "coordinates",
                "label"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "type": "object",
              "properties": {
                "slugs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "slugs"
                },
                "statusCode": {
                  "type": "string",
                  "description": "statusCode"
                },
                "error": {
                  "type": "string",
                  "description": "error"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          }
        }
      }
    },
    "/trackers/{trackerSlug}": {
      "get": {
        "summary": "Get a tracker data",
        "description": "Get a tracker from its slug (Scan URL or Serial Number)",
        "operationId": "GetATrackerFromItsSlug",
        "parameters": [
          {
            "name": "trackerSlug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tracker Slug",
            "x-ms-summary": "Fetches a tracker by its slug",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTrackersAssociatedWithYourAccount",
              "value-path": "slug",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Tracker"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a QR Code Tracker (QOD)",
        "description": "Delete a tracker via its slug (Scan URL or Serial Number)",
        "operationId": "DeleteATrackerViaItsSlug",
        "parameters": [
          {
            "name": "trackerSlug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tracker Slug",
            "x-ms-summary": "Deletes a tracker by its slug",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTrackersAssociatedWithYourAccount",
              "value-path": "slug",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a tracker",
        "description": "Update a tracker",
        "operationId": "UpdateATracker",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trackerSlug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tracker Slug",
            "x-ms-summary": "Updates a tracker by its slug",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTrackersAssociatedWithYourAccount",
              "value-path": "slug",
              "value-title": "label",
              "parameters": {
                "limit": "100",
                "offset": "0"
              }
            }
          },
          {
            "name": "Tracker",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Tracker Label",
                  "title": "Tracker Label"
                },
                "site_id": {
                  "type": "string",
                  "description": "Choose a Site",
                  "title": "Site",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllSitesAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label",
                    "parameters": {
                      "limit": "100",
                      "offset": "0"
                    }
                  }
                },
                "interface_id": {
                  "type": "string",
                  "description": "Choose an Interface",
                  "title": "Interface",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllInterfaceAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label"
                  }
                },
                "dispatches": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Dispatch List",
                    "title": "Dispatch List"
                  },
                  "description": "dispatches"
                }
              },
              "default": {
                "label": "<string>",
                "site_id": "<uuid>",
                "interface_id": "<uuid>",
                "dispatches": [
                  "<uuid>",
                  "<uuid>"
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Tracker"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/trackers/bulk": {
      "delete": {
        "summary": "Delete multiple QR Code tracker (QOD)",
        "description": "Delete trackers in bulk via their slug (Scan URL or Serial Number)",
        "operationId": "DeleteTrackersInBulkViaTheirSlug",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Trackers List",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Tracker",
                "title": "Tracker"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "properties": {
                "slugs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "slugs"
                },
                "statusCode": {
                  "type": "string",
                  "description": "statusCode"
                },
                "error": {
                  "type": "string",
                  "description": "error"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                }
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "404": {
            "description": "404",
            "schema": {
              "type": "object",
              "description": "Tracker not found",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "description": "HTTP status code",
                  "example": 404
                },
                "error": {
                  "type": "string",
                  "description": "Error message",
                  "example": "Not found"
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message explaining the reason for the error",
                  "example": "Specified tracker could not be found."
                },
                "slugs": {
                  "type": "array",
                  "description": "The list of invalid slugs.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create multiple QR Code Trackers (QOD)",
        "description": "Create QR Code trackers (QOD) in bulk with the same configuration",
        "operationId": "CreateQodTrackersInBulkWithTheSameConfiguration",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Trackers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Dispatch List",
                    "title": "Dispatch List"
                  },
                  "description": "labels"
                },
                "site_id": {
                  "type": "string",
                  "description": "Choose a site",
                  "title": "Site",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllSitesAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label",
                    "parameters": {
                      "limit": "100",
                      "offset": "0"
                    }
                  }
                },
                "interface_id": {
                  "type": "string",
                  "description": "Choose an interface",
                  "title": "Interface",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllInterfaceAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label"
                  }
                },
                "dispatches": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Enter Tracker Label",
                    "title": "Trackers Labels"
                  },
                  "description": "dispatches"
                }
              },
              "default": {
                "labels": [
                  "<string>"
                ],
                "site_id": "<uuid>",
                "interface_id": "<uuid>",
                "dispatches": [
                  "<uuid>",
                  "<uuid>"
                ]
              },
              "required": [
                "dispatches"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tracker"
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/trackers/": {
      "get": {
        "summary": "Get all trackers associated with your account",
        "description": "Get all trackers associated with your account",
        "operationId": "GetAllTrackersAssociatedWithYourAccount",
        "parameters": [
          {
            "description": "The number of items to return. Default is 100.",
            "x-ms-summary": "The number of items to return. Default is 100.",
            "name": "limit",
            "default": "100",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "description": "The number of items to skip before starting to collect the result set. Default is 0.",
            "x-ms-summary": "Skip count before collecting results. Default is 0.",
            "name": "offset",
            "default": "0",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tracker"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      },
      "post": {
        "summary": "Create a QR Code Tracker (QOD)",
        "description": "Create a new QR Code tracker (QOD)",
        "operationId": "CreateOneQodTracker",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Tracker",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Tracker Label",
                  "title": "Label"
                },
                "site_id": {
                  "type": "string",
                  "description": "Choose a site",
                  "title": "Site",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllSitesAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label",
                    "parameters": {
                      "limit": "100",
                      "offset": "0"
                    }
                  }
                },
                "interface_id": {
                  "type": "string",
                  "description": "Choose an interface",
                  "title": "Interface",
                  "x-ms-dynamic-values": {
                    "operationId": "GetAllInterfaceAssociatedWithYourAccount",
                    "value-path": "id",
                    "value-title": "label"
                  }
                },
                "dispatches": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "Dispatch List",
                    "x-ms-dynamic-values": {
                      "operationId": "GetPowerAutomateDispatch",
                      "value-path": "id",
                      "value-title": "label"
                    }
                  },
                  "description": "dispatches"
                }
              },
              "default": {
                "label": "<string>",
                "site_id": "<uuid>",
                "interface_id": "<uuid>",
                "dispatches": [
                  "<uuid>",
                  "<uuid>"
                ]
              },
              "required": [
                "label"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Tracker"
            }
          },
          "400": {
            "description": "400",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/interfaces": {
      "get": {
        "summary": "Get all interfaces associated with your account",
        "description": "Retrieves a list of all interfaces associated with your account.",
        "operationId": "GetAllInterfaceAssociatedWithYourAccount",
        "responses": {
          "200": {
            "description": "A list of interfaces",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interface"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        }
      }
    },
    "/hooks/zapier/subscribe": {
      "x-ms-notification-content": {
        "description": "Data In",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "id"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  }
                }
              }
            }
          }
        },
        "summary": "Receive Data From Trackers",
        "description": "Trigger when a dispatch event is sent by Ubiqod (receiving data from trackers)",
        "operationId": "ReceiveDataFromTrackers",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hookUrl": {
                  "type": "string",
                  "description": "hookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "Webhook URL"
                },
                "dispatchType": {
                  "type": "string",
                  "description": "dispatchType",
                  "title": "Dispatch Type",
                  "default": "POWERAUTOMATE",
                  "x-ms-visibility": "internal"
                },
                "hookName": {
                  "type": "string",
                  "description": "hookName",
                  "title": "Dispatch Name",
                  "x-ms-visibility": "important"
                },
                "dispatchId": {
                  "type": "string",
                  "description": "Choose a hook",
                  "title": "Webhook",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPowerAutomateDispatch",
                    "value-path": "id",
                    "value-title": "label"
                  },
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "hookUrl",
                "dispatchType"
              ]
            }
          }
        ]
      }
    },
    "/dispatchs/": {
      "get": {
        "responses": {
          "200": {
            "description": "List of dispatchs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dispatch"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          },
          "403": {
            "description": "403",
            "schema": {
              "$ref": "#/definitions/HttpError"
            }
          }
        },
        "summary": "Retrieve Automation Dispatches",
        "description": "Fetches details of automation dispatches.",
        "operationId": "GetPowerAutomateDispatch",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "POWERAUTOMATE"
          }
        ],
        "x-ms-visibility": "internal"
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://app.ubiqod.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.skiply.eu/en/general-terms-and-conditions/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Internet of Things"
    }
  ],
  "definitions": {
    "HttpError": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "description": "The HTTP status code."
        },
        "error": {
          "type": "string",
          "description": "The HTTP error name."
        },
        "message": {
          "type": "string",
          "description": "A human readable error message."
        }
      },
      "example": {
        "statusCode": 400,
        "error": "Bad Request",
        "message": "Bad Request"
      }
    },
    "PaginationQuerystring": {
      "type": "object",
      "properties": {
        "limit": {
          "description": "Limit the number of items returned. Set a value between 1 and 1000. Default: 100.",
          "type": "integer",
          "default": 100,
          "minimum": 1,
          "maximum": 1000
        },
        "offset": {
          "description": "Number of items to skip. Default: 0.",
          "type": "integer",
          "default": 0,
          "minimum": 0
        }
      }
    },
    "BadgeList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "minLength": 1,
                "example": "John"
              },
              "pin": {
                "type": "string",
                "pattern": "[0-9A-F]+",
                "minLength": 1,
                "example": "A1B2C3D4"
              },
              "externalReferences": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "my_internal_id": "413612"
                }
              }
            },
            "required": [
              "label",
              "pin",
              "externalReferences"
            ]
          }
        }
      },
      "required": [
        "id",
        "label",
        "list"
      ]
    },
    "Dispatch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "appType": {
          "type": "string"
        },
        "isEnable": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "label",
        "appType"
      ]
    },
    "PinCodeList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "minLength": 1,
                "example": "John"
              },
              "pin": {
                "type": "string",
                "pattern": "[0-9]+",
                "minLength": 1,
                "example": "123"
              },
              "externalReferences": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "my_internal_id": "413612"
                }
              }
            },
            "required": [
              "label",
              "pin",
              "externalReferences"
            ]
          }
        }
      },
      "required": [
        "id",
        "label",
        "list"
      ]
    },
    "Tracker": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "slug": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "subtype": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "dispatches": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "interface_id": {
          "type": "string",
          "format": "uuid"
        },
        "site_id": {
          "type": "string",
          "format": "uuid"
        },
        "site_label": {
          "type": "string"
        },
        "site_latitude": {
          "type": "number"
        },
        "site_longitude": {
          "type": "number"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_data": {
          "type": "string",
          "format": "date-time"
        },
        "sigfox_id": {
          "type": "string"
        },
        "sigfox_pac": {
          "type": "string"
        },
        "lora_dev_uid": {
          "type": "string"
        },
        "lora_app_uid": {
          "type": "string"
        },
        "lora_app_key": {
          "type": "string"
        },
        "lora_dev_addr": {
          "type": "string"
        },
        "lora_nwk_skey": {
          "type": "string"
        },
        "lora_app_skey": {
          "type": "string"
        },
        "lora_status": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "slug",
        "type",
        "label",
        "dispatches",
        "interface_id",
        "site_id",
        "site_label",
        "site_latitude",
        "site_longitude",
        "last_seen",
        "last_data"
      ]
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "distanceMargin": {
          "type": "number"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "externalReferences": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "my_internal_id": "413612"
          }
        }
      },
      "required": [
        "id",
        "label",
        "distanceMargin",
        "latitude",
        "longitude",
        "externalReferences"
      ]
    },
    "Interface": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "interactionType": {
          "type": "string"
        },
        "interactionSubtype": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "x-api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}