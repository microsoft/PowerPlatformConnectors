{
  "x-generator": "NSwag v13.13.2.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "PKIsigning",
    "description": "Automate your document signing needs with the PKIsigning platform connector. Send documents to the PKIsigning platform; send invites and retrieve the signed documents.",
    "contact": {
      "name": "PKIsigning support",
      "url": "https://pkisigning.nl/support",
      "email": "support@pkisigning.nl"
    },
    "version": "1.2212.0.0"
  },
  "host": "platformapi.pkisigning.io",
  "schemes": [
    "https"
  ],
  "paths": {
    "/requests/{requestId}/documents/{documentId}/Actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get actor data by document",
        "operationId": "Actors_List",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "boolean",
            "name": "hasActed",
            "in": "query",
            "description": "Only returns actors that have or haven't completed their action, leave blank to return all actors.",
            "x-nullable": true,
            "x-ms-summary": "Action completed"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of actors with a role in the document.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedSignerModel"
              }
            }
          }
        },
        "description": "Returns all data of all actors for a specific document."
      },
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Create actor",
        "operationId": "Actors_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "actorModel",
            "in": "body",
            "required": true,
            "description": "Information of the actor to create.",
            "schema": {
              "$ref": "#/definitions/SignerModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Actor information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "The newly created actor.",
            "schema": {
              "$ref": "#/definitions/ExtendedSignerModel"
            }
          }
        },
        "description": "Creates a new actor and adds it to a document."
      }
    },
    "/requests/{requestId}/documents/{documentId}/Actors/{actorId}": {
      "put": {
        "tags": [
          "Actors"
        ],
        "summary": "Update actor",
        "operationId": "Actors_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "actorModelModel",
            "in": "body",
            "required": true,
            "description": "Information of the actor to create.",
            "schema": {
              "$ref": "#/definitions/ActorModel"
            },
            "x-nullable": false,
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated information on an actor.",
            "schema": {
              "$ref": "#/definitions/ExtendedSignerModel"
            }
          }
        },
        "description": "Changes data for a specific actor."
      },
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get actor data",
        "operationId": "Actors_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information on a specific actor.",
            "schema": {
              "$ref": "#/definitions/ExtendedSignerModel"
            }
          }
        },
        "description": "Returns all data for a specific actor."
      },
      "delete": {
        "tags": [
          "Actors"
        ],
        "summary": "Delete actor",
        "operationId": "Actors_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The actor was successfully deleted."
          }
        },
        "description": "Permanently deletes a specific actor."
      }
    },
    "/requests/{requestId}/Actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get actor data by request",
        "operationId": "Actors_RequestActors",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "boolean",
            "name": "hasActed",
            "in": "query",
            "description": "Read only value to check if an actor has acted on the document already.",
            "x-nullable": true,
            "x-ms-summary": "Has actor acted on the request"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of actors with a role in the dossier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedSignerModel"
              }
            }
          }
        },
        "description": "Returns all data of all actors for a specific request."
      }
    },
    "/requests/{requestId}/Actors/ResendCurrentInvite": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Resend invite",
        "operationId": "Actors_ResendCurrentInvite",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "description": "Resends the invite for the current actor in line for a specific request."
      }
    },
    "/requests/{requestId}/Actors/WithdrawCurrentInvite": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Withdraw invite",
        "operationId": "Actors_WithdrawCurrentInvite",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "description": "Withdraws the invite for the current actor in line for a specific request."
      }
    },
    "/requests/{requestId}/documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create document",
        "operationId": "Documents_Create",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request where this document will belong to.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true,
            "description": "The file to be processed (only specific filetypes).",
            "x-nullable": true,
            "x-ms-summary": "File",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Information about the created document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          },
          "202": {
            "x-nullable": false,
            "description": "Document metadata together with the REST url of the document",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Creates a new document and add it to a specific request."
      }
    },
    "/status/Documents/create": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Delayed document create response",
        "operationId": "Documents_GetDocumentStatus",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "query",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "query",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Returns all (meta)data for a specific document after it is created.",
        "x-ms-visibility": "internal"
      }
    },
    "/requests/{requestId}/documents/{documentId}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get document data",
        "operationId": "Documents_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the specified document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          },
          "202": {
            "description": "Metadata of the document"
          }
        },
        "description": "Returns all (meta)data for a specific document."
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update document",
        "operationId": "Documents_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "metadata",
            "in": "body",
            "required": true,
            "description": "Updated metadata",
            "schema": {
              "$ref": "#/definitions/UpdateDocumentMetadataModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Metadata",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the updated document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Changes data for a specific document."
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete document",
        "operationId": "Documents_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The document was successfully removed from the dossier."
          }
        },
        "description": "Permanently deletes a specific document."
      }
    },
    "/Organisations/current": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Get my organisation ID",
        "operationId": "Organisations_GetOrganisationOfCurrentUser",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganisationIdModel"
              }
            }
          }
        },
        "description": "Returns the organisation ID for the authenticated user.",
        "x-ms-visibility": "internal"
      }
    },
    "/Organisations/{organisationId}/workgroups": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Get workgroups for organisation",
        "operationId": "Organisations_GetWorkgroups",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Organisations_GetOrganisationOfCurrentUser",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of workgroups for the specified organisation.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganisationWorkgroup"
              }
            }
          }
        },
        "description": "Returns a list of all workgroups for a specific organisation."
      },
      "post": {
        "tags": [
          "Organisations"
        ],
        "summary": "Get workgroups for user",
        "operationId": "Organisations_GetWorkgroupsByUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Organisations_GetOrganisationOfCurrentUser",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserIdModel"
            },
            "x-nullable": false,
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of workgroups for the specified organisation.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganisationWorkgroup"
              }
            }
          }
        },
        "description": "Returns a list of all workgroups for a specific user of a specific organisation."
      }
    },
    "/requests": {
      "post": {
        "tags": [
          "Requests"
        ],
        "summary": "Create request",
        "operationId": "Requests_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "The request to be created.",
            "schema": {
              "$ref": "#/definitions/CreateDossierModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Request information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Information about the created request.",
            "schema": {
              "$ref": "#/definitions/RequestModel"
            }
          }
        },
        "description": "Create a new request."
      }
    },
    "/requests/{requestId}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get request data",
        "operationId": "Requests_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "callbackAuthenticationKey",
            "in": "query",
            "description": "Authentication key as supplied by trigger.",
            "x-nullable": true,
            "x-ms-summary": "Authentication key",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the request.",
            "schema": {
              "$ref": "#/definitions/RequestModel"
            }
          }
        },
        "description": "Returns all (meta)data for a specific request."
      },
      "put": {
        "tags": [
          "Requests"
        ],
        "summary": "Update request",
        "operationId": "Requests_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "Request to update",
            "schema": {
              "$ref": "#/definitions/CreateDossierModel"
            },
            "x-nullable": false,
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the updated request.",
            "schema": {
              "$ref": "#/definitions/RequestModel"
            }
          }
        },
        "description": "Changes data for a specific request."
      },
      "delete": {
        "tags": [
          "Requests"
        ],
        "summary": "Delete a request",
        "operationId": "Requests_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The request was permanently deleted."
          }
        },
        "description": "Permanently deletes a specific request."
      }
    },
    "/requests/{requestId}/Download": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Download request",
        "operationId": "Requests_Download",
        "produces": [
          "application/zip",
          "application/pdf",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A zipfile of the request and its contents.",
            "schema": {
              "type": "file"
            }
          }
        },
        "description": "Downloads a requests and its contents as a .zip file."
      }
    },
    "/requests/{requestId}/Send": {
      "post": {
        "tags": [
          "Requests"
        ],
        "summary": "Send request",
        "operationId": "Requests_Send",
        "parameters": [
          {
            "type": "string",
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a request.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Request ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The workflow has been started successfully."
          }
        },
        "description": "Starts the workflow and sends an invite to the first actor in line for a specific request."
      }
    },
    "/organisations/{organisationId}/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "title": "WebhookContentModel",
          "type": "object",
          "description": "Information about the status update of a dossier",
          "required": [
            "PkisId",
            "DossierStatus",
            "Reason",
            "AuthenticationKey"
          ],
          "properties": {
            "PkisId": {
              "type": "string",
              "description": "Unique ID of a request.",
              "format": "guid",
              "title": "Request ID"
            },
            "DossierStatus": {
              "type": "string",
              "description": "Status of the dossier.",
              "title": "Request status"
            },
            "Reason": {
              "type": "string",
              "description": "Reason of the change.",
              "title": "Reason"
            },
            "AuthenticationKey": {
              "type": "string",
              "description": "Header to obtain metadata on the request.",
              "title": "Authentication key"
            }
          }
        },
        "description": "Webhook payload"
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "When an event occurs on a request",
        "description": "Register an url for callback upon a statuschange. The PKIsigning platform will report any statusupdates of dossiers within this organisation to this url.",
        "operationId": "Webhooks_CreateWebhook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "Webhook details",
            "schema": {
              "title": "WebhookRequestModel",
              "type": "object",
              "required": [
                "Events",
                "Config",
                "Active"
              ],
              "properties": {
                "Events": {
                  "type": "array",
                  "description": "A list of event types that occur on a request of which this trigger will be notified",
                  "items": {
                    "type": "string"
                  },
                  "title": "Event types",
                  "default": [
                    "status"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "Config": {
                  "type": "object",
                  "description": "Information about the configuration of a webhook",
                  "additionalProperties": {},
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "the url associated with the webhook.",
                      "default": "dummy",
                      "minLength": 1,
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true
                    }
                  }
                },
                "Active": {
                  "type": "boolean",
                  "description": "Enabled or disables the trigger.",
                  "title": "Enabled",
                  "x-ms-visibility": "internal",
                  "default": true
                }
              }
            },
            "x-nullable": false,
            "x-ms-summary": "Webhook information",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "Unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation ID",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "Organisations_GetOrganisationOfCurrentUser",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the created webhook.",
            "schema": {
              "$ref": "#/definitions/WebhookResponseModel"
            }
          }
        },
        "x-ms-trigger": "single"
      }
    }
  },
  "definitions": {
    "ExtendedSignerModel": {
      "type": "object",
      "required": [
        "sigFieldX",
        "sigFieldY",
        "sigFieldH",
        "sigFieldW",
        "action",
        "firstname",
        "lastname",
        "email",
        "mobile",
        "deadline",
        "language",
        "validateRealIdentity",
        "hasSigned",
        "documentId"
      ],
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "The name of an existing signing field in the document for this actor to sign.",
          "title": "Signing field"
        },
        "placeholder": {
          "type": "string",
          "description": "The text of a specific placeholder in the document where the actor must place a signature.",
          "title": "Placeholder"
        },
        "sigFieldX": {
          "type": "number",
          "description": "X-coordinate of the signature field as percentage of page width",
          "format": "decimal",
          "title": "Signature field X coordinate",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldY": {
          "type": "number",
          "description": "Y-coordinate of the signature field as percentage of page height",
          "format": "decimal",
          "title": "Signature field Y coordinate",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldH": {
          "type": "number",
          "description": "Height of the signature field as percentage of page height",
          "format": "decimal",
          "title": "Signature field height",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldW": {
          "type": "number",
          "description": "Width of the signature field as percentage of page width",
          "format": "decimal",
          "title": "Signature field width",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "action": {
          "type": "string",
          "description": "Action that the actor must perform.",
          "title": "Action",
          "enum": [
            "Sign",
            "Download",
            "Approve"
          ]
        },
        "firstname": {
          "type": "string",
          "description": "First name of the actor.",
          "minLength": 1,
          "title": "First name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the actor.",
          "title": "Prefix"
        },
        "lastname": {
          "type": "string",
          "description": "Last name of the actor.",
          "minLength": 1,
          "title": "Last name"
        },
        "email": {
          "type": "string",
          "description": "Email address of the actor.",
          "minLength": 1,
          "title": "Email address"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the actor.",
          "minLength": 1,
          "title": "Mobile phone number"
        },
        "deadline": {
          "type": "string",
          "description": "The date and time by when the action must have been performed by the actor.",
          "format": "date-time",
          "minLength": 1,
          "title": "Deadline",
          "default": "@{addDays(utcNow(),7)}"
        },
        "language": {
          "type": "string",
          "description": "Language for the invite.",
          "title": "Language",
          "default": "NL",
          "enum": [
            "NL",
            "EN"
          ]
        },
        "validateRealIdentity": {
          "type": "boolean",
          "description": "Use a stronger method of identification for this actor.",
          "title": "Use strong verification",
          "default": false
        },
        "dossierPersonId": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of a specific actor.",
          "format": "guid",
          "title": "Actor ID",
          "x-nullable": "true"
        },
        "signingDate": {
          "type": "string",
          "description": "The date and time when the actor has performed its action.",
          "format": "date-time",
          "title": "Date of completion"
        },
        "hasSigned": {
          "type": "boolean",
          "title": "Action completed"
        },
        "fullName": {
          "type": "string",
          "description": "Combined first name, prefix and last name of the actor.",
          "title": "Full name"
        },
        "emailActivity": {
          "type": "array",
          "description": "Status information about the process of performing the action by the actor.",
          "items": {
            "$ref": "#/definitions/EmailActivity"
          },
          "x-nullable": "true",
          "title": "Status information"
        },
        "documentId": {
          "type": "string",
          "format": "guid"
        }
      }
    },
    "DocumentSignerAction": {
      "type": "string",
      "description": "Actiontype of an actor",
      "x-enumNames": [
        "Sign",
        "Download",
        "Approve"
      ],
      "enum": [
        "Sign",
        "Download",
        "Approve"
      ]
    },
    "Language": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NL",
        "EN"
      ],
      "enum": [
        "NL",
        "EN"
      ]
    },
    "EmailActivity": {
      "type": "object",
      "description": "Metadata of email message send to an actor",
      "required": [
        "timestamp"
      ],
      "properties": {
        "event": {
          "type": "string",
          "description": "Email activity for a specific request and actor.",
          "title": "Email activity"
        },
        "reason": {
          "type": "string",
          "description": "SMTP information for an email sent to a specific actor as part of a request.",
          "title": "SMTP information"
        },
        "timestamp": {
          "type": "string",
          "description": "Date for an email sent to a specific actor as part of a request.",
          "format": "date-time",
          "title": "Email date"
        },
        "pkisMessageType": {
          "type": "string",
          "description": "Type for an email sent to a specific actor as part of a request (E.g. Invite, Reminder, etc).",
          "title": "Email type"
        },
        "pkisInviteId": {
          "type": "string",
          "description": "Unique ID for an email sent to a specific actor as part of a request.",
          "title": "Email request ID"
        },
        "email": {
          "type": "string",
          "description": "Email address for an email sent to a specific actor as part of a request.",
          "title": "Email address"
        }
      }
    },
    "SignerModel": {
      "type": "object",
      "description": "Special type of actor",
      "required": [
        "action",
        "firstname",
        "lastname",
        "email",
        "mobile",
        "deadline",
        "language",
        "validateRealIdentity",
        "sigFieldX",
        "sigFieldY",
        "sigFieldH",
        "sigFieldW"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "Action that the actor must perform.",
          "title": "Action",
          "enum": [
            "Sign",
            "Download",
            "Approve"
          ]
        },
        "firstname": {
          "type": "string",
          "description": "First name of the actor.",
          "minLength": 1,
          "title": "First name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the actor.",
          "title": "Prefix"
        },
        "lastname": {
          "type": "string",
          "description": "Last name of the actor.",
          "minLength": 1,
          "title": "Last name"
        },
        "email": {
          "type": "string",
          "description": "Email address of the actor.",
          "minLength": 1,
          "title": "Email address"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the actor.",
          "minLength": 1,
          "title": "Mobile phone number"
        },
        "deadline": {
          "type": "string",
          "description": "The date and time by when the action must have been performed by the actor.",
          "format": "date-time",
          "minLength": 1,
          "title": "Deadline",
          "default": "@{addDays(utcNow(),7)}"
        },
        "language": {
          "type": "string",
          "description": "Language for the invite.",
          "title": "Language",
          "default": "NL",
          "enum": [
            "NL",
            "EN"
          ]
        },
        "validateRealIdentity": {
          "type": "boolean",
          "description": "Use a stronger method of identification for this actor.",
          "title": "Use strong verification",
          "default": false
        },
        "dossierPersonId": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fieldName": {
          "type": "string",
          "description": "The name of an existing signing field in the document for this actor to sign.",
          "title": "Signing field"
        },
        "placeholder": {
          "type": "string",
          "description": "The text of a specific placeholder in the document where the actor must place a signature.",
          "title": "Placeholder"
        },
        "sigFieldX": {
          "type": "number",
          "description": "X-coordinate of the signature field as percentage of page width",
          "format": "decimal",
          "title": "Signature field X coordinate",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldY": {
          "type": "number",
          "description": "Y-coordinate of the signature field as percentage of page height",
          "format": "decimal",
          "title": "Signature field Y coordinate",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldH": {
          "type": "number",
          "description": "Height of the signature field as percentage of page height",
          "format": "decimal",
          "title": "Signature field height",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "sigFieldW": {
          "type": "number",
          "description": "Width of the signature field as percentage of page width",
          "format": "decimal",
          "title": "Signature field width",
          "x-ms-visibility": "internal",
          "default": 0
        }
      }
    },
    "ActorModel": {
      "type": "object",
      "description": "An actor has to perform an action on a document before a certain deadline",
      "required": [
        "action",
        "firstname",
        "lastname",
        "email",
        "mobile",
        "deadline",
        "language",
        "validateRealIdentity"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "Action that the actor must perform.",
          "title": "Action",
          "enum": [
            "Sign",
            "Download",
            "Approve"
          ]
        },
        "firstname": {
          "type": "string",
          "description": "First name of the actor.",
          "minLength": 1,
          "title": "First name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the actor.",
          "title": "Prefix"
        },
        "lastname": {
          "type": "string",
          "description": "Last name of the actor.",
          "minLength": 1,
          "title": "Last name"
        },
        "email": {
          "type": "string",
          "description": "Email address of the actor.",
          "minLength": 1,
          "title": "Email address"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the actor.",
          "minLength": 1,
          "title": "Mobile phone number"
        },
        "deadline": {
          "type": "string",
          "description": "The date and time by when the action must have been performed by the actor.",
          "format": "date-time",
          "minLength": 1,
          "title": "Deadline",
          "default": "@{addDays(utcNow(),7)}"
        },
        "language": {
          "type": "string",
          "description": "Language for the invite.",
          "title": "Language",
          "default": "NL",
          "enum": [
            "NL",
            "EN"
          ]
        },
        "validateRealIdentity": {
          "type": "boolean",
          "description": "Use a stronger method of identification for this actor.",
          "title": "Use strong verification",
          "default": false
        },
        "dossierPersonId": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "DocumentMetaDataModel": {
      "type": "object",
      "description": "General metadata of the document",
      "required": [
        "pages",
        "created",
        "id",
        "status",
        "requestId",
        "isMyDocument",
        "dossierIndex",
        "documentSize",
        "documentType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for a specific document.",
          "title": "Document name"
        },
        "lastUpdate": {
          "type": "string",
          "description": "Date of last update for a specific document.",
          "format": "date-time",
          "title": "Last document update"
        },
        "pages": {
          "type": "integer",
          "description": "Number of pages for a specific document.",
          "format": "int32",
          "title": "Number of document pages"
        },
        "created": {
          "type": "string",
          "description": "Date of creation for a specific document.",
          "format": "date-time",
          "title": "Document creation date"
        },
        "expires": {
          "type": "string",
          "description": "Date and time when a specific document will expire.",
          "format": "date-time",
          "x-ms-visibility": "internal",
          "title": "Document exipration date"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of a document.",
          "format": "guid",
          "title": "Document ID"
        },
        "status": {
          "type": "string",
          "description": "Status for a specific document. (E.g. new, completed, etc..).",
          "title": "Document status",
          "enum": [
            "Active",
            "Completed",
            "Declined",
            "Processing",
            "Error",
            "PendingSbrNexus",
            "Withdrawn",
            "PendingDigipoort",
            "New",
            "Filing",
            "InvitationExpired",
            "Elapsed",
            "Expired",
            "PendingApproval",
            "PendingDownload",
            "PendingSignature",
            "PendingDetermination"
          ]
        },
        "signed": {
          "type": "boolean",
          "description": "Indicates whether a specific document already contains one or more signatures.",
          "title": "Document contains signature"
        },
        "signatures": {
          "type": "array",
          "description": "List of all signatures for a specific document.",
          "items": {
            "$ref": "#/definitions/SignatureData"
          },
          "title": "Document signatures"
        },
        "emptySignatureFields": {
          "type": "array",
          "description": "List of all empty signature fields for a specific document.",
          "items": {
            "$ref": "#/definitions/SignatureField"
          },
          "title": "Document blank signature fields"
        },
        "containsBlankSignatureFields": {
          "type": "boolean",
          "description": "Indicates whether a specific document contains blank signature fields.",
          "title": "Blank signature fields"
        },
        "actors": {
          "type": "array",
          "description": "List of all actors for a specific document.",
          "items": {
            "$ref": "#/definitions/ExtendedSignerModel"
          },
          "title": "Document actors"
        },
        "requestId": {
          "type": "string",
          "description": "Unique ID of a request.",
          "format": "guid",
          "title": "Request ID"
        },
        "reasons": {
          "type": "string",
          "description": "Reason of cansolation for a specific request by a user or an actor.",
          "title": "Cancelation reason",
          "x-ms-visibility": "internal"
        },
        "signerNote": {
          "type": "string",
          "description": "Note for one or more actor(s) that perform any other action than download request. (E.g. sign, approve, etc..).",
          "title": "Actor note",
          "x-ms-visibility": "internal"
        },
        "recipientNote": {
          "type": "string",
          "description": "Note for one or more actor(s) that have no other action than download request.",
          "title": "Recipient Note",
          "x-ms-visibility": "internal"
        },
        "isMyDocument": {
          "type": "boolean",
          "description": "Indicates whether you are the owner of a specific document.",
          "title": "My document",
          "x-ms-visibility": "internal",
          "default": false
        },
        "dossierIndex": {
          "type": "integer",
          "description": "The index of all documents belonging to a specific request.",
          "format": "int32",
          "title": "Request index"
        },
        "documentSize": {
          "type": "integer",
          "description": "The size of a document belonging to a specific request.",
          "format": "int64"
        },
        "documentType": {
          "type": "string",
          "description": "The type of a document belonging to a specific request.",
          "enum": [
            "RegularPdf",
            "XbrlPublicationVersionAnnualReport",
            "XbrlAuditorsReport",
            "DetachedSignature",
            "XbrlPreparerExtension",
            "PdfAudittrail",
            "XbrlCompositionStatement",
            "XbrlStatutoryVersionAnnualReport",
            "DNBStaat",
            "RegularXml",
            "ReferencedDocument",
            "Json",
            "JsonSignature",
            "GenericTextFile",
            "VatDeclaration",
            "VatEuRecapitulativeStatement",
            "IncomeTaxDeclaration",
            "CorporateTaxDeclaration",
            "XbrlNexusVersionAnnualReport",
            "XbrlAuditorsReportSFO",
            "XbrlAssessmentStatement",
            "SignatureStylesheet",
            "EnvelopingSignatureData",
            "PageImage",
            "SHA256Hash",
            "SHA256Signature",
            "Unspecified"
          ]
        }
      }
    },
    "DocumentStatuses": {
      "type": "string",
      "description": "Status of a document",
      "x-enumNames": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Elapsed",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingDetermination"
      ],
      "enum": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Elapsed",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingDetermination"
      ]
    },
    "SignatureData": {
      "type": "object",
      "required": [
        "date",
        "euQualified",
        "advanced",
        "eSeal"
      ],
      "properties": {
        "subject": {
          "type": "array",
          "description": "Fields from the subject line of the certificate used for a specific signature.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndString"
          },
          "title": "Certificate subject fields"
        },
        "issuer": {
          "type": "array",
          "description": "Fields from the issuer line of the certificate used for a specific signature.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndString"
          },
          "title": "Certificate issuer fields"
        },
        "date": {
          "type": "string",
          "description": "Date and time when a specific signature has been placed.",
          "format": "date-time",
          "title": "Signature date"
        },
        "location": {
          "type": "string",
          "description": "The geographical location of a specific actor at the time of signing.",
          "title": "Signing location"
        },
        "reason": {
          "type": "string",
          "description": "The reason for signing as provided by a specific actor at the time of signing.",
          "title": "Signing reason"
        },
        "euQualified": {
          "type": "boolean",
          "description": "Indicates whether a specific signature is qualified (QeS) conform eIDAS regulations.",
          "title": "Qualified Electronic Signature"
        },
        "advanced": {
          "type": "boolean",
          "description": "Indicates whether a specific signature is advanced (AeS) conform eIDAS regulations.",
          "title": "Advanced Electronic Signature"
        },
        "eSeal": {
          "type": "boolean",
          "description": "Indicates whether a specific certificate used for signing or sealing is a Qualified eSeal conform eIDAS regulations.",
          "title": "Qualified eSeal"
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address for a specific actor",
          "title": "Actor IP address"
        },
        "signatureField": {
          "type": "string",
          "description": "The field that has been signed",
          "title": "Signature field"
        },
        "signatureImage": {
          "type": "string",
          "description": "The image file that was used for a specific signature as chosen by an actor.",
          "title": "Signature image"
        }
      }
    },
    "KeyValuePairOfStringAndString": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SignatureField": {
      "type": "object",
      "required": [
        "page",
        "x",
        "y",
        "height",
        "width"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for a specific signature field",
          "title": "Signature field name"
        },
        "page": {
          "type": "integer",
          "description": "Page where a specific signature field is placed for a specific document.",
          "format": "int32",
          "title": "Signature field page"
        },
        "x": {
          "type": "number",
          "description": "Width value of the position for a specific signature field relative to the page it is placed in a specific document.",
          "format": "double",
          "title": "Signature field width coordinate"
        },
        "y": {
          "type": "number",
          "description": "Hight value of the position for a specific signature field relative to the page it is placed in a specific document.",
          "format": "double",
          "title": "Signature field hight coordinate"
        },
        "height": {
          "type": "number",
          "description": "Hight value for a specific signature field.",
          "format": "double",
          "title": "Signature field hight"
        },
        "width": {
          "type": "number",
          "description": "Width value for a specific signature field.",
          "format": "double",
          "title": "Signature field width"
        }
      }
    },
    "DocumentTypes": {
      "type": "string",
      "description": "Type of a document",
      "x-enumNames": [
        "RegularPdf",
        "XbrlPublicationVersionAnnualReport",
        "XbrlAuditorsReport",
        "DetachedSignature",
        "XbrlPreparerExtension",
        "PdfAudittrail",
        "XbrlCompositionStatement",
        "XbrlStatutoryVersionAnnualReport",
        "DNBStaat",
        "RegularXml",
        "ReferencedDocument",
        "Json",
        "JsonSignature",
        "GenericTextFile",
        "VatDeclaration",
        "VatEuRecapitulativeStatement",
        "IncomeTaxDeclaration",
        "CorporateTaxDeclaration",
        "XbrlNexusVersionAnnualReport",
        "XbrlAuditorsReportSFO",
        "XbrlAssessmentStatement",
        "SignatureStylesheet",
        "EnvelopingSignatureData",
        "PageImage",
        "SHA256Hash",
        "SHA256Signature",
        "Unspecified"
      ],
      "enum": [
        "RegularPdf",
        "XbrlPublicationVersionAnnualReport",
        "XbrlAuditorsReport",
        "DetachedSignature",
        "XbrlPreparerExtension",
        "PdfAudittrail",
        "XbrlCompositionStatement",
        "XbrlStatutoryVersionAnnualReport",
        "DNBStaat",
        "RegularXml",
        "ReferencedDocument",
        "Json",
        "JsonSignature",
        "GenericTextFile",
        "VatDeclaration",
        "VatEuRecapitulativeStatement",
        "IncomeTaxDeclaration",
        "CorporateTaxDeclaration",
        "XbrlNexusVersionAnnualReport",
        "XbrlAuditorsReportSFO",
        "XbrlAssessmentStatement",
        "SignatureStylesheet",
        "EnvelopingSignatureData",
        "PageImage",
        "SHA256Hash",
        "SHA256Signature",
        "Unspecified"
      ]
    },
    "UpdateDocumentMetadataModel": {
      "type": "object",
      "required": [
        "documentType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for a specific document",
          "title": "Document name"
        },
        "filename": {
          "type": "string",
          "description": "File name for a specific document",
          "title": "Document file name"
        },
        "documentType": {
          "type": "string",
          "description": "The type for a specific document. (E.g. Regular PDF, fiscal statement, auditors report, etc..).",
          "title": "Document type",
          "enum": [
            "RegularPdf",
            "XbrlPublicationVersionAnnualReport",
            "XbrlAuditorsReport",
            "DetachedSignature",
            "XbrlPreparerExtension",
            "PdfAudittrail",
            "XbrlCompositionStatement",
            "XbrlStatutoryVersionAnnualReport",
            "DNBStaat",
            "RegularXml",
            "ReferencedDocument",
            "Json",
            "JsonSignature",
            "GenericTextFile",
            "VatDeclaration",
            "VatEuRecapitulativeStatement",
            "IncomeTaxDeclaration",
            "CorporateTaxDeclaration",
            "XbrlNexusVersionAnnualReport",
            "XbrlAuditorsReportSFO",
            "XbrlAssessmentStatement",
            "SignatureStylesheet",
            "EnvelopingSignatureData",
            "PageImage",
            "SHA256Hash",
            "SHA256Signature",
            "Unspecified"
          ]
        }
      }
    },
    "OrganisationIdModel": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of my organisation",
          "format": "guid",
          "title": "Organisation ID"
        },
        "name": {
          "type": "string",
          "description": "Name of my organisation",
          "title": "Name"
        }
      }
    },
    "OrganisationWorkgroup": {
      "type": "object",
      "description": "A workgroup that is used within a dossier",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of a workgroup",
          "format": "guid",
          "title": "Workgroup ID"
        },
        "name": {
          "type": "string",
          "description": "Name for a specific workgroup",
          "title": "Workgroup name"
        }
      }
    },
    "UserIdModel": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Emailaddress of the user",
          "format": "email",
          "minLength": 1,
          "title": "Username"
        }
      }
    },
    "RequestModel": {
      "type": "object",
      "required": [
        "id",
        "status",
        "signed",
        "dossierType",
        "myDossier",
        "clearancelevel"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of a request",
          "format": "guid",
          "title": "Request ID"
        },
        "dossierName": {
          "type": "string",
          "description": "Name for a specific request.",
          "title": "Request name"
        },
        "documents": {
          "type": "array",
          "description": "List of documents included in this request.",
          "items": {
            "$ref": "#/definitions/DocumentModel"
          },
          "title": "Request documents"
        },
        "status": {
          "type": "string",
          "description": "Status for a specific request. (E.g. new, completed, etc..).",
          "title": "Request status",
          "enum": [
            "Active",
            "Completed",
            "Declined",
            "Processing",
            "Error",
            "PendingSbrNexus",
            "Withdrawn",
            "PendingDigipoort",
            "New",
            "Filing",
            "InvitationExpired",
            "Expired",
            "PendingApproval",
            "PendingDownload",
            "PendingSignature"
          ]
        },
        "actors": {
          "type": "array",
          "description": "List of all actors for a specific request.",
          "items": {
            "$ref": "#/definitions/ExtendedSignerModel"
          },
          "title": "Request actors"
        },
        "signed": {
          "type": "boolean",
          "description": "Indicates whether a specific requests contains one or more signatures. ",
          "x-ms-visibility": "internal",
          "default": false,
          "title": "Request contains signature"
        },
        "signatures": {
          "type": "array",
          "description": "List of all signatures for a specific request.",
          "items": {
            "$ref": "#/definitions/SignatureData"
          },
          "title": "Document signatures"
        },
        "dossierType": {
          "type": "string",
          "description": "The type for a specific request. (E.g. PDF, SBR Assurance, etc..).",
          "title": "Request type",
          "enum": [
            "IcpDeclaration",
            "IncomeTaxDeclaration",
            "VatDeclaration",
            "Unknown",
            "PDF",
            "FinancialStatements",
            "SbrAssurance",
            "SbrNexusAssurance",
            "SbrNexusAnnualReport",
            "CorporateTaxDeclaration",
            "Incomplete",
            "AnnualFinancialFiles"
          ]
        },
        "reasons": {
          "type": "string",
          "description": "Reason of cancelation for a specific request by a user or an actor.",
          "title": "Cancelation reason"
        },
        "signerNote": {
          "type": "string",
          "description": "Note for one or more actor(s) that have no other action than sign.",
          "title": "Signer note"
        },
        "recipientNote": {
          "type": "string",
          "description": "Note for one or more actor(s) that have no other action than download.",
          "title": "Recipient Note"
        },
        "accorderNote": {
          "type": "string",
          "description": "Note for one or more actor(s) that have no other action than approve request.",
          "title": "Approver note"
        },
        "expires": {
          "type": "string",
          "description": "Date and time of expiration for a specific request.",
          "format": "date-time",
          "title": "Request expire date"
        },
        "emailActivity": {
          "type": "array",
          "description": "Status information about the process of performing the action by the actor.",
          "items": {
            "$ref": "#/definitions/EmailActivity"
          },
          "title": "Status information"
        },
        "myDossier": {
          "type": "boolean",
          "description": "Indicates whether you are the owner of a specific request. ",
          "title": "My request"
        },
        "taxPaymentStatus": {
          "type": "string",
          "description": "Indicates that any taxpayments for this request have been payed.",
          "x-ms-visibility": "internal",
          "title": "Request tax payment status"
        },
        "workgroup": {
          "type": "string",
          "description": "Unique ID of a workgroup.",
          "format": "guid",
          "x-ms-visibility": "advanced",
          "title": "Workgroup ID"
        },
        "clearancelevel": {
          "type": "integer",
          "description": "Level of security clearance for a specific request.",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "default": 1,
          "title": "Security clearance level"
        }
      }
    },
    "DocumentModel": {
      "type": "object",
      "required": [
        "id",
        "documentType",
        "dossierIndex",
        "documentstatus"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of a document",
          "format": "guid",
          "title": "Document ID"
        },
        "name": {
          "type": "string",
          "description": "Name of a specific document",
          "title": "Document name"
        },
        "documentType": {
          "type": "string",
          "description": "Type for a specific document.",
          "title": "Document type",
          "enum": [
            "RegularPdf",
            "XbrlPublicationVersionAnnualReport",
            "XbrlAuditorsReport",
            "DetachedSignature",
            "XbrlPreparerExtension",
            "PdfAudittrail",
            "XbrlCompositionStatement",
            "XbrlStatutoryVersionAnnualReport",
            "DNBStaat",
            "RegularXml",
            "ReferencedDocument",
            "Json",
            "JsonSignature",
            "GenericTextFile",
            "VatDeclaration",
            "VatEuRecapitulativeStatement",
            "IncomeTaxDeclaration",
            "CorporateTaxDeclaration",
            "XbrlNexusVersionAnnualReport",
            "XbrlAuditorsReportSFO",
            "XbrlAssessmentStatement",
            "SignatureStylesheet",
            "EnvelopingSignatureData",
            "PageImage",
            "SHA256Hash",
            "SHA256Signature",
            "Unspecified"
          ]
        },
        "dossierIndex": {
          "type": "integer",
          "description": "The index of all documents belonging to a specific request.",
          "format": "int32",
          "title": "Request index"
        },
        "documentstatus": {
          "type": "string",
          "description": "Status for a specific document. (E.g. new, completed, etc..).",
          "title": "Document status",
          "enum": [
            "Active",
            "Completed",
            "Declined",
            "Processing",
            "Error",
            "PendingSbrNexus",
            "Withdrawn",
            "PendingDigipoort",
            "New",
            "Filing",
            "InvitationExpired",
            "Elapsed",
            "Expired",
            "PendingApproval",
            "PendingDownload",
            "PendingSignature",
            "PendingDetermination"
          ]
        },
        "actors": {
          "type": "array",
          "description": "List of all actors for a specific document.",
          "items": {
            "$ref": "#/definitions/SignerModel"
          },
          "title": "Document actors"
        }
      }
    },
    "DossierStatuses": {
      "type": "string",
      "description": "Status of a dossier",
      "x-enumNames": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature"
      ],
      "enum": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature"
      ]
    },
    "DossierTypes": {
      "type": "string",
      "description": "Type of a dossier",
      "x-enumNames": [
        "IcpDeclaration",
        "IncomeTaxDeclaration",
        "VatDeclaration",
        "Unknown",
        "PDF",
        "FinancialStatements",
        "SbrAssurance",
        "SbrNexusAssurance",
        "SbrNexusAnnualReport",
        "CorporateTaxDeclaration",
        "Incomplete",
        "AnnualFinancialFiles"
      ],
      "enum": [
        "IcpDeclaration",
        "IncomeTaxDeclaration",
        "VatDeclaration",
        "Unknown",
        "PDF",
        "FinancialStatements",
        "SbrAssurance",
        "SbrNexusAssurance",
        "SbrNexusAnnualReport",
        "CorporateTaxDeclaration",
        "Incomplete",
        "AnnualFinancialFiles"
      ]
    },
    "CreateDossierModel": {
      "type": "object",
      "description": "Information required for a new dossier",
      "required": [
        "name",
        "clearancelevel"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for a specific request.",
          "maxLength": 500,
          "minLength": 4,
          "title": "Request name"
        },
        "workgroupId": {
          "type": "string",
          "description": "Unique ID of a workgroup.",
          "format": "guid",
          "title": "Workgroup ID",
          "x-ms-visibility": "advanced"
        },
        "clearancelevel": {
          "type": "integer",
          "description": "Level of security clearance for a specific request.",
          "format": "int32",
          "title": "Security clearance level",
          "default": 1,
          "x-ms-visibility": "advanced"
        },
        "owner": {
          "type": "string",
          "description": "User who is the owner of a specific request.",
          "format": "email",
          "title": "Request owner",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WebhookResponseModel": {
      "type": "object",
      "description": "Information about a webhook registration",
      "required": [
        "events",
        "config",
        "active",
        "id",
        "created",
        "lastUpdate"
      ],
      "properties": {
        "events": {
          "type": "array",
          "description": "A list of event types that occur on a request of which this trigger will be notified",
          "items": {
            "type": "string"
          },
          "title": "Event types",
          "default": [
            "status"
          ],
          "x-ms-visibility": "advanced"
        },
        "config": {
          "$ref": "#/definitions/WebhookConfig"
        },
        "active": {
          "type": "boolean",
          "description": "Enabled or disables the trigger.",
          "title": "Enabled",
          "x-ms-visibility": "internal",
          "default": true
        },
        "id": {
          "type": "string",
          "description": "Unique id of the webhook.",
          "format": "guid"
        },
        "created": {
          "type": "string",
          "description": "The date and time of when the webhook has been created.",
          "format": "date-time"
        },
        "lastUpdate": {
          "type": "string",
          "description": "The date and time of when the webhook has been updated.",
          "format": "date-time"
        }
      }
    },
    "WebhookConfig": {
      "type": "object",
      "description": "Information about the configuration of a webhook",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string",
          "description": "the url associated with the webhook.",
          "minLength": 1,
          "x-ms-visibility": "internal",
          "default": "dummy"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://devidentity.pkisigning.io/connect/authorize",
      "tokenUrl": "https://devidentity.pkisigning.io/connect/token",
      "scopes": {
        "pkisigning.platform": "Required to access default platform API's",
        "ImpersonateOwner": "Required to override dossier owner",
        "openid": "Always required",
        "profile": "Always required",
        "offline_access": "Always required"
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://pkisigning.nl"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://pkisigning.nl/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ]
}