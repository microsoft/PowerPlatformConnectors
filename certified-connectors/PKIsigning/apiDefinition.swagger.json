{
  "x-generator": "NSwag v13.13.2.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "PKIsigning",
    "description": "This is the documentation for the PKIsigning platform API",
    "contact": {
      "name": "PKIsigning support",
      "url": "https://pkisigning.nl/support",
      "email": "support@pkisigning.nl"
    },
    "version": "1.0.0"
  },
  "host": "localhost:44309",
  "schemes": [
    "https"
  ],
  "paths": {
    "/dossiers/{dossierId}/documents/{documentId}/actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Retrieve all actors of a document",
        "operationId": "Actors_GetActors",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "boolean",
            "name": "hasActed",
            "in": "query",
            "description": "Read only value to check if an actor has acted on the document already.",
            "x-nullable": true,
            "x-ms-summary": "Has actor acted on the document"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of actors with a role in the document.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Signer"
              }
            }
          }
        },
        "description": "Retrieve a list of signers and/or recipients for the document."
      },
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Add actor",
        "operationId": "Actors_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "actorModel",
            "in": "body",
            "required": true,
            "description": "Information of the actor to create.",
            "schema": {
              "$ref": "#/definitions/Signer"
            },
            "x-nullable": false,
            "x-ms-summary": "Actor information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "The newly created actor.",
            "schema": {
              "$ref": "#/definitions/Signer"
            }
          }
        },
        "description": "Create an actor and add it to a document."
      }
    },
    "/dossiers/{dossierId}/documents/{documentId}/actors/{actorId}": {
      "put": {
        "tags": [
          "Actors"
        ],
        "summary": "Update an actor",
        "operationId": "Actors_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "actorModel",
            "in": "body",
            "required": true,
            "description": "Information of the actor to create.",
            "schema": {
              "$ref": "#/definitions/Signer"
            },
            "x-nullable": false,
            "x-ms-summary": "Actor information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "The updated information on an actor.",
            "schema": {
              "$ref": "#/definitions/Signer"
            }
          }
        },
        "description": "Update information on a specific actor."
      },
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get actor",
        "operationId": "Actors_Get",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor.",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information on a specific actor.",
            "schema": {
              "$ref": "#/definitions/Signer"
            }
          }
        },
        "description": "Get information on a specific actor."
      },
      "delete": {
        "tags": [
          "Actors"
        ],
        "summary": "Remove an actor",
        "operationId": "Actors_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor.",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The actor was successfully deleted."
          }
        },
        "description": "Removes the specified actor from the document."
      }
    },
    "/dossiers/{dossierId}/actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Retrieve a list of actors for the dossier",
        "operationId": "Actors_DossierActors",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "boolean",
            "name": "hasActed",
            "in": "query",
            "description": "Read only value to check if an actor has acted on the document already.",
            "x-nullable": true,
            "x-ms-summary": "Has actor acted on the document"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of actors with a role in the dossier.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Signer"
              }
            }
          }
        },
        "description": "Retrieve a list of actors that have any role on any document within the dossier."
      }
    },
    "/dossiers/{dossierId}/actors/{actorId}/ResendInvite": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Resend an invite to the an actor (next actor for now, actorId ignored)",
        "operationId": "Actors_ResendInvite",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor.",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The invite was successfully resent."
          }
        },
        "description": "Resend an invite to the current actor."
      }
    },
    "/dossiers/{dossierId}/actors/{actorId}/WithdrawInvite": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Withdraw an action invite (next invite, actorId is ignored for now)",
        "operationId": "Actors_WithDrawInvite",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier.",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "actorId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an actor.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Actor.",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The invite was successfully withdrawn."
          }
        },
        "description": "Withdraw the invite for the current actor."
      }
    },
    "/dossiers/{dossierId}/documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create a new document by uploading it",
        "operationId": "Documents_Add",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique id of the dossier where this document will belong to.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "description": "The file to be processed (only specific filetypes).",
            "x-nullable": true,
            "x-ms-summary": "File",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Information about the created document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Add a new document to a specific dossier."
      }
    },
    "/dossiers/{dossierId}/documents/{documentId}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Acquire metadata of a document",
        "operationId": "Documents_GetMetadata",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the specified document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Acquire information of a document."
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update metadata of a document",
        "operationId": "Documents_UpdateMetadata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "metadata",
            "in": "body",
            "required": true,
            "description": "Updated metadata",
            "schema": {
              "$ref": "#/definitions/UpdateDocumentMetadataModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Metadata",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the updated document.",
            "schema": {
              "$ref": "#/definitions/DocumentMetaDataModel"
            }
          }
        },
        "description": "Change information of a document."
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete a document from a dossier",
        "operationId": "Documents_DeleteDocument",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The document was successfully removed from the dossier."
          }
        },
        "description": "Remove a document from a dossier."
      }
    },
    "/dossiers": {
      "post": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Create a new empty dossier",
        "operationId": "Dossiers_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "The dossier to be created.",
            "schema": {
              "$ref": "#/definitions/CreateDossierModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Dossier information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "Information about the created dossier.",
            "schema": {
              "$ref": "#/definitions/DossierModel"
            }
          }
        },
        "description": "Create a new dossier."
      }
    },
    "/dossiers/{dossierId}": {
      "get": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Get all metadata of a dossier",
        "operationId": "Dossiers_GetMetadata",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the requested dossier.",
            "schema": {
              "$ref": "#/definitions/DossierModel"
            }
          }
        },
        "description": "Get information on a specific dossier."
      },
      "put": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Service to update dossier details",
        "operationId": "Dossiers_UpdateDossier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "Dossier to update",
            "schema": {
              "$ref": "#/definitions/CreateDossierModel"
            },
            "x-nullable": false,
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the updated dossier.",
            "schema": {
              "$ref": "#/definitions/DossierModel"
            }
          }
        },
        "description": "Update information on a dossier."
      },
      "delete": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Permanently delete a dossier",
        "operationId": "Dossiers_DeleteDossier",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The dossier was permanently deleted."
          }
        },
        "description": "Permanently delete a dossier and all it's documents."
      }
    },
    "/dossiers/{dossierId}/Download": {
      "get": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Download a dossier and its documents",
        "operationId": "Dossiers_Download",
        "produces": [
          "application/zip",
          "application/pdf",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A zipfile of the dossier and its contents.",
            "schema": {
              "type": "file"
            }
          }
        },
        "description": "Download a dossier and its document as a zip file."
      }
    },
    "/dossiers/{dossierId}/StartWorkflow": {
      "post": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Signal the beginning of the workflow",
        "operationId": "Dossiers_StartWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The workflow has been started successfully."
          }
        },
        "description": "Send invitations to all actors in the dossier."
      }
    },
    "/organisation/{organisationId}/papertypes": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get a list of papertypes with thumbnails",
        "operationId": "Organisation_GetPaperTypes",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A ;ost pf papertypes that are available to the organisation.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackgroundModel"
              }
            }
          }
        },
        "description": "Returns a list of all paper types (e.g. backgrounds) for an organisation."
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Create a new papertype",
        "operationId": "Organisation_CreatePaperType",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "Name",
            "in": "formData",
            "description": "Name as to be shown to the user",
            "x-nullable": true,
            "x-ms-summary": "Name",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "file",
            "name": "Background",
            "in": "formData",
            "description": "Formfield to upload the file",
            "x-nullable": true,
            "x-ms-summary": "Background",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the newly created papertype.",
            "schema": {
              "$ref": "#/definitions/PaperTypeModel"
            }
          }
        },
        "description": "Create a new paper type (e.g. Background) for PDF documents."
      }
    },
    "/organisation/{organisationId}/papertypes/{papertypeId}": {
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update an existing papertype",
        "operationId": "Organisation_UpdatePaperType",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "papertypeId",
            "in": "path",
            "required": true,
            "description": "The unique ID of a papertype.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "PaperType",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "Id",
            "in": "formData",
            "description": "Id of the papertype.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Papertype",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "Name",
            "in": "formData",
            "description": "Name as to be shown to the user",
            "x-nullable": true,
            "x-ms-summary": "Name",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "file",
            "name": "Background",
            "in": "formData",
            "description": "Formfield to upload the file",
            "x-nullable": true,
            "x-ms-summary": "Background",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the updated papertype.",
            "schema": {
              "$ref": "#/definitions/PaperTypeModel"
            }
          }
        },
        "description": "Update an existing paper type"
      },
      "delete": {
        "tags": [
          "Organisation"
        ],
        "summary": "Delete an existing papertype",
        "operationId": "Organisation_DeletePaperType",
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of an organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "papertypeId",
            "in": "path",
            "required": true,
            "description": "The unique ID of a papertype.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "PaperType",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The specified papertype was successfully deleted."
          }
        },
        "description": "Delete a specific paper type"
      }
    },
    "/organisation/{organisationId}/workgroups": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get all workgroups for an organisation",
        "operationId": "Organisation_GetWorkgroupsByOrganisation",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "The unique Id of the Organisation.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A list of workgroups for the specified organisation.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganisationWorkgroup"
              }
            }
          }
        },
        "description": "Get a list of workgroups for an organisation. The key can be used in the call to create a new dossier."
      }
    },
    "/dossiers/{dossierId}/documents/{documentId}/pages": {
      "delete": {
        "tags": [
          "Pages"
        ],
        "summary": "Remove multiple pages from a document",
        "operationId": "Pages_DeletePages",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "pages",
            "in": "body",
            "required": true,
            "description": "The specific page numbers in a document.",
            "schema": {
              "$ref": "#/definitions/PageIndicesModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Pages to delete",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The specified pages have been deleted from the document."
          }
        },
        "description": "Remove multiple pages from a document."
      }
    },
    "/dossiers/{dossierId}/documents/{documentId}/pages/Backgrounds": {
      "post": {
        "tags": [
          "Pages"
        ],
        "summary": "Change the background of one or more pages in the document",
        "operationId": "Pages_SetPaperType",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "dossierId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the dossier.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Dossier",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the document.",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Document",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "Information about the background to apply",
            "schema": {
              "$ref": "#/definitions/ChangeBackgroundModel"
            },
            "x-nullable": false,
            "x-ms-summary": "Background information",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "The background of the specified pages was successfully changed."
          }
        },
        "description": "Change the background of one or more pages in the document."
      }
    },
    "/organisation/{organisationId}/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "title": "WebhookContentModel",
          "type": "object",
          "description": "Information about the status update of a dossier",
          "required": [
            "PkisId",
            "DossierStatus",
            "Reason"
          ],
          "properties": {
            "PkisId": {
              "type": "string",
              "description": "Unique id of the dossier",
              "format": "guid"
            },
            "DossierStatus": {
              "type": "string",
              "description": "Status of the dossier"
            },
            "Reason": {
              "type": "string",
              "description": "Reason of the change"
            }
          }
        },
        "description": "Webhook payload"
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Register a new webhook for this organisation",
        "description": "Register an url for callback upon a statuschange. The PKIsigning platform will report any statusupdates of dossiers within this organisation to this url.",
        "operationId": "Webhook_CreateWebhook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "description": "Webhook details",
            "schema": {
              "title": "WebhookRequestModel",
              "type": "object",
              "required": [
                "Events",
                "Config",
                "Active"
              ],
              "properties": {
                "Events": {
                  "type": "array",
                  "description": "The events that the webhook is associated with.",
                  "items": {
                    "type": "string"
                  }
                },
                "Config": {
                  "type": "object",
                  "description": "Information about the configuration of a webhook",
                  "additionalProperties": {},
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "the url associated with the webhook.",
                      "default": "dummy",
                      "minLength": 1,
                      "x-ms-visibility": "internal",
                      "x-ms-notification-url": true
                    }
                  }
                },
                "Active": {
                  "type": "boolean",
                  "description": "This value indicates if the webhook is active."
                }
              }
            },
            "x-nullable": false,
            "x-ms-summary": "Webhook information",
            "x-ms-url-encoding": "single"
          },
          {
            "type": "string",
            "name": "organisationId",
            "in": "path",
            "required": true,
            "description": "Id of the organisation",
            "format": "guid",
            "x-nullable": false,
            "x-ms-summary": "Organisation",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Information about the created webhook.",
            "schema": {
              "$ref": "#/definitions/WebhookResponseModel"
            }
          }
        },
        "x-ms-trigger": "single"
      }
    }
  },
  "definitions": {
    "Signer": {
      "type": "object",
      "description": "Special type of actor",
      "required": [
        "action",
        "firstname",
        "lastname",
        "email",
        "mobile",
        "deadline",
        "order",
        "hasSigned",
        "validateRealIdentity"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the actor",
          "format": "guid",
          "x-nullable": "true"
        },
        "action": {
          "$ref": "#/definitions/DocumentSignerAction"
        },
        "firstname": {
          "type": "string",
          "description": "Firstname of the actor",
          "minLength": 1
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the actor"
        },
        "lastname": {
          "type": "string",
          "description": "Lastname of the actor",
          "minLength": 1
        },
        "fullName": {
          "type": "string",
          "description": "Combined firstname, prefix and lastname (readonly)"
        },
        "email": {
          "type": "string",
          "description": "Personal email address of the actor.",
          "minLength": 1
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the actor",
          "minLength": 1
        },
        "deadline": {
          "type": "string",
          "description": "The deadline for the actor to perform the action.",
          "format": "date-time",
          "minLength": 1
        },
        "order": {
          "type": "integer",
          "description": "Order in which actors should perform actions on the document",
          "format": "int32"
        },
        "emailActivity": {
          "type": "array",
          "description": "Metadata of email messages as sent by the platform to this actor",
          "items": {
            "$ref": "#/definitions/SignerActivity"
          },
          "x-nullable": "true"
        },
        "signingDate": {
          "type": "string",
          "description": "Date on which the actor has performed its action",
          "format": "date-time"
        },
        "hasSigned": {
          "type": "boolean",
          "description": "Has the actor performed an action"
        },
        "language": {
          "type": "string",
          "description": "Language of the actor"
        },
        "validateRealIdentity": {
          "type": "boolean",
          "description": "Should the real identity of the actor be verified (e.g. IDIN)"
        },
        "fieldName": {
          "type": "string",
          "description": "The fieldname to sign by this signer"
        },
        "placeholder": {
          "type": "string",
          "description": "The placeholder to look for in the document to position a new signaturefield"
        }
      }
    },
    "DocumentSignerAction": {
      "type": "string",
      "description": "Actiontype of an actor",
      "x-enumNames": [
        "Sign",
        "Download"
      ],
      "enum": [
        "Sign",
        "Download"
      ]
    },
    "SignerActivity": {
      "type": "object",
      "description": "Metadata of email message send to an actor",
      "required": [
        "timestamp"
      ],
      "properties": {
        "event": {
          "type": "string",
          "description": "Event for which the email was sent"
        },
        "reason": {
          "type": "string",
          "description": "Reason as indicated by the document owner"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp when the email was sent",
          "format": "date-time"
        },
        "pkisMessageType": {
          "type": "string",
          "description": "Type of the message"
        },
        "pkisInviteId": {
          "type": "string",
          "description": "InviteId to which the message belongs"
        },
        "email": {
          "type": "string",
          "description": "Email address to where the message was sent"
        }
      }
    },
    "DocumentMetaDataModel": {
      "type": "object",
      "description": "General metadata of the document",
      "required": [
        "pages",
        "created",
        "expires",
        "id",
        "status",
        "dossierId",
        "isMyDocument",
        "dossierIndex"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the document."
        },
        "lastUpdate": {
          "type": "string",
          "description": "LastUpdate when the document entered the platform.",
          "format": "date-time"
        },
        "pages": {
          "type": "integer",
          "description": "Number of pages in the document.",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "description": "The date and time that the document was made.",
          "format": "date-time"
        },
        "expires": {
          "type": "string",
          "description": "The date and time that the document will expire.",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "description": "The unique id of the document.",
          "format": "guid"
        },
        "status": {
          "$ref": "#/definitions/DocumentStatuses"
        },
        "signed": {
          "type": "boolean",
          "description": "This value indicates if the document has been signed."
        },
        "signatures": {
          "type": "array",
          "description": "A list containing the data of all signatures on the document.",
          "items": {
            "$ref": "#/definitions/SignatureData"
          }
        },
        "emptySignatureFields": {
          "type": "array",
          "description": "A list containing the data of all signatures that have not been placed on the document.",
          "items": {
            "$ref": "#/definitions/SignatureField"
          }
        },
        "containsBlankSignatureFields": {
          "type": "boolean",
          "description": "This value indicates if the document has blank signatures fields."
        },
        "actors": {
          "type": "array",
          "description": "A list of actors that have an association with the document.",
          "items": {
            "$ref": "#/definitions/Signer"
          }
        },
        "dossierId": {
          "type": "string",
          "description": "The unique id of the associated dossier.",
          "format": "guid"
        },
        "reasons": {
          "type": "string",
          "description": "A field for extra information."
        },
        "signerNote": {
          "type": "string",
          "description": "A field for extra information that will be shown to the Signers."
        },
        "recipientNote": {
          "type": "string",
          "description": "A field for extra information that will be shown to the Recipients."
        },
        "isMyDocument": {
          "type": "boolean",
          "description": "This field indicates if the account that is associated with the request owns the document."
        },
        "dossierIndex": {
          "type": "integer",
          "description": "The index of the document in the dossier.",
          "format": "int32"
        }
      }
    },
    "DocumentStatuses": {
      "type": "string",
      "description": "Status of a document",
      "x-enumNames": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Elapsed",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingFiling",
        "PendingDetermination"
      ],
      "enum": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Elapsed",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingFiling",
        "PendingDetermination"
      ]
    },
    "SignatureData": {
      "type": "object",
      "required": [
        "date",
        "euQualified",
        "advanced",
        "eSeal"
      ],
      "properties": {
        "subject": {
          "type": "array",
          "description": "The subject line of the certificate",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndString"
          }
        },
        "issuer": {
          "type": "array",
          "description": "The person that placed the signature.",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndString"
          }
        },
        "date": {
          "type": "string",
          "description": "The date and time when the signature has been placed.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "The location where the Signature has been placed. "
        },
        "reason": {
          "type": "string",
          "description": "An extra information field."
        },
        "euQualified": {
          "type": "boolean",
          "description": "This value indicates the certificate is an eu qualified certificate."
        },
        "advanced": {
          "type": "boolean",
          "description": "This value indicates the certificate is an advanced certificate."
        },
        "eSeal": {
          "type": "boolean",
          "description": "This value indicates of the certificate used is eseal qualified."
        }
      }
    },
    "KeyValuePairOfStringAndString": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SignatureField": {
      "type": "object",
      "required": [
        "page",
        "x",
        "y",
        "height",
        "width"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the signature field."
        },
        "page": {
          "type": "integer",
          "description": "The page of the document where the signature field has been placed.",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "description": "The X coordinates where the signature field starts.",
          "format": "double"
        },
        "y": {
          "type": "number",
          "description": "The Y coordinates where the signature field starts.",
          "format": "double"
        },
        "height": {
          "type": "number",
          "description": "The Y Value of the size of signature field.",
          "format": "double"
        },
        "width": {
          "type": "number",
          "description": "The X Value of the size of signature field.",
          "format": "double"
        }
      }
    },
    "UpdateDocumentMetadataModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the document."
        },
        "filename": {
          "type": "string",
          "description": "The name of the file associated with the document."
        }
      }
    },
    "DossierModel": {
      "type": "object",
      "required": [
        "status",
        "id",
        "signed",
        "dossierType",
        "myDossier",
        "clearancelevel"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "List of documents beloging to this dossier",
          "items": {
            "$ref": "#/definitions/DocumentModel"
          }
        },
        "status": {
          "$ref": "#/definitions/DossierStatuses"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of the dossier",
          "format": "guid"
        },
        "dossierName": {
          "type": "string",
          "description": "Name of the Dossier the document belongs to"
        },
        "actors": {
          "type": "array",
          "description": "Signers",
          "items": {
            "$ref": "#/definitions/Signer"
          }
        },
        "signed": {
          "type": "boolean",
          "description": "True if the document already has a signature"
        },
        "signatures": {
          "type": "array",
          "description": "Detail signature data",
          "items": {
            "$ref": "#/definitions/SignatureData"
          }
        },
        "dossierType": {
          "$ref": "#/definitions/DossierTypes"
        },
        "reasons": {
          "type": "string",
          "description": "An extra information field."
        },
        "signerNote": {
          "type": "string",
          "description": "An extra information field that will be shown to the signer."
        },
        "recipientNote": {
          "type": "string",
          "description": "An extra information field that will be shown to the recipient."
        },
        "accorderNote": {
          "type": "string",
          "description": "An extra information field that will be shown to the accorder."
        },
        "expires": {
          "type": "string",
          "description": "The date and time when the dossier will expire.",
          "format": "date-time"
        },
        "emailActivity": {
          "type": "array",
          "description": "A list of the emails that have been send.",
          "items": {
            "$ref": "#/definitions/SignerActivity"
          }
        },
        "myDossier": {
          "type": "boolean",
          "description": "A value indicating if the account associated with the request owns the dossier."
        },
        "taxPaymentStatus": {
          "type": "string",
          "description": "An extra information field that indicates the status of the tax payment."
        },
        "workgroup": {
          "type": "string",
          "description": "this is the description of the workgroup",
          "format": "guid",
          "x-ms-visibility": "advanced"
        },
        "clearancelevel": {
          "type": "integer",
          "description": "A dossier is only visible to other users with the same or higher clearance level with a workgroup",
          "format": "int32",
          "x-ms-visibility": "advanced",
          "default": 1
        }
      }
    },
    "DocumentModel": {
      "type": "object",
      "required": [
        "id",
        "documentType",
        "dossierIndex",
        "documentstatus"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the dossier",
          "format": "guid"
        },
        "documentName": {
          "type": "string",
          "description": "Name of the Dossier the document belongs to"
        },
        "documentType": {
          "$ref": "#/definitions/DocumentTypes"
        },
        "dossierIndex": {
          "type": "integer",
          "description": "Position within the dossie",
          "format": "int32"
        },
        "documentstatus": {
          "$ref": "#/definitions/DocumentStatuses"
        },
        "actors": {
          "type": "array",
          "description": "Actors within the document",
          "items": {
            "$ref": "#/definitions/Signer"
          }
        }
      }
    },
    "DocumentTypes": {
      "type": "string",
      "description": "Type of a document",
      "x-enumNames": [
        "RegularPdf",
        "XbrlPublicationVersionAnnualReport",
        "XbrlAuditorsReport",
        "DetachedSignature",
        "XbrlPreparerExtension",
        "PdfAudittrail",
        "XbrlCompositionStatement",
        "XbrlStatutoryVersionAnnualReport",
        "DNBStaat",
        "RegularXml",
        "ReferencedDocument",
        "Json",
        "JsonSignature",
        "GenericTextFile",
        "VatDeclaration",
        "VatEuRecapitulativeStatement",
        "IncomeTaxDeclaration",
        "CorporateTaxDeclaration",
        "XbrlNexusVersionAnnualReport",
        "XbrlAuditorsReportSFO",
        "XbrlAssessmentStatement",
        "PageImage",
        "SHA256Hash",
        "SHA256Signature",
        "Unspecified"
      ],
      "enum": [
        "RegularPdf",
        "XbrlPublicationVersionAnnualReport",
        "XbrlAuditorsReport",
        "DetachedSignature",
        "XbrlPreparerExtension",
        "PdfAudittrail",
        "XbrlCompositionStatement",
        "XbrlStatutoryVersionAnnualReport",
        "DNBStaat",
        "RegularXml",
        "ReferencedDocument",
        "Json",
        "JsonSignature",
        "GenericTextFile",
        "VatDeclaration",
        "VatEuRecapitulativeStatement",
        "IncomeTaxDeclaration",
        "CorporateTaxDeclaration",
        "XbrlNexusVersionAnnualReport",
        "XbrlAuditorsReportSFO",
        "XbrlAssessmentStatement",
        "PageImage",
        "SHA256Hash",
        "SHA256Signature",
        "Unspecified"
      ]
    },
    "DossierStatuses": {
      "type": "string",
      "description": "Status of a dossier",
      "x-enumNames": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingFiling"
      ],
      "enum": [
        "Active",
        "Completed",
        "Declined",
        "Processing",
        "Error",
        "PendingSbrNexus",
        "Withdrawn",
        "PendingDigipoort",
        "New",
        "Filing",
        "InvitationExpired",
        "Expired",
        "PendingApproval",
        "PendingDownload",
        "PendingSignature",
        "PendingFiling"
      ]
    },
    "DossierTypes": {
      "type": "string",
      "description": "Type of a dossier",
      "x-enumNames": [
        "IcpDeclaration",
        "IncomeTaxDeclaration",
        "VatDeclaration",
        "Unknown",
        "PDF",
        "FinancialStatements",
        "SbrAssurance",
        "SbrNexusAssurance",
        "SbrNexusAnnualReport",
        "CorporateTaxDeclaration",
        "Incomplete"
      ],
      "enum": [
        "IcpDeclaration",
        "IncomeTaxDeclaration",
        "VatDeclaration",
        "Unknown",
        "PDF",
        "FinancialStatements",
        "SbrAssurance",
        "SbrNexusAssurance",
        "SbrNexusAnnualReport",
        "CorporateTaxDeclaration",
        "Incomplete"
      ]
    },
    "CreateDossierModel": {
      "type": "object",
      "description": "Information required for a new dossier",
      "required": [
        "name",
        "clearancelevel"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the new dossier",
          "maxLength": 500,
          "minLength": 4
        },
        "workgroupId": {
          "type": "string",
          "description": "Id of the workgroup in which the dossier will reside",
          "format": "guid"
        },
        "clearancelevel": {
          "type": "integer",
          "description": "Clearance level within the workgroup",
          "format": "int32",
          "default": 1
        },
        "owner": {
          "type": "string",
          "description": "Emailaddress of the owner of the dossier",
          "format": "email"
        }
      }
    },
    "BackgroundModel": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique is of the background.",
          "format": "guid",
          "x-nullable": "true"
        },
        "name": {
          "type": "string",
          "description": "The name of the background."
        },
        "thumbnail": {
          "type": "string",
          "description": "The Thumbnail of the background.",
          "format": "byte",
          "x-nullable": "true"
        }
      }
    },
    "PaperTypeModel": {
      "type": "object",
      "description": "A papertype to be used as background",
      "required": [
        "id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name as to be shown to the user"
        },
        "id": {
          "type": "string",
          "description": "Id of the papertype.",
          "format": "guid"
        }
      }
    },
    "OrganisationWorkgroup": {
      "type": "object",
      "description": "A workgroup that is used within a dossier",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of the workgroup",
          "format": "guid"
        },
        "name": {
          "type": "string",
          "description": "Name of the workgroup"
        }
      }
    },
    "PageIndicesModel": {
      "type": "object",
      "description": "Default model containing pages to perform an action on",
      "properties": {
        "pages": {
          "type": "array",
          "description": "a list of pagenumbers that will be removed.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ChangeBackgroundModel": {
      "type": "object",
      "properties": {
        "backgrounds": {
          "type": "array",
          "description": "Collection of pages with their background to use",
          "items": {
            "$ref": "#/definitions/PageBackground"
          }
        }
      }
    },
    "PageBackground": {
      "type": "object",
      "required": [
        "pageNr",
        "removePreviousBackground"
      ],
      "properties": {
        "pageNr": {
          "type": "integer",
          "description": "Number of the page to set the background for.",
          "format": "int32"
        },
        "backgroundId": {
          "type": "string",
          "description": "Id of the background to use. Use null to remove the background.",
          "format": "guid"
        },
        "removePreviousBackground": {
          "type": "boolean",
          "description": "This value indicates if the current background needs to be removed."
        }
      }
    },
    "WebhookResponseModel": {
      "type": "object",
      "description": "Information about a webhook registration",
      "required": [
        "events",
        "config",
        "active",
        "id",
        "created",
        "lastUpdate"
      ],
      "properties": {
        "events": {
          "type": "array",
          "description": "The events that the webhook is associated with.",
          "items": {
            "type": "string"
          }
        },
        "config": {
          "$ref": "#/definitions/WebhookConfig"
        },
        "active": {
          "type": "boolean",
          "description": "This value indicates if the webhook is active."
        },
        "id": {
          "type": "string",
          "description": "The unique id of the webhook.",
          "format": "guid"
        },
        "created": {
          "type": "string",
          "description": "The date and time of when the webhook has been created.",
          "format": "date-time"
        },
        "lastUpdate": {
          "type": "string",
          "description": "The date and time of when the webhook has been updated.",
          "format": "date-time"
        }
      }
    },
    "WebhookConfig": {
      "type": "object",
      "description": "Information about the configuration of a webhook",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string",
          "description": "the url associated with the webhook.",
          "minLength": 1,
          "x-ms-visibility": "internal",
          "default": "dummy"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://devidentity.pkisigning.io/connect/authorize",
      "tokenUrl": "https://devidentity.pkisigning.io/connect/token",
      "scopes": {
        "pkisigning.platform": "Required to access default platform API's",
        "ImpersonateOwner": "Required to override dossier owner",
        "openid": "Always required",
        "profile": "Always required",
        "offline_access": "Always required"
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://pkisigning.nl"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://pkisigning.nl/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ]
}