{
  "swagger": "2.0",
  "info": {
    "version": "9.1.0",
    "title": "HighGear Workflow",
    "description": "HighGear makes it easy to rapidly deploy and securely manage work, at scale. As a highly configurable no-code workflow platform, connecting with HighGear allows you to readily integrate business applications. Get your entire team connected across the enterprise and start building seamless workflows and processes with more visibility, auditability, and real-time measurement of all work activity.",
    "contact": {
      "name": "HighGear Support",
      "url": "https://www.highgear.com/support/",
      "email": "support@HighGear.com"
    }
  },
  "host": "highgear.example.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/9.1.0/task/ms-schema": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task field schema",
        "operationId": "TaskGetTaskSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form with the fields for the operation.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Task Form"
          },
          {
            "name": "method",
            "in": "query",
            "description": "The type of task operation",
            "required": true,
            "type": "string",
            "x-ms-summary": "Method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use this action to retrieve the field schema for the specified task form."
      }
    },
    "/api/9.1.0/task/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task",
        "operationId": "TaskGetTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The task identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Task Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form with the fields to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListTaskForms",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Task Form"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTaskSchema"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to get the field values for a task in your HighGear system."
      },
      "patch": {
        "tags": [
          "Task"
        ],
        "summary": "Update task",
        "operationId": "TaskEditTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The task identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Task Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form with the fields to be updated.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListTaskForms",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Task Form"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The fields to be updated for the specified task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskChangeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskEditResponse"
            }
          },
          "400": {
            "description": "The server cannot update the task due to invalid user input.",
            "schema": {
              "$ref": "#/definitions/TaskPersistFailureResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to update the task form fields of a task in your HighGear system. This action returns the ID of the task and a boolean stating the task was modified (true or false)."
      }
    },
    "/api/9.1.0/task": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create task",
        "operationId": "TaskCreateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form of the new task.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListTaskForms",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Task Form"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The field data for the new task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskCreateResponse"
            }
          },
          "400": {
            "description": "The server cannot create the task due to invalid user input.",
            "schema": {
              "$ref": "#/definitions/TaskPersistFailureResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to create a new task in your HighGear system. This action returns the ID of the new task."
      }
    },
    "/api/9.1.0/task/ms-search/schema": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task search schema",
        "operationId": "TaskGetSimpleSearchSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form with the fields to be used as search criteria.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Task Form"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to retrieve the task search criteria for the specified task form.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/9.1.0/task/ms-search": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Search tasks",
        "description": "Use this action to search for tasks in your HighGear system. The search is based on the field criteria of a specified task form. This action returns the ID, and brief description of the tasks that match the search criteria.",
        "operationId": "TaskSearchSimplePP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_type",
            "in": "query",
            "description": "The task form with the fields to be used as search criteria.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListTaskForms",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Task Form"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskSimpleSearchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskSearchResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/api/9.1.0/task/file/{fileId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get task file content",
        "description": "Use this action to get a file attached to a task in your HighGear system.",
        "operationId": "AttachmentGetTaskFileById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The task file identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "File Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary",
              "title": "File Content",
              "description": "The content of the file."
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Delete task file",
        "operationId": "AttachmentDeleteTaskFileById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The task file identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "File Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to delete a file attached to a task in your HighGear system."
      }
    },
    "/api/9.1.0/contact/ms-schema": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact field schema",
        "operationId": "ContactGetContactSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "description": "The type of contact operation",
            "required": true,
            "type": "string",
            "x-ms-summary": "Method"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type with the fields for the operation",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Contact Type"
          },
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-summary": "Contact Class"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use This action retrieve the field schema for the specified contact type."
      }
    },
    "/api/9.1.0/contact/{contactId}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact",
        "operationId": "ContactGetContact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "The contact identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Contact Id", 
            "x-ms-url-encoding": "single"
          },
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClasses",
              "value-path": "name",
              "value-title": "title"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Class"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type with the fields to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClassContactTypes",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "contact_class": {
                  "parameter": "contact_class"
                }
              }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetContactSchema"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to get the field values for a contact in your HighGear system."
      },
      "patch": {
        "tags": [
          "Contact"
        ],
        "summary": "Update contact",
        "operationId": "ContactEditContact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "The contact identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Contact Id",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClasses",
              "value-path": "name",
              "value-title": "title"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Class"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type with the fields to be updated.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClassContactTypes",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "contact_class": {
                  "parameter": "contact_class"
                }
              }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Type"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The fields to be updated for the specified contact.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactChangeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateContactResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to update the contact type fields for a contact in your HighGear system. This action returns the ID of the contact that was modified."
      }
    },
    "/api/9.1.0/contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create contact",
        "operationId": "ContactCreateContact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClasses",
              "value-path": "name",
              "value-title": "title"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Class"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type of the new contact",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClassContactTypes",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "contact_class": {
                  "parameter": "contact_class"
                }
              }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Type"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The field data for the new contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateContactResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to create a new contact (individual, organizational unit, permission group, asset, or queue) in your HighGear system. This action returns the ID of the new contact."
      }
    },
    "/api/9.1.0/contact/ms-search/schema": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact search schema",
        "operationId": "ContactGetSimpleSearchSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-summary": "Contact Class"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type with the fields to be used as search criteria.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Contact Type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to retrieve the contact search criteria for the specified contact type.",
        "x-ms-visibility": "internal"
      }
    },
    "/api/9.1.0/contact/ms-search": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Search contacts",
        "description": "Use this action to search for contacts in your HighGear system. The search is based on the field criteria of a specified contact type. This action returns the ID, name, and email address of the contacts that match the search criteria.",
        "operationId": "ContactSearchSimplePP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contact_class",
            "in": "query",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClasses",
              "value-path": "name",
              "value-title": "title"
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Class"
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "The contact type with the fields to be used as search criteria.",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClassContactTypes",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "contact_class": {
                  "parameter": "contact_class"
                }
              }
            },
            "x-ms-visibility": "important",
            "x-ms-summary": "Contact Type"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactSimpleSearchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/api/9.1.0/contact/file/{fileId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get contact file content",
        "description": "Use this action to get a file attached to a contact in your HighGear system.",
        "operationId": "AttachmentGetContactFileById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The contact file identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "File Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary",
              "title": "File Content",
              "description": "The content of the file."
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Delete contact file",
        "operationId": "AttachmentDeleteContactFileById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The contact file identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "File Id",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "description": "Use this action to delete a file attached to a contact in your HighGear system."
      }
    },
    "/api/9.1.0/workflow/subscription/subscribe": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "jobId": {
              "type": "integer",
              "format": "int64",
              "description": "The Id of the task that is executing this action",
              "title": "Task Id"
            },
            "loggedInUser": {
              "type": "integer",
              "format": "int64",
              "description": "The Id of the logged in user when the workflow was executed",
              "title": "Logged In User Id"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "When a task enters a web request node",
        "description": "This action triggers a new flow when a task enters a Make Web Request node within a workflow defined in your HighGear System.",
        "operationId": "SubscriptionSubscribe",
        "x-ms-trigger": "single",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The subscription model",
              "type": "object",
              "properties": {
                "workflow_id": {
                  "format": "int64",
                  "description": "The workflow that contains the Make Web Request node that will trigger the flow.",
                  "type": "integer",
                  "readOnly": false,
                  "title": "Workflow",
                  "x-ms-dynamic-values": {
                    "operationId": "SubscriptionListNodes",
                    "value-path": "workflow_id",
                    "value-title": "workflow_name"
                  },
                  "x-ms-visibility": "important"
                },
                "node_id": {
                  "format": "int64",
                  "description": "The Make Web Request node that will trigger the flow.",
                  "type": "integer",
                  "readOnly": false,
                  "title": "Node",
                  "x-ms-dynamic-list": {
                    "operationId": "SubscriptionListNodes",
                    "itemValuePath": "node_id",
                    "itemTitlePath": "line_caption",
                    "parameters": {
                      "workflowId": {
                        "parameterReference": "model/workflow_id"
                      }
                    }
                  },
                  "x-ms-visibility": "important"
                },
                "url": {
                  "description": "The webhook URL",
                  "type": "string",
                  "readOnly": false,
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": "URL"
                },
                "label": {
                  "description": "The name of the subscription created for the Make Web Request node. This name will be displayed in the list of Active Subscriptions for the node.",
                  "type": "string",
                  "readOnly": false,
                  "x-ms-visibility": "important",
                  "title": "Name"
                }
              },
              "required": [
                "workflow_id",
                "node_id",
                "url",
                "label"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/api/9.1.0/workflow/subscription/{subscriptionId}": {
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete subscription",
        "operationId": "SubscriptionUnsubscribeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "token",
            "in": "query",
            "description": "The encrypted subscription token",
            "required": true,
            "type": "string",
            "x-ms-summary": "Token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use this action to delete a subscription defined in your HighGear system."
      }
    },
    "/api/9.1.0/workflow/subscription/available": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "List subscribable workflow nodes",
        "operationId": "SubscriptionListNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The identifier for the workflow of the subscription nodes.",
            "x-ms-summary": "Workflow Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubscriptionNodeResponseModel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use this action to list all of the subscribable workflow web request nodes."
      }
    },
    "/api/9.1.0/metadata/tasks/forms": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get task forms",
        "operationId": "MetadataListTaskForms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdNamePair"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "USe this action to list all of the available task forms."
      }
    },
    "/api/9.1.0/metadata/contacts/classes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get contact classes",
        "operationId": "MetadataListContactClasses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactClassResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use this action to retrieve the list of contact classes."
      }
    },
    "/api/9.1.0/metadata/contacts/types/{contact_class}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get contact types",
        "operationId": "MetadataListContactClassContactTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contact_class",
            "in": "path",
            "description": "The contact classification",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "MetadataListContactClasses",
              "value-path": "name",
              "value-title": "title"
            },
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdNamePair"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-visibility": "internal",
        "description": "Use this action to retrieve the list of contact types for the specified contact class."
      }
    }
  },
  "definitions": {
    "GetTaskSchema": {
      "description": "Get task schema",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "TaskGetTaskSchema",
        "parameters": {
          "job_type": {
            "parameter": "job_type"
          },
          "method": "get"
        },
        "value-path": "schema"
      }
    },
    "TaskChangeModel": {
      "description": "Update task schema",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "TaskGetTaskSchema",
        "parameters": {
          "job_type": {
            "parameter": "job_type"
          },
          "method": "patch"
        },
        "value-path": "schema"
      }
    },
    "TaskCreateModel": {
      "description": "Create task schema",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "TaskGetTaskSchema",
        "parameters": {
          "job_type": {
            "parameter": "job_type"
          },
          "method": "post"
        },
        "value-path": "schema"
      }
    },
    "TaskCreateResponse": {
      "description": "Task create response",
      "type": "object",
      "properties": {
        "task_id": {
          "format": "int64",
          "description": "The identifier of the new task",
          "type": "integer",
          "readOnly": false,
          "title": "Task Id"
        },
        "upload_failures": {
          "description": "The list of upload failure strings if any file upload operations failed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "title": "Upload Failures"
        }
      }
    },
    "TaskEditResponse": {
      "description": "Edit task response",
      "type": "object",
      "properties": {
        "task_id": {
          "format": "int64",
          "description": "The task identifier",
          "type": "integer",
          "readOnly": false,
          "title": "Task Id"
        },
        "was_task_modified": {
          "description": "States (true or false) the task was changed as a result of the action.",
          "type": "boolean",
          "readOnly": false,
          "title": "Was Task Modified"
        },
        "upload_failures": {
          "description": "The list of upload failure strings if any file upload operations failed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "title": "Upload Failures"
        }
      }
    },
    "TaskPersistFailureResponse": {
      "description": "The response when a task cannot be created or edited.",
      "type": "object",
      "properties": {
        "validationErrors": {
          "description": "The list of validation errors for a task save or create action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          },
          "readOnly": false,
          "title": "Validation Errors"
        },
        "message": {
          "description": "The error message",
          "type": "string",
          "readOnly": false,
          "title": "The error message"
        }
      }
    },
    "TaskSearchResponse": {
      "description": "Task search response",
      "type": "object",
      "properties": {
        "task_id": {
          "format": "int64",
          "type": "integer",
          "readOnly": false,
          "title": "Task Id",
          "description": "The task identifier"
        },
        "brief_description": {
          "type": "string",
          "readOnly": false,
          "title": "Brief Description",
          "description": "The brief description for the task"
        }
      }
    },
    "ValidationError": {
      "description": "Validation error",
      "type": "object",
      "properties": {
        "field": {
          "description": "The name of the field with the invalid value.",
          "type": "string",
          "readOnly": false,
          "title": "Field"
        },
        "type": {
          "description": "The type of the error",
          "type": "string",
          "readOnly": false,
          "title": "Error"
        },
        "code": {
          "description": "The specific error code for this error (or null).",
          "type": "string",
          "readOnly": false,
          "title": "Code"
        },
        "message": {
          "description": "The user friendly validation error message",
          "type": "string",
          "readOnly": false,
          "title": "Message"
        }
      }
    },
    "ExceptionResponse": {
      "description": "Exception response",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message",
          "type": "string",
          "readOnly": false,
          "title": "Message"
        }
      }
    },
    "GetContactSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "ContactGetContactSchema",
        "parameters": {
          "contact_type": {
            "parameter": "contact_type"
          },
          "contact_class": {
            "parameter": "contact_class"
          },
          "method": "get"
        },
        "value-path": "schema"
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "contact_id": {
          "format": "int64",
          "type": "integer",
          "readOnly": false,
          "title": "Contact Id",
          "description": "The contact identifier"
        },
        "name": {
          "type": "string",
          "readOnly": false,
          "title": "Name",
          "description": "The contact's name"
        },
        "email_address": {
          "type": "string",
          "readOnly": false,
          "title": "Email Address",
          "description": "The contact's email address"
        }
      }
    },
    "ContactCreateModel": {
      "description": "Create contact model",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "ContactGetContactSchema",
        "parameters": {
          "contact_type": {
            "parameter": "contact_type"
          },
          "contact_class": {
            "parameter": "contact_class"
          },
          "method": "post"
        },
        "value-path": "schema"
      }
    },
    "ContactChangeModel": {
      "description": "Updating contact model",
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "ContactGetContactSchema",
        "parameters": {
          "contact_type": {
            "parameter": "contact_type"
          },
          "contact_class": {
            "parameter": "contact_class"
          },
          "method": "patch"
        },
        "value-path": "schema"
      }
    },
    "CreateContactResponse": {
      "description": "Create contacts response",
      "type": "object",
      "properties": {
        "contact_id": {
          "format": "int64",
          "description": "The identifier of the new contact",
          "type": "integer",
          "readOnly": false,
          "title": "Contact Id"
        },
        "upload_failures": {
          "description": "The list of upload failure strings if any file upload operations failed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "title": "Upload Failures"
        }
      }
    },
    "SubscriptionNodeResponseModel": {
      "description": "Subscription node response model",
      "type": "object",
      "properties": {
        "workflow_id": {
          "format": "int64",
          "description": "The workflow identifier",
          "type": "integer",
          "readOnly": false,
          "title": "Workflow Id"
        },
        "workflow_name": {
          "description": "The workflow name",
          "type": "string",
          "readOnly": false,
          "title": "Workflow Name"
        },
        "node_id": {
          "format": "int64",
          "description": "The workflow node identifier",
          "type": "integer",
          "readOnly": false,
          "title": "Node Id"
        },
        "line_caption": {
          "description": "The line caption of the workflow node",
          "type": "string",
          "readOnly": false,
          "title": "Line Caption"
        }
      }
    },
    "IdNamePair": {
      "description": "A general purpose id/name pair model",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The identifier",
          "type": "integer",
          "readOnly": false,
          "title": "Id"
        },
        "name": {
          "description": "The name",
          "type": "string",
          "readOnly": false,
          "title": "Name"
        }
      }
    },
    "ContactClassResponse": {
      "description": "Contact class response",
      "type": "object",
      "properties": {
        "name": {
          "description": "The contact class name",
          "type": "string",
          "readOnly": false,
          "title": "Name"
        },
        "title": {
          "description": "The contact class display title",
          "type": "string",
          "readOnly": false,
          "title": "Title"
        }
      }
    },
    "TaskSimpleSearchModel": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "TaskGetSimpleSearchSchema",
        "parameters": {
          "job_type": {
            "parameter": "job_type"
          }
        },
        "value-path": "schema"
      }
    },
    "ContactSimpleSearchModel": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "ContactGetSimpleSearchSchema",
        "parameters": {
          "contact_class": {
            "parameter": "contact_class"
          },
          "contact_type": {
            "parameter": "contact_type"
          }
        },
        "value-path": "schema"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "API_Key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.highgear.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.highgear.com/platform-privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Collaboration"
    }
  ]
}