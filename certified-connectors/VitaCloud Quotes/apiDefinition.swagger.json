{
  "swagger": "2.0",
  "info": {
    "title": "VitaCloud Quotes",
    "description": "A daily dose of inspirational quotes delivered to you application or website. Choose from a variety of themes and authors.",
    "termsOfService": "https://www.vitacloud.co.uk",
    "contact": {
      "name": "VitaCloud Support",
      "url": "https://www.vitacloud.co.uk",
      "email": "support@vitacloud.co.uk"
    },
    "version": "1.0"
  },
  "host": "apis.vitacloud.co.uk",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.vitacloud.co.uk"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.vitacloud.co.uk/PrivacyPolicy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Lifestyle and Entertainment;Productivity"
    }
  ],
  "paths": {
    "/Authors": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get all authors",
        "description": "Sample request: GET /Authors",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the authors list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwAuthor"
              }
            }
          },
          "204": {
            "description": "If no list is returned"
          }
        },
        "operationId": "GetAuthors"
      }
    },
    "/Authors/{authortag}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get an author",
        "description": "Sample request: GET /Authors/aamilne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "authortag",
            "x-ms-summary": "Author Tag",
            "x-ms-url-encoding": "single",
            "description": "Author tag. For a list of available author tags, use the Get all authors action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the author",
            "schema": {
              "$ref": "#/definitions/VwAuthor"
            }
          },
          "204": {
            "description": "If no author is found for the supplied authortag"
          }
        },
        "operationId": "GetAuthor"
      }
    },
    "/Quotes/Today": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get today's quote",
        "description": "Sample request: GET /Quotes/today",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns today's quote",
            "schema": {
              "$ref": "#/definitions/VwQuote"
            }
          },
          "204": {
            "description": "If no quote is returned"
          }
        },
        "operationId": "GetTodaysQuote",
        "x-ms-visibility": "important"
      }
    },
    "/Quotes/Random": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get a random quote",
        "description": "Sample request: GET /Quotes/random",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a random quote",
            "schema": {
              "$ref": "#/definitions/VwQuote"
            }
          },
          "204": {
            "description": "If no quote is returned"
          }
        },
        "operationId": "GetRandomQuote",
        "x-ms-visibility": "important"
      }
    },
    "/Quotes": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get 5 random quotes",
        "description": "Sample request: GET /Quotes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of 5 quotes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotes",
        "x-ms-visibility": "important"
      }
    },
    "/Quotes/{number}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get a specified number of random quotes",
        "description": "Sample request: GET /Quotes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "x-ms-summary": "Number of quotes (max 10)",
            "x-ms-url-encoding": "single",
            "description": "Number of random quotes to return (max 10)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of quotes (max 10)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotesByNum",
        "x-ms-visibility": "important"
      }
    },
    "/Quotes/Author/{authortag}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get 5 random quotes for an author",
        "description": "Sample request: GET /Quotes/Author/aamilne,mahatmagandhi",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "authortag",
            "x-ms-summary": "Author Tag",
            "x-ms-url-encoding": "single",
            "description": "Author's tag or a comma separated list of author tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of quotes for a specific author",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotesByAuthor"
      }
    },
    "/Quotes/Author/{authortag}/{number}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get a specified number of random quotes for an author",
        "description": "Sample request: GET /Quotes/Author/aamilne/5",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "authortag",
            "x-ms-summary": "Author Tag",
            "x-ms-url-encoding": "single",
            "description": "Author's tag or a comma separated list of author tags",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "number",
            "x-ms-summary": "Number of quotes (max 10)",
            "x-ms-url-encoding": "single",
            "description": "Number of random quotes to return (max 10)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific number of quotes for a specific author (max 10)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotesByAuthorAndNum"
      }
    },
    "/Quotes/Theme/{themetag}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Gets up to 5 random quotes for a theme",
        "description": "Sample request: GET /Quotes/Theme/love Or GET /Quotes/Theme/love,inspiration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "themetag",
            "x-ms-summary": "Theme Tag",
            "x-ms-url-encoding": "single",
            "description": "Theme tag or a comma separated list of them tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of quotes for a specific theme (max 5)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotesByTheme"
      }
    },
    "/Quotes/Theme/{themetag}/{number}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get a specified number of random quotes for a theme",
        "description": "Sample request: GET /Quotes/Theme/love,inspiration/5",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "themetag",
            "x-ms-summary": "Theme Tag",
            "x-ms-url-encoding": "single",
            "description": "Theme tag or a comma separated list of them tags.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "number",
            "x-ms-summary": "Number of quotes (max 10)",
            "x-ms-url-encoding": "single",
            "description": "Number of random quotes to return (max 10)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific number of quotes for a specific theme (max 10)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwQuote"
              }
            }
          },
          "204": {
            "description": "If no quotes are returned"
          }
        },
        "operationId": "GetRandomQuotesByThemeAndNum"
      }
    },
    "/Themes": {
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get all themes",
        "description": "Sample request: GET /Themes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the themes list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VwTheme"
              }
            }
          },
          "204": {
            "description": "If no list is returned"
          }
        },
        "operationId": "GetThemes"
      }
    },
    "/Themes/{themetag}": {
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Gets a theme",
        "description": "Sample request: GET /Themes/happiness",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "themetag",
            "x-ms-summary": "Theme Tag",
            "x-ms-url-encoding": "single",
            "description": "Theme tag. For a list of available theme tags, use the Get all themes action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the theme",
            "schema": {
              "$ref": "#/definitions/VwTheme"
            }
          },
          "204": {
            "description": "If no theme is found for the supplied themetag"
          }
        },
        "operationId": "GetTheme"
      }
    }
  },
  "definitions": {
    "VwAuthor": {
      "title": "Author",
      "type": "object",
      "properties": {
        "AuthorTag": {
          "type": "string",
          "description": "Author's Tag",
          "title": "Tag"
        },
        "AuthorName": {
          "type": "string",
          "description": "Author's Name",
          "title": "Name"
        },
        "AuthorImage": {
          "type": "string",
          "description": "Author's Image",
          "title": "Image"
        },
        "AuthorLink": {
          "type": "string",
          "description": "Author's Wikipedia Link",
          "title": "Link"
        }
      },
      "additionalProperties": false
    },
    "VwQuote": {
      "title": "Quote",
      "type": "object",
      "properties": {
        "AuthorTag": {
          "type": "string",
          "description": "Author's Tag",
          "title": "Author Tag"
        },
        "AuthorName": {
          "type": "string",
          "description": "Author's Name",
          "title": "Author Name"
        },
        "AuthorImage": {
          "type": "string",
          "description": "Author's Image",
          "title": "Author Image"
        },
        "AuthorLink": {
          "type": "string",
          "description": "Author's Wikipedia Link",
          "title": "Author Link"
        },
        "Quote": {
          "type": "string",
          "description": "Quote Text",
          "title": "Text"
        },
        "Length": {
          "format": "int32",
          "type": "integer",
          "description": "Quote Length",
          "title": "Length"
        },
        "ThemeTag": {
          "type": "string",
          "description": "Theme tag",
          "title": "Theme Tag"
        },
        "ThemeName": {
          "type": "string",
          "description": "Theme Name",
          "title": "Theme Name"
        }
      },
      "additionalProperties": false
    },
    "VwTheme": {
      "title": "Theme",
      "type": "object",
      "properties": {
        "ThemeTag": {
          "type": "string",
          "description": "Theme tag",
          "title": "Tag"
        },
        "ThemeName": {
          "type": "string",
          "description": "Theme Name",
          "title": "Name"
        },
        "ThemeDesc": {
          "type": "string",
          "description": "Theme Description",
          "title": "Description",
          "x-ms-visibility": "internal"
        },
        "ThemeQuotes": {
          "format": "int32",
          "type": "integer",
          "description": "Number of quotes",
          "title": "Number of quotes"
        }
      },
      "additionalProperties": false
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-BLOBR-KEY"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}