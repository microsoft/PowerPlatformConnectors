{
  "swagger": "2.0",
  "info": {
    "title": "Integration Toolbox",
    "version": "1.0",
    "description": "The Integration Toolbox provides a set of operations which transform data in various ways.",
    "contact": {
      "name": "Integration Toolbox support",
      "url": "https://www.integration-toolbox.com",
      "email": "info@integration-toolbox.com"
    }
  },
  "host": "api.integration-toolbox.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.integration-toolbox.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://web.integration-toolbox.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Data"
    }
  ],
  "paths": {
    "/csvtojson": {
      "post": {
        "operationId": "CsvToJson",
        "summary": "CSV to JSON",
        "description": "Convert CSV to JSON.",
        "parameters": [
          {
            "name": "delimiter",
            "in": "query",
            "description": "The delimiter to use when parsing the csv file.",
            "type": "string",
            "x-ms-summary": "Delimiter",
            "required": true,
            "x-ms-visibility": "important"
          },
          {
            "name": "hasHeaderRecord",
            "in": "query",
            "description": "The first line of the csv file contains a header with column names.",
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "x-ms-summary": "Has Header Record",
            "required": true,
            "x-ms-visibility": "important"
          },
          {
            "name": "hasFieldsEnclosedInQuotes",
            "in": "query",
            "description": "The fields in the csv file are enclosed in quotes.",
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "x-ms-summary": "Has Fields Enclosed In Quotes",
            "x-ms-visibility": "important",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "firstname,lastname,email\r\nJohn,\"Doe,doe\",john@example.com\r\nJane,Doe,jane@example.com",
              "x-ms-visibility": "important"
            },
            "description": "CSV data.",
            "x-ms-visibility": "important",
            "required": true
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/fixedwidthtojson": {
      "post": {
        "operationId": "FixedWidthToJson",
        "summary": "Fixed width to JSON",
        "description": "Convert fixed width text to JSON.",
        "parameters": [
          {
            "name": "fieldWidths",
            "in": "query",
            "description": "A comma separated list of integers containing the width of every field in the file.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Field Widths",
            "x-ms-visibility": "important"
          },
          {
            "name": "hasHeaderRecord",
            "in": "query",
            "description": "The first line of the csv file contains a header with column names.",
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "x-ms-summary": "Has Header Record",
            "required": true,
            "x-ms-visibility": "important"
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "firstname lastname  email               \r\nJohn      Doe       john@example.com    \r\nJane      Doe       jane@example.com    ",
              "x-ms-visibility": "important"
            },
            "description": "Fixed width data.",
            "x-ms-visibility": "important",
            "required": true
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/sortjson": {
      "post": {
        "operationId": "SortJson",
        "summary": "Sort JSON",
        "description": "Sort JSON.",
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Sorting direction.",
            "required": true,
            "type": "string",
            "default": "Ascending",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "x-ms-summary": "Direction",
            "x-ms-visibility": "important"
          },
          {
            "name": "sortKey",
            "in": "query",
            "description": "The name of the element to sort by, required when sorting objects.",
            "type": "string",
            "x-ms-summary": "Sort Key",
            "x-ms-visibility": "important"
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "[{\"name\":\"Anders\",\"age\":19},{\"name\":\"Fredrik\",\"age\":32},{\"name\":\"Zoran\",\"age\":52}]",
              "x-ms-visibility": "important"
            },
            "description": "JSON data.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/pgpencrypt": {
      "post": {
        "operationId": "PGPEncrypt",
        "summary": "PGP encrypt",
        "description": "Encrypt data with PGP.",
        "parameters": [
          {
            "name": "publicKey",
            "in": "query",
            "description": "The PGP public key to use when encrypting the request body.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Public Key",
            "x-ms-visibility": "important"
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "Data to encrypt.",
              "x-ms-visibility": "important"
            },
            "description": "Data to encrypt.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/pgpdecrypt": {
      "post": {
        "operationId": "PGPDecrypt",
        "summary": "PGP decrypt",
        "description": "Decrypt data encrypted with PGP.",
        "parameters": [
          {
            "name": "privateKey",
            "in": "query",
            "description": "The PGP private key to use when decrypting the request body.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Private Key",
            "x-ms-visibility": "important"
          },
          {
            "name": "passPhrase",
            "in": "query",
            "description": "The passphrase to use when decrypting the request body.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Passphrase",
            "x-ms-visibility": "important"
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "Data to decrypt",
              "x-ms-visibility": "important"
            },
            "description": "Data to decrypt.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/pgpgeneratekeys": {
      "get": {
        "operationId": "PGPGenerateKeys",
        "summary": "PGP generate keys",
        "description": "Generate a PGP public and private key.",
        "parameters": [
          {
            "name": "passPhrase",
            "in": "query",
            "description": "The passphrase to use when generating keys.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Passphrase",
            "x-ms-visibility": "important"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The username to use when generating keys.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Username",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/convertencoding": {
      "post": {
        "operationId": "ConvertEncoding",
        "summary": "Convert encoding",
        "description": "Convert from one encoding to another.",
        "parameters": [
          {
            "name": "inputEncoding",
            "in": "query",
            "description": "The encoding of the request body.",
            "required": true,
            "type": "string",
            "enum": [
              "utf-8",
              "utf-16",
              "iso-8859-1",
              "us-ascii",
              "utf-16BE",
              "utf-32",
              "utf-32BE",
              "utf-7"
            ],
            "x-ms-summary": "Input Encoding",
            "x-ms-visibility": "important"
          },
          {
            "name": "outputEncoding",
            "in": "query",
            "description": "The wanted output encoding.",
            "required": true,
            "type": "string",
            "enum": [
              "utf-8",
              "utf-16",
              "iso-8859-1",
              "us-ascii",
              "utf-16BE",
              "utf-32",
              "utf-32BE",
              "utf-7"
            ],
            "x-ms-summary": "Output Encoding",
            "x-ms-visibility": "important"
          },
          {
            "name": "addByteOrderMark",
            "in": "query",
            "description": "Add byte order mark (BOM) to the output. Only applicable for UTF8, UTF16, UTF32.",
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "x-ms-summary": "Add Byte Order Mark (BOM)",
            "required": false,
            "x-ms-visibility": "important"
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "example": "Data to convert.",
              "x-ms-visibility": "important"
            },
            "description": "Data to convert.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/compress": {
      "post": {
        "operationId": "Compress",
        "summary": "Compress data",
        "description": "Compress data using GZip, Brotli, or Deflate.",
        "parameters": [
          {
            "name": "compressionType",
            "in": "query",
            "description": "The compression algorithm to use.",
            "required": true,
            "type": "string",
            "default": "GZip",
            "enum": [
              "GZip",
              "Brotli",
              "Deflate"
            ],
            "x-ms-summary": "Compression Type",
            "x-ms-visibility": "important"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "Data to compress.",
              "x-ms-visibility": "important"
            },
            "description": "Data to compress.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    },
    "/decompress": {
      "post": {
        "operationId": "Decompress",
        "summary": "Decompress data",
        "description": "Decompress data compressed with Gzip, Brotli, or Deflate.",
        "parameters": [
          {
            "name": "compressionType",
            "in": "query",
            "description": "The compression algorithm to use.",
            "required": true,
            "type": "string",
            "default": "GZip",
            "enum": [
              "GZip",
              "Brotli",
              "Deflate"
            ],
            "x-ms-summary": "Compression Type",
            "x-ms-visibility": "important"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "Data to decompress.",
              "x-ms-visibility": "important"
            },
            "description": "Data to decompress.",
            "required": true,
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Api-Key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}