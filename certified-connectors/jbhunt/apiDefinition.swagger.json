{
  "swagger": "2.0",
  "info": {
    "title": "JBHunt",
    "description": "Access to committed, market-relevant rating, tendering, and tracking. Connected to nearly 1M trucks through carriers on 360 Marketplace by J.B. Hunt.",
    "version": "1.0",
    "contact": {
      "name": "Microsoft Dynamics",
      "url": "https://aka.ms/iomsupport",
      "email": "iomdri@microsoft.com"
    }
  },
  "host": "api.jbhunt.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/problem+json"
  ],
  "paths": {
    "/orders-api/orders": {
      "post": {
        "description": "Creates an order in the J.B. Hunt 360 platform.",
        "operationId": "Create_order",
        "summary": "Create an Order",
        "tags": [
          "order"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Describes the characteristics of the order to create.",
            "x-ms-summary": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The order was received and will be processed asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Refers to the primary resource created by the request. See [RFC 7231, Section 7.1.2](https://tools.ietf.org/html/rfc7231#section-7.1.2).\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "400": {
            "description": "Invalid request for create order.",
            "schema": {
              "$ref": "#/definitions/OrdersPost400Response"
            }
          },
          "401": {
            "description": "The request has not been applied because it lacks valid authentication credentials for the target resource. See [RFC 7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1).\n",
            "schema": {
              "$ref": "#/definitions/OrdersPost401Response"
            }
          },
          "403": {
            "description": "The server understood the request but refuses to authorize it. See [RFC 7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3).\n",
            "schema": {
              "$ref": "#/definitions/OrdersPost403Response"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request. See [RFC 7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1).\n",
            "schema": {
              "$ref": "#/definitions/OrdersPost500Response"
            }
          }
        }
      }
    },
    "/tracking/orders": {
      "get": {
        "description": "Fetches all orders according to the search parameters. The most common search parameter used is orderIds.An order is defined (within the context of TrackIt API v1) as an entity tracked from the first pickup stop to the final delivery stop for a given quantity of freight (i.e., within a container or on a flat bed trailer).",
        "operationId": "Find_orders",
        "summary": "Orders - Find Orders",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "orderIds",
            "in": "query",
            "description": "Seven digit alphanumeric value that is the typical order identifier used to filter trackables.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "OrderIds"
          },
          {
            "name": "trackableIds",
            "in": "query",
            "description": "32-character, alphanumeric, hyphenated identifier(s) used to retrieve trackables. The trackableId field on the response payload will contain this identifier.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "TrackableIds"
          },
          {
            "name": "billOfLadings",
            "in": "query",
            "description": "Bill of lading used to filter trackables.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "BillOfLadings"
          },
          {
            "name": "purchaseOrders",
            "in": "query",
            "description": "Purchase order used to filter trackables.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "PurchaseOrders"
          },
          {
            "name": "referenceIdentifiers",
            "in": "query",
            "description": "Customer reference identifier used to filter trackables. Each referenceIdentifier must meet the minimum length of four characters.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "ReferenceIdentifiers"
          },
          {
            "name": "billToCodes",
            "in": "query",
            "description": "List of bill to codes an authorized account is able to access.Given no other parameters, we will retrieve a paged set of results based on this information.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "BillToCodes"
          },
          {
            "name": "updatedFromTimestamp",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). Starting date for retrieving trackables data for a resource updated after the requested date.",
            "type": "string",
            "x-ms-summary": "updatedFromTimestamp"
          },
          {
            "name": "updatedToTimestamp",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). Ending date for retrieving trackables data for a resource updated before the requested date.",
            "type": "string",
            "x-ms-summary": "updatedToTimestamp"
          },
          {
            "name": "orderStatuses",
            "in": "query",
            "description": "Order statuses used to filter orders.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "OrderStatuses"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The zero-based index of the page to include as the collection's representation.",
            "type": "string",
            "x-ms-summary": "pageIndex"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to include in the response. Default pageSize is 25. Maximum pageSize is 25.",
            "type": "string",
            "default": "25",
            "x-ms-summary": "pageSize"
          }
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "description": "The specified orders that were found.",
            "schema": {
              "description": "List of orders retrieved.",
              "type": "object",
              "properties": {
                "orders": {
                  "description": "List of order objects.",
                  "type": "array",
                  "items": {
                    "title": "Order",
                    "description": "Order - All pickups and all deliveries for one order.",
                    "allOf": [
                      {
                        "title": "Trackable",
                        "description": "Shared properties for trackables.",
                        "type": "object",
                        "properties": {
                          "trackableId": {
                            "description": "The unique tracking id of the trackable.",
                            "type": "string"
                          },
                          "referenceIdentifiers": {
                            "description": "Reference identifiers associated with the trackable.",
                            "type": "array",
                            "items": {
                              "title": "Reference Identifier",
                              "description": "Identifier that can be tied to a movement.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of reference identifier.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Reference identifier",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "segments": {
                            "description": "Segments of a move completed by a trailer, truck, or other mode of transportation.",
                            "type": "array",
                            "items": {
                              "title": "Segment",
                              "description": "A segment of the movement carried out by a truck or train.",
                              "type": "object",
                              "properties": {
                                "transitMode": {
                                  "description": "Describes the mode of transit for the leg (ROAD, RAIL).",
                                  "enum": [
                                    "ROAD",
                                    "RAIL"
                                  ],
                                  "type": "string"
                                },
                                "transitStatus": {
                                  "description": "Describes the current transit status of the leg (Planned, InTransit, Complete).",
                                  "enum": [
                                    "Planned",
                                    "InTransit",
                                    "Complete"
                                  ],
                                  "type": "string"
                                },
                                "carrierSCAC": {
                                  "description": "SCAC of carrier responsible for the leg of the movement.",
                                  "type": "string"
                                },
                                "sequenceNumber": {
                                  "description": "Sequenced order for legs within a movement.",
                                  "type": "number"
                                },
                                "referenceIdentifiers": {
                                  "description": "List of reference identifiers for the leg.",
                                  "type": "array",
                                  "items": {
                                    "title": "Reference Identifier",
                                    "description": "Identifier that can be tied to a movement.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of reference identifier.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Reference identifier",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "stops": {
                                  "description": "List of stops for a leg",
                                  "type": "array",
                                  "items": {
                                    "title": "Stop",
                                    "description": "Tracks destinations and activities at different stops for the current leg.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Stop Identifier",
                                        "description": "Identifier for the stop.",
                                        "type": "string"
                                      },
                                      "operationalPlanStopId": {
                                        "title": "Operational Plan Stop Id",
                                        "description": "The identifier for the stop as part of the operational plan. Typically, this is the stop identifier used by 360 Loads.",
                                        "type": "string"
                                      },
                                      "sequenceNumber": {
                                        "description": "Sequenced order for stops within a leg.",
                                        "type": "number"
                                      },
                                      "type": {
                                        "description": "Describes the type of stop (pickup or dropoff)",
                                        "type": "string"
                                      },
                                      "progress": {
                                        "description": "Progress of work being done at the stop.",
                                        "enum": [
                                          "AtStop",
                                          "Complete",
                                          "Planned"
                                        ],
                                        "type": "string"
                                      },
                                      "location": {
                                        "title": "Location",
                                        "description": "Information about the stop, including the name, address, and coordinates.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "The name of location where stop activity occurs.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Describes the type of location (useful for determining rail yards).",
                                            "type": "string"
                                          },
                                          "timeZone": {
                                            "title": "TimeZone",
                                            "description": "Time zone of a location",
                                            "properties": {
                                              "timeZoneId": {
                                                "description": "The name of the time zone",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "address": {
                                            "title": "Address",
                                            "description": "Postal address for a location.",
                                            "type": "object",
                                            "properties": {
                                              "streetAddress": {
                                                "description": "Address (eg. number, street, etc.).",
                                                "type": "string"
                                              },
                                              "adminArea1": {
                                                "description": "Province, state, or [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision.",
                                                "type": "string"
                                              },
                                              "adminArea2": {
                                                "description": "Subdivision smaller than `adminArea1`. In the United States, this refers to county.",
                                                "type": "string"
                                              },
                                              "locality": {
                                                "description": "City or town.",
                                                "type": "string"
                                              },
                                              "neighborhood": {
                                                "description": "Neighborhood",
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "description": "ZIP, postcode, or postal code.",
                                                "type": "string"
                                              },
                                              "countryCode": {
                                                "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.",
                                                "maxLength": 3,
                                                "minLength": 3,
                                                "pattern": "^[A-Z]{3}$",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "coordinates": {
                                            "title": "Coordinates",
                                            "description": "Longitude and latitude for a location along with metadata about the source data.",
                                            "type": "object",
                                            "properties": {
                                              "longitude": {
                                                "format": "double",
                                                "description": "The arc or portion of the earth's equator intersected between the meridian of a given place and the prime meridian and expressed either in degrees or in time",
                                                "maximum": 180,
                                                "minimum": -180,
                                                "type": "number"
                                              },
                                              "latitude": {
                                                "format": "double",
                                                "description": "Angular distance north or south from the earth's equator measured through 90 degrees",
                                                "maximum": 90,
                                                "minimum": -90,
                                                "type": "number"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "appointmentWindowStartDateTime": {
                                        "description": "Start of the appointment window.Appointment window start date time is populated as follows:Actual appointment window - If it is any non-ramp stop.Planned cutoff time - If it is the origin ramp on a rail segment.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "appointmentWindowEndDateTime": {
                                        "description": "End of the appointment window.Appointment window end date time is populated as follows:Actual appointment window - If it is any non-ramp stop.Planned cutoff time - If it is the origin ramp on a rail segment.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "predictionsLastUpdated": {
                                        "description": "The date and time the estimated fields were last updated",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "estimatedArrivalDateTime": {
                                        "description": "When the equipment carrying the load is estimated to arrive at the stop.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "estimatedDepartureDateTime": {
                                        "description": "When the equipment carrying the load is estimated to leave the stop.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "arrivalDateTime": {
                                        "description": "When the equipment carrying the load arrived at the stop.Arrival timestamp is populated as follows:Truck Arrival - If it is any non-ramp stop.Ingate  - If it is the ramp stop on a truck segment prior to a rail segment.  - If it is the origin ramp on a rail segment.Train Arrival - If it is the destination ramp on a rail segment.Deramp - If it is the first stop of truck segment directly after a rail segment.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "departureDateTime": {
                                        "description": "When the equipment carrying the load left the stop.Departure timestamp is populated as follows:Truck Departure - If it is any non-ramp stop.Ingate - If it is the ramp stop on a truck segment prior to a rail segment.Train Departure - If it is the origin ramp on a rail segment.Deramp - If it is the destination ramp on a rail segment.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "arrivalStatus": {
                                        "description": "The status of an arrival at the customer",
                                        "enum": [
                                          "ON_TIME",
                                          "EARLY",
                                          "LATE",
                                          "NONE"
                                        ],
                                        "type": "string"
                                      },
                                      "distanceRemainingToStop": {
                                        "format": "double",
                                        "title": "Distance Remaining to Stop",
                                        "description": "The estimated distance in miles remaining to the next stop from the last location telemetry.",
                                        "type": "number"
                                      },
                                      "minutesRemainingToStop": {
                                        "format": "double",
                                        "title": "Minutes Remaining to Stop",
                                        "description": "The estimated time in minutes remaining to the next stop from the last location telemetry.",
                                        "type": "number"
                                      },
                                      "estimatedMinutesAtStop": {
                                        "title": "Estimated Minutes at Stop",
                                        "description": "The estimated time in minutes expected to elapse between arrival and departure at a stop.",
                                        "type": "number"
                                      },
                                      "referenceIdentifiers": {
                                        "description": "Reference identifiers related to the stop.",
                                        "type": "array",
                                        "items": {
                                          "title": "Reference Identifier",
                                          "description": "Identifier that can be tied to a movement.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "The type of reference identifier.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "Reference identifier",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "transitExceptions": {
                                  "description": "List of transit exceptions that have occurred on a leg.",
                                  "type": "array",
                                  "items": {
                                    "title": "Transit Exception",
                                    "description": "Transit exception that may occur on a segment.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of transit exception.",
                                        "type": "string"
                                      },
                                      "description": {
                                        "description": "Describes the type of transit exception that has occurred.",
                                        "type": "string"
                                      },
                                      "exceptionStartDateTime": {
                                        "description": "Date and time of when the transit exception occurred.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "exceptionEndDateTime": {
                                        "description": "Date and time of when the transit exception was resolved.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "trailer": {
                                  "title": "Trailer",
                                  "description": "The identifier details for a trailer",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "Trailer prefix",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Trailer id",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "latestTelemetry": {
                            "title": "Latest Telemetry",
                            "description": "Contains data from sensors and onboard computers about the current state of the in-transit leg or most recently completed leg.",
                            "type": "object",
                            "properties": {
                              "coordinates": {
                                "title": "Telemetry Coordinates",
                                "description": "Longitude and latitude for a location along with metadata about the source data.",
                                "allOf": [
                                  {
                                    "title": "Coordinates",
                                    "description": "Longitude and latitude for a location along with metadata about the source data.",
                                    "type": "object",
                                    "properties": {
                                      "longitude": {
                                        "format": "double",
                                        "description": "The arc or portion of the earth's equator intersected between the meridian of a given place and the prime meridian and expressed either in degrees or in time",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "type": "number"
                                      },
                                      "latitude": {
                                        "format": "double",
                                        "description": "Angular distance north or south from the earth's equator measured through 90 degrees.",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "type": "number"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "lastUpdated": {
                                        "description": "The date and time the GPS data was created.",
                                        "allOf": [
                                          {
                                            "format": "date-time",
                                            "title": "Date Time",
                                            "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "sourceType": {
                                        "description": "The type of device used to get the GPS location.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              "sensors": {
                                "description": "List of sensor measurements for the movement.",
                                "type": "array",
                                "items": {
                                  "title": "Sensor Measurement",
                                  "description": "Information from sensors on the asset, such as temperature readings for refrigerated units.",
                                  "type": "object",
                                  "properties": {
                                    "units": {
                                      "description": "A single quantity regarded as a whole in calculation.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "A numerical quantity that is assigned or is determined by calculation or measurement.",
                                      "type": "string"
                                    },
                                    "minimum": {
                                      "description": "The least quantity admissible.",
                                      "type": "string"
                                    },
                                    "maximum": {
                                      "description": "The upper limit allowed.",
                                      "type": "string"
                                    },
                                    "target": {
                                      "description": "Desired value",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of value",
                                      "type": "string"
                                    },
                                    "lastUpdated": {
                                      "description": "The date and time of when the sensor data was created.",
                                      "allOf": [
                                        {
                                          "format": "date-time",
                                          "title": "Date Time",
                                          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "sourceType": {
                                      "description": "The source that performed the measurement",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "trailerStatus": {
                                "description": "Describes whether the current trailer is Loaded or unloaded.",
                                "enum": [
                                  "LOADED",
                                  "EMPTY"
                                ],
                                "type": "string"
                              },
                              "address": {
                                "title": "Address",
                                "description": "Postal address for a location.",
                                "type": "object",
                                "properties": {
                                  "streetAddress": {
                                    "description": "Address (eg. number, street, etc.).",
                                    "type": "string"
                                  },
                                  "adminArea1": {
                                    "description": "Province, state, or [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision.",
                                    "type": "string"
                                  },
                                  "adminArea2": {
                                    "description": "Subdivision smaller than `adminArea1`. In the United States, this refers to county.",
                                    "type": "string"
                                  },
                                  "locality": {
                                    "description": "City or town.",
                                    "type": "string"
                                  },
                                  "neighborhood": {
                                    "description": "Neighborhood",
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "description": "ZIP, postcode, or postal code.",
                                    "type": "string"
                                  },
                                  "countryCode": {
                                    "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.",
                                    "maxLength": 3,
                                    "minLength": 3,
                                    "pattern": "^[A-Z]{3}$",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "latestlocation": {
                            "title": "Latest Location",
                            "description": "Contains the most up-to-date location available from many sources, such as on-board GPS devices or operational check calls. If no location data is available  from any sources, it will simply be the location of the first stop.",
                            "type": "object",
                            "properties": {
                              "location": {
                                "title": "Location",
                                "description": "Information about the stop, including the name, address, and coordinates.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of location where stop activity occurs.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Describes the type of location (useful for determining rail yards).",
                                    "type": "string"
                                  },
                                  "timeZone": {
                                    "title": "TimeZone",
                                    "description": "Time zone of a location",
                                    "properties": {
                                      "timeZoneId": {
                                        "description": "The name of the time zone",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "address": {
                                    "title": "Address",
                                    "description": "Postal address for a location.",
                                    "type": "object",
                                    "properties": {
                                      "streetAddress": {
                                        "description": "Address (eg. number, street, etc.).",
                                        "type": "string"
                                      },
                                      "adminArea1": {
                                        "description": "Province, state, or [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision.",
                                        "type": "string"
                                      },
                                      "adminArea2": {
                                        "description": "Subdivision smaller than `adminArea1`. In the United States, this refers to county.",
                                        "type": "string"
                                      },
                                      "locality": {
                                        "description": "City or town.",
                                        "type": "string"
                                      },
                                      "neighborhood": {
                                        "description": "Neighborhood",
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "description": "ZIP, postcode, or postal code.",
                                        "type": "string"
                                      },
                                      "countryCode": {
                                        "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "^[A-Z]{3}$",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "coordinates": {
                                    "title": "Coordinates",
                                    "description": "Longitude and latitude for a location along with metadata about the source data.",
                                    "type": "object",
                                    "properties": {
                                      "longitude": {
                                        "format": "double",
                                        "description": "The arc or portion of the earth's equator intersected between the meridian of a given place and the prime meridian and expressed either in degrees or in time",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "type": "number"
                                      },
                                      "latitude": {
                                        "format": "double",
                                        "description": "Angular distance north or south from the earth's equator measured through 90 degrees",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              },
                              "timestamp": {
                                "description": "The date and time of when the location data was updated.",
                                "allOf": [
                                  {
                                    "format": "date-time",
                                    "title": "Date Time",
                                    "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                                    "type": "string"
                                  }
                                ]
                              },
                              "sourceType": {
                                "description": "The source of the location data, such as \"Orbcomm\" or \"Shipper Location\".",
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "title": "Status",
                            "description": "Shows the overall transit status for the trackable (Planned, InTransit, Complete, Cancelled).",
                            "enum": [
                              "Planned",
                              "InTransit",
                              "Complete",
                              "Cancelled"
                            ],
                            "type": "string"
                          },
                          "serviceStatus": {
                            "title": "Service Status",
                            "description": "Supported values are listed here. This list is subject to change. (EARLY, ON_TIME, LATE, NONE)",
                            "type": "string"
                          }
                        }
                      },
                      {
                        "properties": {
                          "orderId": {
                            "title": "OrderId",
                            "description": "The identifier of an order.",
                            "type": "string"
                          },
                          "orderDetails": {
                            "description": "List of order details",
                            "type": "array",
                            "items": {
                              "title": "Shipment Details",
                              "description": "Describes what is being shipped.",
                              "type": "object",
                              "properties": {
                                "deliveryStopId": {
                                  "title": "Stop Identifier",
                                  "description": "Identifier for the stop.",
                                  "type": "string"
                                },
                                "deliveryOperationalPlanStopId": {
                                  "title": "Operational Plan Stop Id",
                                  "description": "The identifier for the stop as part of the operational plan. Typically, this is the stop identifier used by 360 Loads.",
                                  "type": "string"
                                },
                                "commodityCode": {
                                  "description": "Commodity code",
                                  "type": "string"
                                },
                                "itemPackageType": {
                                  "description": "Packaging for item(s)",
                                  "type": "string"
                                },
                                "itemPackageQuantity": {
                                  "description": "Quantity of items being shipped.",
                                  "type": "number"
                                },
                                "weight": {
                                  "description": "Weight of item(s) being shipped.",
                                  "allOf": [
                                    {
                                      "title": "Simple Measurement",
                                      "description": "A numeric value with units.",
                                      "type": "object",
                                      "properties": {
                                        "units": {
                                          "description": "Plural, PascalCase unit of measure (e.g., Kilograms, Miles, CubicFeet).",
                                          "pattern": "^[A-Z][a-zA-Z]+$",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "value",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing). See [RFC 7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1).",
            "schema": {
              "title": "Problem Details",
              "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
              "allOf": [
                {
                  "title": "Core Problem Details",
                  "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
                      "default": "about:blank",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
                      "type": "string"
                    },
                    "status": {
                      "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
                      "maximum": 600,
                      "exclusiveMaximum": true,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "Problem Details Extensions",
                  "description": "Custom J.B. Hunt extensions to the problems details format",
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "description": "The date and time that the problem occurred.",
                      "allOf": [
                        {
                          "format": "date-time",
                          "title": "Date Time",
                          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                          "type": "string"
                        }
                      ]
                    },
                    "issues": {
                      "description": "An array of issues related to specific fields in the HTTP request message.",
                      "type": "array",
                      "items": {
                        "title": "Issue",
                        "description": "An object describing the issue of a particular field in an HTTP request message.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "A human-readable explanation of the specific issue.",
                            "type": "string"
                          },
                          "field": {
                            "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                          },
                          "location": {
                            "description": "The location of the issue.",
                            "default": "body",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field in error.",
                            "allOf": [
                              {
                                "title": "Any?",
                                "description": "Any nullable JSON value",
                                "allOf": [
                                  {
                                    "title": "Any",
                                    "description": "Any non-nullable JSON value"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request has not been applied because it lacks valid authentication credentials for the target resource. See [RFC 7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1).",
            "schema": {
              "title": "Problem Details",
              "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
              "allOf": [
                {
                  "title": "Core Problem Details",
                  "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
                      "default": "about:blank",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
                      "type": "string"
                    },
                    "status": {
                      "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
                      "maximum": 600,
                      "exclusiveMaximum": true,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "Problem Details Extensions",
                  "description": "Custom J.B. Hunt extensions to the problems details format",
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "description": "The date and time that the problem occurred.",
                      "allOf": [
                        {
                          "format": "date-time",
                          "title": "Date Time",
                          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                          "type": "string"
                        }
                      ]
                    },
                    "issues": {
                      "description": "An array of issues related to specific fields in the HTTP request message.",
                      "type": "array",
                      "items": {
                        "title": "Issue",
                        "description": "An object describing the issue of a particular field in an HTTP request message.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "A human-readable explanation of the specific issue.",
                            "type": "string"
                          },
                          "field": {
                            "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                          },
                          "location": {
                            "description": "The location of the issue.",
                            "default": "body",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field in error.",
                            "allOf": [
                              {
                                "title": "Any?",
                                "description": "Any nullable JSON value",
                                "allOf": [
                                  {
                                    "title": "Any",
                                    "description": "Any non-nullable JSON value"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request. See [RFC 7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1).",
            "schema": {
              "title": "Problem Details",
              "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
              "allOf": [
                {
                  "title": "Core Problem Details",
                  "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
                      "default": "about:blank",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
                      "type": "string"
                    },
                    "status": {
                      "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
                      "maximum": 600,
                      "exclusiveMaximum": true,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "Problem Details Extensions",
                  "description": "Custom J.B. Hunt extensions to the problems details format",
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "description": "The date and time that the problem occurred.",
                      "allOf": [
                        {
                          "format": "date-time",
                          "title": "Date Time",
                          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                          "type": "string"
                        }
                      ]
                    },
                    "issues": {
                      "description": "An array of issues related to specific fields in the HTTP request message.",
                      "type": "array",
                      "items": {
                        "title": "Issue",
                        "description": "An object describing the issue of a particular field in an HTTP request message.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "A human-readable explanation of the specific issue.",
                            "type": "string"
                          },
                          "field": {
                            "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                          },
                          "location": {
                            "description": "The location of the issue.",
                            "default": "body",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field in error.",
                            "allOf": [
                              {
                                "title": "Any?",
                                "description": "Any nullable JSON value",
                                "allOf": [
                                  {
                                    "title": "Any",
                                    "description": "Any non-nullable JSON value"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/pricing/quoting/v2/dynamic-quote": {
      "post": {
        "description": "This operation returns a quote for the transport of a full-truckload shipment. Quotes can be obtained for pickups 1 to 14 days in the future, and are valid until the date of pickup. The API returns a spotPriceId that can be passed as a reference in the load tender. Rates are dynamic, based on current market conditions. Quotes are available for full-truckload shipments via 53' dryvan, refrigerated and flatbed equipment types. Modes considered are TRUCK and RAIL.",
        "operationId": "Request_quote",
        "summary": "Request Dynamic Quote",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing all information on the shipment to be quoted.",
            "x-ms-summary": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "rateFound": {
                  "type": "boolean",
                  "description": "rateFound"
                },
                "lineHaulCharge": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "float",
                      "description": "value"
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "currencyCode"
                    }
                  },
                  "description": "lineHaulCharge"
                },
                "totalCharge": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "float",
                      "description": "value"
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "currencyCode"
                    }
                  },
                  "description": "totalCharge"
                },
                "accessorials": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "cost": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "float",
                            "description": "value"
                          },
                          "currencyCode": {
                            "type": "string",
                            "description": "currencyCode"
                          }
                        },
                        "description": "cost"
                      }
                    }
                  },
                  "description": "accessorials"
                },
                "pickupDateTime": {
                  "type": "string",
                  "description": "pickupDateTime"
                },
                "deliveryDateTime": {
                  "type": "string",
                  "description": "deliveryDateTime"
                },
                "transportationMode": {
                  "type": "string",
                  "description": "transportationMode"
                },
                "totalMiles": {
                  "type": "number",
                  "format": "float",
                  "description": "totalMiles"
                },
                "scacCode": {
                  "type": "string",
                  "description": "scacCode"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request Body",
            "schema": {
              "$ref": "#/definitions/QuoteErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OrdersPost400Response": {
      "title": "Problem Details",
      "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
      "allOf": [
        {
          "title": "Core Problem Details",
          "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
          "type": "object",
          "properties": {
            "type": {
              "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
              "default": "about:blank",
              "type": "string"
            },
            "title": {
              "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
              "type": "string"
            },
            "status": {
              "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
              "maximum": 600,
              "exclusiveMaximum": true,
              "minimum": 100,
              "type": "integer"
            },
            "detail": {
              "description": "A human-readable explanation specific to this occurrence of the problem.",
              "type": "string"
            },
            "instance": {
              "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
              "type": "string"
            }
          }
        },
        {
          "title": "Problem Details Extensions",
          "description": "Custom J.B. Hunt extensions to the problems details format",
          "type": "object",
          "properties": {
            "dateTime": {
              "description": "The date and time that the problem occurred.",
              "allOf": [
                {
                  "format": "date-time",
                  "title": "Date Time",
                  "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                  "type": "string"
                }
              ]
            },
            "issues": {
              "description": "An array of issues related to specific fields in the HTTP request message.",
              "type": "array",
              "items": {
                "title": "Issue",
                "description": "An object describing the issue of a particular field in an HTTP request message.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "A human-readable explanation of the specific issue.",
                    "type": "string"
                  },
                  "field": {
                    "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                  },
                  "location": {
                    "description": "The location of the issue.",
                    "default": "body",
                    "enum": [
                      "body",
                      "header",
                      "path",
                      "query"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field in error.",
                    "allOf": [
                      {
                        "title": "Any?",
                        "description": "Any nullable JSON value",
                        "allOf": [
                          {
                            "title": "Any",
                            "description": "Any non-nullable JSON value"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    },
    "OrdersPost401Response": {
      "title": "Problem Details",
      "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
      "allOf": [
        {
          "title": "Core Problem Details",
          "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
          "type": "object",
          "properties": {
            "type": {
              "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
              "default": "about:blank",
              "type": "string"
            },
            "title": {
              "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
              "type": "string"
            },
            "status": {
              "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
              "maximum": 600,
              "exclusiveMaximum": true,
              "minimum": 100,
              "type": "integer"
            },
            "detail": {
              "description": "A human-readable explanation specific to this occurrence of the problem.",
              "type": "string"
            },
            "instance": {
              "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
              "type": "string"
            }
          }
        },
        {
          "title": "Problem Details Extensions",
          "description": "Custom J.B. Hunt extensions to the problems details format",
          "type": "object",
          "properties": {
            "dateTime": {
              "description": "The date and time that the problem occurred.",
              "allOf": [
                {
                  "format": "date-time",
                  "title": "Date Time",
                  "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                  "type": "string"
                }
              ]
            },
            "issues": {
              "description": "An array of issues related to specific fields in the HTTP request message.",
              "type": "array",
              "items": {
                "title": "Issue",
                "description": "An object describing the issue of a particular field in an HTTP request message.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "A human-readable explanation of the specific issue.",
                    "type": "string"
                  },
                  "field": {
                    "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                  },
                  "location": {
                    "description": "The location of the issue.",
                    "default": "body",
                    "enum": [
                      "body",
                      "header",
                      "path",
                      "query"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field in error.",
                    "allOf": [
                      {
                        "title": "Any?",
                        "description": "Any nullable JSON value",
                        "allOf": [
                          {
                            "title": "Any",
                            "description": "Any non-nullable JSON value"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    },
    "OrdersPost403Response": {
      "title": "Problem Details",
      "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
      "allOf": [
        {
          "title": "Core Problem Details",
          "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
          "type": "object",
          "properties": {
            "type": {
              "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
              "default": "about:blank",
              "type": "string"
            },
            "title": {
              "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
              "type": "string"
            },
            "status": {
              "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
              "maximum": 600,
              "exclusiveMaximum": true,
              "minimum": 100,
              "type": "integer"
            },
            "detail": {
              "description": "A human-readable explanation specific to this occurrence of the problem.",
              "type": "string"
            },
            "instance": {
              "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
              "type": "string"
            }
          }
        },
        {
          "title": "Problem Details Extensions",
          "description": "Custom J.B. Hunt extensions to the problems details format",
          "type": "object",
          "properties": {
            "dateTime": {
              "description": "The date and time that the problem occurred.",
              "allOf": [
                {
                  "format": "date-time",
                  "title": "Date Time",
                  "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                  "type": "string"
                }
              ]
            },
            "issues": {
              "description": "An array of issues related to specific fields in the HTTP request message.",
              "type": "array",
              "items": {
                "title": "Issue",
                "description": "An object describing the issue of a particular field in an HTTP request message.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "A human-readable explanation of the specific issue.",
                    "type": "string"
                  },
                  "field": {
                    "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                  },
                  "location": {
                    "description": "The location of the issue.",
                    "default": "body",
                    "enum": [
                      "body",
                      "header",
                      "path",
                      "query"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field in error.",
                    "allOf": [
                      {
                        "title": "Any?",
                        "description": "Any nullable JSON value",
                        "allOf": [
                          {
                            "title": "Any",
                            "description": "Any non-nullable JSON value"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    },
    "OrdersPost500Response": {
      "title": "Problem Details",
      "description": "The [Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807) format with extensions.",
      "allOf": [
        {
          "title": "Core Problem Details",
          "description": "The core problem details object. See [Section 3.1 of RFC 7807](https://tools.ietf.org/html/rfc7807#section-3.1).",
          "type": "object",
          "properties": {
            "type": {
              "description": "A [URI reference](https://tools.ietf.org/html/rfc3986#section-4.1) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using [HTML](https://www.w3.org/TR/2014/REC-html5-20141028)). When this member is not present, its value is assumed to be `\"about:blank\"`.",
              "default": "about:blank",
              "type": "string"
            },
            "title": {
              "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive [content negotiation](https://tools.ietf.org/html/rfc7231#section-3.4)).",
              "type": "string"
            },
            "status": {
              "description": "The [HTTP status code](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.",
              "maximum": 600,
              "exclusiveMaximum": true,
              "minimum": 100,
              "type": "integer"
            },
            "detail": {
              "description": "A human-readable explanation specific to this occurrence of the problem.",
              "type": "string"
            },
            "instance": {
              "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
              "type": "string"
            }
          }
        },
        {
          "title": "Problem Details Extensions",
          "description": "Custom J.B. Hunt extensions to the problems details format",
          "type": "object",
          "properties": {
            "dateTime": {
              "description": "The date and time that the problem occurred.",
              "allOf": [
                {
                  "format": "date-time",
                  "title": "Date Time",
                  "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
                  "type": "string"
                }
              ]
            },
            "issues": {
              "description": "An array of issues related to specific fields in the HTTP request message.",
              "type": "array",
              "items": {
                "title": "Issue",
                "description": "An object describing the issue of a particular field in an HTTP request message.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "A human-readable explanation of the specific issue.",
                    "type": "string"
                  },
                  "field": {
                    "description": "The name of the field in error. If `location` is `body`, then this MUST be either a [JSON pointer](https://tools.ietf.org/html/rfc6901) or an [XPath expression](https://www.w3.org/TR/1999/REC-xpath-19991116) referring to the field of the body."
                  },
                  "location": {
                    "description": "The location of the issue.",
                    "default": "body",
                    "enum": [
                      "body",
                      "header",
                      "path",
                      "query"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the field in error.",
                    "allOf": [
                      {
                        "title": "Any?",
                        "description": "Any nullable JSON value",
                        "allOf": [
                          {
                            "title": "Any",
                            "description": "Any non-nullable JSON value"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    },
    "HazmatCertificationsRequirement": {
      "description": "Indicates which hazardous materials certifications will be required to legally haul the load. Additional fees may apply.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the hazardous material or substance.",
          "type": "string"
        },
        "declaration": {
          "description": "Declaration of dangerous goods, applicable where required by law.",
          "type": "string"
        },
        "unnaNumber": {
          "description": "Four-digit United Nations and North American number for the identification of hazardous goods and substances.",
          "type": "string"
        },
        "hazardousMaterialClassification": {
          "description": "Classification number of the hazardous material, as adopted by the United Nations Globally Harmonized System for Hazard Communications.",
          "type": "number"
        }
      }
    },
    "TemperatureControlRequirements": {
      "description": "The desired temperature range for transport. Additional fees may apply to temperature protected and refridgerated loads.",
      "type": "object",
      "properties": {
        "minimumTemperature": {
          "$ref": "#/definitions/TemperatureValue"
        },
        "maximumTemperature": {
          "$ref": "#/definitions/TemperatureValue"
        },
        "rearZonePrecoolTemperature": {
          "$ref": "#/definitions/TemperatureValue"
        }
      }
    },
    "TemperatureValue": {
      "description": "Measured Value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A numeric value.",
          "type": "number"
        },
        "unitOfMeasure": {
          "description": "Unit of measurement for the measured value.",
          "type": "string"
        }
      }
    },
    "TransportationMode": {
      "description": "The desired transportation mode. If you choose Best, J.B. Hunt will select the transportation mode based on cost and transit.",
      "enum": [
        "Truck",
        "Rail",
        "Ocean",
        "LTL",
        "Parcel",
        "Best"
      ],
      "type": "string"
    },
    "EquipmentType": {
      "description": "The type of trailing equipment desired. If LTL, use DryVan.",
      "enum": [
        "DryVan",
        "FlatBed",
        "Refrigerated",
        "Container",
        "Tanker"
      ],
      "type": "string"
    },
    "Options": {
      "title": "Options",
      "description": "Optional information about the order. If not specified, J.B. Hunt will apply standard shipping options.",
      "type": "object",
      "properties": {
        "trailerNumber": {
          "description": "The unique identifier for a tractor trailer.",
          "type": "string"
        },
        "preloadedTrailer": {
          "description": "Indicates whether the trailer will be loaded prior to arrival, or upon arrival. Assume live load and unload unless preloadedTrailer is true.",
          "type": "boolean"
        },
        "highValue": {
          "description": "Indicates whether the value of cargo being hauled exceeds $100,000.00 USD, which requires extra insurance. Additional fees may apply.",
          "type": "boolean"
        },
        "extremeLength": {
          "description": "Indicates whether the length of cargo being hauled exceeds standard trailer size (53'). Additional fees may apply.",
          "type": "boolean"
        },
        "oversized": {
          "description": "Indicates whether the cargo is oversized, requiring additional permits and safety considerations. Additional fees may apply.",
          "type": "boolean"
        },
        "residentialDelivery": {
          "description": "Indicates whether the cargo should be picked up or delivered to a residence. Additional fees may apply.",
          "type": "boolean"
        },
        "liftGateRequired": {
          "description": "Indicates whether liftgate service is required to lift the freight from the ground or lower the freight to the ground. Additional fees may apply.",
          "type": "boolean"
        },
        "hazmatCertificationsRequirement": {
          "description": "List of hazardous materials certifications that will be required to legally haul the load.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HazmatCertificationsRequirement"
          }
        },
        "temperatureControlRequirements": {
          "$ref": "#/definitions/TemperatureControlRequirements"
        }
      }
    },
    "Comment": {
      "description": "Comments or instructions relating to the order or stop.",
      "type": "object",
      "properties": {
        "text": {
          "description": "Order/Stop comment.",
          "type": "string"
        }
      }
    },
    "ReferenceId": {
      "description": "A reference identifier that can be used to look up or reference an order, stop, or item.",
      "type": "object",
      "properties": {
        "referenceType": {
          "$ref": "#/definitions/ReferenceType"
        },
        "referenceValue": {
          "description": "An identifier that can be used to look up the order, stop, or item.",
          "type": "string"
        }
      }
    },
    "ReferenceType": {
      "description": "Type of reference identifier provided.",
      "enum": [
        "BOL",
        "CUS REF",
        "DELV NOTE",
        "MBOL",
        "ORD NBR",
        "PO NBR",
        "PRO NBR",
        "SEAL",
        "SHIPID"
      ],
      "type": "string"
    },
    "PreferredContactMethod": {
      "description": "The method of contact to be used where possible.",
      "enum": [
        "Phone",
        "Email",
        "Text"
      ],
      "type": "string"
    },
    "PhoneNumber": {
      "description": "Contact details for a phone number.",
      "type": "object",
      "properties": {
        "number": {
          "description": "Phone number.",
          "type": "string"
        },
        "extension": {
          "description": "Extension number.",
          "type": "string"
        },
        "phoneNumberType": {
          "$ref": "#/definitions/PhoneNumberType"
        },
        "allowsSms": {
          "description": "Indicates whether notifications about the order should be sent via SMS.",
          "type": "boolean"
        }
      }
    },
    "PhoneNumberType": {
      "description": "The type of phone number provided.",
      "enum": [
        "Home",
        "Mobile",
        "Office"
      ],
      "type": "string"
    },
    "Contact": {
      "description": "Information about a point of contact.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The first name of the contact.",
          "type": "string"
        },
        "lastName": {
          "description": "The last name of the contact.",
          "type": "string"
        },
        "preferredContactMethod": {
          "$ref": "#/definitions/PreferredContactMethod"
        },
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "emailAddress": {
          "description": "The email address of the contact.",
          "type": "string"
        }
      }
    },
    "Order": {
      "description": "Object containing details of an order.",
      "type": "object",
      "properties": {
        "primaryReferenceId": {
          "description": "The customer's identification number for this order. This can be used to look up the order in the absence of a J.B. Hunt order ID.",
          "type": "string"
        },
        "stops": {
          "description": "Array of stops to be completed. Stops will be completed in order of the sequence in the array, with the first sequence in the array being delivered first.",
          "type": "array",
          "items": {
            "required": [
              "discriminator"
            ],
            "type": "object",
            "properties": {
              "discriminator": {
                "description": "Stop Reason.",
                "type": "string"
              }
            }
          }
        },
        "transportationMode": {
          "$ref": "#/definitions/TransportationMode"
        },
        "equipmentType": {
          "$ref": "#/definitions/EquipmentType"
        },
        "quoteId": {
          "description": "If a quote has previously been obtained, the quote identifier can be specified to apply the agreed-upon rate.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/Options"
        },
        "comments": {
          "description": "List of order comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "referenceIds": {
          "description": "List of reference identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceId"
          }
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "OrderResponse": {
      "description": "Object containing details of an order.",
      "type": "object",
      "properties": {
        "primaryReferenceId": {
          "description": "The customer's identification number for this order. This can be used to look up the order in the absence of a J.B. Hunt order ID.",
          "type": "string"
        },
        "stops": {
          "description": "Array of stops to be completed. Stops will be completed in order of the sequence in the array, with the first sequence in the array being delivered first.",
          "type": "array",
          "items": {
            "required": [
              "discriminator"
            ],
            "type": "object",
            "properties": {
              "discriminator": {
                "description": "Stop Reason.",
                "type": "string"
              }
            }
          }
        },
        "transportationMode": {
          "$ref": "#/definitions/TransportationMode"
        },
        "equipmentType": {
          "$ref": "#/definitions/EquipmentType"
        },
        "quoteId": {
          "description": "If a quote has previously been obtained, the quote identifier can be specified to apply the agreed-upon rate.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/Options"
        },
        "comments": {
          "description": "List of order comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "referenceIds": {
          "description": "List of reference identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceId"
          }
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "QuoteErrorResponse": {
      "description": "Invalid Request Body.",
      "title": "API Errors",
      "type": "object",
      "properties": {
        "id": {
          "description": "UUID to be logged for correlation purposes.",
          "type": "string"
        },
        "errors": {
          "description": "List of errors that occurred.",
          "type": "array",
          "items": {
            "title": "API Error",
            "description": "Information about an API error.",
            "type": "object",
            "properties": {
              "title": {
                "description": "Unique, human-readable name of the error.",
                "type": "string"
              },
              "description": {
                "description": "Human-readable message describing the error.",
                "type": "string"
              },
              "dateTime": {
                "format": "date-time",
                "description": "When the error occurred.",
                "type": "string"
              },
              "details": {
                "description": "Details of individual errors.",
                "type": "array",
                "items": {
                  "title": "API Error Detail",
                  "description": "Detailed description of an individual API error.",
                  "type": "object",
                  "properties": {
                    "field": {
                      "description": "If the error is in the body, contains a JSON pointer to the field in error; otherwise, contains the name of the path or query parameter in error.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value of the field in error."
                    },
                    "issue": {
                      "description": "Reason for the error.",
                      "type": "string"
                    },
                    "location": {
                      "description": "Location of the field in error.",
                      "default": "Body",
                      "enum": [
                        "Query",
                        "Path",
                        "Body"
                      ],
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LineHaulCharge": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) alphabetical currency code."
        },
        "value": {
          "maxLength": 32,
          "type": "number",
          "description": "The value, which can be anything from:* An integer. For currencies that are not typically fractional, such as `JPY`.* A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`.* An eight-place decimal fraction. For currencies such as Bitcoin.* For the required number of decimal places for a currency code, see ISO 4217.",
          "format": "double"
        }
      },
      "description": "object containing the quote to be returned."
    },
    "TotalCharge": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) alphabetical currency code."
        },
        "value": {
          "maxLength": 32,
          "type": "number",
          "description": "The value, which can be anything from:* An integer. For currencies that are not typically fractional, such as `JPY`.* A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`.* An eight-place decimal fraction. For currencies such as Bitcoin.* For the required number of decimal places for a currency code, see ISO 4217.",
          "format": "double"
        }
      },
      "description": "object containing the quote to be returned."
    },
    "Accessorials": {
      "description": "List of additional charges associated with the load.",
      "type": "array",
      "items": {
        "properties": {
          "name": {
            "description": "Name of the accessorial.",
            "type": "string"
          },
          "cost": {
            "description": "object containing the quote to be returned.",
            "type": "object",
            "properties": {
              "currencyCode": {
                "description": "Three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) alphabetical currency code.",
                "maxLength": 3,
                "minLength": 3,
                "type": "string"
              },
              "value": {
                "format": "double",
                "description": "The value, which can be anything from: An integer. For currencies that are not typically fractional, such as `JPY`. A three-place decimal fraction. For currencies that are subdivided into thousandths, such as `TND`. An eight-place decimal fraction. For currencies such as Bitcoin. For the required number of decimal places for a currency code, see ISO 4217.",
                "maxLength": 32,
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Quote": {
      "type": "object",
      "properties": {
        "rateFound": {
          "enum": [
            true
          ],
          "type": "boolean",
          "description": "Indicates whether a rate was returned for the requested shipment."
        },
        "lineHaulCharge": {
          "$ref": "#/definitions/LineHaulCharge"
        },
        "totalCharge": {
          "$ref": "#/definitions/TotalCharge"
        },
        "pickupDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "deliveryDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "accessorials": {
          "$ref": "#/definitions/Accessorials"
        },
        "transportationMode": {
          "enum": [
            "TRUCK",
            "TRAIN"
          ],
          "type": "string",
          "description": "Transportation mode of the quote."
        },
        "spotPriceId": {
          "type": "string",
          "description": "Identifier of the quote. Can be passed with the load tender to reference the quote."
        },
        "scacCode": {
          "type": "string",
          "description": "Standard Carrier Alpha Code."
        },
        "totalMiles": {
          "title": "Double",
          "type": "number",
          "format": "double",
          "minimum": 0,
          "description": "Mileage returned from Rate Service."
        },
        "validThroughDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        }
      },
      "description": "Object containing either the requested quote, or a message describing why no rate could be returned.",
      "x-apim-inline": true
    },
    "ShipmentDetails": {
      "title": "Shipment Details",
      "type": "object",
      "properties": {
        "deliveryStopId": {
          "title": "Stop Identifier",
          "type": "string",
          "description": "Identifier for the stop."
        },
        "commodityCode": {
          "type": "string",
          "description": "Commodity code."
        },
        "itemPackageType": {
          "type": "string",
          "description": "Packaging for item(s)."
        },
        "itemPackageQuantity": {
          "type": "number",
          "description": "Quantity of items being shipped."
        },
        "weight": {
          "title": "Simple Measurement",
          "type": "object",
          "properties": {
            "units": {
              "pattern": "^[A-Z][a-zA-Z]+$",
              "type": "string",
              "description": "Plural, PascalCase unit of measure (e.g., Kilograms, Miles, CubicFeet)."
            },
            "value": {
              "type": "number",
              "description": "Unit value."
            }
          },
          "description": "A numeric value with units."
        }
      },
      "description": "Describes what is being shipped."
    },
    "LatestLocation": {
      "title": "Latest Location",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location"
        },
        "timestamp": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "sourceType": {
          "type": "string",
          "description": "The source of the location data, such as \"Orbcomm\" or \"Shipper Location\"."
        }
      },
      "description": "Contains the most up-to-date location available from many sources, such as on-board GPS devices or operational check calls. If no location data is available  from any sources, it will simply be the location of the first stop."
    },
    "LatestTelemetry": {
      "title": "Latest Telemetry",
      "type": "object",
      "properties": {
        "coordinates": {
          "title": "Coordinates",
          "type": "object",
          "properties": {
            "longitude": {
              "maximum": 180,
              "minimum": -180,
              "type": "number",
              "description": "The arc or portion of the earth's equator intersected between the meridian of a given place and the prime meridian and expressed either in degrees or in time.",
              "format": "double"
            },
            "latitude": {
              "maximum": 90,
              "minimum": -90,
              "type": "number",
              "description": "Angular distance north or south from the earth's equator measured through 90 degrees.",
              "format": "double"
            },
            "lastUpdated": {
              "title": "Date Time",
              "type": "string",
              "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "format": "date-time"
            },
            "sourceType": {
              "type": "string",
              "description": "The type of device used to get the GPS location."
            },
            "accuracy": {
              "type": "number",
              "description": "The accuracy rating of the GPS location."
            },
            "quality": {
              "type": "string",
              "description": "The quality of the GPS location."
            }
          },
          "description": "Longitude and latitude for a location along with metadata about the source data."
        },
        "sensors": {
          "type": "array",
          "items": {
            "title": "Sensor Measurement",
            "type": "object",
            "properties": {
              "units": {
                "type": "string",
                "description": "A single quantity regarded as a whole in calculation."
              },
              "value": {
                "type": "string",
                "description": "A numerical quantity that is assigned or is determined by calculation or measurement."
              },
              "minimum": {
                "type": "string",
                "description": "The least quantity admissible."
              },
              "maximum": {
                "type": "string",
                "description": "The upper limit allowed."
              },
              "target": {
                "type": "string",
                "description": "Desired value."
              },
              "type": {
                "type": "string",
                "description": "Type of value."
              },
              "lastUpdated": {
                "title": "Date Time",
                "type": "string",
                "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "format": "date-time"
              },
              "sourceType": {
                "type": "string",
                "description": "The source that performed the measurement."
              }
            },
            "description": "Information from sensors on the asset, such as temperature readings for refrigerated units."
          },
          "description": "List of sensor measurements for the movement."
        },
        "trailerStatus": {
          "enum": [
            "LOADED",
            "EMPTY"
          ],
          "type": "string",
          "description": "Describes whether the current trailer is Loaded or unloaded."
        },
        "address": {
          "title": "Address",
          "type": "object",
          "properties": {
            "streetAddress": {
              "type": "string",
              "description": "Address (eg. number, street, etc.)."
            },
            "adminArea1": {
              "type": "string",
              "description": "Province, state, or [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision."
            },
            "adminArea2": {
              "type": "string",
              "description": "Subdivision smaller than `adminArea1`. In the United States, this refers to county."
            },
            "locality": {
              "type": "string",
              "description": "City or town."
            },
            "neighborhood": {
              "type": "string",
              "description": "Neighborhood address."
            },
            "postalCode": {
              "type": "string",
              "description": "ZIP, postcode, or postal code."
            },
            "countryCode": {
              "maxLength": 3,
              "minLength": 3,
              "pattern": "^[A-Z]{3}$",
              "type": "string",
              "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code."
            }
          },
          "description": "Postal address for a location."
        }
      },
      "description": "Contains data from sensors and onboard computers about the current state of the in-transit leg or most recently completed leg."
    },
    "TimeZone": {
      "title": "TimeZone",
      "type": "object",
      "properties": {
        "timeZoneId": {
          "type": "string",
          "description": "The name of the time zone."
        }
      },
      "description": "Time zone of a location."
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of location where stop activity occurs."
        },
        "type": {
          "type": "string",
          "description": "Describes the type of location (useful for determining rail yards)."
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "coordinates": {
          "$ref": "#/definitions/Coordinates"
        }
      },
      "description": "Information about the stop, including the name, address, and coordinates."
    },
    "Coordinates": {
      "title": "Coordinates",
      "type": "object",
      "properties": {
        "longitude": {
          "maximum": 180,
          "minimum": -180,
          "type": "number",
          "description": "The arc or portion of the earth's equator intersected between the meridian of a given place and the prime meridian and expressed either in degrees or in time.",
          "format": "double"
        },
        "latitude": {
          "maximum": 90,
          "minimum": -90,
          "type": "number",
          "description": "Angular distance north or south from the earth's equator measured through 90 degrees.",
          "format": "double"
        }
      },
      "description": "Longitude and latitude for a location along with metadata about the source data."
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "streetAddress": {
          "type": "string",
          "description": "Address (eg. number, street, etc.)."
        },
        "adminArea1": {
          "type": "string",
          "description": "Province, state, or [ISO-3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision."
        },
        "adminArea2": {
          "type": "string",
          "description": "Subdivision smaller than `adminArea1`. In the United States, this refers to county."
        },
        "locality": {
          "type": "string",
          "description": "City or town."
        },
        "neighborhood": {
          "type": "string",
          "description": "Neighborhood address."
        },
        "postalCode": {
          "type": "string",
          "description": "ZIP, postcode, or postal code."
        },
        "countryCode": {
          "maxLength": 3,
          "minLength": 3,
          "pattern": "^[A-Z]{3}$",
          "type": "string",
          "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code."
        }
      },
      "description": "Postal address for a location."
    },
    "Stop": {
      "title": "Stop",
      "type": "object",
      "properties": {
        "id": {
          "title": "Stop Identifier",
          "type": "string",
          "description": "Identifier for the stop."
        },
        "sequenceNumber": {
          "type": "number",
          "description": "Sequenced order for stops within a leg."
        },
        "type": {
          "type": "string",
          "description": "Describes the type of stop (pickup or dropoff)."
        },
        "progress": {
          "enum": [
            "AtStop",
            "Complete",
            "Planned"
          ],
          "type": "string",
          "description": "Progress of work being done at the stop."
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "appointmentWindowStartDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "appointmentWindowEndDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "predictionsLastUpdated": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "estimatedArrivalDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "estimatedDepartureDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "arrivalDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "departureDateTime": {
          "title": "Date Time",
          "type": "string",
          "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "format": "date-time"
        },
        "arrivalStatus": {
          "enum": [
            "ON_TIME",
            "EARLY",
            "LATE",
            "NONE"
          ],
          "type": "string",
          "description": "The status of an arrival at the customer."
        },
        "referenceIdentifiers": {
          "type": "array",
          "items": {
            "title": "Reference Identifier",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of reference identifier."
              },
              "value": {
                "type": "string",
                "description": "Reference identifier."
              }
            },
            "description": "Identifier that can be tied to a movement."
          },
          "description": "Reference identifiers related to the stop."
        }
      },
      "description": "Tracks destinations and activities at different stops for the current leg."
    },
    "Segment": {
      "title": "Segment",
      "type": "object",
      "properties": {
        "transitMode": {
          "enum": [
            "Truck",
            "Rail"
          ],
          "type": "string",
          "description": "Describes the mode of transit for the leg (Truck, Rail)."
        },
        "transitStatus": {
          "enum": [
            "Planned",
            "InTransit",
            "Complete"
          ],
          "type": "string",
          "description": "Describes the current transit status of the leg (Planned, InTransit, Complete)."
        },
        "carrierSCAC": {
          "type": "string",
          "description": "SCAC of carrier responsible for the leg of the movement."
        },
        "sequenceNumber": {
          "type": "number",
          "description": "Sequenced order for legs within a movement."
        },
        "referenceIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceIdentifier"
          },
          "description": "List of reference identifiers for the leg."
        },
        "stops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stop"
          },
          "description": "List of stops for a leg."
        },
        "transitExceptions": {
          "type": "array",
          "items": {
            "title": "Transit Exception",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of transit exception."
              },
              "description": {
                "type": "string",
                "description": "Describes the type of transit exception that has occurred."
              },
              "exceptionStartDateTime": {
                "title": "Date Time",
                "type": "string",
                "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "format": "date-time"
              },
              "exceptionEndDateTime": {
                "title": "Date Time",
                "type": "string",
                "description": "As defined by `date-time` in [Section 5.6 of RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "format": "date-time"
              }
            },
            "description": "Transit exception that may occur on a segment."
          },
          "description": "List of transit exceptions that have occurred on a leg."
        },
        "trailer": {
          "title": "Trailer",
          "type": "object",
          "properties": {
            "prefix": {
              "type": "string",
              "description": "Trailer prefix."
            },
            "id": {
              "type": "string",
              "description": "Trailer id."
            }
          },
          "description": "The identifier details for a trailer."
        }
      },
      "description": "A segment of the movement carried out by a truck or train."
    },
    "Segments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Segment"
      },
      "description": "Segments of a move completed by a trailer, truck, or other mode of transportation."
    },
    "ReferenceIdentifier": {
      "title": "Reference Identifier",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of reference identifier."
        },
        "value": {
          "type": "string",
          "description": "Reference identifier."
        }
      },
      "description": "Identifier that can be tied to a movement."
    },
    "ReferenceIdentifiers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReferenceIdentifier"
      },
      "description": "Reference identifiers associated with the trackable."
    },
    "Trackable": {
      "title": "Trackable",
      "type": "object",
      "properties": {
        "trackableId": {
          "type": "string",
          "description": "The unique tracking id of the trackable."
        },
        "referenceIdentifiers": {
          "$ref": "#/definitions/ReferenceIdentifiers"
        },
        "segments": {
          "$ref": "#/definitions/Segments"
        },
        "latestTelemetry": {
          "$ref": "#/definitions/LatestTelemetry"
        },
        "latestlocation": {
          "$ref": "#/definitions/LatestLocation"
        },
        "status": {
          "title": "Status",
          "enum": [
            "Planned",
            "InTransit",
            "Complete",
            "Cancelled"
          ],
          "type": "string",
          "description": "Shows the overall transit status for the trackable (Planned, InTransit, Complete, Cancelled)."
        },
        "serviceStatus": {
          "title": "Service Status",
          "type": "string",
          "description": "Supported values are listed here. This list is subject to change. (EARLY, ON_TIME, LATE, NONE)."
        },
        "orderId": {
          "title": "OrderId",
          "type": "string",
          "description": "The identifier of an order."
        },
        "orderDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentDetails"
          },
          "description": "List of order details."
        }
      },
      "description": "Shared properties for trackables."
    },
    "TrackItFindOrder": {
      "type": "object",
      "title": "Order",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trackable"
          },
          "description": "List of order objects."
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2-tst.nonprod.jbhunt.com/oauth2provider/oauth/authorize",
      "tokenUrl": "https://oauth2-tst.nonprod.jbhunt.com/oauth2provider/oauth/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.jbhunt.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.jbhunt.com/privacy-policy.html#:~:text=We%20will%20not%20collect%20personal,monitor%20performance%2C%20and%20prevent%20fraud"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ]
}
