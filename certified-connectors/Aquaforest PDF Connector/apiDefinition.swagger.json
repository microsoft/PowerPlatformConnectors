{
  "basePath": "/AquaforestPDFAPIV2",
  "consumes": [],
  "definitions": {
    "ApiExtractPost200ApplicationJsonResponse": {
      "properties": {
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "x-ms-summary": "Error",
          "x-ms-visibility": "important"
        },
        "IsSuccessful": {
          "description": "This will return true if at least one page was extracted",
          "type": "boolean",
          "x-ms-summary": "Is Successful",
          "x-ms-visibility": "important"
        },
        "LicenceInfo": {
          "description": "Information about your API subscription key",
          "type": "string",
          "x-ms-summary": "License Info",
          "x-ms-visibility": "important"
        },
        "SplittedFile": {
          "description": "Array of Extracted Files",
          "items": {
            "properties": {
              "SplitFileContent": {
                "description": "A base 64 string representing the File Content",
                "format": "byte",
                "type": "string",
                "x-ms-summary": "(File Content)",
                "x-ms-visibility": "important"
              },
              "SplitFileName": {
                "description": "A string containing the generated File Name",
                "type": "string",
                "x-ms-summary": "(File Name)",
                "x-ms-visibility": "important"
              },
              "pageNumber": {
                "description": "The page range containing the page number where the extraction occurred",
                "type": "string",
                "x-ms-summary": "(Page Number)",
                "x-ms-visibility": "important"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Extract Output Files",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    },
    "ApiGetTextValueJsonResponse": {
      "properties": {
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "x-ms-summary": "Error Message",
          "x-ms-visibility": "important"
        },
        "IsSuccessful": {
          "description": "If the Text was matched successfully",
          "type": "boolean",
          "x-ms-summary": "Is Successful",
          "x-ms-visibility": "important"
        },
        "LicenceInfo": {
          "description": "Information about your API subscription key",
          "type": "string",
          "x-ms-summary": "License Info",
          "x-ms-visibility": "important"
        },
        "TextResult": {
          "description": "A string generated from applying the extracted text to the Text Result Template provided. Note if the page count is greater than one will concatenate all the pages using the Page Separator.",
          "type": "string",
          "x-ms-summary": "Text Result",
          "x-ms-visibility": "important"
        },
        "TextResults": {
          "description": "An array containing a list of pages and the extracted text values",
          "items": {
            "properties": {
              "pageNumber": {
                "description": "The page where the text was found",
                "type": "string",
                "x-ms-summary": "(Page Number)",
                "x-ms-visibility": "important"
              },
              "valueExtracted": {
                "description": "A string generated from applying the extracted text to the Text Result Template provided.",
                "type": "string",
                "x-ms-summary": "(Page Text)",
                "x-ms-visibility": "important"
              },
              "zoneValues": {
                "description": "An array containing the text extracted from each zone.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "(Zone Values)",
                "x-ms-visibility": "important"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Results",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    },
    "ApiRenameByBarcodePost200ApplicationJsonResponse": {
      "properties": {
        "BarcodeResult": {
          "description": "A string generated from applying the extracted text to the barcode Result Template provided. Note if the page count is greater than one will concatenate all the pages using the Page Separator.",
          "type": "string",
          "x-ms-summary": "Barcode",
          "x-ms-visibility": "important"
        },
        "BarcodeResults": {
          "description": "An array containing a list of pages and the extracted barcode values",
          "items": {
            "properties": {
              "pageNumber": {
                "description": "The page where the barcode was found",
                "type": "string",
                "x-ms-summary": "(Page Number)",
                "x-ms-visibility": "important"
              },
              "valueExtracted": {
                "description": "A string generated from applying the extracted barcode value to the barcode Result Template provided.",
                "type": "string",
                "x-ms-summary": "(Page Barcode)",
                "x-ms-visibility": "important"
              },
              "zoneValues": {
                "description": "An array containing the barcode extracted from each zone.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "(Zone Values)",
                "x-ms-visibility": "important"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Results",
          "x-ms-visibility": "important"
        },
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "x-ms-summary": "Error Message",
          "x-ms-visibility": "important"
        },
        "IsSuccessful": {
          "description": "If a barcode was detected",
          "type": "boolean",
          "x-ms-summary": "Is Successful",
          "x-ms-visibility": "important"
        },
        "LicenceInfo": {
          "description": "Information about your API subscription key",
          "type": "string",
          "x-ms-summary": "License Info",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    },
    "ApiSplitPost200ApplicationJsonResponse": {
      "properties": {
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "x-ms-summary": "Error Message",
          "x-ms-visibility": "important"
        },
        "IsSuccessful": {
          "description": "This will return true if at least one split page was matched.",
          "type": "boolean",
          "x-ms-summary": "Is Successful",
          "x-ms-visibility": "important"
        },
        "LicenceInfo": {
          "description": "Information about your API subscription key",
          "type": "string",
          "x-ms-summary": "License Info",
          "x-ms-visibility": "important"
        },
        "SplittedFile": {
          "description": "Array containing each of the split files together with details like the generated file name and page number.",
          "items": {
            "properties": {
              "SplitFileContent": {
                "description": "A base 64 string representing the File Content",
                "format": "byte",
                "type": "string",
                "x-ms-summary": "(File Content)",
                "x-ms-visibility": "important"
              },
              "SplitFileName": {
                "description": "A string containing the generated File Name",
                "type": "string",
                "x-ms-summary": "(File Name)",
                "x-ms-visibility": "important"
              },
              "pageNumber": {
                "description": "The page range containing the page numbers of the split operation",
                "type": "string",
                "x-ms-summary": "(Page Range)",
                "x-ms-visibility": "important"
              }
            },
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Split Output Files",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    },
    "ExtractBarcode": {
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "fileNameTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the output file if barcode is found",
          "type": "string",
          "x-ms-summary": "File Name Template",
          "x-ms-visibility": "important"
        },
        "noTextFileName": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the output file if no barcode is found",
          "type": "string",
          "x-ms-summary": "No File Template",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "zones": {
          "description": "List of variables that can be used to extract barcode information from PDF files",
          "items": {
            "properties": {
              "barcodeFormats": {
                "description": "Specify the types of Barcode you want to identify",
                "items": {
                  "enum": [
                    "All 1D",
                    "AZTEC",
                    "CODABAR",
                    "CODE 128",
                    "CODE 39",
                    "CODE 93",
                    "DATA MATRIX",
                    "EAN 13",
                    "EAN 8",
                    "ITF",
                    "MAXICODE",
                    "MSI",
                    "PDF 417",
                    "PLESSEY",
                    "QR CODE",
                    "RSS 14",
                    "RSS EXPANDED",
                    "UPC A",
                    "UPC E",
                    "UPC EAN EXTENSION"
                  ],
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Type",
                "x-ms-visibility": "important"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area you want to extract barcode from. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted barcode to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Barcode",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noTextFileName",
        "sourceFileName",
        "fileContent",
        "fileNameTemplate"
      ],
      "type": "object"
    },
    "ExtractText": {
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "title": "File Content",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "fileNameTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the output file if the text matches are found",
          "title": "File Name Template",
          "type": "string",
          "x-ms-summary": "File Name Template",
          "x-ms-visibility": "important"
        },
        "noTextFileName": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the output file if no text match is found",
          "title": "No File Template",
          "type": "string",
          "x-ms-summary": "No File Template",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "title": "File Name",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "zones": {
          "description": "List of variables that can be used to extract text information from PDF files",
          "items": {
            "properties": {
              "expression": {
                "description": "Provide one or more value(s) here to be used with the property above, we will return the first text value that matches the rule stated above.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Value"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area you want to extract text from. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "position": {
                "default": "text in zone",
                "description": "Use this to refine the text you extract more, select an option that matches your requirements",
                "enum": [
                  "text in zone",
                  "word after value",
                  "word before value",
                  "all text in line after value",
                  "all text in line before value",
                  "all text in zone after value",
                  "all text in zone before value"
                ],
                "type": "string",
                "x-ms-summary": "Select",
                "x-ms-visibility": "advanced"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted text to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Text",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noTextFileName",
        "sourceFileName",
        "fileContent",
        "fileNameTemplate"
      ],
      "type": "object"
    },
    "GetBarcode": {
      "properties": {
        "barcodeResultTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the output text result if a barcode is found",
          "type": "string",
          "x-ms-summary": "Barcode Result Template",
          "x-ms-visibility": "important"
        },
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "noBarcodeTemplate": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the output text result if no barcode is found",
          "type": "string",
          "x-ms-summary": "No Barcode Template",
          "x-ms-visibility": "important"
        },
        "pageSeparator": {
          "description": "Provide a page separator so that you can know where the page breaks are.",
          "type": "string",
          "x-ms-summary": "Page Separator",
          "x-ms-visibility": "advanced"
        },
        "pagerange": {
          "description": "Provide a page range you want to extract text from, this can be a single page number (1), multiple page numbers separated by commas (1,2,3), a page range (1-4) or a mixture of all (1,2,4-7).",
          "type": "string",
          "x-ms-summary": "Pages",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "zones": {
          "default": [],
          "description": "List of variables that can be used to extract barcode information from PDF files",
          "items": {
            "properties": {
              "barcodeFormats": {
                "description": "Specify the types of Barcode you want to identify",
                "items": {
                  "enum": [
                    "All 1D",
                    "AZTEC",
                    "CODABAR",
                    "CODE 128",
                    "CODE 39",
                    "CODE 93",
                    "DATA MATRIX",
                    "EAN 13",
                    "EAN 8",
                    "ITF",
                    "MAXICODE",
                    "MSI",
                    "PDF 417",
                    "PLESSEY",
                    "QR CODE",
                    "RSS 14",
                    "RSS EXPANDED",
                    "UPC A",
                    "UPC E",
                    "UPC EAN EXTENSION"
                  ],
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Type",
                "x-ms-visibility": "important"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area you want to extract barcode from. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "pagenumber": {
                "description": "This property is deprecated, we advise you to use the Pages property. The Pages property applies to all zones and allows you select the pages you want to process.",
                "type": "integer",
                "x-ms-summary": "Page (Deprecated)",
                "x-ms-visibility": "advanced"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted text to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Barcode",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noBarcodeTemplate",
        "sourceFileName",
        "fileContent",
        "barcodeResultTemplate"
      ],
      "type": "object"
    },
    "GetDataFromPDFRequest": {
      "example": "{\"SourceFileName\":\"test\",\"DateAsISO\":false,\"StripCurrencySymbol\":false,\"FileContent\":\"test\",\"PageRange\":\"1,2\",\"ConfidenceScore\":1.0,\"PageLimit\":1}",
      "properties": {
        "advancedFlags": {
          "description": "This is used to pass advanced parameters to this action, do not use this property unless directed by our support team.",
          "items": {
            "properties": {
              "settingName": {
                "description": "Enter the name of the setting here",
                "type": "string",
                "x-ms-summary": "Name",
                "x-ms-visibility": "important"
              },
              "settingValue": {
                "description": "Enter the value of the setting here.",
                "type": "string",
                "x-ms-summary": "Value",
                "x-ms-visibility": "important"
              }
            },
            "required": [
              "settingValue",
              "settingName"
            ],
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Advanced Settings",
          "x-ms-visibility": "advanced"
        },
        "confidenceScore": {
          "description": "Set a higher confidence score to filter out values with lower confidence, you can set any value between 0 and 1. We recommend starting from 0.5",
          "maximum": 1,
          "minimum": 0,
          "type": "number",
          "x-ms-summary": "Confidence Score",
          "x-ms-visibility": "advanced"
        },
        "dateAsISO": {
          "default": "ISO conversion (DMY input assumed)",
          "description": "A lot of users prefer to get their date values in ISO format, use the drop down below to choose how you want us to return your date values.",
          "enum": [
            "Do not convert date values",
            "ISO conversion (DMY input assumed)",
            "ISO conversion (MDY input assumed)"
          ],
          "type": "string",
          "x-ms-summary": "Date Conversion",
          "x-ms-visibility": "advanced"
        },
        "expectedKeys": {
          "description": "Provide one key name per line to make values available to later actions without parsing JSON.",
          "type": "string",
          "x-ms-summary": "Expected Keys"
        },
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "pageLimit": {
          "description": "Maximum number of pages to be processed",
          "type": "integer",
          "x-ms-summary": "Page Limit",
          "x-ms-visibility": "advanced"
        },
        "pageRange": {
          "description": "A string representation of the page numbers you want to process. E.g 1,3-4",
          "type": "string",
          "x-ms-summary": "Page Range"
        },
        "stripCurrencySymbol": {
          "default": false,
          "description": "Set this to true if you want the symbols and strings to be removed before we return currency values",
          "type": "boolean",
          "x-ms-summary": "Strip Currency Symbol",
          "x-ms-visibility": "advanced"
        },
        "synonym": {
          "default": true,
          "description": "Set this to true if you want us to return all the keys that are synonyms to the expected key.",
          "type": "boolean",
          "x-ms-summary": "Match Synonym",
          "x-ms-visibility": "advanced"
        },
        "synonymDictionary": {
          "description": "You can provide a JSON array of \u201centry\u201d objects, where each object contains a list of synonyms in an array. For instance, if you want \u201cInvoice No\u201d and \u201cInvoice Number\u201d (case-insensitive) to be interpreted as the same key, use the following JSON: [{'entry': [ 'Invoice No', 'invoice number' ]}]",
          "example": "[{'entry': [ 'invoice number', 'Invoice no' ]}]",
          "minLength": 3,
          "type": "string",
          "x-ms-summary": "Synonym Dictionary",
          "x-ms-visibility": "advanced"
        },
        "trimSymbols": {
          "default": true,
          "description": "Set this to true if you want us to remove all leading and trailing symbols from the keys found before we match them to an expected key.",
          "type": "boolean",
          "x-ms-summary": "Trim Symbols",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "fileContent"
      ],
      "type": "object"
    },
    "GetPDFDataDynamicResponseSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetDataSchema",
        "parameters": {
          "expectedKeys": {
            "parameter": "expectedKeys"
          },
          "operation": "GetPageData"
        },
        "value-path": "items"
      },
      "x-ms-dynamic-properties": {
        "operationId": "GetDataSchema",
        "parameters": {
          "expectedKeys": {
            "parameterReference": "getDataFromPDFRequest/expectedKeys"
          },
          "operation": {
            "value": "GetPageData"
          }
        },
        "itemValuePath": "items"
      }
    },
    "GetPDFInfoRequest": {
      "example": "{\"fileContent\":\"as\",\"sourceFileName\":\"\",\"PageLimit\":10}",
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "pageLimit": {
          "default": 10,
          "description": "Maximum number of pages to be processed, this is only used to check if pages contain hidden text or to check if PDF is searchable",
          "type": "integer",
          "x-ms-summary": "Page Limit",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "fileContent"
      ],
      "type": "object"
    },
    "GetPDFInfoResponse": {
      "properties": {
        "AllowAssembly": {
          "description": "Allow rotation, insertion or deletion of pages.",
          "type": "boolean",
          "x-ms-summary": "Allow Assembly"
        },
        "AllowDegradedPrinting": {
          "description": "Allow low-quality printing.",
          "type": "boolean",
          "x-ms-summary": "Allow Degraded Printing"
        },
        "AllowExtractContents": {
          "description": "Allow extraction of text and graphics.",
          "type": "boolean",
          "x-ms-summary": "Allow Extract Contents"
        },
        "AllowExtractForAccessibility": {
          "description": "Allow extraction of text and graphics in support of accessibility.",
          "type": "boolean",
          "x-ms-summary": "Allow Extract For Accessibility"
        },
        "AllowFillInForm": {
          "description": "Allow filling of form fields.",
          "type": "boolean",
          "x-ms-summary": "Allow Fill In Form"
        },
        "AllowModifyAnnotations": {
          "description": "Allow modification of annotations.",
          "type": "boolean",
          "x-ms-summary": "Allow Modify Annotations"
        },
        "AllowModifyContents": {
          "description": "Allow modification of contents.",
          "type": "boolean",
          "x-ms-summary": "Allow Modify Contents"
        },
        "AllowPrinting": {
          "description": "Allow high-quality printing.",
          "type": "boolean",
          "x-ms-summary": "Allow Printing"
        },
        "Author": {
          "description": "Who created the document.",
          "type": "string",
          "x-ms-summary": "Author"
        },
        "CreationDate": {
          "description": "This is the date and time the PDF was created.",
          "type": "string",
          "x-ms-summary": "Creation Date"
        },
        "Creator": {
          "description": "The originating application or library.",
          "type": "string",
          "x-ms-summary": "Creator"
        },
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "x-ms-summary": "Error message"
        },
        "FileSize": {
          "description": "The size of the file in bytes",
          "type": "number",
          "x-ms-summary": "File Size (bytes)"
        },
        "HasHiddenText": {
          "description": "This will return true if the PDF file has an OCR layer.",
          "type": "boolean",
          "x-ms-summary": "Has Hidden Text"
        },
        "IsEncrypted": {
          "description": "This will return true if this document is encrypted or not.",
          "type": "boolean",
          "x-ms-summary": "Is Encrypted"
        },
        "IsSearchable": {
          "description": "This will return true if the PDF file is searchable.",
          "type": "boolean",
          "x-ms-summary": "Is Searchable"
        },
        "IsSuccessful": {
          "description": "Returns true if the action was successful.",
          "type": "boolean",
          "x-ms-summary": "Is Successful"
        },
        "Keywords": {
          "description": "Keywords can be comma separated.",
          "type": "string",
          "x-ms-summary": "Keywords"
        },
        "LicenceInfo": {
          "description": "Json summary of your subscription quota.",
          "type": "string",
          "x-ms-summary": "License Info"
        },
        "ModifiedDate": {
          "description": "This property represents the date and time the PDF was last modified",
          "type": "string",
          "x-ms-summary": "Modified Date"
        },
        "NumberofPages": {
          "description": "The number of pages in the PDF file.",
          "type": "integer",
          "x-ms-summary": "Number of Pages"
        },
        "PDFversion": {
          "description": "The version of the PDF specification the document was built against.",
          "type": "number",
          "x-ms-summary": "PDF Version"
        },
        "Producer": {
          "description": "The product that created the PDF. In the early days of PDF people would use a Creator application like Microsoft Word to write a document, print it to a PostScript file and then the Producer would be Acrobat Distiller, the application that converted the PostScript file to a PDF. Nowadays Creator and Producer are often the same or one field is left blank.",
          "type": "string",
          "x-ms-summary": "Producer"
        },
        "Subject": {
          "description": "What is the document about.",
          "type": "string",
          "x-ms-summary": "Subject"
        },
        "Title": {
          "description": "The title of the document.",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "Trapped": {
          "description": "This property is a Boolean value that indicates whether the document has been trapped. Trapping is a pre-press process which introduces color areas into color separations in order to obscure potential register errors.",
          "type": "string",
          "x-ms-summary": "Trapped"
        },
        "XmpMetadata": {
          "description": "The Extensible Metadata Platform (XMP) is an ISO standard, originally created by Adobe Systems Inc., for the creation, processing and interchange of standardized and custom metadata for digital documents and data sets.",
          "type": "string",
          "x-ms-summary": "XMP Metadata"
        }
      },
      "type": "object"
    },
    "GetText": {
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "noTextTemplate": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the text to be returned if a match is not found",
          "type": "string",
          "x-ms-summary": "No Text Match Template",
          "x-ms-visibility": "important"
        },
        "pageSeparator": {
          "description": "Provide a page separator so that you can know where the page breaks are.",
          "type": "string",
          "x-ms-summary": "Page Separator",
          "x-ms-visibility": "advanced"
        },
        "pagerange": {
          "description": "Provide a page range you want to extract text from, this can be a single page number (1), multiple page numbers separated by commas (1,2,3), a page range (1-4) or a mixture of all (1,2,4-7).",
          "type": "string",
          "x-ms-summary": "Pages",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "textResultTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the text to be returned if a match is found",
          "type": "string",
          "x-ms-summary": "Text Result Template",
          "x-ms-visibility": "important"
        },
        "zones": {
          "default": [],
          "description": "List of variables that can be used to extract text information from PDF files",
          "items": {
            "properties": {
              "expression": {
                "description": "Provide one or more value(s) here to be used with the property above, we will return the first text value that matches the rule stated above.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Value",
                "x-ms-visibility": "advanced"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area (left x:top y:width:height) you want to extract text from. If you want to extract text from the whole page, you can use 'all' as the value. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "pagenumber": {
                "description": "This property is deprecated, we advise you to use the Pages property. The Pages property applies to all zones and allows you select the pages you want to process.",
                "type": "integer",
                "x-ms-summary": "Page (Deprecated)",
                "x-ms-visibility": "advanced"
              },
              "position": {
                "default": "text in zone",
                "description": "Use this to refine the text you extract more, select an option that matches your requirements",
                "enum": [
                  "text in zone",
                  "word after value",
                  "word before value",
                  "all text in line after value",
                  "all text in line before value",
                  "all text in zone after value",
                  "all text in zone before value"
                ],
                "type": "string",
                "x-ms-summary": "Select",
                "x-ms-visibility": "advanced"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted text to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "type": "array",
          "x-ms-summary": "Text",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noTextTemplate",
        "sourceFileName",
        "fileContent",
        "textResultTemplate"
      ],
      "type": "object"
    },
    "SplitBarcode": {
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "fileNameTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the output file if barcode is found",
          "type": "string",
          "x-ms-summary": "File Name Template",
          "x-ms-visibility": "important"
        },
        "noMatch": {
          "default": "Do not copy to output",
          "description": "Depending on the split option you choose above, some pages will have no barcode value. Choose what to do the these pages.",
          "enum": [
            "Do not copy to output",
            "Copy to output",
            "Copy to output and rename"
          ],
          "type": "string",
          "x-ms-summary": "Pages with no Match",
          "x-ms-visibility": "advanced"
        },
        "noTextFileName": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the output file if no barcode is found",
          "type": "string",
          "x-ms-summary": "No Barcode Match Template",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "splitOption": {
          "default": "Barcode on first page",
          "description": "Use this to refine the text you extract more, select an option that matches your requirements",
          "enum": [
            "Barcode on first page",
            "Barcode on last page",
            "Remove barcode page"
          ],
          "type": "string",
          "x-ms-summary": "Output File Options",
          "x-ms-visibility": "advanced"
        },
        "zones": {
          "description": "List of variables that can be used to extract barcode information from PDF files",
          "items": {
            "properties": {
              "barcodeFormats": {
                "description": "Specify the types of Barcode you want to identify",
                "items": {
                  "enum": [
                    "All 1D",
                    "AZTEC",
                    "CODABAR",
                    "CODE 128",
                    "CODE 39",
                    "CODE 93",
                    "DATA MATRIX",
                    "EAN 13",
                    "EAN 8",
                    "ITF",
                    "MAXICODE",
                    "MSI",
                    "PDF 417",
                    "PLESSEY",
                    "QR CODE",
                    "RSS 14",
                    "RSS EXPANDED",
                    "UPC A",
                    "UPC E",
                    "UPC EAN EXTENSION"
                  ],
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Type",
                "x-ms-visibility": "important"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area you want to extract barcode from. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted barcode to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Barcode",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noTextFileName",
        "sourceFileName",
        "fileContent",
        "fileNameTemplate"
      ],
      "type": "object"
    },
    "SplitText": {
      "properties": {
        "fileContent": {
          "description": "The content of the source file",
          "format": "byte",
          "title": "File Content",
          "type": "string",
          "x-ms-summary": "File Content",
          "x-ms-visibility": "important"
        },
        "fileNameTemplate": {
          "default": "%VALUE1%",
          "description": "Template for the output file if the text matches are found",
          "title": "File Name Template",
          "type": "string",
          "x-ms-summary": "File Name Template",
          "x-ms-visibility": "important"
        },
        "noMatch": {
          "default": "Do not copy to output",
          "description": "Depending on the split option you choose above, some pages will have no text value extracted. Choose what to do the these pages.",
          "enum": [
            "Do not copy to output",
            "Copy to output",
            "Copy to output and rename"
          ],
          "type": "string",
          "x-ms-summary": "Pages with no Match",
          "x-ms-visibility": "advanced"
        },
        "noTextFileName": {
          "default": "NoText_%FILENAME%",
          "description": "Template for the output file if no text match is found",
          "title": "No File Template",
          "type": "string",
          "x-ms-summary": "No File Template",
          "x-ms-visibility": "advanced"
        },
        "sourceFileName": {
          "description": "The name of the source file",
          "title": "File Name",
          "type": "string",
          "x-ms-summary": "File Name",
          "x-ms-visibility": "important"
        },
        "splitOption": {
          "default": "Page that matches text on first page",
          "description": "Choose the location of the page with the barcode in the output files from the split operation.",
          "enum": [
            "Page that matches text on first page",
            "Page that matches text on last page",
            "Remove the page that matches text"
          ],
          "type": "string",
          "x-ms-summary": "Output File Options",
          "x-ms-visibility": "advanced"
        },
        "zones": {
          "description": "List of variables that can be used to extract text information from PDF files",
          "items": {
            "properties": {
              "expression": {
                "description": "Provide one or more value(s) here to be used with the property above, we will return the first text value that matches the rule stated above.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-ms-summary": "Value"
              },
              "location": {
                "default": "all",
                "description": "List of coordinates representing an area you want to extract text from. Use https://www.aquaforest.com/en/zone/get-pdf-zone.html to get the values",
                "type": "string",
                "x-ms-summary": "Location",
                "x-ms-visibility": "important"
              },
              "position": {
                "default": "text in zone",
                "description": "Use this to refine the text you extract more, select an option that matches your requirements",
                "enum": [
                  "text in zone",
                  "word after value",
                  "word before value",
                  "all text in line after value",
                  "all text in line before value",
                  "all text in zone after value",
                  "all text in zone before value"
                ],
                "type": "string",
                "x-ms-summary": "Select",
                "x-ms-visibility": "advanced"
              },
              "regex": {
                "description": "If a regular expression is provided here, we will match any extracted text to it and return the match.",
                "type": "string",
                "x-ms-summary": "Pattern",
                "x-ms-visibility": "advanced"
              }
            },
            "required": [
              "location"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array",
          "x-ms-summary": "Text",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "noTextFileName",
        "sourceFileName",
        "fileContent",
        "fileNameTemplate"
      ],
      "type": "object"
    },
    "ocr_data": {
      "description": "Parameters for OCR operation",
      "format": "ocr_data",
      "properties": {
        "aquaforestImageTimeout": {
          "default": 120000,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "AquaforestImageTimeout",
          "x-ms-visibility": "advanced"
        },
        "author": {
          "description": "Set a custom Author in the output PDF document properties.",
          "type": "string",
          "x-ms-summary": "Author",
          "x-ms-visibility": "advanced"
        },
        "autorotate": {
          "default": true,
          "description": "Auto rotate the image \u2013 this will ensure all text oriented normally",
          "type": "boolean",
          "x-ms-summary": "Auto-rotate"
        },
        "binarize": {
          "default": 200,
          "description": "This value should generally only be used under guidance from technical support. It can control the way that color images are processed and force binarization with a particular threshold. A value of 200 has been shown to generally give good results in testing, but this should be confirmed with \"typical\" customer documents. By setting this to -1 an alternative method is used which will attempt to separate the text from any background images or colors. This can give improved OCR results for certain documents such as newspaper and magazine pages.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Binarize"
        },
        "blackPixelLimit": {
          "default": 0.65,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "Black pixel limit",
          "x-ms-visibility": "advanced"
        },
        "blankPageThreshold": {
          "default": -1,
          "description": "Use this to set the minimum number of \"On Pixels\" that must be present in the image for a page not to be considered blank. A value of -1 will turn off blank page detection.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Blank page threshold"
        },
        "boxSize": {
          "default": 0,
          "description": "This option is ideal for forms where sometimes boxes around text can cause an area to be identified as graphics. This option removes boxes from the temporary copy of the imaged used by the OCR engine. It does not remove boxes from the final image. Technically, this option removes connected elements with a minimum area (in pixels and defined by this property). This option is currently only applied for bi-tonal images.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Box size",
          "x-ms-visibility": "advanced"
        },
        "convertToTiff": {
          "default": false,
          "description": "Each page in the PDF document is rasterized to a TIFF image.",
          "type": "boolean",
          "x-ms-summary": "ConvertToTiff"
        },
        "createProcess": {
          "default": false,
          "description": "Set this to true if you want to launch process through pinvoke.",
          "type": "boolean",
          "x-ms-summary": "CreateProcess",
          "x-ms-visibility": "advanced"
        },
        "creationDate": {
          "description": "Set a custom creation date in the output PDF document properties. The date string must be in the format 'yyyy-MM-dd HH:mm:ss'.",
          "type": "string",
          "x-ms-summary": "Creation Date",
          "x-ms-visibility": "advanced"
        },
        "deskew": {
          "default": false,
          "description": "Deskew (straighten) the image.",
          "type": "boolean",
          "x-ms-summary": "Deskew"
        },
        "despeckle": {
          "default": 0,
          "description": "This removes all disconnected elements within the image that have height or width in pixels less than the specified figure. The maximum value is 9 and the default value is 0.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Despeckle"
        },
        "dictionaryLookup": {
          "default": 2,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "DictionaryLookup",
          "x-ms-visibility": "advanced"
        },
        "dotmatrix": {
          "default": false,
          "description": "Set this to true to improve recognition of dot-matrix fonts. Default value is false. If set to true for non dot-matrix fonts then the recognition can be poor.",
          "type": "boolean",
          "x-ms-summary": "Dotmatrix",
          "x-ms-visibility": "advanced"
        },
        "enableDebugOutput": {
          "default": false,
          "description": "Enables debug output.",
          "type": "boolean",
          "x-ms-summary": "Enable debug output",
          "x-ms-visibility": "advanced"
        },
        "enableMrc": {
          "default": false,
          "description": "This enables Mixed Raster Compression which can dramatically reduce the output size of PDFs comprising color scans. Note that this option is only suitable when the source is not a PDF or using ConvertToTiff.",
          "type": "boolean",
          "x-ms-summary": "Compress PDF (MRC)"
        },
        "enablePDFAOutput": {
          "default": false,
          "description": "Whether or not to output as PDF/A.",
          "type": "boolean",
          "x-ms-summary": "PDF/A Output",
          "x-ms-visibility": "advanced"
        },
        "errorMode": {
          "default": 7,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Error mode",
          "x-ms-visibility": "advanced"
        },
        "fileContent": {
          "description": "Content of the file to OCR",
          "format": "byte",
          "type": "string",
          "x-ms-summary": "Source file content",
          "x-ms-visibility": "important"
        },
        "fileNameWithExtension": {
          "description": "The source file name with extension or just the extension (with a leading period '.')",
          "type": "string",
          "x-ms-summary": "Source file name with extension",
          "x-ms-visibility": "important"
        },
        "flipDetect": {
          "default": 2,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Flip detect",
          "x-ms-visibility": "advanced"
        },
        "grayscaleQuality": {
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Grayscale quality",
          "x-ms-visibility": "advanced"
        },
        "heuristics": {
          "default": 2,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Heuristics",
          "x-ms-visibility": "advanced"
        },
        "jbig2EncFlags": {
          "description": "These are the flags that will be passed to the application used to generate JBIG2 versions of images used in PDF generation (assuming this compression is enabled). This option should generally only be used under guidance from technical support.",
          "format": "string",
          "type": "string",
          "x-ms-summary": "Jbig2EncFlags",
          "x-ms-visibility": "advanced"
        },
        "language": {
          "default": "English",
          "description": "Selecting one of the option below sets the language to be used for the OCR processing. The default language is English.",
          "enum": [
            "English",
            "German",
            "French",
            "Russian",
            "Swedish",
            "Spanish",
            "Italian",
            "Russian_English",
            "Ukrainian",
            "Serbian",
            "Croatian",
            "Polish",
            "Danish",
            "Portuguese",
            "Dutch",
            "Czech",
            "Roman",
            "Hungar",
            "Bulgar",
            "Slovenian",
            "Latvian",
            "Lithuanian",
            "Estonian",
            "Turkish"
          ],
          "format": "enum",
          "type": "string",
          "x-ms-summary": "Language"
        },
        "libTiffSavePageAsBmp": {
          "default": false,
          "description": "Sometimes if there is an image which is 1bpp and has LZW compression, the pre-processing can cause the colour of the image to be inverted (black to white and white to black). Set this to true to avoid this.",
          "type": "boolean",
          "x-ms-summary": "LibTiffSavePageAsBmp",
          "x-ms-visibility": "advanced"
        },
        "maxDeskew": {
          "default": 10,
          "description": "Maximum angle by which a page will be deskewed. This option should generally only be used under guidance from technical support (support@aquaforest.com).",
          "format": "float",
          "type": "number",
          "x-ms-summary": "Maximum deskew",
          "x-ms-visibility": "advanced"
        },
        "minDeskewConfidence": {
          "default": 3,
          "description": "This option should generally only be used under guidance from technical support (support@aquaforest.com).",
          "format": "float",
          "type": "number",
          "x-ms-summary": "Minimum deskew confidence",
          "x-ms-visibility": "advanced"
        },
        "modifiedDate": {
          "description": "Set a custom modified date in the output PDF document properties. The date string must be in the format 'yyyy-MM-dd HH:mm:ss'.",
          "type": "string",
          "x-ms-summary": "Modified Date",
          "x-ms-visibility": "advanced"
        },
        "morph": {
          "description": "Morphological options that will be applied to the binarized image before OCR. If set to empty none is applied. Common options include those listed below but for more options please contact support@aquaforest.com.",
          "format": "string",
          "type": "string",
          "x-ms-summary": "Morph",
          "x-ms-visibility": "advanced"
        },
        "mrcBackgroundFactor": {
          "default": 3,
          "description": "Sampling size for the background portion of the image. The higher the number, the larger the size of the image blocks used for averaging which will result in a reduction in size but also quality. Default value is 3",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "MrcBackgroundFactor",
          "x-ms-visibility": "advanced"
        },
        "mrcForegroundFactor": {
          "default": 3,
          "description": "Sampling size for the foreground portion of the image. The higher the number, the larger the size of the image blocks used for averaging which will result in a reduction in size but also quality. Default value is 3",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "MrcForegroundFactor",
          "x-ms-visibility": "advanced"
        },
        "mrcQuality": {
          "default": 75,
          "description": "JPEG quality setting (percentage value 1 - 100) for use in saving the background and foreground images. Default value is 75",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "MrcQuality",
          "x-ms-visibility": "advanced"
        },
        "mrcTimeout": {
          "default": 120000,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "MrcTimeout",
          "x-ms-visibility": "advanced"
        },
        "noPictures": {
          "default": false,
          "description": "By default, if an area of the document is identified as a graphic area then no OCR processing is run on that area. However, certain documents may include areas or boxes that are identified as \"graphic\" or \"picture\" areas but that actually do contain useful text. Setting NoPictures to True will cause it to ignore areas identified as pictures whilst setting it to False will force OCR of areas identified as pictures.",
          "type": "boolean",
          "x-ms-summary": "NoPictures",
          "x-ms-visibility": "advanced"
        },
        "ocrProcessSetupTimeout": {
          "default": 110000,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "OcrProcessSetupTimeout",
          "x-ms-visibility": "advanced"
        },
        "ocrTimeout": {
          "default": 150000,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "OcrTimeout",
          "x-ms-visibility": "advanced"
        },
        "password": {
          "description": "The password to open the source PDF file",
          "type": "string",
          "x-ms-summary": "Password",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageBpp": {
          "description": "The Bits Per Pixel to use for the rasterized PDF page when using engine 1. This only applies for documents that are processed using ConvertToTiff. The default value for this property is taken from the PDF page.",
          "enum": [
            "Bpp_1",
            "Bpp_24"
          ],
          "format": "enum",
          "type": "string",
          "x-ms-summary": "PdfToImageBpp",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageCompression": {
          "description": "The compression to set to the images extracted or rasterized from each page of the source PDF file. These images are then OCRed to create the searchable PDF. The default value for this property is taken from each page in the source PDF file.",
          "enum": [
            "CCITT4",
            "LZW"
          ],
          "format": "enum",
          "type": "string",
          "x-ms-summary": "PdfToImageCompression",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageDpi": {
          "description": "The DPI to set to the images rasterized from each page of the source PDF file. These images are then OCRed to create the searchable PDF. The default value for this property is taken from each page in the source PDF file.",
          "enum": [
            "DPI_72",
            "DPI_100",
            "DPI_150",
            "DPI_200",
            "DPI_300",
            "DPI_400",
            "DPI_500",
            "DPI_600"
          ],
          "format": "enum",
          "type": "string",
          "x-ms-summary": "PdfToImageDpi",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageForceVectorCheck": {
          "default": false,
          "description": "This setting is useful when dealing with documents that contains vector objects (e.g. CAD drawings). By default, pages that contain only vector objects are rasterized. Pages that do not have any images but contain vector objects as well as electronic text are skipped from rasterization. However, sometimes there can be a page that contains vector objects (CAD drawings) but its title may be in electronic text. To force rasterizing pages like these, set this property to true.",
          "type": "boolean",
          "x-ms-summary": "PdfToImageForceVectorCheck",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageIncludeText": {
          "default": false,
          "description": "When set to False this will prevent the conversion of real text (i.e. electronically generated as opposed to text that is part of a scanned image) from being rendered in the page images extracted from the PDF. This is because the text is already searchable and so generally does not require OCR. The value can be set to True however if the OCR is required on this real text.",
          "type": "boolean",
          "x-ms-summary": "PdfToImageIncludeText",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageMaxRes": {
          "default": 600,
          "description": "The maximum resolution of the rasterized images. If the resolution retrieved from the PDF page is bigger than this value, it will be set to this value. The default value for this property is 600.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "PdfToImageMaxRes",
          "x-ms-visibility": "advanced"
        },
        "pdfToImageMinRes": {
          "default": 200,
          "description": "The minimum resolution of the rasterized images. If the resolution retrieved from the PDF page is lower than this value, it will be set to this value. The default value for this property is 200.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "PdfToImageMinRes",
          "x-ms-visibility": "advanced"
        },
        "pdfaVersion": {
          "description": "The PDF/A version.",
          "enum": [
            "PDF_A1b",
            "PDF_A2b",
            "PDF_A3b"
          ],
          "format": "enum",
          "type": "string",
          "x-ms-summary": "PDF/A Version",
          "x-ms-visibility": "advanced"
        },
        "pipeClientConnectionTimeout": {
          "default": 60000,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "PipeClientConnectionTimeout",
          "x-ms-visibility": "advanced"
        },
        "removeBlankPage": {
          "default": false,
          "description": "Remove blank pages when BlankPageThreshold is greater than -1 and ConvertToTiff is true.",
          "type": "boolean",
          "x-ms-summary": "RemoveBlankPage"
        },
        "removeLines": {
          "default": false,
          "description": "Remove lines from images fpr better recognition.",
          "type": "boolean",
          "x-ms-summary": "RemoveLines"
        },
        "restartEngineEvery": {
          "default": 10,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "RestartEngineEvery",
          "x-ms-visibility": "advanced"
        },
        "retainBookmarks": {
          "default": false,
          "description": "Retains any bookmarks from the source file in the output when using ConvertToTiff.",
          "type": "boolean",
          "x-ms-summary": "Retain bookmarks",
          "x-ms-visibility": "advanced"
        },
        "retainCreationDate": {
          "default": false,
          "description": "Retains the creation date of the source file in the output PDF document properties.",
          "type": "boolean",
          "x-ms-summary": "Retain creation date",
          "x-ms-visibility": "advanced"
        },
        "retainMetadata": {
          "default": false,
          "description": "Retains any metadata from the source file in the output when using ConvertToTiff.",
          "type": "boolean",
          "x-ms-summary": "Retain metadata",
          "x-ms-visibility": "advanced"
        },
        "retainModifiedDate": {
          "default": false,
          "description": "Retains the modified date of the source file in the output PDF document properties.",
          "type": "boolean",
          "x-ms-summary": "Retain modified date",
          "x-ms-visibility": "advanced"
        },
        "retainViewerPreferences": {
          "default": false,
          "description": "Retains any PDF Viewer Preferences, Page Mode and Page Layout from source file in the output when using ConvertToTiff.",
          "type": "boolean",
          "x-ms-summary": "Retain viewer preferences",
          "x-ms-visibility": "advanced"
        },
        "savePredespeckle": {
          "default": true,
          "description": "This will use the original image (i.e. before applying pre-processing) in the output PDF.",
          "type": "boolean",
          "x-ms-summary": "SavePredespeckle",
          "x-ms-visibility": "advanced"
        },
        "tables": {
          "default": false,
          "description": "This option when set to true, tries to OCR within table cells.",
          "type": "boolean",
          "x-ms-summary": "Tables",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterHeight": {
          "default": 130,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "TextLayerFilterHeight",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterHeightInverted": {
          "default": 40,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "TextLayerFilterHeightInverted",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterPercentage": {
          "default": 0.6,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "TextLayerFilterPercentage",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterPercentageInverted": {
          "default": 0.5,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "TextLayerFilterPercentageInverted",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterRatio": {
          "default": 1,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "TextLayerFilterRatio",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterRatioInverted": {
          "default": 0.95,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "TextLayerFilterRatioInverted",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterWidth": {
          "default": 130,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "TextLayerFilterWidth",
          "x-ms-visibility": "advanced"
        },
        "textLayerFilterWidthInverted": {
          "default": 40,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "TextLayerFilterWidthInverted",
          "x-ms-visibility": "advanced"
        },
        "textLayerMaxBoxes": {
          "default": 0,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "TextLayerMaxBoxes",
          "x-ms-visibility": "advanced"
        },
        "tidyUpMode": {
          "default": 1,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Tidy-up mode",
          "x-ms-visibility": "advanced"
        },
        "validatePDFA": {
          "default": false,
          "description": "Whether or not to validate the PDF/A document after conversion",
          "type": "boolean",
          "x-ms-summary": "Validate PDF/A",
          "x-ms-visibility": "advanced"
        },
        "wordMatchThreshold": {
          "default": 10,
          "description": "Contact technical support (support@aquaforest.com) for guidance on using this property.",
          "format": "float",
          "type": "number",
          "x-ms-summary": "Word match threshold",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "fileContent",
        "fileNameWithExtension"
      ],
      "type": "object"
    },
    "ocr_response": {
      "description": "Response data for OCR operation",
      "format": "ocr_response",
      "properties": {
        "ErrorMessage": {
          "description": "If the value of Is Successful is false, we will return an Error Message",
          "type": "string",
          "uniqueItems": false,
          "x-ms-summary": "Error message",
          "x-ms-visibility": "important"
        },
        "IsSuccessful": {
          "description": "Returns true if the OCR was successful.",
          "type": "boolean",
          "x-ms-summary": "Is Successful",
          "x-ms-visibility": "important"
        },
        "LicenceInfo": {
          "description": "Information about your API subscription key",
          "type": "string",
          "x-ms-summary": "License Info",
          "x-ms-visibility": "important"
        },
        "LogFileContent": {
          "description": "The log contents of the operation",
          "format": "byte",
          "type": "string",
          "uniqueItems": false,
          "x-ms-summary": "Log file content",
          "x-ms-visibility": "important"
        },
        "OutputFileContent": {
          "description": "File generated by the Aquaforest PDF converter.",
          "format": "byte",
          "type": "string",
          "uniqueItems": false,
          "x-ms-summary": "Processed file content",
          "x-ms-visibility": "important"
        }
      },
      "type": "object"
    }
  },
  "host": "aquaforest-pdf.azure-api.net",
  "info": {
    "description": "Aquaforest PDF connector contains a group of actions that performs different PDF operations like splitting, text extraction, barcode extraction and OCR operations for Office 365 and Power Automate.",
    "title": "Aquaforest PDF",
    "version": "1.0"
  },
  "parameters": {},
  "paths": {
    "/ExtractPageByBarcode": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Extract PDF files based on barcode matches defined by the user. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Extract-by-barcode",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "extractBarcode",
            "schema": {
              "$ref": "#/definitions/ExtractBarcode"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Barcode Results",
            "schema": {
              "$ref": "#/definitions/ApiExtractPost200ApplicationJsonResponse"
            }
          }
        },
        "summary": "Extract PDF pages by barcode"
      }
    },
    "/ExtractPageByText": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Extract PDF files based on text matches defined by the user. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Extract-by-text",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "extractText",
            "schema": {
              "$ref": "#/definitions/ExtractText"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Extract PDF  files",
            "schema": {
              "$ref": "#/definitions/ApiExtractPost200ApplicationJsonResponse"
            }
          }
        },
        "summary": "Extract PDF pages by text"
      }
    },
    "/GetBarcodeValue": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Barcode From PDF. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Get-barcode-value",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "getBarcode",
            "schema": {
              "$ref": "#/definitions/GetBarcode"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Barcode Results",
            "schema": {
              "$ref": "#/definitions/ApiRenameByBarcodePost200ApplicationJsonResponse"
            }
          }
        },
        "summary": "Get barcode value"
      }
    },
    "/GetPDFInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets the information about a PDF file",
        "operationId": "Get-pdf-information",
        "parameters": [
          {
            "in": "body",
            "name": "getPDFInfoRequest",
            "schema": {
              "$ref": "#/definitions/GetPDFInfoRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "PDF Information Results",
            "schema": {
              "$ref": "#/definitions/GetPDFInfoResponse"
            }
          }
        },
        "summary": "Get PDF properties"
      }
    },
    "/GetPageData": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This action will extract important data from PDF files in the form of Key/Value pairs.",
        "operationId": "Get-data-from-pdf",
        "parameters": [
          {
            "in": "body",
            "name": "getDataFromPDFRequest",
            "schema": {
              "$ref": "#/definitions/GetDataFromPDFRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data Results",
            "schema": {
              "$ref": "#/definitions/GetPDFDataDynamicResponseSchema"
            }
          }
        },
        "summary": "Get data from PDF"
      }
    },
    "/GetResponseSchema": {
      "get": {
        "description": "Gets the schema of the selected list",
        "operationId": "GetDataSchema",
        "parameters": [
          {
            "in": "query",
            "name": "expectedKeys",
            "type": "string"
          },
          {
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get's the item schema of the selected list",
        "x-ms-visibility": "internal"
      }
    },
    "/GetTextValue": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Text From PDF files based on the text location and regular expressions. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Get-text-value",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "getText",
            "schema": {
              "$ref": "#/definitions/GetText"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Barcode Results",
            "schema": {
              "$ref": "#/definitions/ApiGetTextValueJsonResponse"
            }
          }
        },
        "summary": "Get text from PDF"
      }
    },
    "/OcrFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Generate searchable PDF from an image PDF or scanned images. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Ocr-file-to-pdf",
        "parameters": [
          {
            "description": "The source document on which OCR is to be performed",
            "in": "body",
            "name": "ocr_data",
            "schema": {
              "$ref": "#/definitions/ocr_data"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ocr_response"
            }
          }
        },
        "summary": "OCR PDF or images"
      }
    },
    "/SplitByBarcode": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Splits PDF files based on barcode matches defined by the user. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Split-by-barcode",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "splitBarcode",
            "schema": {
              "$ref": "#/definitions/SplitBarcode"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Barcode Results",
            "schema": {
              "$ref": "#/definitions/ApiSplitPost200ApplicationJsonResponse"
            }
          }
        },
        "summary": "Split PDF by barcode"
      }
    },
    "/SplitByText": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Splits PDF files based on text matches defined by the user. Visit https://www.aquaforest.com/en/aquaforest-flow-doc.asp for more information.",
        "operationId": "Split-by-text",
        "parameters": [
          {
            "description": "Input Parameters",
            "in": "body",
            "name": "splitText",
            "schema": {
              "$ref": "#/definitions/SplitText"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Split PDF files",
            "schema": {
              "$ref": "#/definitions/ApiSplitPost200ApplicationJsonResponse"
            }
          }
        },
        "summary": "Split PDF by text match"
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": []
}