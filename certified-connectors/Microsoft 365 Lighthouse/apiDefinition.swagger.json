{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft 365 Lighthouse",
    "version": "1.0",
    "description": "Microsoft 365 Lighthouse is an admin portal that lets Managed Service Providers (MSPs) remotely manage multiple customer tenants. It helps MSPs secure and manage devices, data, and users at scale for small- and medium-sized business (SMB) customers who are using Microsoft 365 Business Premium.",
    "contact": {
      "name": "Microsoft Support",
      "url": "https://support.microsoft.com",
      "email": "support@microsoft.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },

  "host": "graph.microsoft.com",
  "basePath": "/beta/",
  "schemes": ["https"],
  "paths": {
    "/tenantRelationships/managedTenants/aggregatedPolicyCompliances": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Aggregated Policy Compliances",
        "description": "Get a list of aggregated Policy Compliances and their properties.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/managedtenants-managedtenant-list-aggregatedpolicycompliances?view=graph-rest-1.0"
        },
        "operationId": "ListAggregatedPolicyCompliances",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of aggregatedPolicyCompliance",
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },

                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "compliancePolicyId": {
                        "description": "Identifier for the device compliance policy. Optional. Read-only.",
                        "type": "string"
                      },
                      "compliancePolicyName": {
                        "description": "Name of the device compliance policy. Optional. Read-only.",
                        "type": "string"
                      },
                      "compliancePolicyPlatform": {
                        "description": "Platform for the device compliance policy. Possible values are: android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, androidAOSP, all. Optional. Read-only.",
                        "type": "string"
                      },
                      "compliancePolicyType": {
                        "description": "The type of compliance policy. Optional. Read-only.",
                        "type": "string"
                      },
                      "lastRefreshedDateTime": {
                        "format": "date-time",
                        "description": "Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "numberOfCompliantDevices": {
                        "format": "int64",
                        "description": "The number of devices that are in a compliant status. Optional. Read-only.",
                        "type": "integer"
                      },
                      "numberOfErrorDevices": {
                        "format": "int64",
                        "description": "The number of devices that are in an error status. Optional. Read-only.",
                        "type": "integer"
                      },
                      "numberOfNonCompliantDevices": {
                        "format": "int64",
                        "description": "The number of device that are in a non-compliant status. Optional. Read-only.",
                        "type": "integer"
                      },
                      "policyModifiedDateTime": {
                        "format": "date-time",
                        "description": "The date and time the device policy was last modified. Optional. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "tenantDisplayName": {
                        "description": "The display name for the managed tenant. Optional. Read-only.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },

        "x-ms-docs-operation-type": "operation",
        "x-ms-visibility": "important",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/managedTenantAlerts": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Alerts",
        "description": "Get a list of alerts.",
        "operationId": "ListManagedTenantAlerts",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of managedTenantAlert",
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alertData": {},
                      "alertDataReferenceStrings": {
                        "type": "array",
                        "items": {
                          "title": "alertDataReferenceString",
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alertRuleDisplayName": {
                        "type": "string"
                      },
                      "assignedToUserId": {
                        "type": "string"
                      },
                      "correlationCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "correlationId": {
                        "type": "string"
                      },
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "severity": {},
                      "status": {},
                      "tenantId": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },

                      "alertLogs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for an entity. Read-only.",
                              "type": "string"
                            },
                            "content": {},
                            "createdByUserId": {
                              "type": "string"
                            },
                            "createdDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "lastActionByUserId": {
                              "type": "string"
                            },
                            "lastActionDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "alert": {
                              "x-ms-navigationProperty": true
                            }
                          }
                        },
                        "x-ms-navigationProperty": true
                      },

                      "alertRule": {
                        "x-ms-navigationProperty": true
                      },

                      "apiNotifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for an entity. Read-only.",
                              "type": "string"
                            },
                            "createdByUserId": {
                              "type": "string"
                            },
                            "createdDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "isAcknowledged": {
                              "type": "boolean"
                            },
                            "lastActionByUserId": {
                              "type": "string"
                            },
                            "lastActionDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "alert": {
                              "x-ms-navigationProperty": true
                            }
                          }
                        },
                        "x-ms-navigationProperty": true
                      },

                      "emailNotifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for an entity. Read-only.",
                              "type": "string"
                            },
                            "createdByUserId": {
                              "type": "string"
                            },
                            "createdDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "emailAddresses": {
                              "type": "array",
                              "items": {
                                "title": "email",
                                "type": "object",
                                "properties": {
                                  "emailAddress": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "emailBody": {
                              "type": "string"
                            },
                            "lastActionByUserId": {
                              "type": "string"
                            },
                            "lastActionDateTime": {
                              "format": "date-time",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "alert": {
                              "x-ms-navigationProperty": true
                            }
                          }
                        },
                        "x-ms-navigationProperty": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },
        "x-ms-docs-operation-type": "operation",
        "x-ms-visibility": "important",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/managedTenantAlertLogs": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Alert Logs",
        "description": "Get a list of all Tenant Alert Logs.",
        "operationId": "ListManagedTenantAlertLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of managedTenantAlertLog",
              "type": "object",

              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },

                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "content": {},
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "alert": {
                        "x-ms-navigationProperty": true
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },

        "x-ms-docs-operation-type": "operation",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-visibility": "important"
      }
    },
    "/tenantRelationships/managedTenants/managementTemplateCollectionTenantSummaries": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Baseline Summaries",
        "description": "Get management Template Collection Tenant Summaries.",
        "operationId": "ListManagementTemplateCollectionTenantSummaries",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of managementTemplateCollectionTenantSummary",
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "completeStepsCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "completeUsersCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "dismissedStepsCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "excludedUsersCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "excludedUsersDistinctCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "incompleteStepsCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "incompleteUsersCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "ineligibleStepsCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "isComplete": {
                        "type": "boolean"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "managementTemplateCollectionDisplayName": {
                        "type": "string"
                      },
                      "managementTemplateCollectionId": {
                        "type": "string"
                      },
                      "regressedStepsCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "regressedUsersCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "unlicensedUsersCount": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },

        "x-ms-docs-operation-type": "operation",
        "x-ms-visibility": "important",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/tenants": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Tenants",
        "description": "Get a list of the tenants and their properties.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/managedtenants-managedtenant-list-tenants?view=graph-rest-1.0"
        },
        "operationId": "ListTenants",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of tenant",
              "type": "object",

              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },

                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "contract": {
                        "description": "The relationship details for the tenant with the managing entity."
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "description": "The date and time the tenant was created in the multi-tenant management platform. Optional. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The display name for the tenant. Required. Read-only.",
                        "type": "string"
                      },
                      "lastUpdatedDateTime": {
                        "format": "date-time",
                        "description": "The date and time the tenant was last updated within the multi-tenant management platform. Optional. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.",
                        "type": "string"
                      },
                      "tenantStatusInformation": {
                        "description": "The onboarding status information for the tenant. Optional. Read-only."
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },
        "x-ms-docs-operation-type": "operation",
        "x-ms-visibility": "important",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/tenantsDetailedInformation": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Tenant Details",
        "description": "Get a list of tenants and their detailed information.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/managedtenants-managedtenant-list-tenantsdetailedinformation?view=graph-rest-1.0"
        },
        "operationId": "ListTenantsDetailedInformation",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Retrieved collection",

            "schema": {
              "title": "Collection of tenantDetailedInformation",
              "type": "object",

              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },

                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "city": {
                        "description": "The city where the managed tenant is located. Optional. Read-only.",
                        "type": "string"
                      },
                      "countryCode": {
                        "description": "The code for the country where the managed tenant is located. Optional. Read-only.",
                        "type": "string"
                      },
                      "countryName": {
                        "description": "The name for the country where the managed tenant is located. Optional. Read-only.",
                        "type": "string"
                      },
                      "defaultDomainName": {
                        "description": "The default domain name for the managed tenant. Optional. Read-only.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The display name for the managed tenant.",
                        "type": "string"
                      },
                      "industryName": {
                        "description": "The business industry associated with the managed tenant. Optional. Read-only.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region where the managed tenant is located. Optional. Read-only.",
                        "type": "string"
                      },
                      "segmentName": {
                        "description": "The business segment associated with the managed tenant. Optional. Read-only.",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The Microsoft Entra tenant identifier for the managed tenant.",
                        "type": "string"
                      },
                      "verticalName": {
                        "description": "The vertical associated with the managed tenant. Optional. Read-only.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },

        "x-ms-docs-operation-type": "operation",
        "x-ms-visibility": "important",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/tenantUsage": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "List Tenant Usage",
        "description": "Get a list of service usages for each tenant.",
        "operationId": "ListTenantUsage",
        "x-ms-visibility": "important",
        "parameters": []
      }
    },
    "/tenantRelationships/managedTenants/managementTemplateStepTenantSummaries": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListManagementTemplateStepTenantSummaries",
        "summary": "List Baseline Task Summaries",
        "description": "Get a list of the tasks for each baseline."
      }
    },
    "/tenantRelationships/managedTenants/cloudPcConnections": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "ListCloudPcConnections",
        "summary": "List Cloud PC Connections",
        "description": "Get a list of all the Cloud PC connections.",
        "parameters": []
      }
    },
    "/tenantRelationships/managedTenants/cloudPcDevices": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "ListCloudPcDevices",
        "summary": "List Cloud PC Devices",
        "description": "Get a list of all Cloud PC devices.",
        "parameters": []
      }
    },
    "/tenantRelationships/managedTenants/conditionalAccessPolicyCoverages": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "ListConditionalAccessPolicyCoverages",
        "parameters": [],
        "summary": "List Conditional Access Policy Coverages",
        "description": "Get a list of all conditional access policy coverages."
      }
    },
    "/tenantRelationships/managedTenants/credentialUserRegistrationsSummaries": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "ListCredentialUserRegistrationsSummaries",
        "parameters": [],
        "summary": "List Credential User Registrations Summaries",
        "description": "Get a summary of all user registrations."
      }
    },
    "/tenantRelationships/managedTenants/deviceCompliancePolicySettingStateSummaries": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListDeviceCompliancePolicySettingStateSummaries",
        "summary": "List Device Compliance Summaries",
        "description": "Get a list of all Device Compliance Policy Setting State Summaries."
      }
    },
    "/tenantRelationships/managedTenants/managedDeviceCompliances": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListManagedDeviceCompliances",
        "summary": "List Device Compliances",
        "description": "Get a list of all Managed Device Compliances."
      }
    },
    "/tenantRelationships/managedTenants/managementActions": {},
    "/tenantRelationships/managedTenants/managementActionTenantDeploymentStatuses": {},
    "/tenantRelationships/managedTenants/myRoles": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListMyRoles",
        "summary": "List My Roles",
        "description": "Get a list of my roles."
      }
    },
    "/tenantRelationships/managedTenants/tenantsCustomizedInformation": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListTenantsCustomizedInformation",
        "summary": "List Tenants Customized Information",
        "description": "Get a list of all customized information regarding my Tenants."
      }
    },
    "/tenantRelationships/managedTenants/tenantTags": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "summary": "List Tenant Tags",
        "description": "Get a list of all the tenant tags in my account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/managedtenants-managedtenant-list-tenanttags?view=graph-rest-1.0"
        },
        "operationId": "ListTenantTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Show only the first n items",
            "x-ms-summary": "Top",
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "Enter the skip token obtained from a previous run to list rows from the next page",
            "x-ms-summary": "Skip token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$search",
            "description": "Search items by search phrases",
            "x-ms-summary": "Search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Filter items by property values",
            "x-ms-summary": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Include count of items",
            "x-ms-summary": "Count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "x-ms-summary": "Order by",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "x-ms-summary": "Select",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "x-ms-summary": "Expand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Retrieved collection",
            "schema": {
              "title": "Collection of tenantTag",
              "type": "object",

              "properties": {
                "@odata.context": {
                  "type": "string",
                  "description": "The OData context.",
                  "title": "OData context",
                  "x-ms-visibility": "internal"
                },
                "@odata.nextLink": {
                  "type": "string",
                  "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
                  "title": "OData NextLink",
                  "x-ms-visibility": "advanced"
                },

                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "createdByUserId": {
                        "description": "The identifier for the account that created the tenant tag. Required. Read-only.",
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "description": "The date and time when the tenant tag was created. Required. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "deletedDateTime": {
                        "format": "date-time",
                        "description": "The date and time when the tenant tag was deleted. Required. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description for the tenant tag. Optional. Read-only.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The display name for the tenant tag. Required. Read-only.",
                        "type": "string"
                      },
                      "lastActionByUserId": {
                        "description": "The identifier for the account that lasted on the tenant tag. Optional. Read-only.",
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "description": "The date and time the last action was performed against the tenant tag. Optional. Read-only.",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "tenants": {
                        "description": "The collection of managed tenants associated with the tenant tag. Optional.",
                        "type": "array",
                        "items": {
                          "title": "tenantInfo",
                          "type": "object",
                          "properties": {
                            "tenantId": {
                              "description": "The Microsoft Entra tenant identifier for the managed tenant. Optional.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error"
          }
        },

        "x-ms-docs-operation-type": "operation",
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tenantRelationships/managedTenants/windowsDeviceMalwareStates": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListWindowsDeviceMalwareStates",
        "summary": "List Windows Device Malware States",
        "description": "Get a list of all the Windows devices malware states."
      }
    },
    "/tenantRelationships/managedTenants/windowsProtectionStates": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListWindowsProtectionStates",
        "summary": "List Windows Protection States",
        "description": "Get a list of all Windows protection states."
      }
    },
    "/tenantRelationships/managedTenants/deviceAppPerformances": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListDeviceAppPerformances",
        "summary": "List Device App Performances",
        "description": "Get a list of all devices' app performances."
      }
    },
    "/tenantRelationships/managedTenants/appPerformances": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListAppPerformances",
        "summary": "List App Performances",
        "description": "Get a list of all app performances."
      }
    },
    "/tenantRelationships/managedTenants/deviceHealthStatuses": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListDeviceHealthStatuses",
        "summary": "List Device Health Statuses",
        "description": "Get a list of all device health statuses."
      }
    },
    "/tenantRelationships/managedTenants/managementTemplateSteps": {
      "get": {
        "tags": ["tenantRelationships.managedTenant"],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "parameters": [],
        "operationId": "ListManagementTemplateSteps",
        "summary": "List Management Template Steps",
        "description": "Get a list of all management template steps."
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.microsoft.com"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.privacy.microsoft.com"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Business Intelligence"
    }
  ],
  "parameters": {
    "top": {
      "in": "query",
      "name": "$top",
      "x-ms-summary": "Top",
      "description": "Show only the first n items",
      "type": "integer",
      "minimum": 0
    },
    "skiptoken": {
      "in": "query",
      "name": "$skiptoken",
      "x-ms-summary": "Skip Token",
      "description": "Enter the skip token obtained from a previous run to list rows from the next page",
      "type": "string"
    },
    "search": {
      "in": "query",
      "name": "$search",
      "x-ms-summary": "Search",
      "description": "Search items by search phrases",
      "type": "string"
    },
    "filter": {
      "in": "query",
      "name": "$filter",
      "x-ms-summary": "Filter",
      "description": "Filter items by property values",
      "type": "string"
    },
    "count": {
      "in": "query",
      "name": "$count",
      "x-ms-summary": "Count",
      "description": "Include count of items",
      "type": "boolean"
    }
  },
  "responses": {
    "microsoft.graph.managedTenants.aggregatedPolicyComplianceCollectionResponse": {
      "description": "Retrieved collection",
      "schema": {
        "title": "Collection of aggregatedPolicyCompliance",
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "The OData context.",
            "title": "OData context",
            "x-ms-visibility": "internal"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
            "title": "OData NextLink",
            "x-ms-visibility": "advanced"
          },

          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "compliancePolicyId": {
                  "description": "Identifier for the device compliance policy. Optional. Read-only.",
                  "type": "string"
                },
                "compliancePolicyName": {
                  "description": "Name of the device compliance policy. Optional. Read-only.",
                  "type": "string"
                },
                "compliancePolicyPlatform": {
                  "description": "Platform for the device compliance policy. Possible values are: android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, androidAOSP, all. Optional. Read-only.",
                  "type": "string"
                },
                "compliancePolicyType": {
                  "description": "The type of compliance policy. Optional. Read-only.",
                  "type": "string"
                },
                "lastRefreshedDateTime": {
                  "format": "date-time",
                  "description": "Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "numberOfCompliantDevices": {
                  "format": "int64",
                  "description": "The number of devices that are in a compliant status. Optional. Read-only.",
                  "type": "integer"
                },
                "numberOfErrorDevices": {
                  "format": "int64",
                  "description": "The number of devices that are in an error status. Optional. Read-only.",
                  "type": "integer"
                },
                "numberOfNonCompliantDevices": {
                  "format": "int64",
                  "description": "The number of device that are in a non-compliant status. Optional. Read-only.",
                  "type": "integer"
                },
                "policyModifiedDateTime": {
                  "format": "date-time",
                  "description": "The date and time the device policy was last modified. Optional. Read-only.",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "tenantDisplayName": {
                  "description": "The display name for the managed tenant. Optional. Read-only.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },

    "error": {
      "description": "error",
      "schema": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "required": ["code", "message"],
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string",
                "x-ms-primary-error-message": true
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "required": ["code", "message"],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innerError": {
                "description": "The structure of this object is service-specific",
                "type": "object"
              }
            }
          }
        }
      }
    },

    "microsoft.graph.managedTenants.managedTenantAlertCollectionResponse": {
      "description": "Retrieved collection",
      "schema": {
        "title": "Collection of managedTenantAlert",
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "The OData context.",
            "title": "OData context",
            "x-ms-visibility": "internal"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
            "title": "OData NextLink",
            "x-ms-visibility": "advanced"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "alertData": {},
                "alertDataReferenceStrings": {
                  "type": "array",
                  "items": {
                    "title": "alertDataReferenceString",
                    "type": "object",
                    "properties": {
                      "displayName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "alertRuleDisplayName": {
                  "type": "string"
                },
                "assignedToUserId": {
                  "type": "string"
                },
                "correlationCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "correlationId": {
                  "type": "string"
                },
                "createdByUserId": {
                  "type": "string"
                },
                "createdDateTime": {
                  "format": "date-time",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "lastActionByUserId": {
                  "type": "string"
                },
                "lastActionDateTime": {
                  "format": "date-time",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "severity": {},
                "status": {},
                "tenantId": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },

                "alertLogs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "content": {},
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "alert": {
                        "x-ms-navigationProperty": true
                      }
                    }
                  },
                  "x-ms-navigationProperty": true
                },

                "alertRule": {
                  "x-ms-navigationProperty": true
                },

                "apiNotifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "isAcknowledged": {
                        "type": "boolean"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "alert": {
                        "x-ms-navigationProperty": true
                      }
                    }
                  },
                  "x-ms-navigationProperty": true
                },

                "emailNotifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for an entity. Read-only.",
                        "type": "string"
                      },
                      "createdByUserId": {
                        "type": "string"
                      },
                      "createdDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "emailAddresses": {
                        "type": "array",
                        "items": {
                          "title": "email",
                          "type": "object",
                          "properties": {
                            "emailAddress": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "emailBody": {
                        "type": "string"
                      },
                      "lastActionByUserId": {
                        "type": "string"
                      },
                      "lastActionDateTime": {
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "alert": {
                        "x-ms-navigationProperty": true
                      }
                    }
                  },
                  "x-ms-navigationProperty": true
                }
              }
            }
          }
        }
      }
    },

    "microsoft.graph.managedTenants.managementTemplateCollectionTenantSummaryCollectionResponse": {
      "description": "Retrieved collection",
      "schema": {
        "title": "Collection of managementTemplateCollectionTenantSummary",
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "The OData context.",
            "title": "OData context",
            "x-ms-visibility": "internal"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
            "title": "OData NextLink",
            "x-ms-visibility": "advanced"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The unique identifier for an entity. Read-only.",
                  "type": "string"
                },
                "completeStepsCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "completeUsersCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "createdByUserId": {
                  "type": "string"
                },
                "createdDateTime": {
                  "format": "date-time",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "dismissedStepsCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "excludedUsersCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "excludedUsersDistinctCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "incompleteStepsCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "incompleteUsersCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "ineligibleStepsCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "isComplete": {
                  "type": "boolean"
                },
                "lastActionByUserId": {
                  "type": "string"
                },
                "lastActionDateTime": {
                  "format": "date-time",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "managementTemplateCollectionDisplayName": {
                  "type": "string"
                },
                "managementTemplateCollectionId": {
                  "type": "string"
                },
                "regressedStepsCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "regressedUsersCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "tenantId": {
                  "type": "string"
                },
                "unlicensedUsersCount": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "microsoft.graph.managedTenants.tenantCollectionResponse": {
      "description": "Retrieved collection",

      "schema": {
        "title": "Collection of tenant",
        "type": "object",

        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "The OData context.",
            "title": "OData context",
            "x-ms-visibility": "internal"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
            "title": "OData NextLink",
            "x-ms-visibility": "advanced"
          },

          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The unique identifier for an entity. Read-only.",
                  "type": "string"
                },
                "contract": {
                  "description": "The relationship details for the tenant with the managing entity."
                },
                "createdDateTime": {
                  "format": "date-time",
                  "description": "The date and time the tenant was created in the multi-tenant management platform. Optional. Read-only.",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "displayName": {
                  "description": "The display name for the tenant. Required. Read-only.",
                  "type": "string"
                },
                "lastUpdatedDateTime": {
                  "format": "date-time",
                  "description": "The date and time the tenant was last updated within the multi-tenant management platform. Optional. Read-only.",
                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.",
                  "type": "string"
                },
                "tenantStatusInformation": {
                  "description": "The onboarding status information for the tenant. Optional. Read-only."
                }
              }
            }
          }
        }
      }
    },
    "microsoft.graph.managedTenants.tenantDetailedInformationCollectionResponse": {
      "description": "Retrieved collection",

      "schema": {
        "title": "Collection of tenantDetailedInformation",
        "type": "object",

        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "The OData context.",
            "title": "OData context",
            "x-ms-visibility": "internal"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Only used in Power Apps Canvas to generate the `$skipToken` for pagination. Power Automate and Logic Apps must use the pagination setting.",
            "title": "OData NextLink",
            "x-ms-visibility": "advanced"
          },

          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The unique identifier for an entity. Read-only.",
                  "type": "string"
                },
                "city": {
                  "description": "The city where the managed tenant is located. Optional. Read-only.",
                  "type": "string"
                },
                "countryCode": {
                  "description": "The code for the country where the managed tenant is located. Optional. Read-only.",
                  "type": "string"
                },
                "countryName": {
                  "description": "The name for the country where the managed tenant is located. Optional. Read-only.",
                  "type": "string"
                },
                "defaultDomainName": {
                  "description": "The default domain name for the managed tenant. Optional. Read-only.",
                  "type": "string"
                },
                "displayName": {
                  "description": "The display name for the managed tenant.",
                  "type": "string"
                },
                "industryName": {
                  "description": "The business industry associated with the managed tenant. Optional. Read-only.",
                  "type": "string"
                },
                "region": {
                  "description": "The region where the managed tenant is located. Optional. Read-only.",
                  "type": "string"
                },
                "segmentName": {
                  "description": "The business segment associated with the managed tenant. Optional. Read-only.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Microsoft Entra tenant identifier for the managed tenant.",
                  "type": "string"
                },
                "verticalName": {
                  "description": "The vertical associated with the managed tenant. Optional. Read-only.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "azureaadv2": {
      "type": "oauth2",
      "flow": "accessCode",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {},
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize"
    }
  },
  "security": [
    {
      "azureaadv2": []
    }
  ]
}
