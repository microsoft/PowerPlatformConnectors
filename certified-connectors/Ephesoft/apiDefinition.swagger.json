{
  "swagger": "2.0",
  "info": {
    "title": "Ephesoft Semantik For Invoices",
    "description": "The Ephesoft Semantik for Invoices connector helps organizations extract critical invoice data using cutting edge AI models to automate accounts payable processing.  Semantik Invoice is a point solution that can speed up your invoice processing, reduce compliance errors, and free up your staff to work on more business critical items.",
    "version": "2.1",
    "contact": {
      "name": "Ephesoft Semantik Support",
      "url": "https://docs.ephesoft.net",
      "email": "tickets@ephesoft.com"
    }
  },
  "host": "api.us.ephesoft.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://ephesoft.com/products/semantik-invoice/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://ephesoft.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Finance;Productivity"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/settings/integrations/configurations": {
      "x-ms-notification-content": {
        "description": "Webhook Response",
        "schema": {
          "$ref": "#/definitions/WebhookResponse"
        },
        "parameters": {},
        "responses": {}
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UploadCreatedResponse"
            }
          }
        },
        "summary": "When a Semantik invoice has completed review",
        "description": "Triggers a flow using data from a completed Semantik invoice.",
        "operationId": "TrigSemantikInvoiceCompleted",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "x-ms-summary": "Webhook Settings",
            "description": "Defines the settings for the webhook created in Semantik.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreateRequestBody"
            }
          }
        ]
      }
    },
    "/v1/settings/integrations/configurations/{configurationId}": {
      "delete": {
        "summary": "Remove Semantik Webhook",
        "description": "Removes a Semantik webhook",
        "operationId": "DeleteSemantikWebhook",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "x-ms-summary": "Webhook ID",
            "description": "The Identifier for the webhook being deleted.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/documents/uploads": {
      "post": {
        "description": "Starts the document upload process by retrieving a pre-signed URL where you can upload a file for processing.",
        "summary": "Create document upload",
        "operationId": "CreateDocumentUpload",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "fileName": {
                  "type": "string",
                  "x-ms-summary": "File Name",
                  "description": "Name of the file to be uploaded."
                },
                "type": {
                  "type": "string",
                  "x-ms-summary": "Type",
                  "description": "Type of Semantik upload",
                  "default": "invoice",
                  "enum": ["invoice"]
                }
              },
              "required": [
                "fileName",
                "type"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "upload": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "x-ms-summary": "Upload Id",
                          "description": "The unique identifier for this upload."
                        },
                        "status": {
                          "type": "string",
                          "x-ms-summary": "Upload Status",
                          "description": "The current status of the upload."
                        },
                        "url": {
                          "type": "string",
                          "x-ms-summary": "Upload URL",
                          "description": "The pre-signed URL to upload the document."
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/documents/uploads/{uploadId}": {
      "patch": {
        "description": "Updates a document upload in Semantik.  Marking an upload 'Completed' will start document processing in Semantik.",
        "summary": "Update document upload",
        "operationId": "UpdateDocumentUpload",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uploadId",
            "in": "path",
            "x-ms-summary": "Upload Id",
            "description": "The unique identifier for the upload to be updated.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "x-ms-summary": "Status",
                  "description": "The status to set on the upload.",
                  "title": "Status",
                  "enum": ["completed", "cancelled"],
                  "default": "completed"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "upload": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "x-ms-summary": "Upload Id",
                          "description": "The unique identifier for the upload."
                        },
                        "status": {
                          "type": "string",
                          "x-ms-summary": "Status",
                          "description": "The current status of the upload."
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/vendors/uploads": {
      "post": {
        "description": "Starts the vendor upload process by retrieving a pre-signed URL where you can upload a file for processing.",
        "summary": "Create vendor upload",
        "operationId": "CreateVendorUpload",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "fileName": {
                  "type": "string",
                  "x-ms-summary": "File Name",
                  "description": "Name of the file to be uploaded."
                }
              },
              "required": [
                "fileName"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UploadCreatedResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/vendors/uploads/{uploadId}": {
      "patch": {
        "description": "Updates a vendor upload in Semantik.  Marking an upload 'Completed' will begin ingesting the vendor records into the Semantik system.",
        "summary": "Update vendor upload",
        "operationId": "UpdateVendorUpload",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uploadId",
            "in": "path",
            "x-ms-summary": "Upload Id",
            "description": "The unique identifier for the upload to be updated.",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "x-ms-summary": "Status",
                  "description": "The status to set on the upload.",
                  "title": "Status",
                  "enum": ["completed"],
                  "default": "completed"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VendorUploadUpdateResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/VendorUploadUpdateResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WebhookCreateRequestBody": {
      "type": "object",
      "properties": {
        "integrationName": {
          "type": "string",
          "description": "The name for the webhook as it will appear in Semantik.",
          "title": "Webhook Name",
          "default": "Microsoft Power Platform",
          "x-ms-visibility": "advanced"
        },
        "integrationType": {
          "type": "string",
          "description": "Specifies that this Semantik integration is a generic webhook.",
          "title": "Integration Type",
          "default": "webhook",
          "x-ms-visibility": "internal"
        },
        "enabled": {
          "type": "boolean",
          "description": "Defines wether the webhook is enabled when created.",
          "title": "Enabled",
          "enum": [
            true,
            false
          ],
          "default": true,
          "x-ms-visibility": "internal"
        },
        "settings": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "description": "Configures the data sent when the Semantik webhook is triggered.",
              "title": "Payload",
              "x-ms-visibility": "internal",
              "default": "{\n     \"AmountDue\": \"$AmountDue\",\n     \"DocumentId\": \"$DocumentId\",\n     \"DueDate\": \"$DueDate\",\n     \"FileName\": \"$FileName\",\n     \"IngestionId\": \"$IngestionId\",\n     \"InvoiceDate\": \"$InvoiceDate\",\n     \"InvoiceNumber\": \"$InvoiceNumber\",\n     \"Memo\": \"$Memo\",\n     \"OrderDate\": \"$OrderDate\",\n     \"PdfUrl\": \"$PdfUrl\",\n     \"PONumber\": \"$PONumber\",\n     \"ReviewedBy\": \"$ReviewedBy\",\n     \"ServiceEndDate\": \"$ServiceEndDate\",\n     \"ServiceStartDate\": \"$ServiceStartDate\",\n     \"ShipDate\": \"$ShipDate\",\n     \"ShipFreight\": \"$ShipFreight\",\n     \"SubTotal\": \"$SubTotal\",\n     \"TableUrl\": \"$TableUrl\",\n     \"TaxAmount\": \"$TaxAmount\",\n     \"TaxRate\": \"$TaxRate\",\n     \"TenantId\": \"$TenantId\",\n     \"Terms\": \"$Terms\",\n     \"TotalAmount\": \"$TotalAmount\",\n     \"Vendor\": {\n          \"VendorAddress\": {\n               \"VendorCountry\": \"$Vendor:Country\",\n               \"VendorLocality\": \"$Vendor:Locality\",\n               \"VendorPOBox\": \"$Vendor:POBox\",\n               \"VendorPostalCode\": \"$Vendor:PostalCode\",\n               \"VendorRegion\": \"$Vendor:Region\",\n               \"VendorStreetAddress\": \"$Vendor:StreetAddress\"\n          },\n          \"VendorApprover\": \"$Vendor:Approver\",\n          \"VendorCustom1\": \"$Vendor:Custom1\",\n          \"VendorCustom2\": \"$Vendor:Custom2\",\n          \"VendorCustom3\": \"$Vendor:Custom3\",\n          \"VendorCustom4\": \"$Vendor:Custom4\",\n          \"VendorCustom5\": \"$Vendor:Custom5\",\n          \"VendorCustomerId\": \"$Vendor:CustomerId\",\n          \"VendorDepartment\": \"$Vendor:Department\",\n          \"VendorGLCode\": \"$Vendor:GLCode\",\n          \"VendorIBAN\": \"$Vendor:IBAN\",\n          \"VendorId\": \"$Vendor:VendorId\",\n          \"VendorMatched\": \"$Vendor:Matched\",\n          \"VendorMemo\": \"$Vendor:Memo\",\n          \"VendorName\": \"$Vendor:Name\",\n          \"VendorStatus\": \"$Vendor:Status\",\n          \"VendorSWIFT\": \"$Vendor:SWIFT\",\n          \"VendorTaxId\": \"$Vendor:TaxId\",\n          \"VendorTelephone\": \"$Vendor:Telephone\"\n     }\n}"
            },
            "targetUrl": {
              "type": "string",
              "description": "The URL called when the Semantik webhook is triggered.",
              "x-ms-visibility": "internal",
              "x-ms-notification-url": true,
              "title": "Target URL"
            },
            "encoding": {
              "type": "string",
              "description": "Specifies the encoding type for the post sent when the webhook is triggered in Semantik.",
              "title": "Encoding",
              "default": "application/json",
              "x-ms-visibility": "internal"
            }
          },
          "description": "settings",
          "required": [
            "targetUrl",
            "encoding",
            "payload"
          ]
        }
      },
      "required": [
        "settings",
        "enabled",
        "integrationName",
        "integrationType"
      ]
    },
    "WebhookResponse": {
      "type": "object",
      "properties": {
        "AmountDue": {
          "type": "string",
          "description": "Amount owed to vendor"
        },
        "DocumentId": {
          "type": "string",
          "description": "Unique ID assigned to the invoice by Semantik"
        },
        "DueDate": {
          "type": "string",
          "description": "Date payment is due"
        },
        "FileName": {
          "type": "string",
          "description": "File name of invoice sent to Semantik"
        },
        "IngestionId": {
          "type": "string",
          "description": "Unique ID assigned to the ingestion process for this document"
        },
        "InvoiceDate": {
          "type": "string",
          "description": "Invoice creation date"
        },
        "InvoiceNumber": {
          "type": "string",
          "description": "Vendor-generated invoice number"
        },
        "Memo": {
          "type": "string",
          "description": "Custom message from Semantik reviewer"
        },
        "OrderDate": {
          "type": "string",
          "description": "Date order was placed"
        },
        "PdfUrl": {
          "type": "string",
          "description": "Link to the Semantik processed invoice"
        },
        "PONumber": {
          "type": "string",
          "description": "Purchase order number"
        },
        "ReviewedBy": {
          "type": "string",
          "description": "Email address of user who reviewed the document"
        },
        "ServiceEndDate": {
          "type": "string",
          "description": "End date for service"
        },
        "ServiceStartDate": {
          "type": "string",
          "description": "Start date for service"
        },
        "ShipDate": {
          "type": "string",
          "description": "Date order was shipped"
        },
        "ShipFreight": {
          "type": "string",
          "description": "Charges for shipping, freight, and handling"
        },
        "SubTotal": {
          "type": "string",
          "description": "Total amount of invoice items"
        },
        "TableUrl": {
          "type": "string",
          "description": "Link to extracted invoice line items table"
        },
        "TaxAmount": {
          "type": "string",
          "description": "Amount of tax billed for invoice"
        },
        "TaxRate": {
          "type": "string",
          "description": "Tax percentage applied to invoice"
        },
        "TenantId": {
          "type": "string",
          "description": "Semantik tenant ID"
        },
        "Terms": {
          "type": "string",
          "description": "Payment terms for invoice"
        },
        "TotalAmount": {
          "type": "string",
          "description": "Total invoice amount with surcharges"
        },
        "Vendor": {
          "type": "object",
          "properties": {
            "VendorAddress": {
              "type": "object",
              "properties": {
                "VendorStreetAddress": {
                  "type": "string",
                  "description": "Vendor's street address"
                },
                "VendorPOBox": {
                  "type": "string",
                  "description": "Vendor's post office box number"
                },
                "VendorLocality": {
                  "type": "string",
                  "description": "Vendor's city or locality within a region"
                },
                "VendorRegion": {
                  "type": "string",
                  "description": "Vendor's state or region of locality"
                },
                "VendorPostalCode": {
                  "type": "string",
                  "description": "Vendor's postal code"
                },
                "VendorCountry": {
                  "type": "string",
                  "description": "Vendor's country"
                }
              }
            },
            "VendorApprover": {
              "type": "string",
              "description": "Designated approver for the vendor"
            },
            "VendorCustom1": {
              "type": "string",
              "description": "Vendor custom 1 value"
            },
            "VendorCustom2": {
              "type": "string",
              "description": "Vendor custom 2 value"
            },
            "VendorCustom3": {
              "type": "string",
              "description": "Vendor custom 3 value"
            },
            "VendorCustom4": {
              "type": "string",
              "description": "Vendor custom 4 value"
            },
            "VendorCustom5": {
              "type": "string",
              "description": "Vendor custom 5 value"
            },
            "VendorCustomerId": {
              "type": "string",
              "description": "Vendor-assigned customer ID"
            },
            "VendorDepartment": {
              "type": "string",
              "description": "Department associated with the Vendor"
            },
            "VendorGLCode": {
              "type": "string",
              "description": "General ledger code assigned to vendor"
            },
            "VendorIBAN": {
              "type": "string",
              "description": "Vendor's International Bank Account Number"
            },
            "VendorId": {
              "type": "string",
              "description": "ID assigned to this vendor from vendor list or invoice"
            },
            "VendorMatched": {
              "type": "string",
              "description": "True if vendor matched from vendor list"
            },
            "VendorMemo": {
              "type": "string",
              "description": "Custom message for this vendor"
            },
            "VendorName": {
              "type": "string",
              "description": "Company name of vendor"
            },
            "VendorStatus": {
              "type": "string",
              "description": "Current vendor status"
            },
            "VendorSWIFT": {
              "type": "string",
              "description": "Vendor's SWIFT code"
            },
            "VendorTaxId": {
              "type": "string",
              "description": "Vendor's federal tax ID"
            },
            "VendorTelephone": {
              "type": "string",
              "description": "Vendor's telephone number"
            }
          }
        }
      }
    },
    "UploadCreatedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "upload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-summary": "Upload Id",
                  "description": "The unique identifier for this upload."
                },
                "status": {
                  "type": "string",
                  "x-ms-summary": "Upload Status",
                  "description": "The current status of the upload."
                },
                "url": {
                  "type": "string",
                  "x-ms-summary": "Upload URL",
                  "description": "The pre-signed URL for the upload."
                }
              }
            }
          }
        }
      }
    },
    "VendorUploadUpdateResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "upload": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-summary": "Upload Id",
                  "description": "The unique identifier for the upload."
                },
                "status": {
                  "type": "string",
                  "x-ms-summary": "Status",
                  "description": "The current status of the upload."
                }
              }
            }
          }
        },
        "jobs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Job Id",
                "description": "The unique identifier for the job."
              },
              "subjectType": {
                "type": "string",
                "x-ms-summary": "Job Subject Type",
                "description": "Describes what type of resource the job is for."
              },
              "status": {
                "type": "string",
                "x-ms-summary": "Job Subject Id",
                "description": "The unique identifier assigned to the subject type for this job."
              }
            }
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://api.us.ephesoft.io/v1/auth/oauth2/authorize",
      "tokenUrl": "https://api.us.ephesoft.io/v1/auth/oauth2/token",
      "scopes": {
        "admin": "admin"
      }
    },
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "admin"
      ]
    }
  ],
  "tags": []
}