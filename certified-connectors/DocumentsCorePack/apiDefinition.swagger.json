{
  "swagger": "2.0",
  "info": {
    "title": "DocumentsCorePack",
    "description": "DocumentsCorePack is a fast & simple document generation based on Dynamics 365 data. Based on MS Word - templates, DocumentsCorePack provides you with a set of tools to create and process documents effectively. From a document generation wizard that guides users through the process to full document automation - DocumentsCorePack will make your business documents look professional and help you to process them efficiently!",
    "termsOfService": "https://www.mscrm-addons.com/Support/Terms-Conditions",
    "contact": {
      "name": "mscrm-addons.com",
      "url": "https://support.mscrm-addons.com",
      "email": "support@mscrm-addons.com"
    },
    "license": {
      "name": "All rights reserved, copyright by PTM EDV Systeme GmbH @2022",
      "url": "https://www.mscrm-addons.com"
    },
    "version": "2.0"
  },
  "host": "documentapi.mscrm-addons.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/DCP/AttachDocumentJobToEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob to email",
        "description": "Attach the file generated by a DocumentJob as attachment to a Dynamics 365 email",
        "operationId": "AttachDocumentJobToEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "DocumentJob and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "AttachDocumentJobToEmail"
        }
      }
    },
    "/v2/api/DCP/AttachDocumentJobToEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob to email (V2)",
        "description": "Attach the Document Content generated by a DocumentJob as attachment to a Dynamics 365 email",
        "operationId": "AttachDocumentJobToEmailV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "DocumentJob and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToEmailV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "AttachDocumentJobToEmail"
        }
      }
    },
    "/api/DCP/AttachDocumentJobToNote": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob as note",
        "description": "Attach the file generated by a DocumentJob as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachDocumentJobToNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "AttachDocumentJobToNote"
        }
      }
    },
    "/v2/api/DCP/AttachDocumentJobToNote": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob as note (V2)",
        "description": "Attach the Document Content generated by a DocumentJob as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachDocumentJobToNoteV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToNoteV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "AttachDocumentJobToNote"
        }
      }
    },
    "/api/DCP/AttachFileToEmail": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file to email",
        "description": "Attach the base64 encoded file as attachment to a Dynamics 365 email",
        "operationId": "AttachFileToEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "AttachFileToEmail"
        }
      }
    },
    "/v2/api/DCP/AttachFileToEmail": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file to email (V2)",
        "description": "Attach the Document Content or base64 encoded file as attachment to a Dynamics 365 email",
        "operationId": "AttachFileToEmailV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToEmailV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "AttachFileToEmail"
        }
      }
    },
    "/api/DCP/AttachFileToNote": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file as note",
        "description": "Attach the file supplied as base64 string as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachFileToNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "AttachFileToNote"
        }
      }
    },
    "/v2/api/DCP/AttachFileToNote": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file as note (V2)",
        "description": "Attach the Document Content or base64 encoded file as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachFileToNoteV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToNoteV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "AttachFileToNote"
        }
      }
    },
    "/api/DCP/ConcatenateDocumentJobs": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two DocumentJobs",
        "description": "Concatenate two files (pdf,docx) generated by two DocumentJobs",
        "operationId": "ConcatenateDocumentJobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two DocumentJobs to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatDocumentJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "ConcatenateDocumentJobs"
        }
      }
    },
    "/v2/api/DCP/ConcatenateDocumentJobs": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two DocumentJobs (V2)",
        "description": "Concatenate two Document Contents (pdf,docx) generated by two DocumentJobs",
        "operationId": "ConcatenateDocumentJobsV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two DocumentJobs to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatDocumentJobV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "ConcatenateDocumentJobs"
        }
      }
    },
    "/api/DCP/ConcatenateFiles": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two Files (pdf,docx)",
        "description": "Concatenates two supplied files (pdf,docx)",
        "operationId": "ConcatenateFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two files to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "ConcatenateFiles"
        }
      }
    },
    "/v2/api/DCP/ConcatenateFiles": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two Document Contents or base64 encoded files (pdf,docx) (V2)",
        "description": "Concatenates two Document Contents or base64 encoded files (pdf,docx)",
        "operationId": "ConcatenateFilesV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two files to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatFilesV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "ConcatenateFiles"
        }
      }
    },
    "/api/DCP/CreateDocumentJob": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create document (sync)",
        "description": "This function creates a new DocumentJob and waits for the result for up to [TimeOut] seconds",
        "operationId": "CreateDocumentJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateId",
            "description": "Select the template for this DocumentJob",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTemplates",
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name"
            },
            "x-ms-summary": "TemplateId"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetFileTypes",
              "value-path": "value",
              "value-title": "key"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "TimeOut",
            "description": "Max. time to wait for document",
            "type": "integer",
            "format": "int32",
            "default": 120,
            "x-ms-summary": "TimeOut"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Optional, supply Dynamics 365 users domain name or id",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsers",
              "value-path": "systemuserid",
              "value-title": "fullname"
            },
            "x-ms-summary": "UserId"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the DCP printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrinters",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName"
            },
            "x-ms-summary": "DCPPrinterName"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "CreateDocumentJob"
        }
      }
    },
    "/api/DCP/CreateDocumentJobAsync": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create DocumentJob (async)",
        "description": "This function creates a new DocumentJob.. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateId",
            "description": "Select the template for this DocumentJob",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTemplates",
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name"
            },
            "x-ms-summary": "TemplateId"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetFileTypes",
              "value-path": "value",
              "value-title": "key"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Optional, the user to run this operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsers",
              "value-path": "systemuserid",
              "value-title": "fullname"
            },
            "x-ms-summary": "UserId"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrinters",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName"
            },
            "x-ms-summary": "DCPPrinterName"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "CreateDocumentJobAsync"
        }
      }
    },
    "/v2/api/DCP/CreateDocumentJobAsync": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Create DocumentJob (async) (V2)",
        "description": "This function creates a new DocumentJob.. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobAsyncV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "Template",
            "description": "Select the template for this DocumentJob",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTemplatesV2",
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "Template"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetFileTypes",
              "value-path": "value",
              "value-title": "key"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "User",
            "description": "Optional, the user to run this operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "User",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrintersV2",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "DCPPrinterName",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEmailId",
            "description": "Specifies the email to attach the Job to",
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "AttachToEmail",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEntityId",
            "description": "Specifies the entityId to attach the Job to",
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "AttachToEntity",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEntitySchemaName",
            "description": "Specifies the entity schema name to attach the DocumentJob to",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetEntityNamesV2",
              "value-path": "LogicalName",
              "value-title": "DisplayName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "AttachToEntity - SchemaName",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "CreateDocumentJobAsync"
        }
      }
    },
    "/v2/api/DCP/CreateDocumentJob": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Create document (sync) (V2)",
        "description": "This function creates a new DocumentJob and waits for the result",
        "operationId": "CreateDocumentJobV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "Template",
            "description": "Select the template for this DocumentJob",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetAllTemplatesV2",
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "Template"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetFileTypes",
              "value-path": "value",
              "value-title": "key"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "User",
            "description": "Optional, supply Dynamics 365 users domain name or id",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "User",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the DCP printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrintersV2",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "DCPPrinterName",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEmailId",
            "description": "Specifies the email to attach the Job to",
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "AttachToEmail",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEntityId",
            "description": "Specifies the entityId to attach the Job to",
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "AttachToEntity",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "AttachToEntitySchemaName",
            "description": "Specifies the entity schema name to attach the DocumentJob to",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetEntityNamesV2",
              "value-path": "LogicalName",
              "value-title": "DisplayName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "AttachToEntity - SchemaName",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "CreateDocumentJob"
        }
      }
    },
    "/api/DCP/CreateDocumentJobXmlBased": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create DocumentJob based on an XML (sync)",
        "description": "This function creates a new DocumentJob and waits for the result for up to [TimeOut] seconds",
        "operationId": "CreateDocumentJobXmlBased",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "CreateDocumentJobXmlBased"
        }
      }
    },
    "/api/DCP/CreateDocumentJobXmlBasedAsync": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create DocumentJob based on an XML (async)",
        "description": "This function creates a new DocumentJob. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobXmlBasedAsync",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "CreateDocumentJobXmlBasedAsync"
        }
      }
    },
    "/v2/api/DCP/CreateDocumentJobXmlBasedAsync": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Create DocumentJob based on an XML (async) (V2)",
        "description": "This function creates a new DocumentJob. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobXmlBasedAsyncV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequestV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "CreateDocumentJobXmlBasedAsync"
        }
      }
    },
    "/v2/api/DCP/CreateDocumentJobXmlBased": {
      "post": {
        "tags": [
          "DocumentGenerationV2"
        ],
        "summary": "Create document based on an XML (sync) (V2)",
        "description": "This function creates a new DocumentJob and waits for the result",
        "operationId": "CreateDocumentJobXmlBasedV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequestV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "CreateDocumentJobXmlBased"
        }
      }
    },
    "/v2/api/DCP/CreateSharepointFolder": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "CreateSharepointFolder (V2)",
        "description": "This function creates sharepoint folders",
        "operationId": "CreateSharepointFolderV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONCreateSharepointFolders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "CreateSharepointFolder"
        }
      }
    },
    "/api/DCP/DocumentJobResult": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Get DocumentJob Result",
        "description": "Retrieves a DocumentJobs status information. The result will include the result document, if the job is finished",
        "operationId": "DocumentJobResult",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the result of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "DocumentJobResult"
        }
      }
    },
    "/v2/api/DCP/DocumentJobResult": {
      "get": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Get DocumentJob Result (V2)",
        "description": "Retrieves a DocumentJobs status information. The result will include the result document, if the job is finished",
        "operationId": "DocumentJobResultV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the result of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "DocumentJobResult"
        }
      }
    },
    "/api/DCP/DocumentJobStatus": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Get DocumentJob Status",
        "description": "Retrieves the status of a DocumentJob. Dynamics 365 state/statuscode rules apply",
        "operationId": "DocumentJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the status of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AutomergeWorkingItem",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "DocumentJobStatus"
        }
      }
    },
    "/v2/api/DCP/DocumentJobStatus": {
      "get": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Get DocumentJob Status (V2)",
        "description": "Retrieves the status of a DocumentJob. Dynamics 365 state/statuscode rules apply",
        "operationId": "DocumentJobStatusV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the status of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AutomergeWorkingItem",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "DocumentJobStatus"
        }
      }
    },
    "/api/DCP/GetAllTemplates": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Templates",
        "description": "This function returns a list of available DocumentsCorePack Templates",
        "operationId": "GetAllTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "EntityName",
            "description": "Filter by Entity (etc or etn). Optional wildcard *[etn]*",
            "type": "string",
            "x-ms-summary": "EntityName"
          },
          {
            "in": "query",
            "name": "TemplateNameFilter",
            "description": "Filter by template name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "TemplateNameFilter"
          },
          {
            "in": "query",
            "name": "GroupFilter",
            "description": "Filter by group name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "GroupFilter"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsers",
              "value-path": "systemuserid",
              "value-title": "fullname"
            },
            "x-ms-summary": "UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONDCPTemplate"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetAllTemplates": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Templates",
        "description": "This function returns a list of available DocumentsCorePack Templates",
        "operationId": "GetAllTemplatesV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "EntityName",
            "description": "Filter by Entity (etc or etn). Optional wildcard *[etn]*",
            "type": "string",
            "x-ms-summary": "EntityName"
          },
          {
            "in": "query",
            "name": "TemplateNameFilter",
            "description": "Filter by template name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "TemplateNameFilter"
          },
          {
            "in": "query",
            "name": "GroupFilter",
            "description": "Filter by group name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "GroupFilter"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "envId"
                }
              }
            },
            "x-ms-summary": "UserId"
          },
          {
            "in": "query",
            "name": "envId",
            "description": "Specify Environment",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONDCPTemplate"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/v2/api/DCP/GetApiKeyProfiles": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Profiles for a UserAPIKey",
        "description": "This function returns all Profile Ids in Dynamics 365",
        "operationId": "GetApiKeyProfiles",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of Profile Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONEnvironment"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/api/DCP/GetCombineTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP CombineTypes for DocumentConcatenation",
        "description": "This function returns a list of supported CombineTypes for DocumentsCorePack",
        "operationId": "GetCombineTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP CombineTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetConcatenationOutputTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Concatenation ResultTypes",
        "description": "This function returns a list of supported ResultTypes for Concatenation",
        "operationId": "GetConcatenationOutputTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetDCPActions": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Available DCP Actions",
        "description": "This function returns a list of supported actions for DocumentsCorePack",
        "operationId": "GetDCPActions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP Actions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringInt32KeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetDocumentLocations": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get a list of DocumentLocations",
        "description": "list of dynamics users",
        "operationId": "GetDocumentLocations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of dynamics DocumentLocations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONDocumentLocation"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetDocumentLocations": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get a list of DocumentLocations",
        "description": "list of dynamics users",
        "operationId": "GetDocumentLocationsV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "description": "Specify Environment",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of dynamics DocumentLocations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONDocumentLocation"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetEntityNames": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve EntityNames with annotation capability",
        "description": "This function returns a list of all Dynamics 365 entities, that support annotations",
        "operationId": "GetEntityNames",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of note-enabled Entities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONEntityName"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetEntityNames": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve EntityNames with annotation capability",
        "description": "This function returns a list of all Dynamics 365 entities, that support annotations",
        "operationId": "GetEntityNamesV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of note-enabled Entities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONEntityName"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetFileTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP FileTypes",
        "description": "This function returns a list of supported filetype for DocumentsCorePack",
        "operationId": "GetFileTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetOneClickActions": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get OneClickActions",
        "description": "This function returns all OneClickActions in Dynamics 365",
        "operationId": "GetOneClickActionsV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of OneClickActions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONOneClickAction"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetPrinters": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP Printer",
        "description": "Retrieve available printer names, optionally filtered by user",
        "operationId": "GetPrinters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "User",
            "description": "Optional, supply Dynamics 365 users domain name or id",
            "type": "string",
            "default": "",
            "x-ms-summary": "User"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of printers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONPrinterResponse"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetPrinters": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP Printer",
        "description": "Retrieve available printer names, optionally filtered by user",
        "operationId": "GetPrintersV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "description": "Specify Environment",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          },
          {
            "in": "query",
            "name": "User",
            "description": "Optional, supply Dynamics 365 users domain name or id",
            "type": "string",
            "default": "",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "envId"
                }
              }
            },
            "x-ms-summary": "User"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of printers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONPrinterResponse"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/v2/api/DCP/GetSignProviders": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get SignProviders",
        "description": "This function returns all SignProviders known in the AutomergeSolution",
        "operationId": "GetSignProvidersV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of SignProviders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONSignProvider"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/api/DCP/GetSingleTemplate": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Single Template",
        "description": "This function returns the first of the filtered DocumentsCorePack Templates",
        "operationId": "GetSingleTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateNameFilter",
            "description": "Filter by template name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "TemplateNameFilter"
          },
          {
            "in": "query",
            "name": "GroupFilter",
            "description": "Filter by GroupName. Optional wildcard *[group]*",
            "type": "string",
            "x-ms-summary": "GroupFilter"
          },
          {
            "in": "query",
            "name": "EntityName",
            "description": "Filter by Entity (etc or etn). Optional wildcard *[etn]*",
            "type": "string",
            "x-ms-summary": "EntityName"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsers",
              "value-path": "systemuserid",
              "value-title": "fullname"
            },
            "x-ms-summary": "UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single templates",
            "schema": {
              "$ref": "#/definitions/JSONDCPTemplate"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetUsers": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get a list of dynamics users",
        "description": "list of dynamics users",
        "operationId": "GetUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of dynamics users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONSystemUser"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/v2/api/DCP/GetUsers": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get a list of dynamics users",
        "description": "list of dynamics users",
        "operationId": "GetUsersV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "envId",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "envId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of dynamics users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONSystemUser"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/GetXmlBasedFileTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP FileTypes for XmlBased generation",
        "description": "This function returns a list of supported filetype for DocumentsCorePack XmlBased generation",
        "operationId": "GetXmlBasedFileTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes for XmlBased generation and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/DCP/Heartbeat": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Check API Availibility",
        "description": "Verifies, that the API endpoint is currently accessible. Does not require API Key",
        "operationId": "Heartbeat",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns message with timestamp",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "Heartbeat"
        }
      }
    },
    "/v2/api/DCP/Heartbeat": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Check API Availibility",
        "description": "Verifies, that the API endpoint is currently accessible. Does not require API Key",
        "operationId": "HeartbeatV2",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns message with timestamp",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          }
        },
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "Heartbeat"
        }
      }
    },
    "/api/DCP/IsServiceAlive": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "IsServiceAlive",
        "description": "returns true, if the service has been responsive recently, false, if not.",
        "operationId": "IsServiceAlive",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns a ServiceAlive variable of type bool",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "IsServiceAlive"
        }
      }
    },
    "/api/DCP/ping": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Get connection details",
        "description": "Verifies, that the API endpoint is currently accessible. Does not require API Key",
        "operationId": "Ping",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns message with timestamp",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "Ping"
        }
      }
    },
    "/api/DCP/PrintDocumentJob": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print DocumentJob",
        "description": "Print a Document generated by a DocumentJob. Attention! The documentjob must already be finished",
        "operationId": "PrintDocumentJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to print",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "DCP Printername of the printer to use",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrinters",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName"
            },
            "x-ms-summary": "DCPPrinterName"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "PrintDocumentJob"
        }
      }
    },
    "/v2/api/DCP/PrintDocumentJob": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print DocumentJob (V2)",
        "description": "Print the Document Content generated by a DocumentJob. Attention! The documentjob must already be finished",
        "operationId": "PrintDocumentJobV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to print",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "DCP Printername of the printer to use",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetPrintersV2",
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "DCPPrinterName"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "PrintDocumentJob"
        }
      }
    },
    "/api/DCP/PrintFile": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print File",
        "description": "Prints a base64 encoded file. Supported file-formats are PDF and DOCX",
        "operationId": "PrintFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Printer Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONPrintDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "PrintFile"
        }
      }
    },
    "/v2/api/DCP/PrintFile": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print File (V2)",
        "description": "Prints a Document Content or base64 encoded file. Supported file-formats are PDF and DOCX",
        "operationId": "PrintFileV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Printer Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONPrintDocumentRequestV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "PrintFile"
        }
      }
    },
    "/v2/api/DCP/RunOneClickActionAsync": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Run OneClickAction (async) (V2)",
        "description": "This function runs a OneClickAction. Attention! The function does NOT wait for a result",
        "operationId": "RunOneClickActionAsyncV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "OneClickAction",
            "description": "Id of the OneClickAction to apply",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetOneClickActionsV2",
              "value-path": "OcaID",
              "value-title": "DisplayName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "OneClickAction"
          },
          {
            "in": "query",
            "name": "User",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "User",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "RunOneClickActionAsync"
        }
      }
    },
    "/v2/api/DCP/RunOneClickActionSync": {
      "post": {
        "tags": [
          "DocumentGeneration V2"
        ],
        "summary": "Run OneClickAction (sync) (V2)",
        "description": "This function runs a OneClickAction and waits for the result",
        "operationId": "RunOneClickActionSyncV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "OneClickAction",
            "description": "Id of the OneClickAction to apply",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "operationId": "GetOneClickActionsV2",
              "value-path": "OcaID",
              "value-title": "DisplayName",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "OneClickAction"
          },
          {
            "in": "query",
            "name": "User",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetUsersV2",
              "value-path": "systemuserid",
              "value-title": "fullname",
              "parameters": {
                "envId": {
                  "parameter": "Environment"
                }
              }
            },
            "x-ms-summary": "User",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "RunOneClickActionSync"
        }
      }
    },
    "/api/DCP/SendEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Send email",
        "description": "Send the specified email",
        "operationId": "SendEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of email to send",
            "schema": {
              "$ref": "#/definitions/JSONSendEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "SendEmail"
        }
      }
    },
    "/v2/api/DCP/SendEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Send email (V2)",
        "description": "Send the specified email",
        "operationId": "SendEmailV2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of email to send",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONSendEmailV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "SendEmail"
        }
      }
    },
    "/v2/api/DCP/SignDocumentJob": {
      "post": {
        "tags": [
          "Signing"
        ],
        "summary": "Sign DocumentJob based on an XML (sync) (V2)",
        "description": "This function digitally signs a DocumentJob and waits for the result",
        "operationId": "SignDocumentJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signing metadata for the DocumentJob",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONSignDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponseV2"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "Signing"
        }
      }
    },
    "/api/DCP/whoami": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "WhoAmI",
        "description": "Returns information about the currently used API Key and assoicated Service",
        "operationId": "WhoAmI",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns ApiKey and ApiOwner name",
            "schema": {
              "$ref": "#/definitions/WhoAmi"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 1,
          "family": "WhoAmI"
        }
      }
    },
    "/v2/api/DCP/whoami": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "WhoAmI (V2)",
        "description": "Returns information about the currently used API Key and associated Service",
        "operationId": "WhoAmIV2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Environment",
            "description": "Specifies the connection to use for a perUser APIKey",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-ms-dynamic-values": {
              "operationId": "GetApiKeyProfiles",
              "value-path": "EnvironmentId",
              "value-title": "EnvironmentName"
            },
            "x-ms-summary": "Environment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns ApiKey and ApiOwner name",
            "schema": {
              "$ref": "#/definitions/WhoAmi"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "revision": 2,
          "family": "WhoAmI"
        }
      }
    }
  },
  "definitions": {
    "JSONAttachDocumentJobToEmail": {
      "required": [
        "DocumentJobId",
        "EmailId"
      ],
      "type": "object",
      "properties": {
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the email"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        }
      }
    },
    "DocumentJobStatusResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        },
        "DocumentJobId": {
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        }
      }
    },
    "JSONAttachDocumentJobToEmailV2": {
      "required": [
        "DocumentJobId",
        "EmailId",
        "Environment"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the email"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        }
      }
    },
    "JSONAttachDocumentJobToNote": {
      "required": [
        "DocumentJobId",
        "Entity Id",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the note"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "Note description": {
          "type": "string",
          "description": "Set this text as Notes description"
        },
        "Note subject": {
          "type": "string",
          "description": "Set this text as Notes subjects"
        },
        "Entity Id": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to"
        }
      }
    },
    "JSONCreateNoteResponse": {
      "type": "object",
      "properties": {
        "annotationid": {
          "type": "string"
        },
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        }
      }
    },
    "JSONAttachDocumentJobToNoteV2": {
      "required": [
        "DocumentJobId",
        "EntityId",
        "Environment",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the note"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNamesV2",
            "value-path": "LogicalName",
            "value-title": "DisplayName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetEntityNamesV2",
            "itemValuePath": "LogicalName",
            "itemTitlePath": "DisplayName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "Description": {
          "type": "string",
          "description": "Set this text as Notes description",
          "x-ms-summary": "Note description"
        },
        "Subject": {
          "type": "string",
          "description": "Set this text as Notes subjects",
          "x-ms-summary": "Note subject"
        },
        "EntityId": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to",
          "x-ms-summary": "Entity Id"
        }
      }
    },
    "JSONAttachFileToEmail": {
      "required": [
        "Document (base64)",
        "EmailId",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        }
      }
    },
    "JSONAttachFileToEmailV2": {
      "required": [
        "base64",
        "EmailId",
        "Environment",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "base64": {
          "type": "string",
          "format": "byte",
          "description": "A content-object or base64 encoded string representing the files content",
          "x-ms-summary": "Document content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "MimeType": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)",
          "x-ms-summary": "Mime-Type"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        }
      }
    },
    "JSONAttachFileToNote": {
      "required": [
        "Document (base64)",
        "Entity Id",
        "Filename",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "Note description": {
          "type": "string",
          "description": "Set this text as Notes description"
        },
        "Note subject": {
          "type": "string",
          "description": "Set this text as Notes subjects"
        },
        "Entity Id": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to"
        }
      }
    },
    "JSONAttachFileToNoteV2": {
      "required": [
        "base64",
        "EntityId",
        "Environment",
        "Filename",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "base64": {
          "type": "string",
          "format": "byte",
          "description": "A content-object or base64 encoded string representing the files content",
          "x-ms-summary": "Document content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "MimeType": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)",
          "x-ms-summary": "Mime-Type"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNamesV2",
            "value-path": "LogicalName",
            "value-title": "DisplayName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetEntityNamesV2",
            "itemValuePath": "LogicalName",
            "itemTitlePath": "DisplayName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "Description": {
          "type": "string",
          "description": "Set this text as Notes description",
          "x-ms-summary": "Note description"
        },
        "Subject": {
          "type": "string",
          "description": "Set this text as Notes subjects",
          "x-ms-summary": "Note subject"
        },
        "EntityId": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to",
          "x-ms-summary": "Entity Id"
        }
      }
    },
    "JSONConcatDocumentJob": {
      "required": [
        "CombineType",
        "First DocumentJob",
        "OutputFileType",
        "Second DocumentJob"
      ],
      "type": "object",
      "properties": {
        "First DocumentJob": {
          "format": "uuid",
          "type": "string",
          "description": "First DocumentJobId of ConcatenationJob"
        },
        "Second DocumentJob": {
          "format": "uuid",
          "type": "string",
          "description": "Second DocumentJobId of ConcatenationJob"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        }
      }
    },
    "DocumentJobResponse": {
      "type": "object",
      "properties": {
        "File name": {
          "type": "string"
        },
        "File size": {
          "format": "int32",
          "type": "integer"
        },
        "Document (Base64 encoded)": {
          "type": "string"
        },
        "Mime-Type": {
          "type": "string"
        },
        "Temporary Record Id": {
          "type": "string"
        },
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        },
        "DocumentJobId": {
          "type": "string"
        }
      }
    },
    "JSONConcatDocumentJobV2": {
      "required": [
        "CombineType",
        "DocumentJob1",
        "DocumentJob2",
        "Environment",
        "OutputFileType"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "DocumentJob1": {
          "format": "uuid",
          "type": "string",
          "description": "First DocumentJobId of ConcatenationJob",
          "x-ms-summary": "First DocumentJob"
        },
        "DocumentJob2": {
          "format": "uuid",
          "type": "string",
          "description": "Second DocumentJobId of ConcatenationJob",
          "x-ms-summary": "Second DocumentJob"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        }
      }
    },
    "DocumentJobResponseV2": {
      "type": "object",
      "properties": {
        "File name": {
          "type": "string"
        },
        "File size": {
          "format": "int32",
          "type": "integer"
        },
        "Document content": {
          "type": "string",
          "format": "byte"
        },
        "Mime-Type": {
          "type": "string"
        },
        "Temporary Record Id": {
          "type": "string"
        },
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        },
        "DocumentJobId": {
          "type": "string"
        }
      }
    },
    "JSONConcatFiles": {
      "required": [
        "CombineType",
        "First Document (base64)",
        "First Filename",
        "First Mime-Type",
        "OutputFileType",
        "Second Document (base64)",
        "Second Filename",
        "Second Mime-Type"
      ],
      "type": "object",
      "properties": {
        "First Filename": {
          "type": "string",
          "description": "The filename of the first document"
        },
        "First Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the first document (e.g. application/pdf)"
        },
        "First Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the first document content"
        },
        "Second Filename": {
          "type": "string",
          "description": "The filename of the second document"
        },
        "Second Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the second document (e.g. application/pdf)"
        },
        "Second Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the second document content"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        }
      }
    },
    "JSONConcatFilesV2": {
      "required": [
        "base64_1",
        "base64_2",
        "CombineType",
        "Environment",
        "FileName_1",
        "FileName_2",
        "MimeType_1",
        "MimeType_2",
        "OutputFileType"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "FileName_1": {
          "type": "string",
          "description": "The filename of the first document",
          "x-ms-summary": "First Filename"
        },
        "MimeType_1": {
          "type": "string",
          "description": "Content mime-type for handling of the first document (e.g. application/pdf)",
          "x-ms-summary": "First Mime-Type"
        },
        "base64_1": {
          "type": "string",
          "format": "byte",
          "description": "A content-object or base64 encoded string representing the files content",
          "x-ms-summary": "First Document content"
        },
        "FileName_2": {
          "type": "string",
          "description": "The filename of the second document",
          "x-ms-summary": "Second Filename"
        },
        "MimeType_2": {
          "type": "string",
          "description": "Content mime-type for handling of the second document (e.g. application/pdf)",
          "x-ms-summary": "Second Mime-Type"
        },
        "base64_2": {
          "type": "string",
          "format": "byte",
          "description": "A content-object or base64 encoded string representing the files content",
          "x-ms-summary": "Second Document content"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        }
      }
    },
    "JSONMultiPartRequest": {
      "required": [
        "MultiPartXml"
      ],
      "type": "object",
      "properties": {
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "TimeOut": {
          "format": "int32",
          "type": "integer",
          "description": "Timeout for document creation"
        },
        "MultiPartXml": {
          "type": "string",
          "description": "Multipart XML document for the DocumentJob"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          },
          "x-ms-visibility": "advanced"
        }
      }
    },
    "JSONMultiPartRequestV2": {
      "required": [
        "Environment",
        "MultiPartXml"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "MultiPartXml": {
          "type": "string",
          "description": "Multipart XML document for the DocumentJob"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        }
      }
    },
    "JSONCreateSharepointFolders": {
      "required": [
        "EntityId",
        "Environment",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "FolderNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supply all foldernames to create",
          "x-ms-summary": "Folder name enumeration"
        },
        "EntityId": {
          "type": "string",
          "description": "The Guid of the entity to create the folders for"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNamesV2",
            "value-path": "LogicalName",
            "value-title": "DisplayName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "description": "The schemaname of the entity to create the folders for",
          "x-ms-dynamic-list": {
            "operationId": "GetEntityNamesV2",
            "itemValuePath": "LogicalName",
            "itemTitlePath": "DisplayName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          },
          "x-ms-summary": "Dynamics Schemaname"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "DocumentLocation": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetDocumentLocationsV2",
            "value-path": "sharepointdocumentlocationid",
            "value-title": "name",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDocumentLocationsV2",
            "itemValuePath": "sharepointdocumentlocationid",
            "itemTitlePath": "name",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        }
      }
    },
    "JSONDCPTemplate": {
      "type": "object",
      "properties": {
        "ptm_mscrmaddons_dcptemplatesid": {
          "type": "string"
        },
        "ptm_name": {
          "type": "string"
        },
        "ptm_entitytype": {
          "type": "string"
        }
      }
    },
    "JSONEnvironment": {
      "type": "object",
      "properties": {
        "EnvironmentName": {
          "type": "string"
        },
        "EnvironmentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "JSONKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StringInt32KeyValuePair": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "JSONDocumentLocation": {
      "type": "object",
      "properties": {
        "sharepointdocumentlocationid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "JSONEntityName": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "LogicalName": {
          "type": "string"
        }
      }
    },
    "JSONOneClickAction": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string",
          "readOnly": true
        },
        "OcaID": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "@odata.etag": {
          "type": "string"
        },
        "ptm_entity": {
          "type": "string"
        },
        "ptm_position": {
          "format": "int32",
          "type": "integer"
        },
        "_owningbusinessunit_value": {
          "type": "string"
        },
        "ptm_mscrmaddonscomoneclickactionid": {
          "type": "string"
        },
        "ptm_name": {
          "type": "string"
        },
        "statecode": {
          "format": "int32",
          "type": "integer"
        },
        "statuscode": {
          "format": "int32",
          "type": "integer"
        },
        "_createdby_value": {
          "type": "string"
        },
        "ptm_oca": {
          "type": "string"
        },
        "_ownerid_value": {
          "type": "string"
        },
        "modifiedon": {
          "format": "date-time",
          "type": "string"
        },
        "_owninguser_value": {
          "type": "string"
        },
        "_modifiedby_value": {
          "type": "string"
        },
        "versionnumber": {
          "format": "int32",
          "type": "integer"
        },
        "createdon": {
          "format": "date-time",
          "type": "string"
        },
        "_ptm_groupid_value": {
          "type": "string"
        }
      }
    },
    "JSONPrinterResponse": {
      "type": "object",
      "properties": {
        "DCPPrinterName": {
          "type": "string"
        }
      }
    },
    "JSONSignProvider": {
      "type": "object",
      "properties": {
        "SignProviderName": {
          "type": "string"
        },
        "OptionValue": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "JSONSystemUser": {
      "type": "object",
      "properties": {
        "systemuserid": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "domainname": {
          "type": "string"
        },
        "azureactivedirectoryobjectid": {
          "type": "string"
        }
      }
    },
    "UserMessage": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      }
    },
    "JSONPrintDocumentRequest": {
      "required": [
        "DCPPrinterName",
        "Document (base64)",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "DCPPrinterName": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetPrinters",
            "value-path": "DCPPrinterName",
            "value-title": "DCPPrinterName"
          }
        }
      }
    },
    "JSONPrintDocumentRequestV2": {
      "required": [
        "base64",
        "DCPPrinterName",
        "Environment",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "base64": {
          "type": "string",
          "format": "byte",
          "description": "A content-object or base64 encoded string representing the files content",
          "x-ms-summary": "Document content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "DCPPrinterName": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetPrintersV2",
            "value-path": "DCPPrinterName",
            "value-title": "DCPPrinterName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetPrintersV2",
            "itemValuePath": "DCPPrinterName",
            "itemTitlePath": "DCPPrinterName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        }
      }
    },
    "JSONLookup": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        }
      }
    },
    "JSONSendEmail": {
      "required": [
        "EmailToSend"
      ],
      "type": "object",
      "properties": {
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "EmailToSend": {
          "type": "string",
          "description": "Guid of email to send"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "Sender (userid)": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of email sender"
        },
        "Sender (Schemaname)": {
          "type": "string",
          "description": "Schema name of the sender, default is systemuser",
          "default": "systemuser"
        },
        "Regarding (Id)": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of the entity to set as regarding"
        },
        "Regarding (Schemaname)": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "To": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails TO recipient list"
        },
        "CC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails CC recipient list"
        },
        "BCC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails BCC recipient list"
        }
      }
    },
    "JSONSendEmailV2": {
      "required": [
        "EmailToSend",
        "Environment"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "EmailToSend": {
          "type": "string",
          "description": "Guid of email to send"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "SenderId": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of email sender",
          "x-ms-summary": "Sender (userid)"
        },
        "SenderLogicalName": {
          "type": "string",
          "description": "Schema name of the sender, default is systemuser",
          "default": "systemuser",
          "x-ms-summary": "Sender (Schemaname)"
        },
        "RegardingObjectId": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of the entity to set as regarding",
          "x-ms-summary": "Regarding (Id)"
        },
        "RegardingObjectLogicalName": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNamesV2",
            "value-path": "LogicalName",
            "value-title": "DisplayName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetEntityNamesV2",
            "itemValuePath": "LogicalName",
            "itemTitlePath": "DisplayName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          },
          "x-ms-summary": "Regarding (Schemaname)"
        },
        "To": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails TO recipient list"
        },
        "CC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails CC recipient list"
        },
        "BCC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails BCC recipient list"
        }
      }
    },
    "Signee": {
      "required": [
        "Email",
        "InPerson",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The display name of the Signee"
        },
        "Email": {
          "type": "string",
          "description": "The email address of the Signee"
        },
        "InPerson": {
          "type": "boolean",
          "description": "Generates a link to start the signing process",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "InPerson Signing"
        },
        "Subject": {
          "type": "string",
          "description": "Personalized subject in signing request email",
          "x-ms-visibility": "advanced"
        },
        "Message": {
          "type": "string",
          "description": "Personalized message in signing request email",
          "x-ms-visibility": "advanced"
        },
        "TelNr": {
          "type": "string",
          "description": "Signees telephone number for SMS authentication (DocuSign only)",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Telephonenumber"
        },
        "HostName": {
          "type": "string",
          "description": "Signing hosts name for inPerson signing (DocuSign only)",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "DocuSign Hostname"
        },
        "Hostemail": {
          "type": "string",
          "description": "Signing hosts emailaddress for inPerson signing (DocuSign only)",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "JSONSignDocument": {
      "required": [
        "DocumentJob",
        "EntityId",
        "Environment",
        "Schemaname",
        "SignProvider"
      ],
      "type": "object",
      "properties": {
        "Environment": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetApiKeyProfiles",
            "value-path": "EnvironmentId",
            "value-title": "EnvironmentName"
          },
          "description": "Select the Environment for his operation"
        },
        "EntityId": {
          "type": "string",
          "description": "The Guid of the Entity the eSign record wil be attached to"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNamesV2",
            "value-path": "LogicalName",
            "value-title": "DisplayName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "description": "The Schemaname of the Entity the eSign record wil be attached to",
          "x-ms-dynamic-list": {
            "operationId": "GetEntityNamesV2",
            "itemValuePath": "LogicalName",
            "itemTitlePath": "DisplayName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "DocumentJob": {
          "format": "uuid",
          "type": "string",
          "description": "DocumentJobId containing the document to sign"
        },
        "User": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsersV2",
            "value-path": "systemuserid",
            "value-title": "fullname",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-list": {
            "operationId": "GetUsersV2",
            "itemValuePath": "systemuserid",
            "itemTitlePath": "fullname",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          }
        },
        "SignProvider": {
          "format": "int64",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetSignProvidersV2",
            "value-path": "OptionValue",
            "value-title": "SignProviderName",
            "parameters": {
              "envId": {
                "parameter": "Environment"
              }
            }
          },
          "description": "The provider that should be used to sign this document",
          "x-ms-dynamic-list": {
            "operationId": "GetSignProvidersV2",
            "itemValuePath": "OptionValue",
            "itemTitlePath": "SignProviderName",
            "parameters": {
              "envId": {
                "parameterReference": "body/Environment"
              }
            }
          },
          "x-ms-summary": "Signing Provider"
        },
        "Subject": {
          "type": "string",
          "description": "Default subject in signing request email",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Email Default Subject"
        },
        "Message": {
          "type": "string",
          "description": "Default message in signing request email",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Email Default Message"
        },
        "Signees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signee"
          }
        }
      }
    },
    "WhoAmi": {
      "type": "object",
      "properties": {
        "ApiKey": {
          "type": "string"
        },
        "ApiOwner": {
          "type": "string"
        },
        "Environment": {
          "format": "int32",
          "type": "integer"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Api_Key": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header"
    }
  },
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://poweraddons.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.mscrm-addons.com/LegalDocuments"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Sales and CRM"
    }
  ]
}