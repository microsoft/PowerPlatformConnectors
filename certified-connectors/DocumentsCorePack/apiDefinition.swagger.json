{
  "swagger": "2.0",
  "info": {
    "title": "DocumentsCorePack",
    "description": "DocumentsCorePack is a fast & simple document generation based on Dynamics 365 data. Based on MS Word - templates, DocumentsCorePack provides you with a set of tools to create and process documents effectively.From a document generation wizard that guides users through the process to full document automation - DocumentsCorePack will make your business documents look professional and help you to process them efficiently!",
    "termsOfService": "https://www.mscrm-addons.com/Support/Terms-Conditions",
    "contact": {
      "name": "mscrm-addons.com",
      "email": "support@mscrm-addons.com"
    },
    "license": {
      "name": "All rights reserved, copyright by PTM EDV Systeme GmbH @2020",
      "url": "https://www.mscrm-addons.com"
    },
    "version": "1.0"
  },
  "host": "documentapi.mscrm-addons.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/DCP/AttachDocumentJobToEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob to email",
        "description": "Attach the file generated by a DocumentJob as attachment to a Dynamics 365 email",
        "operationId": "AttachDocumentJobToEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "DocumentJob and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/AttachDocumentJobToNote": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Attach DocumentJob as note",
        "description": "Attach the file generated by a DocumentJob as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachDocumentJobToNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachDocumentJobToNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/AttachFileToEmail": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file to email",
        "description": "Attach the file supplied as base64 string as attachment to a Dynamics 365 email",
        "operationId": "AttachFileToEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Email Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/AttachFileToNote": {
      "post": {
        "tags": [
          "FileFunctions"
        ],
        "summary": "Attach file as note",
        "description": "Attach the file supplied as base64 string as a note to a Dynamics 365 entity. Attention! The documentjob must already be finished",
        "operationId": "AttachFileToNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Note information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONAttachFileToNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AnnotationId",
            "schema": {
              "$ref": "#/definitions/JSONCreateNoteResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/ConcatenateDocumentJobs": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two Document Jobs",
        "description": "Concatenate two files (pdf,docx) generated by two document jobs",
        "operationId": "ConcatenateDocumentJobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two documentjobs to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatDocumentJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/ConcatenateFiles": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Concatenate two Files (pdf,docx)",
        "description": "Concatenates two supplied files (pdf,docx)",
        "operationId": "ConcatenateFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information about the two files to combine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONConcatFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/CreateDocumentJob": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create Document Job (sync)",
        "description": "This function creates a new document job and waits for the result for up to [TimeOut] seconds",
        "operationId": "CreateDocumentJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateId",
            "description": "Select the template for this document job",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name",
              "operationId": "GetAllTemplates"
            },
            "x-ms-summary": "TemplateId"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "value",
              "value-title": "key",
              "operationId": "GetFileTypes"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "TimeOut",
            "description": "Max. time to wait for document",
            "type": "integer",
            "format": "int32",
            "default": 120,
            "x-ms-summary": "TimeOut"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Optional, supply Dynamics 365 users domainname or id",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "systemuserid",
              "value-title": "fullname",
              "operationId": "GetUsers"
            },
            "x-ms-summary": "UserId"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the DCP printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "operationId": "GetPrinters"
            },
            "x-ms-summary": "DCPPrinterName"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/CreateDocumentJobAsync": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create Document Job (async)",
        "description": "This function creates a new document job.. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateId",
            "description": "Select the template for this document job",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-dynamic-values": {
              "value-path": "ptm_mscrmaddons_dcptemplatesid",
              "value-title": "ptm_name",
              "operationId": "GetAllTemplates"
            },
            "x-ms-summary": "TemplateId"
          },
          {
            "in": "query",
            "name": "EntityId",
            "description": "Dynamics 365 source record id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "EntityId"
          },
          {
            "in": "query",
            "name": "FileType",
            "description": "Select a filetype for the document result",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "value",
              "value-title": "key",
              "operationId": "GetFileTypes"
            },
            "x-ms-summary": "FileType"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Optional, the user to run this operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "systemuserid",
              "value-title": "fullname",
              "operationId": "GetUsers"
            },
            "x-ms-summary": "UserId"
          },
          {
            "in": "query",
            "name": "SaveToSharepoint",
            "description": "Optional, save document to sharepoint",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "SaveToSharepoint"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "Optional, Select the printer for a PrintDocument operation",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "operationId": "GetPrinters"
            },
            "x-ms-summary": "DCPPrinterName"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/CreateDocumentJobXmlBased": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create Document Job based on an XML (sync)",
        "description": "This function creates a new document job and waits for the result for up to [TimeOut] seconds",
        "operationId": "CreateDocumentJobXmlBased",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a document",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/CreateDocumentJobXmlBasedAsync": {
      "post": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Create Document Job based on an XML (async)",
        "description": "This function creates a new document job. Attention! The function does NOT wait for a result",
        "operationId": "CreateDocumentJobXmlBasedAsync",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Optional, Multipart XML document for the DocumentJob",
            "schema": {
              "$ref": "#/definitions/JSONMultiPartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/DocumentJobResult": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Get DocumentJob Result",
        "description": "Retrieves a DocumentJobs status information. The result will include the result document, if the job is finished",
        "operationId": "DocumentJobResult",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the result of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/DocumentJobStatus": {
      "get": {
        "tags": [
          "DocumentGeneration"
        ],
        "summary": "Get DocumentJob Status",
        "description": "Retrieves the status of a DocumentJob. Dynamics 365 state/statuscode rules apply",
        "operationId": "DocumentJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to retrieve the status of",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AutomergeWorkingItem",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetAllTemplates": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Templates",
        "description": "This function returns a list of available DocumentsCorePack Templates",
        "operationId": "GetAllTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "EntityName",
            "description": "Filter by Entity (etc or etn). Optional wildcard *[etn]*",
            "type": "string",
            "x-ms-summary": "EntityName"
          },
          {
            "in": "query",
            "name": "TemplateNameFilter",
            "description": "Filter by template name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "TemplateNameFilter"
          },
          {
            "in": "query",
            "name": "GroupFilter",
            "description": "Filter by group name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "GroupFilter"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "systemuserid",
              "value-title": "fullname",
              "operationId": "GetUsers"
            },
            "x-ms-summary": "UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONDCPTemplate"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetCombineTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP CombineTypes for DocumentConcatenation",
        "description": "This function returns a list of supported CombineTypes for DocumentsCorePack",
        "operationId": "GetCombineTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP CombineTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetConcatenationOutputTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Concatenation ResultTypes",
        "description": "This function returns a list of supported ResultTypes for Concatenation",
        "operationId": "GetConcatenationOutputTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetDCPActions": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Available DCP Actions",
        "description": "This function returns a list of supported actions for DocumentsCorePack",
        "operationId": "GetDCPActions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP Actions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringInt32KeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetEntityNames": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Retrieve EntityNames with annotation capability",
        "description": "This function returns a list of all Dynamics 365 entities, that support annotations",
        "operationId": "GetEntityNames",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of note-enabled Entities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONEntityName"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetFileTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP FileTypes",
        "description": "This function returns a list of supported filetype for DocumentsCorePack",
        "operationId": "GetFileTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetPrinters": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP Printer",
        "description": "Retrieve available printer names, optionally filtered by user",
        "operationId": "GetPrinters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "User",
            "description": "Optional, supply Dynamics 365 users domainname or id",
            "type": "string",
            "default": "",
            "x-ms-summary": "User"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of printers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONPrinterResponse"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetSingleTemplate": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Single Template",
        "description": "This function returns the first of the filtered DocumentsCorePack Templates",
        "operationId": "GetSingleTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "TemplateNameFilter",
            "description": "Filter by template name. Optional wildcard *[name]*",
            "type": "string",
            "x-ms-summary": "TemplateNameFilter"
          },
          {
            "in": "query",
            "name": "GroupFilter",
            "description": "Filter by GroupName. Optional wildcard *[group]*",
            "type": "string",
            "x-ms-summary": "GroupFilter"
          },
          {
            "in": "query",
            "name": "EntityName",
            "description": "Filter by Entity (etc or etn). Optional wildcard *[etn]*",
            "type": "string",
            "x-ms-summary": "EntityName"
          },
          {
            "in": "query",
            "name": "UserId",
            "description": "Only retrieve templates accessible to this user",
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "systemuserid",
              "value-title": "fullname",
              "operationId": "GetUsers"
            },
            "x-ms-summary": "UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single templates",
            "schema": {
              "$ref": "#/definitions/JSONDCPTemplate"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetUsers": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get a list of dynamics users",
        "description": "list of dynamics users",
        "operationId": "GetUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of dynamics users",
            "schema": {
              "$ref": "#/definitions/JSONSystemUser"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/GetXmlBasedFileTypes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get DCP FileTypes for XmlBased generation",
        "description": "This function returns a list of supported filetype for DocumentsCorePack XmlBased generation",
        "operationId": "GetXmlBasedFileTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of DCP FileTypes for XmlBased generation and their Ids",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JSONKeyValuePair"
              }
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/IsServiceAlive": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "IsServiceAlive",
        "description": "returns true, if the service has been responsive recently, false, if not.",
        "operationId": "IsServiceAlive",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns a ServiceAlive variable of type bool",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/ping": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Check API Availibility",
        "description": "Verifies, that the API endpoint is currently accessible. Does not require API Key",
        "operationId": "Ping",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns message with timestamp",
            "schema": {
              "$ref": "#/definitions/UserMessage"
            }
          }
        }
      }
    },
    "/api/DCP/PrintDocumentJob": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print DocumentJob",
        "description": "Print a Document generated by a DocumentJob. Attention! The documentjob must already be finished",
        "operationId": "PrintDocumentJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DocumentJobId",
            "description": "Guid of the DocumentJob Id to print",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "DocumentJobId"
          },
          {
            "in": "query",
            "name": "DCPPrinterName",
            "description": "DCP Printername of the printer to use",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "value-path": "DCPPrinterName",
              "value-title": "DCPPrinterName",
              "operationId": "GetPrinters"
            },
            "x-ms-summary": "DCPPrinterName"
          },
          {
            "in": "query",
            "name": "DeactivateOnTimeout",
            "description": "Deactivates the working item on a timeout, preventing the document generation",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "DeactivateOnTimeout"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/PrintFile": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Print File",
        "description": "Prints a file supplied as base64 encoded string. Supported file-formats are PDF and DOCX",
        "operationId": "PrintFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File and Printer Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JSONPrintDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/SendEmail": {
      "post": {
        "tags": [
          "DocumentFunctions"
        ],
        "summary": "Send email",
        "description": "Send the specified email",
        "operationId": "SendEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of email to send",
            "schema": {
              "$ref": "#/definitions/JSONSendEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an DocumentJob",
            "schema": {
              "$ref": "#/definitions/DocumentJobStatusResponse"
            }
          },
          "400": {
            "description": "returned for all other errors",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/DCP/whoami": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "WhoAmI",
        "description": "Returns information about the currently used API Key and assoicated Service",
        "operationId": "WhoAmI",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns ApiKey and ApiOwner name",
            "schema": {
              "$ref": "#/definitions/WhoAmi"
            }
          },
          "401": {
            "description": "returned for invalid API Key",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JSONAttachDocumentJobToEmail": {
      "required": [
        "DocumentJobId",
        "EmailId"
      ],
      "type": "object",
      "properties": {
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the email"
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "DocumentJobStatusResponse": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        },
        "DocumentJobId": {
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        }
      }
    },
    "JSONAttachDocumentJobToNote": {
      "required": [
        "DocumentJobId",
        "Entity Id",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "DocumentJobId": {
          "type": "string",
          "description": "The DocumentJob ID of the generated document to attach to the note"
        },
        "Note description": {
          "type": "string",
          "description": "Set this text as Notes description"
        },
        "Note subject": {
          "type": "string",
          "description": "Set this text as Notes subjects"
        },
        "Entity Id": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "JSONCreateNoteResponse": {
      "type": "object",
      "properties": {
        "annotationid": {
          "type": "string"
        },
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        }
      }
    },
    "JSONAttachFileToEmail": {
      "required": [
        "Document (base64)",
        "EmailId",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)"
        },
        "EmailId": {
          "type": "string",
          "description": "The email the document should be attached to"
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "JSONAttachFileToNote": {
      "required": [
        "Document (base64)",
        "Entity Id",
        "Filename",
        "Schemaname"
      ],
      "type": "object",
      "properties": {
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the file (e.g. application/text)"
        },
        "Note description": {
          "type": "string",
          "description": "Set this text as Notes description"
        },
        "Note subject": {
          "type": "string",
          "description": "Set this text as Notes subjects"
        },
        "Entity Id": {
          "type": "string",
          "description": "The Guid of the entity to attach the note to"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "JSONConcatDocumentJob": {
      "required": [
        "CombineType",
        "First DocumentJob",
        "OutputFileType",
        "Second DocumentJob"
      ],
      "type": "object",
      "properties": {
        "First DocumentJob": {
          "format": "uuid",
          "type": "string",
          "description": "First DocumentJobId of ConcatenationJob"
        },
        "Second DocumentJob": {
          "format": "uuid",
          "type": "string",
          "description": "Second DocumentJobId of ConcatenationJob"
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        }
      }
    },
    "DocumentJobResponse": {
      "type": "object",
      "properties": {
        "File name": {
          "type": "string"
        },
        "File size": {
          "format": "int32",
          "type": "integer"
        },
        "Document (Base64 encoded)": {
          "type": "string"
        },
        "Mime-Type": {
          "type": "string"
        },
        "Temporary Record Id": {
          "type": "string"
        },
        "Success": {
          "type": "boolean",
          "readOnly": true
        },
        "Return value": {
          "type": "string"
        },
        "Return value 2": {
          "type": "string"
        },
        "DocumentJobId": {
          "type": "string"
        }
      }
    },
    "JSONConcatFiles": {
      "required": [
        "CombineType",
        "First Document (base64)",
        "First Filename",
        "First Mime-Type",
        "OutputFileType",
        "Second Document (base64)",
        "Second Filename",
        "Second Mime-Type"
      ],
      "type": "object",
      "properties": {
        "First Filename": {
          "type": "string",
          "description": "The filename of the first document"
        },
        "First Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the first document (e.g. application/pdf)"
        },
        "First Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the first document content"
        },
        "Second Filename": {
          "type": "string",
          "description": "The filename of the second document"
        },
        "Second Mime-Type": {
          "type": "string",
          "description": "Content mime-type for handling of the second document (e.g. application/pdf)"
        },
        "Second Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the second document content"
        },
        "CombineType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetCombineTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "OutputFileType": {
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetConcatenationOutputTypes",
            "value-path": "value",
            "value-title": "key"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        }
      }
    },
    "JSONMultiPartRequest": {
      "required": [
        "MultiPartXml"
      ],
      "type": "object",
      "properties": {
        "MultiPartXml": {
          "type": "string",
          "description": "Multipart XML document for the DocumentJob"
        },
        "TimeOut": {
          "format": "int32",
          "type": "integer",
          "description": ""
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "JSONDCPTemplate": {
      "type": "object",
      "properties": {
        "ptm_mscrmaddons_dcptemplatesid": {
          "type": "string"
        },
        "ptm_name": {
          "type": "string"
        },
        "ptm_entitytype": {
          "type": "string"
        }
      }
    },
    "JSONKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StringInt32KeyValuePair": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "JSONEntityName": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "LogicalName": {
          "type": "string"
        }
      }
    },
    "JSONPrinterResponse": {
      "type": "object",
      "properties": {
        "DCPPrinterName": {
          "type": "string"
        }
      }
    },
    "JSONSystemUser": {
      "type": "object",
      "properties": {
        "systemuserid": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "domainname": {
          "type": "string"
        },
        "azureactivedirectoryobjectid": {
          "type": "string"
        }
      }
    },
    "UserMessage": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      }
    },
    "JSONPrintDocumentRequest": {
      "required": [
        "DCPPrinterName",
        "Document (base64)",
        "Filename"
      ],
      "type": "object",
      "properties": {
        "Document (base64)": {
          "type": "string",
          "description": "A base64 encoded string representing the files content"
        },
        "Filename": {
          "type": "string",
          "description": "The filename to use for storing the file"
        },
        "DCPPrinterName": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetPrinters",
            "value-path": "DCPPrinterName",
            "value-title": "DCPPrinterName"
          }
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "JSONLookup": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Schemaname": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        }
      }
    },
    "JSONSendEmail": {
      "required": [
        "EmailToSend"
      ],
      "type": "object",
      "properties": {
        "EmailToSend": {
          "type": "string",
          "description": "Guid of email to send"
        },
        "UserId": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "systemuserid",
            "value-title": "fullname"
          }
        },
        "Sender (userid)": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of email sender"
        },
        "Sender (Schemaname)": {
          "type": "string",
          "description": "Schemaname of the sender, empty value defaults to systemuser",
          "default": "systemuser"
        },
        "Regarding (Id)": {
          "format": "uuid",
          "type": "string",
          "description": "Guid of the entity to set as regarding"
        },
        "Regarding (Schemaname)": {
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetEntityNames",
            "value-path": "LogicalName",
            "value-title": "DisplayName"
          }
        },
        "To": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails TO recipient list"
        },
        "CC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails CC recipient list"
        },
        "BCC": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONLookup"
          },
          "description": "The emails BCC recipient list"
        },
        "DeactivateOnTimeout": {
          "type": "boolean",
          "description": "Deactivates the working item on a timeout, preventing the document generation",
          "default": false
        }
      }
    },
    "WhoAmi": {
      "type": "object",
      "properties": {
        "ApiKey": {
          "type": "string"
        },
        "ApiOwner": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Api_Key": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header"
    }
  },
  "security": [],
  "tags": []
}