{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Resco Cloud",
    "description": "Resco Cloud is an all-in-one business solution that is highly customizable, secure, feature-rich and 100% offline-ready.",
    "contact": {
      "name": "Resco experts are ready to listen and help",
      "url": "https://www.resco.net/contact-support/",
      "email": "mobilecrm@resco.net"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.resco.net/resco-cloud/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.resco.net/privacy-notice/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "rescocrm.com",
  "basePath": "/odata/v4",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "List Entities",
        "description": "Get list of entities",
        "operationId": "Schema-Entities",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "in": "query",
            "name": "$kind",
            "type": "string",
            "default": "EntitySet",
            "x-ms-visibility": "internal",
            "required": true
          },
          {
            "$ref": "#/parameters/Definition.Entity"
          },
          {
            "$ref": "#/parameters/Definition.Attribute"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity list",
            "schema": {
              "type": "object",
              "properties": {
                "@odata.context": {
                  "type": "string"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Entity name",
                        "type": "string"
                      },
                      "title": {
                        "description": "Entity label",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/$schema/{entity}": {
      "get": {
        "summary": "Entity Schema",
        "description": "Get entity schema",
        "operationId": "Schema-Entity",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Entity"
          },
          {
            "$ref": "#/parameters/List.Select"
          },
          {
            "$ref": "#/parameters/List.Expand"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/{entity}": {
      "get": {
        "summary": "List records",
        "description": "Get list of records",
        "operationId": "Record-List",
        "parameters": [
          {
            "$ref": "#/parameters/List.Select"
          },
          {
            "$ref": "#/parameters/List.Filter"
          },
          {
            "$ref": "#/parameters/List.OrderBy"
          },
          {
            "$ref": "#/parameters/List.Expand"
          },
          {
            "$ref": "#/parameters/List.Top"
          },
          {
            "$ref": "#/parameters/List.Skip"
          },
          {
            "$ref": "#/parameters/List.SkipToken"
          },
          {
            "$ref": "#/parameters/List.Count"
          },
          {
            "$ref": "#/parameters/Parameter.Entity"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved records",
            "schema": {
              "x-ms-summary": "body",
              "description": "List of entities",
              "type": "object",
              "properties": {
                "@odata.context": {
                  "description": "Describes the collection of entities",
                  "type": "string",
                  "x-ms-summary": "Context Link",
                  "x-ms-visibility": "advanced"
                },
                "@odata.nextLink": {
                  "description": "Link to get next page of results",
                  "type": "string",
                  "x-ms-summary": "Next link",
                  "x-ms-visibility": "advanced"
                },
                "@odata.count": {
                  "description": "The number of records returned",
                  "type": "integer",
                  "format": "int32",
                  "x-ms-summary": "Records count",
                  "x-ms-visibility": "advanced"
                },
                "value": {
                  "type": "array",
                  "x-ms-summary": "value",
                  "description": "List of items",
                  "items": {
                    "$ref": "#/definitions/Resco.Entity.List"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a new record",
        "description": "Create a new record",
        "operationId": "Record-Create",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Entity"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New record",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resco.Entity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created record",
            "schema": {
              "$ref": "#/definitions/Resco.Entity"
            }
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/{entity}('{id}')": {
      "get": {
        "summary": "Get record",
        "description": "Get record by ID",
        "operationId": "Record-Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Record.Id"
          },
          {
            "$ref": "#/parameters/List.Select"
          },
          {
            "$ref": "#/parameters/List.Expand"
          },
          {
            "$ref": "#/parameters/Parameter.Entity"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved record",
            "schema": {
              "$ref": "#/definitions/Resco.Entity.List"
            }
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete record",
        "description": "Delete record by ID",
        "operationId": "Record-Delete",
        "parameters": [
          {
            "$ref": "#/parameters/Record.Id"
          },
          {
            "$ref": "#/parameters/Header.ETag"
          },
          {
            "$ref": "#/parameters/Parameter.Entity"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted record"
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update a record",
        "description": "Update record by ID",
        "operationId": "Record-Update",
        "parameters": [
          {
            "$ref": "#/parameters/Record.Id"
          },
          {
            "$ref": "#/parameters/Header.ETag"
          },
          {
            "$ref": "#/parameters/Parameter.Entity"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resco.Entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated record",
            "schema": {
              "$ref": "#/definitions/Resco.Entity"
            }
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get current user",
        "description": "Get current user record by ID",
        "operationId": "User-Get",
        "x-ms-visibility": "advanced",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/List.Select"
          },
          {
            "$ref": "#/parameters/List.Expand"
          },
          {
            "$ref": "#/parameters/Header.Prefer"
          },
          {
            "$ref": "#/parameters/Header.Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved current user record",
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "Schema-Entity",
                "parameters": {
                  "entity": "systemuser",
                  "$select": {
                    "parameter": "$select"
                  },
                  "$expand": {
                    "parameter": "$expand"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  },
  "definitions": {
    "odata.error.detail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "odata.error.main": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "innererror": {
          "description": "The structure of this object is service-specific",
          "type": "object"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        }
      }
    },
    "odata.error": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "Resco.Entity": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema-Entity",
        "parameters": {
          "entity": {
            "parameter": "entity"
          }
        }
      }
    },
    "Resco.Entity.List": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "Schema-Entity",
        "parameters": {
          "entity": {
            "parameter": "entity"
          },
          "$select": {
            "parameter": "$select"
          },
          "$expand": {
            "parameter": "$expand"
          }
        }
      }
    }
  },
  "parameters": {
    "Parameter.Entity": {
      "in": "path",
      "name": "entity",
      "description": "Name of the entity",
      "x-ms-summary": "Entity name",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string",
      "x-ms-dynamic-values": {
        "operationId": "Schema-Entities",
        "value-path": "name",
        "value-collection": "value",
        "value-title": "title"
      }
    },
    "Definition.Entity": {
      "in": "query",
      "name": "$entitySet",
      "description": "Name of the entity",
      "x-ms-summary": "Entity name",
      "required": false,
      "type": "string"
    },
    "Definition.Attribute": {
      "in": "query",
      "name": "$property",
      "description": "Name of the attribute",
      "x-ms-summary": "Attribute name",
      "required": false,
      "type": "string"
    },
    "Header.ETag": {
      "in": "header",
      "name": "If-Match",
      "description": "ETag (entity version)",
      "x-ms-summary": "ETag",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "Header.Accept": {
      "in": "header",
      "name": "Accept",
      "x-ms-visibility": "internal",
      "default": "application/json;charset=utf-8;odata.metadata=full",
      "type": "string",
      "required": true
    },
    "Header.Prefer": {
      "in": "header",
      "name": "Prefer",
      "x-ms-visibility": "internal",
      "type": "string",
      "default": "odata.include-annotations=*,resco.strictlookup=true",
      "required": true
    },
    "Record.Id": {
      "in": "path",
      "name": "id",
      "description": "Enter a globally unique identifier (GUID)",
      "x-ms-summary": "Record ID",
      "x-ms-url-encoding": "single",
      "required": true,
      "type": "string"
    },
    "List.Top": {
      "in": "query",
      "name": "$top",
      "description": "Total number of records to retrieve",
      "x-ms-summary": "Top Count",
      "x-ms-visibility": "advanced",
      "type": "integer",
      "minimum": 0
    },
    "List.Skip": {
      "in": "query",
      "name": "$skip",
      "description": "Skip the first n records",
      "x-ms-summary": "Skip count",
      "x-ms-visibility": "advanced",
      "type": "integer",
      "minimum": 0
    },
    "List.SkipToken": {
      "in": "query",
      "name": "$skiptoken",
      "description": "The token for accessing the next page of records",
      "x-ms-summary": "Skip token",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "List.Filter": {
      "in": "query",
      "name": "$filter",
      "description": "An ODATA filter query to restrict the records returned",
      "x-ms-summary": "Filter query",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "List.Select": {
      "in": "query",
      "name": "$select",
      "description": "Limit the properties returned while retrieving data",
      "x-ms-summary": "Select query",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "List.Expand": {
      "in": "query",
      "name": "$expand",
      "description": "Related records to include with requested records (default = none)",
      "x-ms-summary": "Expand query",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "List.OrderBy": {
      "in": "query",
      "name": "$orderby",
      "description": "An ODATA orderBy query for specifying the order of records",
      "x-ms-summary": "Order by",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "List.Count": {
      "in": "query",
      "name": "$count",
      "x-ms-visibility": "internal",
      "type": "boolean",
      "default": true,
      "required": true
    }
  },
  "responses": {
    "error": {
      "description": "Error response",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "User-Get",
      "parameters": {}
    }
  }
}