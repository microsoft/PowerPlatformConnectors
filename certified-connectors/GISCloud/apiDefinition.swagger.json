{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "GIS Cloud",
    "description": "This connector allows users to use any valid authorization key generated in GIS Cloud to access a list of their Map Projects, the Layers defined within and the Features contained on those layers. To accommodate the dynamic nature of Feature schema, the connector will dynamically query the service for the feature schema of a given layer.",
    "contact": {
      "name": "GIS Cloud Premium Support",
      "email": "premiumsupport@giscloud.com",
      "url": "https://docs.giscloud.com/rest"
    }
  },
  "host": "api.giscloud.com",
  "basePath": "/1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "apikey": {
      "name": "API-Key",
      "x-ms-summary": "API Key",
      "description": "GIS Cloud API Key used to Authorize the Operation",
      "in": "header",
      "type": "string",
      "required": true,
      "x-example": "77e1c83b7bb0437bbc50a7a58e5660ac"
    },
    "page": {
      "name": "page",
      "x-ms-summary": "Page No",
      "description": "Page number for the response",
      "in": "query",
      "type": "integer",
      "required": false,
      "x-example": "1"
    },
    "perpage": {
      "name": "perpage",
      "x-ms-summary": "Items Per-Page",
      "description": "Number of results per page to display (Default: 100, Maximum: 5000)",
      "in": "query",
      "type": "integer",
      "required": false,
      "x-example": "100",
      "maximum": 5000,
      "minimum": 1
    },
    "nototal": {
      "name": "nototal",
      "x-ms-summary": "No Total",
      "description": "Total of results is not counted and displayed; improves response time; used for getting the response faster",
      "in": "query",
      "type": "integer",
      "required": false,
      "enum": [
        0,
        1
      ],
      "x-example": "1"
    },
    "noattrib": {
      "name": "noattrib",
      "x-ms-summary": "Exclude Attributes",
      "description": "Feature attributes are not returned",
      "in": "query",
      "type": "integer",
      "required": false,
      "enum": [
        0,
        1
      ],
      "x-example": "1"
    },
    "order_by": {
      "name": "order_by",
      "x-ms-summary": "Order By",
      "description": "This must reference columns that exist in the target GIS Cloud object. By default the column is sorted Acending but including :desc reverses the order. Order by, format \"{created|modified|created}:[asc|desc]\" E.g. order_by=accessed:desc",
      "in": "query",
      "type": "string",
      "required": false,
      "x-example": "name"
    },
    "type": {
      "name": "type",
      "x-ms-summary": "Visibility Type",
      "description": "Filter by visibility: 'public', 'private', 'shared' or 'private,shared'",
      "in": "query",
      "type": "string",
      "required": false,
      "enum": [
        "private",
        "public",
        "shared",
        "private,shared"
      ],
      "default": "private",
      "x-example": "private",
      "x-ms-visibility": "important"
    },
    "expand": {
      "name": "expand",
      "x-ms-summary": "Expand Attributes",
      "description": "Expand response by one of the Enum options",
      "in": "query",
      "type": "string",
      "required": false,
      "enum": [
        "owner",
        "columns",
        "options",
        "analysis",
        "datasource",
        "form",
        "permissions",
        "columns,form",
        "columns,datasource",
        "options,permissions",
        "columns,form,datasource,options"
      ],
      "default": "columns",
      "x-example": "columns",
      "x-ms-visibility": "important"
    },
    "geometry": {
      "name": "geometry",
      "x-ms-summary": "Include Geometry",
      "description": "Format in which geometry will be packed. Possible values: 'geojson', 'wkt', 'kml' and 'gml'",
      "in": "query",
      "type": "string",
      "required": false,
      "enum": [
        "geojson",
        "wkt",
        "kml",
        "gml"
      ],
      "x-example": "wkt",
      "x-ms-visibility": "important"
    },
    "pgis_where": {
      "name": "where",
      "x-ms-summary": "SQL Where",
      "description": "SQL type where clause, used for attribute filtering",
      "in": "query",
      "type": "string",
      "required": false,
      "x-example": "ST_Contains()"
    },
    "epsg": {
      "name": "epsg",
      "x-ms-summary": "EPSG Projection",
      "description": "EPSG code for the output projection. if not specified default map projection is used",
      "in": "query",
      "type": "integer",
      "required": false,
      "x-example": 4326
    },
    "bounds": {
      "name": "bounds",
      "x-ms-summary": "Spatial Bounds",
      "description": "Bounding box used for spatial filtering",
      "in": "query",
      "type": "string",
      "required": false,
      "x-example": "-37,144,-36,139"
    },
    "sql_geometry": {
      "name": "geometry",
      "x-ms-summary": "Include Geometry",
      "description": "Format in which geometry will be packed. Possible values: 'wkb', 'wkt'",
      "in": "query",
      "type": "string",
      "required": false,
      "enum": [
        "false",
        "wkt",
        "wkb"
      ],
      "default": "false",
      "x-example": "wkt",
      "x-ms-visibility": "important"
    },
    "download": {
      "name": "download",
      "x-ms-summary": "Download File",
      "description": "Should a retrieved media file be downloaded directly",
      "in": "query",
      "type": "boolean",
      "required": false
    },
    "map_id": {
      "name": "map_id",
      "x-ms-summary": "Map Id",
      "description": "The internal Map Id used to identify a specific map",
      "in": "path",
      "type": "integer",
      "required": true,
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "layer_id": {
      "name": "layer_id",
      "x-ms-summary": "Layer Id",
      "description": "The internal Layer Id used to identify a specific layer",
      "in": "path",
      "type": "integer",
      "required": true,
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "feature_id": {
      "name": "feature_id",
      "x-ms-summary": "Feature Id",
      "description": "The internal Feature Id used to identify a specific feature",
      "in": "path",
      "type": "integer",
      "required": true,
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "resource_id": {
      "name": "resource_id",
      "x-ms-summary": "Resource Id",
      "description": "The internal Resource Id used to identify a specific resource",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "api_key_id": {
      "name": "api_key_id",
      "x-ms-summary": "API Key Id",
      "description": "The internal API Key Id used to identify a specific API Key",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "share_id": {
      "name": "share_id",
      "x-ms-summary": "Share Id",
      "description": "The internal Share Id used to identify a specific share permission",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "user_id": {
      "name": "user_id",
      "x-ms-summary": "User Id",
      "description": "The internal User Id used to identify a specific user",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-example": "2",
      "x-ms-url-encoding": "single"
    },
    "path_to_a_file": {
      "name": "path_to_a_file",
      "x-ms-summary": "Path to File",
      "description": "The relative path to a specific file",
      "in": "path",
      "required": true,
      "type": "string",
      "x-example": "/upload/file.jpg",
      "x-ms-url-encoding": "single"
    },
    "path_to_a_dir": {
      "name": "path_to_a_dir",
      "x-ms-summary": "Path to Folder",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The relative path to a specific folder (Do not include non URL safe characters)",
      "x-example": "uploads",
      "x-ms-url-encoding": "single"
    },
    "table_name": {
      "name": "table_name",
      "x-ms-summary": "Table Name",
      "description": "Name of a table hosted in the SaaS Database",
      "in": "path",
      "required": true,
      "type": "string",
      "x-example": "example_table_name",
      "x-ms-url-encoding": "single"
    },
    "field_name": {
      "name": "field_name",
      "x-ms-summary": "Field Name",
      "description": "Name of a feature field on a given layer",
      "in": "path",
      "required": true,
      "type": "string",
      "x-example": "media_field",
      "x-ms-url-encoding": "single"
    },
    "init_trigger": {
      "name": "init_trigger",
      "x-ms-summary": "Reinitialize Trigger",
      "description": "Should the map be reinitialized before performing the operation",
      "in": "path",
      "required": true,
      "type": "integer",
      "minimum": 2,
      "maximum": 2,
      "x-example": 2,
      "x-ms-url-encoding": "single"
    },
    "file_name": {
      "in": "path",
      "required": true,
      "type": "string",
      "name": "file_name",
      "x-ms-summary": "File Name",
      "description": "Name of a specific media file hosed on the SaaS storage",
      "x-ms-url-encoding": "single"
    },
    "layer_list": {
      "name": "layers",
      "x-ms-summary": "Layer List",
      "description": "CSV list of Layer Ids to include",
      "in": "query",
      "type": "string",
      "required": false,
      "x-example": "layer1,layer2"
    }
  },
  "tags": [
    {
      "name": "Map"
    },
    {
      "name": "Layer"
    },
    {
      "name": "Feature"
    },
    {
      "name": "User"
    },
    {
      "name": "Storage"
    }
  ],
  "paths": {
    "/maps.json": {
      "get": {
        "summary": "Get all Maps",
        "description": "Get all GIS Cloud Map Objects.",
        "operationId": "GetMaps",
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/type"
          },
          {
            "$ref": "#/parameters/expand"
          },
          {
            "$ref": "#/parameters/order_by"
          },
          {
            "$ref": "#/parameters/perpage"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/nototal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Maps"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/maps/{map_id}.json": {
      "get": {
        "summary": "Get one Map",
        "description": "Get one GIS Cloud Map Object.",
        "operationId": "GetMap",
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          },
          {
            "$ref": "#/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Map"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete one Map",
        "description": "Delete one GIS Cloud Map Project",
        "operationId": "DeleteMap",
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update one Map",
        "description": "Update one GIS Cloud Map Project",
        "operationId": "UpdateMap",
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Map Name",
                  "x-ms-summary": "Name",
                  "example": "City of Zagreb"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/map_cache/{map_id}/{init_trigger}/.json": {
      "delete": {
        "summary": "Delete Map Cache",
        "description": "Deletes the map tile cache to reflect changes made via the API.",
        "operationId": "DeleteMapCache",
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          },
          {
            "$ref": "#/parameters/init_trigger"
          },
          {
            "$ref": "#/parameters/layer_list"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/maps/{map_id}/render.jpg": {
      "get": {
        "summary": "Render one Map",
        "description": "Render image of one GIS Cloud Map Object.",
        "operationId": "RenderMap",
        "produces": [
          "image/*",
          "application/octet-stream"
        ],
        "tags": [
          "Map"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          },
          {
            "in": "query",
            "name": "width",
            "x-ms-summary": "Image Width",
            "description": "Image width in pixels",
            "type": "number",
            "default": 256
          },
          {
            "in": "query",
            "name": "height",
            "x-ms-summary": "Image Height",
            "description": "Image height in pixels",
            "type": "number",
            "default": 256
          },
          {
            "in": "query",
            "name": "invalidate",
            "x-ms-summary": "Invalidate Cache",
            "description": "Invalidate cache",
            "type": "number",
            "default": 0
          },
          {
            "in": "query",
            "name": "layerlist",
            "x-ms-summary": "Show Layer List",
            "description": "Set layerlist to visible in image",
            "type": "number",
            "default": 0
          },
          {
            "in": "query",
            "name": "justgenerate",
            "x-ms-summary": "Image Saved",
            "description": "Just generate the image without saving",
            "type": "number",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/maps/{map_id}/layers.json": {
      "get": {
        "summary": "Get all Layers on a Map",
        "description": "Get all the Layer Objects for a single GIS Cloud Map Object.",
        "operationId": "GetMapLayers",
        "tags": [
          "Map",
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/map_id"
          },
          {
            "$ref": "#/parameters/expand"
          },
          {
            "$ref": "#/parameters/order_by"
          },
          {
            "$ref": "#/parameters/perpage"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/nototal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Layers"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers.json": {
      "get": {
        "summary": "Get all Layers",
        "description": "Get all GIS Cloud Layer Objects.",
        "operationId": "GetLayers",
        "tags": [
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/expand"
          },
          {
            "$ref": "#/parameters/type"
          },
          {
            "$ref": "#/parameters/order_by"
          },
          {
            "$ref": "#/parameters/perpage"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/nototal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Layers"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers/{layer_id}.json": {
      "get": {
        "summary": "Get one Layer",
        "description": "Get all GIS Cloud Layer Object.",
        "operationId": "GetLayer",
        "tags": [
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "$ref": "#/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Layer"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete one Layer",
        "description": "Delete one GIS Cloud Layer Object.",
        "operationId": "DeleteLayer",
        "tags": [
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Operation successful"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update one Layer",
        "description": "Update one GIS Cloud Layer Object.",
        "operationId": "UpdateLayer",
        "tags": [
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Layer Name",
                  "x-ms-summary": "Name",
                  "example": "Updated layer name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers/{layer_id}/columns.json": {
      "get": {
        "summary": "Get Columns for Layer",
        "description": "Get a list of columns for a layer",
        "operationId": "GetLayerColumns",
        "tags": [
          "Layer"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers/{layer_id}/features.json": {
      "get": {
        "summary": "Get Features on a Layer",
        "description": "Get all GIS Cloud Feature Objects on a Layer Object.",
        "operationId": "GetFeatures",
        "tags": [
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "$ref": "#/parameters/geometry"
          },
          {
            "$ref": "#/parameters/epsg"
          },
          {
            "$ref": "#/parameters/bounds"
          },
          {
            "$ref": "#/parameters/pgis_where"
          },
          {
            "$ref": "#/parameters/order_by"
          },
          {
            "$ref": "#/parameters/perpage"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/nototal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Features"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create new Feature on a Layer",
        "description": "Get all GIS Cloud Feature Objects on a Layer Object.",
        "operationId": "CreateFeature",
        "tags": [
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "Data to create a new feature from, anything left blank will be created as null.",
            "schema": {
              "$ref": "#/definitions/NewFeature"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "headers": {
              "location": {
                "type": "string",
                "description": "URL link to the newly created feature with the API host removed"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers/{layer_id}/features/{feature_id}.json": {
      "get": {
        "summary": "Get Feature",
        "description": "Get one GIS Cloud Feature Object on a Layer Object.",
        "operationId": "GetFeature",
        "tags": [
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/feature_id"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "$ref": "#/parameters/geometry"
          },
          {
            "$ref": "#/parameters/epsg"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Feature",
        "description": "Deletes the specified GIS Cloud feature object from the layer.",
        "operationId": "DeleteFeature",
        "tags": [
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/feature_id"
          },
          {
            "$ref": "#/parameters/layer_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update Feature",
        "description": "Update one GIS Cloud Feature Object on a Layer Object.",
        "operationId": "UpdateFeature",
        "tags": [
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/feature_id"
          },
          {
            "$ref": "#/parameters/layer_id"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "The new feature data to be updated",
            "schema": {
              "$ref": "#/definitions/NewFeature"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Updated"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/layers/{layer_id}/features/{feature_id}/{field_name}/{path_to_a_file}": {
      "get": {
        "summary": "Get a Media Filed from Feature field",
        "description": "Get one Media File from a GIS Cloud Feature Object field on a Layer Object.",
        "operationId": "GetFeatureMediaFile",
        "produces": [
          "image/*",
          "application/pdf",
          "application/octet-stream"
        ],
        "tags": [
          "Storage",
          "Feature"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/download"
          },
          {
            "$ref": "#/parameters/path_to_a_file"
          },
          {
            "$ref": "#/parameters/field_name"
          },
          {
            "$ref": "#/parameters/feature_id"
          },
          {
            "$ref": "#/parameters/layer_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/fs/{path_to_a_file}": {
      "post": {
        "summary": "Upload one File",
        "description": "Uploads a file to GIS Cloud storage.",
        "operationId": "UploadFileToPath",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "name": "filedata",
            "x-ms-summary": "File Data",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "destination_map",
            "x-ms-summary": "Destination Map ID",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The Map ID of the shared map. If set, uploads file to map owners storage."
          },
          {
            "$ref": "#/parameters/path_to_a_file"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "location": {
                "type": "string",
                "description": "Loaction of uploaded file"
              }
            }
          },
          "404": {
            "description": "Failed"
          }
        }
      }
    },
    "/storage/fs/{path_to_a_file}/{file_name}": {
      "get": {
        "summary": "Get one File",
        "description": "Download one file from GIS Cloud storage.",
        "operationId": "GetFileByPath",
        "produces": [
          "image/*",
          "application/pdf",
          "application/octet-stream"
        ],
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/path_to_a_file"
          },
          {
            "$ref": "#/parameters/file_name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove one File",
        "description": "Removes a file in GIS Cloud storage.",
        "operationId": "DeleteFileAtPath",
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/file_name"
          },
          {
            "$ref": "#/parameters/path_to_a_file"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": {}
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/current.json": {
      "get": {
        "summary": "Get current User Object",
        "description": "Get current GIS Cloud User Object.",
        "operationId": "GetCurrentUser",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{user_id}.json": {
      "get": {
        "summary": "Get User Object by ID",
        "description": "Get GIS Cloud User Object by the user ID.",
        "operationId": "GetUserDetails",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apikey"
          },
          {
            "$ref": "#/parameters/user_id"
          },
          {
            "$ref": "#/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "responses": {},
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": [
            "RESOURCE_NOT_FOUND",
            "FORBIDDEN",
            "METHOD_NOT_ALLOWED"
          ]
        },
        "msg": {
          "type": "string",
          "example": [
            "Resource not found",
            "Forbidden",
            "Method not allowed."
          ]
        }
      },
      "required": [
        "code",
        "msg"
      ]
    },
    "Maps": {
      "type": "object",
      "required": [
        "type",
        "total",
        "page",
        "data"
      ],
      "properties": {
        "type": {
          "type": "string",
          "x-ms-summary": "Object Type",
          "description": "String representing the type of object returned",
          "enum": [
            "maps"
          ],
          "x-ms-visibility": "internal"
        },
        "total": {
          "type": "integer",
          "x-ms-summary": "Total Records",
          "description": "Total count of records that could be retrieved",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "x-ms-summary": "Current Page",
          "description": "The number of the page that is returned",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "x-ms-summary": "Map Objects",
          "description": "Array of map objects returned",
          "items": {
            "$ref": "#/definitions/Map"
          }
        }
      }
    },
    "Map": {
      "type": "object",
      "required": [
        "id",
        "name",
        "created",
        "modified",
        "accessed"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Internal ID of this Map",
          "x-ms-summary": "Map ID",
          "example": "1198"
        },
        "name": {
          "type": "string",
          "description": "Map Name",
          "x-ms-summary": "Name",
          "example": "City of Zagreb"
        },
        "owner": {
          "type": "string",
          "description": "Map owner object. This value only appears if the expand parameter contains the key 'owner'",
          "x-ms-summary": "Owner Object"
        },
        "active": {
          "type": "string",
          "description": "Is the map active",
          "x-ms-summary": "Active",
          "example": "1"
        },
        "copyright": {
          "type": "string",
          "description": "Copyright statement string",
          "x-ms-summary": "Copyright",
          "example": "meter"
        },
        "proj4": {
          "type": "string",
          "description": "Proj4 map projection",
          "x-ms-summary": "Proj4",
          "example": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
        },
        "units_proj4": {
          "type": "string",
          "description": "Units of the Proj4 definition",
          "x-ms-summary": "Proj4 Units",
          "example": "meter"
        },
        "epsg": {
          "type": "string",
          "description": "EPSG map projection code",
          "x-ms-summary": "EPSG Code",
          "example": "900913"
        },
        "units": {
          "type": "string",
          "description": "Map units (meter, foot or foot_us)",
          "x-ms-summary": "Map Units",
          "example": "meter"
        },
        "maxzoom": {
          "type": "string",
          "description": "Maximum zoom",
          "x-ms-summary": "Max Zoom",
          "example": "0"
        },
        "bgcolor": {
          "type": "string",
          "description": "Map background color",
          "x-ms-summary": "Background Color",
          "example": "#ff0000"
        },
        "modified": {
          "type": "integer",
          "format": "int32",
          "description": "Last time map was modified (UNIX timestamp)",
          "x-ms-summary": "Modified At",
          "example": 1602773958
        },
        "accessed": {
          "type": "integer",
          "format": "int32",
          "description": "Last time map was accessed (UNIX timestamp)",
          "x-ms-summary": "Accessed At",
          "example": 1602773958
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Time when map was created (UNIX timestamp)",
          "x-ms-summary": "Created At",
          "example": 1593945880
        },
        "visited": {
          "type": "string",
          "description": "Number of map views",
          "x-ms-summary": "View Count",
          "example": "302"
        },
        "archived": {
          "type": "string",
          "description": "Is map archived",
          "x-ms-summary": "Archived",
          "example": "f"
        },
        "resource_id": {
          "type": "string",
          "description": "resource_id",
          "x-ms-summary": "Resource ID",
          "example": "14124"
        },
        "measure_unit": {
          "type": "string",
          "description": "measure_unit",
          "x-ms-summary": "Measure Unit",
          "example": "meter"
        },
        "visible": {
          "type": "string",
          "description": "visible",
          "x-ms-summary": "Visible",
          "enum": [
            "t",
            "f"
          ],
          "example": "t"
        },
        "resource": {
          "type": "string",
          "description": "Map resource object",
          "x-ms-summary": "Resource Object"
        },
        "description": {
          "type": "string",
          "description": "Map description",
          "x-ms-summary": "Description"
        },
        "mobileacess": {
          "type": "string",
          "description": "mobileacess",
          "x-ms-summary": "mobileacess"
        },
        "wmsaccess": {
          "type": "string",
          "description": "wmsaccess",
          "x-ms-summary": "wmsaccess"
        },
        "maptype": {
          "type": "string",
          "description": "maptype",
          "x-ms-summary": "maptype"
        },
        "assets": {
          "type": "string",
          "description": "assets",
          "x-ms-summary": "assets"
        },
        "rating": {
          "type": "string",
          "description": "rating",
          "x-ms-summary": "rating"
        },
        "share": {
          "type": "string",
          "description": "share",
          "x-ms-summary": "share"
        },
        "bounds": {
          "type": "object",
          "properties": {
            "xmin": {
              "type": "number",
              "format": "float",
              "description": "xmin",
              "x-ms-summary": "Bounds xMin"
            },
            "xmax": {
              "type": "number",
              "format": "float",
              "description": "xmax",
              "x-ms-summary": "Bounds xMax"
            },
            "ymin": {
              "type": "number",
              "format": "float",
              "description": "ymin",
              "x-ms-summary": "Bounds yMin"
            },
            "ymax": {
              "type": "number",
              "format": "float",
              "description": "ymax",
              "x-ms-summary": "Bounds yMax"
            }
          },
          "description": "bounds"
        },
        "bound": {
          "type": "string",
          "description": "bound",
          "x-ms-summary": "bound"
        }
      }
    },
    "Layers": {
      "type": "object",
      "required": [
        "type",
        "total",
        "page",
        "data"
      ],
      "properties": {
        "type": {
          "type": "string",
          "x-ms-summary": "Object Type",
          "description": "String representing the type of object returned",
          "enum": [
            "layers"
          ],
          "x-ms-visibility": "internal"
        },
        "total": {
          "type": "integer",
          "x-ms-summary": "Total Records",
          "description": "Total count of records that could be retrieved",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "x-ms-summary": "Current Page",
          "description": "The number of the page that is returned",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "x-ms-summary": "Layer Objects",
          "description": "Array of layer objects returned",
          "items": {
            "$ref": "#/definitions/Layer"
          }
        }
      }
    },
    "Layer": {
      "type": "object",
      "required": [
        "id",
        "name",
        "created",
        "modified"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The internal ID of the layer",
          "x-ms-summary": "Layer Id",
          "example": "3827"
        },
        "name": {
          "type": "string",
          "description": "User defined layer name",
          "x-ms-summary": "Layer Name",
          "example": "Open Street Map"
        },
        "owner": {
          "type": "string",
          "description": "Layer owner object, EXPANDABLE",
          "x-ms-summary": "Owner Object"
        },
        "source": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of data supplied",
              "x-ms-summary": "Layer Source Type",
              "example": "tile"
            },
            "src": {
              "type": "string",
              "description": "URI string defining where the data is",
              "x-ms-summary": "Layer Source URI",
              "example": "osm"
            }
          },
          "description": "Defines the data source supplying the layer, EXPANDABLE",
          "x-ms-summary": "Layer Source"
        },
        "onscale": {
          "type": "string",
          "description": "Set scale on which layer is visible",
          "x-ms-summary": "OnScale",
          "example": "9"
        },
        "offscale": {
          "type": "string",
          "description": "Set scale on which layer is hidden",
          "x-ms-summary": "OffScale",
          "example": "12"
        },
        "label": {
          "type": "string",
          "description": "Attribute name of the datasource to use for a line label",
          "x-ms-summary": "Layer Label"
        },
        "x_min": {
          "type": "string",
          "description": "Layer bound X min coordinate",
          "x-ms-summary": "x Min",
          "example": "-20037508.342789"
        },
        "x_max": {
          "type": "string",
          "description": "Layer bound X max coordinate",
          "x-ms-summary": "x Max",
          "example": "20037508.342789"
        },
        "y_min": {
          "type": "string",
          "description": "Layer bound Y min coordinate",
          "x-ms-summary": "y Min",
          "example": "-20037508.342789"
        },
        "y_max": {
          "type": "string",
          "description": "Layer bound Y max coordinate",
          "x-ms-summary": "y Max",
          "example": "20037508.342789"
        },
        "textfield": {
          "type": "string",
          "description": "Attribute name of the datasource to use as a text field",
          "x-ms-summary": "Layer Text Field"
        },
        "modified": {
          "type": "integer",
          "format": "int32",
          "description": "Last time map was modified (UNIX timestamp)",
          "x-ms-summary": "Modified At",
          "example": 1602773958
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Time when map was created (UNIX timestamp)",
          "x-ms-summary": "Created At",
          "example": 1593945880
        },
        "styles": {
          "type": "string",
          "description": "Complex layer style object for layer styling",
          "x-ms-summary": "Layer Styles"
        },
        "alpha": {
          "type": "string",
          "description": "Layer transparency",
          "x-ms-summary": "Layer Alpha",
          "example": "100"
        },
        "encoding": {
          "type": "string",
          "description": "Layer datasource encoding",
          "x-ms-summary": "Layer Datasource Encoding"
        },
        "margin": {
          "type": "string",
          "description": "Text field margin",
          "x-ms-summary": "Layer Text Margin"
        },
        "visible": {
          "type": "string",
          "description": "Controls layer visibility, 't' or 'f'",
          "x-ms-summary": "Layer Visibility",
          "example": "t"
        },
        "lock": {
          "type": "string",
          "description": "Controls layer interactivity, 't' or 'f'",
          "x-ms-summary": "Layer Locked",
          "example": "f"
        },
        "raster": {
          "type": "string",
          "description": "Layer is a Raster data source, 't' or 'f'",
          "x-ms-summary": "Raster Layer",
          "example": "f"
        },
        "grp": {
          "type": "string",
          "description": "Layer is part of a group",
          "x-ms-summary": "Layer Group",
          "x-ms-visibility": "internal"
        },
        "exportable": {
          "type": "string",
          "description": "Set if the layer can be exported, 't' or 'f'",
          "x-ms-summary": "Layer Exportable",
          "example": "t"
        },
        "merged": {
          "type": "string",
          "description": "Layer is merged",
          "x-ms-summary": "Merged Layer",
          "example": "t"
        },
        "layerclass": {
          "type": "string",
          "description": "Layers defined class",
          "x-ms-summary": "Layer Class",
          "x-ms-visibility": "internal"
        },
        "layerid": {
          "type": "string",
          "description": "Layer ID depricated field",
          "x-ms-summary": "Layer Id Secondary",
          "x-ms-visibility": "internal"
        },
        "ds_map_id": {
          "type": "string",
          "description": "Layer DS Map Id",
          "x-ms-summary": "Layer DS Mapy Id",
          "x-ms-visibility": "internal"
        },
        "dynamic_mode": {
          "type": "string",
          "description": "Layer Dynamic Mode",
          "x-ms-summary": "Layer Dynamic",
          "x-ms-visibility": "internal"
        },
        "geometry_offset": {
          "type": "string",
          "description": "Layer Geometry Offset",
          "x-ms-summary": "Layer Geom Offset",
          "x-ms-visibility": "internal"
        },
        "geometry_precision": {
          "type": "string",
          "description": "Layer Geometry_precision",
          "x-ms-summary": "Layer Geom Precision",
          "x-ms-visibility": "internal"
        },
        "label_placement": {
          "type": "string",
          "description": "Layer Label Placement",
          "x-ms-summary": "Layer Label Placement",
          "x-ms-visibility": "internal"
        },
        "parent": {
          "type": "string",
          "description": "Parent folder layer ID",
          "x-ms-summary": "Layer Parent Folder"
        },
        "tooltip": {
          "type": "string",
          "description": "Tooltip that appears on the layer features mouse hover",
          "x-ms-summary": "Layer Tooltip"
        },
        "hidegeometry": {
          "type": "string",
          "description": "Hide layer geometry. Can be useful if we want to show only labels, 't' or 'f'",
          "x-ms-summary": "Hide Geometry"
        },
        "use_info_window": {
          "type": "string",
          "description": "Show layer features info in a map popup, 't' or 'f'",
          "x-ms-summary": "Use Info Popup",
          "example": "t"
        },
        "datasource_id": {
          "type": "integer",
          "description": "Datasource ID of the layer data source",
          "x-ms-summary": "Layer Datasource Id"
        },
        "epsg": {
          "type": "string",
          "description": "Datasource EPSG code",
          "x-ms-summary": "Layer EPSG",
          "example": "900913"
        },
        "opened": {
          "type": "string",
          "description": "For folder layer open/close boolean value, 't' or 'f'",
          "x-ms-summary": "Layer Opened",
          "example": "f"
        },
        "resource_id": {
          "type": "string",
          "description": "Resource ID of the layer",
          "x-ms-summary": "Layer Resource Id",
          "example": "14125"
        },
        "map_id": {
          "type": "string",
          "description": "Map ID that layer belongs to",
          "x-ms-summary": "Layer Map Id",
          "example": "1198"
        },
        "type": {
          "type": "string",
          "description": "Layer geometry type. Possible values are 'point', 'line', 'polygon', 'tile' and 'wms'.",
          "x-ms-summary": "Layer Geom Type",
          "example": "polygon"
        },
        "order": {
          "type": "string",
          "description": "Layer Z index",
          "x-ms-summary": "Layer Order",
          "example": "0"
        },
        "x-gc-columns": {
          "type": "object",
          "description": "Custom generated schema to provide dynamic lookup of feature schema",
          "x-ms-summary": "GC Schema",
          "x-ms-visibility": "internal",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              }
            }
          }
        },
        "options": {
          "type": "object",
          "description": "List of options tied to this resource. This value only appears if the expand parameter contains the key 'options'",
          "x-ms-summary": "Layer Options Object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the key value pair of extra options",
                "x-ms-summary": "Option Name"
              },
              "value": {
                "type": "string",
                "description": "Value of the key value pair of extra options",
                "x-ms-summary": "Option Value"
              }
            }
          }
        },
        "form": {
          "type": "object",
          "description": "Show form object attached to the layer, EXPANDABLE",
          "x-ms-summary": "Layer Attached Form",
          "properties": {
            "name": {
              "type": "string",
              "description": "User defined name of the attached form",
              "x-ms-summary": "Form Name"
            },
            "definition": {
              "type": "string",
              "description": "Definition of the form attached to the layer",
              "x-ms-summary": "Layer Form Definition"
            }
          }
        },
        "datasource": {
          "type": "object",
          "description": "Layer datasource object, EXPANDABLE",
          "x-ms-summary": "Layer Datasource Object",
          "properties": {
            "resource_id": {
              "type": "string",
              "description": "Resource Id of the datasource",
              "x-ms-summary": "Datasource Resource Id",
              "example": "14125"
            },
            "type": {
              "type": "integer",
              "description": "Datasource Type for the layer",
              "x-ms-summary": "Datasource Type"
            },
            "owner_id": {
              "type": "integer",
              "description": "owner_id",
              "x-ms-summary": "Datasource Owner Id"
            },
            "permissions": {
              "type": "array",
              "description": "name",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "columns": {
          "type": "object",
          "description": "Show layer datasource columns, EXPANDABLE",
          "x-ms-summary": "Layer Column Schema",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Layer Column Id",
                "x-ms-summary": "Column Id",
                "x-ms-visibility": "internal"
              },
              "datatype": {
                "type": "string",
                "description": "JSON string of Datatype",
                "x-ms-summary": "Column Datatype"
              },
              "alias": {
                "type": "string",
                "description": "Alias name override for the column",
                "x-ms-summary": "Column Alias Name"
              },
              "order": {
                "type": "integer",
                "description": "What order should the column be shown",
                "x-ms-summary": "Column Order"
              },
              "column": {
                "type": "string",
                "description": "Integer lookup of Datatype",
                "x-ms-summary": "Column Datasource Name"
              },
              "enabled": {
                "type": "boolean",
                "description": "Should the column be showed",
                "x-ms-summary": "Column Enabled"
              }
            }
          }
        }
      }
    },
    "Features": {
      "type": "object",
      "required": [
        "type",
        "total",
        "page",
        "data"
      ],
      "properties": {
        "type": {
          "type": "string",
          "x-ms-summary": "Object Type",
          "description": "String representing the type of object returned",
          "enum": [
            "features"
          ],
          "x-ms-visibility": "internal"
        },
        "total": {
          "type": "integer",
          "x-ms-summary": "Total Records",
          "description": "Total count of records that could be retrieved",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "x-ms-summary": "Current Page",
          "description": "The number of the page that is returned",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "x-ms-summary": "Feature Objects",
          "description": "Array of feature objects returned",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        }
      }
    },
    "Feature": {
      "type": "object",
      "required": [
        "__id"
      ],
      "properties": {
        "__id": {
          "type": "integer",
          "format": "int32",
          "description": "Integer feature Id",
          "x-ms-summary": "Feature Id"
        },
        "__owner": {
          "type": "integer",
          "format": "int32",
          "description": "owner",
          "x-ms-summary": "Owner Id"
        },
        "__ymax": {
          "type": "number",
          "format": "float",
          "description": "ymax",
          "x-ms-summary": "Bounds yMax"
        },
        "__ymin": {
          "type": "number",
          "format": "float",
          "description": "ymin",
          "x-ms-summary": "Bounds yMin"
        },
        "__xmax": {
          "type": "number",
          "format": "float",
          "description": "xmax",
          "x-ms-summary": "Bounds xMax"
        },
        "__xmin": {
          "type": "number",
          "format": "float",
          "description": "xmin",
          "x-ms-summary": "Bounds xMin"
        },
        "__modified": {
          "type": "integer",
          "format": "int32",
          "description": "Last time map was modified (UNIX timestamp)",
          "x-ms-summary": "Modified At",
          "example": 1602773958
        },
        "__created": {
          "type": "integer",
          "format": "int32",
          "description": "Time when map was created (UNIX timestamp)",
          "x-ms-summary": "Created At",
          "example": 1593945880
        },
        "__geometry": {
          "type": "string",
          "description": "geometry",
          "x-ms-summary": "Geometry String"
        },
        "data": {
          "$ref": "#/definitions/FeatureRecord"
        }
      }
    },
    "NewFeature": {
      "type": "object",
      "properties": {
        "geometry": {
          "type": "string",
          "description": "WKT (Well-Known Text) format string of new geometry",
          "x-ms-summary": "Geometry"
        },
        "data": {
          "$ref": "#/definitions/FeatureRecord"
        }
      }
    },
    "FeatureRecord": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetLayer",
        "parameters": {
          "API-Key": {
            "parameter": "API-Key"
          },
          "layer_id": {
            "parameter": "layer_id"
          },
          "expand": "columns"
        },
        "value-path": "x-gc-columns"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique User Id",
          "x-ms-summary": "User Id",
          "example": 1001
        },
        "type": {
          "type": "string",
          "description": "Specified type of User",
          "x-ms-summary": "User Type"
        },
        "active": {
          "type": "string",
          "description": "Is the user active, 't' or 'f'",
          "x-ms-summary": "User Active",
          "example": "t"
        },
        "username": {
          "type": "string",
          "description": "Users Username",
          "x-ms-summary": "Username",
          "example": "johnsmith"
        },
        "firstname": {
          "type": "string",
          "description": "Users First Name",
          "x-ms-summary": "User First Name",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "description": "Users Last Name",
          "x-ms-summary": "User Last Name",
          "example": "Smith"
        },
        "owner_id": {
          "type": "integer",
          "format": "int32",
          "description": "User Id of the User owning this User",
          "x-ms-summary": "User Owner Id",
          "example": 202
        },
        "phone": {
          "type": "string",
          "description": "Users Phone Number",
          "x-ms-summary": "User Phone",
          "example": "+38199123456"
        },
        "mobile": {
          "type": "string",
          "description": "Users Mobile Number",
          "x-ms-summary": "User Mobile",
          "example": "+38199123456"
        },
        "created": {
          "type": "integer",
          "format": "int32",
          "description": "Time when map was created (UNIX timestamp)",
          "x-ms-summary": "Created At",
          "example": 1593945880
        },
        "lastlog": {
          "type": "integer",
          "format": "int32",
          "description": "Time when map was created (UNIX timestamp)",
          "x-ms-summary": "Last Login",
          "example": 1593945880
        },
        "company": {
          "type": "string",
          "description": "Users Company Name",
          "x-ms-summary": "User Company",
          "example": "GIS Cloud"
        },
        "web": {
          "type": "string",
          "description": "User Profile Website",
          "x-ms-summary": "User Web URL",
          "example": "www.giscloud.com"
        },
        "email": {
          "type": "string",
          "description": "Users email address",
          "x-ms-summary": "User Email",
          "example": "johnsmith@giscloud.com"
        },
        "avatar": {
          "type": "string",
          "description": "URL to retrieve users avatar",
          "x-ms-summary": "User Avatar"
        },
        "email_md5": {
          "type": "string",
          "description": "Users Email address hashed via MD5",
          "x-ms-summary": "User MD5 Email Hash",
          "x-ms-visibility": "internal"
        },
        "info_source": {
          "type": "string",
          "description": "Where user info was obtained from",
          "x-ms-summary": "User Info Source",
          "example": "source/manager",
          "x-ms-visibility": "internal"
        },
        "language": {
          "type": "string",
          "description": "Users selected language",
          "x-ms-summary": "User Language",
          "example": "en"
        },
        "api_calls": {
          "type": "string",
          "description": "Number of remaining API calls",
          "x-ms-summary": "API Calls",
          "x-ms-visibility": "internal"
        },
        "last_api_reset": {
          "type": "string",
          "description": "When API limit was last reset",
          "x-ms-summary": "Last API Reset",
          "x-ms-visibility": "internal"
        },
        "file_feature_count": {
          "type": "integer",
          "description": "Geographic Feature count on the File System",
          "x-ms-summary": "File Feature Count",
          "example": 2201171
        },
        "db_feature_count": {
          "type": "integer",
          "description": "Geographic Feature count in the Database",
          "x-ms-summary": "DB Feature Count",
          "example": 245249
        },
        "storage_raster": {
          "type": "integer",
          "description": "File Storage Consumed by Raster Tiles",
          "x-ms-summary": "User Raster Stored",
          "example": 124743678
        },
        "storage_total": {
          "type": "integer",
          "description": "Total File Storage Consumed",
          "x-ms-summary": "User Storage Capcity",
          "example": 2130925920
        },
        "feature_count_limit": {
          "type": "integer",
          "description": "Licenced Max Feature Count",
          "x-ms-summary": "User Feature Limit",
          "example": 20000000
        },
        "storage_raster_limit": {
          "type": "integer",
          "description": "Licenced Max Storage Capacity",
          "x-ms-summary": "User Raster Limit",
          "example": 1048576000000
        },
        "usage": {
          "type": "string",
          "description": "Depricated representation of used licence capacity",
          "x-ms-summary": "Usage",
          "x-ms-visibility": "internal"
        },
        "subscription_begins": {
          "type": "integer",
          "format": "int32",
          "description": "When the users subscription begins",
          "x-ms-summary": "Subscription Begins",
          "example": 1570757212
        },
        "subscription_expires": {
          "type": "integer",
          "format": "int32",
          "description": "When the users subscription ends",
          "x-ms-summary": "Subscription Expires",
          "example": 1570757212
        },
        "agreed": {
          "type": "string",
          "description": "Has the user agreed to the platform terms",
          "x-ms-summary": "User Agreed",
          "x-ms-visibility": "internal",
          "example": "1"
        },
        "email_notification": {
          "type": "string",
          "description": "Should the user receive Email Notifications",
          "x-ms-summary": "Email Notifications",
          "x-ms-visibility": "internal",
          "example": "0"
        },
        "email_notification_type": {
          "type": "string",
          "description": "What kind of email notifications are sent",
          "x-ms-summary": "Notification Types",
          "x-ms-visibility": "internal",
          "example": "0"
        },
        "resource_id": {
          "type": "integer",
          "description": "Internal Resource Id for this User",
          "x-ms-summary": "User Resource Id",
          "example": 18495
        },
        "modified": {
          "type": "string",
          "description": "Last modified date time (UNIX format)",
          "x-ms-summary": "User last modified",
          "example": "1570757212"
        },
        "organization_id": {
          "type": "integer",
          "description": "Organization Id for this User",
          "x-ms-summary": "Users Organization",
          "example": 18495
        },
        "oidc": {
          "type": "string",
          "description": "OpenID Connect",
          "x-ms-summary": "User OIDC",
          "example": "f"
        },
        "status": {
          "type": "string",
          "description": "Current user status",
          "x-ms-summary": "Status",
          "example": "0",
          "x-ms-visibility": "internal"
        },
        "should_reset_username": {
          "type": "string",
          "description": "should_reset_username",
          "x-ms-summary": "Reset Username",
          "x-ms-visibility": "internal"
        },
        "options": {
          "type": "string",
          "description": "List of options tied to the user. This value only appears if the 'expand' parameter contains the key 'options'",
          "x-ms-summary": "User Options"
        },
        "consents": {
          "type": "array",
          "description": "User consent agreements Object",
          "items": {
            "type": "object",
            "properties": {
              "purpose": {
                "type": "string",
                "description": "The purpose of the consent requested",
                "x-ms-summary": "Consent Purpose"
              },
              "version": {
                "type": "string",
                "description": "The version of the consent granted",
                "x-ms-summary": "Consent Version"
              },
              "agreed": {
                "type": "string",
                "description": "Was the consent granted",
                "x-ms-summary": "Consent Agreed"
              }
            }
          }
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "http://www.giscloud.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.giscloud.com/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data; Business Intelligence"
    }
  ]
}