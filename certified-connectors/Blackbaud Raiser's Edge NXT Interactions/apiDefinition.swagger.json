{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud Raisers Edge NXT Int",
    "description": "Blackbaud Raiser's Edge NXT is a comprehensive cloud-based fundraising and donor management software solution built specifically for nonprofits and the entire social good community. Use the Interactions connector to manage constituent actions.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-raisers-edge-nxt"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "skyApiOAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2.sky.blackbaud.com/authorization",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "skyApiOAuth": []
    }
  ],
  "paths": {
    "/constituent/v1/actions": {
      "get": {
        "operationId": "ListActions",
        "summary": "List actions",
        "description": "Returns a list of actions.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "query",
            "description": "Defines a list identifier used to filter the set of actions to those included in the specified list. If this value is set, other specified filters will be ignored.",
            "type": "string",
            "x-ms-summary": "List",
            "x-ms-dynamic-values": {
              "operationId": "ListLists",
              "value-collection": "value",
              "value-path": "id",
              "value-title": "name",
              "parameters": {
                "list_type": "Action"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "ListLists",
              "itemsPath": "value",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "parameters": {
                "list_type": {
                  "value": "Action"
                }
              }
            }
          },
          {
            "name": "computed_status",
            "in": "query",
            "description": "Represents a filter for results based on the computed action status. Available values are Open, Completed, or PastDue.",
            "type": "string",
            "x-ms-summary": "Computed status"
          },
          {
            "name": "status_code",
            "in": "query",
            "description": "Represents an action status code to filter the results (only applicable when the system is configured to use action status codes). For example, \"Pending\" returns actions with a status of \"Pending\".",
            "type": "string",
            "x-ms-summary": "Status"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 500. The maximum is 5000.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to actions created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "last_modified",
            "in": "query",
            "description": "Filter the results to actions modified on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Modified on or after",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfActionRead"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the actions."
          }
        }
      },
      "post": {
        "operationId": "CreateAction",
        "summary": "Create a constituent action",
        "description": "Creates a new constituent action.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionAdd"
            },
            "description": "An object that represents the action to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an action. The response body contains the ID of the new action.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.CreatedAction"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the action."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/{action_id}": {
      "get": {
        "operationId": "GetAction",
        "summary": "Get a constituent action",
        "description": "Returns information about a constituent action.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "The system record ID of the action to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionRead"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the action."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      },
      "patch": {
        "operationId": "EditAction",
        "summary": "Update a constituent action",
        "description": "Updates a constituent action.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "The system record ID of the action to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionEdit"
            },
            "description": "An object that represents the properties of the action to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the action."
          },
          "400": {
            "description": "Returned when the specified action ID in the request URL body or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the action."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/{action_id}/attachments": {
      "get": {
        "operationId": "ListActionAttachments",
        "summary": "List action attachments",
        "description": "Lists the attachments for an action.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "The system record ID of the action.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfActionAttachmentRead"
            }
          },
          "400": {
            "description": "Returned when the specified action ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attachments."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/{action_id}/customfields": {
      "get": {
        "operationId": "ListActionCustomFields",
        "summary": "List action custom fields",
        "description": "Lists the custom fields for an action.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "The system record ID of the action.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Action ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfActionCustomFieldRead"
            }
          },
          "400": {
            "description": "Returned when the specified action ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the custom fields."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/attachments": {
      "post": {
        "operationId": "CreateActionAttachment",
        "summary": "Create an action attachment",
        "description": "Creates a new action attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionAttachmentAdd"
            },
            "description": "An object that represents the attachment to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an attachment. The response body contains the ID of the new attachment.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.CreatedActionAttachment"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the attachment."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/attachments/{attachment_id}": {
      "patch": {
        "operationId": "EditActionAttachment",
        "summary": "Update an action attachment",
        "description": "Updates an action attachment.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "The system record ID of the attachment to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Attachment ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionAttachmentEdit"
            },
            "description": "An object that represents the properties of the attachment to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the attachment."
          },
          "400": {
            "description": "Returned when the specified attachment ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the attachment."
          },
          "404": {
            "description": "Returned when the specified attachment is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/customfields": {
      "post": {
        "operationId": "CreateActionCustomField",
        "summary": "Create an action custom field",
        "description": "Creates a new action custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionCustomFieldAdd"
            },
            "description": "An object that represents the custom field to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a custom field. The response body contains the ID of the new custom field.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.CreatedActionCustomField"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the custom field."
          },
          "404": {
            "description": "Returned when the specified action is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/customfields/{custom_field_id}": {
      "patch": {
        "operationId": "EditActionCustomField",
        "summary": "Update an action custom field",
        "description": "Updates an action custom field.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "The system record ID of the custom field to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Custom field ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ActionCustomFieldEdit"
            },
            "description": "An object that represents the properties of the custom field to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the custom field."
          },
          "400": {
            "description": "Returned when the specified custom field ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the custom field."
          },
          "404": {
            "description": "Returned when the specified custom field is not found."
          }
        }
      }
    },
    "/constituent/v1/actions/customfields/categories/details": {
      "get": {
        "operationId": "ListActionCustomFieldCategoryDetails",
        "summary": "List custom field categories",
        "description": "Lists the action custom field category details.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfCustomFieldCategoryRead"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view custom field categories."
          }
        }
      }
    },
    "/constituent/v1/constituents/{constituent_id}/actions": {
      "get": {
        "operationId": "ListConstituentActions",
        "summary": "List constituent actions",
        "description": "Lists the actions for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ConstituentApi.ApiCollectionOfActionRead"
            }
          },
          "400": {
            "description": "Returned when the specified ID is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the actions."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/list/v1/lists": {
      "get": {
        "operationId": "ListLists",
        "summary": "List lists",
        "description": "Get a list of lists.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_type",
            "in": "query",
            "description": "The type of list to return.",
            "required": true,
            "type": "string",
            "x-ms-summary": "List type",
            "default": "Constituent",
            "enum": [
              "Constituent",
              "Gift",
              "Action",
              "Opportunity"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/ListApi.ApiCollectionOfList"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues": {
      "get": {
        "operationId": "GetDynamicValues",
        "summary": "Get dynamic values",
        "description": "List dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "route",
            "in": "query",
            "description": "The route within the specified SKY API to call to produce the values for the dynamic list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicvalues/customfields": {
      "get": {
        "operationId": "GetCustomFieldCodeTableDynamicValues",
        "summary": "Get custom field code table dynamic values",
        "description": "List custom field code table dynamic values.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the route that will be used to populate the dynamic values list.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicValuesCollection"
            }
          }
        }
      }
    },
    "/powerautomateui/v1/dynamicproperties/customfields": {
      "get": {
        "operationId": "GetCustomFieldDynamicProperties",
        "summary": "Get custom field dynamic properties",
        "description": "List custom field dynamic properties.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "description": "The underlying SKY API containing the endpoint that will be used to fetch the custom field category definition.",
            "required": true,
            "type": "string",
            "enum": [
              "constituent",
              "gift",
              "fundraising",
              "opportunity"
            ]
          },
          {
            "name": "custom_field_type",
            "in": "query",
            "description": "The type of entity that owns the custom field.",
            "required": true,
            "type": "string",
            "enum": [
              "actions",
              "constituents",
              "appeals",
              "campaigns",
              "funds",
              "gifts",
              "opportunities"
            ]
          },
          {
            "name": "category",
            "in": "query",
            "description": "The custom field category.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/PowerAutomateUIApi.DynamicProperties"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConstituentApi.ActionAdd": {
      "type": "object",
      "description": "Actions track the interactions and tasks that are required to secure gifts and cultivate relationships with constituents.",
      "required": [
        "constituent_id",
        "category",
        "date"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the action.",
          "x-ms-summary": "Constituent ID"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The action date (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "category": {
          "type": "string",
          "description": "The channel or intent of the constituent interaction.",
          "x-ms-summary": "Category",
          "enum": [
            "Phone Call",
            "Meeting",
            "Mailing",
            "Email",
            "Task/Other"
          ]
        },
        "type": {
          "type": "string",
          "description": "Additional description of the action to complement the category.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actiontypes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actiontypes"
              }
            }
          }
        },
        "summary": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The short description of the action that appears at the top of the record. Character limit: 255.",
          "x-ms-summary": "Summary"
        },
        "description": {
          "type": "string",
          "description": "The detailed explanation that elaborates on the action summary.",
          "x-ms-summary": "Note"
        },
        "completed": {
          "type": "boolean",
          "description": "Is the action completed? If the system is configured to use custom action statuses, this value is based on the action status value.",
          "x-ms-summary": "Completed?"
        },
        "completed_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the action was completed (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Completed on"
        },
        "status": {
          "type": "string",
          "description": "The action status.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actionstatustypes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actionstatustypes"
              }
            }
          }
        },
        "direction": {
          "type": "string",
          "description": "The direction of the action.",
          "x-ms-summary": "Direction",
          "x-ms-visibility": "advanced",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the action.",
          "x-ms-summary": "Location",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actionlocations"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actionlocations"
              }
            }
          }
        },
        "opportunity_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the action.",
          "x-ms-summary": "Opportunity ID",
          "x-ms-visibility": "advanced"
        },
        "outcome": {
          "type": "string",
          "description": "The outcome of the action.",
          "x-ms-summary": "Outcome",
          "x-ms-visibility": "advanced",
          "enum": [
            "Successful",
            "Unsuccessful"
          ]
        },
        "priority": {
          "type": "string",
          "description": "The priority of the action.",
          "x-ms-summary": "Priority",
          "x-ms-visibility": "advanced",
          "enum": [
            "Normal",
            "High",
            "Low"
          ]
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "Start time",
          "x-ms-visibility": "advanced"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "End time",
          "x-ms-visibility": "advanced"
        },
        "author": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50,
          "description": "The author of the action's summary and description. If not supplied, will have a default set based on the user's account. Character limit: 50.",
          "x-ms-summary": "Author",
          "x-ms-visibility": "advanced"
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers associated with the action.",
          "x-ms-summary": "Fundraiser(s)",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConstituentApi.ActionAttachmentAdd": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "required": [
        "parent_id",
        "type"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the action associated with the attachment.",
          "x-ms-summary": "Action ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z'). This field defaults to the current date and time if not supplied.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDynamicValues",
              "value-collection": "value",
              "value-path": "item",
              "value-title": "item",
              "parameters": {
                "api": "constituent",
                "route": "attachmenttags"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "GetDynamicValues",
              "itemsPath": "value",
              "itemValuePath": "item",
              "itemTitlePath": "item",
              "parameters": {
                "api": {
                  "value": "constituent"
                },
                "route": {
                  "value": "attachmenttags"
                }
              }
            }
          }
        }
      }
    },
    "ConstituentApi.ActionAttachmentEdit": {
      "type": "object",
      "description": "Many cultivation activities collect related collateral, such as correspondence and prospect research. Attachments can save this data on the appropriate record to maintain a complete view of those activities.",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDynamicValues",
              "value-collection": "value",
              "value-path": "item",
              "value-title": "item",
              "parameters": {
                "api": "constituent",
                "route": "attachmenttags"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "GetDynamicValues",
              "itemsPath": "value",
              "itemValuePath": "item",
              "itemTitlePath": "item",
              "parameters": {
                "api": {
                  "value": "constituent"
                },
                "route": {
                  "value": "attachmenttags"
                }
              }
            }
          }
        }
      }
    },
    "ConstituentApi.ActionAttachmentRead": {
      "type": "object",
      "description": "Attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attachment.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the action associated with the attachment.",
          "x-ms-summary": "Action ID"
        },
        "type": {
          "type": "string",
          "description": "The attachment type. Physical attachments are uploaded files such as images, PDFs, or Word documents that are saved locally or on the network. They are stored and managed in the system. Link attachments are links to files such as images, blog posts, or YouTube videos that are online or in a cloud storage account. They are stored and managed externally.",
          "x-ms-summary": "Type",
          "enum": [
            "Link",
            "Physical"
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The name of the attachment. Character limit: 150.",
          "x-ms-summary": "Name"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the attachment.",
          "x-ms-summary": "Date"
        },
        "url": {
          "type": "string",
          "description": "The URL for the attachment. This is required for link attachments and not applicable for physical attachments.",
          "x-ms-summary": "URL"
        },
        "file_name": {
          "type": "string",
          "description": "The name of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File name"
        },
        "file_id": {
          "type": "string",
          "description": "The identifier of the file. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "File ID"
        },
        "thumbnail_id": {
          "type": "string",
          "maxLength": 36,
          "minLength": 0,
          "description": "The identifier of the thumbnail. Character limit: 36. For physical attachments only.",
          "x-ms-summary": "Thumbnail ID"
        },
        "thumbnail_url": {
          "type": "string",
          "description": "The URL for a thumbnail. For physical attachments that are images only. Contains a time-bound signature that limits access to 60 minutes.",
          "x-ms-summary": "Thumbnail URL"
        },
        "content_type": {
          "type": "string",
          "description": "The content type. For physical attachments only.",
          "x-ms-summary": "Content type"
        },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The file size in bytes. For physical attachments only.",
          "x-ms-summary": "File size"
        },
        "tags": {
          "type": "array",
          "description": "The tags associated with the attachment.",
          "x-ms-summary": "Tags",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConstituentApi.ActionCustomFieldAdd": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "required": [
        "parent_id",
        "category"
      ],
      "properties": {
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the action associated with the custom field.",
          "x-ms-summary": "Action ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListActionCustomFieldCategoryDetails",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListActionCustomFieldCategoryDetails",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "constituent",
              "custom_field_type": "actions",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "custom_field_type": {
                "value": "actions"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "ConstituentApi.ActionCustomFieldEdit": {
      "type": "object",
      "description": "While records provide many fields to track information, organizations often require additional details. To track this specialized information, use custom fields.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The custom field category (required if updating the custom field value).",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListActionCustomFieldCategoryDetails",
            "value-collection": "value",
            "value-path": "name",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListActionCustomFieldCategoryDetails",
            "itemsPath": "value",
            "itemValuePath": "name",
            "itemTitlePath": "name"
          }
        },
        "value": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": "constituent",
              "custom_field_type": "actions",
              "category": {
                "parameter": "category"
              }
            },
            "value-path": "items"
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetCustomFieldDynamicProperties",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "custom_field_type": {
                "value": "actions"
              },
              "category": {
                "parameterReference": "body/category"
              }
            },
            "itemValuePath": "items"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "ConstituentApi.ActionCustomFieldRead": {
      "type": "object",
      "description": "Custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the custom field.",
          "x-ms-summary": "ID"
        },
        "parent_id": {
          "type": "string",
          "description": "The system record ID of the action associated with the custom field.",
          "x-ms-summary": "Action ID"
        },
        "category": {
          "type": "string",
          "description": "The custom field category.",
          "x-ms-summary": "Category"
        },
        "type": {
          "type": "string",
          "description": "The type of data that the custom field represents.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        },
        "value": {
          "description": "The value of the custom field.",
          "x-ms-summary": "Value"
        },
        "text_value": {
          "type": "string",
          "description": "The text value of the custom field.",
          "x-ms-summary": "Text value"
        },
        "number_value": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric value of the custom field.",
          "x-ms-summary": "Number value"
        },
        "date_value": {
          "type": "string",
          "format": "date",
          "description": "The date value of the custom field.",
          "x-ms-summary": "Date value"
        },
        "currency_value": {
          "type": "number",
          "format": "double",
          "description": "The currency value of the custom field.",
          "x-ms-summary": "Currency value"
        },
        "boolean_value": {
          "type": "boolean",
          "description": "The boolean value of the custom field.",
          "x-ms-summary": "Boolean value"
        },
        "codetableentry_value": {
          "type": "string",
          "description": "The table entry value of the custom field.",
          "x-ms-summary": "Table entry value"
        },
        "constituentid_value": {
          "type": "string",
          "description": "The constituent ID value of the custom field.",
          "x-ms-summary": "Constituent ID value"
        },
        "fuzzydate_value": {
          "type": "object",
          "description": "The fuzzy date value of the custom field.",
          "x-ms-summary": "Fuzzy date value",
          "properties": {
            "d": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day",
              "x-ms-visibility": "advanced"
            },
            "m": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month",
              "x-ms-visibility": "advanced"
            },
            "y": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on the custom field.",
          "x-ms-summary": "Date"
        },
        "comment": {
          "type": "string",
          "description": "The comment on the custom field. Character limit: 50.",
          "x-ms-summary": "Comment"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the custom field was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "ConstituentApi.ActionEdit": {
      "type": "object",
      "description": "Actions track the interactions and tasks that are required to secure gifts and cultivate relationships with constituents.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The action date (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Date"
        },
        "category": {
          "type": "string",
          "description": "The channel or intent of the constituent interaction.",
          "x-ms-summary": "Category",
          "enum": [
            "Phone Call",
            "Meeting",
            "Mailing",
            "Email",
            "Task/Other"
          ]
        },
        "type": {
          "type": "string",
          "description": "Additional description of the action to complement the category.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actiontypes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actiontypes"
              }
            }
          }
        },
        "summary": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The short description of the action that appears at the top of the record. Character limit: 255.",
          "x-ms-summary": "Summary"
        },
        "description": {
          "type": "string",
          "description": "The detailed explanation that elaborates on the action summary.",
          "x-ms-summary": "Note"
        },
        "completed": {
          "type": "boolean",
          "description": "Is the action completed? If the system is configured to use custom action statuses, this value is based on the action status value.",
          "x-ms-summary": "Completed?"
        },
        "completed_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the action was completed (ex: '2020-09-18T04:13:56Z').",
          "x-ms-summary": "Completed on"
        },
        "status": {
          "type": "string",
          "description": "The action status.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actionstatustypes"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actionstatustypes"
              }
            }
          }
        },
        "direction": {
          "type": "string",
          "description": "The direction of the action.",
          "x-ms-summary": "Direction",
          "x-ms-visibility": "advanced",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the action.",
          "x-ms-summary": "Location",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "GetDynamicValues",
            "value-collection": "value",
            "value-path": "item",
            "value-title": "item",
            "parameters": {
              "api": "constituent",
              "route": "actionlocations"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetDynamicValues",
            "itemsPath": "value",
            "itemValuePath": "item",
            "itemTitlePath": "item",
            "parameters": {
              "api": {
                "value": "constituent"
              },
              "route": {
                "value": "actionlocations"
              }
            }
          }
        },
        "opportunity_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the action.",
          "x-ms-summary": "Opportunity ID",
          "x-ms-visibility": "advanced"
        },
        "outcome": {
          "type": "string",
          "description": "The outcome of the action.",
          "x-ms-summary": "Outcome",
          "x-ms-visibility": "advanced",
          "enum": [
            "Successful",
            "Unsuccessful"
          ]
        },
        "priority": {
          "type": "string",
          "description": "The priority of the action.",
          "x-ms-summary": "Priority",
          "x-ms-visibility": "advanced",
          "enum": [
            "Normal",
            "High",
            "Low"
          ]
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "Start time",
          "x-ms-visibility": "advanced"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "End time",
          "x-ms-visibility": "advanced"
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers associated with the action.",
          "x-ms-summary": "Fundraiser(s)",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConstituentApi.ActionRead": {
      "type": "object",
      "description": "Action",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the action.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent associated with the action.",
          "x-ms-summary": "Constituent ID"
        },
        "category": {
          "type": "string",
          "description": "The channel or intent of the constituent interaction.",
          "x-ms-summary": "Category"
        },
        "completed": {
          "type": "boolean",
          "description": "Is the action completed? If the system is configured to use custom action statuses, this value is based on the action status value.",
          "x-ms-summary": "Completed?"
        },
        "completed_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the action was completed.",
          "x-ms-summary": "Completed on"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The action date.",
          "x-ms-summary": "Date"
        },
        "description": {
          "type": "string",
          "description": "The detailed explanation that elaborates on the action summary.",
          "x-ms-summary": "Note"
        },
        "direction": {
          "type": "string",
          "description": "The direction of the action.",
          "x-ms-summary": "Direction",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        },
        "fundraisers": {
          "type": "array",
          "description": "The set of system record IDs for the fundraisers associated with the action.",
          "x-ms-summary": "Fundraiser(s)",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the action.",
          "x-ms-summary": "Location"
        },
        "opportunity_id": {
          "type": "string",
          "description": "The system record ID of the opportunity associated with the action.",
          "x-ms-summary": "Opportunity ID"
        },
        "outcome": {
          "type": "string",
          "description": "The outcome of the action.",
          "x-ms-summary": "Outcome",
          "enum": [
            "Successful",
            "Unsuccessful"
          ]
        },
        "priority": {
          "type": "string",
          "description": "The priority of the action.",
          "x-ms-summary": "Priority",
          "enum": [
            "Normal",
            "High",
            "Low"
          ]
        },
        "start_time": {
          "type": "string",
          "description": "The start time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "Start time"
        },
        "end_time": {
          "type": "string",
          "description": "The end time of the action. Uses 24-hour time in the HH:mm format.",
          "x-ms-summary": "End time"
        },
        "status": {
          "type": "string",
          "description": "The action status.",
          "x-ms-summary": "Status"
        },
        "status_code": {
          "type": "string",
          "description": "The action status code. This property is only returned when the system is configured to use custom action statuses.",
          "x-ms-summary": "Status code"
        },
        "computed_status": {
          "type": "string",
          "description": "The computed action status. If the system is not configured to use custom action statuses, this field computes the status based on the completed and date properties. If not, the field calculates the status based on the action's date property and whether action's Action Status property is configured as completed.",
          "x-ms-summary": "Computed status",
          "enum": [
            "Open",
            "Completed",
            "PastDue"
          ]
        },
        "summary": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The short description of the action that appears at the top of the record. Character limit: 255.",
          "x-ms-summary": "Summary"
        },
        "type": {
          "type": "string",
          "description": "Additional description of the action to complement the category.",
          "x-ms-summary": "Type"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the action was created.",
          "x-ms-summary": "Date added"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the action was last modified.",
          "x-ms-summary": "Date modified"
        }
      }
    },
    "ConstituentApi.ApiCollectionOfActionAttachmentRead": {
      "type": "object",
      "description": "Attachments",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.ActionAttachmentRead"
          }
        }
      }
    },
    "ConstituentApi.ApiCollectionOfActionCustomFieldRead": {
      "type": "object",
      "description": "Custom fields",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.ActionCustomFieldRead"
          }
        }
      }
    },
    "ConstituentApi.ApiCollectionOfActionRead": {
      "type": "object",
      "description": "Actions",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.ActionRead"
          }
        }
      }
    },
    "ConstituentApi.ApiCollectionOfCustomFieldCategoryRead": {
      "type": "object",
      "description": "Custom field categories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/ConstituentApi.CustomFieldCategoryRead"
          }
        }
      }
    },
    "ConstituentApi.CreatedAction": {
      "type": "object",
      "description": "Created action",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created action.",
          "x-ms-summary": "ID"
        }
      }
    },
    "ConstituentApi.CreatedActionAttachment": {
      "type": "object",
      "description": "Created action attachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created action attachment.",
          "x-ms-summary": "ID"
        }
      }
    },
    "ConstituentApi.CreatedActionCustomField": {
      "type": "object",
      "description": "Created action custom field",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created action custom field.",
          "x-ms-summary": "ID"
        }
      }
    },
    "ConstituentApi.CustomFieldCategoryRead": {
      "type": "object",
      "description": "Custom field category",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom field category.",
          "x-ms-summary": "Name"
        },
        "type": {
          "type": "string",
          "description": "The type of data that custom fields with this category represent.",
          "x-ms-summary": "Type",
          "enum": [
            "Text",
            "Number",
            "Date",
            "Currency",
            "Boolean",
            "CodeTableEntry",
            "ConstituentId",
            "FuzzyDate"
          ]
        }
      }
    },
    "ListApi.ApiCollectionOfList": {
      "type": "object",
      "description": "Lists",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of lists in the set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response.",
          "items": {
            "$ref": "#/definitions/ListApi.ApiList"
          }
        }
      }
    },
    "ListApi.ApiList": {
      "type": "object",
      "description": "List",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID for the list."
        },
        "name": {
          "type": "string",
          "description": "The name of the list."
        }
      }
    },
    "PowerAutomateUIApi.DynamicValue": {
      "type": "object",
      "description": "A single dynamic value item",
      "properties": {
        "id": {
          "type": "string",
          "description": "The dynamic value item identifier."
        },
        "item": {
          "type": "string",
          "description": "The dynamic value item."
        }
      }
    },
    "PowerAutomateUIApi.DynamicValuesCollection": {
      "type": "object",
      "description": "A collection of objects for use with dynamic values.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items in the list."
        },
        "value": {
          "type": "array",
          "description": "The set of objects for use with dynamic values.",
          "items": {
            "$ref": "#/definitions/PowerAutomateUIApi.DynamicValue"
          }
        }
      }
    },
    "PowerAutomateUIApi.DynamicProperties": {
      "type": "object",
      "description": "Defines some (but potentially not all) dynamic OpenApi metadata properties needed for a custom field.",
      "properties": {
        "items": {
          "type": "object",
          "description": "The OpenApi properties for the custom field value.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The OpenApi type."
            },
            "format": {
              "type": "string",
              "description": "The OpenApi format."
            },
            "description": {
              "type": "string",
              "description": "The OpenApi description."
            }
          }
        }
      }
    }
  }
}
