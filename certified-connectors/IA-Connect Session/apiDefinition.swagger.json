{
  "swagger": "2.0",
  "info": {
    "title": "IA-Connect Session",
    "description": "IA-Connect is a Robotic Process Automation (RPA) platform which adds RPA functionality from the Cloud to on-premises virtual machines or over Citrix or Microsoft Remote Desktop (RDS) connections. This is the module for automating the environment, session, file management and configuring IA-Connect.",
    "version": "9.0",
    "contact": {
      "name": "Ultima Labs",
      "url": "https://www.ultima.com/ultima-labs",
      "email": "IAConnect@ultima.com"
    }
  },
  "host": "DefinedInConnectionParameters",
  "basePath": "/IAConnectRESTClient",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.ultima.com/ultima-labs"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.ultima.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations;Productivity"
    }
  ],
  "paths": {
    "/Environment/GetMachineName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get machine name",
        "description": "Returns the name of the machine that is running the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetMachineName",
            "description": "Inputs for IA-Connect GetMachineName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MachineName": {
                  "type": "string",
                  "title": "Machine name",
                  "description": "The name of the machine that is running the IA-Connect Agent user session."
                }
              }
            }
          }
        },
        "operationId": "GetMachineName"
      }
    },
    "/Environment/GetMachineDomain": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get machine domain",
        "description": "Returns the domain of the machine that is running the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetMachineDomain",
            "description": "Inputs for IA-Connect GetMachineDomain action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DomainName": {
                  "type": "string",
                  "title": "Domain name",
                  "description": "The NetBIOS domain name of the machine that is running the IA-Connect Agent user session."
                },
                "DNSDomainName": {
                  "type": "string",
                  "title": "DNS domain name",
                  "description": "The DNS domain name of the machine that is running the IA-Connect Agent user session."
                }
              }
            }
          }
        },
        "operationId": "GetMachineDomain"
      }
    },
    "/Environment/GetRemoteSessionClientHostname": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get client hostname",
        "description": "Returns the hostname of the client where the IA-Connect Director is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetRemoteSessionClientHostname",
            "description": "Inputs for IA-Connect GetRemoteSessionClientHostname action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ClientHostname": {
                  "type": "string",
                  "title": "Client hostname",
                  "description": "The hostname of the client where the IA-Connect Director is running."
                }
              }
            }
          }
        },
        "operationId": "GetRemoteSessionClientHostname"
      }
    },
    "/Environment/ExpandEnvironmentVariable": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Expand environment variable",
        "description": "Expands a string containing environment variables (e.g. %USERPROFILE% or %TEMP%) in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "ExpandEnvironmentVariable",
            "description": "Inputs for IA-Connect ExpandEnvironmentVariable action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "InputString": {
                  "type": "string",
                  "title": "Input string",
                  "description": "The input string containing environment variables."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "InputString",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OutputString": {
                  "type": "string",
                  "title": "Output string",
                  "description": "The string with any environment variables expanded."
                }
              }
            }
          }
        },
        "operationId": "ExpandEnvironmentVariable"
      }
    },
    "/Environment/KillProcess": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Kill process",
        "description": "Kills any running process in the IA-Connect Agent user session which has the specified process name.",
        "parameters": [
          {
            "in": "body",
            "name": "KillProcess",
            "description": "Inputs for IA-Connect KillProcess action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessName": {
                  "type": "string",
                  "title": "Process name",
                  "description": "The process to kill. e.g. notepad."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfProcessesKilled": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of processes killed",
                  "description": "The number of processes that were killed."
                }
              }
            }
          }
        },
        "operationId": "KillProcess"
      }
    },
    "/Environment/KillProcessID": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Kill process ID",
        "description": "Kills a running process in the IA-Connect Agent user session which has the specified process Id. Process Ids are unique so only one process can match the Id. Process Ids are dynamic and are different for every launch of an application.",
        "parameters": [
          {
            "in": "body",
            "name": "KillProcessID",
            "description": "Inputs for IA-Connect KillProcessID action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessID": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Process ID",
                  "description": "The process ID of the process to kill."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessID",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfProcessesKilled": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of processes killed",
                  "description": "The number of processes that were killed."
                }
              }
            }
          }
        },
        "operationId": "KillProcessID"
      }
    },
    "/Environment/GetProcessCountByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get process count by name",
        "description": "Returns a count of running processes in the IA-Connect Agent user session which has the specified process name.",
        "parameters": [
          {
            "in": "body",
            "name": "GetProcessCountByName",
            "description": "Inputs for IA-Connect GetProcessCountByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessName": {
                  "type": "string",
                  "title": "Process name",
                  "description": "The process name."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfProcesses": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of processes",
                  "description": "The number of processes that match the process name provided."
                }
              }
            }
          }
        },
        "operationId": "GetProcessCountByName"
      }
    },
    "/Environment/GetAgentProcessCount": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent process count",
        "description": "Returns the number of instances of the IA-Connect Agent currently running in the user session. This is useful for detecting if there are multiple instances of the IA-Connect Agent running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetAgentProcessCount",
            "description": "Inputs for IA-Connect GetAgentProcessCount action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfProcesses": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of processes",
                  "description": "The number of IA-Connect Agent processes that are currently running in the user session."
                }
              }
            }
          }
        },
        "operationId": "GetAgentProcessCount"
      }
    },
    "/Environment/KillAllOtherAgents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Kill all other IA-Connect Agents",
        "description": "Kills any other instances of the IA-Connect Agent that are currently running in the user session. This will ensure that only one instance of the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "KillAllOtherAgents",
            "description": "Inputs for IA-Connect KillAllOtherAgents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfAgentsKilled": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of Agents killed",
                  "description": "The number of IA-Connect Agent processes that were killed."
                },
                "NumberOfAgentsFailedToKill": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Number of Agents failed to kill",
                  "description": "The number of IA-Connect Agent processes that failed to be killed."
                }
              }
            }
          }
        },
        "operationId": "KillAllOtherAgents"
      }
    },
    "/Environment/GetProcessByPID": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get process by process Id",
        "description": "Returns whether a process with the specified process Id is running in the IA-Connect Agent user session. Process Ids are unique so only one process can match the Id. Process Ids are dynamic and are different for every launch of an application.",
        "parameters": [
          {
            "in": "body",
            "name": "GetProcessByPID",
            "description": "Inputs for IA-Connect GetProcessByPID action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Process Id",
                  "description": "The process ID of the process to get."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ProcessRunning": {
                  "type": "boolean",
                  "title": "Process running",
                  "description": "Returns true if a process with the provided process ID was found."
                }
              }
            }
          }
        },
        "operationId": "GetProcessByPID"
      }
    },
    "/Environment/GetProcesses": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get processes",
        "description": "Returns a list of running processes in the IA-Connect Agent user session. This can optionally be filtered by providing a process name.",
        "parameters": [
          {
            "in": "body",
            "name": "GetProcesses",
            "description": "Inputs for IA-Connect GetProcesses action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessName": {
                  "type": "string",
                  "title": "Process name",
                  "description": "An optional filter for the process name."
                },
                "GetProcessCommandLine": {
                  "type": "boolean",
                  "default": false,
                  "title": "Get process commandline",
                  "description": "If set to true, the process command-line details will be returned."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfProcesses": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of processes",
                  "description": "The number of processes running in the user session."
                },
                "ProcessesJSON": {
                  "type": "string",
                  "title": "Processes JSON",
                  "description": "The list of processes running in the user session, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "GetProcesses"
      }
    },
    "/Environment/RunProcess": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run process",
        "description": "Launch a process, command or application.",
        "parameters": [
          {
            "in": "body",
            "name": "RunProcess",
            "description": "Inputs for IA-Connect RunProcess action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessName": {
                  "type": "string",
                  "title": "Process name",
                  "description": "The process to run. e.g. notepad.exe or C:\\windows\\system32\\notepad.exe."
                },
                "Arguments": {
                  "type": "string",
                  "title": "Arguments",
                  "description": "Any command-line arguments to use when starting the application."
                },
                "WorkingDirectory": {
                  "type": "string",
                  "title": "Working Folder",
                  "description": "The working folder/directory for the process."
                },
                "UseShellExecute": {
                  "type": "boolean",
                  "default": true,
                  "title": "Use Shell execute",
                  "description": "Should the process be started by using the operating system shell?",
                  "x-ms-visibility": "advanced"
                },
                "CreateNoWindow": {
                  "type": "boolean",
                  "default": false,
                  "title": "Create no window",
                  "description": "Should the process be started with no window?",
                  "x-ms-visibility": "advanced"
                },
                "WindowStyle": {
                  "type": "string",
                  "default": "normal",
                  "title": "Window style",
                  "enum": [
                    "normal",
                    "maximised",
                    "minimised",
                    "hidden"
                  ],
                  "description": "Provide the window style (normal, maximised, minimised or hidden)."
                },
                "WaitForProcess": {
                  "type": "boolean",
                  "default": false,
                  "title": "Wait for process",
                  "description": "Should we wait for the process to finish? This would likely only be used when running a program or script that needed to finish before we can continue."
                },
                "RedirectStandardOutput": {
                  "type": "boolean",
                  "default": false,
                  "title": "Redirect standard output",
                  "description": "Should the standard output be redirected?",
                  "x-ms-visibility": "advanced"
                },
                "RedirectStandardError": {
                  "type": "boolean",
                  "default": false,
                  "title": "Redirect standard error",
                  "description": "Should the standard error be redirected?",
                  "x-ms-visibility": "advanced"
                },
                "RedirectStandardErrorToOutput": {
                  "type": "boolean",
                  "default": false,
                  "title": "Redirect standard error to output",
                  "description": "Should standard error be redirected to output?",
                  "x-ms-visibility": "advanced"
                },
                "StandardOutputEncoding": {
                  "type": "string",
                  "title": "Standard output encoding",
                  "enum": [
                    "UTF8",
                    "UTF7",
                    "UTF16",
                    "ASCII",
                    "UTF16BE"
                  ],
                  "description": "Provide the standard output encoding (UTF8, UTF7, UTF16, ASCII or UTF16BE).",
                  "x-ms-visibility": "advanced"
                },
                "StandardErrorEncoding": {
                  "type": "string",
                  "title": "Standard error encoding",
                  "enum": [
                    "UTF8",
                    "UTF7",
                    "UTF16",
                    "ASCII",
                    "UTF16BE"
                  ],
                  "description": "Provide the standard error encoding (UTF8, UTF7, UTF16, ASCII or UTF16BE).",
                  "x-ms-visibility": "advanced"
                },
                "RunAsDomain": {
                  "type": "string",
                  "title": "RunAs Domain name",
                  "description": "The domain of the run as user. If domain is not specified then the username should be in the format username@domainFQDN.",
                  "x-ms-visibility": "advanced"
                },
                "RunAsUsername": {
                  "type": "string",
                  "title": "RunAs Username",
                  "description": "The username of the run as user.",
                  "x-ms-visibility": "advanced"
                },
                "RunAsPassword": {
                  "type": "string",
                  "format": "password",
                  "title": "RunAs Password",
                  "description": "The password of the run as user.",
                  "x-ms-visibility": "advanced"
                },
                "RunAsLoadUserProfile": {
                  "type": "boolean",
                  "default": false,
                  "title": "RunAs load user profile",
                  "description": "Should the Windows user profile of the run as user be loaded?",
                  "x-ms-visibility": "advanced"
                },
                "RunAsElevate": {
                  "type": "boolean",
                  "default": false,
                  "title": "RunAs elevate",
                  "description": "Should the process run elevated?",
                  "x-ms-visibility": "advanced"
                },
                "TimeoutInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Timeout in seconds",
                  "description": "The maximum number of seconds to wait for the process to finish."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ProcessStarted": {
                  "type": "boolean",
                  "title": "Process started",
                  "description": "Returns true if the process was started."
                },
                "ExitCode": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Exit code",
                  "description": "Returns the process exit code."
                },
                "ProcessTimedOut": {
                  "type": "boolean",
                  "title": "Process timed out",
                  "description": "Returns true if the process has timed out."
                },
                "ProcessId": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Process Id",
                  "description": "The process ID of the process that was started."
                },
                "StandardOutput": {
                  "type": "string",
                  "title": "Standard output",
                  "description": "The standard output contents."
                },
                "StandardError": {
                  "type": "string",
                  "title": "Standard error",
                  "description": "The standard error contents."
                }
              }
            }
          }
        },
        "operationId": "RunProcess"
      }
    },
    "/Environment/GetScreenResolution": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get screen resolution",
        "description": "Returns the screen resolution of the IA-Connect Agent user session (as seen by the user session).",
        "parameters": [
          {
            "in": "body",
            "name": "GetScreenResolution",
            "description": "Inputs for IA-Connect GetScreenResolution action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfScreens": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of screens",
                  "description": "The number of screens that were detected."
                },
                "HorizontalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Horizontal resolution",
                  "description": "The horizontal resolution of the first screen."
                },
                "VerticalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Vertical resolution",
                  "description": "The vertical resolution of the first screen."
                },
                "SecondDisplayHorizontalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Second display horizontal resolution",
                  "description": "The horizontal resolution of the second screen, if one was detected."
                },
                "SecondDisplayVerticalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Second display vertical resolution",
                  "description": "The vertical resolution of the second screen, if one was detected."
                },
                "ThirdDisplayHorizontalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Third display horizontal resolution",
                  "description": "The horizontal resolution of the third screen, if one was detected."
                },
                "ThirdDisplayVerticalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Third display vertical resolution",
                  "description": "The vertical resolution of the third screen, if one was detected."
                },
                "FourthDisplayHorizontalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Fourth display horizontal resolution",
                  "description": "The horizontal resolution of the fourth screen, if one was detected."
                },
                "FourthDisplayVerticalResolution": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Fourth display vertical resolution",
                  "description": "The vertical resolution of the fourth screen, if one was detected."
                },
                "VirtualScreenLeftEdgePixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Virtual screen left edge pixels",
                  "description": "The left edge of the entire screen (including all displays that were detected)."
                },
                "VirtualScreenTopEdgePixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Virtual screen top edge pixels",
                  "description": "The top edge of the entire screen (including all displays that were detected)."
                },
                "VirtualScreenWidthPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Virtual screen width pixels",
                  "description": "The width of the entire screen (including all displays that were detected)."
                },
                "VirtualScreenHeightPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Virtual screen height pixels",
                  "description": "The height of the entire screen (including all displays that were detected)."
                }
              }
            }
          }
        },
        "operationId": "GetScreenResolution"
      }
    },
    "/Environment/SetDefaultPrinter": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set default printer",
        "description": "Sets the default printer for the user in the IA-Connect Agent session.",
        "parameters": [
          {
            "in": "body",
            "name": "SetDefaultPrinter",
            "description": "Inputs for IA-Connect SetDefaultPrinter action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DefaultPrinterName": {
                  "type": "string",
                  "title": "Default printer name",
                  "description": "The name of the default printer for the user."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DefaultPrinterName",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetDefaultPrinter"
      }
    },
    "/Environment/GetDefaultPrinter": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get default printer",
        "description": "Gets the name of the default printer for the user in the IA-Connect Agent session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetDefaultPrinter",
            "description": "Inputs for IA-Connect GetDefaultPrinter action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DefaultPrinterName": {
                  "type": "string",
                  "title": "Default printer name",
                  "description": "The name of the default printer for the user."
                }
              }
            }
          }
        },
        "operationId": "GetDefaultPrinter"
      }
    },
    "/Environment/GetListOfPrinters": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get list of printers",
        "description": "Returns a list of all available printers in the IA-Connect Agent session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetListOfPrinters",
            "description": "Inputs for IA-Connect GetListOfPrinters action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ListLocalPrinters": {
                  "type": "boolean",
                  "default": true,
                  "title": "List local printers",
                  "description": "Should local printers be returned?"
                },
                "ListNetworkPrinters": {
                  "type": "boolean",
                  "default": false,
                  "title": "List network printers",
                  "description": "Should network printers be returned?"
                },
                "ReturnDetailedInformation": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return detailed information",
                  "description": "Should detailed information such as location, port name, driver name and status of each printer be returned?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PrintersJSON": {
                  "type": "string",
                  "title": "Printers JSON",
                  "description": "A list of all printers found, in JSON format."
                },
                "NumberOfPrinters": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of printers",
                  "description": "The number of printers that were found."
                }
              }
            }
          }
        },
        "operationId": "GetListOfPrinters"
      }
    },
    "/Environment/SetMouseMultiplier": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set mouse multiplier",
        "description": "Sets the mouse multiplier in the IA-Connect Agent user session. This can be useful during development if you encounter issues with remote desktop scaling.",
        "parameters": [
          {
            "in": "body",
            "name": "SetMouseMultiplier",
            "description": "Inputs for IA-Connect SetMouseMultiplier action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "MouseXMultiplier": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "X multiplier",
                  "description": "The current horizontal (X) mouse multiplier."
                },
                "MouseYMultiplier": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Y multiplier",
                  "description": "The current vertical (Y) mouse multiplier."
                },
                "ApplyToMouseEvent": {
                  "type": "boolean",
                  "default": true,
                  "title": "Apply to mouse_event",
                  "description": "This argument specifies whether to apply the mouse multiplier values to the mouse_event method."
                },
                "ApplyToSetCursorPos": {
                  "type": "boolean",
                  "default": false,
                  "title": "Apply to SetCursorPos",
                  "description": "This argument specifies whether to apply the mouse multipler values to the SetCursorPos method."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetMouseMultiplier"
      }
    },
    "/Environment/MoveMouseToCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move mouse to coordinate",
        "description": "Moves the mouse in the IA-Connect Agent user session to the specified pixel coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "MoveMouseToCoordinate",
            "description": "Inputs for IA-Connect MoveMouseToCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels) to move the mouse to."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels) to move the mouse to."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MoveMouseToCoordinate"
      }
    },
    "/Environment/MoveMouseRelative": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move mouse relative",
        "description": "Moves the mouse in the IA-Connect Agent user session by the specified number of pixels, relative to it's current position.",
        "parameters": [
          {
            "in": "body",
            "name": "MoveMouseRelative",
            "description": "Inputs for IA-Connect MoveMouseRelative action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The number of X pixels to move the mouse, starting from it's current position."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The number of Y pixels to move the mouse, starting from it's current position."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MoveMouseRelative"
      }
    },
    "/Environment/LeftMouseButtonDown": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left mouse button down",
        "description": "Presses (and does not release) the left mouse button in the IA-Connect Agent user session. To release the mouse, use the left mouse button up action.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftMouseButtonDown",
            "description": "Inputs for IA-Connect LeftMouseButtonDown action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftMouseButtonDown"
      }
    },
    "/Environment/LeftMouseButtonUp": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left mouse button up",
        "description": "Releases the left mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftMouseButtonUp",
            "description": "Inputs for IA-Connect LeftMouseButtonUp action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftMouseButtonUp"
      }
    },
    "/Environment/LeftClickMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left click mouse",
        "description": "Clicks the left mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftClickMouse",
            "description": "Inputs for IA-Connect LeftClickMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftClickMouse"
      }
    },
    "/Environment/LeftClickMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left click mouse at coordinate",
        "description": "Clicks the left mouse button in the IA-Connect Agent user session at the specified coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftClickMouseAtCoordinate",
            "description": "Inputs for IA-Connect LeftClickMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftClickMouseAtCoordinate"
      }
    },
    "/Environment/LeftHoldMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left hold mouse",
        "description": "Holds the left mouse button in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftHoldMouse",
            "description": "Inputs for IA-Connect LeftHoldMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the left mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftHoldMouse"
      }
    },
    "/Environment/LeftHoldMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left hold mouse at coordinate",
        "description": "Holds the left mouse button at the specified coordinates in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftHoldMouseAtCoordinate",
            "description": "Inputs for IA-Connect LeftHoldMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the left mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftHoldMouseAtCoordinate"
      }
    },
    "/Environment/RightMouseButtonDown": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right mouse button down",
        "description": "Presses (and does not release) the right mouse button in the IA-Connect Agent user session. To release the mouse, use the right mouse button up action.",
        "parameters": [
          {
            "in": "body",
            "name": "RightMouseButtonDown",
            "description": "Inputs for IA-Connect RightMouseButtonDown action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightMouseButtonDown"
      }
    },
    "/Environment/RightMouseButtonUp": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right mouse button up",
        "description": "Releases the right mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "RightMouseButtonUp",
            "description": "Inputs for IA-Connect RightMouseButtonUp action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightMouseButtonUp"
      }
    },
    "/Environment/RightClickMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right click mouse",
        "description": "Clicks the right mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "RightClickMouse",
            "description": "Inputs for IA-Connect RightClickMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightClickMouse"
      }
    },
    "/Environment/RightClickMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right click mouse at coordinate",
        "description": "Clicks the right mouse button in the IA-Connect Agent user session at the specified coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "RightClickMouseAtCoordinate",
            "description": "Inputs for IA-Connect RightClickMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightClickMouseAtCoordinate"
      }
    },
    "/Environment/RightHoldMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right hold mouse",
        "description": "Holds the right mouse button in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "RightHoldMouse",
            "description": "Inputs for IA-Connect RightHoldMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the right mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightHoldMouse"
      }
    },
    "/Environment/RightHoldMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right hold mouse at coordinate",
        "description": "Holds the right mouse button at the specified coordinates in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "RightHoldMouseAtCoordinate",
            "description": "Inputs for IA-Connect RightHoldMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the right mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightHoldMouseAtCoordinate"
      }
    },
    "/Environment/MiddleMouseButtonDown": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle mouse button down",
        "description": "Presses (and does not release) the middle mouse button in the IA-Connect Agent user session. To release the mouse, use the middle mouse button up action.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleMouseButtonDown",
            "description": "Inputs for IA-Connect MiddleMouseButtonDown action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleMouseButtonDown"
      }
    },
    "/Environment/MiddleMouseButtonUp": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle mouse button up",
        "description": "Releases the middle mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleMouseButtonUp",
            "description": "Inputs for IA-Connect MiddleMouseButtonUp action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleMouseButtonUp"
      }
    },
    "/Environment/MiddleClickMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle click mouse",
        "description": "Clicks the middle mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleClickMouse",
            "description": "Inputs for IA-Connect MiddleClickMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleClickMouse"
      }
    },
    "/Environment/MiddleClickMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle click mouse at coordinate",
        "description": "Clicks the middle mouse button in the IA-Connect Agent user session at the specified coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleClickMouseAtCoordinate",
            "description": "Inputs for IA-Connect MiddleClickMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleClickMouseAtCoordinate"
      }
    },
    "/Environment/MiddleHoldMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle hold mouse",
        "description": "Holds the middle mouse button in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleHoldMouse",
            "description": "Inputs for IA-Connect MiddleHoldMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the middle mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleHoldMouse"
      }
    },
    "/Environment/MiddleHoldMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle hold mouse at coordinate",
        "description": "Holds the middle mouse button at the specified coordinates in the IA-Connect Agent user session for the specified amount of seconds.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleHoldMouseAtCoordinate",
            "description": "Inputs for IA-Connect MiddleHoldMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "SecondsToHold": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Seconds to hold",
                  "description": "The number of seconds to hold down the middle mouse button."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "SecondsToHold",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleHoldMouseAtCoordinate"
      }
    },
    "/Environment/DoubleLeftClickMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Double left click mouse",
        "description": "Double clicks the left mouse button in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "DoubleLeftClickMouse",
            "description": "Inputs for IA-Connect DoubleLeftClickMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DelayInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Delay in milliseconds",
                  "description": "The delay between each click, in milliseconds."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DoubleLeftClickMouse"
      }
    },
    "/Environment/DoubleLeftClickMouseAtCoordinate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Double left click mouse at coordinate",
        "description": "Double clicks the left mouse button in the IA-Connect Agent user session at the specified coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "DoubleLeftClickMouseAtCoordinate",
            "description": "Inputs for IA-Connect DoubleLeftClickMouseAtCoordinate action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "YCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "DelayInMilliseconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Delay in milliseconds",
                  "description": "The delay between each click, in milliseconds."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "XCoord",
                "YCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DoubleLeftClickMouseAtCoordinate"
      }
    },
    "/Environment/LeftMouseDragBetweenCoordinates": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Left mouse drag between coordinates",
        "description": "Performs a left mouse button drag between the two specified coordinates in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "LeftMouseDragBetweenCoordinates",
            "description": "Inputs for IA-Connect LeftMouseDragBetweenCoordinates action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "StartXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start X pixels",
                  "description": "The start X coordinate value (in pixels)."
                },
                "StartYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start Y pixels",
                  "description": "The start Y coordinate value (in pixels)."
                },
                "EndXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End X pixels",
                  "description": "The end X coordinate value (in pixels)."
                },
                "EndYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End Y pixels",
                  "description": "The end Y coordinate value (in pixels)."
                },
                "NumberOfSteps": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "title": "Number of steps",
                  "description": "The number of steps that the drag action should be broken into."
                },
                "TotalTimeInSeconds": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Total time in seconds",
                  "description": "The total time that the drag action should take from start to finish."
                },
                "MaximumMovementPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum movement pixel jitter",
                  "description": "The maximum pixel jitter whilst performing the drag action. The higher the value, the less 'smooth' the drag action will appear."
                },
                "MaximumEndPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum end pixel jitter",
                  "description": "The maximum pixel jitter at the end of the drag action. The higher the value, the less precise the drag will be when reaching the end coordinate."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "StartXCoord",
                "StartYCoord",
                "EndXCoord",
                "EndYCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LeftMouseDragBetweenCoordinates"
      }
    },
    "/Environment/RightMouseDragBetweenCoordinates": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Right mouse drag between coordinates",
        "description": "Performs a right mouse button drag between the two specified coordinates in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "RightMouseDragBetweenCoordinates",
            "description": "Inputs for IA-Connect RightMouseDragBetweenCoordinates action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "StartXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start X pixels",
                  "description": "The start X coordinate value (in pixels)."
                },
                "StartYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start Y pixels",
                  "description": "The start Y coordinate value (in pixels)."
                },
                "EndXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End X pixels",
                  "description": "The end X coordinate value (in pixels)."
                },
                "EndYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End Y pixels",
                  "description": "The end Y coordinate value (in pixels)."
                },
                "NumberOfSteps": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "title": "Number of steps",
                  "description": "The number of steps that the drag action should be broken into."
                },
                "TotalTimeInSeconds": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Total time in seconds",
                  "description": "The total time that the drag action should take from start to finish."
                },
                "MaximumMovementPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum movement pixel jitter",
                  "description": "The maximum pixel jitter whilst performing the drag action. The higher the value, the less 'smooth' the drag action will appear."
                },
                "MaximumEndPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum end pixel jitter",
                  "description": "The maximum pixel jitter at the end of the drag action. The higher the value, the less precise the drag will be when reaching the end coordinate."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "StartXCoord",
                "StartYCoord",
                "EndXCoord",
                "EndYCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RightMouseDragBetweenCoordinates"
      }
    },
    "/Environment/MiddleMouseDragBetweenCoordinates": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Middle mouse drag between coordinates",
        "description": "Performs a middle mouse button drag between the two specified coordinates in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "MiddleMouseDragBetweenCoordinates",
            "description": "Inputs for IA-Connect MiddleMouseDragBetweenCoordinates action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "StartXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start X pixels",
                  "description": "The start X coordinate value (in pixels)."
                },
                "StartYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Start Y pixels",
                  "description": "The start Y coordinate value (in pixels)."
                },
                "EndXCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End X pixels",
                  "description": "The end X coordinate value (in pixels)."
                },
                "EndYCoord": {
                  "type": "integer",
                  "format": "int32",
                  "title": "End Y pixels",
                  "description": "The end Y coordinate value (in pixels)."
                },
                "NumberOfSteps": {
                  "type": "integer",
                  "format": "int32",
                  "default": 20,
                  "title": "Number of steps",
                  "description": "The number of steps that the drag action should be broken into."
                },
                "TotalTimeInSeconds": {
                  "type": "number",
                  "format": "double",
                  "default": 0.5,
                  "title": "Total time in seconds",
                  "description": "The total time that the drag action should take from start to finish."
                },
                "MaximumMovementPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum movement pixel jitter",
                  "description": "The maximum pixel jitter whilst performing the drag action. The higher the value, the less 'smooth' the drag action will appear."
                },
                "MaximumEndPixelJitter": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Maximum end pixel jitter",
                  "description": "The maximum pixel jitter at the end of the drag action. The higher the value, the less precise the drag will be when reaching the end coordinate."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "StartXCoord",
                "StartYCoord",
                "EndXCoord",
                "EndYCoord",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MiddleMouseDragBetweenCoordinates"
      }
    },
    "/Environment/TurnMouseWheel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Turn mouse wheel",
        "description": "Turns the mouse wheel (positive or negative notches) in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "TurnMouseWheel",
            "description": "Inputs for IA-Connect TurnMouseWheel action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "WheelTurns": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Wheel turns",
                  "description": "The number of wheel turns to perform."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "WheelTurns",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "TurnMouseWheel"
      }
    },
    "/Environment/SetCursorPos": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set mouse cursor position",
        "description": "Sets the mouse cursor in the IA-Connect Agent user session to the specified position.",
        "parameters": [
          {
            "in": "body",
            "name": "SetCursorPos",
            "description": "Inputs for IA-Connect SetCursorPos action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "X": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "Y": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "X",
                "Y",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetCursorPos"
      }
    },
    "/Environment/GetCursorPos": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get current mouse coordinate",
        "description": "Gets the current mouse cursor position in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetCursorPos",
            "description": "Inputs for IA-Connect GetCursorPos action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "X": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X pixels",
                  "description": "The X coordinate value (in pixels)."
                },
                "Y": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y pixels",
                  "description": "The Y coordinate value (in pixels)."
                }
              }
            }
          }
        },
        "operationId": "GetCursorPos"
      }
    },
    "/Environment/CalibrateMouseEvent": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Calibrate mouse_event",
        "description": "Calibrates the mouse_event method by moving the mouse by the specified number of pixels and then reading the new mouse position.",
        "parameters": [
          {
            "in": "body",
            "name": "CalibrateMouseEvent",
            "description": "Inputs for IA-Connect CalibrateMouseEvent action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CalibrationSizeInPixels": {
                  "type": "integer",
                  "format": "int32",
                  "default": 200,
                  "title": "Calibration size in pixels",
                  "description": "The number of pixels that the mouse will be moved in order to calibrate. The lower the value, the less accurate the calibration will be."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MouseXMultiplier": {
                  "type": "number",
                  "format": "double",
                  "title": "Mouse X multiplier",
                  "description": "The mouse X multiplier value. A value of 1.0 indicates no multiplier."
                },
                "MouseYMultiplier": {
                  "type": "number",
                  "format": "double",
                  "title": "Mouse Y multiplier",
                  "description": "The mouse Y multiplier value. A value of 1.0 indicates no multiplier."
                }
              }
            }
          }
        },
        "operationId": "CalibrateMouseEvent"
      }
    },
    "/Environment/GetMouseMoveMethod": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get mouse move method",
        "description": "Gets the current mouse move method.",
        "parameters": [
          {
            "in": "body",
            "name": "GetMouseMoveMethod",
            "description": "Inputs for IA-Connect GetMouseMoveMethod action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "MouseMoveMethod": {
                  "type": "string",
                  "title": "Mouse move method",
                  "description": "Returns the current mouse move method (either mouse_event or setcursorpos)."
                }
              }
            }
          }
        },
        "operationId": "GetMouseMoveMethod"
      }
    },
    "/Environment/SetMouseMoveMethod": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set mouse move method",
        "description": "Sets the current mouse move method to either mouse_event or setcursorpos.",
        "parameters": [
          {
            "in": "body",
            "name": "SetMouseMoveMethod",
            "description": "Inputs for IA-Connect SetMouseMoveMethod action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "MouseMoveMethod": {
                  "type": "string",
                  "title": "Set mouse move method",
                  "enum": [
                    "mouse_event",
                    "setcursorpos"
                  ],
                  "description": "Provide the mouse move method (mouse_event or setcursorpos)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "MouseMoveMethod",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetMouseMoveMethod"
      }
    },
    "/Environment/WiggleMouse": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wiggle mouse",
        "description": "Moves the mouse back and forth by the specified number of coordinates.",
        "parameters": [
          {
            "in": "body",
            "name": "WiggleMouse",
            "description": "Inputs for IA-Connect WiggleMouse action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XWiggle": {
                  "type": "integer",
                  "format": "int32",
                  "default": 2,
                  "title": "X wiggle",
                  "description": "The number of pixels to move the mouse horizontally."
                },
                "YWiggle": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y wiggle",
                  "description": "The number of pixels to move the mouse vertically."
                },
                "WiggleDelayInSeconds": {
                  "type": "number",
                  "format": "double",
                  "default": 0.1,
                  "title": "Wiggle delay in seconds",
                  "description": "The number of seconds between the mouse movements."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "WiggleMouse"
      }
    },
    "/Environment/SendKeyEvents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send key events",
        "description": "Sends global key press events to the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "SendKeyEvents",
            "description": "Inputs for IA-Connect SendKeyEvents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Text": {
                  "type": "string",
                  "title": "Text",
                  "description": "The text to be sent."
                },
                "Interval": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Interval in milliseconds",
                  "description": "The number of milliseconds between each key press event."
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the text not be interpreted as special keys (e.g. {SHIFT} for Shift, {CTRL} for Ctrl)? This should be set to true if you are attempting to input the actual symbols."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Text",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SendKeyEvents"
      }
    },
    "/Environment/SendPasswordKeyEvents": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send password key events",
        "description": "Sends global key press events to the IA-Connect Agent user session, specifically for entering a password.",
        "parameters": [
          {
            "in": "body",
            "name": "SendPasswordKeyEvents",
            "description": "Inputs for IA-Connect SendPasswordKeyEvents action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password to be sent."
                },
                "Interval": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Interval in milliseconds",
                  "description": "The number of milliseconds between each key press event."
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the password not be interpreted as special keys (e.g. {SHIFT} for Shift, {CTRL} for Ctrl)? This should be set to true if you are attempting to input the actual symbols."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Password",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SendPasswordKeyEvents"
      }
    },
    "/Environment/SendKeys": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send keys",
        "description": "Sends global key presses to the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "SendKeys",
            "description": "Inputs for IA-Connect SendKeys action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Text": {
                  "type": "string",
                  "title": "Text",
                  "description": "The text to be sent."
                },
                "Interval": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Interval in milliseconds",
                  "description": "The number of milliseconds between each key press."
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the text not be interpreted as special keys (e.g. + for Shift, ^ for Ctrl)? This should be set to true if you are attempting to input the actual symbols."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Text",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SendKeys"
      }
    },
    "/Environment/SendPasswordKeys": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send password keys",
        "description": "Sends global key presses to the IA-Connect Agent user session, specifically for entering a password.",
        "parameters": [
          {
            "in": "body",
            "name": "SendPasswordKeys",
            "description": "Inputs for IA-Connect SendPasswordKeys action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Password": {
                  "type": "string",
                  "format": "password",
                  "title": "Password",
                  "description": "The password to be sent."
                },
                "Interval": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10,
                  "title": "Interval in milliseconds",
                  "description": "The number of milliseconds between each key press."
                },
                "DontInterpretSymbols": {
                  "type": "boolean",
                  "default": false,
                  "title": "Dont interpret symbols",
                  "description": "Should symbols in the password not be interpreted as special keys (e.g. + for Shift, ^ for Ctrl)? This should be set to true if you are attempting to input the actual symbols."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Password",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SendPasswordKeys"
      }
    },
    "/Environment/ClearClipboard": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clear clipboard",
        "description": "Clears the contents of the clipboard in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "ClearClipboard",
            "description": "Inputs for IA-Connect ClearClipboard action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ClearClipboard"
      }
    },
    "/Environment/SetClipboardData": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set clipboard",
        "description": "Sets the content of the clipboard in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "SetClipboardData",
            "description": "Inputs for IA-Connect SetClipboardData action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "NewClipboardData": {
                  "type": "string",
                  "title": "New clipboard data",
                  "description": "The data to be set in the clipboard."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetClipboardData"
      }
    },
    "/Environment/GetClipboardData": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get clipboard",
        "description": "Gets the current content of the clipboard in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetClipboardData",
            "description": "Inputs for IA-Connect GetClipboardData action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ClipboardData": {
                  "type": "string",
                  "title": "Clipboard data",
                  "description": "The data contained within the clipboard."
                }
              }
            }
          }
        },
        "operationId": "GetClipboardData"
      }
    },
    "/Environment/TakeScreenshot": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Take screenshot",
        "description": "Takes a screenshot of the IA-Connect Agent user session and returns it as a Base64 encoded string.",
        "parameters": [
          {
            "in": "body",
            "name": "TakeScreenshot",
            "description": "Inputs for IA-Connect TakeScreenshot action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Fullscreen": {
                  "type": "boolean",
                  "default": true,
                  "title": "Fullscreen",
                  "description": "Should the screenshot include the whole screen?"
                },
                "LeftXPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Left X pixels",
                  "description": "If not taking a screenshot of the whole screen, the X value (in pixels) from where the screenshot should start."
                },
                "TopYPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Top Y pixels",
                  "description": "If not taking a screenshot of the whole screen, the Y value (in pixels) from where the screenshot should start."
                },
                "WidthPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Width pixels",
                  "description": "If not taking a screenshot of the whole screen, the width of the screenshot from the start position."
                },
                "HeightPixels": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Height pixels",
                  "description": "If not taking a screenshot of the whole screen, the height of the screenshot from the start position."
                },
                "ImageFormat": {
                  "type": "string",
                  "title": "Image format",
                  "enum": [
                    "PNG",
                    "JPG",
                    "BMP",
                    "GIF"
                  ],
                  "description": "Provide the image format (PNG, JPG, BMP or GIF)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ScreenBitmapBase64": {
                  "type": "string",
                  "title": "Screen image as Base64",
                  "description": "The screen image as a Base64 encoded string."
                }
              }
            }
          }
        },
        "operationId": "TakeScreenshot"
      }
    },
    "/Environment/GetEnvironmentInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get environment info",
        "description": "Returns information about the environment in which the IA-Connect Agent user session is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetEnvironmentInfo",
            "description": "Inputs for IA-Connect GetEnvironmentInfo action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "OSVersionMajor": {
                  "type": "integer",
                  "format": "int32",
                  "title": "OS major version",
                  "description": "The operating system major version."
                },
                "OSVersionMinor": {
                  "type": "integer",
                  "format": "int32",
                  "title": "OS minor version",
                  "description": "The operating system minor version."
                },
                "OSVersionBuild": {
                  "type": "integer",
                  "format": "int32",
                  "title": "OS build version",
                  "description": "The operating system build version."
                },
                "OSIs64Bit": {
                  "type": "boolean",
                  "title": "OS is 64bit",
                  "description": "Returns true if the operating system is 64bit."
                },
                "ProcessorCount": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Processor count",
                  "description": "The processor count."
                },
                "TotalPhysicalRAMInMB": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Total physical RAM in MB",
                  "description": "The amount of physical RAM (in MB)."
                },
                "TotalVirtualRAMInMB": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Total virtual RAM in MB",
                  "description": "The amount of virtual RAM (in MB)."
                },
                "AvailablePhysicalRAMInMB": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Available physical RAM in MB",
                  "description": "The amount of physical RAM that is currently available (in MB)."
                },
                "AvailableVirtualRAMInMB": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Available virtual RAM in MB",
                  "description": "The amount of virtual RAM that is currently available (in MB)."
                },
                "OSFullName": {
                  "type": "string",
                  "title": "OS full name",
                  "description": "The operating system full name, e.g. Microsoft Windows Server 2019 Standard."
                },
                "InstalledUICultureName": {
                  "type": "string",
                  "title": "Installed UI culture name",
                  "description": "The user interface language installed with the operating system, e.g. en-US."
                },
                "CurrentUICultureName": {
                  "type": "string",
                  "title": "Current UI culture name",
                  "description": "The default user interface language, e.g. en-US."
                },
                "CurrentCultureName": {
                  "type": "string",
                  "title": "Current culture name",
                  "description": "The default user locale, e.g. en-GB."
                }
              }
            }
          }
        },
        "operationId": "GetEnvironmentInfo"
      }
    },
    "/Environment/IsScreenReaderEnabled": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is screen reader enabled",
        "description": "Returns whether the screen reader has been enabled in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "IsScreenReaderEnabled",
            "description": "Inputs for IA-Connect IsScreenReaderEnabled action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ScreenReaderEnabled": {
                  "type": "boolean",
                  "title": "Screen reader enabled",
                  "description": "Returns true if the screen reader has been enabled."
                }
              }
            }
          }
        },
        "operationId": "IsScreenReaderEnabled"
      }
    },
    "/Environment/SetScreenReader": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set screen reader",
        "description": "Enables or disables the screen reader in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "SetScreenReader",
            "description": "Inputs for IA-Connect SetScreenReader action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EnableScreenReader": {
                  "type": "boolean",
                  "default": true,
                  "title": "Enable screen reader",
                  "description": "If set to true then the screen reader will be enabled. If set to false then the screen reader will be disabled."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetScreenReader"
      }
    },
    "/Environment/GetParentProcessId": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get parent process Id",
        "description": "Returns the process Id of the parent process for any running process in the IA-Connect Agent user session which has the specified process Id.",
        "parameters": [
          {
            "in": "body",
            "name": "GetParentProcessId",
            "description": "Inputs for IA-Connect GetParentProcessId action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Process Id",
                  "description": "The process ID of the child process."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ParentProcessId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Parent process Id",
                  "description": "The process ID of the parent process."
                },
                "ParentProcessStillRunning": {
                  "type": "boolean",
                  "title": "Parent process still running",
                  "description": "Returns true if the parent process is still running and has not exited."
                },
                "ParentProcessName": {
                  "type": "string",
                  "title": "Parent process name",
                  "description": "The process name of the parent process."
                }
              }
            }
          }
        },
        "operationId": "GetParentProcessId"
      }
    },
    "/Environment/GetProcessIdCommandLine": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get process Id command line properties",
        "description": "Returns the command line properties for any running process in the IA-Connect Agent user session which has the specified process Id.",
        "parameters": [
          {
            "in": "body",
            "name": "GetProcessIdCommandLine",
            "description": "Inputs for IA-Connect GetProcessIdCommandLine action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProcessId": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Process Id",
                  "description": "The process ID of the process to retrieve the command line properties from."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ProcessId",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ProcessCommandLine": {
                  "type": "string",
                  "title": "Process command line",
                  "description": "The command line properties for the process."
                },
                "ProcessArguments": {
                  "type": "string",
                  "title": "Process arguments",
                  "description": "The arguments that were used when starting the process."
                },
                "ProcessCurrentWorkingDirectory": {
                  "type": "string",
                  "title": "Process current working directory",
                  "description": "The process current working directory."
                },
                "ProcessImagePathName": {
                  "type": "string",
                  "title": "Process image path name",
                  "description": "The path to the executable which started the process."
                }
              }
            }
          }
        },
        "operationId": "GetProcessIdCommandLine"
      }
    },
    "/Environment/GetLastInputInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get last input info",
        "description": "Gets the time since the last user input was received in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetLastInputInfo",
            "description": "Inputs for IA-Connect GetLastInputInfo action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "LastInputTotalSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Last input total seconds",
                  "description": "The number of seconds that have elapsed since the last input."
                },
                "LastInputTotalMinutes": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Last input total minutes",
                  "description": "The number of minutes that have elapsed since the last input."
                },
                "LastInputTotalHours": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Last input total hours",
                  "description": "The number of hours that have elapsed since the last input."
                }
              }
            }
          }
        },
        "operationId": "GetLastInputInfo"
      }
    },
    "/Environment/KeepSessionAlive": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Keep session alive",
        "description": "Keeps the IA-Connect Agent user session alive by moving the mouse at the specified interval to prevent the session from becoming idle.",
        "parameters": [
          {
            "in": "body",
            "name": "KeepSessionAlive",
            "description": "Inputs for IA-Connect KeepSessionAlive action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "XWiggle": {
                  "type": "integer",
                  "format": "int32",
                  "default": 2,
                  "title": "X wiggle",
                  "description": "The number of pixels to move the mouse horizontally."
                },
                "YWiggle": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y wiggle",
                  "description": "The number of pixels to move the mouse vertically."
                },
                "WiggleDelayInSeconds": {
                  "type": "number",
                  "format": "double",
                  "default": 0.1,
                  "title": "Wiggle delay in seconds",
                  "description": "The number of seconds between the mouse movements when wiggling."
                },
                "IdleThresholdInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 120,
                  "title": "Idle threshold in seconds",
                  "description": "The number of seconds that should have elapsed since the last input before moving the mouse."
                },
                "IdleCheckPeriodInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 30,
                  "title": "Idle check period in seconds",
                  "description": "The number of seconds between checking the last input time (to check if the idle threshold has been passed)."
                },
                "TotalKeepaliveRuntimeInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "title": "Total keepalive runtime in seconds",
                  "description": "The total number of seconds to keep the session alive for."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "KeepSessionAlive"
      }
    },
    "/Environment/StopKeepSessionAlive": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Stop keep session alive",
        "description": "Stops the IA-Connect Agent user session keep alive.",
        "parameters": [
          {
            "in": "body",
            "name": "StopKeepSessionAlive",
            "description": "Inputs for IA-Connect StopKeepSessionAlive action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "StopKeepSessionAlive"
      }
    },
    "/Environment/CopyFileToClipboard": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Copy file to clipboard",
        "description": "Copies the specified local file to the clipboard in the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "CopyFileToClipboard",
            "description": "Inputs for IA-Connect CopyFileToClipboard action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filepath": {
                  "type": "string",
                  "title": "File name",
                  "description": "The file path to the local file to be copied to the clipboard."
                },
                "Cut": {
                  "type": "boolean",
                  "default": false,
                  "title": "Cut",
                  "description": "If set to true then the file will be cut instead of copied."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filepath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "CopyFileToClipboard"
      }
    },
    "/Environment/GetRemoteSessionInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent session info",
        "description": "Returns information about the IA-Connect Agent user session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetRemoteSessionInfo",
            "description": "Inputs for IA-Connect GetRemoteSessionInfo action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SessionId": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "title": "Session Id",
                  "description": "The current remote user session Id."
                },
                "SessionType": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Session type",
                  "description": "The type of remote session, either 1 (Citrix), 2 (RDP) or 0 (Console)."
                },
                "SessionTypeName": {
                  "type": "string",
                  "title": "Session type name",
                  "description": "The type of remote session, either ICA (Citrix), RDP or Console."
                }
              }
            }
          }
        },
        "operationId": "GetRemoteSessionInfo"
      }
    },
    "/DriverControl/SetRemoteLoggingLevel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Agent log level",
        "description": "Sets the IA-Connect Agent logging level to the specified value (1 being the lowest level and 4 being the highest).",
        "parameters": [
          {
            "in": "body",
            "name": "SetRemoteLoggingLevel",
            "description": "Inputs for IA-Connect SetRemoteLoggingLevel action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "LoggingLevel": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Log level",
                  "description": "The logging level that the IA-Connect Agent should be set to."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "LoggingLevel",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetRemoteLoggingLevel"
      }
    },
    "/DriverControl/GetRemoteLoggingLevel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent log level",
        "description": "Returns the current IA-Connect Agent logging level. The logging levels are set from 1 to 4, with 1 being the lowest level and 4 being the highest.",
        "parameters": [
          {
            "in": "body",
            "name": "GetRemoteLoggingLevel",
            "description": "Inputs for IA-Connect GetRemoteLoggingLevel action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "LoggingLevel": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Log level",
                  "description": "The current logging level of the IA-Connect Agent."
                }
              }
            }
          }
        },
        "operationId": "GetRemoteLoggingLevel"
      }
    },
    "/DriverControl/SetLicenseCode": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect license code",
        "description": "Uploads an old-style (7.0 and 7.1) Agent domain license to the IA-Connect Agent.",
        "parameters": [
          {
            "in": "body",
            "name": "SetLicenseCode",
            "description": "Inputs for IA-Connect SetLicenseCode action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CustomerNETBIOSDomainName": {
                  "type": "string",
                  "title": "Customer NetBIOS domain name",
                  "description": "The NetBIOS domain name of the machine where the IA-Connect Agent is running."
                },
                "CustomerDisplayName": {
                  "type": "string",
                  "title": "Customer display name",
                  "description": "The customer name to be displayed in the title bar of the IA-Connect Agent."
                },
                "VendorName": {
                  "type": "string",
                  "title": "Vendor name",
                  "description": "The IA-Connect vendor name."
                },
                "LicenseExpiryDate": {
                  "type": "string",
                  "title": "License expiry date",
                  "description": "The expiry date of the IA-Connect license."
                },
                "ActivationCode": {
                  "type": "string",
                  "title": "Activation code",
                  "description": "The activation code for the IA-Connect license."
                },
                "StoreInRegistry": {
                  "type": "boolean",
                  "default": true,
                  "title": "Store in registry",
                  "description": "Should the IA-Connect license be temporarily stored in the registry? This ensures that the IA-Connect Agent will be licensed for the duration of the user session, even if the Agent is closed and re-launched."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "CustomerNETBIOSDomainName",
                "CustomerDisplayName",
                "VendorName",
                "LicenseExpiryDate",
                "ActivationCode",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetLicenseCode"
      }
    },
    "/DriverControl/SetLicenseString": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect license key",
        "description": "Uploads an new-style (7.2 onwards) license to the IA-Connect Agent.",
        "parameters": [
          {
            "in": "body",
            "name": "SetLicenseString",
            "description": "Inputs for IA-Connect SetLicenseString action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "LicenseString": {
                  "type": "string",
                  "title": "License key",
                  "description": "The IA-Connect license key."
                },
                "StoreInRegistry": {
                  "type": "boolean",
                  "default": true,
                  "title": "Store in registry",
                  "description": "Should the IA-Connect license be temporarily stored in the registry? This ensures that the IA-Connect Agent will be licensed for the duration of the user session, even if the Agent is closed and re-launched."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "LicenseString",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DaysUntilLicenseExpires": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Days until license expires",
                  "description": "The number of remaining days until the IA-Connect license expires."
                }
              }
            }
          }
        },
        "operationId": "SetLicenseString"
      }
    },
    "/DriverControl/GetLicenseState": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent current license state",
        "description": "Returns whether the IA-Connect Agent is currently licensed and if licensed, the properties of the license.",
        "parameters": [
          {
            "in": "body",
            "name": "GetLicenseState",
            "description": "Inputs for IA-Connect GetLicenseState action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IsLicensed": {
                  "type": "boolean",
                  "title": "Is licensed",
                  "description": "Returns true if the IA-Connect Agent is currently licensed, or false if not."
                },
                "LicenseType": {
                  "type": "string",
                  "title": "License type",
                  "description": "The type of IA-Connect license being used."
                },
                "CustomerNETBIOSDomainName": {
                  "type": "string",
                  "title": "Agent domain name",
                  "description": "The NetBIOS domain name of the machine where the IA-Connect Agent is running, if licensed by domain name (IA-Connect 7.0 or 7.1)."
                },
                "DirectorHostnameCSV": {
                  "type": "string",
                  "title": "Director hostnames",
                  "description": "The hostname(s) of the machines where the IA-Connect Director can be installed, if licensed by hostname (post IA-Connect 7.2)."
                },
                "CustomerDisplayName": {
                  "type": "string",
                  "title": "Customer display name",
                  "description": "The customer name to be displayed in the title bar of the IA-Connect Agent."
                },
                "VendorName": {
                  "type": "string",
                  "title": "Vendor name",
                  "description": "The IA-Connect vendor name."
                },
                "LicenseExpiryDate": {
                  "type": "string",
                  "title": "License expiry date",
                  "description": "The expiry date of the IA-Connect license."
                },
                "DaysUntilLicenseExpires": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Days until license expires",
                  "description": "The number of remaining days until the IA-Connect license expires."
                }
              }
            }
          }
        },
        "operationId": "GetLicenseState"
      }
    },
    "/DriverControl/SetRSAGUITopmost": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Agent GUI topmost",
        "description": "Sets the IA-Connect Agent as topmost. This means that the IA-Connect Agent will always be visible on screen and cannot be hidden behind other application windows.",
        "parameters": [
          {
            "in": "body",
            "name": "SetRSAGUITopmost",
            "description": "Inputs for IA-Connect SetRSAGUITopmost action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "TopMost": {
                  "type": "boolean",
                  "default": true,
                  "title": "Topmost",
                  "description": "Should the IA-Connect Agent be set topmost (true) or should topmost be disabled (false)?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetRSAGUITopmost"
      }
    },
    "/DriverControl/SetRSAGUIOpacity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Agent GUI opacity",
        "description": "Sets the opacity of the IA-Connect Agent from 1 (visible) to 0 (transparent).",
        "parameters": [
          {
            "in": "body",
            "name": "SetRSAGUIOpacity",
            "description": "Inputs for IA-Connect SetRSAGUIOpacity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Opacity": {
                  "type": "number",
                  "format": "double",
                  "default": 1,
                  "title": "Opacity",
                  "description": "The opacity value to be set, between 1 (visible) and 0 (transparent)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Opacity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetRSAGUIOpacity"
      }
    },
    "/DriverControl/SetRSAGUIPosition": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Agent GUI position",
        "description": "Sets the onscreen position of the IA-Connect Agent GUI to the specified location.",
        "parameters": [
          {
            "in": "body",
            "name": "SetRSAGUIPosition",
            "description": "Inputs for IA-Connect SetRSAGUIPosition action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "X": {
                  "type": "integer",
                  "format": "int32",
                  "title": "X",
                  "description": "The X coordinate to set the Agent to, in pixels."
                },
                "Y": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Y",
                  "description": "The Y coordinate to set the Agent to, in pixels."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "X",
                "Y",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetRSAGUIPosition"
      }
    },
    "/DriverControl/BringRSAGUIToFront": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Bring IA-Connect Agent GUI to front",
        "description": "Brings the IA-Connect Agent GUI to the front so it is visible onscreen.",
        "parameters": [
          {
            "in": "body",
            "name": "BringRSAGUIToFront",
            "description": "Inputs for IA-Connect BringRSAGUIToFront action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Focus": {
                  "type": "boolean",
                  "default": true,
                  "title": "Focus",
                  "description": "Should the IA-Connect Agent GUI be focussed?"
                },
                "GlobalLeftMouseClick": {
                  "type": "boolean",
                  "default": true,
                  "title": "Global left mouse click",
                  "description": "Should a global left mouse click be used to bring the Agent to the front? This guarantees a bring to the front event in a scenario where the focus method could be restricted by the operating system preventing applications from bringing themselves to the front."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "BringRSAGUIToFront"
      }
    },
    "/DriverControl/DisconnectSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disconnect remote session",
        "description": "Disconnects the remote session where the IA-Connect Agent is running. This is not the same as logging off and will leave the remote session running in a disconnected state. This action can be used where you wish to connect back to the remote session later and continue from the same state, rather than starting a new session.",
        "parameters": [
          {
            "in": "body",
            "name": "DisconnectSession",
            "description": "Inputs for IA-Connect DisconnectSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToWait": {
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "title": "Seconds to wait",
                  "description": "The time to wait before issuing the disconnect command to the operating system so that the IA-Connect Agent can report completion of the command."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DisconnectSession"
      }
    },
    "/DriverControl/LogoffSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Logoff remote session",
        "description": "Logs off the remote session where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "LogoffSession",
            "description": "Inputs for IA-Connect LogoffSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToWait": {
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "title": "Seconds to wait",
                  "description": "The time to wait after issuing the log off command to the operating system so that the IA-Connect Agent can report completion of the command."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "LogoffSession"
      }
    },
    "/DriverControl/CloseRSAServer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Close IA-Connect Agent",
        "description": "Closes the IA-Connect Agent. This does not affect the user session where the IA-Connect Agent was running.",
        "parameters": [
          {
            "in": "body",
            "name": "CloseRSAServer",
            "description": "Inputs for IA-Connect CloseRSAServer action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SecondsToWait": {
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "title": "Seconds to wait",
                  "description": "The time to wait before issuing the close command so that the IA-Connect Agent can report completion of the command."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "CloseRSAServer"
      }
    },
    "/DriverControl/SetRPACommandTimeout": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Agent command timeout",
        "description": "Sets the command timeout that the IA-Connect Agent will use for each command that is executed.",
        "parameters": [
          {
            "in": "body",
            "name": "SetRPACommandTimeout",
            "description": "Inputs for IA-Connect SetRPACommandTimeout action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CommandTimeoutInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "default": 25,
                  "title": "Command timeout in seconds",
                  "description": "The command timeout that the IA-Connect Agent will use. If reading or writing large amounts of data, you may wish to increase the timeout period."
                },
                "TerminateTimedoutRPACommandThreads": {
                  "type": "boolean",
                  "default": true,
                  "title": "Terminate timedout RPA command threads",
                  "description": "Should the command thread be terminated if it has timed out?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "CommandTimeoutInSeconds",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetRPACommandTimeout"
      }
    },
    "/DriverControl/RunAlternativeIAConnect": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run alternative IA-Connect Agent",
        "description": "Runs an alternative IA-Connect Agent (for example a later version) by loading the Agent executable from a file location.",
        "parameters": [
          {
            "in": "body",
            "name": "RunAlternativeIAConnect",
            "description": "Inputs for IA-Connect RunAlternativeIAConnect action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "Filename",
                  "description": "The full path to the alternative IA-Connect Agent.exe to be ran. This path must be accessible from the session where the IA-Connect Agent is currently running."
                },
                "Arguments": {
                  "type": "string",
                  "title": "Arguments",
                  "description": "Any optional arguments to pass to the IA-Connect Agent.exe when it runs.",
                  "x-ms-visibility": "advanced"
                },
                "LoadIntoMemory": {
                  "type": "boolean",
                  "default": true,
                  "title": "Load into memory",
                  "description": "Should the alternative IA-Connect Agent be ran in memory? If set to true, the new Agent is loaded into memory and executed within an Assembly of the existing Agent. If set to false, the new Agent is executed as a normal process and the existing Agent EXE will exit.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RunAlternativeIAConnect"
      }
    },
    "/DriverControl/RunAlternativeIAConnectSentFromDirector": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Run alternative IA-Connect Agent sent from director",
        "description": "Runs an alternative IA-Connect Agent (for example a later version) by uploading the alternative Agent from the IA-Connect Director and then loading the alternative Agent executable.",
        "parameters": [
          {
            "in": "body",
            "name": "RunAlternativeIAConnectSentFromDirector",
            "description": "Inputs for IA-Connect RunAlternativeIAConnectSentFromDirector action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "LocalFilename": {
                  "type": "string",
                  "title": "Local filename",
                  "description": "The full path to the alternative IA-Connect Agent.exe that is accessible from the IA-Connect director."
                },
                "RemoteFilename": {
                  "type": "string",
                  "title": "Remote filename",
                  "description": "The full path to the location to copy the alternative IA-Connect Agent.exe (on the remote system). If not specified, a temporary filename will be chosen. If the alternative IA-Connect Agent is being loaded into memory then this file won't be created (since it's not needed) unless you set 'Save to disk even if running from memory' to true. You would only set this to true if you wanted to use IA-Connect's Dynamic Code actions which required 'Reference executing assembly' (e.g. to access IA-Connect internal methods)."
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the alternative IA-Connect Agent executable be compressed during the upload?",
                  "x-ms-visibility": "advanced"
                },
                "Arguments": {
                  "type": "string",
                  "title": "Arguments",
                  "description": "Any optional arguments to pass to the IA-Connect Agent.exe when it runs."
                },
                "PermitDowngrade": {
                  "type": "boolean",
                  "default": false,
                  "title": "Permit downgrade",
                  "description": "Should earlier versions of IA-Connect Agent be allowed?",
                  "x-ms-visibility": "advanced"
                },
                "LoadIntoMemory": {
                  "type": "boolean",
                  "default": true,
                  "title": "Load into memory",
                  "description": "Should the alternative IA-Connect Agent be ran in memory? If set to true, the new Agent is loaded into memory and executed within an Assembly of the existing Agent. If set to false, the new Agent is executed as a normal process and the existing Agent EXE will exit.",
                  "x-ms-visibility": "advanced"
                },
                "SaveToDiskEvenIfRunningFromMemory": {
                  "type": "boolean",
                  "default": false,
                  "title": "Save to disk even if running from memory",
                  "description": "Should the alternative IA-Connect Agent be saved to disk even if it is being ran in memory? You would only set this to true if you wanted to use IA-Connect's Dynamic Code actions which required 'Reference executing assembly' (e.g. to access IA-Connect internal methods).",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "LocalFilename",
                "RemoteFilename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "RunAlternativeIAConnectSentFromDirector"
      }
    },
    "/DriverControl/GetIAConnectAgentInfo": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent info",
        "description": "Returns the properties of the IA-Connect Agent, including the version number and the path to the Agent executable.",
        "parameters": [
          {
            "in": "body",
            "name": "GetIAConnectAgentInfo",
            "description": "Inputs for IA-Connect GetIAConnectAgentInfo action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectAgentVersion": {
                  "type": "string",
                  "title": "IA-Connect Agent version",
                  "description": "The full version number of the IA-Connect Agent."
                },
                "DotNetCLRVersion": {
                  "type": "string",
                  "title": "DotNet CLR version",
                  "description": "The DotNet Common Language Runtime (CLR) version."
                },
                "IAConnectAgentRunAsUsername": {
                  "type": "string",
                  "title": "IA-Connect Agent run as username",
                  "description": "The username of the user session that the IA-Connect Agent is running in."
                },
                "IAConnectAgentRunAsUserdomain": {
                  "type": "string",
                  "title": "IA-Connect Agent run as userdomain",
                  "description": "The user domain of the user session that the IA-Connect Agent is running in."
                },
                "IAConnectAgentPath": {
                  "type": "string",
                  "title": "IA-Connect Agent path",
                  "description": "The full path to the IA-Connect Agent executable."
                },
                "IAConnectAgentIs64bitProcess": {
                  "type": "boolean",
                  "title": "IA-Connect Agent is 64bit process",
                  "description": "Returns true if the IA-Connect Agent is a 64bit process, or false if not."
                },
                "IAConnectAgentReleaseVersion": {
                  "type": "string",
                  "title": "IA-Connect Agent release version",
                  "description": "The IA-Connect Agent release version, for example 8.0."
                }
              }
            }
          }
        },
        "operationId": "GetIAConnectAgentInfo"
      }
    },
    "/DriverControl/GetIAConnectAgentLog": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Agent log",
        "description": "Returns the current IA-Connect Agent log, either as a file or by reading the contents and returning it in an output variable.",
        "parameters": [
          {
            "in": "body",
            "name": "GetIAConnectAgentLog",
            "description": "Inputs for IA-Connect GetIAConnectAgentLog action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SaveLogToFile": {
                  "type": "boolean",
                  "default": true,
                  "title": "Save log to file",
                  "description": "Should the IA-Connect Agent log be saved as a file?"
                },
                "LocalSaveFolder": {
                  "type": "string",
                  "title": "Local save folder",
                  "description": "The filepath to the folder to save the IA-Connect Agent log into."
                },
                "UseAgentLogFilename": {
                  "type": "boolean",
                  "default": true,
                  "title": "Use Agent log filename",
                  "description": "Should the log file be given the same name as the name of the log file on the Agent? If set to false then you can set 'Local save filename' to specify the filename."
                },
                "LocalSaveFilename": {
                  "type": "string",
                  "title": "Local save filename",
                  "description": "The filename only of the local save file for the IA-Connect Agent log. This will only be used if 'Use Agent log filename' is set to false."
                },
                "PlaceLogContentInDataItem": {
                  "type": "boolean",
                  "default": false,
                  "title": "Place log content in data item",
                  "description": "Should the contents of the log be returned in an output variable?"
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the alternative IA-Connect Agent executable be compressed during the upload?",
                  "x-ms-visibility": "advanced"
                },
                "MaxBytesToRead": {
                  "type": "integer",
                  "format": "int64",
                  "default": 4000,
                  "title": "Max bytes to read",
                  "description": "The maximum number of bytes to read from the Agent log (from the end backwards). This can be set to 0 or -1 to retrieve the entire log.",
                  "x-ms-visibility": "advanced"
                },
                "ReturnLastCommandOnly": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return last command logs only",
                  "description": "Should the IA-Connect Agent log be restricted to the result of the last command rather than the entire log?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectAgentLogContentsBase64": {
                  "type": "string",
                  "title": "Agent log contents",
                  "description": "The contents of the IA-Connect Agent log."
                },
                "IAConnectAgentLogFilenameOnly": {
                  "type": "string",
                  "title": "Local saved log filename",
                  "description": "The path to the saved log filename."
                }
              }
            }
          }
        },
        "operationId": "GetIAConnectAgentLog"
      }
    },
    "/DriverControl/ResetCommandStats": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reset IA-Connect command statistics",
        "description": "Resets any currently stored statistics on which commands the IA-Connect Agent has executed in the current session.",
        "parameters": [
          {
            "in": "body",
            "name": "ResetCommandStats",
            "description": "Inputs for IA-Connect ResetCommandStats action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ResetCommandStats"
      }
    },
    "/DriverControl/GetAllCommandStats": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get all IA-Connect command statistics",
        "description": "Returns all currently stored statistics on which commands the IA-Connect Agent has executed in the current session.",
        "parameters": [
          {
            "in": "body",
            "name": "GetAllCommandStats",
            "description": "Inputs for IA-Connect GetAllCommandStats action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CommandStatsJSON": {
                  "type": "string",
                  "title": "Command statistics JSON",
                  "description": "The list of commands executed by the IA-Connect Agent in the current session, in JSON format. This list will contain the name of each action and the number of times that it was executed."
                }
              }
            }
          }
        },
        "operationId": "GetAllCommandStats"
      }
    },
    "/DriverControl/EnableNextHop": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Enable IA-Connect next hop",
        "description": "Enables the next hop which will forward all future commands received onto the IA-Connect Agent running in the next hop session.",
        "parameters": [
          {
            "in": "body",
            "name": "EnableNextHop",
            "description": "Inputs for IA-Connect EnableNextHop action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "NextHopDirectorAddress": {
                  "type": "string",
                  "title": "Next hop Director address",
                  "description": "The optional address for the Next hop IA-Connect Director to forward commands to if none of the 'Next hop Director address is localhost', 'Next hop Director address is hostname', 'Next hop Director address is FQDN' or 'Next hop Director address is named pipe' parameters are set to true.",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "default": 8002,
                  "title": "Next hop Director TCP port",
                  "description": "The TCP port that the next hop Director is listening on (the Director on the computer that the Agent is running on).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorUsesHTTPS": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director uses HTTPS",
                  "description": "Set to True if the next hop Director is using HTTPS, or false if not."
                },
                "NextHopDirectorAddressIsLocalhostname": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is localhost",
                  "description": "The next hop director address (relative to the Agent) is 'localhost'.",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsHostname": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is hostname",
                  "description": "The next hop director address is the hostname of the computer running the Agent (i.e. the one running the Agent and the Director).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsFQDN": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is FQDN",
                  "description": "The next hop director address is the fully qualified domain name (FQDN) of the computer running the Agent (i.e. the one running the Agent and the Director).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsNamedPipe": {
                  "type": "boolean",
                  "default": true,
                  "title": "Next hop Director address is named pipe",
                  "description": "The next hop director address (relative to the Agent) is using a named pipe instead of a TCP/IP web service. This is the default to avoid using TCP/IP ports on the first-hop.",
                  "x-ms-visibility": "advanced"
                },
                "IncrementNextHopDirectorTCPPortBySessionId": {
                  "type": "boolean",
                  "default": true,
                  "title": "Increment next hop Director TCP port by Session Id",
                  "description": "To ensure the next hop Director TCP port is unique (if there are multiple parallel sessions using next-hop from the same host), the Session Id can be added to the Next hop Director TCP port.",
                  "x-ms-visibility": "advanced"
                },
                "DisableBeforeEnable": {
                  "type": "boolean",
                  "default": true,
                  "title": "Disable before enabling",
                  "description": "Should double-hop be disabled (if currently active) before enabling again? If set to true (the default), any new double-hop enablement instructions will replace the previous ones. If set to false, this will enable triple-hop since the instructions will be received by the double-hop IA-Connect Agent.",
                  "x-ms-visibility": "advanced"
                },
                "CheckNextHopDirectorIsRunning": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check next hop Director is running",
                  "description": "Next hop requires a running IA-Connect Director on the same computer as the Agent. If this setting is true, the Agent will check the next-hop Director is running as described and will fail to enable next hop if the next hop Director is not running. If this setting is false, the Agent will not perform any checks and simply enable next-hop.",
                  "x-ms-visibility": "advanced"
                },
                "CheckNextHopAgentIsRunning": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check next hop Agent is running",
                  "description": "Next hop requires a running IA-Connect Director on the same computer as the Agent AND a running IA-Connect Agent in the next-hop session. If this setting is true, the Agent will check the next-hop Agent is running as described and will fail to enable next hop if the next hop Agent is not running. If this setting is false, the Agent will not perform any checks and simply enable next-hop.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ActiveNextHopDirectorAddress": {
                  "type": "string",
                  "title": "Active next hop Director address",
                  "description": "The address of the active next hop Director, if one is being used."
                },
                "ActiveNextHopDirectorTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "title": "Active next hop Director TCP port",
                  "description": "The TCP port of the active next hop Director, if one is being used."
                },
                "ActiveNextHopDirectorUsesHTTPS": {
                  "type": "boolean",
                  "title": "Active next hop Director uses HTTPS",
                  "description": "Returns true if the active next hop Director is using HTTPS."
                },
                "ActiveNextHopDirectorURL": {
                  "type": "string",
                  "title": "Active next hop Director URL",
                  "description": "The URL of the active next hop Director."
                }
              }
            }
          }
        },
        "operationId": "EnableNextHop"
      }
    },
    "/DriverControl/DisableNextHop": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Disable IA-Connect next hop",
        "description": "Disables next-hop so that all future commands will be processed by the Agent which receives them (as opposed to being forwarded on to the next hop Agent).",
        "parameters": [
          {
            "in": "body",
            "name": "DisableNextHop",
            "description": "Inputs for IA-Connect DisableNextHop action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DisableNextHop"
      }
    },
    "/DriverControl/GetNextHopStatus": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect next hop status",
        "description": "Reports on the next hop Director status for the Agent which receives this command. If next-hop is enabled, that Agent is forwarding commands to the next hop (via the next-hop Director). If next-hop is disabled, that Agent is processing commands itself (the default).",
        "parameters": [
          {
            "in": "body",
            "name": "GetNextHopStatus",
            "description": "Inputs for IA-Connect GetNextHopStatus action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CheckNextHopDirectorIsRunning": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check next hop Director is running",
                  "description": "Next hop requires a running IA-Connect Director on the same computer as the Agent. If this setting is true, the Agent will check the next-hop Director is running as described. If this setting is false, the Agent will not perform any checks and will simply check the next-hop status."
                },
                "CheckNextHopAgentIsRunning": {
                  "type": "boolean",
                  "default": false,
                  "title": "Check next hop Agent is running",
                  "description": "Next hop requires a running IA-Connect Director on the same computer as the Agent AND a running IA-Connect Agent in the next-hop session. If this setting is true, the Agent will check the next-hop Agent is running as described. If this setting is false, the Agent will not perform any checks and will simply check the next-hop status."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NextHopEnabled": {
                  "type": "boolean",
                  "title": "Next hop enabled",
                  "description": "Returns true if next hop is currently enabled."
                },
                "ActiveNextHopDirectorAddress": {
                  "type": "string",
                  "title": "Active next hop Director address",
                  "description": "The address of the active next hop Director, if one is being used."
                },
                "ActiveNextHopDirectorTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Active next hop Director TCP port",
                  "description": "The TCP port of the active next hop Director, if one is being used."
                },
                "ActiveNextHopDirectorUsesHTTPS": {
                  "type": "boolean",
                  "title": "Active next hop Director uses HTTPS",
                  "description": "Returns true if the active next hop Director is using HTTPS."
                },
                "ActiveNextHopDirectorIsRunning": {
                  "type": "boolean",
                  "title": "Active next hop Director is running",
                  "description": "Returns true if the active next hop Director is running, or false if not."
                },
                "ActiveNextHopDirectorURL": {
                  "type": "string",
                  "title": "Active next hop Director URL",
                  "description": "The URL of the active next hop Director."
                },
                "ActiveNextHopAgentIsRunning": {
                  "type": "boolean",
                  "title": "Active next hop Agent is running",
                  "description": "Returns true if the active next hop Agent is running, or false if not."
                }
              }
            }
          }
        },
        "operationId": "GetNextHopStatus"
      }
    },
    "/DriverControl/WaitForNextHopSessionToConnect": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for IA-Connect next hop session to connect",
        "description": "Waits for the next hop session to connect and for the IA-Connect Agent to be running in the next hop session.",
        "parameters": [
          {
            "in": "body",
            "name": "WaitForNextHopSessionToConnect",
            "description": "Inputs for IA-Connect WaitForNextHopSessionToConnect action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "NextHopDirectorAddress": {
                  "type": "string",
                  "title": "Next hop Director address",
                  "description": "The optional address for the Next hop IA-Connect Director to forward commands to if none of the 'Next hop Director address is localhost', 'Next hop Director address is hostname', 'Next hop Director address is FQDN' or 'Next hop Director address is named pipe' parameters are set to true.",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "default": 8002,
                  "title": "Next hop Director TCP port",
                  "description": "The TCP port that the next hop Director is listening on (the Director on the computer that the Agent is running on).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorUsesHTTPS": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director uses HTTPS",
                  "description": "Set to True if the next hop Director is using HTTPS, or false if not."
                },
                "NextHopDirectorAddressIsLocalhostname": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is localhost",
                  "description": "The next hop director address (relative to the Agent) is 'localhost'.",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsHostname": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is hostname",
                  "description": "The next hop director address is the hostname of the computer running the Agent (i.e. the one running the Agent and the Director).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsFQDN": {
                  "type": "boolean",
                  "default": false,
                  "title": "Next hop Director address is FQDN",
                  "description": "The next hop director address is the fully qualified domain name (FQDN) of the computer running the Agent (i.e. the one running the Agent and the Director).",
                  "x-ms-visibility": "advanced"
                },
                "NextHopDirectorAddressIsNamedPipe": {
                  "type": "boolean",
                  "default": true,
                  "title": "Next hop Director address is named pipe",
                  "description": "The next hop director address (relative to the Agent) is using a named pipe instead of a TCP/IP web service. This is the default to avoid using TCP/IP ports on the first-hop.",
                  "x-ms-visibility": "advanced"
                },
                "IncrementNextHopDirectorTCPPortBySessionId": {
                  "type": "boolean",
                  "default": true,
                  "title": "Increment next hop Director TCP port by Session Id",
                  "description": "To ensure the next hop Director TCP port is unique (if there are multiple parallel sessions using next-hop from the same host), the Session Id can be added to the Next hop Director TCP port.",
                  "x-ms-visibility": "advanced"
                },
                "DisableExistingNextHop": {
                  "type": "boolean",
                  "default": true,
                  "title": "Disable existing next hop",
                  "description": "Should double-hop be disabled (if currently active) before enabling again? If set to true (the default), any new double-hop enablement instructions will replace the previous ones. If set to false, this will enable triple-hop since the instructions will be received by the double-hop IA-Connect Agent.",
                  "x-ms-visibility": "advanced"
                },
                "SecondsToWait": {
                  "type": "number",
                  "format": "double",
                  "default": 35,
                  "title": "Time in seconds to wait",
                  "description": "The maximum number of seconds to wait for the next hop session to connect."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NextHopSessionConnected": {
                  "type": "boolean",
                  "title": "Next hop session connected",
                  "description": "Returns true if the next hop session connected before the maximum time to wait was exceeded."
                }
              }
            }
          }
        },
        "operationId": "WaitForNextHopSessionToConnect"
      }
    },
    "/DriverControl/ConfigureNextHopDirector": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Configure next hop IA-Connect Director",
        "description": "Configure the next-hop Director in a double-hop scenario. This is only required if the default IA-Connect next-hop Director settings are not suitable.",
        "parameters": [
          {
            "in": "body",
            "name": "ConfigureNextHopDirector",
            "description": "Inputs for IA-Connect ConfigureNextHopDirector action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SOAPEnabled": {
                  "type": "boolean",
                  "default": false,
                  "title": "SOAP enabled",
                  "description": "Should the SOAP interface be enabled on the next-hop Director?"
                },
                "RESTEnabled": {
                  "type": "boolean",
                  "default": false,
                  "title": "REST enabled",
                  "description": "Should the REST interface be enabled on the next-hop Director?"
                },
                "WebServerEnabled": {
                  "type": "boolean",
                  "default": false,
                  "title": "Web server enabled",
                  "description": "Should the web server (for hosting the IA-Connect Inspector) be enabled on the next-hop Director?"
                },
                "DirectorIsLocalhostOnly": {
                  "type": "boolean",
                  "default": true,
                  "title": "Director is localhost only",
                  "description": "Should the Director SOAP and REST interfaces only listen on 'localhost'? This should be set to true since no other computer should need to communicate with these interfaces."
                },
                "SOAPTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "default": 8002,
                  "title": "SOAP TCP port",
                  "description": "If the SOAP interface were enabled, what TCP port should it run on (defaults to 8002)?"
                },
                "RESTTCPPort": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "default": 8002,
                  "title": "REST TCP port",
                  "description": "If the REST interface were enabled, what TCP port should it run on (defaults to 8002)?"
                },
                "SOAPUsesHTTPS": {
                  "type": "boolean",
                  "default": false,
                  "title": "SOAP uses HTTPS",
                  "description": "Is the SOAP interface using HTTPS (instead of HTTP)? If set to True then a certificate is required on the first-hop computer to facilitate HTTPS. This can be shared with the certificate used for REST."
                },
                "RESTUsesHTTPS": {
                  "type": "boolean",
                  "default": false,
                  "title": "REST uses HTTPS",
                  "description": "Is the REST interface using HTTPS (instead of HTTP)? If set to True then a certificate is required on the first-hop computer to facilitate HTTPS. This can be shared with the certificate used for SOAP."
                },
                "IncrementDirectorTCPPortBySessionId": {
                  "type": "boolean",
                  "default": true,
                  "title": "Increment Director TCP port by SessionId",
                  "description": "To ensure the Director TCP port is unique (if there are multiple parallel sessions using double-hop from the same first-hop host), the first-hop Session Id can be added to the Director TCP port. This is only required if either SOAP or REST is enabled on the first-hop Director and these are typically not enabled because named pipes are used by default."
                },
                "SOAPUsesUserAuthentication": {
                  "type": "boolean",
                  "default": false,
                  "title": "SOAP uses user authentication",
                  "description": "Set to True if you want the HTTP SOAP TCP port to use user authentication. Refer to the IA-Connect Installation Guide for information on how to set this up."
                },
                "RESTUsesUserAuthentication": {
                  "type": "boolean",
                  "default": false,
                  "title": "REST uses user authentication",
                  "description": "Set to True if you want the HTTP REST TCP port to use user authentication. Refer to the IA-Connect Installation Guide for information on how to set this up."
                },
                "CommandNamedPipeEnabled": {
                  "type": "boolean",
                  "default": true,
                  "title": "Command named pipe enabled",
                  "description": "Should the first-hop Agent use named pipes to communicate with the first-hop Director? This is the default communication method."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ConfigureNextHopDirector"
      }
    },
    "/DriverControl/ResetNextHopDirectorSettings": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reset next hop IA-Connect Director settings",
        "description": "Resets any custom IA-Connect Director settings that have been set, restoring the default settings.",
        "parameters": [
          {
            "in": "body",
            "name": "ResetNextHopDirectorSettings",
            "description": "Inputs for IA-Connect ResetNextHopDirectorSettings action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ResetNextHopDirectorSettings"
      }
    },
    "/DriverControl/WorkflowCompleted": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Mark Flow as complete",
        "description": "Mark a Flow as complete, which informs the IA-Connect Orchestrator that the assigned worker machine is now available to process other Flows.",
        "parameters": [
          {
            "in": "body",
            "name": "WorkflowCompleted",
            "description": "Inputs for IA-Connect WorkflowCompleted action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "WorkflowCompleted"
      }
    },
    "/DriverControl/SetLocalLoggingLevel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set IA-Connect Director log level",
        "description": "Sets the IA-Connect Director logging level to the specified value (1 being the lowest level and 4 being the highest).",
        "parameters": [
          {
            "in": "body",
            "name": "SetLocalLoggingLevel",
            "description": "Inputs for IA-Connect SetLocalLoggingLevel action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "LoggingLevel": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "title": "Log level",
                  "description": "The logging level that the IA-Connect Director should be set to."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "LoggingLevel",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetLocalLoggingLevel"
      }
    },
    "/DriverControl/GetAvailableIAConnectSessions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get available IA-Connect Sessions",
        "description": "Retrieves a list of IA-Connect Director sessions (available connections to sessions where the IA-Connect Agent is running, such as local, Microsoft RDP or Citrix ICA).",
        "parameters": [
          {
            "in": "body",
            "name": "GetAvailableIAConnectSessions",
            "description": "Inputs for IA-Connect GetAvailableIAConnectSessions action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionsJSON": {
                  "type": "string",
                  "title": "IA-Connect sessions JSON",
                  "description": "A list of all IA-Connect sessions, formatted as JSON."
                },
                "NumberOfIAConnectSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of IA-Connect sessions",
                  "description": "The total number of IA-Connect sessions that are open."
                },
                "NumberOfLocalIAConnectSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of local IA-Connect sessions",
                  "description": "The number of local IA-Connect sessions that are open."
                },
                "NumberOfCitrixICAIAConnectSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of Citrix ICA IA-Connect sessions",
                  "description": "The number of Citrix ICA IA-Connect sessions that are open."
                },
                "NumberOfMicrosoftRDPIAConnectSessions": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of Microsoft RDP IA-Connect sessions",
                  "description": "The number of Microsoft RDP IA-Connect sessions that are open."
                }
              }
            }
          }
        },
        "operationId": "GetAvailableIAConnectSessions"
      }
    },
    "/DriverControl/AttachToIAConnectSessionByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to IA-Connect session by name",
        "description": "Attaches to the specified IA-Connect Director session by name. This is the session into which commands to an IA-Connect Agent are sent.",
        "parameters": [
          {
            "in": "body",
            "name": "AttachToIAConnectSessionByName",
            "description": "Inputs for IA-Connect AttachToIAConnectSessionByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionName": {
                  "type": "string",
                  "title": "IA-Connect session name",
                  "description": "The name of the IA-Connect session to connect to."
                },
                "VirtualChannelMustBeConnected": {
                  "type": "boolean",
                  "default": true,
                  "title": "Virtual channel must be connected",
                  "description": "Should the IA-Connect Director validate that the virtual channel is connected when attaching to the session? This ensures that the IA-Connect Agent is running in the specified session."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "AttachToIAConnectSessionByName"
      }
    },
    "/DriverControl/AttachToTier1IAConnectSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to tier 1 IA-Connect session",
        "description": "Attaches to the IA-Connect Director session of the Director receiving the SOAP and / or REST messages. This is the session into which commands to an IA-Connect Agent are sent.",
        "parameters": [
          {
            "in": "body",
            "name": "AttachToTier1IAConnectSession",
            "description": "Inputs for IA-Connect AttachToTier1IAConnectSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "VirtualChannelMustBeConnected": {
                  "type": "boolean",
                  "default": true,
                  "title": "Virtual channel must be connected",
                  "description": "Should the IA-Connect Director validate that the virtual channel is connected when attaching to the session? This ensures that the IA-Connect Agent is running in the specified session."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AttachedTier1IAConnectSessionName": {
                  "type": "string",
                  "title": "Attached tier 1 IA-Connect session name",
                  "description": "The name of the tier 1 IA-Connect session that was connected to."
                }
              }
            }
          }
        },
        "operationId": "AttachToTier1IAConnectSession"
      }
    },
    "/DriverControl/AttachToIAConnectSessionByIndex": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to IA-Connect session by index",
        "description": "Attaches to the specified IA-Connect Director session by index (e.g. attach to first Citrix ICA session). This is the session into which commands to an IA-Connect Agent are sent.",
        "parameters": [
          {
            "in": "body",
            "name": "AttachToIAConnectSessionByIndex",
            "description": "Inputs for IA-Connect AttachToIAConnectSessionByIndex action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchIAConnectSessionType": {
                  "type": "string",
                  "title": "Search IA-Connect session type",
                  "enum": [
                    "Local Agent",
                    "Microsoft RDP",
                    "Citrix ICA",
                    "Remote"
                  ],
                  "description": "The session type to search for, e.g. 'Local Agent', 'Microsoft RDP', 'Citrix ICA' or 'Remote' for any type of remote session. Leave blank to search for any session type."
                },
                "SearchIAConnectSessionIndex": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Search IA-Connect session index",
                  "description": "The index of the session to connect to, e.g. 1 for the first matching session type, 2 for second matching session type."
                },
                "TimeToWaitInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Time to wait in seconds",
                  "description": "If the session with the specified index doesn't exist, how long should IA-Connect wait for it?"
                },
                "RaiseExceptionIfTimedout": {
                  "type": "boolean",
                  "default": true,
                  "title": "Raise exception if timed out",
                  "description": "Should IA-Connect raise an exception if a new session has not connected before the timeout period has elapsed?"
                },
                "VirtualChannelMustBeConnected": {
                  "type": "boolean",
                  "default": true,
                  "title": "Virtual channel must be connected",
                  "description": "Should the IA-Connect Director validate that the virtual channel is connected when attaching to the session? This ensures that the IA-Connect Agent is running in the specified session."
                },
                "OnlyCountSessionsNotSeenBefore": {
                  "type": "boolean",
                  "default": false,
                  "title": "Only count sessions not seen before",
                  "description": "If set to true then any sessions seen by the previously run 'Get available IA-Connect sessions' action (or the IA-Connect Inspector viewing sessions) will not be counted in the index. This allows only 'new' sessions to be counted (e.g. attach to the first new Citrix session)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AttachedIAConnectSessionName": {
                  "type": "string",
                  "title": "Attached IA-Connect session name",
                  "description": "The name of the IA-Connect session that was attached to."
                },
                "AttachedToSession": {
                  "type": "boolean",
                  "title": "Attached to session",
                  "description": "Returns true if IA-Connect has attached to a session, or false if not."
                }
              }
            }
          }
        },
        "operationId": "AttachToIAConnectSessionByIndex"
      }
    },
    "/DriverControl/AttachToMostRecentIAConnectSession": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Attach to most recent IA-Connect session",
        "description": "Attaches to the IA-Connect Director session which most recently connected (optionally of a specified type). This is the session into which commands to an IA-Connect Agent are sent.",
        "parameters": [
          {
            "in": "body",
            "name": "AttachToMostRecentIAConnectSession",
            "description": "Inputs for IA-Connect AttachToMostRecentIAConnectSession action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SearchIAConnectSessionType": {
                  "type": "string",
                  "title": "Search IA-Connect session type",
                  "enum": [
                    "Local Agent",
                    "Microsoft RDP",
                    "Citrix ICA",
                    "Remote"
                  ],
                  "description": "The session type to search for, e.g. 'Local Agent', 'Microsoft RDP', 'Citrix ICA' or 'Remote' for any type of remote session. Leave blank to search for any session type."
                },
                "TimeToWaitInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Time to wait in seconds",
                  "description": "If there is no session of the specified type (if a specific type was specified), how long should IA-Connect wait for it?"
                },
                "RaiseExceptionIfTimedout": {
                  "type": "boolean",
                  "default": true,
                  "title": "Raise exception if timed out",
                  "description": "Should IA-Connect raise an exception if a new session has not connected before the timeout period has elapsed?"
                },
                "VirtualChannelMustBeConnected": {
                  "type": "boolean",
                  "default": true,
                  "title": "Virtual channel must be connected",
                  "description": "Should the IA-Connect Director validate that the virtual channel is connected when attaching to the session? This ensures that the IA-Connect Agent is running in the specified session."
                },
                "OnlyCountSessionsNotSeenBefore": {
                  "type": "boolean",
                  "default": false,
                  "title": "Only count sessions not seen before",
                  "description": "If set to true then any sessions seen by the previously run 'Get available IA-Connect sessions' action (or the IA-Connect Inspector viewing sessions) will not be counted in the index. This allows only 'new' sessions to be counted (e.g. attach to the first new Citrix session)."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "AttachedIAConnectSessionName": {
                  "type": "string",
                  "title": "Attached IA-Connect session name",
                  "description": "The name of the IA-Connect session that was attached to."
                },
                "AttachedToSession": {
                  "type": "boolean",
                  "title": "Attached to session",
                  "description": "Returns true if IA-Connect has attached to a session, or false if not."
                }
              }
            }
          }
        },
        "operationId": "AttachToMostRecentIAConnectSession"
      }
    },
    "/DriverControl/GetDirectorUpTime": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get IA-Connect Director uptime",
        "description": "Returns the uptime of this IA-Connect Director in seconds (i.e. how long the Director has been running).",
        "parameters": [
          {
            "in": "body",
            "name": "GetDirectorUpTime",
            "description": "Inputs for IA-Connect GetDirectorUpTime action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "UpTimeInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Director uptime in seconds",
                  "description": "The number of seconds that the IA-Connect Director has been running."
                }
              }
            }
          }
        },
        "operationId": "GetDirectorUpTime"
      }
    },
    "/DriverControl/DoesIAConnectSessionExistByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Does IA-Connect session exist by name",
        "description": "Returns if the specified IA-Connect Director session exists. This is the session into which commands to an IA-Connect Agent are sent. The name will be known from an earlier 'Attach' action.",
        "parameters": [
          {
            "in": "body",
            "name": "DoesIAConnectSessionExistByName",
            "description": "Inputs for IA-Connect DoesIAConnectSessionExistByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionName": {
                  "type": "string",
                  "title": "IA-Connect session name",
                  "description": "The name of the IA-Connect session to check."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionExists": {
                  "type": "boolean",
                  "title": "IA-Connect session exists",
                  "description": "Returns true if a session with the specified name exists, or false if not."
                }
              }
            }
          }
        },
        "operationId": "DoesIAConnectSessionExistByName"
      }
    },
    "/DriverControl/WaitForIAConnectSessionToCloseByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Wait for IA-Connect session to close by name",
        "description": "Waits for the specified IA-Connect Director session to close. This is the session into which commands to an IA-Connect Agent are sent. The name will be known from an earlier 'Attach' action.",
        "parameters": [
          {
            "in": "body",
            "name": "WaitForIAConnectSessionToCloseByName",
            "description": "Inputs for IA-Connect WaitForIAConnectSessionToCloseByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionName": {
                  "type": "string",
                  "title": "IA-Connect session name",
                  "description": "The name of the IA-Connect session to check."
                },
                "TimeToWaitInSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Time to wait in seconds",
                  "description": "If there is no session of the specified type (if a specific type was specified), how long should IA-Connect wait for it?"
                },
                "RaiseExceptionIfTimedout": {
                  "type": "boolean",
                  "default": true,
                  "title": "Raise exception if timed out",
                  "description": "Should IA-Connect raise an exception if a new session has not connected before the timeout period has elapsed?"
                },
                "AttachToTier1IAConnectSessionOnSuccess": {
                  "type": "boolean",
                  "default": true,
                  "title": "Attach to tier 1 IA-Connect session on success",
                  "description": "Should IA-Connect connect back to the tier 1 IA-Connect session (the IA-Connect Director session of the Director that is receiving the SOAP and / or REST messages) if the session has successfully closed?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionClosed": {
                  "type": "boolean",
                  "title": "IA-Connect session closed",
                  "description": "Returns true if the session with the specified name has closed, or false if not."
                },
                "AttachedTier1IAConnectSessionName": {
                  "type": "string",
                  "title": "Attached tier 1 IA-Connect session name",
                  "description": "The name of the tier 1 IA-Connect session that was connected to."
                }
              }
            }
          }
        },
        "operationId": "WaitForIAConnectSessionToCloseByName"
      }
    },
    "/DriverControl/KillIAConnectSessionByName": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Kill IA-Connect session by name",
        "description": "Kills the specified IA-Connect Director session if it exists. This is the session into which commands to an IA-Connect Agent are sent. The name will be known from an earlier 'Attach' action.",
        "parameters": [
          {
            "in": "body",
            "name": "KillIAConnectSessionByName",
            "description": "Inputs for IA-Connect KillIAConnectSessionByName action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionName": {
                  "type": "string",
                  "title": "IA-Connect session name",
                  "description": "The name of the IA-Connect session to kill."
                },
                "AttachToTier1IAConnectSessionOnSuccess": {
                  "type": "boolean",
                  "default": true,
                  "title": "Attach to tier 1 IA-Connect session on success",
                  "description": "Should IA-Connect connect back to the tier 1 IA-Connect session (the IA-Connect Director session of the Director that is receiving the SOAP and / or REST messages) if the session has successfully closed?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "IAConnectSessionKilled": {
                  "type": "boolean",
                  "title": "IA-Connect session killed",
                  "description": "Returns true if the session with the specified name was killed, or false if not."
                },
                "AttachedTier1IAConnectSessionName": {
                  "type": "string",
                  "title": "Attached tier 1 IA-Connect session name",
                  "description": "The name of the tier 1 IA-Connect session that was connected to."
                }
              }
            }
          }
        },
        "operationId": "KillIAConnectSessionByName"
      }
    },
    "/FileManagement/FileExists": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Does file exist",
        "description": "Reports true or false as to whether a file exists on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "FileExists",
            "description": "Inputs for IA-Connect FileExists action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FileExists": {
                  "type": "boolean",
                  "title": "File exists",
                  "description": "Returns true if the file exists, or false if not."
                }
              }
            }
          }
        },
        "operationId": "FileExists"
      }
    },
    "/FileManagement/DirectoryExists": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Does directory exist",
        "description": "Reports true or false as to whether a directory (folder) exists on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "DirectoryExists",
            "description": "Inputs for IA-Connect DirectoryExists action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryExists": {
                  "type": "boolean",
                  "title": "Directory exists",
                  "description": "Returns true if the directory (folder) exists, or false if not."
                }
              }
            }
          }
        },
        "operationId": "DirectoryExists"
      }
    },
    "/FileManagement/DeleteFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete file",
        "description": "Deletes a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "DeleteFile",
            "description": "Inputs for IA-Connect DeleteFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DeleteFile"
      }
    },
    "/FileManagement/DeleteDirectory": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete directory",
        "description": "Deletes a directory (folder) on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "DeleteDirectory",
            "description": "Inputs for IA-Connect DeleteDirectory action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Recursive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Recursive",
                  "description": "Should subdirectories (subfolders) and files in the directory also be deleted?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "DeleteDirectory"
      }
    },
    "/FileManagement/PurgeDirectory": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Purge directory",
        "description": "Purges a directory (folder) on the computer where the IA-Connect Agent is running, removing all files stored within the directory.",
        "parameters": [
          {
            "in": "body",
            "name": "PurgeDirectory",
            "description": "Inputs for IA-Connect PurgeDirectory action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Recursive": {
                  "type": "boolean",
                  "default": false,
                  "title": "Recursive",
                  "description": "Should all subfolders also be purged?"
                },
                "DeleteTopLevel": {
                  "type": "boolean",
                  "default": false,
                  "title": "Delete top level",
                  "description": "Should the top level folder also be deleted?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "PurgeDirectory"
      }
    },
    "/FileManagement/CopyFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Copy file",
        "description": "Copies a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "CopyFile",
            "description": "Inputs for IA-Connect CopyFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceFilePath": {
                  "type": "string",
                  "title": "Source file path",
                  "description": "The full path to the source file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "DestFilePath": {
                  "type": "string",
                  "title": "Destination file path",
                  "description": "The full path to the destination where the file should be copied to. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceFilePath",
                "DestFilePath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "CopyFile"
      }
    },
    "/FileManagement/MoveFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move file",
        "description": "Moves a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "MoveFile",
            "description": "Inputs for IA-Connect MoveFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceFilePath": {
                  "type": "string",
                  "title": "Source file path",
                  "description": "The full path to the source file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "DestFilePath": {
                  "type": "string",
                  "title": "Destination file path",
                  "description": "The full path to the destination where the file should be moved to. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceFilePath",
                "DestFilePath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "MoveFile"
      }
    },
    "/FileManagement/CreateDirectory": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create directory",
        "description": "Creates a directory (folder) on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "CreateDirectory",
            "description": "Inputs for IA-Connect CreateDirectory action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "ErrorIfAlreadyExists": {
                  "type": "boolean",
                  "default": false,
                  "title": "Error if already exists",
                  "description": "Should IA-Connect raise an error if the directory (folder) already exists?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "CreateDirectory"
      }
    },
    "/FileManagement/GetFileSize": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get file size",
        "description": "Returns the size (in bytes) of a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetFileSize",
            "description": "Inputs for IA-Connect GetFileSize action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FileSize": {
                  "type": "integer",
                  "format": "int64",
                  "title": "File size",
                  "description": "The size of the file, in bytes."
                }
              }
            }
          }
        },
        "operationId": "GetFileSize"
      }
    },
    "/FileManagement/WriteTextFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Write text file",
        "description": "Creates a text file on the computer where the IA-Connect Agent is running and writes text into the file.",
        "parameters": [
          {
            "in": "body",
            "name": "WriteTextFile",
            "description": "Inputs for IA-Connect WriteTextFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "TextToWrite": {
                  "type": "string",
                  "title": "Text to write",
                  "description": "The text contents to be written into the file."
                },
                "AppendExistingFile": {
                  "type": "boolean",
                  "default": false,
                  "title": "Append existing file",
                  "description": "If the file already exists, should the new text to write be appended to the end of the existing file?"
                },
                "Encoding": {
                  "type": "string",
                  "title": "Encoding",
                  "enum": [
                    "Unicode",
                    "UTF8",
                    "UTF7",
                    "ASCII"
                  ],
                  "description": "Provide the file encoding (Unicode, UTF8, UTF7 or ASCII) or leave blank for the default (UTF8).",
                  "x-ms-visibility": "advanced"
                },
                "CreateFolderIfRequired": {
                  "type": "boolean",
                  "default": true,
                  "title": "Create folder if required",
                  "description": "If the folder to store the file in that was provided in the 'File path' parameter does not exist, should this folder be created?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "WriteTextFile"
      }
    },
    "/FileManagement/ReadAllTextFromFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Read all text from file",
        "description": "Reads the text contents of a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "ReadAllTextFromFile",
            "description": "Inputs for IA-Connect ReadAllTextFromFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Filename": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Filename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FileTextContents": {
                  "type": "string",
                  "title": "File text contents",
                  "description": "The text contents of the file."
                }
              }
            }
          }
        },
        "operationId": "ReadAllTextFromFile"
      }
    },
    "/FileManagement/GetFiles": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get files",
        "description": "Returns a list of files in a folder (matching a CSV list of patterns) on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetFiles",
            "description": "Inputs for IA-Connect GetFiles action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "PatternsCSV": {
                  "type": "string",
                  "title": "Patterns CSV",
                  "description": "A comma separated list of file patterns to match, for example *.* for all files or '*.txt,*.docx' for files with either a .txt or .docx extension."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "PatternsCSV",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FilesJSON": {
                  "type": "string",
                  "title": "Files JSON",
                  "description": "A list of files contained within the folder, in JSON format."
                },
                "NumberOfFilesReadSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files read successfully",
                  "description": "The number of files that were read successfully."
                },
                "NumberOfFilesFailedToRead": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files failed to read",
                  "description": "The number of files that could not be read."
                }
              }
            }
          }
        },
        "operationId": "GetFiles"
      }
    },
    "/FileManagement/GetFolders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get folders",
        "description": "Returns all sub-folders within a specified folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetFolders",
            "description": "Inputs for IA-Connect GetFolders action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FoldersJSON": {
                  "type": "string",
                  "title": "Folders JSON",
                  "description": "A list of subfolders contained within the folder, in JSON format."
                },
                "NumberOfFoldersReadSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of folders read successfully",
                  "description": "The number of subfolders that were read successfully."
                },
                "NumberOfFoldersFailedToRead": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of folders failed to read",
                  "description": "The number of subfolders that could not be read."
                }
              }
            }
          }
        },
        "operationId": "GetFolders"
      }
    },
    "/FileManagement/DeleteFiles": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete files",
        "description": "Deletes files within a specified folder matching a pattern on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "DeleteFiles",
            "description": "Inputs for IA-Connect DeleteFiles action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Pattern": {
                  "type": "string",
                  "title": "Pattern",
                  "description": "A pattern to match against files to be deleted, for example *.* for all files or *.txt for files with a .txt extension."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "NumberOfFilesDeleted": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files deleted",
                  "description": "The number of files that were deleted successfully."
                },
                "NumberOfFilesFailedToDelete": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files failed to delete",
                  "description": "The number of files that could not be deleted."
                }
              }
            }
          }
        },
        "operationId": "DeleteFiles"
      }
    },
    "/FileManagement/GetDiskFreeSpace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get disk free space",
        "description": "Returns the amount of free space for a specified disk on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetDiskFreeSpace",
            "description": "Inputs for IA-Connect GetDiskFreeSpace action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DriveLetter": {
                  "type": "string",
                  "title": "Drive letter",
                  "description": "The drive letter of the disk to check."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DriveLetter",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FreeSpaceBytes": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Disk free space bytes",
                  "description": "The amount of free disk space, in bytes."
                },
                "FreeSpaceKB": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Disk free space KB",
                  "description": "The amount of free disk space, in kilobytes."
                },
                "FreeSpaceMB": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Disk free space MB",
                  "description": "The amount of free disk space, in megabytes."
                },
                "FreeSpaceGB": {
                  "type": "integer",
                  "format": "int64",
                  "title": "Disk free space GB",
                  "description": "The amount of free disk space, in gigabytes."
                }
              }
            }
          }
        },
        "operationId": "GetDiskFreeSpace"
      }
    },
    "/FileManagement/GetListOfDrives": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get list of drives",
        "description": "Returns a list of drives on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetListOfDrives",
            "description": "Inputs for IA-Connect GetListOfDrives action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DrivesJSON": {
                  "type": "string",
                  "title": "Drives JSON",
                  "description": "A list of drives on the computer where the IA-Connect Agent is running, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "GetListOfDrives"
      }
    },
    "/FileManagement/DirectoryIsAccessible": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Is directory accessible",
        "description": "Returns whether a directory (folder) is accessible and whether permissions are restricting access to it on the computer where the IA-Connect Agent.",
        "parameters": [
          {
            "in": "body",
            "name": "DirectoryIsAccessible",
            "description": "Inputs for IA-Connect DirectoryIsAccessible action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryPath": {
                  "type": "string",
                  "title": "Directory path",
                  "description": "The full path to the directory (folder). This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DirectoryPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DirectoryAccessible": {
                  "type": "boolean",
                  "title": "Directory accessible",
                  "description": "Returns true if the directory is accessible, or false if not."
                },
                "DirectoryAccessUnauthorised": {
                  "type": "boolean",
                  "title": "Directory access unauthorised",
                  "description": "Returns true if the directory is unaccessible as permissions are restricting access to it, or false if not."
                }
              }
            }
          }
        },
        "operationId": "DirectoryIsAccessible"
      }
    },
    "/FileManagement/GetCSVTextAsCollection": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get CSV text as collection",
        "description": "Returns a CSV file on the computer where the IA-Connect Agent is running as a collection (table). Only requires read only access to CSV file.",
        "parameters": [
          {
            "in": "body",
            "name": "GetCSVTextAsCollection",
            "description": "Inputs for IA-Connect GetCSVTextAsCollection action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CSVFilePath": {
                  "type": "string",
                  "title": "CSV file path",
                  "description": "The full path to the CSV file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "FirstLineIsHeader": {
                  "type": "boolean",
                  "default": true,
                  "title": "First line is header",
                  "description": "Is the first line in the CSV file a header row?"
                },
                "TrimHeaders": {
                  "type": "boolean",
                  "default": true,
                  "title": "Trim headers",
                  "description": "Should the headers be trimmed to remove any leading or trailing whitespace?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "CSVFilePath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "CSVDataJSON": {
                  "type": "string",
                  "title": "CSV data JSON",
                  "description": "The contents of the CSV file, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "GetCSVTextAsCollection"
      }
    },
    "/FileManagement/SetOwnerOnFolder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set owner on folder",
        "description": "Sets the owner on a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "SetOwnerOnFolder",
            "description": "Inputs for IA-Connect SetOwnerOnFolder action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the user to be assigned ownership. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetOwnerOnFolder"
      }
    },
    "/FileManagement/SetOwnerOnFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set owner on file",
        "description": "Sets the owner on a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "SetOwnerOnFile",
            "description": "Inputs for IA-Connect SetOwnerOnFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FilePath": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "UserIdentity": {
                  "type": "string",
                  "title": "User identity",
                  "description": "The identity of the user to be assigned ownership. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FilePath",
                "UserIdentity",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "SetOwnerOnFile"
      }
    },
    "/FileManagement/AddPermissionToFolder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add permission to folder",
        "description": "Adds a permission to a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "AddPermissionToFolder",
            "description": "Inputs for IA-Connect AddPermissionToFolder action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Identity": {
                  "type": "string",
                  "title": "Identity",
                  "description": "The identity (e.g. a user, group or computer) to be assigned the permission. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Permission": {
                  "type": "string",
                  "default": "Read",
                  "title": "Permission",
                  "enum": [
                    "Read",
                    "ReadAndExecute",
                    "Modify",
                    "FullControl"
                  ],
                  "description": "Provide the permission to be assigned (Read, ReadAndExecute, Modify or FullControl) or leave blank for the default (Read)."
                },
                "ApplyToFolder": {
                  "type": "boolean",
                  "default": false,
                  "title": "Apply to folder",
                  "description": "Should the permission apply to the folder itself?"
                },
                "ApplyToSubFolders": {
                  "type": "boolean",
                  "default": true,
                  "title": "Apply to sub-folders",
                  "description": "Should the permission propagate to sub-folders?"
                },
                "ApplyToFiles": {
                  "type": "boolean",
                  "default": true,
                  "title": "Apply to files",
                  "description": "Should the permission apply to the files within the folder?"
                },
                "Deny": {
                  "type": "boolean",
                  "default": false,
                  "title": "Deny",
                  "description": "Is the permission being denied?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "Identity",
                "Permission",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "AddPermissionToFolder"
      }
    },
    "/FileManagement/AddPermissionToFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add permission to file",
        "description": "Adds a permission to a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "AddPermissionToFile",
            "description": "Inputs for IA-Connect AddPermissionToFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FilePath": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Identity": {
                  "type": "string",
                  "title": "Identity",
                  "description": "The identity of the user or group to be assigned the permission. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Permission": {
                  "type": "string",
                  "default": "Read",
                  "title": "Permission",
                  "enum": [
                    "Read",
                    "ReadAndExecute",
                    "Modify",
                    "FullControl"
                  ],
                  "description": "Provide the permission to be assigned (Read, ReadAndExecute, Modify or FullControl) or leave blank for the default (Read)."
                },
                "Deny": {
                  "type": "boolean",
                  "default": false,
                  "title": "Deny",
                  "description": "Is the permission being denied?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FilePath",
                "Identity",
                "Permission",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "AddPermissionToFile"
      }
    },
    "/FileManagement/BreakFolderSecurityInheritance": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Break folder security inheritance",
        "description": "Breaks security inheritance on a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "BreakFolderSecurityInheritance",
            "description": "Inputs for IA-Connect BreakFolderSecurityInheritance action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "ConvertInheritedToExplicit": {
                  "type": "boolean",
                  "default": true,
                  "title": "Convert inherited to explicit",
                  "description": "Should any currently inherited permissions be converted to explicit permissions?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "BreakFolderSecurityInheritance"
      }
    },
    "/FileManagement/EnableFolderSecurityInheritance": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Enable folder security inheritance",
        "description": "Enables security inheritance on a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "EnableFolderSecurityInheritance",
            "description": "Inputs for IA-Connect EnableFolderSecurityInheritance action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "EnableFolderSecurityInheritance"
      }
    },
    "/FileManagement/GetFolderSecurityPermissions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get folder security permissions",
        "description": "Returns a list of permissions currently set on a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetFolderSecurityPermissions",
            "description": "Inputs for IA-Connect GetFolderSecurityPermissions action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SecurityPermissionsJSON": {
                  "type": "string",
                  "title": "Security permissions JSON",
                  "description": "The permissions currently set on the specified folder, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "GetFolderSecurityPermissions"
      }
    },
    "/FileManagement/GetFileSecurityPermissions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get file security permissions",
        "description": "Returns a list of permissions currently set on a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "GetFileSecurityPermissions",
            "description": "Inputs for IA-Connect GetFileSecurityPermissions action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FilePath": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "SecurityPermissionsJSON": {
                  "type": "string",
                  "title": "Security permissions JSON",
                  "description": "The permissions currently set on the specified file, in JSON format."
                }
              }
            }
          }
        },
        "operationId": "GetFileSecurityPermissions"
      }
    },
    "/FileManagement/RemoveIdentityFromFolderSecurity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove identity from folder security",
        "description": "Removes an identity (e.g. a user, group or computer) from the security permissions on a folder on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "RemoveIdentityFromFolderSecurity",
            "description": "Inputs for IA-Connect RemoveIdentityFromFolderSecurity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FolderPath": {
                  "type": "string",
                  "title": "Folder path",
                  "description": "The full path to the folder. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "IdentityToRemove": {
                  "type": "string",
                  "title": "Identity to remove",
                  "description": "The identity of the user or group to be removed. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FolderPath",
                "IdentityToRemove",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PermissionWasRemoved": {
                  "type": "boolean",
                  "title": "Permission was removed",
                  "description": "Returns true if the permission was removed successfully."
                }
              }
            }
          }
        },
        "operationId": "RemoveIdentityFromFolderSecurity"
      }
    },
    "/FileManagement/RemoveIdentityFromFileSecurity": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove identity from file security",
        "description": "Removes an identity (e.g. user, group or computer) from the security permissions on a file on the computer where the IA-Connect Agent is running.",
        "parameters": [
          {
            "in": "body",
            "name": "RemoveIdentityFromFileSecurity",
            "description": "Inputs for IA-Connect RemoveIdentityFromFileSecurity action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FilePath": {
                  "type": "string",
                  "title": "File path",
                  "description": "The full path to the file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "IdentityToRemove": {
                  "type": "string",
                  "title": "Identity to remove",
                  "description": "The identity of the user or group to be removed. This can be in the form 'username', 'DOMAIN\\username' or 'username@domainfqdn'."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "FilePath",
                "IdentityToRemove",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "PermissionWasRemoved": {
                  "type": "boolean",
                  "title": "Permission was removed",
                  "description": "Returns true if the permission was removed successfully."
                }
              }
            }
          }
        },
        "operationId": "RemoveIdentityFromFileSecurity"
      }
    },
    "/FileManagement/CopyFileFromClientToServer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Copy file from client to server",
        "description": "Copies a file from the local computer (running the IA-Connect Director) to the remote computer (running the IA-Connect Agent).",
        "parameters": [
          {
            "in": "body",
            "name": "CopyFileFromClientToServer",
            "description": "Inputs for IA-Connect CopyFileFromClientToServer action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ClientFilePath": {
                  "type": "string",
                  "title": "Client file path",
                  "description": "The file path to copy the file from (on the local computer running the IA-Connect Director)."
                },
                "ServerFilePath": {
                  "type": "string",
                  "title": "Server file path",
                  "description": "The file path to copy the file into (on the computer running the IA-Connect Agent)."
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the file be compressed when copying?",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ClientFilePath",
                "ServerFilePath",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "CopyFileFromClientToServer"
      }
    },
    "/FileManagement/ReplaceVariableDataInINIFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Replace variable data in INI file",
        "description": "Updates a single variable in an INI file.",
        "parameters": [
          {
            "in": "body",
            "name": "ReplaceVariableDataInINIFile",
            "description": "Inputs for IA-Connect ReplaceVariableDataInINIFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "InputFilename": {
                  "type": "string",
                  "title": "INI file path",
                  "description": "The full path to the INI file. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "OutputFilename": {
                  "type": "string",
                  "title": "Output INI file path",
                  "description": "If you want to write the updated INI file to an alternative file, enter the full path to the output file here. The input INI file will be unmodifed - the output INI file will hold the changes."
                },
                "SearchSection": {
                  "type": "string",
                  "title": "INI search section",
                  "description": "The optional name of the section holding the variable to change."
                },
                "SearchVariable": {
                  "type": "string",
                  "title": "INI search variable name",
                  "description": "The name of the variable to update."
                },
                "ReplaceData": {
                  "type": "string",
                  "title": "Replacement data",
                  "description": "The replacement data to update the variable to."
                },
                "InputFilenameEncoding": {
                  "type": "string",
                  "title": "INI file encoding",
                  "description": "Provide the INI file encoding (Unicode, UTF8, UTF7 or ASCII) or specify the encoding value (e.g. 1252 for Western Europe)."
                },
                "CreateNewFileIfNotExists": {
                  "type": "boolean",
                  "default": true,
                  "title": "Create new file if input file does not exist",
                  "description": "If the input file does not exist, should a new one be created?"
                },
                "WriteSpaceBeforeEquals": {
                  "type": "boolean",
                  "default": true,
                  "title": "Write space before equals",
                  "description": "Should a space be written before the equals ( = ) sign?"
                },
                "WriteSpaceAfterEquals": {
                  "type": "boolean",
                  "default": true,
                  "title": "Write space after equals",
                  "description": "Should a space be written after the equals ( = ) sign?"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "InputFilename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "ReplaceVariableDataInINIFile"
      }
    },
    "/FileManagement/DownloadHTTPFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Download HTTP file",
        "description": "Downloads a file to the computer where the IA-Connect Agent is running using HTTP(S).",
        "parameters": [
          {
            "in": "body",
            "name": "DownloadHTTPFile",
            "description": "Inputs for IA-Connect DownloadHTTPFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DownloadURL": {
                  "type": "string",
                  "title": "Download URL",
                  "description": "The HTTP or HTTPS download URL."
                },
                "SaveFilename": {
                  "type": "string",
                  "title": "Save file path",
                  "description": "The full path to the save filename. If this field is blank and you have specified 'Return contents as string' as True then the file will not be saved to the computer."
                },
                "OverwriteExistingFile": {
                  "type": "boolean",
                  "default": true,
                  "title": "Overwrite existing file",
                  "description": "If a file already exists with the name specified in the 'Save file path' input, should it be overwritten?"
                },
                "PassthroughAuthentication": {
                  "type": "boolean",
                  "default": false,
                  "title": "Passthrough authentication",
                  "description": "Should the user's credentials be passed on to the web server? This would typically only be used for internal Intranet sites.",
                  "x-ms-visibility": "advanced"
                },
                "UserAgent": {
                  "type": "string",
                  "default": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.193 Safari/537.36",
                  "title": "User Agent",
                  "description": "This allows you to set the User Agent reported to the web page. Typically this is not required and should only be changed if a webpage requires a particular Agent String.",
                  "x-ms-visibility": "advanced"
                },
                "Accept": {
                  "type": "string",
                  "default": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
                  "title": "Accept",
                  "description": "This parameter specifies which content types are supported. This should only be changed if the content you are downloading requires a different content type.",
                  "x-ms-visibility": "advanced"
                },
                "SupportTLS10": {
                  "type": "boolean",
                  "default": true,
                  "title": "Support TLS10",
                  "description": "Set to True to support TLS 1.0 encryption protocol.",
                  "x-ms-visibility": "advanced"
                },
                "SupportTLS11": {
                  "type": "boolean",
                  "default": true,
                  "title": "Support TLS11",
                  "description": "Set to True to support TLS 1.1 encryption protocol.",
                  "x-ms-visibility": "advanced"
                },
                "SupportTLS12": {
                  "type": "boolean",
                  "default": true,
                  "title": "Support TLS12",
                  "description": "Set to True to support TLS 1.2 encryption protocol.",
                  "x-ms-visibility": "advanced"
                },
                "AutoDecompressDeflate": {
                  "type": "boolean",
                  "default": true,
                  "title": "Auto decompress deflate",
                  "description": "Some web content is returned compressed using 'deflate' compression. Setting this value to True informs the web server that 'deflate' is supported and, if the content is sent using this compression, it will automatically be decompressed.",
                  "x-ms-visibility": "advanced"
                },
                "AutoDecompressGZIP": {
                  "type": "boolean",
                  "default": true,
                  "title": "Auto decompress GZip",
                  "description": "Some web content is returned compressed using 'GZIP' compression. Setting this value to True informs the web server that 'GZIP' is supported and, if the content is sent using this compression, it will automatically be decompressed.",
                  "x-ms-visibility": "advanced"
                },
                "ReturnContentsAsString": {
                  "type": "boolean",
                  "default": false,
                  "title": "Return contents as string",
                  "description": "Should the file contents be returned as a string?"
                },
                "ReturnContentEncoding": {
                  "type": "string",
                  "default": "UTF8",
                  "title": "Return content encoding",
                  "enum": [
                    "ASCII",
                    "UTF7",
                    "UTF8",
                    "UTF16",
                    "UTF16BE"
                  ],
                  "description": "The encoding of the downloaded content. This is only used if 'Return contents as string' is True and it defines the encoding of the downloaded content so it can be interpreted correctly.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "DownloadURL",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "DownloadFileContents": {
                  "type": "string",
                  "title": "Download file contents",
                  "description": "The contents of the downloaded file."
                }
              }
            }
          }
        },
        "operationId": "DownloadHTTPFile"
      }
    },
    "/FileManagement/UnZIPFile": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "UnZIP file",
        "description": "Unzips a file which has been compressed using ZIP compression.",
        "parameters": [
          {
            "in": "body",
            "name": "UnZIPFile",
            "description": "Inputs for IA-Connect UnZIPFile action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ZIPFilename": {
                  "type": "string",
                  "title": "ZIP file path",
                  "description": "The full path to the ZIP file to be unzipped. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "ExtractFolder": {
                  "type": "string",
                  "title": "Extract folder",
                  "description": "The folder path of the folder to extract the ZIP into. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "ExtractAllFilesToSingleFolder": {
                  "type": "boolean",
                  "default": false,
                  "title": "Extract all files to single folder",
                  "description": "If set to True, the folder structure inside the ZIP will be ignored and all files will be extracted to the specified folder.",
                  "x-ms-visibility": "advanced"
                },
                "IncludeFilesRegEx": {
                  "type": "string",
                  "title": "Include files regular expression",
                  "description": "An optional regular expression to allow you to specify which files should be extracted. Matches filename only.",
                  "x-ms-visibility": "advanced"
                },
                "ExcludeFilesRegEx": {
                  "type": "string",
                  "title": "Exclude files regular expression",
                  "description": "An optional regular expression to allow you to specify which files should be excluded from extraction. Matches filename only.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "ZIPFilename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FilesExtractedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files extracted successfully",
                  "description": "The number of files that were extracted from the ZIP successfully."
                },
                "FilesFailedToExtract": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files failed to extract",
                  "description": "The number of files that failed to extract from the ZIP."
                },
                "FilesExcluded": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files excluded",
                  "description": "The number of files that were excluded (if using the 'Exclude files regular expression' input)."
                }
              }
            }
          }
        },
        "operationId": "UnZIPFile"
      }
    },
    "/FileManagement/AddFileToZIP": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add file to ZIP",
        "description": "ZIPs a file (stores the file into a compression archive).",
        "parameters": [
          {
            "in": "body",
            "name": "AddFileToZIP",
            "description": "Inputs for IA-Connect AddFileToZIP action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceFilenameToAddToZIP": {
                  "type": "string",
                  "title": "Source file path to add to ZIP",
                  "description": "The file path to the file to be added to the zip. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "OutputZIPFilename": {
                  "type": "string",
                  "title": "Output ZIP file path",
                  "description": "The file path that the ZIP should be output to. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "AddFilenameToFolderInZIP": {
                  "type": "string",
                  "title": "Add filename to folder in ZIP",
                  "description": "If you want to add the source file to a folder in the ZIP file, enter the folder name here."
                },
                "SourceFilenameToAddToZIPComment": {
                  "type": "string",
                  "title": "Source filename to add to ZIP comment",
                  "description": "An optional comment for this file added to the ZIP.",
                  "x-ms-visibility": "advanced"
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the file be compressed when zipping?",
                  "x-ms-visibility": "advanced"
                },
                "AddToExistingZIPFile": {
                  "type": "boolean",
                  "default": false,
                  "title": "Add to existing ZIP file",
                  "description": "Set to True to add to an existing ZIP file."
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceFilenameToAddToZIP",
                "OutputZIPFilename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          }
        },
        "operationId": "AddFileToZIP"
      }
    },
    "/FileManagement/AddFolderToZIP": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add folder to ZIP",
        "description": "ZIPs files in a folder into a ZIP file (stores the files into a compression archive).",
        "parameters": [
          {
            "in": "body",
            "name": "AddFolderToZIP",
            "description": "Inputs for IA-Connect AddFolderToZIP action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SourceFolderToAddToZIP": {
                  "type": "string",
                  "title": "Source folder to add to ZIP",
                  "description": "The path to the folder to be added to the zip. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "OutputZIPFilename": {
                  "type": "string",
                  "title": "Output ZIP file path",
                  "description": "The file path that the ZIP should be output to. This must be accessible from the session where the IA-Connect Agent is running."
                },
                "AddFilesToFolderInZIP": {
                  "type": "string",
                  "title": "Add files to folder in ZIP",
                  "description": "If you want to add the source files to a folder in the ZIP file, enter the folder name here."
                },
                "Compress": {
                  "type": "boolean",
                  "default": true,
                  "title": "Compress",
                  "description": "Should the folder be compressed when zipping?",
                  "x-ms-visibility": "advanced"
                },
                "AddToExistingZIPFile": {
                  "type": "boolean",
                  "default": false,
                  "title": "Add to existing ZIP file",
                  "description": "Set to True to add to an existing ZIP file."
                },
                "IncludeSubfolders": {
                  "type": "boolean",
                  "default": true,
                  "title": "Include subfolders",
                  "description": "Should subfolders within the source folder also be added to the ZIP?"
                },
                "IncludeFilesRegEx": {
                  "type": "string",
                  "title": "Include files regular expression",
                  "description": "An optional regular expression to allow you to specify which files should be extracted. Matches filename only.",
                  "x-ms-visibility": "advanced"
                },
                "ExcludeFilesRegEx": {
                  "type": "string",
                  "title": "Exclude files regular expression",
                  "description": "An optional regular expression to allow you to specify which files should be excluded from extraction. Matches filename only.",
                  "x-ms-visibility": "advanced"
                },
                "Workflow": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "default": "@{workflow()}",
                  "title": "Workflow",
                  "description": "Add the following expression here: workflow()"
                }
              },
              "required": [
                "SourceFolderToAddToZIP",
                "OutputZIPFilename",
                "Workflow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "FilesAddedSuccessfully": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files added successfully",
                  "description": "The number of files that were successfully added to the ZIP."
                },
                "FilesExcluded": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of files excluded",
                  "description": "The number of files that were excluded (if using the 'Exclude files regular expression' input)."
                }
              }
            }
          }
        },
        "operationId": "AddFolderToZIP"
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "RESTAPIKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}