{
  "swagger": "2.0",
  "info": {
    "title": "Elead Sales Customers",
    "version": "1.0",
    "description": "This API allows for the management of prospect/customer information inside the Elead CRM. This API includes the following capabilities and features for managing prospect/customer information, Add prospect/customer information such as name, phone numbers, email addresses and physical address and return the uniquely-assigned Elead ID on post, Update, search and retrieve prospect/customer contact information tied to an existing Elead ID.",
    "contact": {
      "name": "CDK Global",
      "url": "https://serviceconnect.support.cdk.com",
      "email": "mbd_support@cdk.com"
    }
  },
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://fortellis.io"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://fortellis.io/privacy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Data"
      }
  ],
  "host": "cdkapi.azure-api.net",
  "basePath": "/elead-sales-customers",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/{customerId}": {
      "get": {
        "description": "Retrieves a prospect/customer record by Elead customer ID. An Elead customer ID is currently obtained as follows:\n  - Create customer via POST /sales/v1/elead/customers\n  \n  - Search opportunities via GET /sales/v1/elead/opportunities/search\n  \n",
        "operationId": "Customers_GetCustomer",
        "summary": "Get Customer by Id",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Customer Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Updates prospect/customer information",
        "operationId": "Customers_UpdateCustomer",
        "summary": "Update a customer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Customer Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "customerRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CustomerRequest"
            },
            "description": "Customer Request",
            "x-ms-summary": "Customer Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{customerId}/ownedVehicles": {
      "get": {
        "description": "Retrieves a prospect/customer vehicle record(s) by Elead customer ID. An Elead customer ID is currently obtained as follows:\n  - Create customer via POST /sales/v1/elead/customers\n  \n  - Search opportunities via GET /sales/v1/elead/opportunities/search\n",
        "operationId": "Customers_GetCustomerOwnedVehicles",
        "summary": "Get Vehicles by Id",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Format - uuid.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Customer Id"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerVehicleCollection"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "404 - Not Found",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "description": "Creates a prospect/customer",
        "operationId": "Customers_CreateCustomer",
        "summary": "Create a customer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "customerRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CustomerRequest"
            },
            "description": "Customer Request",
            "x-ms-summary": "Customer Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "description": "Search customers",
        "operationId": "Customers_SearchCustomers",
        "summary": "Search customers",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32.",
            "type": "integer",
            "x-ms-summary": "Page Size"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "description": "A client ID that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Id"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "description": "A client secret that should be unique to developer/solution provider building the solution.",
            "type": "string",
            "x-ms-summary": "Client Secret"
          },
          {
            "name": "subscription_id",
            "in": "query",
            "required": true,
            "description": "A correlation ID that should be returned back to the caller to indicate the return of the given request.",
            "type": "string",
            "x-ms-summary": "Subscription Id"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "description": "Accept Header",
            "x-ms-summary": "Accept"
          },
          {
            "name": "Accept-Charset",
            "in": "header",
            "type": "string",
            "description": "Accept-Charset Header",
            "x-ms-summary": "Accept-Charset"
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "type": "string",
            "description": "Accept-Encoding Header",
            "x-ms-summary": "Accept-Encoding"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "type": "string",
            "description": "Accept-Language Header",
            "x-ms-summary": "Accept-Language"
          },
          {
            "name": "If-Match",
            "in": "header",
            "type": "string",
            "description": "If-Match Header",
            "x-ms-summary": "If-Match"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "type": "string",
            "description": "If-None-Match Header",
            "x-ms-summary": "If-None-Match"
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "enum": [
              "return=representation",
              "return=minimal"
            ],
            "description": "Preference of the customer",
            "x-ms-summary": "Prefer"
          },
          {
            "name": "Request-Id",
            "in": "header",
            "required": true,
            "description": "Format - guid. A correlation ID that should be returned back to the caller to indicate the return of the given request",
            "type": "string",
            "x-ms-summary": "Request Id"
          },
          {
            "name": "searchCustomersRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchCustomersRequest"
            },
            "description": "Search Customer Request",
            "x-ms-summary": "Search Customer Request"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 - OK",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SearchCustomersResponse"
            }
          },
          "400": {
            "description": "400 - Bad Request",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 - Unauthorized",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 - Forbidden",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "500 - Internal Server Error",
            "headers": {
              "Request-Id": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerRequest": {
      "type": "object",
      "properties": {
        "isBusiness": {
          "description": "true/false whether this customer is a business",
          "type": "boolean"
        },
        "businessName": {
          "description": "Business name, set when isBusiness is true",
          "type": "string"
        },
        "businessContact": {
          "description": "Name of the business contact person, set when isBusiness is true",
          "type": "string"
        },
        "title": {
          "description": "Customer's title",
          "type": "string",
          "enum": [
            "Unspecified",
            "Mr",
            "Mrs",
            "Ms",
            "Dr",
            "Sir",
            "Miss",
            "Rev",
            "MrAndMrs",
            "Admr",
            "Capt",
            "Cdr",
            "Chief",
            "Col",
            "Gen",
            "Judge",
            "Lt",
            "Sgt"
          ]
        },
        "firstName": {
          "description": "Customer first name",
          "type": "string"
        },
        "middleName": {
          "description": "Customer middle name",
          "type": "string"
        },
        "lastName": {
          "description": "Customer last name",
          "type": "string"
        },
        "nickname": {
          "description": "Customer nickname",
          "type": "string"
        },
        "birthday": {
          "description": "Customer birthday",
          "type": "string",
          "format": "date-time"
        },
        "emails": {
          "description": "Customer Email address(es)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerEmail"
          }
        },
        "phones": {
          "description": "Customer phone number(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPhone"
          }
        },
        "address": {
          "$ref": "#/definitions/CustomerAddress"
        }
      },
      "example": {
        "isBusiness": false,
        "title": "Mrs.",
        "firstName": "Euphegenia",
        "middleName": "Robin",
        "lastName": "Doubtfire",
        "nickname": "Mork",
        "birthday": "1951-07-21",
        "emails": [
          {
            "address": "personalEmail@sample.com",
            "emailType": "Personal",
            "doNotEmail": false,
            "isPreferred": true
          },
          {
            "address": "workEmail@sample.com",
            "emailType": "Work",
            "doNotEmail": false,
            "isPreferred": false
          }
        ],
        "phones": [
          {
            "number": "(555) 555-1234",
            "phoneType": "Cellular",
            "preferredTimeToContact": "Evening",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": true,
            "prefetText": false
          },
          {
            "number": "(555) 555-5678",
            "phoneType": "Work",
            "preferredTimeToContact": "Day",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": false,
            "prefetText": false
          }
        ],
        "address": {
          "addressLine1": "799 E DRAGRAM",
          "addressLine2": "SUITE 5A",
          "city": "TUCSON",
          "state": "AZ",
          "zip": "85705",
          "country": "USA",
          "county": "PIMA",
          "doNotMail": false,
          "isPreferred": true
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique customer identifier",
          "format": "uuid",
          "type": "string"
        },
        "isBusiness": {
          "description": "true/false whether this customer is a business",
          "type": "boolean"
        },
        "businessName": {
          "description": "Business name, set when isBusiness is true",
          "type": "string"
        },
        "businessContact": {
          "description": "Name of the business contact person, set when isBusiness is true",
          "type": "string"
        },
        "title": {
          "description": "Customer's title",
          "type": "string",
          "enum": [
            "Unspecified",
            "Mr",
            "Mrs",
            "Ms",
            "Dr",
            "Sir",
            "Miss",
            "Rev",
            "MrAndMrs",
            "Admr",
            "Capt",
            "Cdr",
            "Chief",
            "Col",
            "Gen",
            "Judge",
            "Lt",
            "Sgt"
          ]
        },
        "firstName": {
          "description": "Customer first name",
          "type": "string"
        },
        "middleName": {
          "description": "Customer middle name",
          "type": "string"
        },
        "lastName": {
          "description": "Customer last name",
          "type": "string"
        },
        "nickname": {
          "description": "Customer nickname",
          "type": "string"
        },
        "birthday": {
          "description": "Customer birthday",
          "type": "string",
          "format": "date-time"
        },
        "emails": {
          "description": "Customer Email address(es)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerEmail"
          }
        },
        "phones": {
          "description": "Customer phone number(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPhone"
          }
        },
        "address": {
          "$ref": "#/definitions/CustomerAddress"
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "id"
      ],
      "example": {
        "id": "5e324ef1-be4e-46d7-a77e-0c96d4c17295",
        "isBusiness": false,
        "title": "Mrs.",
        "firstName": "Euphegenia",
        "middleName": "Robin",
        "lastName": "Doubtfire",
        "nickname": "Mork",
        "birthday": "1951-07-21",
        "emails": [
          {
            "address": "personalEmail@sample.com",
            "emailType": "Personal",
            "doNotEmail": false,
            "isPreferred": true
          },
          {
            "address": "workEmail@sample.com",
            "emailType": "Work",
            "doNotEmail": false,
            "isPreferred": false
          }
        ],
        "phones": [
          {
            "number": "(555) 555-1234",
            "phoneType": "Cellular",
            "preferredTimeToContact": "Evening",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": true,
            "prefetText": false
          },
          {
            "number": "(555) 555-5678",
            "phoneType": "Work",
            "preferredTimeToContact": "Day",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": false,
            "prefetText": false
          }
        ],
        "address": {
          "addressLine1": "799 E DRAGRAM",
          "addressLine2": "SUITE 5A",
          "city": "TUCSON",
          "state": "AZ",
          "zip": "85705",
          "country": "USA",
          "county": "PIMA",
          "doNotMail": false,
          "isPreferred": true
        },
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/5e324ef1-be4e-46d7-a77e-0c96d4c17295",
            "rel": "self",
            "method": "GET",
            "title": "Fetch Customer"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/5e324ef1-be4e-46d7-a77e-0c96d4c17295",
            "rel": "update",
            "method": "POST",
            "title": "Update Customer"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers",
            "rel": "create",
            "method": "POST",
            "title": "Create Customer"
          }
        ]
      }
    },
    "CustomerEmail": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Customer Email address",
          "type": "string"
        },
        "emailType": {
          "enum": [
            "Unknown",
            "Personal",
            "Work",
            "Pager",
            "Alternate"
          ],
          "type": "string"
        },
        "doNotEmail": {
          "description": "true/false to flag as Do Not Email",
          "type": "boolean"
        },
        "isPreferred": {
          "description": "true/false whether this is the customer's preferred email address",
          "type": "boolean"
        }
      },
      "required": [
        "address",
        "emailType"
      ],
      "example": {
        "address": "customerEmail@sample.com",
        "emailType": "Personal",
        "doNotEmail": false,
        "isPreferred": true
      }
    },
    "CustomerPhone": {
      "type": "object",
      "properties": {
        "number": {
          "description": "Phone number",
          "type": "string"
        },
        "phoneType": {
          "enum": [
            "Unknown",
            "Home",
            "Cellular",
            "Work"
          ],
          "type": "string"
        },
        "preferredTimeToContact": {
          "enum": [
            "Unspecified",
            "Day",
            "Evening"
          ],
          "type": "string"
        },
        "doNotCall": {
          "description": "true/false to flag as Do Not Call",
          "type": "boolean"
        },
        "doNotText": {
          "description": "true/false to flag as Do Not Text",
          "type": "boolean"
        },
        "preferCall": {
          "description": "true/false whether the customer prefers to be contacted by phone",
          "type": "boolean"
        },
        "preferText": {
          "description": "true/false whether the customer prefers to be contacted by text",
          "type": "boolean"
        }
      },
      "required": [
        "number",
        "phoneType",
        "preferredTimeToContact"
      ],
      "example": {
        "number": "(555) 555-1234",
        "phoneType": "Cellular",
        "preferredTimeToContact": "Evening",
        "doNotCall": false,
        "doNotText": true,
        "preferCall": true,
        "prefetText": false
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "Customer address line 1",
          "type": "string"
        },
        "addressLine2": {
          "description": "Customer address line 2",
          "type": "string"
        },
        "city": {
          "description": "Customer city",
          "type": "string"
        },
        "state": {
          "description": "Customer state",
          "type": "string"
        },
        "zip": {
          "description": "Customer postal code",
          "type": "string"
        },
        "country": {
          "description": "Customer country",
          "type": "string"
        },
        "county": {
          "description": "Customer county",
          "type": "string"
        },
        "doNotMail": {
          "description": "true/false to flag as Do Not Mail",
          "type": "boolean"
        },
        "isPreferred": {
          "description": "true/false whether this is the customer's preferred address",
          "type": "boolean"
        }
      },
      "required": [
        "zip"
      ],
      "example": {
        "addressLine1": "799 E DRAGRAM",
        "addressLine2": "SUITE 5A",
        "city": "TUCSON",
        "state": "AZ",
        "zip": "85705",
        "country": "USA",
        "county": "ORANGE",
        "doNotMail": false,
        "isPreferred": true
      }
    },
    "SearchCustomersRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Search string for the customer's first name",
          "type": "string"
        },
        "lastName": {
          "description": "Search string for the customer's last name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Search string for the customer's phone number",
          "type": "string"
        },
        "emailAddress": {
          "description": "Search string for the customer's email address",
          "type": "string"
        }
      },
      "example": {
        "firstName": "Lisa",
        "lastName": "Turtle",
        "phoneNumber": "555-867-5309",
        "emailAddress": "lisa.turtle@bayside.edu"
      }
    },
    "SearchCustomersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "A collection of customer search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchCustomer"
          }
        },
        "totalItems": {
          "description": "Total number of customers for the given search",
          "format": "int32",
          "type": "integer",
          "example": 80
        },
        "totalPages": {
          "description": "Total number of pages of customers for the given search",
          "format": "int32",
          "type": "integer",
          "example": 8
        },
        "pageNumber": {
          "description": "Current page number for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 1
        },
        "pageSize": {
          "description": "Page size for this set of paged results",
          "format": "int32",
          "type": "integer",
          "example": 10
        },
        "links": {
          "description": "A collection of HATEOAS links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkDescriptionObject"
          }
        }
      },
      "required": [
        "items",
        "totalItems",
        "totalPages",
        "pageNumber",
        "pageSize",
        "links"
      ],
      "example": {
        "items": [
          {
            "id": "e709c5ec-11bd-4eb0-98b1-4ab5b3c71225",
            "firstName": "Richard",
            "lastName": "Belding",
            "emails": [
              {
                "address": "richard.belding@bayside.edu",
                "emailType": "Work",
                "doNotEmail": false,
                "isPreferred": true
              }
            ],
            "phones": [
              {
                "number": "(555) 555-1234",
                "phoneType": "Cellular",
                "preferredTimeToContact": "Evening",
                "doNotCall": false,
                "doNotText": true,
                "preferCall": true,
                "prefetText": false
              },
              {
                "number": "(555) 555-5678",
                "phoneType": "Work",
                "preferredTimeToContact": "Day",
                "doNotCall": false,
                "doNotText": true,
                "preferCall": false,
                "prefetText": false
              }
            ],
            "address": {
              "addressLine1": "123 TIGER LN",
              "addressLine2": "SUITE 1A",
              "city": "LOS ANGELES",
              "state": "CA",
              "zip": "90210",
              "country": "USA",
              "county": "LOS ANGELES",
              "doNotMail": false,
              "isPreferred": true
            },
            "rank": 0.3158,
            "links": [
              {
                "href": "https://api.fortellis.io/sales/v1/elead/customers/e709c5ec-11bd-4eb0-98b1-4ab5b3c71225",
                "rel": "self",
                "method": "GET",
                "title": "Fetch Customer"
              }
            ]
          }
        ],
        "totalItems": 52,
        "totalPages": 5,
        "pageNumber": 2,
        "pageSize": 10,
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/search?page=1&pageSize=10",
            "rel": "first",
            "method": "GET",
            "title": "first page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/search?page=5&pageSize=10",
            "rel": "last",
            "method": "GET",
            "title": "last page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/search?page=3&pageSize=10",
            "rel": "next",
            "method": "GET",
            "title": "next page"
          },
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/search?page=1&pageSize=10",
            "rel": "prev",
            "method": "GET",
            "title": "previous page"
          }
        ]
      }
    },
    "SearchCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this customer",
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "description": "Customer first name",
          "type": "string"
        },
        "lastName": {
          "description": "Customer last name",
          "type": "string"
        },
        "emails": {
          "description": "Customer Email Address(es)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerEmail"
          }
        },
        "phones": {
          "description": "Customer phone number(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPhone"
          }
        },
        "address": {
          "$ref": "#/definitions/CustomerAddress"
        },
        "rank": {
          "description": "Relevancy ranking of this customer search result",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "rank"
      ],
      "example": {
        "id": "e709c5ec-11bd-4eb0-98b1-4ab5b3c71225",
        "firstName": "Richard",
        "lastName": "Belding",
        "emails": [
          {
            "address": "richard.belding@bayside.edu",
            "emailType": "Work",
            "doNotEmail": false,
            "isPreferred": true
          }
        ],
        "phones": [
          {
            "number": "(555) 555-1234",
            "phoneType": "Cellular",
            "preferredTimeToContact": "Evening",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": true,
            "prefetText": false
          },
          {
            "number": "(555) 555-5678",
            "phoneType": "Work",
            "preferredTimeToContact": "Day",
            "doNotCall": false,
            "doNotText": true,
            "preferCall": false,
            "prefetText": false
          }
        ],
        "address": {
          "addressLine1": "123 TIGER LN",
          "addressLine2": "SUITE 1A",
          "city": "LOS ANGELES",
          "state": "CA",
          "zip": "90210",
          "country": "USA",
          "county": "LOS ANGELES",
          "doNotMail": false,
          "isPreferred": true
        },
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/e709c5ec-11bd-4eb0-98b1-4ab5b3c71225",
            "rel": "self",
            "method": "GET",
            "title": "Fetch Customer"
          }
        ]
      }
    },
    "CustomerVehicleCollection": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for this vehicle",
          "type": "string",
          "format": "uuid"
        },
        "exteriorColor": {
          "description": "Exterior color of the vehicle",
          "type": "string"
        },
        "interiorColor": {
          "description": "Interior color of the vehicle",
          "type": "string"
        },
        "mileage": {
          "description": "Mileage of the vehicle",
          "type": "integer"
        },
        "milesPerWeek": {
          "description": "Average miles driven per week",
          "type": "integer"
        },
        "year": {
          "description": "Year of manufacture",
          "type": "integer"
        },
        "make": {
          "description": "Brand of vehicle",
          "type": "string"
        },
        "model": {
          "description": "Name of the vehicle",
          "type": "string"
        },
        "trim": {
          "description": "Description of the trim",
          "type": "integer"
        },
        "vin": {
          "description": "Vehicle identification number",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/CustomerVehicleOptions"
        },
        "vehicleOwner": {
          "$ref": "#/definitions/CustomerVehicleOwner"
        }
      },
      "example": {
        "id": "e709c5ec-11bd-4eb0-98b1-4ab5b3c71225",
        "exteriorColor": "Flame Red Clearcoat [Red]",
        "interiorColor": "Diesel Gray/Black w/Cloth Bench Seat or Deluxe Cloth Bucket Seats [Gray]",
        "mileage": 33530,
        "milesPerWeek": 300,
        "year": 2019,
        "make": "RAM",
        "model": "1500",
        "trim": "Big Horn/Lone Star 4x4 Crew Cab 153.5 in. WB",
        "vin": "1C6SRFFT5KN600223",
        "options": {
          "fuelType": "Gas",
          "interiorType": "Cloth",
          "vehicleCondition": "Clean",
          "bodyStyle": "Big Horn/Lone Star 4x4 Crew Cab 153.5 in. WB",
          "engineDescription": "5.7L V-8",
          "modelCode": "DT6H98",
          "numberOfCylinders": 8,
          "numberOfDoors": 4,
          "transmission": "Automatic",
          "isAutomaticTransmission": true,
          "hasAirBags": true,
          "hasCruiseControl": true,
          "hasAirCondition": true
        },
        "vehicleOwner": {
          "isActive": true,
          "customerId": "k909d7ec-13ae-2ub0-98b1-7hv5b3c79999",
          "vehicleId": "7ef8856a-8f6f-ea11-a98f-005056b15429"
        },
        "links": [
          {
            "href": "https://api.fortellis.io/sales/v1/elead/customers/k909d7ec-13ae-2ub0-98b1-7hv5b3c79999",
            "rel": "self",
            "method": "GET",
            "title": "Fetch Customer"
          }
        ]
      }
    },
    "CustomerVehicleOptions": {
      "type": "object",
      "description": "Vehicle options",
      "properties": {
        "fuelType": {
          "type": "string",
          "description": "Type of fuel"
        },
        "interiorType": {
          "type": "string",
          "description": "Type of interior"
        },
        "vehicleCondition": {
          "type": "string",
          "description": "Condition of vehicle"
        },
        "bodyStyle": {
          "type": "string",
          "description": "Vehicle body style"
        },
        "engineDescription": {
          "type": "string",
          "description": "Type of engine"
        },
        "modelCode": {
          "type": "string",
          "description": "Model code"
        },
        "numberOfCylinders": {
          "type": "integer",
          "description": "Number of cylinders"
        },
        "numberOfDoors": {
          "type": "number",
          "description": "Number of doors",
          "format": "byte"
        },
        "transmission": {
          "type": "string",
          "description": "Type of transmission"
        },
        "isAutomaticTransmission": {
          "type": "boolean",
          "description": "true/false whether the vehicle has an automatic transmission"
        },
        "hasAirBags": {
          "type": "boolean",
          "description": "true/false whether the vehicle has air bags"
        },
        "hasCruiseControl": {
          "type": "boolean",
          "description": "true/false whether the vehicle has cruise control"
        },
        "hasAirConditioning": {
          "type": "boolean",
          "description": "true/false whether the vehicle has air conditioning"
        }
      },
      "example": {
        "fuelType": "Gas",
        "interiorType": "Cloth",
        "vehicleCondition": "Clean",
        "bodyStyle": "Big Horn/Lone Star 4x4 Crew Cab 153.5 in. WB",
        "engineDescription": "5.7L V-8",
        "modelCode": "DT6H98",
        "numberOfCylinders": 8,
        "numberOfDoors": 4,
        "transmission": "Automatic",
        "isAutomaticTransmission": true,
        "hasAirBags": true,
        "hasCruiseControl": true,
        "hasAirCondition": true
      }
    },
    "CustomerVehicleOwner": {
      "type": "object",
      "description": "Vehicle owner",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "true/false whether the owner is active"
        },
        "customerId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the vehicle owner"
        },
        "vehicleId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the vehicle"
        }
      },
      "example": {
        "isActive": true,
        "customerId": "k909d7ec-13ae-2ub0-98b1-7hv5b3c79999",
        "vehicleId": "7ef8856a-8f6f-ea11-a98f-005056b15429"
      }
    },
    "LinkDescriptionObject": {
      "type": "object",
      "properties": {
        "href": {
          "description": "The target URI",
          "type": "string"
        },
        "rel": {
          "description": "The link relation type",
          "type": "string",
          "example": "create"
        },
        "method": {
          "description": "The HTTP verb that MUST be used to make a request to the target of the link",
          "type": "string",
          "example": "POST"
        },
        "title": {
          "description": "The title that describes the object",
          "type": "string",
          "example": "Create Opportunity"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "title"
      ],
      "example": {
        "href": "https://api.fortellis.io/sales/v1/elead/customers/89b07974-eb5b-441e-a7f8-d364a81430bc",
        "rel": "self",
        "method": "GET",
        "title": "Get Customer"
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code further identifying the error."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "link": {
          "type": "string",
          "description": "An optional link with further information about the error type."
        },
        "referenceId": {
          "type": "string",
          "format": "uuid",
          "description": "A reference identifier used for correlation puproses."
        }
      },
      "required": [
        "code",
        "message",
        "referenceId"
      ],
      "example": {
        "code": "ExampleErrorCode",
        "message": "Example of an error message.",
        "referenceId": "9e88d251-9b50-3dfb-00ef-00c5009b003d"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "tags": []
}

