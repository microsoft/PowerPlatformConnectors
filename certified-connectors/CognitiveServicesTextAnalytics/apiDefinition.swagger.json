{
  "swagger": "2.0",
  "info": {
    "version": "v3.0",
    "title": "Text Analytics",
    "description": "Microsoft Cognitive Services Text Analytics detects language, sentiment and more of the text you provide.",
    "contact": {
      "name": "Azure Cognitive Services Text Analytics",
      "url": "https://azure.microsoft.com/en-us/services/cognitive-services/text-analytics/",
      "email": "mlapi@microsoft.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "westus.api.cognitive.microsoft.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/text/analytics/v2.1/keyPhrases": {
      "post": {
        "tags": [
          "Key Phrases"
        ],
        "summary": "Key Phrases (V2)",
        "description": "Returns a list of strings denoting the key talking points in the input text for each document.",
        "operationId": "KeyPhrasesV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze. Documents can contain a language field to indicate the text language.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResults"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "KeyPhrases",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/languages": {
      "post": {
        "tags": [
          "Detect Language"
        ],
        "summary": "Detect Language (V2)",
        "description": "Returns the detected language and a numeric score between 0 and 1 for each document. Scores close to 1 indicate 100% certainty that the identified language is true. A total of 120 languages are supported.",
        "operationId": "DetectLanguageV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageResults"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectLanguage",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/sentiment": {
      "post": {
        "tags": [
          "Sentiment"
        ],
        "summary": "Detect Sentiment (V2)",
        "description": "Returns a numeric score between 0 and 1 for each document. Scores close to 1 indicate positive sentiment, while scores close to 0 indicate negative sentiment. ",
        "operationId": "DetectSentimentV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentimentResults"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectSentiment",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/entities": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Detect Entities (V2)",
        "description": "Returns a list of known entities and general named entities (\"Person\", \"Location\", \"Organization\" etc) in a given document.",
        "operationId": "DetectEntitiesV2",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntitiesResults"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectEntities",
          "revision": 2
        }
      }
    },
    "/text/analytics/v3.0/entities/recognition/general": {
      "post": {
        "summary": "Named Entity Recognition (V3.0)",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "EntitiesRecognitionGeneral",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities returned for each valid document.",
            "schema": {
              "$ref": "#/definitions/EntitiesResult"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/TextAnalyticsError"
            }
          }
        },
        "deprecated": false
      }
    },
    "/text/analytics/v3.0/entities/linking": {
      "post": {
        "summary": "Entity Linking (V3.0)",
        "description": "The API returns a list of recognized entities with links to a well-known knowledge base. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "EntitiesLinking",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities with links to a well-known knowledge base returned for each valid document",
            "schema": {
              "$ref": "#/definitions/EntityLinkingResult"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/TextAnalyticsError"
            }
          }
        },
        "deprecated": false
      }
    },
    "/text/analytics/v3.0/keyPhrases": {
      "post": {
        "summary": "Key Phrases (V3.0)",
        "description": "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "KeyPhrases",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze. Documents can now contain a language field to indicate the text language",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response results in 0 or more key phrases identified in each valid document",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResult"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/TextAnalyticsError"
            }
          }
        },
        "deprecated": false
      }
    },
    "/text/analytics/v3.0/languages": {
      "post": {
        "summary": "Detect Language (V3.0)",
        "description": "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "Languages",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in the detected language with the highest probability for each valid document",
            "schema": {
              "$ref": "#/definitions/LanguageResult"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/TextAnalyticsError"
            }
          }
        },
        "deprecated": false
      }
    },
    "/text/analytics/v3.0/sentiment": {
      "post": {
        "summary": "Sentiment (V3.0)",
        "description": "The API returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "Sentiment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a document sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral)",
            "schema": {
              "$ref": "#/definitions/SentimentResponse"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/TextAnalyticsError"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "MultiLanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents to process as part of this batch.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      },
      "description": "Contains a set of input documents to be analyzed by the service."
    },
    "MultiLanguageInput": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      },
      "description": "Contains an input document to be analyzed by the service."
    },
    "DocumentError": {
      "type": "object",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document Id."
        },
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/TextAnalyticsError"
        }
      }
    },
    "TextAnalyticsError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "invalidRequest",
            "invalidArgument",
            "internalServerError",
            "serviceUnavailable"
          ],
          "x-ms-enum": {
            "name": "ErrorCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        },
        "details": {
          "type": "array",
          "description": "Details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsError"
          }
        }
      }
    },
    "TextAnalyticsWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "InnerError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "invalidParameterValue",
            "invalidRequestBodyFormat",
            "emptyRequest",
            "missingInputRecords",
            "invalidDocument",
            "modelVersionIncorrect",
            "invalidDocumentBatch",
            "unsupportedLanguageCode",
            "invalidCountryHint"
          ],
          "x-ms-enum": {
            "name": "InnerErrorCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        }
      }
    },
    "SentimentResponse": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sentiment analysis per document.",
          "items": {
            "$ref": "#/definitions/DocumentSentiment"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentSentiment": {
      "type": "object",
      "required": [
        "id",
        "sentiment",
        "confidenceScores",
        "sentences",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "sentiment": {
          "type": "string",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
          "enum": [
            "positive",
            "neutral",
            "negative",
            "mixed"
          ],
          "x-ms-enum": {
            "name": "DocumentSentimentValue",
            "modelAsString": false
          }
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics"
        },
        "confidenceScores": {
          "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "sentences": {
          "type": "array",
          "description": "Sentence level sentiment analysis.",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        }
      }
    },
    "RequestStatistics": {
      "type": "object",
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "DocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the document payload."
    },
    "SentimentConfidenceScorePerLabel": {
      "type": "object",
      "required": [
        "positive",
        "neutral",
        "negative"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "neutral": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
    },
    "SentenceSentiment": {
      "type": "object",
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "type": "string",
          "description": "The predicted Sentiment for the sentence.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ],
          "x-ms-enum": {
            "name": "SentenceSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence by Unicode standard."
        }
      }
    },
    "DocumentEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type, such as Person/Location/Org/SSN etc"
        },
        "subcategory": {
          "type": "string",
          "description": "Entity sub type, such as Age/Year/TimeRange etc"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position (in Unicode characters) for the entity text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length (in Unicode characters) for the entity text."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      }
    },
    "EntityLinkingResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLinkedEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentLinkedEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized well-known entities in the document.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "LinkedEntity": {
      "type": "object",
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          }
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        }
      }
    },
    "Match": {
      "type": "object",
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ],
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well-known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position (in Unicode characters) for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length (in Unicode characters) for the entity match text."
        }
      }
    },
    "DocumentKeyPhrases": {
      "type": "object",
      "required": [
        "id",
        "keyPhrases",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "LanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInput"
          }
        }
      }
    },
    "LanguageInput": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "text": {
          "type": "string"
        },
        "countryHint": {
          "type": "string"
        }
      }
    },
    "DocumentLanguage": {
      "type": "object",
      "required": [
        "id",
        "detectedLanguage",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "detectedLanguage": {
          "description": "Detected Language.",
          "$ref": "#/definitions/DetectedLanguage"
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "DetectedLanguage": {
      "type": "object",
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      }
    },
    "KeyPhraseResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentKeyPhrases"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "EntitiesResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "LanguageInputs": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInputV2"
          }
        }
      }
    },
    "MultiLanguageInputs": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageInputV2"
          }
        }
      }
    },
    "KeyPhraseResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyPhraseResultV2"
          }
        }
      }
    },
    "EntitiesResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitiesResultV2"
          }
        }
      }
    },
    "LanguageResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageResultV2"
          }
        }
      }
    },
    "SentimentResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentimentResult"
          }
        }
      }
    },
    "LanguageInputV2": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "description": "Unique, non-empty document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "text": {
          "description": "The text to analyze.",
          "x-ms-summary": "Text",
          "type": "string"
        }
      }
    },
    "MultiLanguageInputV2": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "description": "Unique, non-empty document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "text": {
          "description": "The text to analyze.",
          "type": "string",
          "x-ms-summary": "Text"
        },
        "language": {
          "description": "This is the 2 letter ISO 639-1 representation of a language.\r\n            For example, use \"en\" for English; \"es\" for Spanish etc.,",
          "enum": [
            "da",
            "de",
            "en",
            "es",
            "fi",
            "fr",
            "it",
            "ja",
            "nl",
            "no",
            "pl",
            "pt",
            "ru",
            "sv"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Language",
          "default": "en"
        }
      }
    },
    "KeyPhraseResultV2": {
      "type": "object",
      "properties": {
        "keyPhrases": {
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "x-ms-summary": "Key Phrases",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "x-ms-summary": "Id",
          "description": "The unique document identifier.",
          "type": "string"
        }
      }
    },
    "EntitiesResultV2": {
      "type": "object",
      "properties": {
        "entities": {
          "description": "A list of disambiguated entities with links to more information on the web (Wikipedia and Bing).",
          "x-ms-summary": "Entities",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the entity.",
                "x-ms-summary": "Name",
                "type": "string"
              },
              "matches": {
                "description": "A list of matches for the entity.",
                "x-ms-summary": "Matches",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "wikipediaLanguage": {
                "description": "Wikipedia language of the entity.",
                "x-ms-summary": "Wikipedia Language",
                "type": "string"
              },
              "wikipediaId": {
                "description": "Wikipedia Id of the entity.",
                "x-ms-summary": "Wikipedia Id",
                "type": "string"
              },
              "wikipediaUrl": {
                "description": "Wikipedia url of the entity.",
                "x-ms-summary": "Wikipedia Url",
                "type": "string"
              },
              "bingId": {
                "description": "Bing Id of the entity.",
                "x-ms-summary": "Bing Id",
                "type": "string"
              },
              "type": {
                "description": "Type of the entity.",
                "x-ms-summary": "Type",
                "type": "string"
              },
              "subType": {
                "description": "Subtype of the entity.",
                "x-ms-summary": "Subtype",
                "type": "string"
              }
            }
          }
        },
        "id": {
          "x-ms-summary": "Id",
          "description": "The unique document identifier.",
          "type": "string"
        }
      }
    },
    "LanguageResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLanguage"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "LanguageResultV2": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique document identifier.",
          "x-ms-summary": "Id",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "A list of extracted languages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectedLanguageV2"
          }
        }
      }
    },
    "SentimentResult": {
      "type": "object",
      "properties": {
        "score": {
          "format": "double",
          "description": "A decimal number between 0 and 1 denoting the sentiment of the document.  A score above 0.7 usually refers to a positive document while a score below 0.3 normally has a negative connotation. Mid values refer to neutral text.",
          "type": "number",
          "x-ms-summary": "Score"
        },
        "id": {
          "description": "The unique document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        }
      }
    },
    "DetectedLanguageV2": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The long name of a detected language (e.g. English, French).",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "iso6391Name": {
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr).",
          "type": "string",
          "x-ms-summary": "Language Code"
        },
        "score": {
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true.",
          "type": "number",
          "x-ms-summary": "Score"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  },
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "tags": []
}