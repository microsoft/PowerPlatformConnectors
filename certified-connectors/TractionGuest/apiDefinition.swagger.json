{
  "swagger": "2.0",
  "info": {
    "title": "Traction Guest",
    "version": "1.0.0",
    "description": "Traction Guest is a leading visitor management solution that tracks visitor invites and sign ins. Actions taken in Traction Guest such as a visitor signing in, an invite being sent by a host, or a visitor matching on a watchlist can trigger actions in other connectors."
  },
  "host": "us.tractionguest.com",
  "basePath": "/api/v2",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/webhooks/{hook_id}": {
      "delete": {
        "description": "Unsubscribe a specific webhook",
        "summary": "Deletes a webhook",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "name": "hook_id",
            "in": "path",
            "description": "ID of the webhook being deleted",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "ID of the webhook being deleted"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook successfully deleted"
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        }
      }
    },
    "/webhooks/signin": {
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignin"
        }
      },
      "post": {
        "summary": "When a guest signs in",
        "description": "This action will trigger when a guest signs in, either at an iPad or in the Guest web interface",
        "operationId": "CreateSigninWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["url", "event"],
              "type": "object",
              "properties": {
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "event": {
                  "default": "signin",
                  "enum": ["signin", "signout", "watchlist", "invite"],
                  "type": "string",
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            },
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/webhooks/watchlist": {
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignin"
        }
      },
      "post": {
        "summary": "When a guest triggers a watchlist",
        "description": "This action will fire when a guest is flagged on a watchlist",
        "operationId": "CreateWatchlistWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["url", "event"],
              "type": "object",
              "properties": {
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "event": {
                  "default": "watchlist",
                  "enum": ["signin", "signout", "watchlist", "invite"],
                  "type": "string",
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            },
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/webhooks/signout": {
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignout"
        }
      },
      "post": {
        "summary": "When a guest signs out",
        "description": "This operation is triggered when a guest signs out",
        "operationId": "CreateSignoutWebhook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["url", "event"],
              "type": "object",
              "properties": {
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "event": {
                  "default": "signout",
                  "enum": ["signin", "signout", "watchlist", "invite"],
                  "type": "string",
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            },
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "x-ms-trigger": "single"
      }
    },
    "/webhooks/invite": {
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookInvite"
        }
      },
      "post": {
        "summary": "When a guest is invited",
        "operationId": "CreateInviteWebhook",
        "description": "This trigger is executed when an invite is created in Guest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": ["url", "event"],
              "type": "object",
              "properties": {
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "event": {
                  "default": "invite",
                  "enum": ["signin", "signout", "watchlist", "invite"],
                  "type": "string",
                  "x-ms-visibility": "internal"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            },
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "x-ms-trigger": "single"
      }
    }
  },
  "definitions": {
    "WebhookCreatedResponse": {
      "title": "Root Type for WebhookCreatedResponse",
      "description": "The root of the WebhookCreatedResponse type's schema.",
      "required": ["id"],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "WebhookInviteCreateRequest": {
      "required": ["url", "event"],
      "type": "object",
      "properties": {
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "event": {
          "default": "invite",
          "enum": ["signin", "signout", "watchlist", "invite"],
          "type": "string",
          "x-ms-visibility": "internal"
        }
      }
    },
    "WebhookSigninCreateRequest": {
      "required": ["url", "event"],
      "type": "object",
      "properties": {
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "event": {
          "default": "signin",
          "enum": ["signin", "signout", "watchlist", "invite"],
          "type": "string",
          "x-ms-visibility": "internal"
        }
      }
    },
    "WebhookSignoutCreateRequest": {
      "required": ["url", "event"],
      "type": "object",
      "properties": {
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "event": {
          "default": "signout",
          "enum": ["signin", "signout", "watchlist", "invite"],
          "type": "string",
          "x-ms-visibility": "internal"
        }
      }
    },
    "WebhookWatchlistCreateRequest": {
      "required": ["url", "event"],
      "type": "object",
      "properties": {
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "event": {
          "default": "watchlist",
          "enum": ["signin", "signout", "watchlist", "invite"],
          "type": "string",
          "x-ms-visibility": "internal"
        }
      }
    },
    "Host": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "x-ms-summary": "Host first name"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Host last name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Host email"
        }
      },
      "example": "{\n    \"first_name\": \"David\",\n    \"last_name\": \"Nelson\",\n    \"full_name\": \"David Nelson\",\n    \"email\": \"dnelson@example.com\"\n}"
    },
    "Watchlist": {
      "title": "Root Type for Watchlist",
      "description": "The root of the Watchlist type's schema.",
      "type": "object",
      "properties": {
        "internal": {
          "type": "boolean",
          "x-ms-summary": "Internal watchlist?"
        },
        "color": {
          "type": "string",
          "x-ms-summary": "Watchlist color"
        },
        "text": {
          "type": "string",
          "x-ms-summary": "Watchlist description (external only)"
        },
        "source_information_url": {
          "type": "string",
          "x-ms-summary": "Watchlist information (external only)"
        },
        "source": {
          "type": "string",
          "x-ms-summary": "Watchlist source"
        }
      }
    },
    "WebhookSignin": {
      "required": ["acknowledged", "signin_timestamp", "watchlists", "hosts"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Signin ID"
        },
        "acknowledged": {
          "type": "boolean",
          "x-ms-summary": "Guest acknowledged?"
        },
        "guest_first_name": {
          "type": "string",
          "x-ms-summary": "Guest first name"
        },
        "guest_last_name": {
          "type": "string",
          "x-ms-summary": "Guest last name"
        },
        "guest_email": {
          "type": "string",
          "x-ms-summary": "Guest email"
        },
        "company": {
          "type": "string",
          "x-ms-summary": "Guest company"
        },
        "visit_reason": {
          "type": "string",
          "x-ms-summary": "Reason for visit"
        },
        "photo_thumb_url": {
          "type": "string",
          "x-ms-summary": "Link to photo thumbnail of guest"
        },
        "photo_medium_url": {
          "type": "string",
          "x-ms-summary": "Link to photo of guest"
        },
        "location_name": {
          "type": "string",
          "x-ms-summary": "Location name"
        },
        "signin_timestamp": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Signin time"
        },
        "report_url": {
          "type": "string",
          "x-ms-summary": "Link to alert security"
        },
        "badge_number": {
          "type": "string",
          "x-ms-summary": "Guest badge ID"
        },
        "watchlists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Watchlist"
          },
          "x-ms-summary": "Guest's watchlist colors"
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Host"
          }
        },
        "photo_filename": {
          "type": "string",
          "x-ms-summary": "Photo filename, if available"
        },
        "photo": {
          "format": "binary",
          "type": "string",
          "x-ms-summary": "The guest's photograph, if available"
        }
      }
    },
    "WebhookInvite": {
      "required": ["hosts", "watchlists", "sent_email", "last_name"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "Invitee's first name"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Invitee's last name"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Invitee's email"
        },
        "company": {
          "type": "string",
          "x-ms-summary": "Invitee's company"
        },
        "start_date": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Invitation start date"
        },
        "end_date": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Invitation end date"
        },
        "on_premise": {
          "type": "boolean"
        },
        "sent_email": {
          "type": "boolean",
          "x-ms-summary": "Was invitation sent via email?"
        },
        "watchlists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Watchlist"
          }
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Host"
          }
        },
        "created_by": {
          "$ref": "#/definitions/Host"
        }
      }
    },
    "WebhookSignout": {
      "title": "Root Type for WebhookSignout",
      "description": "The root of the WebhookSignout type's schema.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "location_name": {
          "type": "string"
        },
        "signout_timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": "{\"id\":125,\"first_name\":\"N/A\",\"last_name\":\"N/A\",\"email\":\"email@email.com\",\"location_name\":\"N/A\",\"signout_timestamp\":\"1969-12-31T16:16:40-08:00\"}"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://us.tractionguest.com/oauth/authorize",
      "tokenUrl": "https://us.tractionguest.com/oauth/token",
      "scopes": {
        "admin:webhooks": "admin:webhooks"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": ["admin:webhooks"]
    }
  ],
  "tags": []
}
