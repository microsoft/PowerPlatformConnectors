{
  "basePath": "/api/v2",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Host": {
      "example": "{\n    \"first_name\": \"David\",\n    \"last_name\": \"Nelson\",\n    \"full_name\": \"David Nelson\",\n    \"email\": \"dnelson@example.com\"\n}",
      "properties": {
        "email": {
          "type": "string",
          "x-ms-summary": "Host email"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "Host first name"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Host last name"
        }
      },
      "type": "object"
    },
    "Watchlist": {
      "description": "",
      "properties": {
        "color": {
          "type": "string",
          "x-ms-summary": "Watchlist color"
        },
        "internal": {
          "type": "boolean",
          "x-ms-summary": "Internal watchlist?"
        },
        "source": {
          "type": "string",
          "x-ms-summary": "Watchlist source"
        },
        "source_information_url": {
          "type": "string",
          "x-ms-summary": "Watchlist information (external only)"
        },
        "text": {
          "type": "string",
          "x-ms-summary": "Watchlist description (external only)"
        }
      },
      "title": "Watchlist",
      "type": "object"
    },
    "WebhookCreatedResponse": {
      "description": "WebhookCreatedResponse",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "WebhookCreatedResponse",
      "type": "object"
    },
    "WebhookInvite": {
      "properties": {
        "company": {
          "type": "string",
          "x-ms-summary": "Invitee's company"
        },
        "created_by": {
          "$ref": "#/definitions/Host"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "Invitee's email"
        },
        "end_date": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Invitation end date"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "Invitee's first name"
        },
        "hosts": {
          "items": {
            "$ref": "#/definitions/Host"
          },
          "type": "array"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Invitee's last name"
        },
        "location_name": {
          "type": "string",
          "x-ms-summary": "Location name"
        },
        "on_premise": {
          "type": "boolean"
        },
        "sent_email": {
          "type": "boolean",
          "x-ms-summary": "Was invitation sent via email?"
        },
        "start_date": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Invitation start date"
        },
        "watchlists": {
          "items": {
            "$ref": "#/definitions/Watchlist"
          },
          "type": "array"
        }
      },
      "required": [
        "hosts",
        "watchlists",
        "sent_email",
        "last_name"
      ],
      "type": "object"
    },
    "WebhookInviteCreateRequest": {
      "properties": {
        "event": {
          "default": "invite",
          "enum": [
            "signin",
            "signout",
            "watchlist",
            "invite"
          ],
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "url",
        "event"
      ],
      "type": "object"
    },
    "WebhookSignin": {
      "properties": {
        "acknowledged": {
          "type": "boolean",
          "x-ms-summary": "Guest acknowledged?"
        },
        "badge_number": {
          "type": "string",
          "x-ms-summary": "Guest badge number"
        },
        "company": {
          "type": "string",
          "x-ms-summary": "Guest company"
        },
        "guest_email": {
          "type": "string",
          "x-ms-summary": "Guest email"
        },
        "guest_first_name": {
          "type": "string",
          "x-ms-summary": "Guest first name"
        },
        "guest_last_name": {
          "type": "string",
          "x-ms-summary": "Guest last name"
        },
        "hosts": {
          "items": {
            "$ref": "#/definitions/Host"
          },
          "type": "array"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Signin ID"
        },
        "location_name": {
          "type": "string",
          "x-ms-summary": "Location name"
        },
        "photo": {
          "format": "binary",
          "type": "string",
          "x-ms-summary": "The guest's photograph, if available"
        },
        "photo_filename": {
          "type": "string",
          "x-ms-summary": "Photo filename, if available"
        },
        "photo_medium_url": {
          "type": "string",
          "x-ms-summary": "Link to photo of guest"
        },
        "photo_thumb_url": {
          "type": "string",
          "x-ms-summary": "Link to photo thumbnail of guest"
        },
        "report_url": {
          "type": "string",
          "x-ms-summary": "Link to alert security"
        },
        "signin_timestamp": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Signin time"
        },
        "visit_reason": {
          "type": "string",
          "x-ms-summary": "Reason for visit"
        },
        "watchlists": {
          "items": {
            "$ref": "#/definitions/Watchlist"
          },
          "type": "array",
          "x-ms-summary": "Guest's watchlist colors"
        }
      },
      "required": [
        "acknowledged",
        "signin_timestamp",
        "watchlists",
        "hosts"
      ],
      "type": "object"
    },
    "WebhookSigninCreateRequest": {
      "properties": {
        "event": {
          "default": "signin",
          "enum": [
            "signin",
            "signout",
            "watchlist",
            "invite"
          ],
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "url",
        "event"
      ],
      "type": "object"
    },
    "WebhookSignout": {
      "description": "WebhookSignout",
      "example": "{\"id\":125,\"first_name\":\"N/A\",\"last_name\":\"N/A\",\"email\":\"email@email.com\",\"location_name\":\"N/A\",\"signout_timestamp\":\"1969-12-31T16:16:40-08:00\"}",
      "properties": {
        "email": {
          "type": "string",
          "x-ms-summary": "Guest's email"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "Guest's first name"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "Guest's last name"
        },
        "location_name": {
          "type": "string",
          "x-ms-summary": "Location name"
        },
        "signout_timestamp": {
          "format": "date-time",
          "type": "string",
          "x-ms-summary": "Signout time"
        }
      },
      "title": "WebhookSignout",
      "type": "object"
    },
    "WebhookSignoutCreateRequest": {
      "properties": {
        "event": {
          "default": "signout",
          "enum": [
            "signin",
            "signout",
            "watchlist",
            "invite"
          ],
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "url",
        "event"
      ],
      "type": "object"
    },
    "WebhookWatchlistCreateRequest": {
      "properties": {
        "event": {
          "default": "watchlist",
          "enum": [
            "signin",
            "signout",
            "watchlist",
            "invite"
          ],
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "url": {
          "title": "Webhook target URL",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "url",
        "event"
      ],
      "type": "object"
    }
  },
  "host": "us.tractionguest.com",
  "info": {
    "description": "Traction Guest is a leading visitor management solution that tracks visitor invites and sign ins. Actions taken in Traction Guest such as a visitor signing in, an invite being sent by a host, or a visitor matching on a watchlist can trigger actions in other connectors.",
    "title": "Traction Guest",
    "version": "1.0.0",
    "contact": {
      "name": "Traction Guest Support",
      "url": "https://tractionguest.com/support",
      "email": "support@tractionguest.com"
    }
  },
  "parameters": {},
  "paths": {
    "/webhooks/invite": {
      "post": {
        "description": "This trigger is executed when an invite is created in Guest",
        "operationId": "CreateInviteWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "event": {
                  "default": "invite",
                  "enum": [
                    "signin",
                    "signout",
                    "watchlist",
                    "invite"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "url",
                "event"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "When a guest is invited",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for Invite Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookInvite"
        }
      }
    },
    "/webhooks/signin": {
      "post": {
        "description": "This action will trigger when a guest signs in, either at an iPad or in the Guest web interface",
        "operationId": "CreateSigninWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "event": {
                  "default": "signin",
                  "enum": [
                    "signin",
                    "signout",
                    "watchlist",
                    "invite"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "url",
                "event"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "When a guest signs in",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for Signin Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignin"
        }
      }
    },
    "/webhooks/signout": {
      "post": {
        "description": "This operation is triggered when a guest signs out",
        "operationId": "CreateSignoutWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "event": {
                  "default": "signout",
                  "enum": [
                    "signin",
                    "signout",
                    "watchlist",
                    "invite"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "url",
                "event"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "When a guest signs out",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for Signout Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignout"
        }
      }
    },
    "/webhooks/watchlist": {
      "post": {
        "description": "This action will fire when a guest is flagged on a watchlist",
        "operationId": "CreateWatchlistWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "event": {
                  "default": "watchlist",
                  "enum": [
                    "signin",
                    "signout",
                    "watchlist",
                    "invite"
                  ],
                  "type": "string",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "title": "Webhook target URL",
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "url",
                "event"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created webhook",
            "headers": {
              "Location": {
                "description": "The DELETE URL for the created webhook",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WebhookCreatedResponse"
            }
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "When a guest triggers a watchlist",
        "x-ms-trigger": "single"
      },
      "x-ms-notification-content": {
        "description": "Details for Signin watchlisted Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookSignin"
        }
      }
    },
    "/webhooks/{hook_id}": {
      "delete": {
        "description": "Unsubscribe a specific webhook",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "description": "ID of the webhook being deleted",
            "in": "path",
            "name": "hook_id",
            "required": true,
            "type": "string",
            "x-ms-summary": "ID of the webhook being deleted",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook successfully deleted"
          },
          "403": {
            "description": "Token lacks sufficient permissions"
          }
        },
        "summary": "Deletes a webhook"
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "oauth2_auth": [
        "admin:webhooks"
      ]
    }
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "authorizationUrl": "https://us.tractionguest.com/oauth/authorize",
      "flow": "accessCode",
      "scopes": {
        "admin:webhooks": "admin:webhooks"
      },
      "tokenUrl": "https://us.tractionguest.com/oauth/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://tractionguest.com/privacy/"
    },
    {
      "propertyName": "Website",
      "propertyValue": "https://tractionguest.com"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Intelligence;Security"
    }
  ]
}