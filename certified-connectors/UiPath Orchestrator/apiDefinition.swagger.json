{
  "swagger": "2.0",
  "info":
  {
    "title": "UiPath Orchestrator",
    "description": "Run automations in UiPath Cloud Orchestrator.",
    "version": "1.0.0",
    "contact":
    {
      "name": "Integrations Team",
      "email": "integrations-apps@uipath.com",
      "url": "https://www.uipath.com/support"
    }
  },
  "host": "cloud.uipath.com",
  "basePath": "/orchestrator_/",
  "schemes":
  [
    "https"
  ],
  "x-ms-connector-metadata":
  [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.uipath.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.uipath.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Business Intelligence"
    }
  ],
  "securityDefinitions":
  {
    "oauth2_auth":
    {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://cloud.uipath.com/identity_/connect/authorize",
      "tokenUrl": "https://cloud.uipath.com/identity_/connect/token",
      "scopes":
      {
        "OR.Execution.Read OR.Folders.Read OR.Jobs.Write OR.Queues offline_access": "OR.Execution.Read OR.Folders.Read OR.Jobs.Write OR.Queues offline_access"
      }
    }
  },
  "security":
  [
    {
      "oauth2_auth":
      [
        "OR.Execution.Read OR.Folders.Read OR.Jobs.Write OR.Queues offline_access"
      ]
    }
  ],
  "parameters":
  {
    "filter":
    {
      "in": "query",
      "name": "$filter",
      "description": "Restricts the set of items returned. The maximum number of expressions is 100.",
      "type": "string",
      "x-ms-summary": "Filter",
      "x-ms-visibility": "advanced"
    },
    "orderBy":
    {
      "in": "query",
      "name": "$orderby",
      "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
      "type": "string",
      "x-ms-summary": "Order By",
      "x-ms-visibility": "advanced"
    },
    "top":
    {
      "in": "query",
      "name": "$top",
      "description": "Limits the number of items returned from a collection. The maximum value is 1000.",
      "type": "integer",
      "format": "int32",
      "x-ms-summary": "Top",
      "x-ms-visibility": "advanced"
    },
    "skip":
    {
      "in": "query",
      "name": "$skip",
      "description": "Excludes the specified number of items of the queried collection from the result.",
      "type": "integer",
      "format": "int32",
      "x-ms-summary": "Skip",
      "x-ms-visibility": "advanced"
    }
  },
  "paths":
  {
    "/odata/Folders":
    {
      "get":
      {
        "description": "Gets a list of folders.",
        "operationId": "GetFolders",
        "parameters":
        [
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "produces":
        [
          "application/json"
        ],
        "responses":
        {
          "200":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/ODataValueOfIEnumerableOfFolderDto"
            }
          }
        },
        "summary": "Get Folders",
        "tags":
        [
          "Folders"
        ],
        "x-ms-visibility": "internal"
      }
    },
    "/odata/Jobs/UiPath.Server.Configuration.OData.StartJobs":
    {
      "post":
      {
        "consumes":
        [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json"
        ],
        "description": "Creates a new job and sets it in Pending state for each robot based on the input parameters and notifies the respective robots about the pending job.",
        "operationId": "StartJobs",
        "parameters":
        [
          {
            "in": "body",
            "name": "body",
            "description": "StartInfo - The information required to register the new jobs.",
            "schema":
            {
              "$ref": "#/definitions/StartJobDto"
            }
          },
          {
            "in": "header",
            "name": "X-UIPATH-OrganizationUnitId",
            "description": "Folder/OrganizationUnit Id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "x-ms-summary": "Folder",
            "x-ms-dynamic-values":
            {
              "operationId": "GetFolders",
              "value-path": "Id",
              "value-collection": "value",
              "value-title": "FullyQualifiedName"
            }
          }
        ],
        "produces":
        [
          "application/json"
        ],
        "responses":
        {
          "201":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/ODataValueOfIEnumerableOfJobDto"
            }
          }
        },
        "summary": "Start Job",
        "tags":
        [
          "Jobs"
        ]
      }
    },
    "/odata/Processes":
    {
      "get":
      {
        "tags":
        [
          "Processes"
        ],
        "summary": "Get Processes",
        "description": "Gets a list of processes.",
        "operationId": "GetProcesses",
        "x-ms-visibility": "internal",
        "produces":
        [
          "application/json"
        ],
        "parameters":
        [
          {
            "in": "query",
            "name": "searchTerm",
            "description": "Used to narrow result items to those matching the requested search term.",
            "type": "string",
            "default": "",
            "x-ms-summary": "Search Term",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "query",
            "name": "feedId",
            "description": "Indicates the feed id.",
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Search Term",
            "x-ms-visibility": "advanced"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/ODataValueOfIEnumerableOfProcessDto"
            }
          }
        }
      }
    },
    "/odata/QueueDefinitions":
    {
      "get":
      {
        "tags":
        [
          "QueueDefinitions"
        ],
        "summary": "Gets Queues",
        "description": "Gets a list of queues.",
        "operationId": "GetQueueDefinitions",
        "x-ms-visibility": "internal",
        "produces":
        [
          "application/json"
        ],
        "parameters":
        [
          {
            "in": "query",
            "name": "mandatoryPermissions",
            "description": "All permissions in this set must be met",
            "type": "array",
            "x-ms-summary": "Mandatory Permissions",
            "x-ms-visibility": "advanced",
            "items":
            {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "atLeastOnePermissions",
            "description": "At least one permission in this set must be met",
            "type": "array",
            "x-ms-summary": "At Least One Permission",
            "x-ms-visibility": "advanced",
            "items":
            {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "in": "header",
            "name": "X-UIPATH-OrganizationUnitId",
            "description": "Folder/OrganizationUnit Id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "x-ms-summary": "Folder",
            "x-ms-dynamic-values":
            {
              "operationId": "GetFolders",
              "value-path": "Id",
              "value-collection": "value",
              "value-title": "FullyQualifiedName"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/ODataValueOfIEnumerableOfQueueDefinitionDto"
            }
          }
        }
      }
    },
    "/odata/Queues/UiPathODataSvc.AddQueueItem":
    {
      "post":
      {
        "tags":
        [
          "Queues"
        ],
        "summary": "Adds Queue Item",
        "description": "Add a new queue item for processing.",
        "operationId": "AddQueueItem",
        "consumes":
        [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json"
        ],
        "produces":
        [
          "application/json"
        ],
        "parameters":
        [
          {
            "in": "body",
            "name": "body",
            "description": "Defines the queue item content.",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "itemData":
                {
                  "description": "Defines the work item content.",
                  "type": "object",
                  "properties":
                  {
                    "Name":
                    {
                      "description": "The name of the queue into which the item will be added.",
                      "type": "string",
                      "x-ms-dynamic-values":
                      {
                        "operationId": "GetQueueDefinitions",
                        "value-path": "Name",
                        "value-collection": "value",
                        "value-title": "Name",
                        "parameters":
                        {
                          "X-UIPATH-OrganizationUnitId":
                          {
                            "parameter": "X-UIPATH-OrganizationUnitId"
                          }
                        }
                      }
                    },
                    "Priority":
                    {
                      "description": "Sets the processing importance for a given item.",
                      "default": "Normal",
                      "enum":
                      [
                        "High",
                        "Normal",
                        "Low"
                      ],
                      "type": "string",
                      "x-ms-enum":
                      {
                        "name": "QueueItemDataDtoPriority",
                        "modelAsString": false
                      }
                    },
                    "SpecificContent":
                    {
                      "description": "A collection of key value pairs. Example: \"Name\":\"John\", \"Status\": true",
                      "type": "object",
                      "x-ms-summary": "Specific Content",
                      "additionalProperties":
                      {
                      }
                    },
                    "DeferDate":
                    {
                      "format": "date-time",
                      "x-ms-summary": "Defer Date",
                      "description": "The earliest date and time at which the item is available for processing. If empty the item can be processed as soon as possible.",
                      "type": "string"
                    },
                    "DueDate":
                    {
                      "format": "date-time",
                      "x-ms-summary": "Due Date",
                      "description": "The latest date and time at which the item should be processed. If empty the item can be processed at any given time.",
                      "type": "string"
                    },
                    "RiskSlaDate":
                    {
                      "format": "date-time",
                      "x-ms-summary": "Risk SLA Date",
                      "description": "The RiskSla date at time which is considered as risk zone for the item to be processed.",
                      "type": "string"
                    },
                    "Reference":
                    {
                      "description": "An optional, user-specified value for queue item identification.",
                      "maxLength": 128,
                      "minLength": 0,
                      "type": "string"
                    },
                    "Progress":
                    {
                      "description": "String field which is used to keep track of the business flow progress.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "header",
            "name": "X-UIPATH-OrganizationUnitId",
            "description": "Folder/OrganizationUnit Id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "x-ms-summary": "Folder",
            "x-ms-dynamic-values":
            {
              "operationId": "GetFolders",
              "value-path": "Id",
              "value-collection": "value",
              "value-title": "FullyQualifiedName"
            }
          }
        ],
        "responses":
        {
          "201":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/QueueItemDto"
            }
          }
        }
      }
    },
    "/odata/Releases":
    {
      "get":
      {
        "tags":
        [
          "Releases"
        ],
        "summary": "Get Releases",
        "description": "Gets a list of releases.",
        "operationId": "GetReleases",
        "x-ms-visibility": "internal",
        "produces":
        [
          "application/json"
        ],
        "parameters":
        [
          {
            "in": "header",
            "name": "X-UIPATH-OrganizationUnitId",
            "description": "Folder/OrganizationUnit Id",
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Folder Id"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Success",
            "schema":
            {
              "$ref": "#/definitions/ODataValueOfIEnumerableOfReleaseDto"
            }
          }
        }
      }
    }
  },
  "definitions":
  {
    "ArgumentMetadata":
    {
      "type": "object",
      "properties":
      {
        "Input":
        {
          "type": "string"
        },
        "Output":
        {
          "type": "string"
        }
      }
    },
    "AttendedRobotDto":
    {
      "type": "object",
      "properties":
      {
        "UserName":
        {
          "description": "The username used to authenticate on the Host Machine.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExecutionSettings":
        {
          "description": "An object containing execution settings for the Robot.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "RobotId":
        {
          "format": "int64",
          "description": "The actual Id of the provisioned Robot.",
          "type": "integer"
        },
        "RobotType":
        {
          "description": "The actual Type of the provisioned Robot.",
          "enum":
          [
            "NonProduction",
            "Attended",
            "Unattended",
            "Studio",
            "RpaDeveloper",
            "Development",
            "StudioX",
            "CitizenDeveloper",
            "Headless",
            "RpaDeveloperPro",
            "StudioPro",
            "TestAutomation"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "AttendedRobotDtoRobotType",
            "modelAsString": false
          }
        }
      }
    },
    "CustomKeyValuePair":
    {
      "description": "Stores a custom pair of key and value for assets with type KeyValueList.",
      "type": "object",
      "properties":
      {
        "Key":
        {
          "description": "A piece of text representing the key.",
          "type": "string"
        },
        "Value":
        {
          "description": "A piece of text representing the value.",
          "type": "string"
        }
      }
    },
    "EntryPointDataVariationDto":
    {
      "type": "object",
      "properties":
      {
        "Content":
        {
          "type": "string"
        },
        "ContentType":
        {
          "enum":
          [
            "Json"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "EntryPointDataVariationDtoContentType",
            "modelAsString": false
          }
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "EntryPointDto":
    {
      "type": "object",
      "properties":
      {
        "UniqueId":
        {
          "format": "uuid",
          "type": "string"
        },
        "Path":
        {
          "type": "string"
        },
        "InputArguments":
        {
          "type": "string"
        },
        "OutputArguments":
        {
          "type": "string"
        },
        "DataVariation":
        {
          "$ref": "#/definitions/EntryPointDataVariationDto"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "EnvironmentDto":
    {
      "description": "A grouping of Robots.",
      "required":
      [
        "Name"
      ],
      "type": "object",
      "properties":
      {
        "Name":
        {
          "description": "A custom name for the environment.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Description":
        {
          "description": "Used to add additional information about an environment in order to better identify it.",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Robots":
        {
          "description": "The collection of robots associated with the current environment.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/SimpleRobotDto"
          }
        },
        "Type":
        {
          "description": "DEPRECATED. The environment type specifies how it should be used.\r\nThis property is deprecated and should no longer be used.",
          "enum":
          [
            "Dev",
            "Test",
            "Prod"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "EnvironmentDtoType",
            "modelAsString": false
          },
          "x-deprecated": true
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "FolderDto":
    {
      "required":
      [
        "DisplayName"
      ],
      "type": "object",
      "properties":
      {
        "Key":
        {
          "format": "uuid",
          "description": "Unique key for the folder",
          "type": "string"
        },
        "DisplayName":
        {
          "description": "Display name for the folder.",
          "maxLength": 115,
          "type": "string"
        },
        "FullyQualifiedName":
        {
          "description": "Name of folder prepended by the names of its ancestors.",
          "type": "string"
        },
        "Description":
        {
          "description": "Description of folder",
          "maxLength": 500,
          "type": "string"
        },
        "IsPersonal":
        {
          "description": "True if Personal",
          "type": "boolean",
          "readOnly": true
        },
        "ProvisionType":
        {
          "description": "Robot provisioning type",
          "enum":
          [
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "FolderDtoProvisionType",
            "modelAsString": false
          }
        },
        "PermissionModel":
        {
          "description": "Folder permissions model",
          "enum":
          [
            "InheritFromTenant",
            "FineGrained"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "FolderDtoPermissionModel",
            "modelAsString": false
          }
        },
        "ParentId":
        {
          "format": "int64",
          "description": "Id of parent folder in the folders hierarchy",
          "type": "integer"
        },
        "ParentKey":
        {
          "format": "uuid",
          "description": "Unique key for the parent folder",
          "type": "string"
        },
        "FeedType":
        {
          "description": "Folder feed type",
          "enum":
          [
            "Undefined",
            "Processes",
            "Libraries",
            "PersonalWorkspace",
            "FolderHierarchy"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "FolderDtoFeedType",
            "modelAsString": false
          }
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "JobDto":
    {
      "description": "Represents a scheduled or manual execution of a process on a robot.",
      "type": "object",
      "properties":
      {
        "Key":
        {
          "format": "uuid",
          "description": "The unique job identifier.",
          "type": "string"
        },
        "StartTime":
        {
          "format": "date-time",
          "description": "The date and time when the job execution started or null if the job hasn't started yet.",
          "type": "string"
        },
        "EndTime":
        {
          "format": "date-time",
          "description": "The date and time when the job execution ended or null if the job hasn't ended yet.",
          "type": "string"
        },
        "State":
        {
          "description": "The state in which the job is.",
          "enum":
          [
            "Pending",
            "Running",
            "Stopping",
            "Terminating",
            "Faulted",
            "Successful",
            "Stopped",
            "Suspended",
            "Resumed"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoState",
            "modelAsString": false
          }
        },
        "JobPriority":
        {
          "description": "Execution priority.",
          "enum":
          [
            "Low",
            "Normal",
            "High"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoJobPriority",
            "modelAsString": false
          }
        },
        "Robot":
        {
          "$ref": "#/definitions/SimpleRobotDto"
        },
        "Release":
        {
          "$ref": "#/definitions/SimpleReleaseDto"
        },
        "Source":
        {
          "description": "The Source name of the job.",
          "type": "string"
        },
        "SourceType":
        {
          "description": "The Source type of the job.",
          "enum":
          [
            "Manual",
            "Schedule",
            "Agent",
            "Queue",
            "StudioWeb"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoSourceType",
            "modelAsString": false
          }
        },
        "BatchExecutionKey":
        {
          "format": "uuid",
          "description": "The unique identifier grouping multiple jobs. It is usually generated when the job is created by a schedule.",
          "type": "string"
        },
        "Info":
        {
          "description": "Additional information about the current job.",
          "type": "string"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "The date and time when the job was created.",
          "type": "string"
        },
        "StartingScheduleId":
        {
          "format": "int64",
          "description": "The Id of the schedule that started the job, or null if the job was started by the user.",
          "type": "integer"
        },
        "ReleaseName":
        {
          "description": "The name of the release associated with the current name.",
          "type": "string"
        },
        "Type":
        {
          "description": "The type of the job, Attended if started via the robot, Unattended otherwise",
          "enum":
          [
            "Unattended",
            "Attended"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoType",
            "modelAsString": false
          }
        },
        "InputArguments":
        {
          "description": "Input parameters in JSON format to be passed to job execution",
          "type": "string"
        },
        "OutputArguments":
        {
          "description": "Output parameters in JSON format resulted from job execution",
          "type": "string"
        },
        "HostMachineName":
        {
          "description": "The name of the machine where the Robot run the job.",
          "type": "string"
        },
        "HasMediaRecorded":
        {
          "description": "True if any execution media has been recorded for this job, false otherwise.",
          "type": "boolean"
        },
        "PersistenceId":
        {
          "format": "uuid",
          "description": "The persistence instance id for a suspended job",
          "type": "string"
        },
        "ResumeVersion":
        {
          "format": "int32",
          "description": "Distinguishes between multiple job suspend/resume cycles",
          "type": "integer"
        },
        "StopStrategy":
        {
          "enum":
          [
            "SoftStop",
            "Kill"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoStopStrategy",
            "modelAsString": false
          }
        },
        "RuntimeType":
        {
          "description": "The runtime type of the robot which can pick up the job",
          "enum":
          [
            "NonProduction",
            "Attended",
            "Unattended",
            "Studio",
            "RpaDeveloper",
            "Development",
            "StudioX",
            "CitizenDeveloper",
            "Headless",
            "RpaDeveloperPro",
            "StudioPro",
            "TestAutomation"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoRuntimeType",
            "modelAsString": false
          }
        },
        "RequiresUserInteraction":
        {
          "type": "boolean"
        },
        "ReleaseVersionId":
        {
          "format": "int64",
          "type": "integer"
        },
        "EntryPointPath":
        {
          "description": "Path to the entry point workflow (XAML) that will be executed by the robot",
          "maxLength": 512,
          "type": "string"
        },
        "OrganizationUnitId":
        {
          "format": "int64",
          "description": "Id of the folder this job is part of.",
          "type": "integer"
        },
        "OrganizationUnitFullyQualifiedName":
        {
          "description": "Fully qualified name of the folder this job is part of.",
          "type": "string"
        },
        "Reference":
        {
          "description": "Reference identifier for the job",
          "type": "string"
        },
        "ProcessType":
        {
          "enum":
          [
            "Undefined",
            "Process",
            "TestAutomationProcess"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "JobDtoProcessType",
            "modelAsString": false
          }
        },
        "Machine":
        {
          "$ref": "#/definitions/MachineDto"
        },
        "ProfilingOptions":
        {
          "description": "Options to instruct the robot what profiling info to collect (code coverage, CPU / memory utilization, etc)",
          "type": "string"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "JobsStartJobsParameters":
    {
      "type": "object",
      "properties":
      {
        "startInfo":
        {
          "$ref": "#/definitions/StartProcessDto"
        }
      }
    },
    "MachineDto":
    {
      "description": "The Machine that hosts the Robot",
      "required":
      [
        "Name"
      ],
      "type": "object",
      "properties":
      {
        "LicenseKey":
        {
          "description": "The key is automatically generated from the server for the Robot machine. For the robot to work, the same key must exist on both the robot and Orchestrator.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Name":
        {
          "description": "The name of the Machine a Robot is hosted on.",
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "Description":
        {
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Type":
        {
          "description": "The type of the Machine (Standard / Template).",
          "enum":
          [
            "Standard",
            "Template"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "MachineDtoType",
            "modelAsString": false
          }
        },
        "Scope":
        {
          "description": "The scope of the Machine (Default / Shared / PW / Cloud).",
          "enum":
          [
            "Default",
            "Shared",
            "PersonalWorkspace",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "MachineDtoScope",
            "modelAsString": false
          }
        },
        "NonProductionSlots":
        {
          "format": "int32",
          "description": "Number of NonProduction slots to be reserved at runtime",
          "type": "integer"
        },
        "UnattendedSlots":
        {
          "format": "int32",
          "description": "Number of Unattended slots to be reserved at runtime",
          "type": "integer"
        },
        "HeadlessSlots":
        {
          "format": "int32",
          "description": "Number of Headless slots to be reserved at runtime",
          "type": "integer"
        },
        "TestAutomationSlots":
        {
          "format": "int32",
          "description": "Number of TestAutomation slots to be reserved at runtime",
          "type": "integer"
        },
        "Key":
        {
          "format": "uuid",
          "description": "An immutable unique identifier that is preserved during tenant migration",
          "type": "string"
        },
        "RobotVersions":
        {
          "description": "The versions of the Robots hosted on the Machine.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/MachinesRobotVersionDto"
          }
        },
        "RobotUsers":
        {
          "description": "Robots assigned to template machine.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/RobotUserDto"
          }
        },
        "AutoScalingProfile":
        {
          "description": "The profile that drives auto scaling.",
          "enum":
          [
            "CostEfficient",
            "Balanced",
            "Fast",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "MachineDtoAutoScalingProfile",
            "modelAsString": false
          }
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "MachineRobotDto":
    {
      "type": "object",
      "properties":
      {
        "MachineId":
        {
          "format": "int64",
          "description": "The Id of the Machine.",
          "type": "integer"
        },
        "MachineName":
        {
          "description": "The name of the Machine.",
          "type": "string"
        },
        "RobotId":
        {
          "format": "int64",
          "description": "The Id of the Robot.",
          "type": "integer"
        },
        "RobotUserName":
        {
          "description": "The robot user name.",
          "type": "string"
        }
      }
    },
    "MachinesRobotVersionDto":
    {
      "type": "object",
      "properties":
      {
        "Count":
        {
          "format": "int64",
          "description": "The number of Robots on the Machine with the specified version.",
          "type": "integer"
        },
        "Version":
        {
          "description": "The Version of the Robot hosted on the Machine.",
          "type": "string"
        },
        "MachineId":
        {
          "format": "int64",
          "description": "The Id of the Machine.",
          "type": "integer"
        }
      }
    },
    "ODataValueOfIEnumerableOfFolderDto":
    {
      "type": "object",
      "properties":
      {
        "value":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/FolderDto"
          }
        }
      }
    },
    "ODataValueOfIEnumerableOfJobDto":
    {
      "type": "object",
      "properties":
      {
        "value":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/JobDto"
          }
        }
      }
    },
    "ODataValueOfIEnumerableOfProcessDto":
    {
      "type": "object",
      "properties":
      {
        "value":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/ProcessDto"
          }
        }
      }
    },
    "ODataValueOfIEnumerableOfQueueDefinitionDto":
    {
      "type": "object",
      "properties":
      {
        "value":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/QueueDefinitionDto"
          }
        }
      }
    },
    "ODataValueOfIEnumerableOfReleaseDto":
    {
      "type": "object",
      "properties":
      {
        "value":
        {
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/ReleaseDto"
          }
        }
      }
    },
    "OrganizationUnitDto":
    {
      "description": "Stores information about an organization unit in Orchestrator. An orchestrator unit can be understood as a company department and it is used to group different entities.",
      "required":
      [
        "DisplayName"
      ],
      "type": "object",
      "properties":
      {
        "DisplayName":
        {
          "description": "The name of the organization unit.",
          "maxLength": 128,
          "type": "string"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ProcessDto":
    {
      "description": "A process is a project defined in UiPath Studio and published in Orchestrator from UiPath Studio or manually.",
      "type": "object",
      "properties":
      {
        "IsActive":
        {
          "description": "Specifies if the process is still active.",
          "type": "boolean"
        },
        "Arguments":
        {
          "$ref": "#/definitions/ArgumentMetadata"
        },
        "SupportsMultipleEntryPoints":
        {
          "description": "Specifies if the process has multiple entry points.",
          "type": "boolean"
        },
        "MainEntryPointPath":
        {
          "description": "The main entry point path.",
          "type": "string"
        },
        "RequiresUserInteraction":
        {
          "description": "Specifies if the process can run in headless mode.",
          "type": "boolean"
        },
        "TargetFramework":
        {
          "enum":
          [
            "Legacy",
            "Windows",
            "Portable"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ProcessDtoTargetFramework",
            "modelAsString": false
          }
        },
        "EntryPoints":
        {
          "description": "Entry points.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/EntryPointDto"
          }
        },
        "Title":
        {
          "description": "The custom name of the package.",
          "type": "string"
        },
        "Version":
        {
          "description": "The current version of the given package.",
          "type": "string"
        },
        "Key":
        {
          "description": "The unique identifier for the package.",
          "type": "string"
        },
        "Description":
        {
          "description": "Used to add additional information about a package in order to better identify it.",
          "type": "string"
        },
        "Published":
        {
          "format": "date-time",
          "description": "The date and time when the package was published or uploaded.",
          "type": "string"
        },
        "IsLatestVersion":
        {
          "description": "Specifies whether the current version is the latest of the given package.",
          "type": "boolean"
        },
        "OldVersion":
        {
          "description": "Specifies the last version before the current one.",
          "type": "string"
        },
        "ReleaseNotes":
        {
          "description": "Package release notes.",
          "type": "string"
        },
        "Authors":
        {
          "description": "Package authors.",
          "type": "string"
        },
        "ProjectType":
        {
          "description": "Package project type.",
          "enum":
          [
            "Undefined",
            "Process",
            "ProcessLibrary",
            "BusinessProcess",
            "BusinessProcessLibrary",
            "TestAutomationProcess"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "PackageDtoProjectType",
            "modelAsString": false
          }
        },
        "Id":
        {
          "type": "string"
        }
      }
    },
    "ProcessingExceptionDto":
    {
      "description": "Stores information about exceptions thrown while processing failed queue items.",
      "type": "object",
      "properties":
      {
        "Reason":
        {
          "description": "The reason the processing failed.",
          "type": "string"
        },
        "Details":
        {
          "description": "Stores additional details about the exception.",
          "type": "string"
        },
        "Type":
        {
          "description": "The processing exception type, if any.",
          "enum":
          [
            "ApplicationException",
            "BusinessException"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ProcessingExceptionDtoType",
            "modelAsString": false
          }
        },
        "AssociatedImageFilePath":
        {
          "description": "A path on the robot running computer to an image file that stores relevant information about the exception - e.g. a system print screen.",
          "type": "string"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "Time when the exception occurred",
          "type": "string"
        }
      }
    },
    "ProcessSettingsDto":
    {
      "type": "object",
      "properties":
      {
        "ErrorRecordingEnabled":
        {
          "type": "boolean"
        },
        "Duration":
        {
          "format": "int32",
          "type": "integer"
        },
        "Frequency":
        {
          "format": "int32",
          "type": "integer"
        },
        "Quality":
        {
          "format": "int32",
          "type": "integer"
        },
        "AutoStartProcess":
        {
          "type": "boolean"
        },
        "AlwaysRunning":
        {
          "type": "boolean"
        }
      }
    },
    "QueueDefinitionDto":
    {
      "description": "The definition of a work queue. A work queue contains work items that are processed by robots.",
      "required":
      [
        "Name"
      ],
      "type": "object",
      "properties":
      {
        "Name":
        {
          "description": "A custom name for the queue.",
          "type": "string"
        },
        "Description":
        {
          "description": "Used to add additional information about a queue in order to better identify it.",
          "type": "string"
        },
        "MaxNumberOfRetries":
        {
          "format": "int32",
          "description": "An integer value representing the number of times an item of this queue can be retried if its processing fails with application exception and auto retry is on.",
          "type": "integer"
        },
        "AcceptAutomaticallyRetry":
        {
          "description": "States whether a robot should retry to process an item if, after processing, it failed with application exception.",
          "type": "boolean"
        },
        "EnforceUniqueReference":
        {
          "description": "States whether Item Reference field should be unique per Queue. Deleted and retried items are not checked against this rule.",
          "type": "boolean"
        },
        "SpecificDataJsonSchema":
        {
          "description": "JSON schema enforced onto the specific data field.",
          "type": "string"
        },
        "OutputDataJsonSchema":
        {
          "description": "JSON schema enforced onto the output data field.",
          "type": "string"
        },
        "AnalyticsDataJsonSchema":
        {
          "description": "JSON schema enforced onto the analytics data field.",
          "type": "string"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "The date and time when the queue was created.",
          "type": "string"
        },
        "ProcessScheduleId":
        {
          "format": "int64",
          "description": "The Id of the process schedule associated with the queue.",
          "type": "integer"
        },
        "SlaInMinutes":
        {
          "format": "int32",
          "description": "Queue item processing SLA on the QueueDefinition level.",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "RiskSlaInMinutes":
        {
          "format": "int32",
          "description": "Queue Item processing Risk SLA on the QueueDefinition level.",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "ReleaseId":
        {
          "format": "int64",
          "description": "The ProcessId Queue is associated with.",
          "type": "integer"
        },
        "IsProcessInCurrentFolder":
        {
          "description": "Flag to determine if the release is in the current folder",
          "type": "boolean"
        },
        "FoldersCount":
        {
          "format": "int32",
          "description": "Number of folders where the queue is shared.",
          "type": "integer"
        },
        "OrganizationUnitId":
        {
          "format": "int64",
          "description": "DEPRECATED. ",
          "type": "integer",
          "x-deprecated": true
        },
        "OrganizationUnitFullyQualifiedName":
        {
          "description": "DEPRECATED. ",
          "type": "string",
          "x-deprecated": true
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "QueueItemDataDto":
    {
      "description": "Defines the work item content.",
      "type": "object",
      "properties":
      {
        "Name":
        {
          "description": "The name of the queue into which the item will be added.",
          "type": "string"
        },
        "Priority":
        {
          "description": "Sets the processing importance for a given item.",
          "enum":
          [
            "High",
            "Normal",
            "Low"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "QueueItemDataDtoPriority",
            "modelAsString": false
          }
        },
        "SpecificContent":
        {
          "description": "A collection of key value pairs containing custom data configured in the Add Queue Item activity, in UiPath Studio.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "DeferDate":
        {
          "format": "date-time",
          "description": "The earliest date and time at which the item is available for processing. If empty the item can be processed as soon as possible.",
          "type": "string"
        },
        "DueDate":
        {
          "format": "date-time",
          "description": "The latest date and time at which the item should be processed. If empty the item can be processed at any given time.",
          "type": "string"
        },
        "RiskSlaDate":
        {
          "format": "date-time",
          "description": "The RiskSla date at time which is considered as risk zone for the item to be processed.",
          "type": "string"
        },
        "Reference":
        {
          "description": "An optional, user-specified value for queue item identification.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "Progress":
        {
          "description": "String field which is used to keep track of the business flow progress.",
          "type": "string"
        }
      }
    },
    "QueueItemDto":
    {
      "description": "Defines a piece of data that can be processed by a robot and the information associated with its processing status. Queue items are grouped in queues.",
      "type": "object",
      "properties":
      {
        "QueueDefinitionId":
        {
          "format": "int64",
          "description": "The Id of the parent queue.",
          "type": "integer"
        },
        "QueueDefinition":
        {
          "$ref": "#/definitions/QueueDefinitionDto"
        },
        "ProcessingException":
        {
          "$ref": "#/definitions/ProcessingExceptionDto"
        },
        "SpecificContent":
        {
          "description": "A collection of key value pairs containing custom data configured in the Add Queue Item activity, in UiPath Studio.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "Output":
        {
          "description": "A collection of key value pairs containing custom data resulted after successful processing.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "OutputData":
        {
          "description": "A JSON representation of the output data generated by the item's processing.",
          "type": "string"
        },
        "Analytics":
        {
          "description": "A collection of key value pairs containing custom data for further analytics processing.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "AnalyticsData":
        {
          "description": "A JSON representation of the analytics data generated by the item's processing.",
          "type": "string"
        },
        "Status":
        {
          "description": "The processing state of the item.",
          "enum":
          [
            "New",
            "InProgress",
            "Failed",
            "Successful",
            "Abandoned",
            "Retried",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "QueueItemDtoStatus",
            "modelAsString": false
          }
        },
        "ReviewStatus":
        {
          "description": "The review state of the item - applicable only for failed items.",
          "enum":
          [
            "None",
            "InReview",
            "Verified",
            "Retried"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "QueueItemDtoReviewStatus",
            "modelAsString": false
          }
        },
        "ReviewerUserId":
        {
          "format": "int64",
          "description": "The UserId of the Reviewer, if any.",
          "type": "integer"
        },
        "ReviewerUser":
        {
          "$ref": "#/definitions/SimpleUserDto"
        },
        "Key":
        {
          "format": "uuid",
          "description": "The unique identifier of a queue item.",
          "type": "string"
        },
        "Reference":
        {
          "description": "An optional, user-specified value for queue item identification.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "ProcessingExceptionType":
        {
          "description": "The processing exception. If the item has not been processed or has been processed successfully it will be null.",
          "enum":
          [
            "ApplicationException",
            "BusinessException"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "QueueItemDtoProcessingExceptionType",
            "modelAsString": false
          }
        },
        "DueDate":
        {
          "format": "date-time",
          "description": "The latest date and time at which the item should be processed. If empty the item can be processed at any given time.",
          "type": "string"
        },
        "RiskSlaDate":
        {
          "format": "date-time",
          "description": "The RiskSla date at time which is considered as risk zone for the item to be processed.",
          "type": "string"
        },
        "Priority":
        {
          "description": "Sets the processing importance for a given item.",
          "enum":
          [
            "High",
            "Normal",
            "Low"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "QueueItemDtoPriority",
            "modelAsString": false
          }
        },
        "Robot":
        {
          "$ref": "#/definitions/SimpleRobotDto"
        },
        "DeferDate":
        {
          "format": "date-time",
          "description": "The earliest date and time at which the item is available for processing. If empty the item can be processed as soon as possible.",
          "type": "string"
        },
        "StartProcessing":
        {
          "format": "date-time",
          "description": "The date and time at which the item processing started. This is null if the item was not processed.",
          "type": "string"
        },
        "EndProcessing":
        {
          "format": "date-time",
          "description": "The date and time at which the item processing ended. This is null if the item was not processed.",
          "type": "string"
        },
        "SecondsInPreviousAttempts":
        {
          "format": "int32",
          "description": "The number of seconds that the last failed processing lasted.",
          "type": "integer"
        },
        "AncestorId":
        {
          "format": "int64",
          "description": "The Id of an ancestor item connected to the current item.",
          "type": "integer"
        },
        "RetryNumber":
        {
          "format": "int32",
          "description": "The number of times this work item has been processed. This can be higher than 0 only if MaxRetried number is set and the item processing failed at least once with ApplicationException.",
          "type": "integer"
        },
        "SpecificData":
        {
          "description": "A JSON representation of the specific content.",
          "type": "string"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "The date and time when the item was created.",
          "type": "string"
        },
        "Progress":
        {
          "description": "String field which is used to keep track of the business flow progress.",
          "type": "string"
        },
        "RowVersion":
        {
          "format": "byte",
          "description": "Identifier used for optimistic concurrency, so Orchestrator can figure whether data is out of date or not.",
          "type": "string"
        },
        "OrganizationUnitId":
        {
          "format": "int64",
          "description": "DEPRECATED. ",
          "type": "integer",
          "x-deprecated": true
        },
        "OrganizationUnitFullyQualifiedName":
        {
          "description": "DEPRECATED. ",
          "type": "string",
          "x-deprecated": true
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "QueuesAddQueueItemParameters":
    {
      "type": "object",
      "properties":
      {
        "itemData":
        {
          "$ref": "#/definitions/QueueItemDataDto"
        }
      }
    },
    "ReleaseDto":
    {
      "required":
      [
        "Name",
        "ProcessKey",
        "ProcessVersion"
      ],
      "type": "object",
      "properties":
      {
        "Key":
        {
          "description": "A unique identifier associated to each release.",
          "type": "string"
        },
        "ProcessKey":
        {
          "description": "The unique identifier of the process associated with the release.",
          "type": "string"
        },
        "ProcessVersion":
        {
          "description": "The version of the process associated with the release.",
          "type": "string"
        },
        "IsLatestVersion":
        {
          "description": "States whether the version of process associated with the release is latest or not.",
          "type": "boolean"
        },
        "IsProcessDeleted":
        {
          "description": "States whether the process associated with the release is deleted or not.",
          "type": "boolean"
        },
        "Description":
        {
          "description": "Used to add additional information about a release in order to better identify it.",
          "type": "string"
        },
        "Name":
        {
          "description": "A custom name of the release. The default name format is ProcessName_EnvironmentName.",
          "type": "string"
        },
        "EnvironmentId":
        {
          "format": "int64",
          "description": "The Id of the environment associated with the release.",
          "type": "integer"
        },
        "EnvironmentName":
        {
          "description": "The name of the environment associated with the release.",
          "type": "string"
        },
        "Environment":
        {
          "$ref": "#/definitions/EnvironmentDto"
        },
        "EntryPointId":
        {
          "format": "int64",
          "type": "integer"
        },
        "EntryPoint":
        {
          "$ref": "#/definitions/EntryPointDto"
        },
        "InputArguments":
        {
          "description": "Input parameters in JSON format to be passed as default values to job execution.",
          "maxLength": 10000,
          "type": "string"
        },
        "ProcessType":
        {
          "enum":
          [
            "Undefined",
            "Process",
            "TestAutomationProcess"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ReleaseDtoProcessType",
            "modelAsString": false
          }
        },
        "SupportsMultipleEntryPoints":
        {
          "type": "boolean"
        },
        "RequiresUserInteraction":
        {
          "type": "boolean"
        },
        "CurrentVersion":
        {
          "$ref": "#/definitions/ReleaseVersionDto"
        },
        "ReleaseVersions":
        {
          "description": "The collection of release versions that current release had over time.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/ReleaseVersionDto"
          }
        },
        "Arguments":
        {
          "$ref": "#/definitions/ArgumentMetadata"
        },
        "ProcessSettings":
        {
          "$ref": "#/definitions/ProcessSettingsDto"
        },
        "AutoUpdate":
        {
          "type": "boolean"
        },
        "FeedId":
        {
          "format": "uuid",
          "type": "string"
        },
        "JobPriority":
        {
          "description": "The execution priority. If null, it defaults to Normal.",
          "enum":
          [
            "Low",
            "Normal",
            "High"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ReleaseDtoJobPriority",
            "modelAsString": false
          }
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "Creation time of this release.",
          "type": "string"
        },
        "OrganizationUnitId":
        {
          "format": "int64",
          "description": "Id of the folder this release is part of.",
          "type": "integer"
        },
        "OrganizationUnitFullyQualifiedName":
        {
          "description": "Fully qualified name of the folder this release is part of.",
          "type": "string"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ReleaseVersionDto":
    {
      "description": "Stores data about a version of the various versions of the process associated with a certain release. If a certain version is associated on and off with a release a new ReleaseVersion object is created for each association.",
      "required":
      [
        "ReleaseId",
        "VersionNumber"
      ],
      "type": "object",
      "properties":
      {
        "ReleaseId":
        {
          "format": "int64",
          "description": "The Id of the parent release.",
          "type": "integer"
        },
        "VersionNumber":
        {
          "description": "The version of process associated with the release.",
          "maxLength": 50,
          "type": "string"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "The date and time when the version was associated with the release.",
          "type": "string"
        },
        "ReleaseName":
        {
          "description": "The name of the process associated with the release.",
          "type": "string"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "RobotUserDto":
    {
      "required":
      [
        "RobotId"
      ],
      "type": "object",
      "properties":
      {
        "UserName":
        {
          "description": "The name of the user.",
          "type": "string"
        },
        "RobotId":
        {
          "format": "int64",
          "description": "The Id of the Robot.",
          "type": "integer"
        },
        "HasTriggers":
        {
          "description": "Whether the machine robot has triggers defined or not.",
          "type": "boolean"
        }
      }
    },
    "SimpleReleaseDto":
    {
      "description": "Entity derived from BaseReleaseDto. It shares all the properties of the base entity except the navigation properties.",
      "required":
      [
        "Name",
        "ProcessKey",
        "ProcessVersion"
      ],
      "type": "object",
      "properties":
      {
        "Key":
        {
          "description": "A unique identifier associated to each release.",
          "type": "string"
        },
        "ProcessKey":
        {
          "description": "The unique identifier of the process associated with the release.",
          "type": "string"
        },
        "ProcessVersion":
        {
          "description": "The version of the process associated with the release.",
          "type": "string"
        },
        "IsLatestVersion":
        {
          "description": "States whether the version of process associated with the release is latest or not.",
          "type": "boolean"
        },
        "IsProcessDeleted":
        {
          "description": "States whether the process associated with the release is deleted or not.",
          "type": "boolean"
        },
        "Description":
        {
          "description": "Used to add additional information about a release in order to better identify it.",
          "type": "string"
        },
        "Name":
        {
          "description": "A custom name of the release. The default name format is ProcessName_EnvironmentName.",
          "type": "string"
        },
        "EnvironmentId":
        {
          "format": "int64",
          "description": "The Id of the environment associated with the release.",
          "type": "integer"
        },
        "EnvironmentName":
        {
          "description": "The name of the environment associated with the release.",
          "type": "string"
        },
        "Environment":
        {
          "$ref": "#/definitions/EnvironmentDto"
        },
        "EntryPointId":
        {
          "format": "int64",
          "type": "integer"
        },
        "EntryPoint":
        {
          "$ref": "#/definitions/EntryPointDto"
        },
        "InputArguments":
        {
          "description": "Input parameters in JSON format to be passed as default values to job execution.",
          "maxLength": 10000,
          "type": "string"
        },
        "ProcessType":
        {
          "enum":
          [
            "Undefined",
            "Process",
            "TestAutomationProcess"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ReleaseDtoProcessType",
            "modelAsString": false
          }
        },
        "SupportsMultipleEntryPoints":
        {
          "type": "boolean"
        },
        "RequiresUserInteraction":
        {
          "type": "boolean"
        },
        "CurrentVersion":
        {
          "$ref": "#/definitions/ReleaseVersionDto"
        },
        "ReleaseVersions":
        {
          "description": "The collection of release versions that current release had over time.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/ReleaseVersionDto"
          }
        },
        "Arguments":
        {
          "$ref": "#/definitions/ArgumentMetadata"
        },
        "ProcessSettings":
        {
          "$ref": "#/definitions/ProcessSettingsDto"
        },
        "AutoUpdate":
        {
          "type": "boolean"
        },
        "FeedId":
        {
          "format": "uuid",
          "type": "string"
        },
        "JobPriority":
        {
          "description": "The execution priority. If null, it defaults to Normal.",
          "enum":
          [
            "Low",
            "Normal",
            "High"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "ReleaseDtoJobPriority",
            "modelAsString": false
          }
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "Creation time of this release.",
          "type": "string"
        },
        "OrganizationUnitId":
        {
          "format": "int64",
          "description": "Id of the folder this release is part of.",
          "type": "integer"
        },
        "OrganizationUnitFullyQualifiedName":
        {
          "description": "Fully qualified name of the folder this release is part of.",
          "type": "string"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "SimpleRobotDto":
    {
      "description": "Entity derived from RobotDto. Is shares all the properties of the base entity except the navigation properties.",
      "required":
      [
        "HostingType",
        "Name",
        "Type",
        "Username"
      ],
      "type": "object",
      "properties":
      {
        "LicenseKey":
        {
          "description": "The key is automatically generated from the server for the Robot machine. For the robot to work, the same key must exist on both the robot and Orchestrator.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "MachineName":
        {
          "description": "The name of the machine a Robot is hosted on.",
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "MachineId":
        {
          "format": "int64",
          "description": "The Id of the machine a Robot is hosted on",
          "type": "integer"
        },
        "Name":
        {
          "description": "A custom name for the robot.",
          "maxLength": 19,
          "minLength": 0,
          "type": "string"
        },
        "Username":
        {
          "description": "The machine username. If the user is under a domain, you are required to also specify it in a DOMAIN\\username format. Note: You must use short domain names, such as desktop\\administrator and NOT desktop.local/administrator.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExternalName":
        {
          "description": "Contains the value of the key in the external store used to store the password.",
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "Description":
        {
          "description": "Used to add additional information about a robot in order to better identify it.",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Type":
        {
          "description": "The Robot type.",
          "enum":
          [
            "NonProduction",
            "Attended",
            "Unattended",
            "Studio",
            "RpaDeveloper",
            "Development",
            "StudioX",
            "CitizenDeveloper",
            "Headless",
            "RpaDeveloperPro",
            "StudioPro",
            "TestAutomation"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "RobotDtoType",
            "modelAsString": false
          }
        },
        "HostingType":
        {
          "description": "The Robot hosting type (Standard / Floating).",
          "enum":
          [
            "Standard",
            "Floating"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "RobotDtoHostingType",
            "modelAsString": false
          }
        },
        "ProvisionType":
        {
          "description": "The Robot provision type.",
          "enum":
          [
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "RobotDtoProvisionType",
            "modelAsString": false
          }
        },
        "Password":
        {
          "description": "The Windows password associated with the machine username.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "CredentialStoreId":
        {
          "format": "int64",
          "description": "The Credential Store used to store the password.",
          "type": "integer"
        },
        "UserId":
        {
          "format": "int64",
          "description": "The associated user's Id.",
          "type": "integer"
        },
        "Enabled":
        {
          "description": "Specificies the state of the Robot (enabled/disabled) - a disabled robot cannot connect to Orchestrator",
          "type": "boolean"
        },
        "CredentialType":
        {
          "description": "The robot credentials type (Default/ SmartCard)",
          "enum":
          [
            "Default",
            "SmartCard",
            "NCipher",
            "SafeNet"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "RobotDtoCredentialType",
            "modelAsString": false
          }
        },
        "Environments":
        {
          "description": "The collection of environments the robot is part of.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/EnvironmentDto"
          }
        },
        "RobotEnvironments":
        {
          "description": "The comma separated textual representation of environment names the robot is part of.",
          "type": "string"
        },
        "ExecutionSettings":
        {
          "description": "A collection of key value pairs containing execution settings for this robot.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "IsExternalLicensed":
        {
          "description": "Flag to indicate if the robot uses an external license",
          "type": "boolean"
        },
        "LimitConcurrentExecution":
        {
          "description": "Specifies if the robot can be used concurrently on multiple machines",
          "type": "boolean"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "SimpleUserDto":
    {
      "description": "Entity derived from UserDto. Is shares all the properties of the base entity except the navigation properties.",
      "type": "object",
      "properties":
      {
        "Name":
        {
          "description": "The name of the person for which the user is created.",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "Surname":
        {
          "description": "The surname of the person for which the user is created.",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "UserName":
        {
          "description": "The name used to login to Orchestrator.",
          "type": "string"
        },
        "Domain":
        {
          "description": "The domain from which the user is imported",
          "type": "string"
        },
        "DirectoryIdentifier":
        {
          "description": "The directory identifier from which the user is imported",
          "type": "string"
        },
        "FullName":
        {
          "description": "The full name of the person constructed with the format Name Surname.",
          "type": "string"
        },
        "EmailAddress":
        {
          "format": "email",
          "description": "The e-mail address associated with the user.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "IsEmailConfirmed":
        {
          "description": "States if the email address is valid or not.",
          "type": "boolean"
        },
        "LastLoginTime":
        {
          "format": "date-time",
          "description": "The date and time when the user last logged in, or null if the user never logged in.",
          "type": "string"
        },
        "IsActive":
        {
          "description": "States if the user is active or not. An inactive user cannot login to Orchestrator.",
          "type": "boolean"
        },
        "CreationTime":
        {
          "format": "date-time",
          "description": "The date and time when the user was created.",
          "type": "string"
        },
        "AuthenticationSource":
        {
          "description": "The source which authenticated this user.",
          "type": "string"
        },
        "Password":
        {
          "description": "The password used during application login.",
          "type": "string"
        },
        "IsExternalLicensed":
        {
          "type": "boolean"
        },
        "UserRoles":
        {
          "description": "The collection of roles associated with the user.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/UserRoleDto"
          }
        },
        "RolesList":
        {
          "description": "The collection of role names associated with the user.",
          "type": "array",
          "items":
          {
            "type": "string"
          }
        },
        "LoginProviders":
        {
          "description": "The collection of entities that can authenticate the user.",
          "type": "array",
          "items":
          {
            "type": "string"
          }
        },
        "OrganizationUnits":
        {
          "description": "The collection of organization units associated with the user.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/OrganizationUnitDto"
          }
        },
        "TenantId":
        {
          "format": "int32",
          "description": "The id of the tenant owning the user.",
          "type": "integer"
        },
        "TenancyName":
        {
          "description": "The name of the tenant owning the user.",
          "type": "string"
        },
        "TenantDisplayName":
        {
          "description": "The display name of the tenant owning the user.",
          "type": "string"
        },
        "TenantKey":
        {
          "description": "The key of the tenant owning the user.",
          "type": "string"
        },
        "Type":
        {
          "description": "The user type.",
          "enum":
          [
            "User",
            "Robot",
            "DirectoryUser",
            "DirectoryGroup"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "UserDtoType",
            "modelAsString": false
          }
        },
        "ProvisionType":
        {
          "description": "The user type.",
          "enum":
          [
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "UserDtoProvisionType",
            "modelAsString": false
          }
        },
        "LicenseType":
        {
          "description": "The user's license type.",
          "enum":
          [
            "NonProduction",
            "Attended",
            "Unattended",
            "Studio",
            "RpaDeveloper",
            "Development",
            "StudioX",
            "CitizenDeveloper",
            "Headless",
            "RpaDeveloperPro",
            "StudioPro",
            "TestAutomation"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "UserDtoLicenseType",
            "modelAsString": false
          }
        },
        "RobotProvision":
        {
          "$ref": "#/definitions/AttendedRobotDto"
        },
        "UnattendedRobot":
        {
          "$ref": "#/definitions/UnattendedRobotDto"
        },
        "NotificationSubscription":
        {
          "$ref": "#/definitions/UserNotificationSubscription"
        },
        "Key":
        {
          "format": "uuid",
          "description": "Unique key for a user",
          "type": "string"
        },
        "MayHaveUserSession":
        {
          "description": "Specifies whether this user is allowed to have a User session (default: true)",
          "type": "boolean"
        },
        "MayHaveRobotSession":
        {
          "description": "Specifies whether this user is allowed to have an Attended Robot attached (default: true)",
          "type": "boolean"
        },
        "MayHaveUnattendedSession":
        {
          "description": "Specifies whether this user is allowed to have an Unattended Robot attached (default: false)",
          "type": "boolean"
        },
        "BypassBasicAuthRestriction":
        {
          "description": "Specifies whether this user bypasses the \"Auth.RestrictBasicAuthentication\" application setting (default: false)",
          "type": "boolean"
        },
        "MayHavePersonalWorkspace":
        {
          "description": "Specifies whether this user is allowed to have a Personal Workspace",
          "type": "boolean"
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "StartJobDto":
    {
      "type": "object",
      "properties":
      {
        "startInfo":
        {
          "description": "The Start Process transfers information from client to the server during JobsController.StartJobs custom action.",
          "required":
          [
            "ReleaseKey",
            "Strategy"
          ],
          "type": "object",
          "properties":
          {
            "ReleaseKey":
            {
              "description": "Select process you want to run.",
              "type": "string",
              "x-ms-dynamic-values":
              {
                "operationId": "GetReleases",
                "value-path": "Key",
                "value-collection": "value",
                "value-title": "Name",
                "parameters":
                {
                  "X-UIPATH-OrganizationUnitId":
                  {
                    "parameter": "X-UIPATH-OrganizationUnitId"
                  }
                }
              },
              "x-ms-summary": "Process Name"
            },
            "Strategy":
            {
              "description": "States which robots from the environment are being run by the process.",
              "type": "string",
              "default": "ModernJobsCount",
              "x-ms-visibility": "internal"
            },
            "JobsCount":
            {
              "format": "int32",
              "description": "Number of pending jobs to be created in the environment, for the current process. This number must be greater than 0 only if the start strategy is JobsCount.",
              "type": "integer"
            },
            "Source":
            {
              "description": "The Source of the job starting the current process.",
              "enum":
              [
                "Manual",
                "Schedule",
                "Queue",
                "StudioWeb"
              ],
              "type": "string",
              "x-ms-enum":
              {
                "name": "StartProcessDtoSource",
                "modelAsString": false
              }
            },
            "JobPriority":
            {
              "description": "Execution priority. If null, defaults to the JobPriority of its release.",
              "enum":
              [
                "Low",
                "Normal",
                "High"
              ],
              "type": "string",
              "x-ms-enum":
              {
                "name": "StartProcessDtoJobPriority",
                "modelAsString": false
              }
            },
            "RuntimeType":
            {
              "enum":
              [
                "NonProduction",
                "Attended",
                "Unattended",
                "Studio",
                "RpaDeveloper",
                "Development",
                "StudioX",
                "CitizenDeveloper",
                "Headless",
                "RpaDeveloperPro",
                "StudioPro",
                "TestAutomation"
              ],
              "type": "string",
              "x-ms-enum":
              {
                "name": "StartProcessDtoRuntimeType",
                "modelAsString": false
              }
            },
            "InputArguments":
            {
              "description": "Input parameters in JSON format to be passed to job execution.",
              "maxLength": 10000,
              "type": "string"
            },
            "Reference":
            {
              "description": "Optional user-specified reference for jobs",
              "maxLength": 128,
              "type": "string"
            }
          }
        }
      },
      "required":
      [
        "startInfo"
      ]
    },
    "StartProcessDto":
    {
      "description": "The Start Process transfers information from client to the server during JobsController.StartJobs custom action.",
      "required":
      [
        "ReleaseKey"
      ],
      "type": "object",
      "properties":
      {
        "ReleaseKey":
        {
          "description": "The unique key of the release associated with the process.",
          "type": "string"
        },
        "Strategy":
        {
          "description": "States which robots from the environment are being run by the process.",
          "enum":
          [
            "All",
            "Specific",
            "RobotCount",
            "JobsCount",
            "ModernJobsCount"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "StartProcessDtoStrategy",
            "modelAsString": false
          }
        },
        "RobotIds":
        {
          "description": "The collection of ids of specific robots selected to be run by the current process. This collection must be empty only if the start strategy is not Specific.",
          "type": "array",
          "items":
          {
            "format": "int64",
            "type": "integer"
          }
        },
        "MachineSessionIds":
        {
          "description": "The machines used for running the job. If empty, the job will start on the first available machine",
          "type": "array",
          "items":
          {
            "format": "int64",
            "type": "integer"
          }
        },
        "NoOfRobots":
        {
          "format": "int32",
          "description": "DEPRECATED. Number of pending jobs to be created in the environment, for the current process. This number must be greater than 0 only if the start strategy is RobotCount.",
          "type": "integer",
          "x-deprecated": true
        },
        "JobsCount":
        {
          "format": "int32",
          "description": "Number of pending jobs to be created in the environment, for the current process. This number must be greater than 0 only if the start strategy is JobsCount.",
          "type": "integer"
        },
        "Source":
        {
          "description": "The Source of the job starting the current process.",
          "enum":
          [
            "Manual",
            "Schedule",
            "Queue",
            "StudioWeb"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "StartProcessDtoSource",
            "modelAsString": false
          }
        },
        "JobPriority":
        {
          "description": "Execution priority. If null, defaults to the JobPriority of its release.",
          "enum":
          [
            "Low",
            "Normal",
            "High"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "StartProcessDtoJobPriority",
            "modelAsString": false
          }
        },
        "RuntimeType":
        {
          "enum":
          [
            "NonProduction",
            "Attended",
            "Unattended",
            "Studio",
            "RpaDeveloper",
            "Development",
            "StudioX",
            "CitizenDeveloper",
            "Headless",
            "RpaDeveloperPro",
            "StudioPro",
            "TestAutomation"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "StartProcessDtoRuntimeType",
            "modelAsString": false
          }
        },
        "InputArguments":
        {
          "description": "Input parameters in JSON format to be passed to job execution.",
          "maxLength": 10000,
          "type": "string"
        },
        "Reference":
        {
          "description": "Optional user-specified reference for jobs",
          "maxLength": 128,
          "type": "string"
        },
        "MachineRobots":
        {
          "description": "The machine-robot mappings used for running the job.",
          "type": "array",
          "items":
          {
            "$ref": "#/definitions/MachineRobotDto"
          }
        }
      }
    },
    "UnattendedRobotDto":
    {
      "required":
      [
        "UserName"
      ],
      "type": "object",
      "properties":
      {
        "UserName":
        {
          "description": "The username used to authenticate on the Host Machine.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Password":
        {
          "description": "The password used to authenticate on the Host Machine.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "CredentialStoreId":
        {
          "format": "int64",
          "description": "The credential store used to store the password.",
          "type": "integer"
        },
        "CredentialType":
        {
          "description": "The robot credentials type (Default/ SmartCard)",
          "enum":
          [
            "Default",
            "SmartCard",
            "NCipher",
            "SafeNet"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "UnattendedRobotDtoCredentialType",
            "modelAsString": false
          }
        },
        "CredentialExternalName":
        {
          "description": "Contains the value of the key in the external store used to store the password.",
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "ExecutionSettings":
        {
          "description": "An object containing execution settings for the Robot.",
          "type": "object",
          "additionalProperties":
          {
          }
        },
        "LimitConcurrentExecution":
        {
          "description": "Specifies if the robot can be used concurrently on multiple machines",
          "type": "boolean"
        },
        "RobotId":
        {
          "format": "int64",
          "description": "The actual Id of the provisioned Robot.",
          "type": "integer"
        },
        "MachineMappingsCount":
        {
          "format": "int32",
          "description": "Number of assigned machine mappings.",
          "type": "integer"
        }
      }
    },
    "UserNotificationSubscription":
    {
      "type": "object",
      "properties":
      {
        "Queues":
        {
          "type": "boolean"
        },
        "Robots":
        {
          "type": "boolean"
        },
        "Jobs":
        {
          "type": "boolean"
        },
        "Schedules":
        {
          "type": "boolean"
        },
        "Tasks":
        {
          "type": "boolean"
        },
        "QueueItems":
        {
          "type": "boolean"
        },
        "Insights":
        {
          "type": "boolean"
        },
        "CloudRobots":
        {
          "type": "boolean"
        }
      }
    },
    "UserRoleDto":
    {
      "description": "Stores information about the association between a user and a role.",
      "type": "object",
      "properties":
      {
        "UserId":
        {
          "format": "int64",
          "description": "The Id of the associated user.",
          "type": "integer"
        },
        "RoleId":
        {
          "format": "int32",
          "description": "The Id of the associated role.",
          "type": "integer"
        },
        "UserName":
        {
          "description": "The name of the associated user",
          "type": "string"
        },
        "RoleName":
        {
          "description": "The name of the associated role",
          "type": "string"
        },
        "RoleType":
        {
          "enum":
          [
            "Mixed",
            "Tenant",
            "Folder"
          ],
          "type": "string",
          "x-ms-enum":
          {
            "name": "UserRoleDtoRoleType",
            "modelAsString": false
          }
        },
        "Id":
        {
          "format": "int64",
          "type": "integer"
        }
      }
    }
  }
}