{
  "swagger": "2.0",
  "info": {
    "title": "Kanbanize",
    "description": "The Kanbanize connector allows you to create, update or move cards inside your Kanban boards, as well as to retrieve information about your boards and their structure. Other supported functions are adding comments or logging time on the cards.",
    "version": "1.0",
	"contact": {
	  "name":"Kanbanize Support",
	  "url":"https://kanbanize.com/customer-support",
	  "email":"support@kanbanize.com"
	}
  },
  "host": "subdomain.kanbanize.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/index.php/api/kanbanize/move_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Move Card",
        "description": "Move a card (Task or Initiative, if possible) to a column.",
        "operationId": "MoveCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "taskid"
                },
                "boardid": {
                  "type": "string",
                  "description": "boardid",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "column": {
                  "type": "string",
                  "description": "column",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceedingreason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/api/v2/loggedTime": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Log Time",
        "operationId": "LogTime",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_id": {
                  "type": "string",
                  "description": "card_id"
                },
                "time": {
                  "type": "string",
                  "description": "time"
                },
                "comment": {
                  "type": "string",
                  "description": "comment"
                }
              }
            }
          }
        ],
        "description": "Log time to a card. The time is logged in minutes."
      }
    },
    "/api/v2/boards": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "board_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "board_id"
                      },
                      "workspace_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workspace_id"
                      },
                      "is_archived": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_archived"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Boards",
        "operationId": "GetBoards",
        "parameters": [],
        "description": "Get all boards from the account."
      }
    },
    "/index.php/api/kanbanize/create_new_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Card",
        "description": "Create a card in a board of your chocie",
        "operationId": "CreateCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "boardid",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "priority": {
                  "type": "string",
                  "description": "priority"
                },
                "assignee": {
                  "type": "string",
                  "description": "assignee"
                },
                "color": {
                  "type": "string",
                  "description": "color"
                },
                "size": {
                  "type": "string",
                  "description": "size"
                },
                "tags": {
                  "type": "string",
                  "description": "tags"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "extlink"
                },
                "type": {
                  "type": "string",
                  "description": "type",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "template": {
                  "type": "string",
                  "description": "template"
                },
                "column": {
                  "type": "string",
                  "description": "column",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceedingreason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_subtask/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Subtask",
        "description": "Creates a new subtask of a card or initiative",
        "operationId": "CreateSubtask",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskparent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "taskparent"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "assignee": {
                  "type": "string",
                  "description": "assignee"
                }
              }
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_comment/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Comment",
        "description": "Adds a comment to a card or initiative.",
        "operationId": "AddComment",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "taskid"
                },
                "comment": {
                  "type": "string",
                  "description": "comment"
                }
              }
            }
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/columns": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "column_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "section": {
                        "type": "integer",
                        "format": "int32",
                        "description": "section"
                      },
                      "parent_column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_column_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "limit"
                      },
                      "cards_per_row": {
                        "type": "integer",
                        "format": "int32",
                        "description": "cards_per_row"
                      },
                      "flow_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "flow_type"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Board Columns",
        "operationId": "GetColumns",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the columns for.",
            "x-ms-summary": "Board ID"
          }
        ],
        "description": "Gets all columns for a specified board."
      }
    },
    "/api/v2/boards/{board_id}/lanes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "lane_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "parent_lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_lane_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {
              "type": "string"
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Lanes",
        "operationId": "GetLanes",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the lanes for.",
            "x-ms-summary": "Board ID"
          }
        ],
        "description": "Gets all lanes for a specified board."
      }
    },
    "/api/v2/cardTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type_id"
                      },
                      "icon_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_type"
                      },
                      "icon_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "card_color_sync": {
                        "type": "integer",
                        "format": "int32",
                        "description": "card_color_sync"
                      },
                      "all_properties_are_locked": {
                        "type": "integer",
                        "format": "int32",
                        "description": "all_properties_are_locked"
                      },
                      "availability": {
                        "type": "integer",
                        "format": "int32",
                        "description": "availability"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Types",
        "operationId": "GetTypes",
        "parameters": [],
        "description": "Gets all types within the account."
      }
    },
    "/index.php/api/kanbanize/edit_task/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Card",
        "description": "Update the properties of a card (Title, Description, Priority, etc.)",
        "operationId": "UpdateCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Accept",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "boardid",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "taskid"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "priority": {
                  "type": "string",
                  "description": "priority",
                  "title": "",
                  "enum": [
                    "Low",
                    "Average",
                    "High",
                    "Critical"
                  ]
                },
                "assignee": {
                  "type": "string",
                  "description": "assignee"
                },
                "color": {
                  "type": "string",
                  "description": "color"
                },
                "size": {
                  "type": "integer",
                  "format": "int32",
                  "description": "size"
                },
                "tags": {
                  "type": "string",
                  "description": "tags"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "extlink"
                },
                "type": {
                  "type": "string",
                  "description": "type",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              }
            }
          }
        ]
      }
    }
  },
  "x-ms-connector-metadata": [
	{
	  "propertyName": "Website",
      "propertyValue": "https://kanbanize.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://kanbanize.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Business Management"
    }
  ],  
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "apikey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}