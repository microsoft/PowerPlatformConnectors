{
  "swagger": "2.0",
  "info": {
    "title": "Kanbanize",
    "description": "The Kanbanize connector allows you to create, update or move cards inside your Kanban boards, as well as to retrieve information about your boards and their structure. Other supported functions are adding comments or logging time on the cards.",
    "version": "1.5",
    "contact": {
      "name": "Kanbanize Support",
      "url": "https://kanbanize.com/customer-support",
      "email": "support@kanbanize.com"
    }
  },
  "host": "subdomain.kanbanize.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/index.php/api/kanbanize/move_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Move Card",
        "description": "Move a card (Task or Initiative, if possible) to a column.",
        "operationId": "MoveCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                },
                "boardid": {
                  "type": "string",
                  "description": "board id",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "column": {
                  "type": "string",
                  "description": "column name",
                  "title": "Column",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane name",
                  "title": "Lane",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "card position in the column",
                  "title": "Position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceeding reason",
                  "title": "Exceeding reason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/api/v2/loggedTime": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Log Time (number of seconds)",
        "operationId": "LogTime",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_id": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                },
                "time": {
                  "type": "string",
                  "description": "time (in seconds)",
                  "title": "Time"
                },
                "comment": {
                  "type": "string",
                  "description": "comment",
                  "title": "Comment"
                }
              }
            }
          }
        ],
        "description": "Log time to a card. The time is logged in seconds."
      }
    },
    "/api/v2/boards": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "board_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "board_id"
                      },
                      "workspace_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workspace_id"
                      },
                      "is_archived": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_archived"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Boards",
        "operationId": "GetBoards",
        "parameters": [],
        "description": "Get all boards from the account."
      }
    },
    "/index.php/api/kanbanize/create_new_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Card",
        "description": "Create a card in a board of your choice.",
        "operationId": "CreateCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "card details",
                  "title": "Description"
                },
                "priority": {
                  "type": "string",
                  "description": "possible values: Low, Average, High, Critical",
                  "title": "Priority"
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                },
                "color": {
                  "type": "string",
                  "description": "hex color code like this #F37325",
                  "title": "Color"
                },
                "size": {
                  "type": "string",
                  "description": "size",
                  "title": "Size"
                },
                "tags": {
                  "type": "string",
                  "description": "multiple tags should be separated with space",
                  "title": "Tags"
                },
                "cfields": {
                  "type": "string",
                  "description": "JSON formatted list of custom fields and their values {\"field1\":\"value1\",\"field2\":\"value2\"}",
                  "title": "Custom Fields"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline date in this format YYYY-MM-DD",
                  "title": "Deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "external link",
                  "title": "External Link"
                },
                "type": {
                  "type": "string",
                  "description": "the name of the type you want to set",
                  "title": "Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "template": {
                  "type": "string",
                  "description": "the name of the card template you want to apply",
                  "title": "Card Template"
                },
                "column": {
                  "type": "string",
                  "description": "exact column name",
                  "title": "Column name",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane name",
                  "title": "Lane",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "card position in the column",
                  "title": "Position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceeding reason",
                  "title": "Exceeding reason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_subtask/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Subtask",
        "description": "Creates a new subtask of a card or initiative.",
        "operationId": "CreateSubtask",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskparent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the parent card",
                  "title": "Parent card ID"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                }
              }
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_comment/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Comment",
        "description": "Adds a comment to a card or initiative.",
        "operationId": "AddComment",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                },
                "comment": {
                  "type": "string",
                  "description": "comment",
                  "title": "Comment"
                }
              }
            }
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/columns": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "column_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "section": {
                        "type": "integer",
                        "format": "int32",
                        "description": "section"
                      },
                      "parent_column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_column_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "limit"
                      },
                      "cards_per_row": {
                        "type": "integer",
                        "format": "int32",
                        "description": "cards_per_row"
                      },
                      "flow_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "flow_type"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Board Columns",
        "operationId": "GetColumns",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the columns for.",
            "x-ms-summary": "Board ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Gets all columns for a specified board."
      }
    },
    "/api/v2/boards/{board_id}/lanes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "lane_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "parent_lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_lane_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {
              "type": "string"
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Lanes",
        "operationId": "GetLanes",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the lanes for.",
            "x-ms-summary": "Board ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "Gets all lanes for a specified board."
      }
    },
    "/api/v2/cardTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type_id"
                      },
                      "icon_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_type"
                      },
                      "icon_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "card_color_sync": {
                        "type": "integer",
                        "format": "int32",
                        "description": "card_color_sync"
                      },
                      "all_properties_are_locked": {
                        "type": "integer",
                        "format": "int32",
                        "description": "all_properties_are_locked"
                      },
                      "availability": {
                        "type": "integer",
                        "format": "int32",
                        "description": "availability"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Types",
        "operationId": "GetTypes",
        "parameters": [],
        "description": "Gets all types within the account."
      }
    },
    "/index.php/api/kanbanize/edit_task/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Card",
        "description": "Update the properties of a card (Title, Description, Priority, etc.)",
        "operationId": "UpdateCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Accept",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "card id",
                  "title": "Card ID"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "card details",
                  "title": "Description"
                },
                "priority": {
                  "type": "string",
                  "description": "",
                  "title": "Priority",
                  "enum": [
                    "Low",
                    "Average",
                    "High",
                    "Critical"
                  ]
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                },
                "color": {
                  "type": "string",
                  "description": "hex color code like this #F37325",
                  "title": "Color"
                },
                "size": {
                  "type": "integer",
                  "format": "int32",
                  "description": "size",
                  "title": "Size"
                },
                "tags": {
                  "type": "string",
                  "description": "multiple tags should be separated with space",
                  "title": "Tags"
                },
                "cfields": {
                  "type": "string",
                  "description": "JSON formatted list of custom fields and their values {\"field1\":\"value1\",\"field2\":\"value2\"}",
                  "title": "Custom Fields"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline date in this format YYYY-MM-DD",
                  "title": "Deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "external link",
                  "title": "External Link"
                },
                "type": {
                  "type": "string",
                  "description": "the name of the type you want to set",
                  "title": "Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/delete_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Card",
        "description": "Delete a card.",
        "operationId": "DeleteCard",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                }
              },
              "required": [
                "boardid",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/block_task/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Block or Unblock Card",
        "description": "Block, unblock or edit block reasons for a card.",
        "operationId": "BlockUnblockCard",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "event": {
                  "type": "string",
                  "description": "",
                  "title": "Event Type",
                  "x-ms-visibility": "important",
                  "enum": [
                    "block",
                    "unblock",
                    "editblock"
                  ],
                  "x-ms-enum-values": [
                    {
                      "displayName": "Block",
                      "value": "block"
                    },
                    {
                      "displayName": "Unblock",
                      "value": "unblock"
                    },
                    {
                      "displayName": "Edit reason",
                      "value": "editblock"
                    }
                  ]
                },
                "blockreason": {
                  "type": "string",
                  "description": "reason for block",
                  "title": "Block Reason",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "boardid",
                "event",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/archive_task": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Archive Card",
        "description": "Move card to archive. The card must be not be blocked and it must be in column Done or in column Archive.",
        "operationId": "ArchiveCard",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "cardid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "version": {
                  "type": "string",
                  "description": "version",
                  "title": "Version",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "cardid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/get_task_details/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "taskid"
                },
                "boardid": {
                  "type": "string",
                  "description": "boardid"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "type": {
                  "type": "string",
                  "description": "type"
                },
                "assignee": {
                  "type": "string",
                  "description": "assignee"
                },
                "subtasks": {
                  "type": "string",
                  "description": "subtasks"
                },
                "subtaskscomplete": {
                  "type": "string",
                  "description": "subtaskscomplete"
                },
                "color": {
                  "type": "string",
                  "description": "color"
                },
                "priority": {
                  "type": "string",
                  "description": "priority"
                },
                "size": {
                  "type": "string",
                  "description": "size"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline"
                },
                "deadlineoriginalformat": {
                  "type": "string",
                  "description": "deadlineoriginalformat"
                },
                "extlink": {
                  "type": "string",
                  "description": "extlink"
                },
                "tags": {
                  "type": "string",
                  "description": "tags"
                },
                "leadtime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "leadtime"
                },
                "blocked": {
                  "type": "string",
                  "description": "blocked"
                },
                "blockedreason": {
                  "type": "string",
                  "description": "blockedreason"
                },
                "columnname": {
                  "type": "string",
                  "description": "columnname"
                },
                "lanename": {
                  "type": "string",
                  "description": "lanename"
                },
                "subtaskdetails": {
                  "type": "array",
                  "items": {},
                  "description": "subtaskdetails"
                },
                "columnid": {
                  "type": "string",
                  "description": "columnid"
                },
                "laneid": {
                  "type": "string",
                  "description": "laneid"
                },
                "position": {
                  "type": "string",
                  "description": "position"
                },
                "workflow": {
                  "type": "integer",
                  "format": "int32",
                  "description": "workflow"
                },
                "workflow_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "workflow_id"
                },
                "attachments": {
                  "type": "object",
                  "properties": {
                    "FXPR1VE0LIC9": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "clientName": {
                          "type": "string",
                          "description": "clientName"
                        },
                        "uniqueName": {
                          "type": "string",
                          "description": "uniqueName"
                        },
                        "fileSize": {
                          "type": "number",
                          "format": "float",
                          "description": "fileSize"
                        },
                        "fileType": {
                          "type": "string",
                          "description": "fileType"
                        },
                        "status": {
                          "type": "string",
                          "description": "status"
                        }
                      },
                      "description": "FXPR1VE0LIC9"
                    },
                    "0XC7C1PRR9ZK": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "clientName": {
                          "type": "string",
                          "description": "clientName"
                        },
                        "uniqueName": {
                          "type": "string",
                          "description": "uniqueName"
                        },
                        "fileSize": {
                          "type": "number",
                          "format": "float",
                          "description": "fileSize"
                        },
                        "fileType": {
                          "type": "string",
                          "description": "fileType"
                        },
                        "status": {
                          "type": "string",
                          "description": "status"
                        }
                      },
                      "description": "0XC7C1PRR9ZK"
                    }
                  },
                  "description": "attachments"
                },
                "columnpath": {
                  "type": "string",
                  "description": "columnpath"
                },
                "reporter": {
                  "type": "string",
                  "description": "reporter"
                },
                "customfields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fieldid": {
                        "type": "integer",
                        "format": "int32",
                        "description": "fieldid"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "type": {
                        "type": "string",
                        "description": "type"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      },
                      "mandatory": {
                        "type": "boolean",
                        "description": "mandatory"
                      },
                      "immutable": {
                        "type": "boolean",
                        "description": "immutable"
                      }
                    }
                  },
                  "description": "customfields"
                },
                "updatedat": {
                  "type": "string",
                  "description": "updatedat"
                },
                "loggedtime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "loggedtime"
                },
                "historydetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eventtype": {
                        "type": "string",
                        "description": "eventtype"
                      },
                      "historyevent": {
                        "type": "string",
                        "description": "historyevent"
                      },
                      "taskid": {
                        "type": "string",
                        "description": "taskid"
                      },
                      "details": {
                        "type": "string",
                        "description": "details"
                      },
                      "author": {
                        "type": "string",
                        "description": "author"
                      },
                      "entrydate": {
                        "type": "string",
                        "description": "entrydate"
                      },
                      "historyid": {
                        "type": "string",
                        "description": "historyid"
                      }
                    }
                  },
                  "description": "historydetails"
                },
                "comments": {
                  "type": "array",
                  "items": {},
                  "description": "comments"
                }
              }
            }
          }
        },
        "summary": "Get Card By ID",
        "description": "Get card by its ID",
        "operationId": "GetCard",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "history": {
                  "type": "string",
                  "description": "set to 'yes' if you want to get card history",
                  "title": "Get History",
                  "x-ms-visibility": "advanced"
                },
                "comments": {
                  "type": "string",
                  "description": "set to 'yes' if you want to get card comments",
                  "title": "Get comments",
                  "x-ms-visibility": "advanced"
                },
                "textformat": {
                  "type": "string",
                  "description": "text format returned for the card description",
                  "title": "Text Format",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    "plain",
                    "html"
                  ]
                }
              },
              "required": [
                "boardid",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/get_all_tasks/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get All Cards",
        "description": "Get all cards from a given board.",
        "operationId": "GetAllCards",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/workflows": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      },
                      "is_collapsible": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_collapsible"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "workflow_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow_id"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Workflows",
        "description": "Get all workflows from a given board.",
        "operationId": "GetWorkflows",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetBoards",
              "value-path": "board_id",
              "value-collection": "data",
              "value-title": "name"
            },
            "description": "Board",
            "x-ms-summary": "Board ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          }
        ]
      }
    },
    "/api/v2/webhooks/{webhook_id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Webhook",
        "description": "Delete Webhook. Used internally.",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Webhook ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          }
        ]
      }
    },
    "/api/v2/webhooks": {
      "x-ms-notification-content": {
        "description": "Details for CardHook",
        "schema": {
          "type": "object",
          "properties": {
            "company": {
              "type": "string",
              "description": "company"
            },
            "event": {
              "type": "string",
              "description": "event"
            },
            "user_id": {
              "type": "integer",
              "format": "int32",
              "description": "user_id"
            },
            "board_id": {
              "type": "integer",
              "format": "int32",
              "description": "board_id"
            },
            "card_id": {
              "type": "integer",
              "format": "int32",
              "description": "card_id"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "url"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      },
                      "board_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "board_id"
                      },
                      "secret": {
                        "type": "string",
                        "description": "secret"
                      },
                      "webhook_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "webhook_id"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "General Trigger",
        "operationId": "CardHook",
        "description": "Triggers for any action on the board. Use Control/Condition or Control/Switch to manage flow for different triggers. Here is partial list of supported event types: \"Card created\", \"Card moved\", \"Card details changed\", \"Card deleted\", \"Card blocked\" \\n\\n Your next step after the trigger should be \"Get Card By ID\" so you can take all card details \\n\\nUse Control/Condition on author ID in bi-drection integrations to prevent loops",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "url",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "board_id": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "url",
                "board_id"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "apikey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://kanbanize.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://kanbanize.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Business Management"
    }
  ]
}