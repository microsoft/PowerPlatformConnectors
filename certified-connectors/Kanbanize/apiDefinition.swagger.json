{
  "swagger": "2.0",
  "info": {
    "title": "Businessmap",
    "description": "Businessmap is the most flexible software platform for outcomes-driven enterprise agility. The unmatched functionality consolidates multiple tools into one, enabling affordable deployment at scale, visibility across all projects/portfolios, and alignment on goals, to deliver quality work faster. The Businessmap connector can be used to reflect changes in external tools (e.g. issue trackers, email, time tracking tools, etc.) inside your Kanban cards.",
    "version": "3.0",
    "contact": {
      "name": "Businessmap Support",
      "url": "https://businessmap.io/customer-support",
      "email": "support@businessmap.io"
    }
  },
  "host": "subdomain.kanbanize.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/index.php/api/kanbanize/move_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Move Card (deprecated)",
        "description": "(Deprecated) Move a card (Task or Initiative, if possible) to a column.",
        "operationId": "MoveCard",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "MoveCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                },
                "boardid": {
                  "type": "string",
                  "description": "board id",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards_V2",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "column": {
                  "type": "string",
                  "description": "column name",
                  "title": "Column",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane name",
                  "title": "Lane",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "card position in the column",
                  "title": "Position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceeding reason",
                  "title": "Exceeding reason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/api/v2/loggedTime": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Log Time (number of seconds) (deprecated)",
        "operationId": "LogTime",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "LogTime",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-visibility": "advanced",
            "default": "application/json",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "card_id": {
                  "type": "string",
                  "description": "Internal Card Id",
                  "title": "Card ID"
                },
                "time": {
                  "type": "string",
                  "description": "Time in Seconds",
                  "title": "Time"
                },
                "comment": {
                  "type": "string",
                  "description": "Comment",
                  "title": "Comment"
                }
              }
            }
          }
        ],
        "description": "(Deprecated) Log time to a card. The time is logged in seconds."
      }
    },
    "/api/v2/boards": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "board_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "board_id"
                      },
                      "workspace_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workspace_id"
                      },
                      "is_archived": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_archived"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Boards (deprecated)",
        "operationId": "GetBoards",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetBoards",
          "revision": 1
		},
        "parameters": [],
        "description": "(Deprecated) Get all boards from the account."
      }
    },
    "/index.php/api/kanbanize/create_new_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Card (deprecated)",
        "description": "(Deprecated) Create a card in a board of your choice.",
        "operationId": "CreateCard",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "CreateCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "card details",
                  "title": "Description"
                },
                "priority": {
                  "type": "string",
                  "description": "possible values: Low, Average, High, Critical",
                  "title": "Priority"
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                },
                "color": {
                  "type": "string",
                  "description": "hex color code like this #F37325",
                  "title": "Color"
                },
                "size": {
                  "type": "string",
                  "description": "size",
                  "title": "Size"
                },
                "tags": {
                  "type": "string",
                  "description": "multiple tags should be separated with space",
                  "title": "Tags"
                },
                "cfields": {
                  "type": "string",
                  "description": "JSON formatted list of custom fields and their values {\"field1\":\"value1\",\"field2\":\"value2\"}",
                  "title": "Custom Fields"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline date in this format YYYY-MM-DD",
                  "title": "Deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "external link",
                  "title": "External Link"
                },
                "type": {
                  "type": "string",
                  "description": "the name of the type you want to set",
                  "title": "Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "template": {
                  "type": "string",
                  "description": "the name of the card template you want to apply",
                  "title": "Card Template"
                },
                "column": {
                  "type": "string",
                  "description": "exact column name",
                  "title": "Column name",
                  "x-ms-dynamic-values": {
                    "operationId": "GetColumns",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetColumns",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "lane": {
                  "type": "string",
                  "description": "lane name",
                  "title": "Lane",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLanes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name",
                    "parameters": {
                      "board_id": {
                        "parameter": "boardid"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetLanes",
                    "itemsPath": "data",
                    "itemValuePath": "name",
                    "itemTitlePath": "name",
                    "parameters": {
                      "board_id": {
                        "parameterReference": "body/boardid"
                      }
                    }
                  }
                },
                "position": {
                  "type": "string",
                  "description": "card position in the column",
                  "title": "Position"
                },
                "exceedingreason": {
                  "type": "string",
                  "description": "exceeding reason",
                  "title": "Exceeding reason"
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_subtask/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create Subtask (deprecated)",
        "description": "(Deprecated) Creates a new subtask of a card or initiative.",
        "operationId": "CreateSubtask",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "CreateSubtask",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskparent": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the parent card",
                  "title": "Parent card ID"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                }
              }
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/add_comment/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Comment (deprecated)",
        "description": "(Deprecated) Adds a comment to a card or initiative.",
        "operationId": "AddComment",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "AddComment",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "advanced",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                },
                "comment": {
                  "type": "string",
                  "description": "comment",
                  "title": "Comment"
                }
              }
            }
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/columns": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "column_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "section": {
                        "type": "integer",
                        "format": "int32",
                        "description": "section"
                      },
                      "parent_column_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_column_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "limit"
                      },
                      "cards_per_row": {
                        "type": "integer",
                        "format": "int32",
                        "description": "cards_per_row"
                      },
                      "flow_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "flow_type"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Board Columns (deprecated)",
        "operationId": "GetColumns",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetColumns",
          "revision": 1
		},
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the columns for.",
            "x-ms-summary": "Board ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "(Deprecated) Get all columns for a specified board."
      }
    },
    "/api/v2/boards/{board_id}/lanes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "lane_id"
                      },
                      "workflow": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow"
                      },
                      "parent_lane_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "parent_lane_id"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "404": {
            "description": "This resource does not exist at the moment.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {
              "type": "string"
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Lanes (deprecated)",
        "operationId": "GetLanes",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetLanes",
          "revision": 1
		},
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The board to get the lanes for.",
            "x-ms-summary": "Board ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "description": "(Deprecated) Gets all lanes for a specified board."
      }
    },
    "/api/v2/cardTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type_id"
                      },
                      "icon_type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_type"
                      },
                      "icon_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "icon_id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "description": {
                        "type": "string",
                        "description": "description"
                      },
                      "color": {
                        "type": "string",
                        "description": "color"
                      },
                      "card_color_sync": {
                        "type": "integer",
                        "format": "int32",
                        "description": "card_color_sync"
                      },
                      "all_properties_are_locked": {
                        "type": "integer",
                        "format": "int32",
                        "description": "all_properties_are_locked"
                      },
                      "availability": {
                        "type": "integer",
                        "format": "int32",
                        "description": "availability"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a client error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to access the API.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the permissions required to access this resource or to perform this action.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "429": {
            "description": "This request will not be processed because you have sent too many requests recently.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message"
                    },
                    "reference": {
                      "type": "string",
                      "description": "reference"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "additionalProp1": {
                          "type": "string",
                          "description": "additionalProp1"
                        },
                        "additionalProp2": {
                          "type": "string",
                          "description": "additionalProp2"
                        },
                        "additionalProp3": {
                          "type": "string",
                          "description": "additionalProp3"
                        }
                      },
                      "description": "details"
                    }
                  },
                  "description": "error"
                }
              }
            }
          },
          "500": {
            "description": "The request failed due to an internal server error.",
            "schema": {}
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "schema": {}
          }
        },
        "summary": "Get Types (deprecated)",
        "operationId": "GetTypes",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetTypes",
          "revision": 1
		},
        "parameters": [],
        "description": "(Deprecated) Gets all types within the account."
      }
    },
    "/index.php/api/kanbanize/edit_task/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update Card (deprecated)",
        "description": "(Deprecated) Update the properties of a card (Title, Description, Priority, etc.)",
        "operationId": "UpdateCard",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "UpdateCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Content Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Always set to: application/json",
            "x-ms-summary": "Accept",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "integer",
                  "format": "int32",
                  "description": "card id",
                  "title": "Card ID"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "card details",
                  "title": "Description"
                },
                "priority": {
                  "type": "string",
                  "description": "",
                  "title": "Priority",
                  "enum": [
                    "Low",
                    "Average",
                    "High",
                    "Critical"
                  ]
                },
                "assignee": {
                  "type": "string",
                  "description": "username of the assignee",
                  "title": "Assignee"
                },
                "color": {
                  "type": "string",
                  "description": "hex color code like this #F37325",
                  "title": "Color"
                },
                "size": {
                  "type": "integer",
                  "format": "int32",
                  "description": "size",
                  "title": "Size"
                },
                "tags": {
                  "type": "string",
                  "description": "multiple tags should be separated with space",
                  "title": "Tags"
                },
                "cfields": {
                  "type": "string",
                  "description": "JSON formatted list of custom fields and their values {\"field1\":\"value1\",\"field2\":\"value2\"}",
                  "title": "Custom Fields"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline date in this format YYYY-MM-DD",
                  "title": "Deadline"
                },
                "extlink": {
                  "type": "string",
                  "description": "external link",
                  "title": "External Link"
                },
                "type": {
                  "type": "string",
                  "description": "the name of the type you want to set",
                  "title": "Type",
                  "x-ms-dynamic-values": {
                    "operationId": "GetTypes",
                    "value-path": "name",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/delete_task/format/json": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Card (deprecated)",
        "description": "(Deprecated) Delete a card.",
        "operationId": "DeleteCard",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "DeleteCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID"
                }
              },
              "required": [
                "boardid",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/block_task/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Block or Unblock Card (deprecated)",
        "description": "(Deprecated) Block, unblock or edit block reasons for a card.",
        "operationId": "BlockUnblockCard",
        "x-ms-visibility": "important",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "BlockUnblockCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "event": {
                  "type": "string",
                  "description": "",
                  "title": "Event Type",
                  "x-ms-visibility": "important",
                  "enum": [
                    "block",
                    "unblock",
                    "editblock"
                  ],
                  "x-ms-enum-values": [
                    {
                      "displayName": "Block",
                      "value": "block"
                    },
                    {
                      "displayName": "Unblock",
                      "value": "unblock"
                    },
                    {
                      "displayName": "Edit reason",
                      "value": "editblock"
                    }
                  ]
                },
                "blockreason": {
                  "type": "string",
                  "description": "reason for block",
                  "title": "Block Reason",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "boardid",
                "event",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/archive_task": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Archive Card (deprecated)",
        "description": "(Deprecated) Move card to archive. The card must not be blocked and it must be in column Done or in column Archive.",
        "operationId": "ArchiveCard",
        "x-ms-visibility": "important",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "ArchiveCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "cardid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "version": {
                  "type": "string",
                  "description": "version",
                  "title": "Version",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "cardid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/get_task_details/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "taskid": {
                  "type": "string",
                  "description": "taskid"
                },
                "boardid": {
                  "type": "string",
                  "description": "boardid"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "description": {
                  "type": "string",
                  "description": "description"
                },
                "type": {
                  "type": "string",
                  "description": "type"
                },
                "assignee": {
                  "type": "string",
                  "description": "assignee"
                },
                "subtasks": {
                  "type": "string",
                  "description": "subtasks"
                },
                "subtaskscomplete": {
                  "type": "string",
                  "description": "subtaskscomplete"
                },
                "color": {
                  "type": "string",
                  "description": "color"
                },
                "priority": {
                  "type": "string",
                  "description": "priority"
                },
                "size": {
                  "type": "string",
                  "description": "size"
                },
                "deadline": {
                  "type": "string",
                  "description": "deadline"
                },
                "deadlineoriginalformat": {
                  "type": "string",
                  "description": "deadlineoriginalformat"
                },
                "extlink": {
                  "type": "string",
                  "description": "extlink"
                },
                "tags": {
                  "type": "string",
                  "description": "tags"
                },
                "leadtime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "leadtime"
                },
                "blocked": {
                  "type": "string",
                  "description": "blocked"
                },
                "blockedreason": {
                  "type": "string",
                  "description": "blockedreason"
                },
                "columnname": {
                  "type": "string",
                  "description": "columnname"
                },
                "lanename": {
                  "type": "string",
                  "description": "lanename"
                },
                "subtaskdetails": {
                  "type": "array",
                  "items": {},
                  "description": "subtaskdetails"
                },
                "columnid": {
                  "type": "string",
                  "description": "columnid"
                },
                "laneid": {
                  "type": "string",
                  "description": "laneid"
                },
                "position": {
                  "type": "string",
                  "description": "position"
                },
                "workflow": {
                  "type": "integer",
                  "format": "int32",
                  "description": "workflow"
                },
                "workflow_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "workflow_id"
                },
                "attachments": {
                  "type": "object",
                  "properties": {
                    "FXPR1VE0LIC9": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "clientName": {
                          "type": "string",
                          "description": "clientName"
                        },
                        "uniqueName": {
                          "type": "string",
                          "description": "uniqueName"
                        },
                        "fileSize": {
                          "type": "number",
                          "format": "float",
                          "description": "fileSize"
                        },
                        "fileType": {
                          "type": "string",
                          "description": "fileType"
                        },
                        "status": {
                          "type": "string",
                          "description": "status"
                        }
                      },
                      "description": "FXPR1VE0LIC9"
                    },
                    "0XC7C1PRR9ZK": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "url"
                        },
                        "clientName": {
                          "type": "string",
                          "description": "clientName"
                        },
                        "uniqueName": {
                          "type": "string",
                          "description": "uniqueName"
                        },
                        "fileSize": {
                          "type": "number",
                          "format": "float",
                          "description": "fileSize"
                        },
                        "fileType": {
                          "type": "string",
                          "description": "fileType"
                        },
                        "status": {
                          "type": "string",
                          "description": "status"
                        }
                      },
                      "description": "0XC7C1PRR9ZK"
                    }
                  },
                  "description": "attachments"
                },
                "columnpath": {
                  "type": "string",
                  "description": "columnpath"
                },
                "reporter": {
                  "type": "string",
                  "description": "reporter"
                },
                "customfields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fieldid": {
                        "type": "integer",
                        "format": "int32",
                        "description": "fieldid"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "type": {
                        "type": "string",
                        "description": "type"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      },
                      "mandatory": {
                        "type": "boolean",
                        "description": "mandatory"
                      },
                      "immutable": {
                        "type": "boolean",
                        "description": "immutable"
                      }
                    }
                  },
                  "description": "customfields"
                },
                "updatedat": {
                  "type": "string",
                  "description": "updatedat"
                },
                "loggedtime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "loggedtime"
                },
                "historydetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eventtype": {
                        "type": "string",
                        "description": "eventtype"
                      },
                      "historyevent": {
                        "type": "string",
                        "description": "historyevent"
                      },
                      "taskid": {
                        "type": "string",
                        "description": "taskid"
                      },
                      "details": {
                        "type": "string",
                        "description": "details"
                      },
                      "author": {
                        "type": "string",
                        "description": "author"
                      },
                      "entrydate": {
                        "type": "string",
                        "description": "entrydate"
                      },
                      "historyid": {
                        "type": "string",
                        "description": "historyid"
                      }
                    }
                  },
                  "description": "historydetails"
                },
                "comments": {
                  "type": "array",
                  "items": {},
                  "description": "comments"
                }
              }
            }
          }
        },
        "summary": "Get Card By ID (deprecated)",
        "description": "(Deprecated) Get card by its ID",
        "operationId": "GetCard",
        "x-ms-visibility": "important",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetCard",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                },
                "taskid": {
                  "type": "string",
                  "description": "card id",
                  "title": "Card ID",
                  "x-ms-visibility": "important"
                },
                "history": {
                  "type": "string",
                  "description": "set to 'yes' if you want to get card history",
                  "title": "Get History",
                  "x-ms-visibility": "advanced"
                },
                "comments": {
                  "type": "string",
                  "description": "set to 'yes' if you want to get card comments",
                  "title": "Get comments",
                  "x-ms-visibility": "advanced"
                },
                "textformat": {
                  "type": "string",
                  "description": "text format returned for the card description",
                  "title": "Text Format",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    "plain",
                    "html"
                  ]
                }
              },
              "required": [
                "boardid",
                "taskid"
              ]
            }
          }
        ]
      }
    },
    "/index.php/api/kanbanize/get_all_tasks/": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Get All Cards (deprecated)",
        "description": "(Deprecated) Get all cards from a given board.",
        "operationId": "GetAllCards",
        "x-ms-visibility": "important",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetAllCards",
          "revision": 1
		},
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "boardid": {
                  "type": "string",
                  "description": "Select board from the dropdown list",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "boardid"
              ]
            }
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/workflows": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type"
                      },
                      "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "position"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      },
                      "is_collapsible": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_collapsible"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "workflow_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflow_id"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Workflows (deprecated)",
        "description": "(Deprecated) Get all workflows from a given board.",
        "operationId": "GetWorkflows",
        "x-ms-visibility": "important",
		"deprecated": true,
		"x-ms-api-annotation": {
		  "family": "GetWorkflows",
          "revision": 1
		},
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GetBoards",
              "value-path": "board_id",
              "value-collection": "data",
              "value-title": "name"
            },
            "description": "Board",
            "x-ms-summary": "Board ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          }
        ]
      }
    },
    "/api/v2/webhooks/{webhook_id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete Webhook",
        "description": "Delete Webhook. Used internally.",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Webhook ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          }
        ]
      }
    },
    "/api/v2/webhooks": {
      "x-ms-notification-content": {
        "description": "Details for CardHook",
        "schema": {
          "type": "object",
          "properties": {
            "company": {
              "type": "string",
              "description": "company"
            },
            "event": {
              "type": "string",
              "description": "event"
            },
            "user_id": {
              "type": "integer",
              "format": "int32",
              "description": "user_id"
            },
            "board_id": {
              "type": "integer",
              "format": "int32",
              "description": "board_id"
            },
            "card_id": {
              "type": "integer",
              "format": "int32",
              "description": "card_id"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "url"
                      },
                      "is_enabled": {
                        "type": "integer",
                        "format": "int32",
                        "description": "is_enabled"
                      },
                      "board_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "board_id"
                      },
                      "secret": {
                        "type": "string",
                        "description": "secret"
                      },
                      "webhook_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "webhook_id"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "General Trigger",
        "operationId": "CardHook",
        "description": "Triggers for any action on the board. Use Control/Condition or Control/Switch to manage flow for different triggers. Here is partial list of supported event types: \"Card created\", \"Card moved\", \"Card details changed\", \"Card deleted\", \"Card blocked\" \\n\\n Your next step after the trigger should be \"Get Card By ID\" so you can take all card details \\n\\nUse Control/Condition on author ID in bi-direction integrations to prevent loops",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal",
            "description": "Always use: application/json",
            "x-ms-summary": "Content Type"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "url",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "board_id": {
                  "type": "string",
                  "description": "Select board",
                  "title": "Board ID",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetBoards",
                    "value-path": "board_id",
                    "value-collection": "data",
                    "value-title": "name"
                  }
                }
              },
              "required": [
                "url",
                "board_id"
              ]
            }
          }
        ]
      }
    },
	"/api/v2/users": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getUsersResponse"
            }
          }
        },
        "operationId": "GetUsers",
        "summary": "Get Users",
        "description": "Get all users for a board. Used internally.",
        "x-ms-visibility": "internal",
        "parameters": [
		  {
            "$ref": "#/parameters/boardIdHeader"
          }
		]
      }
    },
	"/api/v2/blockReasons": {
	  "get": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getBlockReasonsResponse"
            }
          }
        },
        "operationId": "GetBlockReasons",
        "summary": "Get Block Reasons",
        "description": "Get all block reasons within the account. Can filter by board. Used internally.",
        "x-ms-visibility": "internal",
        "parameters": [
		  {
			"$ref": "#/parameters/expandBoardIdsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          },
		  {
			"$ref": "#/parameters/isEnabledQuery"
		  }
		]
	  }
	},
	"/api/v2/boards/GetBoards": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getBoardsResponse"
			}
          }
        },
        "operationId": "GetBoards_V2",
        "summary": "Get Boards",
        "description": "Get all boards within the account. Used internally.",
        "x-ms-visibility": "internal",
		"x-ms-api-annotation": {
		  "family": "GetBoards",
          "revision": 2
		},
        "parameters": [
		  {
			"$ref": "#/parameters/isArchivedQuery"
		  }
		]
      }
    },
    "/api/v2/boards/{board_id}/columns/GetColumns": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getColumnsResponse"
            }
          }
        },
        "operationId": "GetColumns_V2",
        "summary": "Get Columns",
        "description": "Get all columns for a specified board. Used internally.",
        "x-ms-visibility": "internal",
		"x-ms-api-annotation": {
		  "family": "GetColumns",
          "revision": 2
		},
        "parameters": [
          {
            "$ref": "#/parameters/boardIdPath"
          },
		  {
			"$ref": "#/parameters/workflowIdHeader"
          }
        ]
      }
    },
    "/api/v2/boards/{board_id}/lanes/GetLanes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getLanesResponse"
            }
          }
        },
        "operationId": "GetLanes_V2",
        "summary": "Get Lanes",
        "description": "Get all lanes for a specified board. Used internally.",
        "x-ms-visibility": "internal",
		"x-ms-api-annotation": {
		  "family": "GetLanes",
          "revision": 2
		},
        "parameters": [
          {
            "$ref": "#/parameters/boardIdPath"
          },
		  {
            "$ref": "#/parameters/workflowIdHeader"
          }
        ]
      }
    },
    "/api/v2/cardTypes/GetTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getTypesResponse"
            }
          }
        },
        "operationId": "GetTypes_V2",
        "summary": "Get Types",
        "description": "Get all types within the account. Used internally.",
        "x-ms-visibility": "internal",
		"x-ms-api-annotation": {
		  "family": "GetTypes",
          "revision": 2
		},
        "parameters": [
		  {
			"$ref": "#/parameters/expandBoardsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          }
		]
      }
    },
	"/api/v2/boards/{board_id}/workflows/GetWorkflows": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/getWorkflowsResponse"
            }
          }
        },
        "operationId": "GetWorkflows_V2",
        "summary": "Get Workflows",
        "description": "Get all workflows for a specified board. Used internally.",
        "x-ms-visibility": "internal",
		"x-ms-api-annotation": {
		  "family": "GetWorkflows",
          "revision": 2
		},
        "parameters": [
          {
			"$ref": "#/parameters/boardIdPath"
		  }
        ]
      }
    },
	"/api/v2/cards/{card_id}/attachments": {
	  "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardAttachmentsResponse"
            }
          }
        },
        "operationId": "GetCardAttachments",
        "summary": "Get Card Attachments",
        "description": "Get a list with all attachments for a specified card.",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          }
		]
      }
    },
	"/api/v2/cardTemplates": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardTemplatesResponse"
            }
          }
        },
        "operationId": "GetTemplates",
		"summary": "Get Templates",
        "description": "Get all templates within the account. Used internally.",
        "x-ms-visibility": "internal",
        "parameters": [
		  {
			"$ref": "#/parameters/expandBoardIdsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          }
		]
      }
    },
	"/api/v2/customFields": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCustomFieldsResponse"
            }
          }
        },
        "operationId": "GetCustomFields",
		"summary": "Get Custom Fields",
        "description": "Get all custom fields within the account. Used internally.",
        "x-ms-visibility": "internal",
        "parameters": [
		  {
			"$ref": "#/parameters/typesQuery"
		  },
		  {
			"$ref": "#/parameters/expandBoardsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          }
		]
      }
    },
	"/api/v2/customFields/{field_id}/allowedValues": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCustomFieldValuesResponse"
			}
          }
        },
        "operationId": "GetCustomFieldValues",
		"summary": "Get Custom Field Values",
        "description": "Get all values for a specified custom field. Used internally.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/fieldIdPath"
          }
        ]
      }
    },
	"/api/v2/cards/{card_id}": {
	  "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardResponse"
            }
          }
        },
        "operationId": "GetCard_V2",
        "summary": "Get Card by ID",
        "description": "Get card details by its internal ID.",
        "x-ms-visibility": "important",
		"x-ms-api-annotation": {
		  "family": "GetCard",
          "revision": 2
		},
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
		  }
		]
      }
	},
	"/api/v2/cards": {
	  "get": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getAllCardsResponse"
            }
          }
        },
        "operationId": "GetAllCards_V2",
        "summary": "Get All Cards",
        "description": "Get all cards from a selected board. The response contains up to 200 cards. For more than 200 cards, please use paging.",
        "x-ms-visibility": "important",
		"x-ms-api-annotation": {
		  "family": "GetAllCards",
          "revision": 2
		},
        "parameters": [
		  {
			"$ref": "#/parameters/boardIdsQueryRequired"
		  },
		  {
			"$ref": "#/parameters/customIdsArrayQuery"
		  },
		  {
			"$ref": "#/parameters/pageQuery"
		  },
		  {
			"$ref": "#/parameters/cardStateQuery"
		  }
		]
	  },
	  "post": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardResponse"
            }
          }
        },
		"operationId": "CreateCard_V2",
        "summary": "Create Card",
        "description": "Create a card in a board of your choice. To set custom fields, stickers and tags use in combination with \"Update Card\".",
        "x-ms-visibility": "important",
		"x-ms-api-annotation": {
		  "family": "CreateCard",
          "revision": 2
		},
		"parameters": [
		  {
            "$ref": "#/parameters/createCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/GetCardByCustomId": {
	  "get": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardResponse"
            }
          }
        },
        "operationId": "GetCardByCustomId",
        "summary": "Get Card by Custom ID",
        "description": "Find card by custom card id. If multiple cards are found, only the first one will be returned. Use ‘Board’ parameter to filter search by boards.",
        "x-ms-visibility": "important",
        "parameters": [
		  {
			"$ref": "#/parameters/customIdsQuery"
		  },
		  {
			"$ref": "#/parameters/boardIdsQuery"
		  },
		  {
			"$ref": "#/parameters/fieldsCardQuery"
		  },
		  {
			"$ref": "#/parameters/expandCardQuery"
		  }
		]
	  }
	},
	"/api/v2/cards/{card_id}/UpdateCard": {
	  "patch": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCardResponse"
			}
          }
        },
		"operationId": "UpdateCard_V2",
        "summary": "Update Card",
        "description": "Update the properties of a card (Title, Description, Priority, etc.). If getting a timeout or API limit reached errors, try breaking down the setting of custom fields, stickers and tags into separate actions.",
        "x-ms-visibility": "important",
		"x-ms-api-annotation": {
		  "family": "UpdateCard",
          "revision": 2
		},
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/updateCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/MoveCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "MoveCard_V2",
        "summary": "Move Card",
        "description": "Move a card to new column, lane, workflow or board.",
        "x-ms-visibility": "important",
		"x-ms-api-annotation": {
		  "family": "MoveCard",
          "revision": 2
		},
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/moveCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/SetCustomField": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "SetCustomField",
        "summary": "Set Custom Field Value",
        "description": "Set the value of a custom field.",
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/setCustomFieldBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/DiscardCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "DiscardCard",
		"summary": "Discard or Restore Card",
        "description": "Discard a card or restore a previously discarded card.",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/discardCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/BlockCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "BlockCard",
		"summary": "Block Card",
        "description": "Block a card.",
        "parameters": [
		  {
			"$ref": "#/parameters/boardIdHeader"		  
		  },
		  {
			"$ref": "#/parameters/cardIdPath"
          },
		  {
            "$ref": "#/parameters/blockCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/blockReason": {
	  "delete": {
		"responses": {
          "204": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "UnblockCard",
        "summary": "Unblock Card",
        "description": "Unblock a card.",
        "parameters": [
          {
            "$ref": "#/parameters/cardIdPath"
          }
        ]
	  }
	},
	"/api/v2/cards/{card_id}/ArchiveCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "ArchiveCard_V2",
		"summary": "Archive or Unarchive Card",
        "description": "Add card to archive, or extract it from archive.",
        "x-ms-api-annotation": {
		  "family": "ArchiveCard",
          "revision": 2
		},
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/archiveCardBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/LinkCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "LinkCard",
		"summary": "Link Cards",
        "description": "Link a card to an existing card.",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
		  {
            "$ref": "#/parameters/linkCardBody"
          }
		] 
	  }
	},
	"/api/v2/cards/{card_id}/UnlinkCard": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "UnlinkCard",
		"summary": "Unlink Cards",
        "description": "Remove a link between two cards.",
        "parameters": [
		  {
			"$ref": "#/parameters/unlinkCardIdPath"
          },
		  {
            "$ref": "#/parameters/unlinkCardBody"
          }
		]
	  }
	},
    "/api/v2/loggedTime/LogTime": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "LogTime_V2",
        "summary": "Log Time",
        "description": "Log time to a card.",
		"x-ms-api-annotation": {
		  "family": "LogTime",
          "revision": 2
		},
        "parameters": [
          {
            "$ref": "#/parameters/logTimeBody"
          }
        ]
      }
    },
	"/api/v2/cards/{card_id}/subtasks": {
	  "post": {
		"responses":{
          "200": {
            "description": "default",
            "schema": {}
          }
        },
		"operationId": "CreateSubtask_V2",
		"summary": "Create Subtask",
		"description": "Create a new subtask of a card or initiative.",
		"x-ms-api-annotation": {
		  "family": "CreateSubtask",
          "revision": 2
		},
		"parameters": [
		  {
			"$ref": "#/parameters/boardIdHeader"		  
		  },
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/createSubtaskBody"
          }
		]
	  }
	},
	"/api/v2/cards/{card_id}/comments": {
	  "post": {
		"responses":{
          "200": {
            "description": "default",
            "schema": {}
          }
        },
		"operationId": "AddComment_V2",
		"summary": "Add Comment",
		"description": "Add a comment to a card or initiative.",
		"x-ms-api-annotation": {
		  "family": "AddComment",
          "revision": 2
		},
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
          {
            "$ref": "#/parameters/createCommentBody"
          }
		]
	  }
	},
	"/api/v2/files/download": {
	  "get": {
		"responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/downloadAttachmentResponse"
            }
          }
        },
        "operationId": "DownloadAttachment",
        "summary": "Download Attachment",
        "description": "Download an attachment from a card. File content is returned as base64 encoded string.",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdHeader"
		  },
		  {
			"$ref": "#/parameters/attachmentIdHeader"
		  },
		  {
			"$ref": "#/parameters/encodingHeader"
		  }
		]
	  }
	},
	"/api/v2/files": {
	  "post": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {
              "$ref": "#/definitions/uploadAttachmentResponse"
			}
		  }
		},
		"operationId": "UploadAttachment",
        "summary": "Upload Attachment",
        "description": "Upload an attachment to a card.",
		"parameters": [
		  {
			"$ref": "#/parameters/cardIdHeader"
		  },
		  {
            "$ref": "#/parameters/uploadAttachmentBody"
          }
		]
	  }
	},
	"/api/v2/stickers": {
	  "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getStickersResponse"
            }
          }
        },
        "operationId": "GetStickers",
        "summary": "Get Stickers",
        "description": "Get all stickers within the account. Can filter by board. Used internally.",
		"x-ms-visibility": "internal",
        "parameters": [
		  {
			"$ref": "#/parameters/expandBoardIdsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          },
		  {
			"$ref": "#/parameters/isEnabledQuery"
		  }
		]
      }
	},
	"/api/v2/tags": {
	  "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getTagsResponse"
            }
          }
        },
        "operationId": "GetTags",
        "summary": "Get Tags",
        "description": "Get all tags within the account. Can filter by board. Used internally.",
		"x-ms-visibility": "internal",
        "parameters": [
		  {
			"$ref": "#/parameters/expandBoardIdsQuery"
		  },
		  {
            "$ref": "#/parameters/boardIdHeader"
          },
		  {
			"$ref": "#/parameters/isEnabledQuery"
		  }
		]
      }
	},
	"/api/v2/cards/{card_id}/SetTags": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "SetTags",
		"summary": "Set or Unset Tags",
        "description": "Add tag(s) to a card or remove assigned tag(s) from a card",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
		  {
            "$ref": "#/parameters/setTagsBody"
          }
		] 
	  }
	},
	"/api/v2/cards/{card_id}/SetStickers": {
	  "patch": {
		"responses": {
		  "200": {
			"description": "default",
			"schema": {}
		  }
		},
		"operationId": "SetStickers",
		"summary": "Set or Unset Stickers",
        "description": "Add sticker(s) to a card or remove assigned sticker(s) from a card",
        "parameters": [
		  {
			"$ref": "#/parameters/cardIdPath"
          },
		  {
            "$ref": "#/parameters/setStickersBody"
          }
		] 
	  }
	},
	"/api/v2/{item}/{id}": {
	  "get": {
		"responses": {
		  "200": {
		    "description": "OK",
            "schema": {
              "$ref": "#/definitions/getObjectNameResponse"
            }
		  }
		},
		"operationId": "GetObjectName",
		"summary": "Get {Object} Name",
        "description": "Get the name of an object based on its ID. Helper function used when you want to get the name of the board, workflow, column etc. based on its ID",
        "parameters": [
		  {
            "$ref": "#/parameters/boardIdHeader"
          },
		  {
			"$ref": "#/parameters/objectPath"
          },
		  {
            "$ref": "#/parameters/idPath"
          }
		] 
	  }
	}
  },
  "definitions": {
	"downloadAttachmentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
			"file_name": {
              "type": "string",
			  "title": "File Name",
              "description": "Attachment File Name"
            },
		    "content": {
			  "type": "string",
			  "format": "binary",
			  "title": "Content",
			  "description": "Attachment Content (base64)"
            }
          },
          "description": "data"
        }
      }
    },
	"getAllCardsResponse": {
	  "type": "object",
      "properties": {
        "data": {
		  "type": "object",
		  "properties": {
			"pagination": {
			  "type": "object",
			  "properties": {
				"all_pages": {
                  "type": "integer",
                  "format": "int32",
				  "title": "All Pages",
                  "description": "Total number of pages"
				},
				"current_page": {
				  "type": "integer",
                  "format": "int32",
				  "title": "Current Page",
                  "description": "Current page"
				},
				"results_per_page": {
				  "type": "integer",
                  "format": "int32",
				  "title": "Results per page",
                  "description": "Number of results per page"
				}
			  }
			},
			"data": {
			  "type": "array",
		      "items": {
			    "type": "object",
				"properties": {
				  "card_id": {
					"type": "integer",
					"format": "int32",
					"title": "Card Id",
					"description": "Internal Card ID"
				  },
				  "custom_id": {
					"type": "string",
					"title": "Custom Card Id",
					"description": "Custom Card ID"
				  },
				  "board_id": {
					"type": "integer",
					"format": "int32",
					"title": "Board Id",
					"description": "Board ID of the card"
				  },
				  "workflow_id": {
					"type": "integer",
					"format": "int32",
					"title": "Workflow Id",
					"description": "Workflow ID of the card"
				  },
				  "title": {
					"type": "string",
					"title": "Card Title",
					"description": "Title of the card"
				  },
				  "owner_user_id": {
					"title": "Owner User Id",
					"description": "Owner ID of the card"
				  },
				  "type_id": {
					"title": "Type Id",
					"description": "Card Type ID"
				  },
				  "color": {
					"type": "string",
					"title": "Color",
					"description": "Color of the card"
				  },
				  "section": {
					"type": "integer",
					"format": "int32",
					"title": "Section",
					"description": "Section ID of the card"
				  },
				  "column_id": {
					"type": "integer",
					"format": "int32",
					"title": "Column Id",
					"description": "Column ID of the card"
				  },
				  "lane_id": {
					"type": "integer",
					"format": "int32",
					"title": "Lane Id",
					"description": "Lane ID of the card"
				  }
				}
			  }
			}
		  }
		}
      }
	},
	"getBlockReasonsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "reason_id": {
                "type": "integer",
                "format": "int32",
                "description": "Block Reason ID"
              },
              "name": {
                "type": "string",
                "description": "Block Reason Label"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getBoardsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "board_id": {
                "type": "integer",
                "format": "int32",
                "description": "board_id"
              },
              "workspace_id": {
                "type": "integer",
                "format": "int32",
                "description": "workspace_id"
              },
              "is_archived": {
                "type": "integer",
                "format": "int32",
                "description": "is_archived"
              },
              "name": {
                "type": "string",
                "description": "name"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getCardAttachmentsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "description": "Card Attachment ID"
              },
              "file_name": {
                "type": "string",
                "description": "Card Attachment File Name"
              },
			  "link": {
				"type": "string",
				"description": "Card Attachment Link"
			  }
            }
          },
          "description": "data"
        }
      }
    },
	"getCardResponse": {
	  "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "card_id": {
              "type": "integer",
              "format": "int32",
			  "title": "Card Id",
              "description": "Internal Card ID"
            },
			"custom_id": {
              "type": "string",
			  "title": "Custom Card Id",
              "description": "Custom Card ID"
            },
			"board_id": {
              "type": "integer",
              "format": "int32",
			  "title": "Board Id",
              "description": "Board ID of the card"
            },
            "workflow_id": {
              "type": "integer",
              "format": "int32",
			  "title": "Workflow Id",
              "description": "Workflow ID of the card"
            },
			"title": {
              "type": "string",
			  "title": "Card Title",
              "description": "Title of the card"
            },
			"owner_user_id": {
			  "title": "Owner User Id",
              "description": "Owner ID of the card"
            },
			"type_id": {
			  "title": "Type Id",
              "description": "Card Type ID"
            },
			"color": {
              "type": "string",
			  "title": "Color",
              "description": "Color of the card"
            },
			"section": {
              "type": "integer",
              "format": "int32",
			  "title": "Section",
              "description": "Section ID of the card"
            },
			"column_id": {
              "type": "integer",
              "format": "int32",
			  "title": "Column Id",
              "description": "Column ID of the card"
            },
			"lane_id": {
              "type": "integer",
              "format": "int32",
			  "title": "Lane Id",
              "description": "The lane ID of the card"
            },
			"position": {
              "type": "integer",
              "format": "int32",
			  "title": "Position",
              "description": "Position of the card"
            },
            "description": {
              "type": "string",
			  "title": "Card Description",
              "description": "Description of the card"
            },
			"size": {
			  "title": "Card Size",
              "description": "Size of the card"
            },
			"priority": {
              "type": "integer",
              "format": "int32",
			  "title": "Priority",
              "description": "Priority ID of the card"
            },
			"deadline": {
              "type": "string",
			  "title": "Deadline",
              "description": "Deadline of the card"
            },
			"reporter": {
			  "type": "object",
			  "properties": {
				"type": {
				  "type": "string",
				  "title": "Type",
				  "description": "Type of value. Can be internal or external"
				},
				"value": {
				  "title": "Reporter",
				  "description": "Reporter of the card"
				}
			  }
			},
			"created_at": {
              "type": "string",
			  "title": "Created At",
              "description": "Timestamp of the creation of the card"
            },
			"last_modified": {
              "type": "string",
			  "title": "Last Modified",
              "description": "Timestamp of the last modification of the card"
            },
			"is_blocked": {
              "type": "integer",
              "format": "int32",
			  "title": "Blocked",
              "description": "Boolean, whether the card is blocked"
            },
			"custom_fields": {
			  "type": "array",
			  "title": "Custom Fields",
              "description": "Array of the custom fields assigned to the card",
			  "items": {
			    "type": "object",
			    "properties": {
			  	  "field_id": {
			  	    "type": "integer",
			  	    "format": "int32",
			  	    "title": "Field Id",
			  	    "description": "Custom Field ID"
			  	  },
			  	  "name": {
			  	    "type": "string",
			  	    "title": "Field Name",
			  	    "description": "Name of the custom field"
			  	  },
			  	  "value": {
			  	    "title": "Field Value",
			  	    "description": "Value of the custom field"
			  	  },
			  	  "display_value": {
			  	    "title": "Field Display Value",
			  	    "description": "Display value of the custom field"
			  	  },
				  "values": {
					"type": "array",
					"items": {
					  "type": "object",
					  "properties": {
						"value_id": {
						  "type": "integer",
						  "format": "int32",
						  "title": "Value Id",
						  "description": "Custom Field Value ID"
						},
						"value": {
						  "title": "Field Value",
						  "description": "Value of the custom field"
						}
					  }
					}
				  }
			    }
			  }
            }
          },
          "description": "data"
        }
      }
	},
	"getCardTemplatesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "template_id": {
                "type": "integer",
                "format": "int32",
                "description": "Template ID"
              },
              "name": {
                "type": "string",
                "description": "Template Name"
              },
              "description": {
                "type": "string",
                "description": "Template Description"
              },
              "availability": {
                "type": "integer",
                "format": "int32",
                "description": "Template Availability"
              },
              "is_enabled": {
                "type": "integer",
                "format": "int32",
                "description": "Boolean, whether template is enabled"
              },
			  "boards": {
				"type": "array",
				"items": {
				  "type": "object",
				  "properties": {
					"board_id": {
					  "type": "integer",
					  "format": "int32",
					  "description": "Template Board ID"
					}
				  }
				}
			  }
            }
          },
          "description": "data"
        }
      }
    },
	"getColumnsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "column_id": {
                "type": "integer",
                "format": "int32",
                "description": "column_id"
              },
              "workflow": {
                "type": "integer",
                "format": "int32",
                "description": "workflow"
              },
              "section": {
                "type": "integer",
                "format": "int32",
                "description": "section"
              },
              "parent_column_id": {
                "type": "integer",
                "format": "int32",
                "description": "parent_column_id"
              },
              "position": {
                "type": "integer",
                "format": "int32",
                "description": "position"
              },
              "name": {
                "type": "string",
                "description": "name"
              },
              "description": {
                "type": "string",
                "description": "description"
              },
              "color": {
                "type": "string",
                "description": "color"
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "description": "limit"
              },
              "cards_per_row": {
                "type": "integer",
                "format": "int32",
                "description": "cards_per_row"
              },
              "flow_type": {
                "type": "integer",
                "format": "int32",
                "description": "flow_type"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field_id": {
                "type": "integer",
                "format": "int32",
                "description": "Custom Field ID"
              },
              "name": {
                "type": "string",
                "description": "Custom Field Name"
              },
              "availability": {
                "type": "integer",
                "format": "int32",
                "description": "Custom Field Availability"
              },
              "is_enabled": {
                "type": "integer",
                "format": "int32",
                "description": "Boolean, whether custom field is enabled"
              },
			  "boards": {
				"type": "array",
				"items": {
				  "type": "object",
				  "properties": {
					"board_id": {
					  "type": "integer",
					  "format": "int32",
					  "description": "Custom Field Board ID"
					}
				  }
				}
			  }
            }
          },
          "description": "data"
        }
      }
    },
	"getCustomFieldValuesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value_id": {
                "type": "integer",
                "format": "int32",
                "description": "Custom Field Value ID"
              },
              "value": {
                "type": "string",
                "description": "Custom Field Value"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getLanesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lane_id": {
                "type": "integer",
                "format": "int32",
                "description": "lane_id"
              },
              "workflow": {
                "type": "integer",
                "format": "int32",
                "description": "workflow"
              },
              "parent_lane_id": {
                "type": "integer",
                "format": "int32",
                "description": "parent_lane_id"
              },
              "position": {
                "type": "integer",
                "format": "int32",
                "description": "position"
              },
              "name": {
                "type": "string",
                "description": "name"
              },
              "description": {
                "type": "string",
                "description": "description"
              },
              "color": {
                "type": "string",
                "description": "color"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getObjectNameResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name"
            }
          },
          "description": "data"
        }
      }
    },
	"getStickersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sticker_id": {
                "type": "integer",
                "format": "int32",
                "description": "sticker_id"
              },
              "name": {
                "type": "string",
                "description": "name"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getTagsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tag_id": {
                "type": "integer",
                "format": "int32",
                "description": "tag_id"
              },
              "name": {
                "type": "string",
                "description": "name"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getTypesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type_id": {
                "type": "integer",
                "format": "int32",
                "description": "type_id"
              },
              "name": {
                "type": "string",
                "description": "name"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "integer",
                "format": "int32",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User Email"
              },
              "username": {
                "type": "string",
                "description": "User Username"
              },
			  "realname": {
                "type": "string",
                "description": "User Real Name"
              },
              "is_enabled": {
                "type": "integer",
                "format": "int32",
                "description": "Boolean, whether user is enabled"
              },
              "is_confirmed": {
                "type": "integer",
                "format": "int32",
                "description": "Boolean, whether user is confirmed"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"getWorkflowsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "integer",
                "format": "int32",
                "description": "type"
              },
              "position": {
                "type": "integer",
                "format": "int32",
                "description": "position"
              },
              "is_enabled": {
                "type": "integer",
                "format": "int32",
                "description": "is_enabled"
              },
              "is_collapsible": {
                "type": "integer",
                "format": "int32",
                "description": "is_collapsible"
              },
              "name": {
                "type": "string",
                "description": "name"
              },
              "workflow_id": {
                "type": "integer",
                "format": "int32",
                "description": "workflow_id"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"uploadAttachmentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "card_id": {
				"type": "integer",
				"title": "Card Id",
				"description": "Internal Card ID"
			  },
			  "file_name": {
                "type": "string",
				"title": "File Name",
                "description": "Name of the file to be uploaded"
              }
            }
          },
          "description": "data"
        }
      }
    },
	"archiveCardBodySchema": {
      "type": "object",
      "properties": {
        "is_archived": {
          "type": "integer",
          "description": "Select Action",
          "title": "Action",
		  "enum": [
			0,
			1
		  ],
          "x-ms-enum-values": [
            {
              "displayName": "Archive",
              "value": 1
            },
            {
              "displayName": "Unarchive",
              "value": 0
            }
          ]
        }			
      },
	  "required": [
		"is_archived"
	  ]
    },
	"blockCardBodySchema": {
      "type": "object",
      "properties": {
		"block_reason": {
		  "type": "object",
		  "properties": {
			"reason_id": {
			  "type": "string",
			  "description": "Select Block Reason",
			  "title": "Block Reason",
			  "x-ms-dynamic-values": {
				"operationId": "GetBlockReasons",
				"value-path": "reason_id",
				"value-collection": "data",
				"value-title": "name",
				"parameters": {
				  "board_id": {
					"parameter": "board_id"
				  }
				}
			  }
			},
			"comment": {
			  "type": "string",
			  "description": "Add Comment to the Block Reason",
			  "title": "Comment",
			  "x-ms-visibility": "important"
			}
		  },
		  "required": [
		    "reason_id"
		  ]
		}
	  },
	  "required": [
		"block_reason"
	  ]
    },
	"createCardBodySchema": {
      "type": "object",
      "properties": {
		"board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"workflow_id": {
		  "type": "integer",
		  "description": "Workflow must be selected from dropdown",
		  "title": "Workflow",
		  "x-ms-dynamic-list": {
			"operationId": "GetWorkflows_V2",
			"itemsPath": "data",
			"itemValuePath": "workflow_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
        "template_id": {
          "type": "integer",
          "description": "Select Template",
          "title": "Template",
		  "x-ms-dynamic-list": {
			"operationId": "GetTemplates",
			"itemsPath": "data",
			"itemValuePath": "template_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  },
		  "x-ms-visibility": "advanced"
		},
		"column_id": {
          "description": "Select Column or Enter Column Name or ID as a Custom Value",
          "title": "Column",
		  "x-ms-dynamic-list": {
			"operationId": "GetColumns_V2",
			"itemsPath": "data",
			"itemValuePath": "column_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		},
		"lane_id": {
          "description": "Select Lane or Enter Lane Name or ID as a Custom Value",
          "title": "Lane",
		  "x-ms-dynamic-list": {
			"operationId": "GetLanes_V2",
			"itemsPath": "data",
			"itemValuePath": "lane_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		},
        "title": {
          "type": "string",
          "description": "Card Title",
          "title": "Title"
        },
        "description": {
          "type": "string",
          "description": "Card Description",
          "title": "Description",
		  "x-ms-visibility": "important"
        },
        "custom_id": {
          "type": "string",
          "description": "Custom Card ID",
          "title": "Custom ID",
		  "x-ms-visibility": "important"
        },
		"owner_user_id": {
          "type": "integer",
          "description": "Select Card Owner",
          "title": "Owner",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetUsers",
			"itemsPath": "data",
			"itemValuePath": "user_id",
			"itemTitlePath": "username",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"reporter_user_id": {
          "type": "integer",
          "description": "Select reporter from Businessmap users",
          "title": "Reporter User",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetUsers",
			"itemsPath": "data",
			"itemValuePath": "user_id",
			"itemTitlePath": "username",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"reporter_email": {
          "type": "string",
          "description": "Enter Reporter email address, only if no user is selected above",
          "title": "Reporter Email",
		  "x-ms-visibility": "important"
        },
		"type_id": {
          "type": "integer",
          "description": "Select Card Type",
          "title": "Type",
		  "x-ms-visibility": "advanced",
		  "x-ms-dynamic-list": {
			"operationId": "GetTypes_V2",
			"itemsPath": "data",
			"itemValuePath": "type_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"size": {
		  "type": "number",
		  "format": "double",
          "description": "Card Size",
          "title": "Card Size",
		  "x-ms-visibility": "important"
		},
		"priority": {
          "type": "integer",
          "description": "Select Priority",
          "title": "Priority",
		  "x-ms-visibility": "advanced",
		  "enum": [
			1,
			2,
			3,
			4
		  ],
          "x-ms-enum-values": [
            {
              "displayName": "Critical",
              "value": 1
            },
            {
              "displayName": "High",
              "value": 2
            },
			{
              "displayName": "Average",
              "value": 3
            },
            {
              "displayName": "Low",
              "value": 4
            }
          ]
		},
		"color": {
          "type": "string",
          "description": "Color (Hex, e.g. #000000)",
          "title": "Color",
		  "x-ms-visibility": "advanced"
		},
		"deadline": {
          "type": "string",
          "description": "Deadline (Format: YYYY-MM-DD)",
          "title": "Deadline",
		  "x-ms-visibility": "advanced"
		},
		"planned_start_date": {
          "type": "string",
          "description": "Planned Start Date (Format: YYYY-MM-DD) (Initiatives Only)",
          "title": "Planned Start Date",
		  "x-ms-visibility": "advanced"
		},
		"planned_end_date": {
          "type": "string",
          "description": "Planned End Date (Format: YYYY-MM-DD) (Initiatives Only)",
          "title": "Planned End Date",
		  "x-ms-visibility": "advanced"
		},
		"actual_start_time": {
          "type": "string",
          "description": "Actual Start Time (Format: YYYY-MM-DDTHH:mm:ssZ) (Initiatives Only)",
          "title": "Actual Start Time",
		  "x-ms-visibility": "advanced"
		},
		"actual_end_time": {
          "type": "string",
          "description": "Actual End Time (Format: YYYY-MM-DDTHH:mm:ssZ) (Initiatives Only)",
          "title": "Actual End Time",
		  "x-ms-visibility": "advanced"
		},
		"stickers": {
		  "type": "string",
          "description": "Select stickers or add them as text separated with comma",
          "title": "Stickers",
		  "x-ms-visibility": "internal"
		},
		"missing_stickers": {
		  "type": "integer",
		  "description": "Select desired behaviour when a sticker is missing",
		  "title": "Missing Stickers",
		  "x-ms-visibility": "internal",
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing stickers and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing stickers",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		},
		"tags": {
		  "type": "string",
          "description": "Select tags or add them as text separated with comma",
          "title": "Tags",
		  "x-ms-visibility": "internal"
		},
		"missing_tags": {
		  "type": "integer",
		  "description": "Select desired behaviour when a tag is missing",
		  "title": "Missing Tags",
		  "x-ms-visibility": "internal",
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing tags and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing tags",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		},
		"custom_fields_to_add_or_update": {
		  "type": "array",
		  "x-ms-summary": "Custom Field",
		  "x-ms-visibility": "internal",
		  "items": {
			"type": "object",
			"properties": {
			  "field_id": {
				"type": "integer",
				"description": "Select Custom Field",
				"title": "Name",
				"x-ms-visibility": "internal",
				"x-ms-dynamic-list": {
				  "operationId": "GetCustomFields",
				  "itemsPath": "data",
				  "itemValuePath": "field_id",
				  "itemTitlePath": "name",
				  "parameters": {
					"board_id": {
					  "parameterReference": "body/board_id"
					}
				  }
				}
			  },
			  "value": {
				"type": "string",
				"description": "Custom Field Value",
				"title": "Value",
				"x-ms-visibility": "internal"
			  }
			}
		  }
		}
      },
	  "required": [
		"board_id",
		"title",
		"workflow_id",
		"column_id",
		"lane_id"
	  ]
    },
	"createCommentBodySchema": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Comment",
          "title": "Comment"
        }
      },
	  "required": [
		"text"
	  ]
    },
	"createSubtaskBodySchema": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Subtask Description",
          "title": "Description"
        },
		"owner_user_id": {
          "type": "string",
          "description": "Select user",
          "title": "Owner",
		  "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "GetUsers",
            "value-path": "user_id",
            "value-collection": "data",
            "value-title": "username",
			"parameters": {
			  "board_id": {
				"parameter": "board_id"
			  }
			}
          }
        },
		"is_finished":{
		  "type": "integer",
		  "description": "Select Subtask Status",
		  "title": "Subtask Status",
		  "x-ms-visibility": "advanced",
		  "enum": [
			0,
			1
		  ],
          "x-ms-enum-values": [
            {
              "displayName": "Completed",
              "value": 1
            },
            {
              "displayName": "Not Completed",
              "value": 0
            }
          ]
		  
		}	
      },
	  "required": [
		"description"
	  ]
    },
	"discardCardBodySchema": {
      "type": "object",
      "properties": {
        "is_discarded": {
          "type": "integer",
          "description": "Select Action",
          "title": "Action",
		  "enum": [
			0,
			1
		  ],
          "x-ms-enum-values": [
            {
              "displayName": "Discard",
              "value": 1
            },
            {
              "displayName": "Restore",
              "value": 0
            }
          ]
        }			
      },
	  "required": [
		"is_discarded"
	  ]
    },
	"linkCardBodySchema": {
      "type": "object",
      "properties": {
		"link_type": {
		  "type": "string",
		  "description": "Select Link Type",
		  "title": "Will be linked as",
		  "enum": [
			"child",
			"parent",
			"relative",
			"predecessor",
			"successor"
		  ],
		  "x-ms-enum-values": [
			{
			  "displayName": "Child",
			  "value": "parent"
			},
			{
			  "displayName": "Parent",
			  "value": "child"
			},
			{
			  "displayName": "Relative",
			  "value": "relative"
			},
			{
			  "displayName": "Predecessor",
			  "value": "successor"
			},
			{
			  "displayName": "Successor",
			  "value": "predecessor"
			}
		  ]
		},
		"linked_card_id": {
		  "type": "integer",
		  "description": "Card id to link to current card",
		  "title": "To card id"
		}		
	  },
	  "required": [
		"linked_card_id",
		"link_type"
	  ]
    },
	"logTimeBodySchema": {
      "type": "object",
      "properties": {
        "card_id": {
          "type": "string",
          "description": "Internal Card Id",
          "title": "Card ID",
		  "x-ms-visibility": "important"
        },
	    "time_unit": {
	      "type": "string",
	      "description": "Time Unit",
	      "title": "Time Unit",
		  "x-ms-visibility": "important",
	      "enum": [
	    	"Seconds",
	    	"Minutes",
	    	"Hours",
	    	"Days"
	      ]
	    },
        "time": {
          "type": "integer",
          "description": "Duration",
          "title": "Duration",
		  "x-ms-visibility": "important"
        },
        "comment": {
          "type": "string",
          "description": "Comment",
          "title": "Comment",
		  "x-ms-visibility": "important"
        }
      },
	  "required": [
	    "card_id",
	    "time_unit",
	    "time"			
	  ]
    },
	"moveCardBodySchema": {
      "type": "object",
      "properties": {
        "board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"workflow_id": {
		  "type": "integer",
		  "description": "Workflow must be selected from dropdown",
		  "title": "Workflow",
		  "x-ms-dynamic-list": {
			"operationId": "GetWorkflows_V2",
			"itemsPath": "data",
			"itemValuePath": "workflow_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"column_id": {
          "description": "Select Column or Enter Column Name or ID as a Custom Value",
          "title": "Column",
		  "x-ms-dynamic-list": {
			"operationId": "GetColumns_V2",
			"itemsPath": "data",
			"itemValuePath": "column_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		},
		"lane_id": {
          "description": "Select Lane or Enter Lane Name or ID as a Custom Value",
          "title": "Lane",
		  "x-ms-dynamic-list": {
			"operationId": "GetLanes_V2",
			"itemsPath": "data",
			"itemValuePath": "lane_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		}		
      },
	  "required": [
		"board_id",
		"workflow_id",
		"column_id",
		"lane_id"
	  ]
    },
	"setCustomFieldBodySchema": {
      "type": "object",
      "properties": {
		"board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board ID",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"field_id": {
		  "type": "integer",
		  "description": "Select Custom Field",
		  "title": "Field Name",
		  "x-ms-dynamic-list": {
			"operationId": "GetCustomFields",
			"itemsPath": "data",
			"itemValuePath": "field_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"values": {
		  "type": "string",
		  "description": "Select from dropdown or enter custom values separated with a comma",
		  "title": "Value",
		  "x-ms-dynamic-list": {
			"operationId": "GetCustomFieldValues",
			"itemsPath": "data",
			"itemValuePath": "value",
			"itemTitlePath": "value",
			"parameters": {
			  "field_id": {
				"parameterReference": "body/field_id"
			  }
			}
		  }
		}
	  },
	  "required": [
		"board_id",
		"field_id",
		"values"
	  ]
    },
	"setStickersBodySchema": {
      "type": "object",
      "properties": {
		"board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"action": {
		  "type": "string",
		  "description": "Choose to set or unset stickers",
		  "title": "Action",
          "enum": [
            "set",
			"unset"
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Set",
              "value": "set"
            },
            {
              "displayName": "Unset",
              "value": "unset"
            }
          ]
		},
		"stickers": {
		  "type": "string",
          "description": "Select a single sticker from dropdown or enter multiple stickers separated with a comma",
          "title": "Stickers",
		  "x-ms-dynamic-list": {
			"operationId": "GetStickers",
			"itemsPath": "data",
			"itemValuePath": "name",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"missing_stickers": {
		  "type": "integer",
		  "description": "Select desired behaviour when a sticker is missing",
		  "title": "If Sticker is Missing",
		  "x-ms-visibility": "advanced",
		  "default": 1,
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing stickers and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing stickers",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		}
	  },
	  "required": [
	    "board_id",
		"action",
		"stickers"
	  ]
    },
	"setTagsBodySchema": {
      "type": "object",
      "properties": {
		"board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"action": {
		  "type": "string",
		  "description": "Choose to set or unset tags",
		  "title": "Action",
          "enum": [
            "set",
			"unset"
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Set",
              "value": "set"
            },
            {
              "displayName": "Unset",
              "value": "unset"
            }
          ]
		},
		"tags": {
		  "type": "string",
          "description": "Select a single tag from dropdown or enter multiple tags separated with a comma",
          "title": "Tags",
		  "x-ms-dynamic-list": {
			"operationId": "GetTags",
			"itemsPath": "data",
			"itemValuePath": "name",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"missing_tags": {
		  "type": "integer",
		  "description": "Select desired behaviour when a tag is missing",
		  "title": "If Tag is Missing",
		  "x-ms-visibility": "advanced",
		  "default": 1,
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing tags and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing tags",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		}
	  },
	  "required": [
	    "board_id",
		"action",
		"tags"
	  ]
    },
	"unlinkCardBodySchema": {
      "type": "object",
      "properties": {
		"link_type": {
		  "type": "string",
		  "description": "Select link type",
		  "title": "Linked as",
		  "enum": [
		    "child",
		    "parent",
		    "relative",
		    "predecessor",
		    "successor"
		  ],
		  "x-ms-enum-values": [
		    {
		  	  "displayName": "Child",
		  	  "value": "parent"
		    },
		    {
		  	  "displayName": "Parent",
		  	  "value": "child"
		    },
		    {
		  	  "displayName": "Relative",
		  	  "value": "relative"
		    },
		    {
		  	  "displayName": "Predecessor",
		  	  "value": "successor"
		    },
		    {
		  	  "displayName": "Successor",
		  	  "value": "predecessor"
		    }
		  ]
		},
		"linked_card_id": {
		  "type": "integer",
		  "description": "Enter linked card id",
		  "title": "To Card Id"
		}
	  },
	  "required": [
		"linked_card_id",
		"link_type"
	  ]
    },
	"updateCardBodySchema": {
      "type": "object",
      "properties": {
		"board_id": {
		  "type": "integer",
		  "description": "Board must be selected from dropdown",
		  "title": "Board",
		  "x-ms-dynamic-values": {
			"operationId": "GetBoards_V2",
			"value-path": "board_id",
			"value-collection": "data",
			"value-title": "name"
		  }
		},
		"workflow_id": {
		  "type": "integer",
		  "description": "Workflow must be selected from dropdown",
		  "title": "Workflow",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetWorkflows_V2",
			"itemsPath": "data",
			"itemValuePath": "workflow_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
        "template_id": {
          "type": "integer",
          "description": "Select Template",
          "title": "Template",
		  "x-ms-dynamic-list": {
			"operationId": "GetTemplates",
			"itemsPath": "data",
			"itemValuePath": "template_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  },
		  "x-ms-visibility": "advanced"
		},
		"column_id": {
          "description": "Select Column or Enter Column Name or ID as a Custom Value",
          "title": "Column",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetColumns_V2",
			"itemsPath": "data",
			"itemValuePath": "column_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		},
		"lane_id": {
          "description": "Select Lane or Enter Lane Name or ID as a Custom Value",
          "title": "Lane",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetLanes_V2",
			"itemsPath": "data",
			"itemValuePath": "lane_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  },
			  "workflow_id": {
				"parameterReference": "body/workflow_id"
			  }
			}
		  }
		},
        "title": {
          "type": "string",
          "description": "Card Title",
          "title": "Title",
		  "x-ms-visibility": "important"
        },
        "description": {
          "type": "string",
          "description": "Card Description",
          "title": "Description",
		  "x-ms-visibility": "important"
        },
        "custom_id": {
          "type": "string",
          "description": "Custom ID",
          "title": "Custom ID",
		  "x-ms-visibility": "important"
        },
		"owner_user_id": {
          "type": "integer",
          "description": "Select Card Owner",
          "title": "Owner",
		  "x-ms-visibility": "important",
		  "x-ms-dynamic-list": {
			"operationId": "GetUsers",
			"itemsPath": "data",
			"itemValuePath": "user_id",
			"itemTitlePath": "username",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"type_id": {
          "type": "integer",
          "description": "Select Card Type",
          "title": "Type",
		  "x-ms-visibility": "advanced",
		  "x-ms-dynamic-list": {
			"operationId": "GetTypes_V2",
			"itemsPath": "data",
			"itemValuePath": "type_id",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"size": {
          "type": "number",
		  "format": "double",
          "description": "Card Size",
          "title": "Card Size",
		  "x-ms-visibility": "important"
		},
		"priority": {
          "type": "integer",
          "description": "Select Priority",
          "title": "Priority",
		  "x-ms-visibility": "advanced",
          "enum": [
			1,
			2,
			3,
			4
		  ],
          "x-ms-enum-values": [
            {
              "displayName": "Critical",
              "value": 1
            },
            {
              "displayName": "High",
              "value": 2
            },
			{
              "displayName": "Average",
              "value": 3
            },
            {
              "displayName": "Low",
              "value": 4
            }
          ]
		},
		"color": {
          "type": "string",
          "description": "Color (Hex, e.g. #000000)",
          "title": "Color",
		  "x-ms-visibility": "advanced"
		},
		"deadline": {
          "type": "string",
          "description": "Deadline (Format: YYYY-MM-DD)",
          "title": "Deadline",
		  "x-ms-visibility": "advanced"
		},
		"planned_start_date": {
          "type": "string",
          "description": "Planned Start Date (Format: YYYY-MM-DD) (Initiatives Only)",
          "title": "Planned Start Date",
		  "x-ms-visibility": "advanced"
		},
		"planned_end_date": {
          "type": "string",
          "description": "Planned End Date (Format: YYYY-MM-DD) (Initiatives Only)",
          "title": "Planned End Date",
		  "x-ms-visibility": "advanced"
		},
		"actual_start_time": {
          "type": "string",
          "description": "Actual Start Time (Format: YYYY-MM-DDTHH:mm:ssZ) (Initiatives Only)",
          "title": "Actual Start Time",
		  "x-ms-visibility": "advanced"
		},
		"actual_end_time": {
          "type": "string",
          "description": "Actual End Time (Format: YYYY-MM-DDTHH:mm:ssZ) (Initiatives Only)",
          "title": "Actual End Time",
		  "x-ms-visibility": "advanced"
		},
		"stickers": {
		  "type": "string",
          "description": "Select stickers or add them as text separated with comma",
          "title": "Stickers",
		  "x-ms-visibility": "advanced",
		  "x-ms-dynamic-list": {
			"operationId": "GetStickers",
			"itemsPath": "data",
			"itemValuePath": "name",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"missing_stickers": {
		  "type": "integer",
		  "description": "Select desired behaviour when a sticker is missing",
		  "title": "If Sticker is Missing",
		  "x-ms-visibility": "internal",
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing stickers and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing stickers",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		},
		"tags": {
		  "type": "string",
          "description": "Select tags or add them as text separated with comma",
          "title": "Tags",
		  "x-ms-visibility": "advanced",
		  "x-ms-dynamic-list": {
			"operationId": "GetTags",
			"itemsPath": "data",
			"itemValuePath": "name",
			"itemTitlePath": "name",
			"parameters": {
			  "board_id": {
				"parameterReference": "body/board_id"
			  }
			}
		  }
		},
		"missing_tags": {
		  "type": "integer",
		  "description": "Select desired behaviour when a tag is missing",
		  "title": "If Tag is Missing",
		  "x-ms-visibility": "internal",
          "enum": [
            1,
			2,
			3
          ],
          "x-ms-enum-values": [
            {
              "displayName": "Create missing tags and assign to board",
              "value": 1
            },
            {
              "displayName": "Ignore missing tags",
              "value": 2
            },
            {
              "displayName": "Return error",
              "value": 3
            }
          ]
		},
		"custom_fields_to_add_or_update": {
		  "type": "array",
		  "x-ms-summary": "Custom Field",
		  "x-ms-visibility": "advanced",
		  "items": {
			"type": "object",
			"properties": {
			  "field_id": {
				"type": "integer",
				"description": "Select Custom Field",
				"title": "Name",
				"x-ms-visibility": "advanced",
				"x-ms-dynamic-list": {
				  "operationId": "GetCustomFields",
				  "itemsPath": "data",
				  "itemValuePath": "field_id",
				  "itemTitlePath": "name",
				  "parameters": {
					"board_id": {
					  "parameterReference": "body/board_id"
					}
				  }
				}
			  },
			  "value": {
				"type": "string",
				"description": "Custom Field Value",
				"title": "Value",
				"x-ms-visibility": "advanced"
			  }
			}
		  }
		}
      },
	  "required": [
	    "board_id"
	  ]
    },
	"uploadAttachmentBodySchema": {
      "type": "object",
      "properties": {
		"file_name": {
		  "type": "string",
		  "description": "Enter File Name",
		  "title": "File Name"
		},
		"content": {
		  "type": "string",
		  "format": "binary",
		  "description": "Provide File Content (base64)",
		  "title": "Content"
		}
      },
	  "required": [
		"file_name",
		"content"
	  ]
    }
  },
  "parameters": {
	"actionHeader": {
      "name": "action",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Action",
	  "description": "Select Action"
    },
	"attachmentIdHeader": {
	  "name": "attachment_id",
	  "in": "header",
	  "type": "integer",
	  "x-ms-summary": "File name",
	  "required": true,
	  "description": "Select Attachment or enter Attachment ID from Get Card Attachments",
	  "x-ms-visibility": "important",
	  "x-ms-dynamic-values": {
	    "operationId": "GetCardAttachments",
	    "value-path": "id",
	    "value-collection": "data",
	    "value-title": "file_name",
	    "parameters": {
	  	  "card_id": {
			"parameter": "card_id"
	  	  }
	    }
	  }
	},
	"boardIdHeader": {
      "name": "board_id",
      "in": "header",
      "required": true,
      "type": "integer",
      "x-ms-visibility": "important",
      "x-ms-summary": "Board",
	  "description": "Board must be selected from dropdown",
	  "x-ms-dynamic-values": {
        "operationId": "GetBoards_V2",
		"value-path": "board_id",
		"value-collection": "data",
		"value-title": "name"
	  }
    },
	"cardIdHeader": {
	  "name": "card_id",
	  "in": "header",
	  "type": "integer",
	  "x-ms-summary": "Card ID",
	  "x-ms-visibility": "important",
	  "required": true,
	  "description": "Enter Card ID"
	},
	"encodingHeader": {
	  "name": "encoding",
	  "in": "header",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "base64"
	},
	"workflowIdHeader": {
	  "name": "workflow_id",
      "in": "header",
      "required": false,
      "type": "integer",
      "x-ms-visibility": "advanced",
      "x-ms-summary": "Workflow",
	  "description": "Select Workflow"
    },
	"boardIdPath": {
      "name": "board_id",
      "in": "path",
      "required": true,
      "type": "integer",
      "description": "The Board Path Parameter",
      "x-ms-url-encoding": "single",
      "x-ms-summary": "Board ID"
	},
	"cardIdPath": {
	  "name": "card_id",
      "in": "path",
      "required": true,
      "type": "integer",
      "description": "Enter Card ID",
      "x-ms-url-encoding": "single",
	  "x-ms-summary": "Card ID"
    },
	"objectPath": {
	  "name": "item",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Select Object Type",
      "x-ms-url-encoding": "single",
	  "x-ms-summary": "Item",
	  "enum": [
        "boards",
		"workflows",
		"lanes",
		"columns",
		"users",
		"cardTemplates",
		"cardTypes",
		"stickers",
		"tags",
		"blockReasons"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Board",
          "value": "boards"
        },
        {
          "displayName": "Workflow",
          "value": "workflows"
        },
        {
          "displayName": "Lane",
          "value": "lanes"
        },
		{
          "displayName": "Column",
          "value": "columns"
        },
        {
          "displayName": "User",
          "value": "users"
        },
        {
          "displayName": "Template",
          "value": "cardTemplates"
        },
		{
          "displayName": "Type",
          "value": "cardTypes"
        },
        {
          "displayName": "Sticker",
          "value": "stickers"
        },
        {
          "displayName": "Tag",
          "value": "tags"
        },
        {
          "displayName": "Block Reason",
          "value": "blockReasons"
        }
      ]
    },
	"idPath": {
	  "name": "id",
      "in": "path",
      "required": true,
      "type": "integer",
      "description": "Enter Object ID",
      "x-ms-url-encoding": "single",
	  "x-ms-summary": "ID"
    },
	"unlinkCardIdPath": {
	  "name": "card_id",
      "in": "path",
      "required": true,
      "type": "integer",
      "description": "Enter Card ID",
      "x-ms-url-encoding": "single",
	  "x-ms-summary": "Unlink Card ID"
    },
	"fieldIdPath": {
      "name": "field_id",
      "in": "path",
      "required": true,
      "type": "integer",
      "description": "The field to get the values for",
      "x-ms-summary": "Custom Field",
      "x-ms-url-encoding": "single"
    },
	"boardIdsQuery": {
	  "name": "board_ids",
	  "in": "query",
	  "type": "integer",
	  "x-ms-summary": "Board",
	  "description": "Board must be selected from dropdown",
	  "x-ms-visibility": "important",
	  "x-ms-dynamic-list": {
	    "operationId": "GetBoards_V2",
	    "itemsPath": "data",
	    "itemValuePath": "board_id",
	    "itemTitlePath": "name"
	  }
	},
	"boardIdsQueryRequired": {
	  "name": "board_ids",
	  "in": "query",
	  "required": true,
	  "type": "integer",
	  "x-ms-summary": "Board",
	  "description": "Board must be selected from dropdown",
	  "x-ms-visibility": "important",
	  "x-ms-dynamic-list": {
	    "operationId": "GetBoards_V2",
	    "itemsPath": "data",
	    "itemValuePath": "board_id",
	    "itemTitlePath": "name"
	  }
	},
	"cardStateQuery": {
	  "name": "state",
	  "in": "query",
	  "type": "string",
	  "x-ms-summary": "State",
	  "description": "The state value of cards that you want to get. By default it's the active state.",
	  "x-ms-visibility": "advanced",
	  "default": "active",
	  "enum": [
        "active",
		"archived",
		"discarded"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Active",
          "value": "active"
        },
        {
          "displayName": "Archived",
          "value": "archived"
        },
        {
          "displayName": "Discarded",
          "value": "discarded"
        }
      ]
	},
	"customIdsArrayQuery": {
	  "name": "custom_ids",
	  "in": "query",
	  "type": "array",
	  "x-ms-summary": "Custom Card IDs",
	  "x-ms-visibility": "advanced",
	  "description": "Enter Custom Ids",
	  "items": {
	    "type": "string",
	    "x-ms-visibility": "advanced",
	    "x-ms-summary": "Custom Card ID"
	  }
	},
	"customIdsQuery": {
	  "name": "custom_ids",
	  "in": "query",
	  "type": "string",
	  "x-ms-summary": "Custom Card ID",
	  "description": "Enter Custom Ids",
	  "required": true
	},
	"expandBoardIdsQuery": {
	  "name": "expand",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "board_ids"
	},
	"expandBoardRolesQuery": {
	  "name": "expand",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "board_roles"
	},
	"expandBoardsQuery": {
	  "name": "expand",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "boards"
	},
	"expandCardQuery": {
	  "name": "expand",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "custom_fields,stickers,tag_ids,linked_cards"
	},
	"fieldsCardQuery": {
	  "name": "fields",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "card_id,title,description,custom_id,owner_user_id,type_id,size,priority,color,deadline,reporter,created_at,last_modified,board_id,workflow_id,column_id,lane_id,section,position,is_blocked"
	},
	"isArchivedQuery": {
  	  "name": "is_archived",
	  "in": "query",
	  "type": "integer",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": 0
	},
	"isEnabledQuery": {
	  "name": "is_enabled",
	  "in": "query",
	  "type": "integer",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "1"
	},
	"pageQuery": {
	  "name": "page",
	  "in": "query",
	  "type": "integer",
	  "x-ms-summary": "Page",
	  "x-ms-visibility": "advanced",
	  "description": "Page Number"
	},
	"typesQuery": {
	  "name": "types",
	  "in": "query",
	  "type": "string",
	  "required": true,
	  "x-ms-visibility": "internal",
	  "default": "single_line_text,multi_line_text,number,date,link,dropdown"
	},
	"archiveCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/archiveCardBodySchema"
      }
    },
	"blockCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
	    "$ref": "#/definitions/blockCardBodySchema"
      }
    },
	"createCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/createCardBodySchema"
      }
    },
	"createCommentBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/createCommentBodySchema"
      }
    },
	"createSubtaskBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/createSubtaskBodySchema"
      }
    },
	"discardCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/discardCardBodySchema"
      }
    },
	"linkCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/linkCardBodySchema"
      }
    },
	"logTimeBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/logTimeBodySchema"
      }
    },
	"moveCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/moveCardBodySchema"
      }
    },
	"setCustomFieldBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/setCustomFieldBodySchema"
      }
    },
	"setStickersBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/setStickersBodySchema"
      }
    },
	"setTagsBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/setTagsBodySchema"
      }
    },
	"unlinkCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/unlinkCardBodySchema"
      }
    },
	"updateCardBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/updateCardBodySchema"
	  }
    },
	"uploadAttachmentBody": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/uploadAttachmentBodySchema"
      }
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "apikey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://businessmap.io"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://businessmap.io/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management; Business Intelligence"
    }
  ],
  "x-ms-openai-manifest": []
}
