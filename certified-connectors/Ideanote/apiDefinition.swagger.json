{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Ideanote",
    "description": "Ideanote is the next-generation innovation software that has everything you need to collect, develop, prioritize and act on more of the right ideas.",
    "contact": {
      "name": "Ideanote,",
      "url": "https://help.ideanote.io/",
      "email": "hello@ideanote.io"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://ideanote.io"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://ideanote.io/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Productivity"
    }
  ],
  "host": "api.ideanote.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/missions": {
      "get": {
        "operationId": "ListMissions",
        "summary": "List all missions",
        "description": "List all missions",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Offset",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Limit",
            "x-ms-summary": "Limit"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Missions",
            "schema": {
              "$ref": "#/definitions/Missions"
            }
          }
        }
      }
    },
    "/v1/ideas": {
      "get": {
        "operationId": "ListIdeas",
        "summary": "List all ideas",
        "description": "List all ideas",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Offset",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Limit",
            "x-ms-summary": "Limit"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Ideas",
            "schema": {
              "$ref": "#/definitions/Ideas"
            }
          }
        }
      }
    },
    "/v1/missions/{missionId}/ideas": {
      "get": {
        "operationId": "ListIdeasForMission",
        "summary": "List all ideas for a mission",
        "description": "List all ideas for a mission",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "missionId",
            "in": "path",
            "x-ms-summary": "Mission ID",
            "description": "ID of the mission",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string"
          },
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Offset",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Limit",
            "x-ms-summary": "Limit"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Ideas",
            "schema": {
              "$ref": "#/definitions/Ideas"
            }
          }
        }
      }
    },
    "/v1/ideas/{ideaId}/comments": {
      "get": {
        "operationId": "ListCommentsForIdea",
        "summary": "List all comments for an idea",
        "description": "List all comments for an idea",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "x-ms-summary": "Idea ID",
            "description": "ID of the idea",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string"
          },
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Offset",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Limit",
            "x-ms-summary": "Limit"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        }
      }
    },
    "/v1/users/{userId}": {
      "put": {
        "operationId": "UpdateUser",
        "summary": "Update user",
        "description": "Update a specific user",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "x-ms-summary": "User ID",
            "description": "ID of the user to update",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string"
          },
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "title": "Email Address",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "firstName": {
                  "title": "First Name",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "lastName": {
                  "title": "Last Name",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "operationId": "CreateUser",
        "summary": "Create user",
        "description": "Create a new user on the workspace",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "flat",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "true",
            "x-ms-visibility": "internal",
            "description": "Flat response",
            "x-ms-summary": "Flat response"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Offset",
            "x-ms-summary": "Offset"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Limit",
            "x-ms-summary": "Limit"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "send_invitation",
            "x-ms-summary": "Send invitation email",
            "description": "Choose if the user should receive an invitation email to sign up",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "title": "Email Address",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "firstName": {
                  "title": "First Name",
                  "type": "string",
                  "x-ms-visibility": "important"
                },
                "lastName": {
                  "title": "Last Name",
                  "type": "string",
                  "x-ms-visibility": "important"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "email"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "201": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/webhooks/{hookId}": {
      "delete": {
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "ID of the Hook being deleted",
            "required": true,
            "x-ms-url-encoding": "single",
            "type": "string"
          }
        ],
        "x-ms-visibility": "internal",
        "description": "Deletes a webhook",
        "summary": "Deletes a webhook",
        "operationId": "DeleteWebhook",
        "responses": {
          "default": {
            "description": "No content"
          }
        }
      }
    },
    "/webhooks/finish_rating": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/FinishRating"
        }
      },
      "post": {
        "operationId": "FinishRating",
        "summary": "When someone rates an idea",
        "description": "When someone rates an idea",
        "x-ms-trigger": "single",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "finish_rating",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/new_idea": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/NewIdea"
        }
      },
      "post": {
        "operationId": "NewIdea",
        "summary": "When an idea is created",
        "description": "When an idea is created",
        "x-ms-trigger": "single",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "new_idea",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/new_user": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/NewUser"
        }
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "When a user is created",
        "description": "When a user is created",
        "operationId": "NewUser",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "new_user",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/new_comment": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/NewComment"
        }
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "When a comment is created",
        "description": "When a comment is created",
        "operationId": "NewComment",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "new_comment",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/new_like": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/NewLike"
        }
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "When an idea or comment is liked",
        "description": "When an idea or comment is liked",
        "operationId": "NewLike",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "new_like",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/updated_idea_status": {
      "x-ms-notification-content": {
        "schema": {
          "$ref": "#/definitions/UpdatedIdeaStatus"
        }
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "When the status of an idea is changed",
        "description": "When the status of an idea is changed",
        "operationId": "UpdatedIdeaStatus",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "updated_idea_status",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    },
    "/webhooks/updated_idea_phase": {
      "x-ms-notification-content": {
        "description": "Idea",
        "schema": {
          "$ref": "#/definitions/UpdatedIdeaPhase"
        }
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "When the phase of an idea is changed",
        "description": "When the phase of an idea is changed",
        "operationId": "UpdatedIdeaPhase",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetUrl": {
                  "type": "string",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "kind": {
                  "type": "string",
                  "default": "updated_idea_phase",
                  "x-ms-visibility": "internal"
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "kind",
                "targetUrl"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "201": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Model": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id"
        }
      }
    },
    "NewIdea": {
      "type": "object",
      "properties": {
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "UpdatedIdeaPhase": {
      "type": "object",
      "properties": {
        "phase_from_id": {
          "type": "string",
          "x-ms-summary": "Phase From Id"
        },
        "phase_from_name": {
          "type": "string",
          "x-ms-summary": "Phase From Name"
        },
        "phase_to_id": {
          "type": "string",
          "x-ms-summary": "Phase To Id"
        },
        "phase_to_name": {
          "type": "string",
          "x-ms-summary": "Phase To Name"
        },
        "phase_updated_by_id": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Id"
        },
        "phase_updated_by_email": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Email"
        },
        "phase_updated_by_alias": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Alias"
        },
        "phase_updated_by_first_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By First Name"
        },
        "phase_updated_by_last_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Last Name"
        },
        "phase_updated_by_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Name"
        },
        "phase_updated_by_department": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Department"
        },
        "phase_updated_by_country": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Country"
        },
        "phase_updated_by_url": {
          "type": "string",
          "x-ms-summary": "Phase Updated By URL"
        },
        "phase_updated_by_url_path": {
          "type": "string",
          "x-ms-summary": "Phase Updated By URL Path"
        },
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "UpdatedIdeaStatus": {
      "type": "object",
      "properties": {
        "status_from_id": {
          "type": "string",
          "x-ms-summary": "Status From Id"
        },
        "status_from_kind": {
          "type": "string",
          "x-ms-summary": "Status From Kind"
        },
        "status_from_title": {
          "type": "string",
          "x-ms-summary": "Status From Title"
        },
        "status_from_text": {
          "type": "string",
          "x-ms-summary": "Status From Text"
        },
        "status_to_id": {
          "type": "string",
          "x-ms-summary": "Status To Id"
        },
        "status_to_kind": {
          "type": "string",
          "x-ms-summary": "Status To Kind"
        },
        "status_to_title": {
          "type": "string",
          "x-ms-summary": "Status To Title"
        },
        "status_to_text": {
          "type": "string",
          "x-ms-summary": "Status To Text"
        },
        "status_updated_by_id": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Id"
        },
        "status_updated_by_email": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Email"
        },
        "status_updated_by_alias": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Alias"
        },
        "status_updated_by_first_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By First Name"
        },
        "status_updated_by_last_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Last Name"
        },
        "status_updated_by_name": {
          "type": "string",
          "x-ms-summary": "Phase Updated By Name"
        },
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "NewComment": {
      "type": "object",
      "properties": {
        "comment_id": {
          "type": "string",
          "x-ms-summary": "Comment Id"
        },
        "comment_text": {
          "type": "string",
          "x-ms-summary": "Comment Text"
        },
        "comment_url": {
          "type": "string",
          "x-ms-summary": "Comment URL"
        },
        "comment_url_path": {
          "type": "string",
          "x-ms-summary": "Comment URL Path"
        },
        "comment_anonymity": {
          "type": "string",
          "x-ms-summary": "Comment Anonymity"
        },
        "comment_sender_id": {
          "type": "string",
          "x-ms-summary": "Comment Sender Id"
        },
        "comment_sender_email": {
          "type": "string",
          "x-ms-summary": "Comment Sender Email"
        },
        "comment_sender_alias": {
          "type": "string",
          "x-ms-summary": "Comment Sender Alias"
        },
        "comment_sender_first_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Last Name"
        },
        "comment_sender_last_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender First Name"
        },
        "comment_sender_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Name"
        },
        "comment_sender_department": {
          "type": "string",
          "x-ms-summary": "Comment Sender Department"
        },
        "comment_sender_country": {
          "type": "string",
          "x-ms-summary": "Comment Sender Country"
        },
        "comment_sender_url": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL"
        },
        "comment_sender_url_path": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL Path"
        },
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "x-ms-summary": "User Id"
        },
        "user_email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "user_alias": {
          "type": "string",
          "x-ms-summary": "User Alias"
        },
        "user_first_name": {
          "type": "string",
          "x-ms-summary": "User Last Name"
        },
        "user_last_name": {
          "type": "string",
          "x-ms-summary": "User First Name"
        },
        "user_name": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "user_department": {
          "type": "string",
          "x-ms-summary": "User Department"
        },
        "user_country": {
          "type": "string",
          "x-ms-summary": "User Country"
        },
        "user_url": {
          "type": "string",
          "x-ms-summary": "User URL"
        },
        "user_url_path": {
          "type": "string",
          "x-ms-summary": "User URL Path"
        }
      }
    },
    "FinishRating": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "x-ms-summary": "User Id"
        },
        "user_email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "user_alias": {
          "type": "string",
          "x-ms-summary": "User Alias"
        },
        "user_first_name": {
          "type": "string",
          "x-ms-summary": "User Last Name"
        },
        "user_last_name": {
          "type": "string",
          "x-ms-summary": "User First Name"
        },
        "user_name": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "user_department": {
          "type": "string",
          "x-ms-summary": "User Department"
        },
        "user_country": {
          "type": "string",
          "x-ms-summary": "User Country"
        },
        "user_url": {
          "type": "string",
          "x-ms-summary": "User URL"
        },
        "user_url_path": {
          "type": "string",
          "x-ms-summary": "User URL Path"
        },
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "NewLike": {
      "type": "object",
      "properties": {
        "like_id": {
          "type": "string",
          "x-ms-summary": "Like Id"
        },
        "like_kind": {
          "type": "string",
          "x-ms-summary": "Like Kind"
        },
        "like_sender_id": {
          "type": "string",
          "x-ms-summary": "Liked By Id"
        },
        "like_sender_email": {
          "type": "string",
          "x-ms-summary": "Liked By Email"
        },
        "like_sender_alias": {
          "type": "string",
          "x-ms-summary": "Liked By Alias"
        },
        "like_sender_first_name": {
          "type": "string",
          "x-ms-summary": "Liked By Last Name"
        },
        "like_sender_last_name": {
          "type": "string",
          "x-ms-summary": "Liked By First Name"
        },
        "like_sender_name": {
          "type": "string",
          "x-ms-summary": "Liked By Name"
        },
        "like_sender_department": {
          "type": "string",
          "x-ms-summary": "Liked By Department"
        },
        "like_sender_country": {
          "type": "string",
          "x-ms-summary": "Liked By Country"
        },
        "like_sender_url": {
          "type": "string",
          "x-ms-summary": "Liked By URL"
        },
        "like_sender_url_path": {
          "type": "string",
          "x-ms-summary": "Liked By URL Path"
        },
        "comment_id": {
          "type": "string",
          "x-ms-summary": "Comment Id"
        },
        "comment_text": {
          "type": "string",
          "x-ms-summary": "Comment Text"
        },
        "comment_url": {
          "type": "string",
          "x-ms-summary": "Comment URL"
        },
        "comment_anonymity": {
          "type": "string",
          "x-ms-summary": "Comment Anonymity"
        },
        "comment_sender_id": {
          "type": "string",
          "x-ms-summary": "Comment Sender Id"
        },
        "comment_sender_email": {
          "type": "string",
          "x-ms-summary": "Comment Sender Email"
        },
        "comment_sender_alias": {
          "type": "string",
          "x-ms-summary": "Comment Sender Alias"
        },
        "comment_sender_first_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Last Name"
        },
        "comment_sender_last_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender First Name"
        },
        "comment_sender_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Name"
        },
        "comment_sender_department": {
          "type": "string",
          "x-ms-summary": "Comment Sender Department"
        },
        "comment_sender_country": {
          "type": "string",
          "x-ms-summary": "Comment Sender Country"
        },
        "comment_sender_url": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL"
        },
        "comment_sender_url_path": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL Path"
        },
        "idea_id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "idea_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "idea_submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "idea_content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "idea_content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "idea_content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "idea_content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "idea_language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "idea_stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "idea_stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "idea_stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "idea_status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "idea_status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "idea_status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "idea_status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "idea_phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "idea_phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "idea_owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "idea_owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "idea_owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "idea_owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "idea_owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "idea_owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "idea_owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "idea_owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "idea_owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "idea_owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "idea_mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "idea_mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "idea_mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "idea_mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "idea_mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "idea_mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "idea_workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "idea_workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "idea_workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "User Id"
        },
        "email": {
          "type": "string",
          "x-ms-summary": "User Email"
        },
        "alias": {
          "type": "string",
          "x-ms-summary": "User Alias"
        },
        "first_name": {
          "type": "string",
          "x-ms-summary": "User Last Name"
        },
        "last_name": {
          "type": "string",
          "x-ms-summary": "User First Name"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "User Name"
        },
        "department": {
          "type": "string",
          "x-ms-summary": "User Department"
        },
        "country": {
          "type": "string",
          "x-ms-summary": "User Country"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "User URL"
        },
        "url_path": {
          "type": "string",
          "x-ms-summary": "User URL Path"
        }
      }
    },
    "Mission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Mission Id"
        },
        "friendly_id": {
          "type": "integer",
          "x-ms-summary": "Mission Friendly Id"
        },
        "title": {
          "type": "string",
          "x-ms-summary": "Mission Title"
        },
        "question": {
          "type": "string",
          "x-ms-summary": "Mission Question"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Mission URL"
        },
        "url_path": {
          "type": "string",
          "x-ms-summary": "Mission URL Path"
        }
      }
    },
    "Missions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Mission"
      }
    },
    "Idea": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Idea Id"
        },
        "friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Friendly Id"
        },
        "submitted_at": {
          "type": "string",
          "x-ms-summary": "Idea Submitted At"
        },
        "content": {
          "type": "string",
          "x-ms-summary": "Idea Content"
        },
        "content_markdown": {
          "type": "string",
          "x-ms-summary": "Idea Content Markdown"
        },
        "content_json": {
          "type": "string",
          "x-ms-summary": "Idea Content JSON"
        },
        "content_html": {
          "type": "string",
          "x-ms-summary": "Idea Content HTML"
        },
        "language": {
          "type": "string",
          "x-ms-summary": "Idea Language"
        },
        "stats_likes": {
          "type": "number",
          "x-ms-summary": "Idea Stats Like Count"
        },
        "stats_comments": {
          "type": "number",
          "x-ms-summary": "Idea Stats Comment Count"
        },
        "stats_total_avg_rating": {
          "type": "number",
          "x-ms-summary": "Idea Stats Total Average Rating"
        },
        "status_id": {
          "type": "string",
          "x-ms-summary": "Idea Status Id"
        },
        "status_kind": {
          "type": "string",
          "x-ms-summary": "Idea Status Kind"
        },
        "status_title": {
          "type": "string",
          "x-ms-summary": "Idea Status Title"
        },
        "status_text": {
          "type": "string",
          "x-ms-summary": "Idea Status Text"
        },
        "phase_id": {
          "type": "string",
          "x-ms-summary": "Idea Phase Id"
        },
        "phase_name": {
          "type": "string",
          "x-ms-summary": "Idea Phase Name"
        },
        "owner_id": {
          "type": "string",
          "x-ms-summary": "Idea Owner Id"
        },
        "owner_email": {
          "type": "string",
          "x-ms-summary": "Idea Owner Email"
        },
        "owner_alias": {
          "type": "string",
          "x-ms-summary": "Idea Owner Alias"
        },
        "owner_first_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner First Name"
        },
        "owner_last_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Last Name"
        },
        "owner_name": {
          "type": "string",
          "x-ms-summary": "Idea Owner Name"
        },
        "owner_department": {
          "type": "string",
          "x-ms-summary": "Idea Owner Department"
        },
        "owner_country": {
          "type": "string",
          "x-ms-summary": "Idea Owner Country"
        },
        "owner_url": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL"
        },
        "owner_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Owner URL Path"
        },
        "mission_id": {
          "type": "string",
          "x-ms-summary": "Idea Mission Id"
        },
        "mission_friendly_id": {
          "type": "integer",
          "x-ms-summary": "Idea Mission Friendly Id"
        },
        "mission_title": {
          "type": "string",
          "x-ms-summary": "Idea Mission Title"
        },
        "mission_question": {
          "type": "string",
          "x-ms-summary": "Idea Mission Question"
        },
        "mission_url": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL"
        },
        "mission_url_path": {
          "type": "string",
          "x-ms-summary": "Idea Mission URL Path"
        },
        "workspace_id": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Id"
        },
        "workspace_name": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Name"
        },
        "workspace_subdomain": {
          "type": "string",
          "x-ms-summary": "Idea Workspace Subdomain"
        }
      }
    },
    "Ideas": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Idea"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Comment Id"
        },
        "text": {
          "type": "string",
          "x-ms-summary": "Comment Text"
        },
        "url": {
          "type": "string",
          "x-ms-summary": "Comment URL"
        },
        "url_path": {
          "type": "string",
          "x-ms-summary": "Comment URL"
        },
        "anonymity": {
          "type": "string",
          "x-ms-summary": "Comment Anonymity"
        },
        "sender_id": {
          "type": "string",
          "x-ms-summary": "Comment Sender Id"
        },
        "sender_email": {
          "type": "string",
          "x-ms-summary": "Comment Sender Email"
        },
        "sender_alias": {
          "type": "string",
          "x-ms-summary": "Comment Sender Alias"
        },
        "sender_first_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Last Name"
        },
        "sender_last_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender First Name"
        },
        "sender_name": {
          "type": "string",
          "x-ms-summary": "Comment Sender Name"
        },
        "sender_department": {
          "type": "string",
          "x-ms-summary": "Comment Sender Department"
        },
        "sender_country": {
          "type": "string",
          "x-ms-summary": "Comment Sender Country"
        },
        "sender_url": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL"
        },
        "sender_url_path": {
          "type": "string",
          "x-ms-summary": "Comment Sender URL Path"
        }
      }
    },
    "Comments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Comment"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}
