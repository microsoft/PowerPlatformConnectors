{
  "swagger": "2.0",
  "info": {
    "title": "InfoShare",
    "description": "InfoShare is designed for use in businesses seeking to optimise the way they manage digital documents, information, binders and processes.",
    "version": "1.0",
    "contact": {
      "name": "Kendox Support",
      "url": "https://kendox.com/en/service/support-services",
      "email": "support@kendox.com"
    }
  },
  "host": "infoshareazurefunctions20201113081745.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/Logon": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "Contains the connection id if successfully logged in",
                  "title": "ConnectionId"
                },
                "connectionTimeoutSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Timeout for connection",
                  "title": "ConnectionTimeoutSeconds"
                },
                "isApplicationLicence": {
                  "type": "string",
                  "description": "Is application license type",
                  "title": "IsApplicationLicence"
                },
                "isConcurrentLicence": {
                  "type": "string",
                  "description": "Is concurrent licence type",
                  "title": "IsConcurrentLicence"
                },
                "isNamedLicence": {
                  "type": "string",
                  "description": "Is named license typ",
                  "title": "IsNamedLicence"
                },
                "isVerificationCodeNeeded": {
                  "type": "string",
                  "description": "Is verification code needed",
                  "title": "IsVerificationCodeNeeded"
                },
                "possibleTwoWayAuthenticationType": {
                  "type": "string",
                  "description": "Possible two way authentication type (None, Mail, SMS)",
                  "title": "PossibleTwoWayAuthenticationType"
                },
                "twoWayAuthenticationTargetMail": {
                  "type": "string",
                  "description": "The masked mail address where twoWayAuthentication will send mail to",
                  "title": "TwoWayAuthenticationTargetMail"
                }
              }
            }
          }
        },
        "summary": "Logon",
        "description": "Logon",
        "operationId": "Logon",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "Username": {
                  "type": "string",
                  "description": "User name for logon",
                  "title": "User name",
                  "x-ms-visibility": "important"
                },
                "Password": {
                  "type": "string",
                  "description": "Password",
                  "title": "Password",
                  "x-ms-visibility": "important"
                },
                "Tenantname": {
                  "type": "string",
                  "description": "Tenant name to logon to",
                  "title": "Tenant name",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "ArchiveUrl",
                "Password",
                "Username"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/CloseTaskAndAssignToUsers": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action text for the user. Displayed to the end user",
                  "title": "Action"
                },
                "assignedUserIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of assigned user ids",
                    "title": "AssignedUserIds"
                  },
                  "description": "assignedUserIds"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date of comment",
                        "title": "Date"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of comment",
                        "title": "Id"
                      },
                      "text": {
                        "type": "string",
                        "description": "User defined comment",
                        "title": "Text"
                      },
                      "userId": {
                        "type": "string",
                        "description": "Id of user, who has set the comment",
                        "title": "UserId"
                      }
                    }
                  },
                  "description": "comments"
                },
                "completedDate": {
                  "type": "string",
                  "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CompletedDate"
                },
                "CompletedUserIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all completed user ids of current task",
                    "title": "CompletedUserIds"
                  },
                  "description": "CompletedUserIds"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CreatedDate"
                },
                "creatorId": {
                  "type": "string",
                  "description": "User id of the creator",
                  "title": "CreatorId"
                },
                "description": {
                  "type": "string",
                  "description": "Task description",
                  "title": "Description"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "DueDate"
                },
                "intendedUserIds": {
                  "type": "array",
                  "items": {
                    "description": "Intended users for this task",
                    "title": "IntendedUserIds",
                    "type": "string"
                  },
                  "description": "intendedUserIds"
                },
                "reminderDate": {
                  "type": "string",
                  "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "ReminderDate"
                },
                "requiresAllRecipients": {
                  "type": "boolean",
                  "description": "Defines if all recipients have to close this task",
                  "title": "RequiresAllRecipients",
                  "enum": [
                    true,
                    false
                  ]
                },
                "showCloseTaskDialog": {
                  "type": "boolean",
                  "description": "Show close task dialog at task end",
                  "title": "ShowCloseTaskDialog",
                  "enum": [
                    true,
                    false
                  ]
                },
                "statusEnum": {
                  "type": "string",
                  "description": "Status of task Status (Open, InProcess, Complete, PreparedToComplete, Error)",
                  "title": "Status"
                },
                "taskTemplateId": {
                  "type": "string",
                  "description": "Task template id",
                  "title": "TaskTemplateId"
                }
              }
            }
          }
        },
        "operationId": "CloseTaskAndAssignToUsers",
        "summary": "Close current task and assign user to next task",
        "description": "Close current task and assign user to next task",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "ProcessId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId"
                },
                "TaskId": {
                  "type": "string",
                  "description": "Id of task (Guid)",
                  "title": "TaskId",
                  "x-ms-visibility": "advanced"
                },
                "Comment": {
                  "type": "string",
                  "description": "Comment",
                  "title": "Comment"
                },
                "AssignUserLoginNames": {
                  "type": "string",
                  "description": "AssignUserLoginNames",
                  "title": ""
                }
              },
              "required": [
                "ArchiveUrl",
                "AssignUserLoginNames",
                "ConnectionId",
                "ProcessId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/CreateDocument": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "abonnements": {
                  "type": "array",
                  "items": {
                    "description": "List of abonnements",
                    "title": "Abonnements",
                    "type": "string"
                  },
                  "description": "abonnements"
                },
                "accessRightsEnumList": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all allowed access rights (Export, CheckOut, Delete, ...)",
                    "title": "AccessRightsList"
                  },
                  "description": "accessRightsEnumList"
                },
                "annotationManager": {
                  "type": "object",
                  "properties": {
                    "postItAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdDate": {
                            "type": "string",
                            "description": "Creation date from post it annotation",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "User id of creator from post it annotation",
                            "title": "CreatorId"
                          },
                          "fontInfo": {
                            "type": "object",
                            "properties": {
                              "isItalic": {
                                "type": "boolean",
                                "description": "Is font italic from post it annotation",
                                "title": "IsItalic",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isStrikeOut": {
                                "type": "boolean",
                                "description": "Is Font strike out from post it annotation",
                                "title": "IsStrikeOut",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isUnderline": {
                                "type": "boolean",
                                "description": "Is Font is underline from post it annotation",
                                "title": "IsUnderline",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Font name from post it annotation. Default = Arial",
                                "title": "Name"
                              },
                              "pitch": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font pitch from post it annotation",
                                "title": "Pitch"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font size from post it annotation. Example: Size:12 is 12000. You need factor 1000",
                                "title": "Size"
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font weight from post it annotation",
                                "title": "Weight"
                              }
                            },
                            "description": "fontInfo"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of the post it annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from post it annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from post it annotation",
                            "title": "PageNumber"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for post it annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if post it annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "text": {
                            "type": "string",
                            "description": "User defined text for post it annotation",
                            "title": "Text"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI of post it annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI of post it annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "postItAnnotations"
                    },
                    "rectangleAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of rectangle (32 bit ARGB value) from rectangle annotation Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "Color"
                          },
                          "colorHexCode": {
                            "type": "string",
                            "description": "Color of rectangle (RGB hexadecimal code) from rectangle annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "ColorHexCode"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Creation date from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "CreatorId"
                          },
                          "height": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Height of rectangle in pixel per inch for 7200 DPI",
                            "title": "Height"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of the rectangle annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from rectangle annotation",
                            "title": "PageNumber"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for rectangle annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if rectangle annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "transparent": {
                            "type": "boolean",
                            "description": "Rectangle should be transparent (highlight)",
                            "title": "Transparent",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Width of rectangle in pixel per inch for 7200 DPI",
                            "title": "Width"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "rectangleAnnotations"
                    },
                    "textAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backgroundColor": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of background (32 bit ARGB value) from text annotation Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "BackgroundColor"
                          },
                          "backgroundColorHexCode": {
                            "type": "string",
                            "description": "Color of background (RGB hexadecimal code) from text annotation Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "BackgroundColorHexCode"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "creation date from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "User id of creator from text annotation",
                            "title": "CreatorId"
                          },
                          "fontInfo": {
                            "type": "object",
                            "properties": {
                              "isItalic": {
                                "type": "boolean",
                                "description": "Is Font italic from text annotation",
                                "title": "IsItalic",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isStrikeOut": {
                                "type": "boolean",
                                "description": "Is font strike out from text annotation",
                                "title": "IsStrikeOut",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isUnderline": {
                                "type": "boolean",
                                "description": "Is font underline from text annotation",
                                "title": "IsUnderline",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Font name from text annotation. Default = Arial",
                                "title": "Name"
                              },
                              "pitch": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font pitch from text annotation",
                                "title": "Pitch"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font size from text annotation. Example: Size:12 is 12000. You need factor 1000",
                                "title": "Size"
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font weight from text annotation",
                                "title": "Weight"
                              }
                            },
                            "description": "fontInfo"
                          },
                          "foregroundColor": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of the foreground (32 bit ARGB value) from text annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "ForegroundColor"
                          },
                          "foregroundColorHexCode": {
                            "type": "string",
                            "description": "Color of foreground (RGB hexadecimal code) from text annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "ForegroundColorHexCode"
                          },
                          "height": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Height of text in pixel per inch for 7200 DPI from text annotation",
                            "title": "Height"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of text annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from text annotation",
                            "title": "PageNumber"
                          },
                          "rotation": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Rotation in degrees from text annotation",
                            "title": "Rotation"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for text annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if text annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "text": {
                            "type": "string",
                            "description": "User defined Text of text annotation",
                            "title": "Text"
                          },
                          "transparent": {
                            "type": "boolean",
                            "description": "Text annotation should be transparent",
                            "title": "Transparent",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Width of text in pixel per inch for 7200 DPI from text annotation",
                            "title": "Width"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI from text annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI from text annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "textAnnotations"
                    }
                  },
                  "description": "annotationManager"
                },
                "blogs": {
                  "type": "array",
                  "items": {
                    "description": "List of all blog items",
                    "title": "Blogs",
                    "type": "object"
                  },
                  "description": "blogs"
                },
                "checkOutStateEnum": {
                  "type": "string",
                  "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                  "title": "CheckOutState"
                },
                "checkOutUserId": {
                  "type": "string",
                  "description": "Id of the user for which document is checked out",
                  "title": "CheckOutUserId"
                },
                "documentData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of document rendition",
                        "title": "Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name of rendition",
                        "title": "Name"
                      },
                      "renditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contentProtections": {
                              "type": "array",
                              "items": {},
                              "description": "contentProtections"
                            },
                            "extension": {
                              "type": "string",
                              "description": "Extension of rendition"
                            },
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "blobPath": {
                                    "type": "string",
                                    "description": "Blob path of rendition"
                                  },
                                  "blobStoreId": {
                                    "type": "string",
                                    "description": "Blob store Id of rendition"
                                  }
                                }
                              },
                              "description": "files"
                            },
                            "id": {
                              "type": "string",
                              "description": "id"
                            },
                            "pageCount": {
                              "type": "string",
                              "description": "Page count of rendition"
                            },
                            "size": {
                              "type": "string",
                              "description": "Size of rendition"
                            }
                          }
                        },
                        "description": "renditions"
                      }
                    }
                  },
                  "description": "documentData"
                },
                "hasOverlay": {
                  "type": "boolean",
                  "description": "Defines if the document should be displayed with a overlay",
                  "title": "HasOverlay",
                  "enum": [
                    true,
                    false
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Id of the document",
                  "title": "Id"
                },
                "importTemplateId": {
                  "type": "string",
                  "description": "Id of the import template for this document",
                  "title": "ImportTemplateId"
                },
                "infoStoreId": {
                  "type": "string",
                  "description": "Id of the info store",
                  "title": "InfoStoreId"
                },
                "lifeCycleManager": {
                  "type": "object",
                  "properties": {
                    "checkOutLifeCycleStateId": {
                      "type": "string",
                      "description": "Checkout life cycle state",
                      "title": "CheckOutLifeCycleStateId"
                    },
                    "lifeCycleEndDate": {
                      "type": "string",
                      "description": "Calculated end date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "LifeCycleEndDate"
                    },
                    "lifeCycleStartDate": {
                      "type": "string",
                      "description": "Start date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "LifeCycleStartDate"
                    },
                    "lifeCycleStateId": {
                      "type": "string",
                      "description": "Id of the LifeCycle state",
                      "title": "LifeCycleStateId"
                    },
                    "nextAutomaticLifeCycleStateId": {
                      "type": "string",
                      "description": "Next automatic life cycle state",
                      "title": "NextAutomaticLifeCycleStateId"
                    },
                    "nextLifeCycleStates": {
                      "type": "array",
                      "items": {
                        "description": "Available next life cycle states",
                        "title": "NextLifeCycleStates",
                        "type": "string"
                      },
                      "description": "nextLifeCycleStates"
                    },
                    "lifeCycleProtections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deleteAfterExpiration": {
                            "type": "boolean",
                            "description": "Allow to delete document after protection expiration",
                            "title": "DeleteAfterExpiration",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of life cycle state protection",
                            "title": "Id"
                          },
                          "protectAnnotationChange": {
                            "type": "boolean",
                            "description": "Protect against annotation changes",
                            "title": "ProtectAnnotationChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectCheckOut": {
                            "type": "boolean",
                            "description": "Protect against check out",
                            "title": "ProtectCheckOut",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectContentChange": {
                            "type": "boolean",
                            "description": "Protect against content change",
                            "title": "ProtectContentChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectDelete": {
                            "type": "boolean",
                            "description": "Protect against delete",
                            "title": "ProtectDelete",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectPropertyChange": {
                            "type": "boolean",
                            "description": "Protect against property changes",
                            "title": "ProtectPropertyChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectProtectionDomainChange": {
                            "type": "boolean",
                            "description": "Protect against security change",
                            "title": "ProtectProtectionDomainChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectionDurationTicks": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Duration of protection",
                            "title": "ProtectionDurationTicks"
                          }
                        }
                      },
                      "description": "lifeCycleProtections"
                    },
                    "lifeCycleId": {
                      "type": "string",
                      "description": "Id of the LifeCycle",
                      "title": "LifeCycleId"
                    }
                  },
                  "description": "lifeCycleManager"
                },
                "mainFileLength": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Main file size",
                  "title": "MainFileLength"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the document",
                  "title": "Name"
                },
                "pageCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Page count of main file",
                  "title": "PageCount"
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "globalValues": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "culture": {
                                    "type": "string",
                                    "description": "Culture"
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "Text"
                                  }
                                }
                              },
                              "description": "values"
                            }
                          }
                        },
                        "description": "globalValues"
                      },
                      "propertyTypeId": {
                        "type": "string",
                        "description": "Type id of the index field",
                        "title": "PropertyTypeId"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "values"
                      }
                    }
                  },
                  "description": "properties"
                },
                "protectionDomainId": {
                  "type": "string",
                  "description": "Id of the protection domain",
                  "title": "ProtectionDomainId"
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "description": "List of all reminders",
                    "title": "Reminders",
                    "type": "object"
                  },
                  "description": "reminders"
                },
                "sessionCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session count",
                  "title": "SessionCount"
                },
                "signingProfileId": {
                  "type": "string",
                  "description": "Id of the signing profile",
                  "title": "SigningProfileId"
                },
                "versionId": {
                  "type": "string",
                  "description": "Version id of the document",
                  "title": "VersionId"
                }
              }
            }
          }
        },
        "summary": "Create document",
        "description": "Create document",
        "operationId": "CreateDocument",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "DocumentTitle": {
                  "type": "string",
                  "description": "Title of document (incl. extension)",
                  "title": "DocumentTitle",
                  "x-ms-visibility": "important"
                },
                "ImportTemplate": {
                  "type": "string",
                  "description": "Import template",
                  "title": "ImportTemplate"
                },
                "DocumentProperties": {
                  "type": "string",
                  "description": "Document properties insert format: Firstname=Peter|Lastname=Muller|InvoiceNo=4711;4712;4713",
                  "title": "DocumentProperties"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the property names are given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                },
                "FileContent": {
                  "type": "string",
                  "description": "File content base64 string",
                  "title": "FileContent"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "DocumentTitle",
                "FileContent",
                "ImportTemplate"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/DownloadDocument": {},
    "/api/UpdateDocument": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "abonnements": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "onContentChange": {
                        "type": "boolean",
                        "description": "Abonnement is active on file changes",
                        "title": "OnContentChange",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "onDelete": {
                        "type": "boolean",
                        "description": "Abonnement is active on delete",
                        "title": "OnDelete",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "onMetadataChange": {
                        "type": "boolean",
                        "description": "Abonnement is active on index changes",
                        "title": "OnMetadataChange",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "userId": {
                        "type": "string",
                        "description": "The user id for this abonnnement",
                        "title": "UserId"
                      }
                    }
                  },
                  "description": "abonnements"
                },
                "accessRightsEnumList": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)",
                    "title": "AccessRightsEnumList"
                  },
                  "description": "accessRightsEnumList"
                },
                "annotationManager": {
                  "type": "object",
                  "properties": {
                    "postItAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdDate": {
                            "type": "string",
                            "description": "Creation date from post it annotation",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "User id of creator from post it annotation",
                            "title": "CreatorId"
                          },
                          "fontInfo": {
                            "type": "object",
                            "properties": {
                              "isItalic": {
                                "type": "boolean",
                                "description": "Is font italic from post it annotation",
                                "title": "IsItalic",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isStrikeOut": {
                                "type": "boolean",
                                "description": "Is Font strike out from post it annotation",
                                "title": "IsStrikeOut",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isUnderline": {
                                "type": "boolean",
                                "description": "Is Font is underline from post it annotation",
                                "title": "IsUnderline",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Font name from post it annotation. Default = Arial",
                                "title": "Name"
                              },
                              "pitch": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font pitch from post it annotation",
                                "title": "Pitch"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font size from post it annotation. Example: Size:12 is 12000. You need factor 1000",
                                "title": "Size"
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font weight from post it annotation",
                                "title": "Weight"
                              }
                            },
                            "description": "fontInfo"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of the post it annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from post it annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from post it annotation",
                            "title": "PageNumber"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for post it annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if post it annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "text": {
                            "type": "string",
                            "description": "User defined text for post it annotation",
                            "title": "Text"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI of post it annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI of post it annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "postItAnnotations"
                    },
                    "rectangleAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of rectangle (32 bit ARGB value) from rectangle annotation Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "Color"
                          },
                          "colorHexCode": {
                            "type": "string",
                            "description": "Color of rectangle (RGB hexadecimal code) from rectangle annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "ColorHexCode"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "Creation date from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "CreatorId"
                          },
                          "height": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Height of rectangle in pixel per inch for 7200 DPI",
                            "title": "Height"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of the rectangle annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from rectangle annotation",
                            "title": "PageNumber"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for rectangle annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if rectangle annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "transparent": {
                            "type": "boolean",
                            "description": "Rectangle should be transparent (highlight)",
                            "title": "Transparent",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Width of rectangle in pixel per inch for 7200 DPI",
                            "title": "Width"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "rectangleAnnotations"
                    },
                    "textAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backgroundColor": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of background (32 bit ARGB value) from text annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "BackgroundColor"
                          },
                          "backgroundColorHexCode": {
                            "type": "string",
                            "description": "Color of background (RGB hexadecimal code) from text annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "BackgroundColorHexCode"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "creation date from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "creatorId": {
                            "type": "string",
                            "description": "User id of creator from text annotation",
                            "title": "CreatorId"
                          },
                          "fontInfo": {
                            "type": "object",
                            "properties": {
                              "isItalic": {
                                "type": "boolean",
                                "description": "Is Font italic from text annotation",
                                "title": "IsItalic",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isStrikeOut": {
                                "type": "boolean",
                                "description": "Is font strike out from text annotation",
                                "title": "IsStrikeOut",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "isUnderline": {
                                "type": "boolean",
                                "description": "Is font underline from text annotation",
                                "title": "IsUnderline",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Font name from text annotation. Default = Arial",
                                "title": "Name"
                              },
                              "pitch": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font pitch from text annotation",
                                "title": "Pitch"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font size from text annotation. Example: Size:12 is 12000. You need factor 1000",
                                "title": "Size"
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Font weight from text annotation",
                                "title": "Weight"
                              }
                            },
                            "description": "fontInfo"
                          },
                          "foregroundColor": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Color of the foreground (32 bit ARGB value) from text annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                            "title": "ForegroundColor"
                          },
                          "foregroundColorHexCode": {
                            "type": "string",
                            "description": "Color of foreground (RGB hexadecimal code) from text annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                            "title": "ForegroundColorHexCode"
                          },
                          "height": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Height of text in pixel per inch for 7200 DPI from text annotation",
                            "title": "Height"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of text annotation",
                            "title": "Id"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "Date of modification from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ModifiedDate"
                          },
                          "pageNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of page from text annotation",
                            "title": "PageNumber"
                          },
                          "rotation": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Rotation in degrees from text annotation",
                            "title": "Rotation"
                          },
                          "securityLevelEnum": {
                            "type": "string",
                            "description": "Security level for text annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                            "title": "SecurityLevelEnum"
                          },
                          "selectable": {
                            "type": "boolean",
                            "description": "Defines if text annotation is selectable by user",
                            "title": "Selectable",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "text": {
                            "type": "string",
                            "description": "User defined Text of text annotation",
                            "title": "Text"
                          },
                          "transparent": {
                            "type": "boolean",
                            "description": "Text annotation should be transparent",
                            "title": "Transparent",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Width of text in pixel per inch for 7200 DPI from text annotation",
                            "title": "Width"
                          },
                          "x": {
                            "type": "integer",
                            "format": "int32",
                            "description": "X coordinate in pixel per inch for 7200 DPI from text annotation",
                            "title": "X"
                          },
                          "y": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Y coordinate in pixel per inch for 7200 DPI from text annotation",
                            "title": "Y"
                          }
                        }
                      },
                      "description": "textAnnotations"
                    }
                  },
                  "description": "annotationManager"
                },
                "blogs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "createdDate": {
                        "type": "string",
                        "description": "Date on which the Blog was created. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "CreatedDate"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "User Id of the creating user blog",
                        "title": "CreatorId"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the blog",
                        "title": "Id"
                      },
                      "text": {
                        "type": "string",
                        "description": "Text of blog item",
                        "title": "Text"
                      }
                    }
                  },
                  "description": "blogs"
                },
                "checkOutStateEnum": {
                  "type": "string",
                  "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                  "title": "CheckOutStateEnum"
                },
                "checkOutUserId": {
                  "type": "string",
                  "description": "Id of the user for which document is checked out",
                  "title": "CheckOutUserId"
                },
                "documentData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of document data",
                        "title": "Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Document data name",
                        "title": "Name"
                      },
                      "renditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contentProtections": {
                              "type": "array",
                              "items": {},
                              "description": "contentProtections"
                            },
                            "extension": {
                              "type": "string",
                              "description": "Extension of rendition"
                            },
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "blobPath": {
                                    "type": "string",
                                    "description": "Blob path of rendition"
                                  },
                                  "blobStoreId": {
                                    "type": "string",
                                    "description": "Blob store Id of rendition"
                                  }
                                }
                              },
                              "description": "files"
                            },
                            "id": {
                              "type": "string",
                              "description": "id"
                            },
                            "pageCount": {
                              "type": "string",
                              "description": "Page count of rendition"
                            },
                            "size": {
                              "type": "string",
                              "description": "Size of rendition"
                            }
                          }
                        },
                        "description": "renditions"
                      }
                    }
                  },
                  "description": "documentData"
                },
                "hasOverlay": {
                  "type": "boolean",
                  "description": "Defines if the document should be displayed with a overlay",
                  "title": "HasOverlay",
                  "enum": [
                    true,
                    false
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Id of the document",
                  "title": "Id"
                },
                "importTemplateId": {
                  "type": "string",
                  "description": "Id of the import template for this document",
                  "title": "ImportTemplateId"
                },
                "infoStoreId": {
                  "type": "string",
                  "description": "Id of the info store",
                  "title": "InfoStoreId"
                },
                "lifeCycleManager": {
                  "type": "object",
                  "properties": {
                    "checkOutLifeCycleStateId": {
                      "type": "string",
                      "description": "Checkout life cycle state",
                      "title": "CheckOutLifeCycleStateId"
                    },
                    "lifeCycleEndDate": {
                      "type": "string",
                      "description": "Calculated end date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "LifeCycleEndDate"
                    },
                    "lifeCycleStartDate": {
                      "type": "string",
                      "description": "Start date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "LifeCycleStartDate"
                    },
                    "lifeCycleStateId": {
                      "type": "string",
                      "description": "Id of the LifeCycle state",
                      "title": "LifeCycleStateId"
                    },
                    "nextAutomaticLifeCycleStateId": {
                      "type": "string",
                      "description": "Next automatic life cycle state",
                      "title": "NextAutomaticLifeCycleStateId"
                    },
                    "nextLifeCycleStates": {
                      "type": "array",
                      "items": {
                        "description": "Available next life cycle states",
                        "title": "NextLifeCycleStates",
                        "type": "string"
                      },
                      "description": "nextLifeCycleStates"
                    },
                    "lifeCycleProtections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deleteAfterExpiration": {
                            "type": "boolean",
                            "description": "Allow to delete document after protection expiration",
                            "title": "DeleteAfterExpiration",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of life cycle state protection",
                            "title": "Id"
                          },
                          "protectAnnotationChange": {
                            "type": "boolean",
                            "description": "Protect against annotation changes",
                            "title": "ProtectAnnotationChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectCheckOut": {
                            "type": "boolean",
                            "description": "Protect against check out",
                            "title": "ProtectCheckOut",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectContentChange": {
                            "type": "boolean",
                            "description": "Protect against content change",
                            "title": "ProtectContentChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectDelete": {
                            "type": "boolean",
                            "description": "Protect against delete",
                            "title": "ProtectDelete",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectPropertyChange": {
                            "type": "boolean",
                            "description": "Protect against property changes",
                            "title": "ProtectPropertyChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectProtectionDomainChange": {
                            "type": "boolean",
                            "description": "Protect against security change",
                            "title": "ProtectProtectionDomainChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "protectionDurationTicks": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Duration of protection",
                            "title": "ProtectionDurationTicks"
                          }
                        }
                      },
                      "description": "lifeCycleProtections"
                    },
                    "lifeCycleId": {
                      "type": "string",
                      "description": "Id of the LifeCycle",
                      "title": "LifeCycleId"
                    }
                  },
                  "description": "lifeCycleManager"
                },
                "mainFileLength": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Main file size",
                  "title": "MainFileLength"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the document",
                  "title": "Name"
                },
                "pageCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Page count of main file",
                  "title": "PageCount"
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "globalValues": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "culture": {
                                    "type": "string",
                                    "description": "Culture"
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "Text"
                                  }
                                }
                              },
                              "description": "values"
                            }
                          }
                        },
                        "description": "globalValues"
                      },
                      "propertyName": {
                        "type": "string",
                        "description": "Name of property",
                        "title": "PropertyName"
                      },
                      "propertyTypeId": {
                        "type": "string",
                        "description": "Type id of the index field",
                        "title": "PropertyTypeId"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "values"
                      }
                    }
                  },
                  "description": "properties"
                },
                "protectionDomainId": {
                  "type": "string",
                  "description": "Id of the protection domain",
                  "title": "ProtectionDomainId"
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description for reminder",
                        "title": "Description"
                      },
                      "interval": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Interval in days between reminders",
                        "title": "Interval"
                      },
                      "processTemplateId": {
                        "type": "string",
                        "description": "Process template Id for this reminder",
                        "title": "ProcessTemplateId"
                      },
                      "reminderDate": {
                        "type": "string",
                        "description": "Date of the reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "ReminderDate"
                      },
                      "reminderId": {
                        "type": "string",
                        "description": "Id of the reminder",
                        "title": "ReminderId"
                      },
                      "subjectIds": {
                        "type": "array",
                        "items": {},
                        "description": "subjectIds"
                      },
                      "useUserFromProcessTemplate": {
                        "type": "boolean",
                        "description": "Defines if the user definition from process template will be used",
                        "title": "UseUserFromProcessTemplate",
                        "enum": [
                          true,
                          false
                        ]
                      }
                    }
                  },
                  "description": "reminders"
                },
                "signingProfileId": {
                  "type": "string",
                  "description": "Id of the signing profile",
                  "title": "SigningProfileId"
                },
                "versionId": {
                  "type": "string",
                  "description": "Version id of the document",
                  "title": "VersionId"
                }
              }
            }
          }
        },
        "operationId": "UpdateDocument",
        "summary": "Update document",
        "description": "Update document",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "DocumentId": {
                  "type": "string",
                  "description": "Id of document",
                  "title": "DocumentId",
                  "x-ms-visibility": "important"
                },
                "DocumentTitle": {
                  "type": "string",
                  "description": "Title of document",
                  "title": "DocumentTitle",
                  "x-ms-visibility": "important"
                },
                "DocumentProperties": {
                  "type": "string",
                  "description": "Document properties update format: Firstname=Peter|Lastname=Muller|InvoiceNo=4711;4712;4713",
                  "title": "DocumentProperties",
                  "x-ms-visibility": "important"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the text is given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                },
                "FileContent": {
                  "type": "string",
                  "description": "File content base64 string",
                  "title": "FileContent",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "DocumentId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/ListProcesses": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "processes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accessRightsEnumList": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)",
                          "title": "accessRightsEnumList"
                        },
                        "description": "accessRightsEnumList"
                      },
                      "checkOutStateEnum": {
                        "type": "string",
                        "description": "Check out state of the process (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                        "title": "CheckOutStateEnum"
                      },
                      "checkOutUserId": {
                        "type": "string",
                        "description": "Id of the user for which document is checked out",
                        "title": "CheckOutUserId"
                      },
                      "comments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "Date of comment",
                              "title": "Date"
                            },
                            "id": {
                              "type": "string",
                              "description": "Id of comment",
                              "title": "Id"
                            },
                            "text": {
                              "type": "string",
                              "description": "User defined comment",
                              "title": "Text"
                            },
                            "userId": {
                              "type": "string",
                              "description": "Id of user, who has set the comment",
                              "title": "UserId"
                            }
                          }
                        },
                        "description": "comments"
                      },
                      "completedDate": {
                        "type": "string",
                        "description": "Completed date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "CompletedDate"
                      },
                      "completedTasks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "Action text for the user. Displayed to the end user",
                              "title": "Action"
                            },
                            "assignedUserIds": {
                              "type": "array",
                              "items": {},
                              "description": "assignedUserIds"
                            },
                            "comments": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "description": "Date of comment",
                                    "title": "Date"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Id of comment",
                                    "title": "Id"
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "User defined comment",
                                    "title": "Text"
                                  },
                                  "userId": {
                                    "type": "string",
                                    "description": "Id of user, who has set the comment",
                                    "title": "UserId"
                                  }
                                }
                              },
                              "description": "comments"
                            },
                            "completedDate": {
                              "type": "string",
                              "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                              "title": "CompletedDate"
                            },
                            "completedUserIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "completedUserIds"
                            },
                            "createdDate": {
                              "type": "string",
                              "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                              "title": "CreatedDate"
                            },
                            "creatorId": {
                              "type": "string",
                              "description": "User id of the creator",
                              "title": "CreatorId"
                            },
                            "description": {
                              "type": "string",
                              "description": "Task description",
                              "title": "Description"
                            },
                            "dueDate": {
                              "type": "string",
                              "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                              "title": "DueDate"
                            },
                            "intendedUserIds": {
                              "type": "array",
                              "items": {},
                              "description": "intendedUserIds"
                            },
                            "reminderDate": {
                              "type": "string",
                              "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                              "title": "ReminderDate"
                            },
                            "requiresAllRecipients": {
                              "type": "boolean",
                              "description": "Defines if all recipients have to close this task",
                              "title": "RequiresAllRecipients",
                              "enum": [
                                true,
                                false
                              ]
                            },
                            "showCloseTaskDialog": {
                              "type": "boolean",
                              "description": "Show close task dialog at task end",
                              "title": "ShowCloseTaskDialog",
                              "enum": [
                                true,
                                false
                              ]
                            },
                            "statusEnum": {
                              "type": "string",
                              "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                              "title": "Status"
                            },
                            "taskTemplateId": {
                              "type": "string",
                              "description": "Task template id",
                              "title": "TaskTemplateId"
                            }
                          }
                        },
                        "description": "completedTasks"
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "Creation date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "CreatedDate"
                      },
                      "currentTask": {
                        "type": "string",
                        "description": "Currently active task",
                        "title": "CurrentTask"
                      },
                      "customProperties": {
                        "type": "string",
                        "description": "List of all custom properties",
                        "title": "CustomProperties"
                      },
                      "documentIds": {
                        "type": "string",
                        "description": "List of all attached document ids",
                        "title": "DocumentIds"
                      },
                      "dueDate": {
                        "type": "string",
                        "description": "Due date for the process Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "DueDate"
                      },
                      "folderElementId": {
                        "type": "string",
                        "description": "Id of process as folder element",
                        "title": "FolderElementId"
                      },
                      "hasLinks": {
                        "type": "boolean",
                        "description": "Flag whether the process has links",
                        "title": "HasLinks",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of process",
                        "title": "Id"
                      },
                      "name": {
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "culture": {
                                  "type": "string",
                                  "description": "culture"
                                },
                                "text": {
                                  "type": "string",
                                  "description": "text"
                                }
                              }
                            },
                            "description": "values"
                          }
                        },
                        "description": "name"
                      },
                      "priorityEnum": {
                        "type": "string",
                        "description": "Priority of process (High, Normal, Low)",
                        "title": "PriorityEnum"
                      },
                      "pluginStream": {
                        "type": "string",
                        "description": "Data container for plugins",
                        "title": "PluginStream"
                      },
                      "processTemplateId": {
                        "type": "string",
                        "description": "Process template id",
                        "title": "ProcessTemplateId"
                      },
                      "properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "propertyName"
                            },
                            "propertyTypeId": {
                              "type": "string",
                              "description": "propertyTypeId"
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "values"
                            }
                          }
                        },
                        "description": "properties"
                      },
                      "protectionDomainId": {
                        "type": "string",
                        "description": "Protection domain id of process",
                        "title": "ProtectionDomainId"
                      },
                      "statusEnum": {
                        "type": "string",
                        "description": "Status of process (Open, InProcess, Complete, PreparedToComplete, Error)",
                        "title": "StatusEnum"
                      }
                    }
                  },
                  "description": "processes"
                },
                "hasMore": {
                  "type": "boolean",
                  "description": "Indicates, whether more results exists or not. The flag is set to true if more results are available",
                  "title": "HasMore",
                  "enum": [
                    true,
                    false
                  ]
                },
                "resumePoint": {
                  "type": "string",
                  "description": "The resume point from previous search operations. Set null for the first search operation",
                  "title": "ResumePoint"
                }
              }
            }
          }
        },
        "summary": "List processes",
        "description": "List processes",
        "operationId": "ListProcesses",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "Receiver": {
                  "type": "string",
                  "description": "Login names of receivers from processes (e.g.: john@sample.com|megan@sample.com). Is empty, logged in user will be taken as receiver",
                  "title": "Receiver",
                  "x-ms-visibility": "important"
                },
                "Status": {
                  "type": "string",
                  "description": "Status of process. Default = open",
                  "title": "Status",
                  "x-ms-visibility": "important",
                  "enum": [
                    "Open",
                    "InProcess",
                    "Complete",
                    "PreparedToComplete",
                    "Error"
                  ]
                },
                "IgnoreReceiver": {
                  "type": "boolean",
                  "description": "If yes, all processes indipendent of receiver are listed. Default = false",
                  "title": "IgnoreReceiver",
                  "x-ms-visibility": "important",
                  "enum": [
                    false,
                    true
                  ]
                },
                "MaxSerchResults": {
                  "type": "string",
                  "description": "Maximum number of process search results. Default = 100",
                  "title": "MaxSerchResults"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/Logoff": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "LogoffResult": {
                  "type": "string",
                  "description": "Result of logoff",
                  "title": "LogoffResult"
                }
              }
            }
          }
        },
        "summary": "Logoff",
        "description": "Logoff",
        "operationId": "Logoff",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/UpdateProcess": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "accessRightsEnumList": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of allowed access rights (Export, CheckOut, Delete, ...)",
                    "title": "AccessRightsList"
                  },
                  "description": "accessRightsEnumList"
                },
                "checkOutStateEnum": {
                  "type": "string",
                  "description": "Check out state of the process (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null):",
                  "title": "CheckOutState"
                },
                "checkOutUserId": {
                  "type": "string",
                  "description": "Id of the user for which document is checked out",
                  "title": "CheckOutUserId"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date of comment",
                        "title": "Date"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of comment",
                        "title": "Id"
                      },
                      "text": {
                        "type": "string",
                        "description": "User defined comment",
                        "title": "Text"
                      },
                      "userId": {
                        "type": "string",
                        "description": "User id",
                        "title": "UserId"
                      }
                    }
                  },
                  "description": "comments"
                },
                "completedDate": {
                  "type": "string",
                  "description": "Completed date of the process Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CompletedDate"
                },
                "completedTasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "Action text for the user. Displayed to the end user",
                        "title": "Action"
                      },
                      "assignedUserIds": {
                        "type": "array",
                        "items": {},
                        "description": "assignedUserIds"
                      },
                      "comments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "description": "Date of comment",
                              "title": "Date"
                            },
                            "id": {
                              "type": "string",
                              "description": "Id of comment",
                              "title": "Id"
                            },
                            "text": {
                              "type": "string",
                              "description": "User defined comment",
                              "title": "Text"
                            },
                            "userId": {
                              "type": "string",
                              "description": "Id of user, who has set the comment",
                              "title": "UserId"
                            }
                          }
                        },
                        "description": "comments"
                      },
                      "completedDate": {
                        "type": "string",
                        "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "CompletedDate"
                      },
                      "completedUserIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "completedUserIds"
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "CreatedDate"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "User id of the creator",
                        "title": "CreatorId"
                      },
                      "description": {
                        "type": "string",
                        "description": "Task description",
                        "title": "Description"
                      },
                      "dueDate": {
                        "type": "string",
                        "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "DueDate"
                      },
                      "intendedUserIds": {
                        "type": "array",
                        "items": {},
                        "description": "intendedUserIds"
                      },
                      "reminderDate": {
                        "type": "string",
                        "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                        "title": "ReminderDate"
                      },
                      "requiresAllRecipients": {
                        "type": "boolean",
                        "description": "Defines if all recipients have to close this task",
                        "title": "RequiresAllRecipients",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "showCloseTaskDialog": {
                        "type": "boolean",
                        "description": "Show close task dialog at task end",
                        "title": "ShowCloseTaskDialog",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "statusEnum": {
                        "type": "string",
                        "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                        "title": "Status"
                      },
                      "taskTemplateId": {
                        "type": "string",
                        "description": "Task template id",
                        "title": "TaskTemplateId"
                      }
                    }
                  },
                  "description": "completedTasks"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Creation date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CreatedDate"
                },
                "currentTask": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "Action text for the user. Displayed to the end user",
                      "title": "Action"
                    },
                    "assignedUserIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of assigned user ids",
                        "title": "AssignedUserIds"
                      },
                      "description": "assignedUserIds"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "Date of comment",
                            "title": "Date"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of comment",
                            "title": "Id"
                          },
                          "text": {
                            "type": "string",
                            "description": "User defined comment",
                            "title": "Text"
                          },
                          "userId": {
                            "type": "string",
                            "description": "Id of user, who has set the comment",
                            "title": "UserId"
                          }
                        }
                      },
                      "description": "comments"
                    },
                    "completedDate": {
                      "type": "string",
                      "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CompletedDate"
                    },
                    "completedUserIds": {
                      "type": "array",
                      "items": {
                        "description": "List of all completed user ids",
                        "title": "CompletedUserIds",
                        "type": "string"
                      },
                      "description": "completedUserIds"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CreatedDate"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "User id of the creator",
                      "title": "CreatorId"
                    },
                    "description": {
                      "type": "string",
                      "description": "Task description",
                      "title": "Description"
                    },
                    "dueDate": {
                      "type": "string",
                      "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "DueDate"
                    },
                    "intendedUserIds": {
                      "type": "array",
                      "items": {
                        "description": "Intended users for this task",
                        "title": "IntendedUserIds",
                        "type": "string"
                      },
                      "description": "intendedUserIds"
                    },
                    "reminderDate": {
                      "type": "string",
                      "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "ReminderDate"
                    },
                    "requiresAllRecipients": {
                      "type": "boolean",
                      "description": "Defines if all recipients have to close this task",
                      "title": "RequiresAllRecipients",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "showCloseTaskDialog": {
                      "type": "boolean",
                      "description": "Show close task dialog at task end",
                      "title": "ShowCloseTaskDialog",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "statusEnum": {
                      "type": "string",
                      "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                      "title": "Status"
                    },
                    "taskTemplateId": {
                      "type": "string",
                      "description": "Task template id",
                      "title": "TaskTemplateId"
                    }
                  },
                  "description": "currentTask"
                },
                "customProperties": {
                  "type": "array",
                  "items": {
                    "description": "List of all custom properties",
                    "title": "CustomProperties",
                    "type": "object"
                  },
                  "description": "customProperties"
                },
                "documentIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all attached document ids",
                    "title": "DocumentIds"
                  },
                  "description": "documentIds"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Due date for the process. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "DueDate"
                },
                "folderElementId": {
                  "type": "string",
                  "description": "Id of document as folder element",
                  "title": "FolderElementId"
                },
                "hasLinks": {
                  "type": "boolean",
                  "description": "Id of document as folder element",
                  "title": "HasLinks",
                  "enum": [
                    true,
                    false
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Process id",
                  "title": "Id"
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "culture": {
                            "type": "string",
                            "description": "The culture in which the text is given (de, en, fr, ...)",
                            "title": "Culture"
                          },
                          "text": {
                            "type": "string",
                            "description": "The text for this language",
                            "title": "Text"
                          }
                        }
                      },
                      "description": "values"
                    }
                  },
                  "description": "name"
                },
                "priorityEnum": {
                  "type": "string",
                  "description": "Priority of process (High, Normal, Low)",
                  "title": "Priority"
                },
                "pluginStream": {
                  "type": "string",
                  "description": "Data container for plugins",
                  "title": "PluginStream"
                },
                "processTemplateId": {
                  "type": "string",
                  "description": "Process template id",
                  "title": "ProcessTemplateId"
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "globalValues": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "culture": {
                                    "type": "string",
                                    "description": "culture"
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "text"
                                  }
                                }
                              },
                              "description": "values"
                            }
                          }
                        },
                        "description": "globalValues"
                      },
                      "propertyTypeId": {
                        "type": "string",
                        "description": "Type id of the index field",
                        "title": "PropertyTypeId"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "values"
                      }
                    }
                  },
                  "description": "properties"
                },
                "protectionDomainId": {
                  "type": "string",
                  "description": "Protection domain id of process",
                  "title": "ProtectionDomainId"
                },
                "sessionCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session count",
                  "title": "SessionCount"
                },
                "statusEnum": {
                  "type": "string",
                  "description": "Status of process (Open, InProcess, Complete, PreparedToComplete, Error)",
                  "title": "Status"
                }
              }
            }
          }
        },
        "summary": "Update process",
        "description": "Update process",
        "operationId": "UpdateProcess",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "ProcessId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId"
                },
                "AssignUserLoginNames": {
                  "type": "string",
                  "description": "Assign user login names to current task. (e.g.: peter.muster@kendox.com;megan.muster@kendox.com)",
                  "title": "AssignUserLoginNames",
                  "x-ms-visibility": "advanced"
                },
                "ProcessProperties": {
                  "type": "string",
                  "description": "Process properties update format: Firstname=Peter|Lastname=Muller|InvoiceNo=4711;4712;4713",
                  "title": "ProcessProperties"
                },
                "CustomProperties": {
                  "type": "string",
                  "description": "Custom properties. Format: [<PropertyName>|<PropertyValue>|PropertyType] (e.g. [Supplier|Muster|String][InvoiceDate|2021-01-29T13:05:45 |Date][InvoiceNo|4711|Number])",
                  "title": "Custom properties",
                  "x-ms-visibility": "advanced"
                },
                "Comment": {
                  "type": "string",
                  "description": "Comment",
                  "title": "Comment"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the property names are given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "ProcessId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/DocumentSearch": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "abonnements": {
                        "type": "string",
                        "description": "List of abonnements",
                        "title": "Abonnements"
                      },
                      "accessRightsEnumList": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)",
                          "title": "accessRightsEnumList"
                        },
                        "description": "accessRightsEnumList"
                      },
                      "annotationManager": {
                        "type": "string",
                        "description": "Annotations for main document file",
                        "title": "AnnotationManager"
                      },
                      "blogs": {
                        "type": "string",
                        "description": "List of all blog items",
                        "title": "Blogs"
                      },
                      "checkOutStateEnum": {
                        "type": "string",
                        "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                        "title": "CheckOutState"
                      },
                      "checkOutUserId": {
                        "type": "string",
                        "description": "Id of the user for which document is checked out",
                        "title": "CheckOutUserId"
                      },
                      "documentData": {
                        "type": "string",
                        "description": "Document data list",
                        "title": "DocumentData"
                      },
                      "hasOverlay": {
                        "type": "boolean",
                        "description": "Defines if the document should be displayed with a overlay",
                        "title": "HasOverlay",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the document",
                        "title": "Id"
                      },
                      "importTemplateId": {
                        "type": "string",
                        "description": "Id of the import template for this document",
                        "title": "ImportTemplateId"
                      },
                      "infoStoreId": {
                        "type": "string",
                        "description": "Id of the info store",
                        "title": "InfoStoreId"
                      },
                      "lifeCycleManager": {
                        "type": "string",
                        "description": "Life cycle informations",
                        "title": "LifeCycleManager"
                      },
                      "mainFileLength": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Main file size",
                        "title": "MainFileLength"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the document",
                        "title": "Name"
                      },
                      "pageCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Page count of main file",
                        "title": "PageCount"
                      },
                      "properties": {
                        "type": "array",
                        "items": {},
                        "description": "properties"
                      },
                      "protectionDomainId": {
                        "type": "string",
                        "description": "Id of the protection domain",
                        "title": "ProtectionDomainId"
                      },
                      "reminders": {
                        "type": "string",
                        "description": "List of all reminders",
                        "title": "Reminders"
                      },
                      "sessionCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Session count",
                        "title": "SessionCount"
                      },
                      "signingProfileId": {
                        "type": "string",
                        "description": "Id of the signing profile",
                        "title": "SigningProfileId"
                      },
                      "versionId": {
                        "type": "string",
                        "description": "Version id of the document",
                        "title": "VersionId"
                      }
                    }
                  },
                  "description": "documents"
                },
                "hasMore": {
                  "type": "boolean",
                  "description": "Indicates, whether more results exists or not. The flag is set to true if more results are available",
                  "title": "HasMore",
                  "enum": [
                    true,
                    false
                  ]
                },
                "resumePoint": {
                  "type": "string",
                  "description": "The resume point from previous search operation. Set null for the first search operation",
                  "title": "ResumePoint"
                }
              }
            }
          }
        },
        "summary": "Document Search",
        "description": "Document Search",
        "operationId": "DocumentSearch",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "Conditions": {
                  "type": "string",
                  "description": "Search condition format: [<PropertyName>|<ComparisonEnum>|<PropertyValue>|<RelationEnum>]. ComparisonEnums: \"Equals,NotEquals,Greater,GreaterEquals,Less,LessEquals,Like,Contains,EqualsUndefined,In,None,Soundex,NotIn\" RelationEnums:\"And,Or\". e.g.: [Last check in|Less|2021-12-31|And],[Firstname|Equals|Peter|And]",
                  "title": "Conditions",
                  "x-ms-visibility": "important"
                },
                "Culture": {
                  "type": "string",
                  "description": "Culture (de,en,fr,...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                },
                "FulltextWords": {
                  "type": "string",
                  "description": "Words to be searcheds with fulltext",
                  "title": "FulltextWords",
                  "x-ms-visibility": "important"
                },
                "FulltextWordRelation": {
                  "type": "string",
                  "description": "Fulltext word relation (AND, OR). Default = AND",
                  "title": "FulltextWordRelation",
                  "x-ms-visibility": "important",
                  "enum": [
                    "AND",
                    "OR"
                  ]
                },
                "MaxSerchResults": {
                  "type": "string",
                  "description": "Maximum number of document search results. Default = 100",
                  "title": "MaxSerchResults"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/GetDocumentProperties": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "globalValues": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "culture": {
                                "type": "string",
                                "description": "Culture"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text"
                              }
                            }
                          },
                          "description": "values"
                        }
                      }
                    },
                    "description": "globalValues"
                  },
                  "propertyName": {
                    "type": "string",
                    "description": "Name of property",
                    "title": "PropertyName"
                  },
                  "propertyTypeId": {
                    "type": "string",
                    "description": "Type id of the index field",
                    "title": "PropertyTypeId"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "List of index values. For date time property types yyyy-MM-ddThh:mm:ss For short date property types yyyy-MM-dd For number property types ###.##",
                      "title": "Values"
                    },
                    "description": "values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get document properties",
        "description": "Get document properties",
        "operationId": "GetDocumentProperties",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "DocumentId": {
                  "type": "string",
                  "description": "Id of document",
                  "title": "DocumentId"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the property names are given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "DocumentId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/GetProcessProperties": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "propertyName": {
                    "type": "string",
                    "description": "Process property name",
                    "title": "PropertyName"
                  },
                  "propertyTypeId": {
                    "type": "string",
                    "description": "Property type id",
                    "title": "PropertyTypeId"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "values"
                  }
                }
              }
            }
          }
        },
        "summary": "Get process properties",
        "description": "Get process properties",
        "operationId": "GetProcessProperties",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "ProcessId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the property names are given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "ProcessId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/GetProcessCustomProperties": {},
    "/api/GetFileContent": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "description": "File Content",
              "title": "File Content"
            }
          }
        },
        "summary": "Get file content",
        "description": "Get file content",
        "operationId": "GetFileContent",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId"
                },
                "DocumentId": {
                  "type": "string",
                  "description": "Id of document",
                  "title": "DocumentId"
                },
                "VersionId": {
                  "type": "string",
                  "description": "Id of version (Guid)",
                  "title": "VersionId",
                  "x-ms-visibility": "advanced"
                },
                "DocumentDataId": {
                  "type": "string",
                  "description": "Id of document data (Guid)",
                  "title": "DocumentDataId",
                  "x-ms-visibility": "advanced"
                },
                "RenditionId": {
                  "type": "string",
                  "description": "Id of document rendition (Guid)",
                  "title": "RenditionId",
                  "x-ms-visibility": "advanced"
                },
                "IgnoreHashValidation": {
                  "type": "boolean",
                  "description": "Ignore system configuration for hash validation. Default = yes",
                  "title": "IgnoreHashValidation",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    false,
                    true
                  ]
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "DocumentId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Process/CloseProcess": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "CloseProcessResult": {
                  "type": "object",
                  "properties": {
                    "AccessRightsEnumList": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)",
                        "title": "AccessRightsEnumList"
                      },
                      "description": "accessRightsEnumList"
                    },
                    "CheckOutStateEnum": {
                      "type": "string",
                      "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                      "title": "CheckOutStateEnum"
                    },
                    "CheckOutUserId": {
                      "type": "string",
                      "description": "Id of the user for which process is checked out",
                      "title": "CheckOutUserId"
                    },
                    "Comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Date": {
                            "type": "string",
                            "description": "Date of comment",
                            "title": "Date"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of comment",
                            "title": "Id"
                          },
                          "Text": {
                            "type": "string",
                            "description": "User defined comment",
                            "title": "Text"
                          },
                          "UserId": {
                            "type": "string",
                            "description": "User id",
                            "title": "UserId"
                          }
                        }
                      },
                      "description": "Comments"
                    },
                    "CompletedDate": {
                      "type": "string",
                      "description": "Completed date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CompletedDate"
                    },
                    "CompletedTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Action": {
                            "type": "string",
                            "description": "Action text for the user",
                            "title": "Action"
                          },
                          "AssignedUserIds": {
                            "type": "array",
                            "items": {},
                            "description": "AssignedUserIds"
                          },
                          "Comments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Date": {
                                  "type": "string",
                                  "description": "Date of comment",
                                  "title": "Date"
                                },
                                "Id": {
                                  "type": "string",
                                  "description": "Id of comment",
                                  "title": "Id"
                                },
                                "Text": {
                                  "type": "string",
                                  "description": "User defined comment",
                                  "title": "Text"
                                },
                                "UserId": {
                                  "type": "string",
                                  "description": "Id of user, who has set the comment",
                                  "title": "UserId"
                                }
                              }
                            },
                            "description": "Comments"
                          },
                          "CompletedDate": {
                            "type": "string",
                            "description": "Completion date of completed task. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CompletedDate"
                          },
                          "CompletedUserIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "CompletedUserIds"
                          },
                          "CreatedDate": {
                            "type": "string",
                            "description": "Creation date of completed task. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "CreatorId": {
                            "type": "string",
                            "description": "User id of the creator of completed task",
                            "title": "CreatorId"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Task description of completed task",
                            "title": "Description"
                          },
                          "DueDate": {
                            "type": "string",
                            "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "DueDate"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of the task",
                            "title": "Id"
                          },
                          "IntendedUserIds": {
                            "type": "array",
                            "items": {},
                            "description": "IntendedUserIds"
                          },
                          "ReminderDate": {
                            "type": "string",
                            "description": "Date for reminder of completed task. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ReminderDate"
                          },
                          "RequiresAllRecipients": {
                            "type": "boolean",
                            "description": "Defines if all recipients have to close this task",
                            "title": "RequiresAllRecipients",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "ShowCloseTaskDialog": {
                            "type": "boolean",
                            "description": "Show close task dialog at task end",
                            "title": "ShowCloseTaskDialog",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "StatusEnum": {
                            "type": "string",
                            "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                            "title": "StatusEnum"
                          },
                          "TaskTemplateId": {
                            "type": "string",
                            "description": "Task template id",
                            "title": "TaskTemplateId"
                          }
                        }
                      },
                      "description": "CompletedTasks"
                    },
                    "CreatedDate": {
                      "type": "string",
                      "description": "Creation date of the process Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CreatedDate"
                    },
                    "CurrentTask": {
                      "type": "object",
                      "properties": {
                        "Action": {
                          "type": "string",
                          "description": "Action text for the user",
                          "title": "Action"
                        },
                        "AssignedUserIds": {
                          "type": "array",
                          "items": {
                            "description": "List of assigned user ids of current task",
                            "title": "AssignedUserIds",
                            "type": "string"
                          },
                          "description": "AssignedUserIds"
                        },
                        "Comments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Date": {
                                "type": "string",
                                "description": "Date of comment",
                                "title": "Date"
                              },
                              "Id": {
                                "type": "string",
                                "description": "Id of comment",
                                "title": "Id"
                              },
                              "Text": {
                                "type": "string",
                                "description": "User defined comment",
                                "title": "Text"
                              },
                              "UserId": {
                                "type": "string",
                                "description": "Id of user, who has set the comment",
                                "title": "UserId"
                              }
                            }
                          },
                          "description": "Comments"
                        },
                        "CompletedDate": {
                          "type": "string",
                          "description": "Completion date of current task. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "CompletedDate"
                        },
                        "CompletedUserIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "List of all completed user ids of current task",
                            "title": "CompletedUserIds"
                          },
                          "description": "CompletedUserIds"
                        },
                        "CreatedDate": {
                          "type": "string",
                          "description": "Creation date of current task. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "CreatedDate"
                        },
                        "CreatorId": {
                          "type": "string",
                          "description": "User id of the creator of current task",
                          "title": "CreatorId"
                        },
                        "Description": {
                          "type": "string",
                          "description": "Task description of current task",
                          "title": "Description"
                        },
                        "DueDate": {
                          "type": "string",
                          "description": "Due date of the current task. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "DueDate"
                        },
                        "Id": {
                          "type": "string",
                          "description": "Id of the current task",
                          "title": "Id"
                        },
                        "IntendedUserIds": {
                          "type": "array",
                          "items": {
                            "description": "Intended users for current task",
                            "title": "IntendedUserIds",
                            "type": "string"
                          },
                          "description": "IntendedUserIds"
                        },
                        "ReminderDate": {
                          "type": "string",
                          "description": "Date for reminder of current task. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "ReminderDate"
                        },
                        "RequiresAllRecipients": {
                          "type": "boolean",
                          "description": "Defines if all recipients have to close the current task",
                          "title": "RequiresAllRecipients",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "ShowCloseTaskDialog": {
                          "type": "boolean",
                          "description": "Show close task dialog at current task",
                          "title": "ShowCloseTaskDialog",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "StatusEnum": {
                          "type": "string",
                          "description": "Status of current task (Open, InProcess, Complete, PreparedToComplete, Error)",
                          "title": "StatusEnum"
                        },
                        "TaskTemplateId": {
                          "type": "string",
                          "description": "Task template id of current task",
                          "title": "TaskTemplateId"
                        }
                      },
                      "description": "CurrentTask"
                    },
                    "CustomProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CustomPropertyTypeEnum": {
                            "type": "string",
                            "description": "Custom property type enum value of custom property (String, Date, Number)",
                            "title": "CustomPropertyTypeEnum"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the custom property",
                            "title": "Name"
                          },
                          "Value": {
                            "type": "string",
                            "description": "Value of the custom property",
                            "title": "Value"
                          }
                        }
                      },
                      "description": "CustomProperties"
                    },
                    "DocumentIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of all attached document ids",
                        "title": "DocumentIds"
                      },
                      "description": "DocumentIds"
                    },
                    "DueDate": {
                      "type": "string",
                      "description": "Due date for the process. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "DueDate"
                    },
                    "Id": {
                      "type": "string",
                      "description": "Id of process",
                      "title": "Id"
                    },
                    "Name": {
                      "type": "object",
                      "properties": {
                        "Values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Culture": {
                                "type": "string",
                                "description": "The culture in which the text is given (de, en, fr, ...)",
                                "title": "Culture"
                              },
                              "Text": {
                                "type": "string",
                                "description": "Name of process",
                                "title": "Text"
                              }
                            }
                          },
                          "description": "Values"
                        }
                      },
                      "description": "Name"
                    },
                    "PluginStream": {
                      "type": "array",
                      "items": {
                        "description": "Data container for plugins",
                        "title": "PluginStream",
                        "type": "string"
                      },
                      "description": "PluginStream"
                    },
                    "PriorityEnum": {
                      "type": "string",
                      "description": "Priority of process (High, Normal, Low)",
                      "title": "PriorityEnum"
                    },
                    "ProcessTemplateId": {
                      "type": "string",
                      "description": "Process template id",
                      "title": "ProcessTemplateId"
                    },
                    "Properties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GlobalValues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Culture": {
                                        "type": "string",
                                        "description": "Culture"
                                      },
                                      "Text": {
                                        "type": "string",
                                        "description": "Text"
                                      }
                                    }
                                  },
                                  "description": "Values"
                                }
                              }
                            },
                            "description": "GlobalValues"
                          },
                          "PropertyTypeId": {
                            "type": "string",
                            "description": "Type id of the index field",
                            "title": "PropertyTypeId"
                          },
                          "Values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Values"
                          }
                        }
                      },
                      "description": "Properties"
                    },
                    "ProtectionDomainId": {
                      "type": "string",
                      "description": "Protection domain id of process",
                      "title": "ProtectionDomainId"
                    },
                    "SessionCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Session count",
                      "title": "SessionCount"
                    },
                    "StatusEnum": {
                      "type": "string",
                      "description": "Status of process (Open, InProcess, Complete, PreparedToComplete, Error)",
                      "title": "StatusEnum"
                    }
                  },
                  "description": "CloseProcessResult"
                }
              }
            }
          }
        },
        "summary": "Close an open process",
        "description": "Close an open process",
        "operationId": "CloseProcess",
        "parameters": [
          {
            "name": "ArchiveUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
            "x-ms-visibility": "important",
            "x-ms-summary": "ArchiveUrl"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "processId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId",
                  "x-ms-visibility": "important"
                },
                "comment": {
                  "type": "string",
                  "description": "Comment to add",
                  "title": "Comment",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "connectionId",
                "processId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Authentication/Logon": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "LogonResult": {
                  "type": "object",
                  "properties": {
                    "ConnectionId": {
                      "type": "string",
                      "description": "The connection id to identify your connection",
                      "title": "ConnectionId",
                      "x-ms-visibility": "important"
                    },
                    "ConnectionTimeoutSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Connection timeout in seconds",
                      "title": "ConnectionTimeoutSeconds",
                      "x-ms-visibility": "important"
                    },
                    "IsApplicationLicence": {
                      "type": "boolean",
                      "description": "Is application license type",
                      "title": "IsApplicationLicence",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "important"
                    },
                    "IsConcurrentLicence": {
                      "type": "boolean",
                      "description": "Is concurrent licence type",
                      "title": "IsConcurrentLicence",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "important"
                    },
                    "IsNamedLicence": {
                      "type": "boolean",
                      "description": "Is named license type",
                      "title": "IsNamedLicence",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "important"
                    },
                    "IsVerificationCodeNeeded": {
                      "type": "boolean",
                      "description": "Is verification code needed",
                      "title": "IsVerificationCodeNeeded",
                      "enum": [
                        true,
                        false
                      ],
                      "x-ms-visibility": "important"
                    },
                    "JWTToken": {
                      "type": "string",
                      "description": "The JWT token for this connection",
                      "title": "JWTToken",
                      "x-ms-visibility": "important"
                    },
                    "PossibleTwoWayAuthenticationType": {
                      "type": "string",
                      "description": "Possible two way authentication type (None, Mail, SMS)",
                      "title": "PossibleTwoWayAuthenticationType",
                      "x-ms-visibility": "important"
                    },
                    "TwoWayAuthenticationTargetMail": {
                      "type": "string",
                      "description": "The masked mail address where twoWayAuthentication will send mail to",
                      "title": "TwoWayAuthenticationTargetMail",
                      "x-ms-visibility": "important"
                    }
                  },
                  "description": "LogonResult"
                }
              }
            }
          }
        },
        "summary": "Logon with hashed password",
        "description": "Logon with hashed password",
        "operationId": "LogonWithHashedPassword",
        "parameters": [
          {
            "name": "ArchiveUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
            "x-ms-visibility": "important",
            "x-ms-summary": "ArchiveUrl"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string",
                  "description": "User name for logon",
                  "title": "User name",
                  "x-ms-visibility": "important"
                },
                "passwordHashed": {
                  "type": "string",
                  "description": "User password for logon (Base64 encoded SHA 512 Hash)",
                  "title": "Hashed password",
                  "x-ms-visibility": "important"
                },
                "tenantName": {
                  "type": "string",
                  "description": "Tenant name to logon to",
                  "title": "Tenant name",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "userName",
                "passwordHashed"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Process/CloseTask": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action text for the user. Displayed to the end user",
                  "title": "Action"
                },
                "assignedUserIds": {
                  "type": "string",
                  "description": "List of assigned user ids",
                  "title": "AssignedUserIds"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date of comment",
                        "title": "Date"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of comment",
                        "title": "Id"
                      },
                      "text": {
                        "type": "string",
                        "description": "User defined comment",
                        "title": "Text"
                      },
                      "userId": {
                        "type": "string",
                        "description": "User Id",
                        "title": "UserId"
                      }
                    }
                  },
                  "description": "comments"
                },
                "completedDate": {
                  "type": "string",
                  "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CompletedDate"
                },
                "completedUserIds": {
                  "type": "string",
                  "description": "List of all completed user ids",
                  "title": "CompletedUserIds"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CreatedDate"
                },
                "creatorId": {
                  "type": "string",
                  "description": "User id of the creator",
                  "title": "CreatorId"
                },
                "description": {
                  "type": "string",
                  "description": "Task description",
                  "title": "Description"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "DueDate"
                },
                "intendedUserIds": {
                  "type": "string",
                  "description": "Intended users for this task",
                  "title": "IntendedUserIds"
                },
                "reminderDate": {
                  "type": "string",
                  "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "ReminderDate"
                },
                "requiresAllRecipients": {
                  "type": "boolean",
                  "description": "Defines if all recipients have to close this task",
                  "title": "RequiresAllRecipients",
                  "enum": [
                    true,
                    false
                  ]
                },
                "showCloseTaskDialog": {
                  "type": "boolean",
                  "description": "Show close task dialog at task end",
                  "title": "ShowCloseTaskDialog",
                  "enum": [
                    true,
                    false
                  ]
                },
                "statusEnum": {
                  "type": "string",
                  "description": "Status of task Status (Open, InProcess, Complete, PreparedToComplete, Error)",
                  "title": "Status"
                },
                "taskTemplateId": {
                  "type": "string",
                  "description": "Task template id",
                  "title": "TaskTemplateId"
                }
              }
            }
          }
        },
        "summary": "Close task and continue process",
        "description": "Close task and continue process",
        "operationId": "CloseTask",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "ArchiveUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
            "x-ms-visibility": "important",
            "x-ms-summary": "ArchiveUrl"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "processId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId",
                  "x-ms-visibility": "important"
                },
                "comment": {
                  "type": "string",
                  "description": "Comment to add",
                  "title": "Comment",
                  "x-ms-visibility": "important"
                },
                "taskId": {
                  "type": "string",
                  "description": "Task id",
                  "title": "TaskId",
                  "x-ms-visibility": "advanced"
                },
                "assignUsers": {
                  "type": "boolean",
                  "description": "Assign to users. If set to no, assign user with action Update process",
                  "title": "AssignUsers",
                  "x-ms-visibility": "important",
                  "default": true,
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "required": [
                "connectionId",
                "processId",
                "assignUsers"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Document/GetDocument": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "GetDocumentResult": {
                  "type": "object",
                  "properties": {
                    "Abonnements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "OnContentChange": {
                            "type": "boolean",
                            "description": "Abonnement is active on file changes",
                            "title": "OnContentChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "OnDelete": {
                            "type": "boolean",
                            "description": "Abonnement is active on delete",
                            "title": "OnDelete",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "OnMetadataChange": {
                            "type": "boolean",
                            "description": "Abonnement is active on index changes",
                            "title": "OnMetadataChange",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "UserId": {
                            "type": "string",
                            "description": "The user id for this abonnnement",
                            "title": "UserId"
                          }
                        }
                      },
                      "description": "Abonnements"
                    },
                    "AccessRightsEnumList": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)",
                        "title": "AccessRightsEnumList"
                      },
                      "description": "accessRightsEnumList"
                    },
                    "AnnotationManager": {
                      "type": "object",
                      "properties": {
                        "PostItAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "CreatedDate": {
                                "type": "string",
                                "description": "Creation date from post it annotation",
                                "title": "CreatedDate"
                              },
                              "CreatorId": {
                                "type": "string",
                                "description": "User id of creator from post it annotation",
                                "title": "CreatorId"
                              },
                              "FontInfo": {
                                "type": "object",
                                "properties": {
                                  "IsItalic": {
                                    "type": "boolean",
                                    "description": "Is font italic from post it annotation",
                                    "title": "IsItalic",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "IsStrikeOut": {
                                    "type": "boolean",
                                    "description": "Is Font strike out from post it annotation",
                                    "title": "IsStrikeOut",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "IsUnderline": {
                                    "type": "boolean",
                                    "description": "Is Font is underline from post it annotation",
                                    "title": "IsUnderline",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "Font name from post it annotation. Default = Arial",
                                    "title": "Name"
                                  },
                                  "Pitch": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font pitch from post it annotation",
                                    "title": "Pitch"
                                  },
                                  "Size": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font size from post it annotation. Example: Size:12 is 12000. You need factor 1000",
                                    "title": "Size"
                                  },
                                  "Weight": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font weight from post it annotation",
                                    "title": "Weight"
                                  }
                                },
                                "description": "FontInfo"
                              },
                              "Id": {
                                "type": "string",
                                "description": "Id of the post it annotation",
                                "title": "Id"
                              },
                              "ModifiedDate": {
                                "type": "string",
                                "description": "Date of modification from post it annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                                "title": "ModifiedDate"
                              },
                              "PageNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of page from post it annotation",
                                "title": "PageNumber"
                              },
                              "SecurityLevelEnum": {
                                "type": "string",
                                "description": "Security level for post it annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                                "title": "SecurityLevelEnum"
                              },
                              "Selectable": {
                                "type": "boolean",
                                "description": "Defines if post it annotation is selectable by user",
                                "title": "Selectable",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Text": {
                                "type": "string",
                                "description": "User defined text for post it annotation",
                                "title": "Text"
                              },
                              "X": {
                                "type": "integer",
                                "format": "int32",
                                "description": "X coordinate in pixel per inch for 7200 DPI of post it annotation",
                                "title": "X"
                              },
                              "Y": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Y coordinate in pixel per inch for 7200 DPI of post it annotation",
                                "title": "Y"
                              }
                            }
                          },
                          "description": "PostItAnnotations"
                        },
                        "RectangleAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Color": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Color of rectangle (32 bit ARGB value) from rectangle annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                                "title": "Color"
                              },
                              "ColorHexCode": {
                                "type": "string",
                                "description": "Color of rectangle (RGB hexadecimal code) from rectangle annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                                "title": "ColorHexCode"
                              },
                              "CreatedDate": {
                                "type": "string",
                                "description": "Creation date from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                                "title": "CreatedDate"
                              },
                              "CreatorId": {
                                "type": "string",
                                "description": "CreatorId"
                              },
                              "Height": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Height of rectangle in pixel per inch for 7200 DPI",
                                "title": "Height"
                              },
                              "Id": {
                                "type": "string",
                                "description": "Id of the rectangle annotation",
                                "title": "Id"
                              },
                              "ModifiedDate": {
                                "type": "string",
                                "description": "Date of modification from rectangle annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                                "title": "ModifiedDate"
                              },
                              "PageNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of page from rectangle annotation",
                                "title": "PageNumber"
                              },
                              "SecurityLevelEnum": {
                                "type": "string",
                                "description": "Security level for rectangle annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                                "title": "SecurityLevelEnum"
                              },
                              "Selectable": {
                                "type": "boolean",
                                "description": "Defines if rectangle annotation is selectable by user",
                                "title": "Selectable",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Transparent": {
                                "type": "boolean",
                                "description": "Rectangle should be transparent (highlight)",
                                "title": "Transparent",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Width": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Width of rectangle in pixel per inch for 7200 DPI",
                                "title": "Width"
                              },
                              "X": {
                                "type": "integer",
                                "format": "int32",
                                "description": "X coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                                "title": "X"
                              },
                              "Y": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Y coordinate in pixel per inch for 7200 DPI from rectangle annotation",
                                "title": "Y"
                              }
                            }
                          },
                          "description": "RectangleAnnotations"
                        },
                        "TextAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "BackgroundColor": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Color of background (32 bit ARGB value) from text annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                                "title": "BackgroundColor"
                              },
                              "BackgroundColorHexCode": {
                                "type": "string",
                                "description": "Color of background (RGB hexadecimal code) from text annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                                "title": "BackgroundColorHexCode"
                              },
                              "CreatedDate": {
                                "type": "string",
                                "description": "creation date from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                                "title": "CreatedDate"
                              },
                              "CreatorId": {
                                "type": "string",
                                "description": "User id of creator from text annotation",
                                "title": "CreatorId"
                              },
                              "FontInfo": {
                                "type": "object",
                                "properties": {
                                  "IsItalic": {
                                    "type": "boolean",
                                    "description": "Is Font italic from text annotation",
                                    "title": "IsItalic",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "IsStrikeOut": {
                                    "type": "boolean",
                                    "description": "Is font strike out from text annotation",
                                    "title": "IsStrikeOut",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "IsUnderline": {
                                    "type": "boolean",
                                    "description": "Is font underline from text annotation",
                                    "title": "IsUnderline",
                                    "enum": [
                                      true,
                                      false
                                    ]
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "Font name from text annotation. Default = Arial",
                                    "title": "Name"
                                  },
                                  "Pitch": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font pitch from text annotation",
                                    "title": "Pitch"
                                  },
                                  "Size": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font size from text annotation.. Example: Size:12 is 12000. You need factor 1000",
                                    "title": "Size"
                                  },
                                  "Weight": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Font weight from text annotation",
                                    "title": "Weight"
                                  }
                                },
                                "description": "FontInfo"
                              },
                              "ForegroundColor": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Color of the foreground (32 bit ARGB value) from text annotation. Example: Black: -16777216 White: -1 Red: -65536 Green: -16744448 Blue: -16776961",
                                "title": "ForegroundColor"
                              },
                              "ForegroundColorHexCode": {
                                "type": "string",
                                "description": "Color of foreground (RGB hexadecimal code) from text annotation. Example: Black: #000000 White: #FFFFFF Red: #FF0000 Green: #008000 Blue: #0000FF",
                                "title": "ForegroundColorHexCode"
                              },
                              "Height": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Height of text in pixel per inch for 7200 DPI from text annotation",
                                "title": "Height"
                              },
                              "Id": {
                                "type": "string",
                                "description": "Id of text annotation",
                                "title": "Id"
                              },
                              "ModifiedDate": {
                                "type": "string",
                                "description": "Date of modification from text annotation. Date format: yyyy-MM-ddTHH:mm:ss",
                                "title": "ModifiedDate"
                              },
                              "PageNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of page from text annotation",
                                "title": "PageNumber"
                              },
                              "Rotation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Rotation in degrees from text annotation",
                                "title": "Rotation"
                              },
                              "SecurityLevelEnum": {
                                "type": "string",
                                "description": "Security level for text annotation (PubliclyAvailable, Personal, PersonalProtected, OnlyEditors). Default = PubliclyAvailable",
                                "title": "SecurityLevelEnum"
                              },
                              "Selectable": {
                                "type": "boolean",
                                "description": "Defines if text annotation is selectable by user",
                                "title": "Selectable",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Text": {
                                "type": "string",
                                "description": "User defined Text of text annotation",
                                "title": "Text"
                              },
                              "Transparent": {
                                "type": "boolean",
                                "description": "Text annotation should be transparent",
                                "title": "Transparent",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Width": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Width of text in pixel per inch for 7200 DPI from text annotation",
                                "title": "Width"
                              },
                              "X": {
                                "type": "integer",
                                "format": "int32",
                                "description": "X coordinate in pixel per inch for 7200 DPI from text annotation",
                                "title": "X"
                              },
                              "Y": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Y coordinate in pixel per inch for 7200 DPI from text annotation",
                                "title": "Y"
                              }
                            }
                          },
                          "description": "TextAnnotations"
                        }
                      },
                      "description": "AnnotationManager"
                    },
                    "Blogs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CreatedDate": {
                            "type": "string",
                            "description": "Date on which the Blog was created. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "CreatorId": {
                            "type": "string",
                            "description": "User Id of the creating user blog",
                            "title": "CreatorId"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of the blog",
                            "title": "Id"
                          },
                          "Text": {
                            "type": "string",
                            "description": "Text of blog item",
                            "title": "Text"
                          }
                        }
                      },
                      "description": "Blogs"
                    },
                    "CheckOutStateEnum": {
                      "type": "string",
                      "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                      "title": "CheckOutStateEnum"
                    },
                    "CheckOutUserId": {
                      "type": "string",
                      "description": "Id of the user for which document is checked out",
                      "title": "CheckOutUserId"
                    },
                    "DocumentData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Id": {
                            "type": "string",
                            "description": "Id of document rendition",
                            "title": "Id"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Document name of rendition",
                            "title": "Name"
                          },
                          "Renditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ContentProtections": {
                                  "type": "array",
                                  "items": {},
                                  "description": "ContentProtections"
                                },
                                "Extension": {
                                  "type": "string",
                                  "description": "Extension"
                                },
                                "Files": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "BlobPath": {
                                        "type": "string",
                                        "description": "BlobPath"
                                      },
                                      "BlobStoreId": {
                                        "type": "string",
                                        "description": "BlobStoreId"
                                      }
                                    }
                                  },
                                  "description": "Files"
                                },
                                "HashValue": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "HashValue"
                                },
                                "Id": {
                                  "type": "string",
                                  "description": "Id"
                                },
                                "PageCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "PageCount"
                                },
                                "Size": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Size"
                                }
                              }
                            },
                            "description": "Renditions"
                          }
                        }
                      },
                      "description": "DocumentData"
                    },
                    "HasOverlay": {
                      "type": "boolean",
                      "description": "Defines if the document should be displayed with a overlay",
                      "title": "HasOverlay",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "Id": {
                      "type": "string",
                      "description": "Id of the document",
                      "title": "Id"
                    },
                    "ImportTemplateId": {
                      "type": "string",
                      "description": "Id of the import template for this document",
                      "title": "ImportTemplateId"
                    },
                    "InfoStoreId": {
                      "type": "string",
                      "description": "Id of the info store",
                      "title": "InfoStoreId"
                    },
                    "LifeCycleManager": {
                      "type": "object",
                      "properties": {
                        "CheckOutLifeCycleStateId": {
                          "type": "string",
                          "description": "Checkout life cycle state",
                          "title": "CheckOutLifeCycleStateId"
                        },
                        "LifeCycleEndDate": {
                          "type": "string",
                          "description": "Calculated end date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "LifeCycleEndDate"
                        },
                        "LifeCycleStartDate": {
                          "type": "string",
                          "description": "Start date of the life cycle. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "LifeCycleStartDate"
                        },
                        "LifeCycleStateId": {
                          "type": "string",
                          "description": "Id of the LifeCycle state",
                          "title": "LifeCycleStateId"
                        },
                        "NextAutomaticLifeCycleStateId": {
                          "type": "string",
                          "description": "Next automatic life cycle state",
                          "title": "NextAutomaticLifeCycleStateId"
                        },
                        "NextLifeCycleStates": {
                          "type": "array",
                          "items": {
                            "description": "Available next life cycle states",
                            "title": "NextLifeCycleStates",
                            "type": "string"
                          },
                          "description": "NextLifeCycleStates"
                        },
                        "LifeCycleProtections": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "DeleteAfterExpiration": {
                                "type": "boolean",
                                "description": "Allow to delete document after protection expiration",
                                "title": "DeleteAfterExpiration",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "Id": {
                                "type": "string",
                                "description": "Id of life cycle state protection",
                                "title": "Id"
                              },
                              "ProtectAnnotationChange": {
                                "type": "boolean",
                                "description": "Protect against annotation changes",
                                "title": "ProtectAnnotationChange",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectCheckOut": {
                                "type": "boolean",
                                "description": "Protect against check out",
                                "title": "ProtectCheckOut",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectContentChange": {
                                "type": "boolean",
                                "description": "Protect against content change",
                                "title": "ProtectContentChange",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectDelete": {
                                "type": "boolean",
                                "description": "Protect against delete",
                                "title": "ProtectDelete",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectPropertyChange": {
                                "type": "boolean",
                                "description": "Protect against property changes",
                                "title": "ProtectPropertyChange",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectProtectionDomainChange": {
                                "type": "boolean",
                                "description": "Protect against security change",
                                "title": "ProtectProtectionDomainChange",
                                "enum": [
                                  true,
                                  false
                                ]
                              },
                              "ProtectionDurationTicks": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Duration of protection",
                                "title": "ProtectionDurationTicks"
                              }
                            }
                          },
                          "description": "LifeCycleProtections"
                        },
                        "LifeCycleId": {
                          "type": "string",
                          "description": "Id of the LifeCycle",
                          "title": "LifeCycleId"
                        }
                      },
                      "description": "LifeCycleManager"
                    },
                    "MainFileLength": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Main file size",
                      "title": "MainFileLength"
                    },
                    "Name": {
                      "type": "string",
                      "description": "Name of the document",
                      "title": "Name"
                    },
                    "PageCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Page count of main file",
                      "title": "PageCount"
                    },
                    "Properties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GlobalValues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Culture": {
                                        "type": "string",
                                        "description": "Culture"
                                      },
                                      "Text": {
                                        "type": "string",
                                        "description": "Text"
                                      }
                                    }
                                  },
                                  "description": "Values"
                                }
                              }
                            },
                            "description": "GlobalValues"
                          },
                          "PropertyTypeId": {
                            "type": "string",
                            "description": "Type id of the index field",
                            "title": "PropertyTypeId"
                          },
                          "Values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Values"
                          }
                        }
                      },
                      "description": "Properties"
                    },
                    "ProtectionDomainId": {
                      "type": "string",
                      "description": "Id of the protection domain",
                      "title": "ProtectionDomainId"
                    },
                    "Reminders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Description": {
                            "type": "string",
                            "description": "Description for reminder",
                            "title": "Description"
                          },
                          "Interval": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Interval in days between reminders",
                            "title": "Interval"
                          },
                          "ProcessTemplateId": {
                            "type": "string",
                            "description": "Process template Id for this reminder",
                            "title": "ProcessTemplateId"
                          },
                          "ReminderDate": {
                            "type": "string",
                            "description": "Date of the reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ReminderDate"
                          },
                          "ReminderId": {
                            "type": "string",
                            "description": "Id of the reminder",
                            "title": "ReminderId"
                          },
                          "SubjectIds": {
                            "type": "array",
                            "items": {},
                            "description": "subjectIds"
                          },
                          "UseUserFromProcessTemplate": {
                            "type": "boolean",
                            "description": "Defines if the user definition from process template will be used",
                            "title": "UseUserFromProcessTemplate",
                            "enum": [
                              true,
                              false
                            ]
                          }
                        }
                      },
                      "description": "Reminders"
                    },
                    "SessionCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Session count",
                      "title": "SessionCount"
                    },
                    "SigningProfileId": {
                      "type": "string",
                      "description": "Id of the signing profile",
                      "title": "SigningProfileId"
                    },
                    "VersionId": {
                      "type": "string",
                      "description": "Version id of the document",
                      "title": "VersionId"
                    }
                  },
                  "description": "GetDocumentResult"
                }
              }
            }
          }
        },
        "summary": "Get document",
        "description": "Get document",
        "operationId": "GetDocument",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "ArchiveUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
            "x-ms-summary": "ArchiveUrl"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "documentId": {
                  "type": "string",
                  "description": "The document id",
                  "title": "DocumentId",
                  "x-ms-visibility": "important"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "connectionId",
                "documentId"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Process/GetProcess": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "GetProcessResult": {
                  "type": "object",
                  "properties": {
                    "AccessRightsEnumList": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "title": "AccessRightsEnumList",
                        "x-ms-visibility": "important",
                        "description": "List of all allowed access rights (Export, CheckOut, Delete, DeleteVersion, ...)"
                      },
                      "description": "accessRightsEnumList"
                    },
                    "CheckOutStateEnum": {
                      "type": "string",
                      "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                      "title": "CheckOutStateEnum"
                    },
                    "CheckOutUserId": {
                      "type": "string",
                      "description": "Id of the user for which process is checked out",
                      "title": "CheckOutUserId"
                    },
                    "Comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Date": {
                            "type": "string",
                            "description": "Date of comment",
                            "title": "Date"
                          },
                          "Id": {
                            "type": "string",
                            "description": "Id of comment",
                            "title": "Id"
                          },
                          "Text": {
                            "type": "string",
                            "description": "User defined comment",
                            "title": "Text"
                          },
                          "UserId": {
                            "type": "string",
                            "description": "Id of user, who has set the comment",
                            "title": "UserId"
                          }
                        }
                      },
                      "description": "Comments"
                    },
                    "CompletedDate": {
                      "type": "string",
                      "description": "Completed date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CompletedDate"
                    },
                    "CompletedTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Action": {
                            "type": "string",
                            "description": "Action text for the user. Displayed to the end user",
                            "title": "Action"
                          },
                          "AssignedUserIds": {
                            "type": "array",
                            "items": {},
                            "description": "assignedUserIds"
                          },
                          "Comments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Date": {
                                  "type": "string",
                                  "description": "Date of comment",
                                  "title": "Date"
                                },
                                "Id": {
                                  "type": "string",
                                  "description": "Id of comment",
                                  "title": "Id"
                                },
                                "Text": {
                                  "type": "string",
                                  "description": "User defined comment",
                                  "title": "Text"
                                },
                                "UserId": {
                                  "type": "string",
                                  "description": "Id of user, who has set the comment",
                                  "title": "UserId"
                                }
                              }
                            },
                            "description": "Comments"
                          },
                          "CompletedDate": {
                            "type": "string",
                            "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CompletedDate"
                          },
                          "CompletedUserIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "completedUserIds"
                          },
                          "CreatedDate": {
                            "type": "string",
                            "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "CreatedDate"
                          },
                          "CreatorId": {
                            "type": "string",
                            "description": "User id of the creator",
                            "title": "CreatorId"
                          },
                          "Description": {
                            "type": "string",
                            "description": "Task description",
                            "title": "Description"
                          },
                          "DueDate": {
                            "type": "string",
                            "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "DueDate"
                          },
                          "IntendedUserIds": {
                            "type": "array",
                            "items": {},
                            "description": "intendedUserIds"
                          },
                          "ReminderDate": {
                            "type": "string",
                            "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                            "title": "ReminderDate"
                          },
                          "RequiresAllRecipients": {
                            "type": "boolean",
                            "description": "Defines if all recipients have to close this task",
                            "title": "RequiresAllRecipients",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "ShowCloseTaskDialog": {
                            "type": "boolean",
                            "description": "Show close task dialog at task end",
                            "title": "ShowCloseTaskDialog",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "StatusEnum": {
                            "type": "string",
                            "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                            "title": "Status"
                          },
                          "TaskTemplateId": {
                            "type": "string",
                            "description": "Task template id",
                            "title": "TaskTemplateId"
                          }
                        }
                      },
                      "description": "CompletedTasks"
                    },
                    "CreatedDate": {
                      "type": "string",
                      "description": "Creation date of the process. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CreatedDate"
                    },
                    "CurrentTask": {
                      "type": "object",
                      "properties": {
                        "Action": {
                          "type": "string",
                          "description": "Action text for the user. Displayed to the end user",
                          "title": "Action"
                        },
                        "AssignedUserIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "List of assigned user ids",
                            "title": "AssignedUserIds"
                          },
                          "description": "AssignedUserIds"
                        },
                        "Comments": {
                          "type": "array",
                          "items": {
                            "description": "List of all comments",
                            "title": "Comments",
                            "type": "string"
                          },
                          "description": "Comments"
                        },
                        "CompletedDate": {
                          "type": "string",
                          "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "CompletedDate"
                        },
                        "CompletedUserIds": {
                          "type": "array",
                          "items": {
                            "description": "List of all completed user ids",
                            "title": "CompletedUserIds",
                            "type": "string"
                          },
                          "description": "CompletedUserIds"
                        },
                        "CreatedDate": {
                          "type": "string",
                          "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "CreatedDate"
                        },
                        "CreatorId": {
                          "type": "string",
                          "description": "User id of the creator",
                          "title": "CreatorId"
                        },
                        "Description": {
                          "type": "string",
                          "description": "Task description",
                          "title": "Description"
                        },
                        "DueDate": {
                          "type": "string",
                          "description": "Due date of the task. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "DueDate"
                        },
                        "Id": {
                          "type": "string",
                          "description": "Id of the task",
                          "title": "Id"
                        },
                        "IntendedUserIds": {
                          "type": "array",
                          "items": {
                            "description": "Intended users for this task",
                            "title": "IntendedUserIds",
                            "type": "string"
                          },
                          "description": "IntendedUserIds"
                        },
                        "ReminderDate": {
                          "type": "string",
                          "description": "Date for reminder. Date format: yyyy-MM-ddTHH:mm:ss",
                          "title": "ReminderDate"
                        },
                        "RequiresAllRecipients": {
                          "type": "boolean",
                          "description": "Defines if all recipients have to close this task",
                          "title": "RequiresAllRecipients",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "ShowCloseTaskDialog": {
                          "type": "boolean",
                          "description": "Show close task dialog at task end",
                          "title": "ShowCloseTaskDialog",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "StatusEnum": {
                          "type": "string",
                          "description": "Status of task (Open, InProcess, Complete, PreparedToComplete, Error)",
                          "title": "StatusEnum"
                        },
                        "TaskTemplateId": {
                          "type": "string",
                          "description": "Task template id",
                          "title": "TaskTemplateId"
                        }
                      },
                      "description": "CurrentTask"
                    },
                    "CustomProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CustomPropertyTypeEnum": {
                            "type": "string",
                            "description": "List of custom property data type (String, Date, Number)",
                            "title": "CustomPropertyTypeEnum"
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of custom property type",
                            "title": "Name"
                          },
                          "Value": {
                            "type": "string",
                            "description": "Value of custom property type",
                            "title": "Value"
                          }
                        }
                      },
                      "description": "CustomProperties"
                    },
                    "DocumentIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of all attached document ids",
                        "title": "DocumentIds"
                      },
                      "description": "DocumentIds"
                    },
                    "DueDate": {
                      "type": "string",
                      "description": "Due date for the process. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "DueDate"
                    },
                    "Id": {
                      "type": "string",
                      "description": "Id of process",
                      "title": "Id"
                    },
                    "Name": {
                      "type": "object",
                      "properties": {
                        "Values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Culture": {
                                "type": "string",
                                "description": "The culture in which the text is given (de, en, fr, ...)",
                                "title": "Culture"
                              },
                              "Text": {
                                "type": "string",
                                "description": "Text",
                                "title": "Text"
                              }
                            }
                          },
                          "description": "Values"
                        }
                      },
                      "description": "Name"
                    },
                    "PluginStream": {
                      "type": "array",
                      "items": {
                        "description": "Data container for plugins",
                        "title": "PluginStream",
                        "type": "string"
                      },
                      "description": "PluginStream"
                    },
                    "PriorityEnum": {
                      "type": "string",
                      "description": "Priority of process (High, Normal, Low)",
                      "title": "PriorityEnum"
                    },
                    "ProcessTemplateId": {
                      "type": "string",
                      "description": "Process template id",
                      "title": "ProcessTemplateId"
                    },
                    "Properties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "GlobalValues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Culture": {
                                        "type": "string",
                                        "description": "Culture"
                                      },
                                      "Text": {
                                        "type": "string",
                                        "description": "Text"
                                      }
                                    }
                                  },
                                  "description": "Values"
                                }
                              }
                            },
                            "description": "GlobalValues"
                          },
                          "PropertyTypeId": {
                            "type": "string",
                            "description": "Property type id",
                            "title": "PropertyTypeId"
                          },
                          "Values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Values"
                          }
                        }
                      },
                      "description": "Properties"
                    },
                    "ProtectionDomainId": {
                      "type": "string",
                      "description": "Protection domain id of process",
                      "title": "ProtectionDomainId"
                    },
                    "SessionCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Session count",
                      "title": "SessionCount"
                    },
                    "StatusEnum": {
                      "type": "string",
                      "description": "Status of process (Open, InProcess, Complete, PreparedToComplete, Error)",
                      "title": "StatusEnum"
                    }
                  },
                  "description": "GetProcessResult"
                }
              }
            }
          }
        },
        "summary": "Get process",
        "description": "Get Process",
        "operationId": "GetProcess",
        "parameters": [
          {
            "name": "ArchiveUrl",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
            "x-ms-summary": "ArchiveUrl"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "processId": {
                  "type": "string",
                  "description": "Id of process (Guid)",
                  "title": "ProcessId",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "connectionId",
                "processId"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/GetFileContentConverted": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "description": "File content converted",
              "title": "File Content"
            }
          }
        },
        "summary": "Get file content converted",
        "description": "Convert file content to different format. Add annotation or overlay to file content",
        "operationId": "GetFileContentConverted",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "DocumentId": {
                  "type": "string",
                  "description": "Id of document",
                  "title": "DocumentId",
                  "x-ms-visibility": "important"
                },
                "VersionId": {
                  "type": "string",
                  "description": "Id of version (Guid)Id of version (Guid)",
                  "title": "VersionId",
                  "x-ms-visibility": "advanced"
                },
                "DocumentDataId": {
                  "type": "string",
                  "description": "Id of document data (Guid)",
                  "title": "DocumentDataId",
                  "x-ms-visibility": "advanced"
                },
                "RenditionId": {
                  "type": "string",
                  "description": "Id of document rendition (Guid)",
                  "title": "RenditionId",
                  "x-ms-visibility": "advanced"
                },
                "TargetFormat": {
                  "type": "string",
                  "description": "The target format (e.g. \"png;pdf;tif;...\")",
                  "title": "TargetFormat",
                  "x-ms-visibility": "important"
                },
                "AddAnnotatins": {
                  "type": "boolean",
                  "description": "Defines if document should be exported with annotations. Default = yes",
                  "title": "AddAnnotatins",
                  "x-ms-visibility": "important",
                  "enum": [
                    true,
                    false
                  ]
                },
                "AddOverlay": {
                  "type": "boolean",
                  "description": "Defines if document should be exported with overlays. Default = yes",
                  "title": "AddOverlay",
                  "x-ms-visibility": "important",
                  "enum": [
                    true,
                    false
                  ]
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "DocumentId"
              ]
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/CreateProcess": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "accessRightsEnumList": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all allowed access rights (Export, CheckOut, Delete, ...)",
                    "title": "AccessRightsList"
                  },
                  "description": "accessRightsEnumList"
                },
                "checkOutStateEnum": {
                  "type": "string",
                  "description": "Check out state of the document (NotCheckedOut, CheckedOut, CheckedOutExclusive, Null)",
                  "title": "CheckOutState"
                },
                "checkOutUserId": {
                  "type": "string",
                  "description": "Id of the user for which process is checked out",
                  "title": "CheckOutUserId"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date of comment",
                        "title": "Date"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of comment",
                        "title": "Id"
                      },
                      "text": {
                        "type": "string",
                        "description": "User defined comment",
                        "title": "Text"
                      },
                      "userId": {
                        "type": "string",
                        "description": "User Id",
                        "title": "UserId"
                      }
                    }
                  },
                  "description": "comments"
                },
                "completedDate": {
                  "type": "string",
                  "description": "Completion date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CompletedDate"
                },
                "completedTasks": {
                  "type": "array",
                  "items": {
                    "description": "CompletedTasks",
                    "title": "CompletedTasks",
                    "type": "string"
                  },
                  "description": "completedTasks"
                },
                "createdDate": {
                  "type": "string",
                  "description": "Creation date. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "CreatedDate"
                },
                "currentTask": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "Action text for the user. Displayed to the end user",
                      "title": "Action"
                    },
                    "assignedUserIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Assigned user Ids of current task",
                        "title": "AssignedUserIds"
                      },
                      "description": "assignedUserIds"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "description": "User defined comment for current task",
                        "title": "Comment",
                        "type": "string"
                      },
                      "description": "comments"
                    },
                    "completedDate": {
                      "type": "string",
                      "description": "Completion date for current task. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CompletedDate"
                    },
                    "completedUserIds": {
                      "type": "array",
                      "items": {
                        "description": "List of all completed user ids for current task",
                        "title": "CompletedUserIds",
                        "type": "string"
                      },
                      "description": "completedUserIds"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "Creation date for current task. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "CreatedDate"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "User id of creator for current task",
                      "title": "CreatorId"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of current task",
                      "title": "Description"
                    },
                    "dueDate": {
                      "type": "string",
                      "description": "Due date of current task. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "DueDate"
                    },
                    "intendedUserIds": {
                      "type": "array",
                      "items": {
                        "description": "Intended users for current task",
                        "title": "IntendedUserIds",
                        "type": "string"
                      },
                      "description": "intendedUserIds"
                    },
                    "reminderDate": {
                      "type": "string",
                      "description": "Date for reminder of current task. Date format: yyyy-MM-ddTHH:mm:ss",
                      "title": "ReminderDate"
                    },
                    "requiresAllRecipients": {
                      "type": "boolean",
                      "description": "Defines if all recipients have to close this task",
                      "title": "RequiresAllRecipients",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "showCloseTaskDialog": {
                      "type": "boolean",
                      "description": "Show close task dialog at task end",
                      "title": "ShowCloseTaskDialog",
                      "enum": [
                        true,
                        false
                      ]
                    },
                    "statusEnum": {
                      "type": "string",
                      "description": "Status current task (Open, InProcess, Complete, PreparedToComplete, Error)",
                      "title": "StatusEnum"
                    },
                    "taskTemplateId": {
                      "type": "string",
                      "description": "Template id of current task",
                      "title": "TaskTemplateId"
                    }
                  },
                  "description": "currentTask"
                },
                "customProperties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customPropertyTypeEnum": {
                        "type": "string",
                        "description": "Custom property type enum value (String, Date, Number)",
                        "title": "CustomPropertyTypeEnum"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of custom property",
                        "title": "Name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value of custom property",
                        "title": "Value"
                      }
                    }
                  },
                  "description": "customProperties"
                },
                "documentIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of all attached document ids",
                    "title": "DocumentIds"
                  },
                  "description": "documentIds"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Due date for the process. Date format: yyyy-MM-ddTHH:mm:ss",
                  "title": "DueDate"
                },
                "folderElementId": {
                  "type": "string",
                  "description": "Id of document as folder element",
                  "title": "FolderElementId"
                },
                "hasLinks": {
                  "type": "boolean",
                  "description": "Id of document as folder element",
                  "title": "HasLinks",
                  "enum": [
                    true,
                    false
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Process id",
                  "title": "Id"
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "culture": {
                            "type": "string",
                            "description": "The culture in which the text is given (de, en, fr, ...)",
                            "title": "Culture"
                          },
                          "text": {
                            "type": "string",
                            "description": "The text for this language",
                            "title": "Text"
                          }
                        }
                      },
                      "description": "values"
                    }
                  },
                  "description": "name"
                },
                "priorityEnum": {
                  "type": "string",
                  "description": "Priority of process (High, Normal, Low). Default = Normal",
                  "title": "PriorityEnum"
                },
                "pluginStream": {
                  "type": "string",
                  "description": "Data container for plugins",
                  "title": "PluginStream"
                },
                "processTemplateId": {
                  "type": "string",
                  "description": "Process template id",
                  "title": "ProcessTemplateId"
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "globalValues": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "culture": {
                                    "type": "string",
                                    "description": "culture"
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "text"
                                  }
                                }
                              },
                              "description": "values"
                            }
                          }
                        },
                        "description": "globalValues"
                      },
                      "propertyName": {
                        "type": "string",
                        "description": "Name of process property",
                        "title": "PropertyName"
                      },
                      "propertyTypeId": {
                        "type": "string",
                        "description": "Id of process property",
                        "title": "PropertyTypeId"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "values"
                      }
                    }
                  },
                  "description": "properties"
                },
                "protectionDomainId": {
                  "type": "string",
                  "description": "Protection domain id of process",
                  "title": "ProtectionDomainId"
                },
                "statusEnum": {
                  "type": "string",
                  "description": "Status of process (Open, InProcess, Complete, PreparedToComplete, Error)",
                  "title": "StatusEnum"
                }
              }
            }
          }
        },
        "summary": "Create process",
        "description": "Create process",
        "operationId": "CreateProcess",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "ProcessProperties": {
                  "type": "string",
                  "description": "Process properties update format: Firstname=Peter|Lastname=Muller|InvoiceNo=4711;4712;4713",
                  "title": "ProcessProperties",
                  "x-ms-visibility": "important"
                },
                "CustomProperties": {
                  "type": "string",
                  "description": "Custom properties. Format: [<PropertyName>|<PropertyValue>|PropertyType] (e.g. [Supplier|Muster|String][InvoiceDate|2021-01-29T13:05:45 |Date][InvoiceNo|4711|Number])",
                  "title": "CustomProperties",
                  "x-ms-visibility": "advanced"
                },
                "DocumentIds": {
                  "type": "string",
                  "description": "List of all document Ids to attach",
                  "title": "DocumentIds",
                  "x-ms-visibility": "important"
                },
                "ProcessTemplateName": {
                  "type": "string",
                  "description": "Name of process template",
                  "title": "ProcessTemplateName",
                  "x-ms-visibility": "important"
                },
                "DueDate": {
                  "type": "string",
                  "description": "Due date for the process. Date format: yyyy-MM-ddTHH:mm:ss. Default = current date",
                  "title": "DueDate"
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority of process (e.g. Low, Normal, High). Default = Normal",
                  "title": "Priority",
                  "x-ms-visibility": "important",
                  "enum": [
                    "Low",
                    "Normal",
                    "High"
                  ]
                },
                "Comment": {
                  "type": "string",
                  "description": "Process comment",
                  "title": "Comment",
                  "x-ms-visibility": "important"
                },
                "Culture": {
                  "type": "string",
                  "description": "The culture in which the text is given (de, en, fr, ...). Default = de",
                  "title": "Culture",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "ProcessTemplateName"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/UserTableGetRecords": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "UserTableGetRecordsResult": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "description": "UserTableGetRecordsResult"
                }
              }
            }
          }
        },
        "summary": "Get rows from a user table",
        "description": "Get rows from a user table",
        "operationId": "UserTableGetRecords",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "UserTable": {
                  "type": "string",
                  "description": "Name of the user table",
                  "title": "UserTable",
                  "x-ms-visibility": "important"
                },
                "WhereClause": {
                  "type": "string",
                  "description": "A list of SQL where clause elements. Format: [<PropertyName>|<ComparisonEnum>|<PropertyValue>|<RelationEnum>]. ComparisonEnums: \"Equals,NotEquals,Greater,GreaterEquals,Less,LessEquals,Like,NotLike\" RelationEnums:\"AND,OR\" (e.g.: [Firstname|Equals|Jon|AND],[Lastname|Equals|Doe|AND])",
                  "title": "WhereClause",
                  "x-ms-visibility": "important"
                },
                "OrderByClause": {
                  "type": "string",
                  "description": "A list of SQL order by clause elements (e.g.: Firstname[ASC],City[DESC])",
                  "title": "OrderByClause",
                  "x-ms-visibility": "important"
                },
                "AddColumnHeaders": {
                  "type": "boolean",
                  "description": "Adds column headers as first row (default = false)",
                  "title": "AddColumnHeaders",
                  "x-ms-visibility": "important",
                  "enum": [
                    false,
                    true
                  ]
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "UserTable"
              ]
            }
          }
        ],
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/UserTableImportData": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "userTable": {
                  "type": "string",
                  "description": "Name of user table",
                  "title": "User Table"
                },
                "insertedRows": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of inserted rows",
                  "title": "Inserted Rows"
                }
              }
            }
          }
        },
        "summary": "Insert rows into a user table",
        "description": "Import table rows into a user table",
        "operationId": "UserTableImportData",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "UserTable": {
                  "type": "string",
                  "description": "Name of the user table",
                  "title": "UserTable",
                  "x-ms-visibility": "important"
                },
                "Values": {
                  "type": "string",
                  "description": "List of row and column values to insert (e.g.: [John;Doe;New York],[Peter;Muster;Bern])",
                  "title": "Values",
                  "x-ms-visibility": "important"
                },
                "DeleteAllValues": {
                  "type": "boolean",
                  "description": "Defines whether to delete all values in UserTable (default = false)",
                  "title": "DeleteAllValues",
                  "x-ms-visibility": "advanced",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false
                },
                "FirstRowContainsColumnHeaders": {
                  "type": "boolean",
                  "description": "Defines whether the first row of the values parameter contains column headers (default = false)",
                  "title": "FirstRowContainsColumnHeaders",
                  "enum": [
                    true,
                    false
                  ],
                  "default": false,
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "Values",
                "UserTable"
              ]
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/UserTableCreateTable": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "userTable": {
                  "type": "string",
                  "description": "Name of user table",
                  "title": "User Table"
                }
              }
            }
          }
        },
        "operationId": "UserTableCreateTable",
        "description": "Create a user table",
        "summary": "Create a user table",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "UserTable": {
                  "type": "string",
                  "description": "Name of the user table (e.g.: Address)",
                  "title": "UserTable"
                },
                "ColumnHeaders": {
                  "type": "string",
                  "description": "A list of column headers (e.g.: Firstname,Lastname,City)",
                  "title": "ColumnHeaders"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "ColumnHeaders",
                "UserTable"
              ]
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/UserTableDeleteRecords": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "userTableDeleteRecordsResult": {
                  "type": "integer",
                  "format": "int32",
                  "description": "userTableDeleteRecordsResult"
                }
              }
            }
          }
        },
        "summary": "Delete user table rows",
        "description": "Delete user table rows",
        "operationId": "UserTableDeleteRecords",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ArchiveUrl": {
                  "type": "string",
                  "description": "Url of archive api (e.g.: https://documentarchive.ch/sdk/wcfJSON)",
                  "title": "ArchiveUrl",
                  "x-ms-visibility": "important"
                },
                "ConnectionId": {
                  "type": "string",
                  "description": "The connection id to identify your connection",
                  "title": "ConnectionId",
                  "x-ms-visibility": "important"
                },
                "UserTable": {
                  "type": "string",
                  "description": "Name of user table",
                  "title": "UserTable",
                  "x-ms-visibility": "important"
                },
                "WhereClause": {
                  "type": "string",
                  "description": "A list of SQL where clause elements. Format: [<PropertyName>|<ComparisonEnum>|<PropertyValue>|<RelationEnum>]. ComparisonEnums: \"Equals,NotEquals,Greater,GreaterEquals,Less,LessEquals,Like,NotLike\" RelationEnums:\"AND,OR\" (e.g.: [Firstname|Equals|Jon|AND],[Lastname|Equals|Doe|OR])",
                  "title": "WhereClause",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "ArchiveUrl",
                "ConnectionId",
                "UserTable"
              ]
            }
          }
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "code"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.kendox.com/en"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.kendox.com/en/about-us/data-protection"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Content and Files"
    }
  ]
}