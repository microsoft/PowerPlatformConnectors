{
    "swagger": "2.0",
    "info": {
        "version": "1.3",
        "title": "DeskDirector",
        "description": "DeskDirector automates and accelerates ticket-based workflows between Users and Techs working IT services. The DeskDirector connector is a deep and powerful integration into our rich ticketing platform. All phases of a ticketâ€™s life cycle can be automated and enhanced for superior service experience.",
        "contact": {
            "name": "DeskDirector Support",
            "url": "https://support.deskdirector.com",
            "email": "support@deskdirector.com"
        }
    },
    "host": "yoursite.deskdirector.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/v2/automate/connector/companies/find": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Find companies",
                "description": "Find companies by keywords or filters.",
                "operationId": "FindCompanies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindCompaniesRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindCompaniesRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindCompaniesResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindCompaniesResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/companies/{companyId}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a company",
                "description": "This operation returns a company's details.",
                "operationId": "GetCompany",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "Specify the company's ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Company ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CompanyDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CompanyDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/contacts": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Create a contact",
                "description": "This operation creates a contact.",
                "operationId": "CreateContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateContactRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateContactRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "ContactDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "ContactDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/contacts/find": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Find contacts",
                "description": "Find contacts by keywords or filters.",
                "operationId": "FindContacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindContactsRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindContactsRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindContactsResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindContactsResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/contacts/{contactId}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a contact",
                "description": "This operation returns a contact's details.",
                "operationId": "GetContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Specify the contact's ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contact ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "ContactDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "ContactDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/email-templates/{emailTemplateId}/render": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Create an email from template",
                "description": "This operation generates an HTML document from a dynamic email template. Dynamic email templates can be managed in your admin portal.",
                "operationId": "GenerateEmailFromTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "Specify the email template.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Template",
                        "x-ms-url-encoding": "single",
                        "x-ms-dynamic-values": {
                            "operationId": "ListEmailTemplates",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {}
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListEmailTemplates",
                            "parameters": {},
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetEmailTemplateProperties",
                                "parameters": {
                                    "emailTemplateId": {
                                        "parameter": "emailTemplateId"
                                    }
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetEmailTemplateProperties",
                                "parameters": {
                                    "emailTemplateId": {
                                        "parameterReference": "emailTemplateId"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateEmailFromTemplateResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateEmailFromTemplateResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/forms/{formId}/results/{resultId}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a form result",
                "description": "This operation returns the form entry by the form result ID.",
                "operationId": "GetFormResult",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "Specify the form.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Form",
                        "x-ms-url-encoding": "single",
                        "x-ms-dynamic-values": {
                            "operationId": "ListForms",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {}
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListForms",
                            "parameters": {},
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "resultId",
                        "in": "path",
                        "description": "Specify the result ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-ms-summary": "Result",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetFormResultSchema",
                                "parameters": {
                                    "formId": {
                                        "parameter": "formId"
                                    }
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetFormResultSchema",
                                "parameters": {
                                    "formId": {
                                        "parameterReference": "formId"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/members/find": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Find members",
                "description": "Find members by keywords or filters.",
                "operationId": "FindMembers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindMembersRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindMembersRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "FindMembersResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "FindMembersResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/members/{memberId}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a member",
                "description": "This operation returns a member's details.",
                "operationId": "GetMember",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "memberId",
                        "in": "path",
                        "description": "Specify the member's ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Member ID",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "MemberDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "MemberDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/contacts/{contactId}/notifications": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Send a notification to a contact",
                "description": "This operation sends a notification to a contact in the client portal.",
                "operationId": "CreateContactNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Specify the contact's ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Contact ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateContactNotificationRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateContactNotificationRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateNotificationResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateNotificationResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/members/{memberId}/notifications": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Send a notification to a member",
                "description": "This operation sends a notification to a member in the tech portal.",
                "operationId": "CreateMemberNotification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "memberId",
                        "in": "path",
                        "description": "Specify the member's ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Member ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateMemberNotificationRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateMemberNotificationRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateNotificationResponse"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateNotificationResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/tickets": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Create a ticket",
                "description": "This operation creates a ticket.",
                "operationId": "CreateTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestTypeId",
                        "in": "query",
                        "description": "Specify the request type.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Request Type",
                        "x-ms-dynamic-values": {
                            "operationId": "ListRequestTypes",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {
                                "withSomethingElse": true
                            }
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListRequestTypes",
                            "parameters": {
                                "withSomethingElse": {
                                    "value": true
                                }
                            },
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetCreateTicketRequestSchema",
                                "parameters": {
                                    "requestTypeId": {
                                        "parameter": "requestTypeId"
                                    }
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetCreateTicketRequestSchema",
                                "parameters": {
                                    "requestTypeId": {
                                        "parameterReference": "requestTypeId"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "TicketDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "TicketDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/tickets/{ticketId}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a ticket",
                "description": "This operation returns a ticket's details.",
                "operationId": "GetTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Specify the ID of the ticket.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Ticket",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "TicketDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "TicketDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Actions"
                ],
                "summary": "Update a ticket",
                "description": "This operation updates a ticket.",
                "operationId": "UpdateTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "UpdateTicketRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "UpdateTicketRequest"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Specify the ID of the ticket.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Ticket",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "TicketDetails"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "TicketDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/chat-sessions/{sessionId}/system-messages": {
            "post": {
                "tags": [
                    "Advanced Actions"
                ],
                "summary": "Send a system message in chat",
                "description": "This operation sends a system message in a chat session.",
                "operationId": "AddChatSystemMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Specify the chat session ID.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Session",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateChatMessageRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateChatMessageRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "advanced"
            }
        },
        "/api/v2/automate/connector/chat-sessions/{sessionId}/invite": {
            "post": {
                "tags": [
                    "Advanced Actions"
                ],
                "summary": "Invite users to chat",
                "description": "This operation invites users to a chat session.",
                "operationId": "InviteUsersToChat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Specify the chat session ID.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Session",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "x-ms-dynamic-schema": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": "CreateChatInviteRequest"
                                }
                            },
                            "x-ms-dynamic-properties": {
                                "operationId": "GetDynamicSchema",
                                "parameters": {
                                    "typeId": {
                                        "value": "CreateChatInviteRequest"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "advanced"
            }
        },
        "/api/v2/automate/connector/chat-workflows/{workflowId}": {
            "delete": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Delete a chat workflow",
                "description": "This operation deletes a chat workflow.",
                "operationId": "DeleteChatWebhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "Specify the workflow ID.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Webhook",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/chat-workflow-webhook/$parameters": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get create chat workflow parameter schema",
                "description": "This operation returns the schema of the create chat workflow parameters.",
                "operationId": "GetChatWorkflowRequestParameterSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the type of event to subscribe to.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Event"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/chat-workflow-webhook/$request": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get chat webhook trigger dynamic schema",
                "description": "This operation returns the schema of the chat webhook payload content.",
                "operationId": "GetChatWebhookTriggerSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the event type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/companies/{companyId}/teams": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List company teams",
                "description": "This operation returns a list of company teams.",
                "operationId": "ListCompanyTeams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "Specify the company's ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Company ID",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Specify the take parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Take"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Specify the skip parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Skip"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/connections/test": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Test connection",
                "description": "This operation tests the connector connection.",
                "operationId": "TestConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/dynamic-types/{typeId}": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get dynamic schema",
                "description": "This operation returns the schema of the given type.",
                "operationId": "GetDynamicSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "Specify the type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/email-templates": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List dynamic email templates",
                "description": "This operation returns a list of email templates.",
                "operationId": "ListEmailTemplates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Specify the take parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Take"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Specify the skip parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Skip"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/email-templates/{emailTemplateId}/$render-request": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get email template dynamic properties",
                "description": "This operation returns the schema of a email template dynamic tokens.",
                "operationId": "GetEmailTemplateProperties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "Specify the email template.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Template",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/forms": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List forms",
                "description": "This operation returns a list of forms.",
                "operationId": "ListForms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Specify the take parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Take"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Specify the skip parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Skip"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/forms/{formId}/fields/{fieldId}/choices": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List form field choices",
                "description": "This operation returns a list of filed choices.",
                "operationId": "ListFormFiledChoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "Specify the form.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Form",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "description": "Specify the field.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Field",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/form/{formId}/$result-response": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get form result response schema",
                "description": "This operation returns the schema of the form result.",
                "operationId": "GetFormResultSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "Specify the form.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Form",
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/service/boards": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List ticket boards",
                "description": "This operation returns a list of ticket boards.",
                "operationId": "ListBoards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/service/statuses": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List ticket statuses",
                "description": "This operation returns a list of ticket statuses.",
                "operationId": "ListStatuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "boardId",
                        "in": "query",
                        "description": "Specify the status.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/service/priorities": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List ticket priorities",
                "description": "This operation returns a list of ticket priorities.",
                "operationId": "ListPriorities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/service/sources": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List ticket sources",
                "description": "This operation returns a list of ticket sources.",
                "operationId": "ListSources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/service/request-types": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List request types",
                "description": "This operation returns a list of request types.",
                "operationId": "ListRequestTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "withSomethingElse",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/ticket-workflow-events": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List ticket workflow events",
                "description": "This operation returns a list of ticket workflow events.",
                "operationId": "ListTicketWebhookEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/chat-webhook-events": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List chat webhook events",
                "description": "This operation returns a list of chat webhook events.",
                "operationId": "ListChatWebhookEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/ticket-workflows/{workflowId}": {
            "delete": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Delete a ticket workflow",
                "description": "This operation deletes a ticket workflow.",
                "operationId": "DeleteTicketWorkflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "Specify the workflow.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Workflow",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/ticket-workflow-webhook/$request": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get ticket webhook trigger dynamic schema",
                "description": "This operation returns the schema of the ticket webhook payload content.",
                "operationId": "GetTicketWorkflowTriggerSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the event type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/ticket-workflow-webhook/$advanced-filters": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get ticket advanced filter schema",
                "description": "This operation returns the schema of the advanced ticket filters.",
                "operationId": "GetTicketTriggerAdvancedFilterSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the event type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Event"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/ticket/$create-request": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get create ticket request schema",
                "description": "This operation returns the create ticket request schema.",
                "operationId": "GetCreateTicketRequestSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestTypeId",
                        "in": "query",
                        "description": "Specify the request type.",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Request Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/workflows/{workflowId}/actions/{actionId}": {
            "delete": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Unsubscribe from a workflow",
                "description": "This operation deletes an subscription.",
                "operationId": "UnsubscribeFromWorkflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "Specify the workflow.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Workflow",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "actionId",
                        "in": "path",
                        "description": "Specify the action.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Action",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/workflow-types": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List workflow types",
                "description": "This operation returns supported workflow types.",
                "operationId": "ListWorkflowTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/workflows": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "List workflows",
                "description": "This operation returns a list of workflows.",
                "operationId": "ListWorkflows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Specify the take parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Take"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Specify the skip parameter.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-ms-summary": "Skip"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the workflow type.",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "Type"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Specify the search parameter.",
                        "required": false,
                        "type": "string",
                        "x-ms-summary": "Search"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/workflow-webhook/$request": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get webhook trigger dynamic schema",
                "description": "This operation returns the schema of the webhook payload content.",
                "operationId": "GetWorkflowTriggerSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the workflow type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/schema/workflow-types/{type}/$parameters": {
            "get": {
                "tags": [
                    "Internal Actions"
                ],
                "summary": "Get create workflow parameter schema",
                "description": "This operation returns the schema of the create workflow parameters.",
                "operationId": "GetWorkflowRequestParameterSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Specify the workflow type.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type",
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "workflowId",
                        "in": "query",
                        "description": "Specify the workflow.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Workflow"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-visibility": "internal"
            }
        },
        "/api/v2/automate/connector/chat-workflows": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a chat session is created or updated",
                "description": "This operation triggers when a chat is created or updated.",
                "operationId": "CreateChatWebhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the type of event to subscribe to.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Event",
                        "x-ms-dynamic-values": {
                            "operationId": "ListChatWebhookEvents",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {}
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListChatWebhookEvents",
                            "parameters": {},
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "required": [
                                "parameters",
                                "url"
                            ],
                            "type": "object",
                            "properties": {
                                "parameters": {
                                    "description": "Specify the parameters.",
                                    "type": "object",
                                    "x-ms-summary": "Parameters",
                                    "x-ms-dynamic-schema": {
                                        "operationId": "GetChatWorkflowRequestParameterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameter": "type"
                                            }
                                        }
                                    },
                                    "x-ms-dynamic-properties": {
                                        "operationId": "GetChatWorkflowRequestParameterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameterReference": "type"
                                            }
                                        }
                                    }
                                },
                                "url": {
                                    "description": "The callback URL.",
                                    "type": "string",
                                    "x-ms-summary": "URL",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-trigger": "single",
                "x-ms-trigger-hint": "To see it work, create or update a chat."
            },
            "x-ms-notification-content": {
                "schema": {
                    "x-ms-dynamic-schema": {
                        "operationId": "GetChatWebhookTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameter": "type"
                            }
                        }
                    },
                    "x-ms-dynamic-properties": {
                        "operationId": "GetChatWebhookTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameterReference": "type"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/ticket-workflows": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a ticket is created or updated",
                "description": "This operation triggers when a ticket is created or updated.",
                "operationId": "CreateTicketWorkflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the type of event to subscribe to.",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Event",
                        "x-ms-dynamic-values": {
                            "operationId": "ListTicketWebhookEvents",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {}
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListTicketWebhookEvents",
                            "parameters": {},
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "required": [
                                "description",
                                "advancedFilters",
                                "url"
                            ],
                            "type": "object",
                            "properties": {
                                "description": {
                                    "description": "Specify the workflow description.",
                                    "type": "string",
                                    "x-ms-summary": "Description"
                                },
                                "boardId": {
                                    "format": "int32",
                                    "description": "Specify the board filter.",
                                    "type": "integer",
                                    "x-ms-summary": "Board",
                                    "x-ms-dynamic-values": {
                                        "operationId": "ListBoards",
                                        "value-path": "id",
                                        "value-title": "name",
                                        "value-collection": "results",
                                        "parameters": {}
                                    },
                                    "x-ms-dynamic-list": {
                                        "operationId": "ListBoards",
                                        "parameters": {},
                                        "itemsPath": "results",
                                        "itemTitlePath": "name",
                                        "itemValuePath": "id"
                                    }
                                },
                                "statusId": {
                                    "format": "int32",
                                    "description": "Specify the status filter.",
                                    "type": "integer",
                                    "x-ms-summary": "Status",
                                    "x-ms-dynamic-values": {
                                        "operationId": "ListStatuses",
                                        "value-path": "id",
                                        "value-title": "name",
                                        "value-collection": "results",
                                        "parameters": {
                                            "boardId": {
                                                "parameter": "boardId"
                                            }
                                        }
                                    },
                                    "x-ms-dynamic-list": {
                                        "operationId": "ListStatuses",
                                        "parameters": {
                                            "boardId": {
                                                "parameterReference": "req/boardId"
                                            }
                                        },
                                        "itemsPath": "results",
                                        "itemTitlePath": "name",
                                        "itemValuePath": "id"
                                    }
                                },
                                "advancedFilters": {
                                    "description": "Specify the advanced filters.",
                                    "type": "object",
                                    "x-ms-summary": "Advanced Filters",
                                    "x-ms-visibility": "advanced",
                                    "x-ms-dynamic-schema": {
                                        "operationId": "GetTicketTriggerAdvancedFilterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameter": "type"
                                            }
                                        }
                                    },
                                    "x-ms-dynamic-properties": {
                                        "operationId": "GetTicketTriggerAdvancedFilterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameterReference": "type"
                                            }
                                        }
                                    }
                                },
                                "url": {
                                    "description": "The callback URL.",
                                    "type": "string",
                                    "x-ms-summary": "URL",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-trigger": "single",
                "x-ms-trigger-hint": "To see it work, create or update a ticket."
            },
            "x-ms-notification-content": {
                "schema": {
                    "x-ms-dynamic-schema": {
                        "operationId": "GetTicketWorkflowTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameter": "type"
                            }
                        }
                    },
                    "x-ms-dynamic-properties": {
                        "operationId": "GetTicketWorkflowTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameterReference": "type"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/automate/connector/workflows/{workflowId}/actions": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "When a workflow is triggered",
                "description": "This operation triggers when the specified workflow is triggered. Workflows can be managed in your admin portal.",
                "operationId": "SubscribeToWorkflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Specify the type of the workflow",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Type",
                        "x-ms-dynamic-values": {
                            "operationId": "ListWorkflowTypes",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {}
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListWorkflowTypes",
                            "parameters": {},
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "Specify the workflow",
                        "required": true,
                        "type": "string",
                        "x-ms-summary": "Workflow",
                        "x-ms-url-encoding": "single",
                        "x-ms-dynamic-values": {
                            "operationId": "ListWorkflows",
                            "value-path": "id",
                            "value-title": "name",
                            "value-collection": "results",
                            "parameters": {
                                "type": {
                                    "parameter": "type"
                                }
                            }
                        },
                        "x-ms-dynamic-list": {
                            "operationId": "ListWorkflows",
                            "parameters": {
                                "type": {
                                    "parameterReference": "type"
                                }
                            },
                            "itemsPath": "results",
                            "itemTitlePath": "name",
                            "itemValuePath": "id"
                        }
                    },
                    {
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "required": [
                                "url",
                                "parameters"
                            ],
                            "type": "object",
                            "properties": {
                                "url": {
                                    "description": "The callback URL.",
                                    "type": "string",
                                    "x-ms-summary": "Url",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                },
                                "parameters": {
                                    "description": "Specify the parameters.",
                                    "type": "object",
                                    "x-ms-summary": "Parameters",
                                    "x-ms-dynamic-schema": {
                                        "operationId": "GetWorkflowRequestParameterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameter": "type"
                                            },
                                            "workflowId": {
                                                "parameter": "workflowId"
                                            }
                                        }
                                    },
                                    "x-ms-dynamic-properties": {
                                        "operationId": "GetWorkflowRequestParameterSchema",
                                        "parameters": {
                                            "type": {
                                                "parameterReference": "type"
                                            },
                                            "workflowId": {
                                                "parameterReference": "workflowId"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "x-ms-trigger": "single",
                "x-ms-trigger-hint": "To see it work, trigger the specified workflow. Workflows need to be setup in admin portal."
            },
            "x-ms-notification-content": {
                "schema": {
                    "x-ms-dynamic-schema": {
                        "operationId": "GetWorkflowTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameter": "type"
                            }
                        }
                    },
                    "x-ms-dynamic-properties": {
                        "operationId": "GetWorkflowTriggerSchema",
                        "parameters": {
                            "type": {
                                "parameterReference": "type"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DeskDirector.ServiceModels.Connector.DynamicListResponse[System.String]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListItem[System.String]"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DeskDirector.ServiceModels.Connector.DynamicListItem[System.String]": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DeskDirector.ServiceModels.Connector.DynamicListResponse[System.Int32]": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeskDirector.ServiceModels.Connector.DynamicListItem[System.Int32]"
                    }
                },
                "totalResults": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DeskDirector.ServiceModels.Connector.DynamicListItem[System.Int32]": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "description": "DD API Key Authentication",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "x-ms-capabilities": {
        "testConnection": {
            "operationId": "TestConnection"
        }
    },
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://www.deskdirector.com"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://www.deskdirector.com/privacy-policy"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "IT Operations;Productivity"
        }
    ]
}