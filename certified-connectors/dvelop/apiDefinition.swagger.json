{
  "swagger": "2.0",
  "info": {
    "title": "d.velop",
    "description": "d.velop is a provider of ECM solutions (Enterprise Content Management). Use this connector to connect your flow with services from the d.velop platform or your d.velop system.",
    "version": "2.0",
    "contact": {
      "name": "d.velop AG",
      "url": "https://d-velop.com",
      "email": "support@d-velop.com"
    }
  },
  "host": "your-domain.d-velop.cloud",
  "basePath": "/integrationplatform",
  "schemes": [
    "https"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://d-velop.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.d-velop.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/actions": {
      "get": {
        "tags": [
          "Dynamic actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "actionid": {
                        "type": "string",
                        "description": "The unique identifier of the action."
                      },
                      "displayname": {
                        "type": "string",
                        "description": "The name of the action, which is shown to the users."
                      }
                    }
                  },
                  "description": "This object contains all the actions available for selection."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Get actions",
        "description": "Get all available dynamic actions.",
        "operationId": "GetActions",
        "x-ms-visibility": "internal"
      }
    },
    "/actions/{actionId}/request": {
      "get": {
        "tags": [
          "Dynamic actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "request": {
                  "type": "object",
                  "description": "Request schema of the selected action.",
                  "title": "Request schema",
                  "x-ms-visibility": "internal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets request schema of an action",
        "description": "Gets the request schema of the selected action.",
        "operationId": "GetRequestSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/actionId"
          }
        ]
      }
    },
    "/actions/{actionId}/response": {
      "get": {
        "tags": [
          "Dynamic actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "type": "object",
                  "description": "Response schema of the selected action.",
                  "title": "Response schema",
                  "x-ms-visibility": "internal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets response schema of an action",
        "description": "Gets the response schema of the selected action.",
        "operationId": "GetResponseSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/actionId"
          }
        ]
      }
    },
    "/actions/{actionId}/data": {
      "get": {
        "tags": [
          "Dynamic actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "data",
                  "title": "Data schema",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "value",
                        "title": "Value"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "displayName",
                        "title": "displayName"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets data for dynamic value sets",
        "description": "Gets data for dynamic value sets based on the selected action and the specified parameters.",
        "operationId": "GetData",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/actionId"
          },
          {
            "name": "paramDef",
            "x-ms-summary": "Definition of key parameters",
            "description": "Contains the definition of the given key parameters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k1",
            "x-ms-summary": "Key parameter 1",
            "description": "Contains the key parameter 1.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k2",
            "x-ms-summary": "Key parameter 2",
            "description": "Contains the key parameter 2.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k3",
            "x-ms-summary": "Key parameter 3",
            "description": "Contains the key parameter 3.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k4",
            "x-ms-summary": "Key parameter 4",
            "description": "Contains the key parameter 4.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k5",
            "x-ms-summary": "Key parameter 5",
            "description": "Contains the key parameter 5.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k6",
            "x-ms-summary": "Key parameter 6",
            "description": "Contains the key parameter 6.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k7",
            "x-ms-summary": "Key parameter 7",
            "description": "Contains the key parameter 7.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k8",
            "x-ms-summary": "Key parameter 8",
            "description": "Contains the key parameter 8.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k9",
            "x-ms-summary": "Key parameter 9",
            "description": "Contains the key parameter 9.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k10",
            "x-ms-summary": "Key parameter 10",
            "description": "Contains the key parameter 10.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/actions/{actionId}/execute": {
      "post": {
        "tags": [
          "Dynamic actions"
        ],
        "summary": "Execute an action",
        "description": "Executes the selected action in the selected d.velop environment.",
        "operationId": "ExecuteAction",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/actionId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GetRequestSchema",
                "value-path": "request",
                "parameters": {
                  "actionId": {
                    "parameter": "actionId"
                  }
                }
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetRequestSchema",
                "parameters": {
                  "actionId": {
                    "parameterReference": "actionId"
                  }
                },
                "itemValuePath": "request"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "GetResponseSchema",
                "parameters": {
                  "actionId": {
                    "parameter": "actionId"
                  }
                },
                "value-path": "response"
              },
              "x-ms-dynamic-properties": {
                "operationId": "GetResponseSchema",
                "parameters": {
                  "actionId": {
                    "parameterReference": "actionId"
                  }
                },
                "itemValuePath": "response"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/default/{defaultAction}/request": {
      "get": {
        "tags": [
          "Default actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "request": {
                  "type": "object",
                  "description": "Request schema of the given default action.",
                  "title": "Request schema",
                  "x-ms-visibility": "internal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets request schema of an default action",
        "description": "Gets the request schema of the given default action",
        "operationId": "DefaultGetRequestSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/defaultAction"
          },
          {
            "name": "paramDef",
            "x-ms-summary": "Definition of key parameters",
            "description": "Contains the definition of the given key parameters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k1",
            "x-ms-summary": "Key parameter 1",
            "description": "Contains the key parameter 1.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k2",
            "x-ms-summary": "Key parameter 2",
            "description": "Contains the key parameter 2.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k3",
            "x-ms-summary": "Key parameter 3",
            "description": "Contains the key parameter 3.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k4",
            "x-ms-summary": "Key parameter 4",
            "description": "Contains the key parameter 4.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k5",
            "x-ms-summary": "Key parameter 5",
            "description": "Contains the key parameter 5.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/default/{defaultAction}/response": {
      "get": {
        "tags": [
          "Default actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "type": "object",
                  "description": "Response schema of the given default action.",
                  "title": "Response schema",
                  "x-ms-visibility": "internal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets response schema of an default action",
        "description": "Gets the response schema of the given default action",
        "operationId": "DefaultGetResponseSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/defaultAction"
          },
          {
            "name": "paramDef",
            "x-ms-summary": "Definition of key parameters",
            "description": "Contains the definition of the given key parameters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k1",
            "x-ms-summary": "Key parameter 1",
            "description": "Contains the key parameter 1.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k2",
            "x-ms-summary": "Key parameter 2",
            "description": "Contains the key parameter 2.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k3",
            "x-ms-summary": "Key parameter 3",
            "description": "Contains the key parameter 3.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k4",
            "x-ms-summary": "Key parameter 4",
            "description": "Contains the key parameter 4.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "k5",
            "x-ms-summary": "Key parameter 5",
            "description": "Contains the key parameter 5.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/default/{defaultAction}/data": {
      "get": {
        "tags": [
          "Default actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "data",
                  "title": "Data schema",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "value",
                        "title": "Value"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "displayName",
                        "title": "displayName"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets data for dynamic value sets",
        "description": "Gets data for dynamic value sets based on the selected default action and the specified parameters.",
        "operationId": "DefaultGetData",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/defaultAction"
          },
          {
            "name": "paramDef",
            "x-ms-summary": "Definition of key parameters",
            "description": "Contains the definition of the given key parameters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k1",
            "x-ms-summary": "Key parameter 1",
            "description": "Contains the key parameter 1.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k2",
            "x-ms-summary": "Key parameter 2",
            "description": "Contains the key parameter 2.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k3",
            "x-ms-summary": "Key parameter 3",
            "description": "Contains the key parameter 3.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k4",
            "x-ms-summary": "Key parameter 4",
            "description": "Contains the key parameter 4.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k5",
            "x-ms-summary": "Key parameter 5",
            "description": "Contains the key parameter 5.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k6",
            "x-ms-summary": "Key parameter 6",
            "description": "Contains the key parameter 6.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k7",
            "x-ms-summary": "Key parameter 7",
            "description": "Contains the key parameter 7.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k8",
            "x-ms-summary": "Key parameter 8",
            "description": "Contains the key parameter 8.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k9",
            "x-ms-summary": "Key parameter 9",
            "description": "Contains the key parameter 9.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "k10",
            "x-ms-summary": "Key parameter 10",
            "description": "Contains the key parameter 10.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/default/storedocument/execute": {
      "post": {
        "tags": [
          "Default actions"
        ],
        "summary": "Store document",
        "description": "Store a document in d.velop documents.",
        "operationId": "StoreDocument",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select a repository of your d.velop documents environment.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Repository",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "storedocument",
                "paramDef": "k1:queryType",
                "k1": "repository"
              }
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select the destination category.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "storedocument",
                "paramDef": "k1:queryType|k2:repositoryId",
                "k1": "docType",
                "k2": {
                  "parameter": "repositoryId"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "DefaultGetData",
              "itemValuePath": "value",
              "itemsPath": "data",
              "itemTitlePath": "displayName",
              "parameters": {
                "defaultAction": {
                  "value": "storedocument"
                },
                "paramDef": {
                  "value": "k1:queryType|k2:repositoryId"
                },
                "k1": {
                  "value": "docType"
                },
                "k2": {
                  "parameterReference": "repositoryId"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetRequestSchema",
                "value-path": "request",
                "parameters": {
                  "defaultAction": "storedocument",
                  "paramDef": "k1:repositoryId|k2:docTypeId",
                  "k1": {
                    "parameter": "repositoryId"
                  },
                  "k2": {
                    "parameter": "categoryId"
                  },
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                }
              },
              "x-ms-dynamic-properties": {
                "operationId": "DefaultGetRequestSchema",
                "parameters": {
                  "defaultAction": {
                    "value": "storedocument"
                  },
                  "paramDef": {
                    "value": "k1:repositoryId|k2:docTypeId"
                  },
                  "k1": {
                    "parameterReference": "repositoryId"
                  },
                  "k2": {
                    "parameterReference": "categoryId"
                  },
                  "k3": {
                    "value": "dummy"
                  },
                  "k4": {
                    "value": "dummy"
                  },
                  "k5": {
                    "value": "dummy"
                  }
                },
                "itemValuePath": "request"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetResponseSchema",
                "parameters": {
                  "defaultAction": "storedocument",
                  "k1": "dummy",
                  "k2": "dummy",
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                },
                "value-path": "response"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/default/updatedocument/execute": {
      "post": {
        "tags": [
          "Default actions"
        ],
        "summary": "Update document",
        "description": "Update a document in d.velop documents.",
        "operationId": "UpdateDocument",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select a repository of your d.velop documents environment.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Repository",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "updatedocument",
                "paramDef": "k1:queryType",
                "k1": "repository"
              }
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select the destination category.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "updatedocument",
                "paramDef": "k1:queryType|k2:repositoryId",
                "k1": "docType",
                "k2": {
                  "parameter": "repositoryId"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "DefaultGetData",
              "itemValuePath": "value",
              "itemsPath": "data",
              "itemTitlePath": "displayName",
              "parameters": {
                "defaultAction": {
                  "value": "updatedocument"
                },
                "paramDef": {
                  "value": "k1:queryType|k2:repositoryId"
                },
                "k1": {
                  "value": "docType"
                },
                "k2": {
                  "parameterReference": "repositoryId"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetRequestSchema",
                "value-path": "request",
                "parameters": {
                  "defaultAction": "updatedocument",
                  "paramDef": "k1:repositoryId|k2:docTypeId",
                  "k1": {
                    "parameter": "repositoryId"
                  },
                  "k2": {
                    "parameter": "categoryId"
                  },
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                }
              },
              "x-ms-dynamic-properties": {
                "operationId": "DefaultGetRequestSchema",
                "parameters": {
                  "defaultAction": {
                    "value": "updatedocument"
                  },
                  "paramDef": {
                    "value": "k1:repositoryId|k2:docTypeId"
                  },
                  "k1": {
                    "parameterReference": "repositoryId"
                  },
                  "k2": {
                    "parameterReference": "categoryId"
                  },
                  "k3": {
                    "value": "dummy"
                  },
                  "k4": {
                    "value": "dummy"
                  },
                  "k5": {
                    "value": "dummy"
                  }
                },
                "itemValuePath": "request"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetResponseSchema",
                "parameters": {
                  "defaultAction": "updatedocument",
                  "k1": "dummy",
                  "k2": "dummy",
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                },
                "value-path": "response"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/default/createdossier/execute": {
      "post": {
        "tags": [
          "Default actions"
        ],
        "summary": "Create dossier",
        "description": "Create a dossier in d.velop documents.",
        "operationId": "CreateDossier",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select a repository of your d.velop documents environment.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Repository",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "createdossier",
                "paramDef": "k1:queryType",
                "k1": "repository"
              }
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select the destination category.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "createdossier",
                "paramDef": "k1:queryType|k2:repositoryId",
                "k1": "docTypeDossier",
                "k2": {
                  "parameter": "repositoryId"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "DefaultGetData",
              "itemValuePath": "value",
              "itemsPath": "data",
              "itemTitlePath": "displayName",
              "parameters": {
                "defaultAction": {
                  "value": "createdossier"
                },
                "paramDef": {
                  "value": "k1:queryType|k2:repositoryId"
                },
                "k1": {
                  "value": "docTypeDossier"
                },
                "k2": {
                  "parameterReference": "repositoryId"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetRequestSchema",
                "value-path": "request",
                "parameters": {
                  "defaultAction": "createdossier",
                  "paramDef": "k1:repositoryId|k2:docTypeId",
                  "k1": {
                    "parameter": "repositoryId"
                  },
                  "k2": {
                    "parameter": "categoryId"
                  },
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                }
              },
              "x-ms-dynamic-properties": {
                "operationId": "DefaultGetRequestSchema",
                "parameters": {
                  "defaultAction": {
                    "value": "createdossier"
                  },
                  "paramDef": {
                    "value": "k1:repositoryId|k2:docTypeId"
                  },
                  "k1": {
                    "parameterReference": "repositoryId"
                  },
                  "k2": {
                    "parameterReference": "categoryId"
                  },
                  "k3": {
                    "value": "dummy"
                  },
                  "k4": {
                    "value": "dummy"
                  },
                  "k5": {
                    "value": "dummy"
                  }
                },
                "itemValuePath": "request"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetResponseSchema",
                "parameters": {
                  "defaultAction": "createdossier",
                  "k1": "dummy",
                  "k2": "dummy",
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                },
                "value-path": "response"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/default/updatedossier/execute": {
      "post": {
        "tags": [
          "Default actions"
        ],
        "summary": "Update dossier",
        "description": "Update a dossier in d.velop documents.",
        "operationId": "UpdateDossier",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select a repository of your d.velop documents environment.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Repository",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "updatedossier",
                "paramDef": "k1:queryType",
                "k1": "repository"
              }
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Select the destination category.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "DefaultGetData",
              "value-path": "value",
              "value-collection": "data",
              "value-title": "displayName",
              "parameters": {
                "defaultAction": "updatedossier",
                "paramDef": "k1:queryType|k2:repositoryId",
                "k1": "docTypeDossier",
                "k2": {
                  "parameter": "repositoryId"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "DefaultGetData",
              "itemValuePath": "value",
              "itemsPath": "data",
              "itemTitlePath": "displayName",
              "parameters": {
                "defaultAction": {
                  "value": "updatedossier"
                },
                "paramDef": {
                  "value": "k1:queryType|k2:repositoryId"
                },
                "k1": {
                  "value": "docTypeDossier"
                },
                "k2": {
                  "parameterReference": "repositoryId"
                }
              }
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetRequestSchema",
                "value-path": "request",
                "parameters": {
                  "defaultAction": "updatedossier",
                  "paramDef": "k1:repositoryId|k2:docTypeId",
                  "k1": {
                    "parameter": "repositoryId"
                  },
                  "k2": {
                    "parameter": "categoryId"
                  },
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                }
              },
              "x-ms-dynamic-properties": {
                "operationId": "DefaultGetRequestSchema",
                "parameters": {
                  "defaultAction": {
                    "value": "updatedossier"
                  },
                  "paramDef": {
                    "value": "k1:repositoryId|k2:docTypeId"
                  },
                  "k1": {
                    "parameterReference": "repositoryId"
                  },
                  "k2": {
                    "parameterReference": "categoryId"
                  },
                  "k3": {
                    "value": "dummy"
                  },
                  "k4": {
                    "value": "dummy"
                  },
                  "k5": {
                    "value": "dummy"
                  }
                },
                "itemValuePath": "request"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "x-ms-dynamic-schema": {
                "operationId": "DefaultGetResponseSchema",
                "parameters": {
                  "defaultAction": "updatedossier",
                  "k1": "dummy",
                  "k2": "dummy",
                  "k3": "dummy",
                  "k4": "dummy",
                  "k5": "dummy"
                },
                "value-path": "response"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/triggers": {
      "get": {
        "tags": [
          "Dynamic triggers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "triggers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "triggerId": {
                        "type": "string",
                        "description": "The unique identifier of the trigger."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the trigger, which is shown to the users."
                      }
                    }
                  },
                  "description": "This object contains all the triggers available for selection."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Get triggers",
        "description": "Get all available dynamic triggers.",
        "operationId": "GetTriggers",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "type",
            "description": "Type of the triggers, which should be listed (webhook/polling).",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "webhook"
          }
        ]
      }
    },
    "/triggers/{triggerId}/response": {
      "get": {
        "tags": [
          "Dynamic triggers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "type": "object",
                  "description": "Response schema of the selected trigger.",
                  "title": "Response schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets response schema of a webhook trigger",
        "description": "Gets the response schema of the selected webhook trigger.",
        "operationId": "GetWebhookResponseSchema",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/webhookTriggerId"
          }
        ]
      }
    },
    "/triggers/{triggerId}/conditions": {
      "get": {
        "tags": [
          "Dynamic triggers"
        ],
        "summary": "Gets conditions of a trigger",
        "description": "Gets the conditions of the selected webhook trigger.",
        "operationId": "GetTriggerConditions",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/webhookTriggerId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "conditionId": {
                        "type": "string",
                        "description": "The unique identifier of the trigger condition."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the trigger condition, which is shown to the users."
                      }
                    }
                  },
                  "description": "This object contains all the conditions available for selected trigger."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/triggers/{triggerId}/conditions/values": {
      "get": {
        "tags": [
          "Dynamic triggers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "values": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The value of the trigger condition value."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the condition value, which is shown to the users."
                      }
                    }
                  },
                  "description": "This object contains all the trigger condition values of the selected trigger."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },		  
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        },
        "summary": "Gets condition values of a trigger",
        "description": "Gets the condition values of the selected webhook trigger.",
        "operationId": "GetTriggerConditionValues",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "$ref": "#/parameters/webhookTriggerId"
          }
        ]
      }
    },
    "/triggers/{triggerId}/subscribe": {
      "post": {
        "tags": [
          "Dynamic triggers"
        ],
        "responses": {
          "default": {
            "description": "Default-Response",
            "schema": {}
          }
        },
        "summary": "d.velop event (Webhook)",
        "description": "Triggers when the defined event occurs.",
        "operationId": "DynamicWebhookTrigger",
        "x-ms-trigger": "single",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/webhookTriggerId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "callback_url": {
                  "type": "string",
                  "x-ms-summary": "Callback-Url for the trigger",
                  "description": "This url can be called by the trigger when the configured event occurs.",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                },
                "conditions": {
                  "type": "array",
                  "x-ms-summary": "Condition",
                  "description": "Collection of the configured conditions.",
                  "x-ms-visibility": "advanced",
                  "items": {
                    "type": "object",
                    "properties": {
                      "conditionType": {
                        "type": "string",
                        "description": "Condition which can restrict the trigger.",
                        "x-ms-summary": "type",
                        "x-ms-dynamic-values": {
                          "operationId": "GetTriggerConditions",
                          "value-path": "conditionId",
                          "value-collection": "conditions",
                          "value-title": "displayName",
                          "parameters": {
                            "triggerId": {
                              "parameter": "triggerId"
                            }
                          }
                        },
                        "x-ms-dynamic-list": {
                          "operationId": "GetTriggerConditions",
                          "itemValuePath": "conditionId",
                          "itemsPath": "conditions",
                          "itemTitlePath": "displayName",
                          "parameters": {
                            "triggerId": {
                              "parameterReference": "triggerId"
                            }
                          }
                        }
                      },
                      "conditionValue": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Restriction value for the trigger condition.",
                          "x-ms-summary": "values",
                          "x-ms-dynamic-values": {
                            "operationId": "GetTriggerConditionValues",
                            "value-path": "value",
                            "value-collection": "values",
                            "value-title": "displayName",
                            "parameters": {
                              "triggerId": {
                                "parameter": "triggerId"
                              }
                            }
                          },
                          "x-ms-dynamic-list": {
                            "operationId": "GetTriggerConditionValues",
                            "itemValuePath": "value",
                            "itemsPath": "values",
                            "itemTitlePath": "displayName",
                            "parameters": {
                              "triggerId": {
                                "parameterReference": "triggerId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "callback_url"
              ]
            }
          }
        ]
      },
      "x-ms-notification-content": {
        "headers": {
          "location": {
            "description": "The url which can be used to unsubscribe the trigger.",
            "type": "string"
          }
        },
        "description": "201",
        "schema": {
          "type": "object",
          "x-ms-dynamic-schema": {
            "operationId": "GetWebhookResponseSchema",
            "value-path": "response",
            "parameters": {
              "triggerId": {
                "parameter": "triggerId"
              }
            }
          },
          "x-ms-dynamic-properties": {
            "operationId": "GetWebhookResponseSchema",
            "itemValuePath": "response",
            "parameters": {
              "triggerId": {
                "parameterReference": "triggerId"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorSchema": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    }
  },
  "parameters": {
    "actionId": {
      "name": "actionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Select an action of your d.velop environment.",
      "x-ms-visibility": "important",
      "x-ms-summary": "Action",
      "x-ms-url-encoding": "single",
      "x-ms-dynamic-values": {
        "operationId": "GetActions",
        "value-path": "actionid",
        "value-collection": "actions",
        "value-title": "displayname"
      }
    },
    "defaultAction": {
      "name": "defaultAction",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Id of the default action.",
      "x-ms-summary": "Action",
      "x-ms-url-encoding": "single"
    },
    "webhookTriggerId": {
      "name": "triggerId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Trigger",
      "description": "Select event for your trigger.",
      "x-ms-url-encoding": "single",
      "x-ms-dynamic-values": {
        "operationId": "GetTriggers",
        "value-path": "triggerId",
        "value-collection": "triggers",
        "value-title": "displayName",
        "parameters": {
          "type": "webhook"
        }
      }
    }
  },
  "responses": {
    "DefaultError": {
      "description": "An error occurred",
      "schema": {
        "$ref": "#/definitions/ErrorSchema"
      }
    },
    "BadRequest": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/ErrorSchema"
      }
    },
    "NotFound": {
      "description": "Not found",
      "schema": {
        "$ref": "#/definitions/ErrorSchema"
      }
    },
    "Forbidden": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/ErrorSchema"
      }
    },
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/ErrorSchema"
      }
    }
  },
  "tags": []
}
