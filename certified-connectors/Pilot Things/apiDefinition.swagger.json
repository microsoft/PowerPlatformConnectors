{
  "swagger": "2.0",
  "info": {
    "description": "Pilot Things is a platform to manage, visualize, automate and integrate your IoT device fleet.",
    "version": "1.0",
    "title": "Pilot Things",
    "termsOfService": "https://www.pilot-things.com/privacy",
    "contact": {
      "name": "Pilot Things",
      "url": "https://www.pilot-things.com",
      "email": "contact@pilot-things.com"
    }
  },
  "host": "kerlink.pilot-things.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get a list of alerts",
        "description": "Get a list of alerts",
        "operationId": "getAlerts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "Timestamp with date start",
            "x-ms-summary": "Timestamp with date start",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int64"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "Timestamp with date end",
            "x-ms-summary": "Timestamp with date end",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageAlertRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },
    "/api/alerts/{id}": {
      "put": {
        "tags": [
          "Alerts"
        ],
        "summary": "Update alert state",
        "description": "Update alert state",
        "operationId": "updateAlertState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of an alert. Cannot be empty.",
            "x-ms-summary": "Id of an alert. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "paramJson",
            "description": "Value of state. Cannot be empty.",
            "x-ms-summary": "Value of state. Cannot be empty.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AlertRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found!"
          }
        }
      }
    },
    "/api/measures": {
      "get": {
        "tags": [
          "Measures"
        ],
        "summary": "Get a list of measures",
        "description": "Get a list of measures",
        "operationId": "getMeasures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "description": "Boolean for detailed information",
            "x-ms-summary": "Boolean for detailed information",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/measures/count": {
      "get": {
        "tags": [
          "Measures"
        ],
        "summary": "Get measures count",
        "description": "Get measures count",
        "operationId": "getCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CountRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/measures/{id}": {
      "get": {
        "tags": [
          "Measures"
        ],
        "summary": "Get a measure",
        "description": "Get a measure",
        "operationId": "getMeasure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a measure. Cannot be empty.",
            "x-ms-summary": "Id of a measure. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Boolean for detailed information",
            "x-ms-summary": "Boolean for detailed information.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Measure not found"
          }
        }
      }
    },
    "/api/messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get a list of messages",
        "description": "Get a list of messages",
        "operationId": "getMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageMessageRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/messages/things/{thingId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get message list for a thing",
        "description": "Get message list for a thing",
        "operationId": "getMessagesAndMeasurements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "thingId",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageMessageRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Add a message",
        "description": "Add a message",
        "operationId": "addMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "messageRo",
            "description": "Message to add. Cannot be empty.",
            "x-ms-summary": "Message to add. Cannot be empty",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageAndMeasurementsRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get a message",
        "description": "Get a message",
        "operationId": "getMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a message. Cannot be empty.",
            "x-ms-summary": "Id of a message. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Message not found"
          }
        }
      }
    },
    "/api/messages/{id}/previous": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get previous message",
        "description": "Get previous message",
        "operationId": "getPreviousMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a message. Cannot be empty.",
            "x-ms-summary": "Id of a message. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Previous message not found"
          }
        }
      }
    },
    "/api/sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Get all site",
        "description": "Get previous message",
        "operationId": "getSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageSiteRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found!"
          }
        }
      },
      "post": {
        "tags": [
          "Sites"
        ],
        "summary": "Create new site",
        "description": "Create new site",
        "operationId": "createSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "node",
            "description": "Array of site to create",
            "x-ms-summary": "Array of site to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SiteRo"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/sites/{id}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Get a site",
        "description": "Get a site",
        "operationId": "getSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a site. Cannot be empty.",
            "x-ms-summary": "Id of a site. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SiteRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Site not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Sites"
        ],
        "summary": "Delete a site",
        "description": "Delete a site",
        "operationId": "deleteSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a site. Cannot be empty.",
            "x-ms-summary": "Id of a site. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Site not found"
          }
        }
      },
      "put": {
        "tags": [
          "Sites"
        ],
        "summary": "Update a site",
        "description": "Update a site",
        "operationId": "updateSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a site. Cannot be empty.",
            "x-ms-summary": "Id of a site. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "siteRo",
            "description": "siteRo",
            "x-ms-summary": "siteRo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SiteRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Site not found"
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get the list of tags",
        "description": "Get the list of tags",
        "operationId": "getTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageThingTagRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update a tag of thing",
        "description": "Update a tag of thing",
        "operationId": "updateThingTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "thingTagRo",
            "description": "Tag to update. Cannot be empty.",
            "x-ms-summary": "Tag to update. Cannot be empty.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThingTagRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    },
    "/api/tags/thing/{thingId}": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add a tag to thing",
        "description": "Add a tag to thing",
        "operationId": "addThingTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "thingTagRo",
            "description": "Tag to add. Cannot be empty.",
            "x-ms-summary": "Tag to add. Cannot be empty.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThingTagRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    },
    "/api/tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get a tag",
        "description": "Get a tag",
        "operationId": "getThingTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a tag. Cannot be empty.",
            "x-ms-summary": "Id of a tag. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    },
    "/api/things": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get a list of things",
        "description": "Get a list of things",
        "operationId": "getThings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Boolean for detailed information.",
            "x-ms-summary": "Boolean for detailed information.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageSingleThingRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "Import a csv file",
        "description": "Import a csv file",
        "operationId": "addThingsCsv",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "x-ms-summary": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Thing management"
        ],
        "summary": "Associate a product to a list of things",
        "description": "Associate a product to a list of things",
        "operationId": "associateThingsWithProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "description": "json",
            "x-ms-summary": "json",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SingleThingRo"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/list": {
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the list of things",
        "description": "Get the list of things",
        "operationId": "getThingList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "thingIds",
            "description": "thingIds",
            "x-ms-summary": "thingIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SingleThingRo"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get a thing details",
        "description": "Get a thing details",
        "operationId": "getThing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Boolean for detailed information.",
            "x-ms-summary": "Boolean for detailed information.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleThingRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Thing management"
        ],
        "summary": "Delete a thing",
        "description": "Delete a thing",
        "operationId": "ignoreThing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "x-ms-summary": "force",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "put": {
        "tags": [
          "Thing management"
        ],
        "summary": "Update a thing",
        "description": "Update a thing",
        "operationId": "putThing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "thingRo",
            "description": "Thing to update",
            "x-ms-summary": "Thing to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleThingRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ThingRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}/active_model": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the active model of a thing",
        "description": "Get the active model of a thing",
        "operationId": "getThingActiveModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/custom_fields": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get custom fields list",
        "description": "Get custom fields list",
        "operationId": "getCustomField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageCustomFieldRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "Add custom fields",
        "description": "Add custom fields",
        "operationId": "createCustomField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customFieldRo",
            "description": "Add custom field",
            "x-ms-summary": "Add custom field",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomFieldRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomFieldRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "put": {
        "tags": [
          "Thing management"
        ],
        "summary": "Update custom fields",
        "description": "Update custom fields",
        "operationId": "updateCustomField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customFieldRo",
            "description": "Update custom field",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomFieldRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomFieldRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/custom_fields/{fieldId}": {
      "delete": {
        "tags": [
          "Thing management"
        ],
        "summary": "Delete custom fields",
        "description": "Delete custom fields",
        "operationId": "deleteCustomField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id of a custom field. Cannot be empty.",
            "x-ms-summary": "Id of a custom field. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/custom_fields/{fieldId}/image": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get custom fields image",
        "description": "Get custom fields image",
        "operationId": "getCustomFieldImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png",
          "image/jpeg"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id of a custom field. Cannot be empty.",
            "x-ms-summary": "Id of a custom field. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "Update custom fields image",
        "description": "Update custom fields image",
        "operationId": "postCustomFieldImage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id of a custom field. Cannot be empty.",
            "x-ms-summary": "Id of a custom field. Cannot be empty",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Image",
            "x-ms-summary": "Image",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}/image": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the picture of the thing",
        "description": "Get the picture of the thing",
        "operationId": "getThingImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png",
          "image/jpeg"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}/last_measurements": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Last measurements of a thing",
        "description": "Last measurements of a thing",
        "operationId": "getLastMeasures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureTinyRo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/last_message": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Last message of a thing",
        "description": "Last message of a thing",
        "operationId": "getLastMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTinyRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/measures": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get a list of measures of a thing",
        "description": "Get a list of measures of a thing",
        "operationId": "getThingMeasures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Boolean for detailed information.",
            "x-ms-summary": "Boolean for detailed information.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/messages": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get a list of messages of a thing",
        "description": "Get a list of messages of a thing",
        "operationId": "getThingMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageMessageRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Thing management"
        ],
        "summary": "Delete all measures for a thing",
        "description": "Delete all measures for a thing",
        "operationId": "deleteThingMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "All messages of a thing",
        "description": "All messages of a thing",
        "operationId": "createThingMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "messageRo",
            "description": "messageRo",
            "x-ms-summary": "messageRo.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/model": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the active model of a thing",
        "description": "Get the active model of a thing",
        "operationId": "getThingModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found!"
          },
          "406": {
            "description": "Product has no model!"
          }
        }
      }
    },
    "/api/things/{id}/operations": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the list of available operations",
        "description": "Get the list of available operations",
        "operationId": "getThingOperations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageOperationRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/operations/{operationId}": {
      "post": {
        "tags": [
          "Thing management"
        ],
        "summary": "Execute an operation on a thing",
        "description": "Execute an operation on a thing",
        "operationId": "executeThingOperation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Id of an operation. Cannot be empty.",
            "x-ms-summary": "Id of an operation. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "placeholdersValues",
            "description": "placeholdersValues",
            "x-ms-summary": "placeholdersValues",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}/positions": {
      "put": {
        "tags": [
          "Thing management"
        ],
        "summary": "Update position of a thing",
        "description": "Update position of a thing",
        "operationId": "updateThingFixedPosition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "thingRo",
            "description": "thingRo",
            "x-ms-summary": "thingRo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThingRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleThingRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/things/{id}/product": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get the product of a thing",
        "description": "Get the product of a thing",
        "operationId": "getThingProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Thing management"
        ],
        "summary": "Dissociate the thing from the product",
        "description": "Dissociate the thing from the product",
        "operationId": "dissociateThingProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleThingRo"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "put": {
        "tags": [
          "Thing management"
        ],
        "summary": "Associate a product to a thing",
        "description": "Associate a product to a thing",
        "operationId": "associateThingProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "x-ms-summary": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductRo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleThingRo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/related_flows": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Related flows of a thing",
        "description": "Related flows of a thing",
        "operationId": "getFlowsRelatedToThing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageFlowRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/api/things/{id}/tags": {
      "get": {
        "tags": [
          "Thing management"
        ],
        "summary": "Get thing tags",
        "description": "Get thing tags",
        "operationId": "getThingTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a thing. Cannot be empty.",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageThingTagRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/stats/avg": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats average",
        "description": "Get stats average",
        "operationId": "getStatsAvg",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageStatsMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/count": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats count",
        "description": "Get stats count",
        "operationId": "getStatsCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StatsCountRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/last": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats last",
        "description": "Get stats last",
        "operationId": "getStatsLast",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageStatsMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/last/things/{thingId}": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats last",
        "description": "Get stats last",
        "operationId": "getThingStatsLast",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "description": "Id of a thing. Cannot be empty",
            "x-ms-summary": "Id of a thing. Cannot be empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageStatsMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/max": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats max",
        "description": "Get stats max",
        "operationId": "getStatsMax",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageStatsMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/measurements": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats measurements",
        "description": "Get stats measurements",
        "operationId": "getStatsMeasurements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "description": "time",
            "x-ms-summary": "time",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "interval",
            "x-ms-summary": "interval",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatsGraphRo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/min": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats min",
        "description": "Get stats min",
        "operationId": "getStatsMin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PageStatsMeasureRo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/repartition": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats repartition",
        "description": "Get stats repartition",
        "operationId": "getStatsRepartition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attribute",
            "in": "query",
            "description": "attribute",
            "x-ms-summary": "attribute",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatsCountRo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stats/sum": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats sum",
        "description": "Get stats sum",
        "operationId": "getStatsSum",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the current page",
            "x-ms-summary": "Number of the current page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of item in the page",
            "x-ms-summary": "Number of item in the page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortValues",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "String for sort value",
            "x-ms-summary": "String for sort value",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "String for filter",
            "x-ms-summary": "String for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "x-ms-summary": "Sort direction (ASC/DESC)",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "orFilter",
            "in": "query",
            "description": "Or filter parameter",
            "x-ms-summary": "Or filter parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "description": "time",
            "x-ms-summary": "time",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "interval",
            "x-ms-summary": "interval",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "x-ms-summary": "start",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "x-ms-summary": "end",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatsGraphRo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "PageMeasureRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "StatsGraphRo": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "last": {
          "type": "integer",
          "format": "int64"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      }
    },
    "MeasureRo": {
      "type": "object",
      "required": [
        "attribute",
        "value"
      ],
      "properties": {
        "attribute": {
          "$ref": "#/definitions/AttributeTinyRo"
        },
        "dtype": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/ModelTinyRo"
        },
        "product": {
          "$ref": "#/definitions/ProductTinyRo"
        },
        "thing": {
          "$ref": "#/definitions/ThingTinyRo"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "MessageRo": {
      "type": "object",
      "required": [
        "body",
        "creationDate",
        "errorMessage",
        "latitude",
        "longitude",
        "metadata",
        "number",
        "processed",
        "thing",
        "timestamp",
        "topic"
      ],
      "properties": {
        "body": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "link": {
          "$ref": "#/definitions/URI"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "measurements": {
          "$ref": "#/definitions/JsonNode"
        },
        "metadata": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "processed": {
          "type": "string",
          "enum": [
            "TODO",
            "DONE",
            "IN_PROGRESS",
            "ASSOCIATED",
            "TO_BE_FORWARDED",
            "ERROR_CUSTOM",
            "TODO_CUSTOM",
            "ERROR"
          ]
        },
        "rawMeasurements": {
          "$ref": "#/definitions/JsonNode"
        },
        "thing": {
          "$ref": "#/definitions/ThingTinyRo"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "TagRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "AlertRo": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "flowOrigin": {
          "$ref": "#/definitions/FlowTinyRo"
        },
        "id": {
          "type": "string"
        },
        "lastUpdate": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "CRITICAL"
          ]
        },
        "message": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "OPENED",
            "IGNORED",
            "IN_PROGRESS",
            "RESOLVED"
          ]
        },
        "thing": {
          "$ref": "#/definitions/ThingTinyRo"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "PageSiteRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageStatsMeasureRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatsMeasureRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SingleThingRo": {
      "type": "object",
      "required": [
        "application",
        "connectivity",
        "device",
        "name"
      ],
      "properties": {
        "application": {
          "$ref": "#/definitions/ApplicationTinyRo"
        },
        "connectivity": {
          "$ref": "#/definitions/ConnectivityRo"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldRo"
          }
        },
        "customModel": {
          "$ref": "#/definitions/CustomModelTinyRo"
        },
        "description": {
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/DeviceRo"
        },
        "displayName": {
          "type": "string"
        },
        "dynamicGps": {
          "type": "boolean"
        },
        "fixedLatitude": {
          "type": "number",
          "format": "double"
        },
        "fixedLongitude": {
          "type": "number",
          "format": "double"
        },
        "fixedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastActivityDate": {
          "type": "integer",
          "format": "int64"
        },
        "lastLatitude": {
          "type": "number",
          "format": "double"
        },
        "lastLongitude": {
          "type": "number",
          "format": "double"
        },
        "lastMeasurements": {
          "$ref": "#/definitions/JsonNode"
        },
        "lastMeasurementsTimestamps": {
          "$ref": "#/definitions/JsonNode"
        },
        "lastMessageDate": {
          "type": "integer",
          "format": "int64"
        },
        "messageActivityTimeoutPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nbAlerts": {
          "type": "integer",
          "format": "int64"
        },
        "product": {
          "$ref": "#/definitions/ProductTinyRo"
        },
        "site": {
          "$ref": "#/definitions/SiteRo"
        },
        "sourceId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PROVISIONED",
            "PENDING",
            "INACTIVE",
            "ACTIVE",
            "WARNING",
            "SUSPENDED",
            "DELETED",
            "IN_ASSOCIATION",
            "IN_DISSOCIATION",
            "OUT_OF_ORDER",
            "CREATED",
            "VIRTUAL"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThingTagRo"
          }
        }
      }
    },
    "EncoderTinyRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "SiteRo": {
      "type": "object",
      "required": [
        "address",
        "city",
        "name",
        "postalCode"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        }
      }
    },
    "DeviceRo": {
      "type": "object",
      "properties": {
        "batteryLevel": {
          "type": "integer",
          "format": "int32"
        },
        "batteryStatus": {
          "type": "string",
          "enum": [
            "NORMAL",
            "CHARGING",
            "CHARGE_COMPLETE",
            "DAMAGED",
            "LOW_BATTERY",
            "NOT_INSTALLED",
            "UNKNOWN"
          ]
        },
        "deviceType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "memoryFree": {
          "type": "integer",
          "format": "int32"
        },
        "memoryTotal": {
          "type": "integer",
          "format": "int32"
        },
        "model": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "RUNNING",
            "HALTED",
            "ERROR",
            "UNKNOWN"
          ]
        }
      }
    },
    "FlowTinyRo": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PageCustomFieldRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageCustomFieldRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AttributeRo": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/QuantityKindRo"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "StatsCountRo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "ProductRo": {
      "type": "object",
      "properties": {
        "certification": {
          "type": "string"
        },
        "connectivityTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LORA",
              "SIGFOX",
              "MQTT",
              "CELLULAR",
              "ETHERNET",
              "WIFI",
              "BLUETOOTH",
              "BACNET",
              "MODBUS",
              "IO_ANALOG",
              "IO_DIGITAL",
              "ENOCEAN",
              "ZIGBEE",
              "ZWAVE",
              "NFC",
              "USB",
              "IEEE_LR_WPAN",
              "DALI",
              "UNKNOWN"
            ]
          }
        },
        "decoder": {
          "$ref": "#/definitions/DecoderTinyRo"
        },
        "description": {
          "type": "string"
        },
        "encoder": {
          "$ref": "#/definitions/EncoderTinyRo"
        },
        "generateLinks": {
          "type": "boolean"
        },
        "hasImage": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "imageLink": {
          "type": "string"
        },
        "infoLink": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/ManufacturerTinyRo"
        },
        "manufacturerCategory": {
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/ModelTinyRo"
        },
        "modelManufacturer": {
          "$ref": "#/definitions/ManufacturerTinyRo"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "reference": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagRo"
          }
        },
        "things": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThingTinyRo"
          }
        }
      }
    },
    "QuantityKindRo": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "defaultUnit": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DecoderTinyRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      }
    },
    "PageAlertRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "StatsMeasureRo": {
      "type": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/AttributeRo"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "OperationRo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ConnectivityRo": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "rawStatus": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "INACTIVE",
            "ONLINE",
            "OFFLINE",
            "ERROR",
            "UNKNOWN"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "LORA",
            "SIGFOX",
            "MQTT",
            "CELLULAR",
            "ETHERNET",
            "WIFI",
            "BLUETOOTH",
            "BACNET",
            "MODBUS",
            "IO_ANALOG",
            "IO_DIGITAL",
            "ENOCEAN",
            "ZIGBEE",
            "ZWAVE",
            "NFC",
            "USB",
            "IEEE_LR_WPAN",
            "DALI",
            "UNKNOWN"
          ]
        }
      }
    },
    "CountRo": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MessageTinyRo": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/URI"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "PageThingTagRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThingTagRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ThingRo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldRo"
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "dynamicGps": {
          "type": "boolean"
        },
        "fixedLatitude": {
          "type": "number",
          "format": "double"
        },
        "fixedLongitude": {
          "type": "number",
          "format": "double"
        },
        "fixedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastActivityDate": {
          "type": "integer",
          "format": "int64"
        },
        "lastLatitude": {
          "type": "number",
          "format": "double"
        },
        "lastLongitude": {
          "type": "number",
          "format": "double"
        },
        "lastMeasurements": {
          "$ref": "#/definitions/JsonNode"
        },
        "lastMeasurementsTimestamps": {
          "$ref": "#/definitions/JsonNode"
        },
        "lastMessageDate": {
          "type": "integer",
          "format": "int64"
        },
        "messageActivityTimeoutPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nbAlerts": {
          "type": "integer",
          "format": "int64"
        },
        "site": {
          "$ref": "#/definitions/SiteRo"
        },
        "status": {
          "type": "string",
          "enum": [
            "PROVISIONED",
            "PENDING",
            "INACTIVE",
            "ACTIVE",
            "WARNING",
            "SUSPENDED",
            "DELETED",
            "IN_ASSOCIATION",
            "IN_DISSOCIATION",
            "OUT_OF_ORDER",
            "CREATED",
            "VIRTUAL"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThingTagRo"
          }
        }
      }
    },
    "PageOperationRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MessageAndMeasurementsRo": {
      "type": "object",
      "required": [
        "body",
        "creationDate",
        "errorMessage",
        "latitude",
        "longitude",
        "metadata",
        "number",
        "processed",
        "thing",
        "timestamp",
        "topic"
      ],
      "properties": {
        "body": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "link": {
          "$ref": "#/definitions/URI"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "measurements": {
          "type": "object"
        },
        "metadata": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "processed": {
          "type": "string",
          "enum": [
            "TODO",
            "DONE",
            "IN_PROGRESS",
            "ASSOCIATED",
            "TO_BE_FORWARDED",
            "ERROR_CUSTOM",
            "TODO_CUSTOM",
            "ERROR"
          ]
        },
        "rawMeasurements": {
          "$ref": "#/definitions/JsonNode"
        },
        "thing": {
          "$ref": "#/definitions/ThingTinyRo"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "CustomModelTinyRo": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ModelTinyRo": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "generateLinks": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCustomModel": {
          "type": "boolean"
        },
        "link": {
          "$ref": "#/definitions/URI"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "MeasureTinyRo": {
      "type": "object",
      "required": [
        "attribute",
        "value"
      ],
      "properties": {
        "attribute": {
          "$ref": "#/definitions/AttributeTinyRo"
        },
        "dtype": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ObjectNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      }
    },
    "AttributeTinyRo": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/QuantityKindRo"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "CustomFieldRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "imageLink": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TEXT",
            "TEXTEREA",
            "FILE"
          ]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PageMessageRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ManufacturerTinyRo": {
      "type": "object",
      "properties": {
        "generateLinks": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProductTinyRo": {
      "type": "object",
      "properties": {
        "connectivityTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LORA",
              "SIGFOX",
              "MQTT",
              "CELLULAR",
              "ETHERNET",
              "WIFI",
              "BLUETOOTH",
              "BACNET",
              "MODBUS",
              "IO_ANALOG",
              "IO_DIGITAL",
              "ENOCEAN",
              "ZIGBEE",
              "ZWAVE",
              "NFC",
              "USB",
              "IEEE_LR_WPAN",
              "DALI",
              "UNKNOWN"
            ]
          }
        },
        "generateLinks": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/ManufacturerTinyRo"
        },
        "model": {
          "$ref": "#/definitions/ModelTinyRo"
        },
        "name": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      }
    },
    "ThingTinyRo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "fixedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nbAlerts": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThingTagRo"
          }
        }
      }
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageFlowRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageFlowRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageSingleThingRo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleThingRo"
          }
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ThingTagRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "ApplicationTinyRo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ModelRo": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeRo"
          }
        },
        "color": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isCustomModel": {
          "type": "boolean"
        },
        "link": {
          "$ref": "#/definitions/URI"
        },
        "name": {
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationRo"
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "undefined": {
      "type": "basic"
    }
  },
  "security": [],
  "tags": [
    {
      "name": "Alerts",
      "description": "Alerts management"
    },
    {
      "name": "Measures",
      "description": "Mesure management"
    },
    {
      "name": "Tags",
      "description": "Thing tag management"
    },
    {
      "name": "Thing management",
      "description": "Thing management"
    },
    {
      "name": "Stats",
      "description": "Stats management"
    },
    {
      "name": "Sites",
      "description": "Site management"
    },
    {
      "name": "Messages",
      "description": "Message management"
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.pilot-things.com"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Internet of Things"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.pilot-things.com/privacy"
    }
  ]
}