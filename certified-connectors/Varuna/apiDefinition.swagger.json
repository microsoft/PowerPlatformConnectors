{
  "swagger": "2.0",
  "info": {
    "title": "Varuna",
    "description": "Varuna is an online platform to develop software with which brands can manage their sales, service and logistics processes, and to provide all services needed for the complete digitalization of these processes. Connect to Varuna to manage your business. You can create, delete, update and use your specific documents in Varuna to automate your business.",
    "version": "1.0",
    "contact": {
      "name" : "Univera Computer Systems Industry and Trade Inc." ,
      "url"  : "https://varunasolution.com/en/contact",
      "email": "info@varunasolution.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://varunasolution.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://univera.com.tr/pdpp.aspx"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "dexmo-powerautomate-functions.azurewebsites.net",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/odatametadatatojsonschema": {
      "get": {
        "responses": {
          "200": {
            "description": "A valid JSON schema of desired document type for get operations",
            "schema": {
              "type": "object" ,
              "properties": {
                  "schemas": {
                    "type": "object"
                  }
              }
            }
          }
        },
        "summary": "Get Schemas as Get",
        "description": "Get Schemas from API for get operations",
        "operationId": "GetSchemasAsGet",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "desired_schema",
            "in": "header",
            "description": "Desired schema to use dynamic fields",
            "x-ms-summary": "Desired Schema",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "A valid JSON schema of desired document type for delete operations",
            "schema": {"type": "object"}
          }
        },
        "summary": "Get Schemas as Patch",
        "description": "Get Schemas from API for delete operations",
        "operationId": "GetSchemasAsDelete",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "desired_schema",
            "in": "header",
            "description": "Desired schema to use dynamic fields",
            "x-ms-summary": "Desired Schema",
            "required": true,
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "A valid JSON schema of desired document type for post operations",
            "schema": {
              "type": "object" ,
              "properties": {
                  "schemas": {
                    "type": "object"
                  }
              }
            }
          }
        },
        "summary": "Get Schemas as Post",
        "description": "Get Schemas from API for post operations",
        "operationId": "GetSchemasAsPost",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "desired_schema",
            "in": "header",
            "description": "Desired schema to use dynamic fields",
            "x-ms-summary": "Desired Schema",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "A valid JSON schema of desired document type for patch operations",
            "schema": {
              "type": "object" ,
              "properties": {
                  "schemas": {
                    "type": "object"
                  }
              }
            }
          }
        },
        "summary": "Get Schemas as Patch",
        "description": "Get Schemas from API for patch operations",
        "operationId": "GetSchemasAsPatch",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "desired_schema",
            "in": "header",
            "description": "Desired schema to use dynamic fields",
            "x-ms-summary": "Desired Schema",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/getdocument": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetSchema"
            }
          }
        },
        "summary": "Get a document with Id and type",
        "description": "Get a specific document via a document type and a document Id",
        "operationId": "GetADocument",
        "parameters": [
          {
            "name": "document_type",
            "in": "header",
            "x-ms-summary": "Document Type",
            "description": "Type of the document to get",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDocumentNames",
              "value-path": "documentName",
              "value-collection": "document",
              "value-title": "documentName"
            }
          },
          {
            "name": "document_id",
            "x-ms-summary": "Document Id",
            "description": "Id of the document to get",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/getfancynames": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "document": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "documentName": {
                        "x-ms-summary": "Document Name",
                        "description": "Name of the document",
                        "type": "string"
                      }
                    }
                  },
                  "description": "document"
                }
              }
            }
          }
        },
        "summary": "Get Document Names",
        "description": "Get user-friendly document names to provide dropdown menu",
        "operationId": "GetDocumentNames",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    },
    "/createdocument": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Response of the delete document",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentId": {
                  "type": "string",
                  "description": "Id of the created document",
                  "title": "Document Id"
                }
              }
            }
          }
        },
        "summary": "Create a Document",
        "description": "Create a document with document type and related body parameters",
        "operationId": "CreateADocument",
        "parameters": [
          {
            "name": "document_type",
            "x-ms-summary": "Document Type",
            "description": "Type of the document to create",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDocumentNames",
              "value-path": "documentName",
              "value-collection": "document",
              "value-title": "documentName"
            }
          },
          {
            "name": "create_schema",
            "in": "body",
            "description": "Details for the created document.",
            "schema": {
              "$ref": "#/definitions/DynamicResponsePostSchema"
            }
          }
        ]
      }
    },
    "/deletedocument": {
      "delete": {
        "responses": {
          "200": {
            "description": "Response of the delete document",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentId": {
                  "type": "string",
                  "description": "Id of the deleted document",
                  "title": "Document Id"
                }
              }
            }
          }
        },
        "summary": "Delete a Document",
        "description": "Delete a specific document with document type and document Id",
        "operationId": "DeleteADocument",
        "parameters": [
          {
            "name": "document_type",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document Type",
            "description": "Type of the document to delete",
            "x-ms-dynamic-values": {
              "operationId": "GetDocumentNames",
              "value-path": "documentName",
              "value-collection": "document",
              "value-title": "documentName"
            }
          },
          {
            "name": "document_id",
            "x-ms-summary": "Document Id",
            "description": "Id of the document to delete",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/updatedocument": {
      "patch": {
        "responses": {
          "200": {
            "description": "Response of the updated document",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentId": {
                  "type": "string",
                  "description": "Id of the updated document",
                  "title": "Document Id"
                }
              }
            }
          }
        },
        "summary": "Update a Document",
        "description": "Update a document with document type and document Id",
        "operationId": "UpdateADocument",
        "parameters": [
          {
            "name": "document_type",
            "in": "header",
            "x-ms-summary": "Document Type",
            "description": "Type of the document to update",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetDocumentNames",
              "value-path": "documentName",
              "value-collection": "document",
              "value-title": "documentName"
            }
          },
          {
            "name": "document_id",
            "x-ms-summary": "Document Id",
            "description": "Id of the document to update",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "update_schema",
            "in": "body",
            "description": "Details for the updated document.",
            "schema": {
              "$ref": "#/definitions/DynamicResponsePatchSchema"
            }
          }
        ]
      }
    },
    "/getalldocumentsbytype": {
      "get": {
        "responses": {
          "200": {
            "description": "Response of get all documents by type operation",
            "schema": {
              "$ref": "#/definitions/DynamicResponseGetArraySchema"
            }
          }
        },
        "summary": "Get All Documents for a Document Type",
        "description": "Get All Documents for a document type",
        "operationId": "GetAllDocumentsByType",
        "parameters": [
          {
            "name": "document_type",
            "in": "header",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document Type",
            "description": "Type of the documents to get",
            "x-ms-dynamic-values": {
              "operationId": "GetDocumentNames",
              "value-path": "documentName",
              "value-collection": "document",
              "value-title": "documentName"
            }
          }
        ]
      }
    },
    "/subscribewebhook": {
      "parameters": [
        {
          "name": "document_type",
          "x-ms-summary": "Document Type",
          "description": "Document type to subscribe a specific document events",
          "in": "header",
          "type": "string",
          "required": true,
          "x-ms-dynamic-values": {
            "operationId": "GetDocumentNames",
            "value-path": "documentName",
            "value-collection": "document",
            "value-title": "documentName"
          }
        }
      ],
      "x-ms-notification-content": {
        "description": "Id of the document that an event occured",
        "schema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "description": "Id of related document",
              "title": "Id"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {"type": "object"}
          }
        },
        "summary": "Send notification when an event occurs",
        "description": "Create a subscription to get notification for a specific document and event (Create, Delete, Update)",
        "operationId": "SubscribeTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Acknowledge": {
                  "type": "string",
                  "description": "Acknowledge",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "FireAndForget"
                },
                "SubscriptionMode": {
                  "type": "string",
                  "description": "SubscriptionMode",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "default": "WebHookHttpEndpoint"
                },
                "MessageTemplateFormat": {
                  "type": "string",
                  "description": "MessageTemplateFormat",
                  "title": "",
                  "default": "Json",
                  "x-ms-visibility": "internal"
                },
                "Name": {
                  "type": "string",
                  "description": "Name of the trigger",
                  "x-ms-summary": "Trigger Name",
                  "title": ""
                },
                "ConditionExpression": {
                  "type": "string",
                  "description": "ConditionExpression",
                  "title": "",
                  "x-ms-visibility": "internal"
                },
                "When": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When the trigger will be triggered",
                  "title": "",
                  "x-ms-dynamic-values": {
                    "operationId": "GetEventTypes",
                    "value-path": "value",
                    "value-title": "displayString"
                  }
                },
                "AcknowledgeValidationExpression": {
                  "type": "string",
                  "description": "AcknowledgeValidationExpression",
                  "title": "",
                  "x-ms-visibility": "internal"
                },
                "Endpoint":
                {
                  "type": "string",
                  "description": "Endpoint",
                  "x-ms-notification-url": true,
                  "title": "",
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "Acknowledge",
                "SubscriptionMode",
                "MessageTemplateFormat",
                "Name",
                "Endpoint"
              ]
            }
          }
        ]
      }
    },
    "/unsubscribewebhook/{trigger_id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {"type": "object"}
          }
        },
        "summary": "Unsubscribe webhook trigger",
        "description": "Delete webhook subscription when an automated flow updated or deleted",
        "operationId": "UnsubscribeWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "trigger_id",
            "in": "path",
            "x-ms-summary": "Trigger Id",
            "x-ms-url-encoding" : "single",
            "description": "Trigger Id to delete unnecessary subscription",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/geteventtypes": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "displayString": {
                    "type": "string",
                    "description": "displayString"
                  },
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "value"
                  }
                }
              }
            }
          }
        },
        "summary": "Populate dropdown menu items for event types in trigger",
        "description": "Populate dropdown menu items for event types in trigger",
        "operationId": "GetEventTypes",
        "x-ms-visibility": "internal",
        "parameters": []
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "ApiKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "definitions": {
    "DynamicResponseGetArraySchema": {
      "type": "array",
      "items": {
        "x-ms-dynamic-schema": {
          "operationId": "GetSchemasAsGet",
          "value-path": "schemas",
          "parameters": {
            "desired_schema": {
              "parameter": "document_type"
            }
          }
        }
      }
    },
    "DynamicResponseGetSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetSchemasAsGet",
        "value-path": "schemas",
        "parameters": {
          "desired_schema": {
            "parameter": "document_type"
          }
        }
      }
    },
    "DynamicResponsePatchSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetSchemasAsPatch",
        "value-path": "schemas",
        "parameters": {
          "desired_schema": {
            "parameter": "document_type"
          }
        }
      }
    },
    "DynamicResponsePostSchema": {
      "type": "object",
      "x-ms-dynamic-schema": {
        "operationId": "GetSchemasAsPost",
        "value-path": "schemas",
        "parameters": {
          "desired_schema": {
            "parameter": "document_type"
          }
        }
      }
    }
  }
}
