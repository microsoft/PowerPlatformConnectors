{
  "swagger": "2.0",
  "info": {
    "title": "CloudTools for Salesforce",
    "description": "Apptigent CloudTools provides a wide range of data integration actions for Salesforce that can be accessed by any cloud-connected app or workflow.",
    "contact": {
      "name": "Apptigent Support",
      "url": "https://www.apptigent.com/help",
      "email": "support@apptigent.com"
    },
    "version": "1.0.0"
  },
  "host": "api.apptigent.com",
  "basePath": "/cloudtools/salesforce-sales",
  "schemes": [
    "https"
  ],
  "paths": {
    "/global/versions/v1/latest": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Organization - Latest API Version",
        "description": "Get the latest supported API version for an org",
        "operationId": "OrgLatestVersion",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/versions/v1/list": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Organization - List API Versions",
        "description": "Get a list of all supported API versions in an org",
        "operationId": "OrgListVersions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputVersionList"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/search/v1/query": {
      "post": {
        "tags": [
          "Queries"
        ],
        "summary": "Queries - Search Query",
        "description": "Execute a search (SOSL) query",
        "operationId": "QueriesSearchQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search query input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/soql/v1/query": {
      "post": {
        "tags": [
          "Queries"
        ],
        "summary": "Queries - SOQL Query",
        "description": "Execute a SOQL query",
        "operationId": "QueriesSOQlQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "SOQL query input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputSoqlQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/create/{name}": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Records - Create Record",
        "description": "Create a new record of the specified object type",
        "operationId": "GlobalCreateRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Object type that will be created",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select object name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Record creation input",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GlobalObjectFields",
                "value-path": "fields",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/delete/{name}/{recordId}": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Records - Delete Record",
        "description": "Delete a record of the specified object type",
        "operationId": "GlobalDeleteObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Object type that will be deleted",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "ID of record to be deleted",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/read/{name}/{recordId}": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Records - Get Record",
        "description": "Retrieve a record of the specified object type",
        "operationId": "GlobalGetRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Object type that will be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "ID of record to be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/update/{name}/{recordId}": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Records - Update Record",
        "description": "Update a record of the specified object type",
        "operationId": "GlobalUpdateRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Object type that will be updated",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "ID of record to be updated",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Record update input",
            "required": true,
            "schema": {
              "type": "object",
              "x-ms-dynamic-schema": {
                "operationId": "GlobalObjectFields",
                "value-path": "fields",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/leads/convertlead": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Leads - Convert a Lead",
        "description": "Convert a lead",
        "operationId": "RecordsLeadsConvertLead",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Lead conversion input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputConvertLead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/quickactions/v1/describe": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "Actions - Describe Quick Action",
        "description": "Retrieve all properties of a Quick Action",
        "operationId": "ActionsDescribeQuickAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object name input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputObjectName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/quickactions/v1/execute": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "Actions - Execute Quick Action",
        "description": "Execute a Quick Action with necessary data",
        "operationId": "ActionsExecuteQuickAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object name input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputBasicAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/quickactions/v1/list": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Actions - Retrieve Quick Actions",
        "description": "Retrieve a list of all Quick Actions in an org",
        "operationId": "ActionsListQuickActions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputActionList"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/describe/{name}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - Describe Object",
        "description": "Retrieve all metadata and fields of an sObject",
        "operationId": "GlobalDescribeObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the sObject",
            "required": true,
            "type": "string",
            "x-ms-summary": "Select Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/records/v1/files": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Records - Linked Files",
        "description": "Retrieve information about all files linked to a record",
        "operationId": "GlobalRecordLinkedFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Linked files input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputLinkedFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/list": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - List sObjects",
        "description": "Retrieve a list of all sObjects in an org",
        "operationId": "GlobalListObjects",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/fields/{name}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - Object Fields",
        "description": "Retrieve the fields of an sObject",
        "operationId": "GlobalObjectFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the sObject",
            "required": true,
            "type": "string",
            "x-ms-summary": "Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/metadata/{name}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - Object Metadata",
        "description": "Retrieve the metadata of an sObject",
        "operationId": "GlobalObjectMetadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the sObject",
            "required": true,
            "type": "string",
            "x-ms-summary": "Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/updatefields/{name}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - Object Updateable Fields",
        "description": "Retrieve the updateable fields of an sObject",
        "operationId": "GlobalObjectUpdateFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the sObject",
            "required": true,
            "type": "string",
            "x-ms-summary": "Object Name",
            "x-ms-url-encoding": "single",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/objects/v1/summary": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Objects - Objects Summary",
        "description": "Minimal object metadata",
        "operationId": "GlobalSummaryObjects",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/global/jobs/v1/bulk/abort": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Abort Job",
        "description": "Abort a job",
        "operationId": "GlobalJobsAbortJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Abort job input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputObjectJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/insert/create": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Create Bulk Insert Job",
        "description": "Create a bulk insert job",
        "operationId": "JobsCreateInsertJob",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectName",
            "description": "Name of the sObject type (e.g. Opportunity)",
            "type": "string",
            "x-ms-summary": "Object Name",
            "x-ms-dynamic-values": {
              "operationId": "GlobalSummaryObjects",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-visibility": "important",
            "in": "formData"
          },
          {
            "name": "fileFormat",
            "description": "File format (only CSV supported currently)",
            "type": "string",
            "default": "CSV",
            "x-ms-summary": "File Format",
            "in": "formData"
          },
          {
            "name": "lineEnding",
            "description": "Line terminator of input file. LF for Unix/Linus/Mac OS, CRLF for Windows",
            "type": "string",
            "x-ms-summary": "Line Ending",
            "enum": [
              "LF",
              "CRLF"
            ],
            "default": "CRLF",
            "x-ms-visibility": "important",
            "in": "formData"
          },
          {
            "name": "file",
            "description": "Binary file data (25MB limit)",
            "type": "file",
            "x-ms-summary": "File",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/query/create": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Create Bulk Query Job",
        "description": "Create a bulk query job",
        "operationId": "JobsCreateQueryJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bulk query job creation input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputCreateQueryJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/delete": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Delete Job",
        "description": "Delete a job",
        "operationId": "GlobalJobsDeleteJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Delete job input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputObjectJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/info": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Get All Jobs",
        "description": "Get information about all jobs",
        "operationId": "JobsGetAllJobs",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/status": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Get Bulk Job Status",
        "description": "Check the status of a job",
        "operationId": "GlobalJobsGetStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Job status input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputObjectJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputStringResult"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/jobs/v1/bulk/result": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Jobs - Get Bulk Job Result",
        "description": "Get bulk job result information",
        "operationId": "JobsGetJobResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bulk job result input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputJobResults"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/graphql/v1/query": {
      "post": {
        "tags": [
          "Queries"
        ],
        "summary": "Queries - GraphQL Query",
        "description": "Execute a Graph QL query to retrieve object and record data",
        "operationId": "QueriesGraphQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "GraphQL query input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputGraphQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/crm/chatter/v1/feeds/record/{recordId}/feed": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "summary": "Feeds - Get Record Feed",
        "description": "Retrieve the Chatter record feed",
        "operationId": "FeedsGetRecordElements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recordId",
            "description": "ID of the record",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID",
            "x-ms-url-encoding": "single"          
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/create/public": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Create Public Link",
        "description": "Create a public file link that unauthenticated users can access",
        "operationId": "FilesCreatePublicLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Public file link settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputCreatePublicFileLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/outputPublicLink"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/version/create": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Create Version",
        "description": "Upload a file as a new ContentVersion object",
        "operationId": "FilesCreateVersion",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Name of the file (including extension)",
            "type": "string",
            "x-ms-summary": "Name",
            "in": "formData"
          },
          {
            "name": "title",
            "description": "Title of the file",
            "type": "string",
            "x-ms-summary": "Title",
            "in": "formData"
          },
          {
            "name": "documentId",
            "description": "(Optional) ID of the ContentDocument object (used only when appending a new version to an existing file)",
            "type": "string",
            "x-ms-summary": "Document ID",
            "in": "formData"
          },
          {
            "name": "reasonForChange",
            "description": "(Optional) Description of the change",
            "type": "string",
            "x-ms-summary": "Reason for Change",
            "in": "formData"
          },
          {
            "name": "file",
            "description": "Binary file data",
            "type": "file",
            "x-ms-summary": "File",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/document/{documentId}/metadata": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Document Metadata",
        "description": "Retrieve information about a file (ContentDocument)",
        "operationId": "FilesDocumentMetadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "documentId",
            "description": "ID of file content document to be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/version/{versionId}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Get Version",
        "description": "Retrieve an individual file version (ContentVersion)",
        "operationId": "FilesGetVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "versionId",
            "description": "ID of file version to be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/document/{documentId}/versions": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Document Versions",
        "description": "Retrieve a list of version information for an individual file (ContentDocument)",
        "operationId": "FilesListVersions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "documentId",
            "description": "ID of the content document object containing the versions to be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/document/share": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Share Document",
        "description": "Associate a file (ContentDocument) with a record and set the sharing properties",
        "operationId": "FilesShareDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "File (ContentDocument) sharing settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputShareDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/global/files/v1/version/{versionId}/metadata": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Files - Version Information",
        "description": "Retrieve information about an individual file version (ContentVersion)",
        "operationId": "FilesVersionMetadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "versionId",
            "description": "ID of file content version to be retrieved",
            "required": true,
            "type": "string",
            "x-ms-summary": "Version ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    },
    "/crm/chatter/v1/feeds/create": {
      "post": {
        "tags": [
          "Feeds"
        ],
        "summary": "Feeds - Create Feed Item",
        "description": "Create a new feed item associated with a record",
        "operationId": "FeedCreateItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Record creation input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputFeedElement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/outputBasicError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "inputBasicAction": {
      "required": [
        "name",
        "data"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Quick Action Name",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "data": {
          "description": "Quick Action Data",
          "type": "object",
          "x-ms-summary": "Data"
        }
      },
      "example": "{\"name\":\"NewContact\",\"data\":\"{ \\\"record\\\" : { \\\"Salutation\\\" : \\\"Mr.\\\", \\\"FirstName\\\" : \\\"Joe\\\", \\\"LastName\\\" : \\\"Smith\\\", \\\"Email\\\" : \\\"joesmith@somecompany.com\\\" } }\"}"
    },
    "inputConvertLead": {
      "required": [
        "leadId"
      ],
      "type": "object",
      "properties": {
        "leadId": {
          "description": "Lead identifier",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Lead ID"
        },
        "createOpportunity": {
          "description": "Create an opportunity record upon conversion. Default is true.",
          "default": true,
          "type": "boolean",
          "x-ms-summary": "Create Opportunity"
        },
        "opportunityName": {
          "description": "Sets the name of the opportunity to create. If no name is specified, this value defaults to the company name of the lead.",
          "type": "string",
          "x-ms-summary": "Opportunity Name"
        },
        "overwriteLeadSource": {
          "description": "Overwrite the LeadSource field on the target contact object with the contents of the LeadSource field in the source lead object. Default is false.",
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Overwrite Lead Source"
        },
        "sendNotificationEmail": {
          "description": "Send a notification email to the owner. Default is false.",
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Send Notification Email"
        },
        "mergeAccountId": {
          "description": "ID of the account into which the lead is merged. Use only when updating an existing account.",
          "type": "string",
          "x-ms-summary": "Merge with Account ID"
        },
        "mergeContactId": {
          "description": "ID of the contact into which the lead will be merged (must already be associated with the account specified in mergeAccountId). Use only when updating an existing contact.",
          "type": "string",
          "x-ms-summary": "Merge with Contact ID"
        },
        "mergeOpportunityId": {
          "description": "ID of the opportunity into which the lead is merged. Use only when updating an existing opportunity.",
          "type": "string",
          "x-ms-summary": "Merge with Opportunity ID"
        },
        "ownerId": {
          "description": "ID of the person who owns any newly created account, contact, or opportunity. If blank the lead owner value will be used.",
          "type": "string",
          "x-ms-summary": "Owner ID"
        }
      },
      "example": "{\"leadId\":\"001A000000CAxIDO\",\"createOpportunity\":true,\"opportunityName\":\"My New Opportunity\",\"overwriteLeadSource\":false,\"sendNotificationEmail\":false,\"mergeAccountId\":\"001A000000CAxIBA\",\"mergeContactId\":\"\",\"mergeOpportunityId\":\"\",\"ownerId\":\"\"}"
    },
    "inputCreateInsertJob": {
      "type": "object",
      "properties": {
        "objectName": {
          "description": "Name of the sObject type (e.g. Opportunity)",
          "type": "string",
          "x-ms-summary": "Object Name"
        },
        "fileFormat": {
          "description": "File format (only CSV supported currently)",
          "type": "string",
          "x-ms-summary": "File Format",
          "enum": [
            "CSV"
          ],
          "default": "CSV"
        },
        "lineEnding": {
          "description": "Line terminator of input file. LF for Unix/Linus/Mac OS, CRLF for Windows",
          "type": "string",
          "x-ms-summary": "Line Ending",
          "enum": [
            "CRLF",
            "LF"
          ],
          "default": "CRLF"
        },
        "file": {
          "format": "binary",
          "description": "Binary file data (25MB limit)",
          "type": "string",
          "x-ms-summary": "File"
        }
      }
    },
    "inputCreatePublicFileLink": {
      "required": [
        "name",
        "versionId"
      ],
      "type": "object",
      "properties": {
        "versionId": {
          "description": "Content Version ID of the file",
          "type": "string",
          "x-ms-summary": "Version ID"
        },
        "name": {
          "description": "File name",
          "type": "string",
          "x-ms-summary": "File Name"
        },
        "viewInBrowser": {
          "description": "Create preview link for viewing in browser",
          "default": true,
          "type": "boolean",
          "x-ms-summary": "View In Browser"
        },
        "allowDownload": {
          "description": "Create download link to retrieve file contents",
          "default": true,
          "type": "boolean",
          "x-ms-summary": "Allow Download"
        },
        "password": {
          "description": "Password",
          "default": false,
          "type": "boolean",
          "x-ms-summary": "Password"
        },
        "expiration": {
          "description": "Expiration date (optional)",
          "type": "string",
          "x-ms-summary": "Expiration"
        }
      },
      "example": "{\"versionId\":\"001A000000CAxIDO\",\"name\":\"image.png\",\"viewInBrowser\":true,\"allowDownload\":true,\"password\":false,\"expiration\":\"1/1/2027 08:00:00\"}"
    },
    "inputCreateQueryJob": {
      "type": "object",
      "properties": {
        "operation": {
          "description": "Type of query operation",
          "type": "string",
          "x-ms-summary": "Query Operation",
          "enum": [
            "query",
            "queryAll"
          ],
          "default": "query"
        },
        "delimiter": {
          "description": "Column delimiter in output file",
          "type": "string",
          "x-ms-summary": "Column Delimiter",
          "enum": [
            "Backquote",
            "Caret",
            "Comma",
            "Pipe",
            "Semicolon",
            "Tab"
          ],
          "default": "Comma"
        },
        "lineEnding": {
          "description": "Line terminator of output file. LF for Unix/Linux/Mac OS, CRLF for Windows",
          "type": "string",
          "x-ms-summary": "Line Ending",
          "enum": [
            "CRLF",
            "LF"
          ],
          "default": "CRLF"
        },
        "query": {
          "description": "Large result set SOQL query (unencoded)",
          "type": "string",
          "x-ms-summary": "Query"
        }
      },
      "example": "{\"operation\":\"query\",\"delimiter\":\"Comma\",\"lineEnding\":\"CRLF\",\"query\":\"SELECT Id FROM Account\"}"
    },
    "inputCreateVersion": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the file (including extension)",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "title": {
          "description": "Title of the file",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "documentId": {
          "description": "(Optional) ID of the ContentDocument object (used only when appending a new version to an existing file)",
          "type": "string",
          "x-ms-summary": "Document ID"
        },
        "reasonForChange": {
          "description": "(Optional) Description of the change",
          "type": "string",
          "x-ms-summary": "Reason for Change"
        },
        "file": {
          "format": "binary",
          "description": "Binary file data",
          "type": "string",
          "x-ms-summary": "File"
        }
      }
    },
    "inputFeedElement": {
      "required": [
        "body",
        "recordId"
      ],
      "type": "object",
      "properties": {
        "body": {
          "description": "Feed item content. Accepts plain text values or a 'messageSegments' JSON object for more complex post types (refer to https://bit.ly/4706k0M).",
          "type": "string",
          "x-ms-summary": "Feed Content"
        },
        "recordId": {
          "description": "Associated record ID",
          "type": "string",
          "x-ms-summary": "Record ID"
        }
      },
      "example": "{\"body\":\"{\\\"messageSegments\\\":[{\\\"type\\\":\\\"Text\\\",\\\"text\\\":\\\"This is sample text.\\\"}]}\",\"recordId\":\"001A000000BAxIFO\"}"
    },
    "inputGraphQuery": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "description": "GraphQL query text",
          "type": "string",
          "x-ms-summary": "Query"
        }
      },
      "example": "{\"query\":\"query accounts { uiapi { query { Account { edges { node { Name { value } } } } } } }\"}"
    },
    "inputJobResults": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job ID",
          "type": "string",
          "x-ms-summary": "Job ID"
        },
        "jobType": {
          "description": "Type of job",
          "type": "string",
          "x-ms-summary": "Job Type",
          "enum": [
            "Insert",
            "Query"
          ],
          "default": "Insert"
        },
        "resultType": {
          "description": "Type of result set to retrieve",
          "type": "string",
          "x-ms-summary": "Result Type",
          "enum": [
            "All",
            "Success",
            "Failed",
            "Unprocessed"
          ],
          "default": "All"
        },
        "locator": {
          "description": "Record locator",
          "type": "string",
          "x-ms-summary": "Locator"
        },
        "maxRecords": {
          "description": "Maximum number of records to return",
          "type": "string",
          "x-ms-summary": "Max Records"
        }
      },
      "example": "{\"jobId\":\"0000000AABB\",\"jobType\":\"Insert\",\"resultType\":\"Success\",\"locator\":\"ABC0001\",\"maxRecords\":\"200\"}"
    },
    "inputLinkedFiles": {
      "required": [
        "linkTypes",
        "recordId"
      ],
      "type": "object",
      "properties": {
        "recordId": {
          "description": "Record ID",
          "type": "string",
          "x-ms-summary": "Record ID"
        },
        "linkTypes": {
          "description": "Type of linked files to include",
          "type": "string",
          "x-ms-summary": "Link Types",
          "enum": [
            "All",
            "Public Links Only"
          ],
          "default": "All"
        }
      },
      "example": "{\"recordId\":\"001A000000CAxIDO\",\"linkTypes\":\"Public Links Only\"}"
    },
    "inputObjectJob": {
      "required": [
        "id",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Object ID",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "ID"
        },
        "type": {
          "description": "Object Type",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Type",
          "enum": [
            "Ingest",
            "Query"
          ],
          "default": "Ingest"
        }
      },
      "example": "{\"id\":\"001A000000CAxIBA\",\"type\":\"ingest\"}"
    },
    "inputObjectName": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Object or item name",
          "type": "string",
          "x-ms-summary": "Name"
        }
      },
      "example": "{\"name\":\"Account\"}"
    },
    "inputSearchQuery": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "description": "Search query text (unencoded)",
          "type": "string",
          "x-ms-summary": "Name"
        }
      },
      "example": "{\"query\":\"FIND {Joe Sm*} IN Name Fields RETURNING lead(name, phone)\"}"
    },
    "inputShareDocument": {
      "required": [
        "documentId",
        "recordId",
        "visibility",
        "permissions"
      ],
      "type": "object",
      "properties": {
        "documentId": {
          "description": "ID of the file (ContentDocument object)",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Document ID"
        },
        "recordId": {
          "description": "ID of the record the file will be associated with",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Record ID"
        },
        "visibility": {
          "description": "Users who can access the file",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Visibility",
          "enum": [
            "All",
            "Internal",
            "Shared"
          ],
          "default": "All"
        },
        "permissions": {
          "description": "Sharing permissions (Viewer [View only], Collaborator [View/Edit/Share], Inferred from related record)",
          "minLength": 1,
          "type": "string",
          "x-ms-summary": "Permissions",
          "enum": [
            "Viewer",
            "Collaborator",
            "Inferred"
          ],
          "default": "Inferred"
        }
      },
      "example": "{\"documentId\":\"0000000000000AAABB\",\"recordId\":\"00A0000000000AAABB\",\"visibility\":\"All Users\",\"permissions\":\"Inferred\"}"
    },
    "inputSoqlQuery": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "description": "SOQL query text (unencoded)",
          "type": "string"
        }
      },
      "example": "{\"query\":\"SELECT name from Account\"}"
    },
    "outputActionList": {
      "type": "object",
      "properties": {
        "results": {
          "description": "Results",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-ms-summary": "Results"
        }
      },
      "example": "{\"results\":[{\"NewContact\":{\"actionEnumOrId\":\"000000000000000\",\"label\":\"Some Action\",\"name\":\"Some Action\",\"type\":\"Some type\",\"urls\":{\"defaultValues\":\"/something\",\"quickAction\":\"/something\",\"describe\":\"/something\",\"defaultValuesTemplate\":\"/something\"}}}]}"
    },
    "outputBasicError": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error status code",
          "type": "string"
        },
        "status": {
          "description": "Error status description",
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      },
      "example": "{\"code\":\"403\",\"status\":\"Forbidden\",\"message\":\"Unauthorized request\"}"
    },
    "outputPublicLink": {
      "required": [
        "objectId"
      ],
      "type": "object",
      "properties": {
        "objectId": {
          "description": "Content Distribution Object ID",
          "type": "string",
          "x-ms-summary": "Object ID"
        },
        "success": {
          "description": "Indicates success or failure of the operation",
          "type": "boolean",
          "x-ms-summary": "Success"
        },
        "password": {
          "description": "Auto-generated password value",
          "type": "string",
          "x-ms-summary": "Password"
        },
        "url": {
          "description": "Public URL",
          "type": "string",
          "x-ms-summary": "Url"
        }
      },
      "example": "{\"objectId\":\"001A000000CAIDO\",\"success\":true,\"password\":\"password\",\"url\":\"https://someurl\"}"
    },
    "outputStringResult": {
      "type": "object",
      "properties": {
        "result": {
          "description": "Text response",
          "type": "string"
        }
      },
      "example": "{\"result\":\"This is a sample result\"}"
    },
    "outputVersionList": {
      "type": "object",
      "properties": {
        "results": {
          "description": "Results",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-ms-summary": "Results"
        }
      },
      "example": "{\"results\":[{\"label\":\"Spring '21\",\"url\":\"/services/data/v51.0\",\"version\":\"51.0\"}]}"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Apptigent-Id",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.apptigent.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.apptigent.com/help/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity"
    }
  ]
}