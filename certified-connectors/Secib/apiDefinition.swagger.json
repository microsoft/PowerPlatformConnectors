{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "SECIB",
    "description": "The SECIB connector allows SECIB users to automate their workflow. For instance, you can trigger a worklflow when a new case file is created in SECIB neo.",
    "contact": {
      "name": "SECIB Support",
      "url": "https://support.secib.fr/",
      "email": "support.flow@secib.fr"
    }
  },
  "host": "secibconnecteurflow.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/secib/Dossiers/{id}": {
      "get": {
        "description": "allows the recovery of a case file wich is corresponding to an identifier specified in parameter.",
        "summary": "Retrieving a case file",
        "tags": [
          "Dossiers"
        ],
        "operationId": "GetDossierById",
        "deprecated": false,
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "An integer used as an identifier for the case file.",
            "x-ms-summary": "Identifier of the case file",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "Cabinet",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Firm to work with.",
            "x-ms-summary": "Firm to work with",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCabinets",
              "value-path": "id",
              "value-collection": "result/items",
              "value-title": "nom"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "dossierId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Identifier of the case file.",
                      "title": "Identifier"
                    },
                    "code": {
                      "type": "string",
                      "description": "Number of the case file.",
                      "title": "Case file number",
                      "x-ms-visibility": "important"
                    },
                    "nom": {
                      "type": "string",
                      "description": "Name of the case file.",
                      "title": "Case file name",
                      "x-ms-visibility": "important"
                    },
                    "dateCreation": {
                      "type": "string",
                      "description": "Creation date of the case file.",
                      "title": "Creation date"
                    },
                    "dateModification": {
                      "type": "string",
                      "description": "Last modification date of the case file.",
                      "title": "Modification date"
                    },
                    "dossierHypertextLink": {
                      "type": "string",
                      "description": "Hypertext link of the case file.",
                      "title": "Hypertext link",
                      "x-ms-visibility": "important"
                    },
                    "responsable": {
                      "type": "object",
                      "properties": {
                        "utilisateurId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Identifier of the lead attorney on the case file.",
                          "title": "Lead attorney's identifier"
                        },
                        "siteId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Identifier of the lead attorney's site.",
                          "title": "Site's identifier"
                        },
                        "nom": {
                          "type": "string",
                          "description": "Lastname of the case file's lead attorney.",
                          "title": "Lead attorney's lastname",
                          "x-ms-visibility": "important"
                        },
                        "prenom": {
                          "type": "string",
                          "description": "Firstname of the case file's lead attorney.",
                          "title": "Lead attorney's firstname",
                          "x-ms-visibility": "important"
                        },
                        "nomComplet": {
                          "type": "string",
                          "description": "Fullname of the case file's lead attorney.",
                          "title": "Lead attorney's fullname"
                        },
                        "actif": {
                          "type": "boolean",
                          "description": "Is the lead attorney active ?",
                          "title": "Active state",
                          "enum": [true, false]
                        },
                        "email": {
                          "type": "string",
                          "description": "Email of the case file's lead attorney.",
                          "title": "Lead attorney's email",
                          "x-ms-visibility": "important"
                        },
                        "login": {
                          "type": "string",
                          "description": "Login of the case file's lead attorney.",
                          "title": "Lead attorney's login"
                        }
                      },
                      "description": "Lead attorney of the case file."
                    }
                  },
                  "description": "Response result."
                }
              }
            }
          },
          "310": {
            "description": "Too Many Redirects.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/v1/secib/Dossiers/events/created": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "dossierId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Identifier of the case file.",
                  "title": "Identifier"
                },
                "code": {
                  "type": "string",
                  "description": "Number of the case file.",
                  "title": "Case file number",
                  "x-ms-visibility": "important"
                },
                "nom": {
                  "type": "string",
                  "description": "Name of the case file.",
                  "title": "Case file name",
                  "x-ms-visibility": "important"
                },
                "dateCreation": {
                  "type": "string",
                  "description": "Creation date of the case file.",
                  "title": "Creation date"
                },
                "dateModification": {
                  "type": "string",
                  "description": "Last modification date of the case file.",
                  "title": "Modification date"
                },
                "dossierHypertextLink": {
                  "type": "string",
                  "description": "Hypertext link of the case file.",
                  "title": "Hypertext link",
                  "x-ms-visibility": "important"
                },
                "responsable": {
                  "type": "object",
                  "properties": {
                    "utilisateurId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Identifier of the lead attorney on the case file.",
                      "title": "Lead attorney's identifier"
                    },
                    "siteId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Identifier of the lead attorney's site.",
                      "title": "Site's identifier"
                    },
                    "nom": {
                      "type": "string",
                      "description": "Lastname of the case file's lead attorney.",
                      "title": "Lead attorney's lastname",
                      "x-ms-visibility": "important"
                    },
                    "prenom": {
                      "type": "string",
                      "description": "Firstname of the case file's lead attorney.",
                      "title": "Lead attorney's firstname",
                      "x-ms-visibility": "important"
                    },
                    "nomComplet": {
                      "type": "string",
                      "description": "Fullname of the case file's lead attorney.",
                      "title": "Lead attorney's fullname"
                    },
                    "actif": {
                      "type": "boolean",
                      "description": "Is the lead attorney active ?",
                      "title": "Active state",
                      "enum": [true, false]
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the case file's lead attorney.",
                      "title": "Lead attorney's email",
                      "x-ms-visibility": "important"
                    },
                    "login": {
                      "type": "string",
                      "description": "Login of the case file's lead attorney.",
                      "title": "Lead attorney's login"
                    }
                  },
                  "description": "Lead attorney of the case file."
                }
              },
              "description": "Response result."
            }
          }
        },
        "description": "Webhook response that is sent when a case file is created."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "title": "result",
              "type": "object",
              "properties": {
                "secret": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "summary": "When a case file is created",
        "tags": [
          "Dossiers"
        ],
        "description": "Triggers a flow when a case file is created in SECIB neo, SECIB air or in Gestisoft.",
        "operationId": "DossierCreated",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CabinetId": {
                  "type": "string",
                  "description": "Firm to work with.",
                  "title": "Firm",
                  "x-ms-visibility": "important",
                  "x-ms-summary": "Firm to work with",
                  "x-ms-dynamic-values": {
                    "operationId": "GetCabinets",
                    "value-path": "id",
                    "value-collection": "result/items",
                    "value-title": "nom"
                  }
                },
                "webhookUri": {
                  "type": "string",
                  "description": "The url where the webhook has to be sent when the event occures.",
                  "title": "Callback uri",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal"
                }
              },
              "required": [
                "webhookUri"
              ]
            }
          }
        ]
      }
    },
    "/api/v1/secib/events/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "default.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "summary": "Deleting a webhook subscription",
        "tags": [
          "Webhooks"
        ],
        "description": "Operation used to delete a webhook subscription.",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Identifier of the webhook subscription.",
            "x-ms-summary": "Webhook subscription's identifier",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/api/v1/secib/Cabinets": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nom": {
                            "type": "string",
                            "description": "Name of a firm.",
                            "title": "Firm's name"
                          },
                          "id": {
                            "type": "string",
                            "description": "Identifier of a firm.",
                            "title": "Firm's identifier"
                          }
                        }
                      },
                      "description": "List of cabinet."
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of accessible firms.",
                      "title": "Firms count"
                    },
                    "defaultCabinet": {
                      "type": "object",
                      "properties": {
                        "nom": {
                          "type": "string",
                          "description": "Name of the default firm.",
                          "title": "Default firm's name"
                        },
                        "id": {
                          "type": "string",
                          "description": "Identifier of the default firm.",
                          "title": "Default firm's identifier"
                        }
                      },
                      "description": "Default firm."
                    }
                  },
                  "description": "Response result."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "summary": "Retrieving firms",
        "tags": [
          "Cabinets"
        ],
        "description": "Retrieving each accessible firm for the current user.",
        "operationId": "GetCabinets",
        "x-ms-visibility": "important",
        "parameters": []
      }
    },
    "/api/v1/secib/Views/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-ms-dynamic-schema": {
                "operationId": "GetViewDynamicSchema",
                "parameters": {
                  "name": {
                    "parameter": "name"
                  },
                  "cabinet": {
                    "parameter": "cabinet"
                  }
                },
                "value-path": "schema"
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "summary": "Retrieving view's data",
        "tags": [
          "Views"
        ],
        "description": "Retrieve data from a view in the SECIB database.",
        "operationId": "GetViewByViewName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the view in the SECIB database.",
            "x-ms-summary": "View's name",
            "x-ms-visibility": "important",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "cabinet",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Identifier of the firm to work with.",
            "x-ms-summary": "Firm's identifier",
            "x-ms-dynamic-values": {
              "operationId": "GetCabinets",
              "value-path": "id",
              "value-collection": "result/items",
              "value-title": "nom"
            }
          }
        ]
      }
    },
    "/api/v1/secib/Views/{name}/dynamic-schema": {
      "get": {
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "description": "WWW-Authenticate",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message.",
                  "title": "message"
                },
                "statusCode": {
                  "type": "integer",
                  "description": "Http status code of the request.",
                  "title": "HttpStatusCode" 
                }
              }
            }
          }
        },
        "summary": "Retrieving view's schema",
        "tags": [
          "Views"
        ],
        "operationId": "GetViewDynamicSchema",
        "description": "Retrieve the dynamic schema of the GetView operation's response.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the view.",
            "x-ms-summary": "View's name",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "cabinet",
            "in": "query",
            "type": "string",
            "description": "Identifier of the firm to work with.",
            "x-ms-summary": "Firm's identifier"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {
        "User.Read": "User.Read",
        "User.ReadBasic.All": "User.ReadBasic.All",
        "create": "create",
        "delete": "delete",
        "update": "update",
        "read": "read"
      }
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "User.Read",
        "User.ReadBasic.All",
        "create",
        "delete",
        "update",
        "read"
      ]
    }
  ],
  "tags": [
    {
      "name": "Dossiers"
    },
    {
      "name": "Views"
    },
    {
      "name": "Webhooks"
    },
    {
      "name": "Cabinets"
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.secib.fr"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.secib.fr/conditions-generales-dutilisation.htm"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Productivity"
    }
  ]
}