{
  "swagger": "2.0",
  "info": {
    "version": "V1",
    "title": "intelliHR",
    "description": "intelliHR is a cloud-based people management platform with advanced analytics capabilities.  Connect to your intelliHR tenant to automate people-oriented workflows (such as onboarding) and data export.",
    "contact": {
      "email": "support@intellihr.co",
      "name": "Customer Support",
      "url": "https://intellihr.zendesk.com/hc/en-us"
    }
  },
  "host": "api.intellihr.io",
  "basePath": "/v1",
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.intellihr.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://intellihr.co/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Human Resources;Business Intelligence"
    }
  ],
  "paths": {
    "/business-entities": {
      "get": {
        "description": "Returns a list of all Business Entities.",
        "summary": "List all Business Entities",
        "tags": [
          "Business Entities"
        ],
        "operationId": "ListallBusinessEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofBusinessEntities"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/business-entities/{id}": {
      "get": {
        "description": "Returns a single Business Entity by its identifier.",
        "summary": "Find a Business Entity by ID",
        "tags": [
          "Business Entities"
        ],
        "operationId": "FindaBusinessEntitybyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleBusinessEntity"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/business-units": {
      "get": {
        "description": "Returns a list of all Business Units recorded in the system.",
        "summary": "List all Business Units",
        "tags": [
          "Business Units"
        ],
        "operationId": "ListallBusinessUnits",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofBusinessUnits"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Returns the created Business Unit.",
        "summary": "Create a new Business Unit",
        "tags": [
          "Business Units"
        ],
        "operationId": "CreateanewBusinessUnit",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/business-units/{id}": {
      "get": {
        "description": "Returns a single Business Unit.",
        "summary": "Find a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "operationId": "FindaBusinessUnitbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the business unit",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Business Unit by the given ID.",
        "summary": "Delete a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "operationId": "DeleteaBusinessUnitbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the business unit",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "string",
              "properties": {}
            }
          },
          "204": {
            "description": "Success",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Returns the updated Business Unit.",
        "summary": "Update a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "operationId": "UpdateaBusinessUnitbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the business unit",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessUnit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/custom-field-definitions": {
      "get": {
        "description": "Returns a list of all Custom Field Definitions.",
        "summary": "List all Custom Field Definitions",
        "tags": [
          "Custom Field Definitions"
        ],
        "operationId": "ListallCustomFieldDefinitions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filters to apply to the query",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`. For example, a filter to get items matching a specific ID would be `filters[id][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofCustomFieldDefinitions"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/custom-field-definitions/{id}": {
      "get": {
        "description": "Returns a single Custom Field Definition.",
        "summary": "Find a Custom Field Definition by ID",
        "tags": [
          "Custom Field Definitions"
        ],
        "operationId": "FindaCustomFieldDefinitionbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the custom field",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleCustomFieldDefinition"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/default-remuneration-components": {
      "get": {
        "description": "Returns a list of all Default Remuneration Components recorded in the system.",
        "summary": "List all Default Remuneration Components",
        "tags": [
          "Default Remuneration Components"
        ],
        "operationId": "ListallDefaultRemunerationComponents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofDefaultRemunerationComponents"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/default-remuneration-components/{id}": {
      "get": {
        "description": "Returns a single default remuneration component.",
        "summary": "Find a Default Remuneration Component by ID",
        "tags": [
          "Default Remuneration Components"
        ],
        "operationId": "FindaDefaultRemunerationComponentbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The remuneration component ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleDefaultRemunerationComponent"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/employment-conditions": {
      "get": {
        "description": "Returns a list of all employment conditions.",
        "summary": "List all employment conditions",
        "tags": [
          "Employment Conditions"
        ],
        "operationId": "Listallemploymentconditions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofEmploymentConditions"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/employment-conditions/{id}": {
      "get": {
        "description": "Returns a single employment condition.",
        "summary": "Find an Employment Condition by ID",
        "tags": [
          "Employment Conditions"
        ],
        "operationId": "FindanEmploymentConditionbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The employment condition ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleEmploymentCondition"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/job-end/{id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleJob"
            },
            "headers": {}
          }
        },
        "summary": "Set the end date for a job",
        "description": "Set the end date for a job",
        "operationId": "EndJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the job to end",
            "x-ms-summary": "The ID of the job to end",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endDate": {
                  "type": "string",
                  "description": "endDate",
                  "title": ""
                },
                "turnoverType": {
                  "type": "string",
                  "description": "turnoverType",
                  "title": ""
                },
                "turnoverReason": {
                  "type": "string",
                  "description": "turnoverReason"
                }
              },
              "required": [
                "endDate",
                "turnoverType"
              ]
            }
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "description": "Returns a list of all Job entity records as at the current date.",
        "summary": "List all Jobs",
        "tags": [
          "Jobs"
        ],
        "operationId": "ListallJobs",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filters to apply to the query",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`. For example, a filter to get items matching a specific ID would be `filters[id][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sorting order to apply to the query",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListJobs"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new Job record with the provided data.",
        "summary": "Create a new Job",
        "tags": [
          "Jobs"
        ],
        "operationId": "CreateanewJob",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/job_create_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SingleJob"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "description": "Get a single Job record by UUIDv4 identifier.",
        "summary": "Find a Job by ID",
        "tags": [
          "Jobs"
        ],
        "operationId": "FindaJobbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the job to return",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "asAt",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Return data accurate for the job at this date",
            "description": "Used to configure what date to return this job data for, as a [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6) datetime. \n\nAll data returned from the job endpoints represent the values of the Person's job attributes at a specific point in time. \n\nBy default, the current datetime is used, but this parameter can be used to configure a different datetime to see historical data."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleJob"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Patch attributes of an existing Job record with the provided data.",
        "summary": "Patch an existing Job",
        "tags": [
          "Jobs"
        ],
        "operationId": "PatchanexistingJob",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the job",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/job_patch_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleJob"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "description": "Returns a list of all locations.",
        "summary": "List all locations",
        "tags": [
          "Locations"
        ],
        "operationId": "Listalllocations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Listlocations"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "description": "Returns a single location.",
        "summary": "Find a Location by ID",
        "tags": [
          "Locations"
        ],
        "operationId": "FindaLocationbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the location",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleLocation"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/pay-grades": {
      "get": {
        "description": "Returns a list of all pay grades.",
        "summary": "List all pay grades",
        "tags": [
          "Pay Grades"
        ],
        "operationId": "Listallpaygrades",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofPayGrades"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/pay-grades/{id}": {
      "get": {
        "description": "Returns a single pay grade.",
        "summary": "Find a Pay Grade by ID",
        "tags": [
          "Pay Grades"
        ],
        "operationId": "FindaPayGradebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the pay grade",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SinglePayGrade"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "description": "Returns a list of all People as at the current date.",
        "summary": "List all people",
        "tags": [
          "People"
        ],
        "operationId": "Listallpeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filters to apply to the query",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`. For example, a filter to get items matching a specific ID would be `filters[id][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sorting order to apply to the query",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPeople"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a person",
        "summary": "Create a new person record",
        "tags": [
          "People"
        ],
        "operationId": "CreateaPerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/people_create_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SinglePerson"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "description": "Get a single Person record by UUIDv4 identifier.",
        "summary": "Find a Person by ID",
        "tags": [
          "People"
        ],
        "operationId": "FindaPersonbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the person record",
            "x-ms-summary": "The ID of the person record",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SinglePerson"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a person",
        "summary": "Update a Person by ID",
        "tags": [
          "People"
        ],
        "operationId": "UpdatePersonByID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the person record",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/people_update_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SinglePerson"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/person-documents": {
      "post": {
        "description": "Create a presigned upload URL",
        "summary": "Create a presigned upload URL",
        "tags": [
          "Person Documents"
        ],
        "operationId": "PersonDocuments_POST",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/person_documents_create_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SinglePersonDocument"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/person-documents/{id}": {
      "patch": {
        "description": "Update a Document",
        "summary": "Update a document by id",
        "tags": [
          "Person Documents"
        ],
        "operationId": "PersonDocumentsById_PATCH",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the document",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/person_documents_patch_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PatchaPersonDocument"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/recruitment-sources": {
      "get": {
        "description": "Returns a list of all recruitment sources.",
        "summary": "List all recruitment sources",
        "tags": [
          "Recruitment Sources"
        ],
        "operationId": "Listallrecruitmentsources",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofRecruitmentSources"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/recruitment-sources/{id}": {
      "get": {
        "description": "Returns a single recruitment source.",
        "summary": "Find a Recruitment Source by ID",
        "tags": [
          "Recruitment Sources"
        ],
        "operationId": "FindaRecruitmentSourcebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the recruitment source",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleRecruitmentSource"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/training-providers": {
      "get": {
        "description": "Returns a list of all Training Providers.",
        "summary": "List all Training Providers",
        "tags": [
          "Training Providers"
        ],
        "operationId": "ListallTrainingProviders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListallTrainingProviders"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/training-providers/{id}": {
      "get": {
        "description": "Returns a single Training Provider.",
        "summary": "Find a Training Provider by ID",
        "tags": [
          "Training Providers"
        ],
        "operationId": "FindaTrainingProviderbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier string",
            "x-ms-summary": "The ID of the training provider",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleTrainingProvider"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/trainings": {
      "get": {
        "description": "Returns a list of all Training records.",
        "summary": "List all Trainings",
        "tags": [
          "Trainings"
        ],
        "operationId": "ListallTrainings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filters to apply to the query",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`. For example, a filter to get items matching a specific ID would be `filters[id][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sorting order to apply to the query",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofTrainings"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new Training record",
        "summary": "Create a Training record",
        "tags": [
          "Trainings"
        ],
        "operationId": "CreateaTraining",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/trainings_create_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SingleTraining"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/trainings/{id}": {
      "get": {
        "description": "Returns a single Training record.",
        "summary": "Find a Training record by ID",
        "tags": [
          "Trainings"
        ],
        "operationId": "FindaTrainingbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the training record",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleTraining"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the provided Training record.",
        "summary": "Delete a Training record by ID",
        "tags": [
          "Trainings"
        ],
        "operationId": "DeleteaTrainingbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the training record",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "string",
              "properties": {}
            }
          },
          "204": {
            "description": "Success",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a Training record",
        "summary": "Update a Training record by ID",
        "tags": [
          "Trainings"
        ],
        "operationId": "UpdateTrainingByID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the training record",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/trainings_patch_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleTraining"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/training-types": {
      "get": {
        "description": "Returns a list of all Training Types.",
        "summary": "List all Training Types",
        "tags": [
          "Training Types"
        ],
        "operationId": "ListallTrainingTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListallTrainingTypes"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/training-types/{id}": {
      "get": {
        "description": "Returns a single Training Type.",
        "summary": "Find a Training Type by ID",
        "tags": [
          "Training Types"
        ],
        "operationId": "FindaTrainingTypebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The training type ID",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleTrainingTypes"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-classes": {
      "get": {
        "description": "Returns a list of all Work Classes recorded in the system.",
        "summary": "List all work classes",
        "tags": [
          "Work Classes"
        ],
        "operationId": "Listallworkclasses",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListWorkClasses"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-classes/{id}": {
      "get": {
        "description": "Returns a single work class.",
        "summary": "Find a Work Class by ID",
        "tags": [
          "Work Classes"
        ],
        "operationId": "FindaWorkClassbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the work class",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWorkClass"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-rights": {
      "get": {
        "description": "Returns a list of all Work Rights recorded in the system.",
        "summary": "List all Work Rights",
        "tags": [
          "Work Rights"
        ],
        "operationId": "ListallWorkRights",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "x-ms-summary": "The page number",
            "description": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListofWorkRights"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-rights/{id}": {
      "get": {
        "description": "Returns a single work right.",
        "summary": "Find a Work Right by ID",
        "tags": [
          "Work Rights"
        ],
        "operationId": "FindaWorkRightbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the work right",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWorkRight"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-types": {
      "get": {
        "description": "Returns a list of all Work Types recorded in the system.",
        "summary": "List all Work Types",
        "tags": [
          "Work Types"
        ],
        "operationId": "ListallWorkTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items per page",
            "x-ms-summary": "The number of items per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": false,
            "description": "The page number",
            "x-ms-summary": "The page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListWorkTypes"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/work-types/{id}": {
      "get": {
        "description": "Returns a single work type.",
        "summary": "Find a Work Type by ID",
        "tags": [
          "Work Types"
        ],
        "operationId": "FindaWorkTypebyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the work type",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWorkType"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/webhook-events/{id}": {
      "get": {
        "description": "Returns a single Webhook Event.",
        "summary": "Find a Webhook Event by ID",
        "tags": [
          "Webhook Events"
        ],
        "operationId": "FindaWebhookEventbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the webhook event",
            "description": "The resource identifier string",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/webhook-events"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "id"
            },
            "event": {
              "type": "string",
              "description": "event"
            },
            "timestamp": {
              "type": "string",
              "description": "timestamp"
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "self"
                }
              },
              "description": "links"
            }
          }
        },
        "description": "webhook event"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWebhook"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        },
        "summary": "Create a webhook and subscribe to a type of event in your tenant",
        "description": "Create a webhook and subscribe to a type of event in your tenant",
        "operationId": "CreateWebhook",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "webhookEvent": {
                  "type": "string",
                  "description": "webhookEvent",
                  "x-ms-visibility": "important",
                  "title": ""
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "isEnabled"
                },
                "source": {
                  "type": "string",
                  "description": "source"
                }
              },
              "required": [
                "url",
                "webhookEvent"
              ]
            }
          }
        ]
      }
    },
    "/webhooks/{id}": {
      "get": {
        "description": "Returns a single webhook.",
        "summary": "Find a Webhook by ID",
        "tags": [
          "Webhooks"
        ],
        "operationId": "FindaWebhookbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the webhook",
            "x-ms-url-encoding": "single",
            "description": "The resource identifier string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWebhook"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the provided webhook.",
        "summary": "Delete a Webhook by ID",
        "tags": [
          "Webhooks"
        ],
        "operationId": "DeleteaWebhookbyID",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "The ID of the webhook",
            "x-ms-url-encoding": "single",
            "description": "The resource identifier string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "string",
              "properties": {}
            }
          },
          "204": {
            "description": "Success",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Patch a Webhook",
        "summary": "UpdateAWebhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "UpdateAWebhook",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "The ID of the webhook",
            "description": "The resource identifier string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/webhooks_patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SingleWebhook"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "BadRequest",
                  "message": "error",
                  "code": 400,
                  "errors": [
                    {
                      "code": 400,
                      "detail": "An invalid UUID was provided"
                    },
                    {
                      "code": 400,
                      "detail": "An invalid email address was provided"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Forbidden",
                  "message": "Error",
                  "code": 403,
                  "errors": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            },
            "examples": {
              "application/json": {
                "value": {
                  "name": "Internal Server Error",
                  "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                  "code": 500,
                  "errors": {}
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SingleBusinessEntity": {
      "title": "SingleBusinessEntity",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BusinessEntity"
        }
      }
    },
    "ListofBusinessEntities": {
      "title": "ListofBusinessEntities",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessEntity"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "Response": {
      "title": "Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/BusinessUnit3"
        },
        "meta": {
          "$ref": "#/definitions/Meta1"
        }
      }
    },
    "BusinessUnit": {
      "title": "BusinessUnit",
      "type": "object",
      "properties": {
        "identifier": {
          "description": "Optional identifier that can be used for administrative tasks.",
          "type": "string"
        },
        "name": {
          "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
          "example": "Engineering",
          "type": "string"
        },
        "notes": {
          "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
          "type": "string"
        },
        "parentId": {
          "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ]
    },
    "ListofBusinessUnits": {
      "title": "ListofBusinessUnits",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessUnit3"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta2"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleCustomFieldDefinition": {
      "title": "SingleCustomFieldDefinition",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/CustomFieldDefinition"
        }
      }
    },
    "ListofCustomFieldDefinitions": {
      "title": "ListofCustomFieldDefinitions",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDefinition"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleDefaultRemunerationComponent": {
      "title": "SingleDefaultRemunerationComponent",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DefaultRemunerationComponent"
        }
      }
    },
    "ListofDefaultRemunerationComponents": {
      "title": "ListofDefaultRemunerationComponents",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefaultRemunerationComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleEmploymentCondition": {
      "title": "SingleEmploymentCondition",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/EmploymentCondition"
        }
      }
    },
    "ListofEmploymentConditions": {
      "title": "ListofEmploymentConditions",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmploymentCondition"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "job_end_patch_request": {
      "title": "job_end_patch_request",
      "type": "object",
      "properties": {
        "endDate": {
          "description": "The date this [Job](#tags/jobs) ended or will end within the organisation. Required if not finalising an end date, or the job does not already have an end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "turnoverType": {
          "description": "The type of turnover this end of job would be classified as: `voluntary`, `involuntary` or `unknown`. Required if finalising an end date.",
          "example": "involuntary",
          "type": "string"
        },
        "turnoverReason": {
          "description": "The name of the turnover reason. Required if `turnoverType` is not `unknown`.",
          "example": "Medical reasons",
          "type": "string"
        }
      },
      "required": [
        "turnoverType"
      ]
    },
    "job_end_patch_response": {
      "title": "job_end_patch_response",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta1"
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      }
    },
    "SingleJob": {
      "title": "SingleJob",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta1"
        },
        "data": {
          "$ref": "#/definitions/Job"
        }
      }
    },
    "ListJobs": {
      "title": "ListJobs",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta8"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "job_create_request": {
      "title": "job_create_request",
      "type": "object",
      "properties": {
        "person": {
          "$ref": "#/definitions/Person3"
        },
        "companyStartDate": {
          "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "companyEndDate": {
          "description": "The date this [Job](#tags/jobs) ended or will end within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "name": {
          "description": "The job name to be created",
          "example": "Food Scientist",
          "type": "string"
        },
        "businessEntity": {
          "$ref": "#/definitions/BusinessEntity5"
        },
        "businessUnit": {
          "$ref": "#/definitions/BusinessUnit7"
        },
        "supervisorPerson": {
          "$ref": "#/definitions/SupervisorPerson3"
        },
        "supervisorJob": {
          "$ref": "#/definitions/SupervisorJob3"
        },
        "location": {
          "$ref": "#/definitions/Location3"
        },
        "workClass": {
          "$ref": "#/definitions/WorkClass"
        },
        "workType": {
          "$ref": "#/definitions/WorkType"
        },
        "fte": {
          "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
          "example": 1,
          "type": "string"
        },
        "payGrade": {
          "$ref": "#/definitions/PayGrade3"
        },
        "remunerationSchedule": {
          "$ref": "#/definitions/RemunerationSchedule3"
        },
        "recruitment": {
          "$ref": "#/definitions/Recruitment3"
        }
      },
      "required": [
        "person",
        "companyStartDate",
        "name",
        "businessEntity",
        "businessUnit",
        "workClass"
      ]
    },
    "job_patch_request": {
      "title": "job_patch_request",
      "type": "object",
      "properties": {
        "effectiveFrom": {
          "description": "The date this [Job](#tags/jobs) Update is effective from within the organisation. Note that this doesn't affect the start date of the overall job itself. A `null` value will indicate that this Update is effective from the start of the [Job](#tags/jobs). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "type": "string"
        },
        "effectiveTo": {
          "description": "The date this [Job](#tags/jobs) Update is effective to within the organisation. Note that this doesn't affect the end date of the overall job itself. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "name": {
          "description": "The job name to be updated",
          "example": "Food Scientist",
          "type": "string"
        },
        "businessEntity": {
          "$ref": "#/definitions/BusinessEntity5"
        },
        "businessUnit": {
          "$ref": "#/definitions/BusinessUnit7"
        },
        "supervisorPerson": {
          "$ref": "#/definitions/SupervisorPerson3"
        },
        "supervisorJob": {
          "$ref": "#/definitions/SupervisorJob3"
        },
        "location": {
          "$ref": "#/definitions/Location3"
        },
        "workClass": {
          "$ref": "#/definitions/WorkClass"
        },
        "workType": {
          "$ref": "#/definitions/WorkType"
        },
        "fte": {
          "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
          "example": 1,
          "type": "string"
        },
        "payGrade": {
          "$ref": "#/definitions/PayGrade3"
        },
        "remunerationSchedule": {
          "$ref": "#/definitions/RemunerationSchedule3"
        }
      },
      "required": [
        "effectiveFrom"
      ]
    },
    "SingleLocation": {
      "title": "SingleLocation",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/location5"
        }
      }
    },
    "Listlocations": {
      "title": "Listlocations",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/location5"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SinglePayGrade": {
      "title": "SinglePayGrade",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/payGrade5"
        }
      }
    },
    "ListofPayGrades": {
      "title": "ListofPayGrades",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/payGrade5"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "people_create_request": {
      "title": "people_create_request",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The [Person's](#tags/people) First Name.",
          "type": "string"
        },
        "middleName": {
          "description": "The [Person's](#tags/people) Middle Name.",
          "type": "string"
        },
        "lastName": {
          "description": "The [Person's](#tags/people) Last Name.",
          "example": "Wayne",
          "type": "string"
        },
        "preferredName": {
          "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Date of Birth (YYYY-MM-DD).",
          "type": "string"
        },
        "gender": {
          "description": "Human readable string for the [Person's](#tags/people) gender, e.g. `Male`. Searching is done case-insensitively and 'starts-with' e.g. passing `male` will match with a [Gender](#tags/genders) called \"Male\" as will \"m\" or \"M\". If multiple [Genders](#tags/genders) match the first will be chosen.",
          "example": "Other",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1,
          "type": "string"
        },
        "title": {
          "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided and is case insensitive.",
          "type": "string"
        },
        "emergencyContact": {
          "$ref": "#/definitions/EmergencyContact"
        },
        "primaryEmailAddress": {
          "$ref": "#/definitions/PrimaryEmailAddress"
        },
        "primaryPhoneNumber": {
          "$ref": "#/definitions/PrimaryPhoneNumber"
        },
        "customFields": {
          "description": "The custom field values for this [Person](#tags/people)",
          "example": {
            "text_field_api_name": {
              "value": "Some text value"
            },
            "numeric_field_api_name": {
              "value": 50
            },
            "single_select_api_name": {
              "value": {
                "label": "Drama"
              }
            },
            "multi_select_api_name": {
              "value": {
                "labels": [
                  "Bananas",
                  "Apples"
                ]
              }
            },
            "people_dropdown_api_name": {
              "value": [
                {
                  "person": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "name": "Bruce Wayne",
                    "primaryEmailAddress": "bruce.wayne@example.com",
                    "employeeNumber": 1,
                    "autoIncrementIntellihrId": 1000
                  },
                  "job": {
                    "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                    "name": "Maintenance worker"
                  }
                },
                {
                  "person": {
                    "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                    "name": "Batman",
                    "primaryEmailAddress": "batman@example.com",
                    "employeeNumber": 2,
                    "autoIncrementIntellihrId": 1001
                  },
                  "job": {
                    "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                    "name": "Janitor"
                  }
                }
              ]
            }
          },
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomFields"
          }
        },
        "workRight": {
          "$ref": "#/definitions/WorkRight"
        },
        "workRightExpiryDate": {
          "description": "The date this [Work Right](#tag/Work-Rights) will expire for this [Person](#tag/Person) (YYYY-MM-DD).",
          "type": "string"
        }
      },
      "required": [
        "lastName"
      ]
    },
    "ListPeople": {
      "title": "ListPeople",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/data1"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SinglePerson": {
      "title": "SinglePerson",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/data1"
        }
      }
    },
    "people_update_request": {
      "title": "people_update_request",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The [Person's](#tags/people) First Name.",
          "type": "string"
        },
        "middleName": {
          "description": "The [Person's](#tags/people) Middle Name.",
          "type": "string"
        },
        "lastName": {
          "description": "The [Person's](#tags/people) Last Name.",
          "example": "Wayne",
          "type": "string"
        },
        "preferredName": {
          "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Date of Birth (YYYY-MM-DD).",
          "type": "string"
        },
        "gender": {
          "description": "Human readable string for the [Person's](#tags/people) gender, e.g. `Male`. Searching is done case-insensitively and 'starts-with' e.g. passing `male` will match with a [Gender](#tags/genders) called \"Male\" as will \"m\" or \"M\". If multiple [Genders](#tags/genders) match the first will be chosen.",
          "example": "Other",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1,
          "type": "string"
        },
        "title": {
          "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided and is case insensitive.",
          "type": "string"
        },
        "emergencyContact": {
          "$ref": "#/definitions/EmergencyContact"
        },
        "emailAddresses": {
          "description": "Information about this [Person's](#tags/people) email addresses. This will replace all of their current emails. Note that a [Person](#tags/people) must have at least one primary email address.",
          "example": [
            {
              "email": "bruce.wayne@batman.org",
              "isPersonal": false,
              "isPrimary": true
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress2"
          }
        },
        "phoneNumbers": {
          "description": "Information about this [Person's](#tags/people) phone numbers. This will replace all of their current phone numbers. Note that a [Person](#tags/people) must have at least one primary phone number.",
          "example": [
            {
              "number": "0491 570 156",
              "isPersonal": false,
              "isPrimary": true
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber2"
          }
        },
        "addresses": {
          "description": "Information about this [Person's](#tags/people) addresses. This will replace all of their current addresses.",
          "example": [
            {
              "addressType": "Home",
              "fullAddress": "Queen Street, Brisbane QLD",
              "country": "Australia",
              "postcode": 4000,
              "state": "Queensland",
              "street": "Queen Street",
              "suburb": "Brisbane"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address2"
          }
        },
        "customFields": {
          "description": "The custom field values for this [Person](#tags/people)",
          "example": {
            "text_field_api_name": {
              "value": "Some text value"
            },
            "numeric_field_api_name": {
              "value": 50
            },
            "single_select_api_name": {
              "value": {
                "label": "Drama"
              }
            },
            "multi_select_api_name": {
              "value": {
                "labels": [
                  "Bananas",
                  "Apples"
                ]
              }
            },
            "people_dropdown_api_name": {
              "value": [
                {
                  "person": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "name": "Bruce Wayne",
                    "primaryEmailAddress": "bruce.wayne@example.com",
                    "employeeNumber": 1,
                    "autoIncrementIntellihrId": 1000
                  },
                  "job": {
                    "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                    "name": "Maintenance worker"
                  }
                },
                {
                  "person": {
                    "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                    "name": "Batman",
                    "primaryEmailAddress": "batman@example.com",
                    "employeeNumber": 2,
                    "autoIncrementIntellihrId": 1001
                  },
                  "job": {
                    "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                    "name": "Janitor"
                  }
                }
              ]
            }
          },
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomFields"
          }
        },
        "workRight": {
          "$ref": "#/definitions/WorkRight"
        },
        "workRightExpiryDate": {
          "description": "The date this [Work Right](#tag/Work-Rights) will expire for this [Person](#tag/Person) (YYYY-MM-DD).",
          "type": "string"
        }
      }
    },
    "person_documents_create_request": {
      "title": "person_documents_create_request",
      "type": "object",
      "properties": {
        "person": {
          "$ref": "#/definitions/Person6"
        },
        "filename": {
          "description": "The original filename of the document. This will be used for display name. Includes extension.",
          "example": "OfferLetter.pdf",
          "type": "string"
        },
        "mime": {
          "description": "The mime type of the document",
          "example": "application/pdf",
          "type": "string"
        },
        "size": {
          "description": "The estimated size of the document in bytes",
          "example": 300,
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "description": "The extension of the document, not including the dot",
          "example": "pdf",
          "type": "string"
        }
      },
      "required": [
        "person",
        "filename",
        "mime",
        "size",
        "extension"
      ]
    },
    "SinglePersonDocument": {
      "title": "SinglePersonDocument",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Data3"
        }
      }
    },
    "person_documents_patch_request": {
      "title": "person_documents_patch_request",
      "type": "object",
      "properties": {
        "personId": {
          "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "uploadStatus": {
          "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
          "type": "string"
        }
      },
      "required": [
        "personId",
        "uploadStatus"
      ]
    },
    "PatchaPersonDocument": {
      "title": "PatchaPersonDocument",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Data4"
        }
      }
    },
    "SingleRecruitmentSource": {
      "title": "SingleRecruitmentSource",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/recruitmentSource"
        }
      }
    },
    "ListofRecruitmentSources": {
      "title": "ListofRecruitmentSources",
      "type": "object",
      "properties": {
        "data": {
          "description": "Recruitment source details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recruitmentSource"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleTrainingProvider": {
      "title": "SingleTrainingProvider",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/trainingProviders"
        }
      }
    },
    "ListallTrainingProviders": {
      "title": "ListallTrainingProviders",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/trainingProviders"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleTraining": {
      "title": "SingleTraining",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Training"
        }
      }
    },
    "trainings_create_request": {
      "title": "trainings_create_request",
      "type": "object",
      "properties": {
        "coordinatorPerson": {
          "$ref": "#/definitions/CoordinatorPerson"
        },
        "completionDate": {
          "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "cost": {
          "description": "The cost of this [Training](#tag/Trainings).",
          "example": 600,
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this [Training](#tag/Trainings). Will default to the tenant default currency when not provided. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "hours": {
          "description": "How many hours were spent on this [Training](#tag/Trainings)",
          "example": 12,
          "type": "string"
        },
        "job": {
          "$ref": "#/definitions/Job8"
        },
        "name": {
          "description": "User friendly name given to this [Training](#tag/Trainings) to identify it in the system.",
          "example": "Accounting Compliance 101",
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/Person8"
        },
        "provider": {
          "$ref": "#/definitions/Provider1"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "customFields": {
          "description": "The custom field values for this [Training](#tag/Trainings)",
          "additionalProperties": {
            "$ref": "#/definitions/customFieldsRequest"
          }
        }
      },
      "required": [
        "completionDate",
        "name",
        "person"
      ]
    },
    "trainings_patch_request": {
      "title": "trainings_patch_request",
      "type": "object",
      "properties": {
        "coordinatorPerson": {
          "$ref": "#/definitions/CoordinatorPerson"
        },
        "completionDate": {
          "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "cost": {
          "description": "The cost of this [Training](#tag/Trainings).",
          "example": 600,
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this [Training](#tag/Trainings). Will default to the tenant default currency when not provided. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "hours": {
          "description": "How many hours were spent on this [Training](#tag/Trainings)",
          "example": 12,
          "type": "string"
        },
        "job": {
          "$ref": "#/definitions/Job8"
        },
        "name": {
          "description": "User friendly name given to this [Training](#tag/Trainings) to identify it in the system.",
          "example": "Accounting Compliance 101",
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/Person8"
        },
        "provider": {
          "$ref": "#/definitions/Provider1"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "customFields": {
          "description": "The custom field values for this [Training](#tag/Trainings)",
          "additionalProperties": {
            "$ref": "#/definitions/customFieldsRequest"
          }
        }
      }
    },
    "ListofTrainings": {
      "title": "ListofTrainings",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Training"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleTrainingTypes": {
      "title": "SingleTrainingTypes",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/trainingTypes"
        }
      }
    },
    "ListallTrainingTypes": {
      "title": "ListallTrainingTypes",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/trainingTypes"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleWorkClass": {
      "title": "SingleWorkClass",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkClassesSchema"
        }
      }
    },
    "ListWorkClasses": {
      "title": "ListWorkClasses",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkClassesSchema"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleWorkRight": {
      "title": "SingleWorkRight",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkRight2"
        }
      }
    },
    "ListofWorkRights": {
      "title": "ListofWorkRights",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkRight2"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SingleWorkType": {
      "title": "SingleWorkType",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/workType4"
        }
      }
    },
    "ListWorkTypes": {
      "title": "ListWorkTypes",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workType4"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "webhook-events_list": {
      "title": "webhook-events_list",
      "description": "List Webhook Events.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Data5"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "webhook-events": {
      "title": "webhook-events",
      "description": "Single Webhook Event.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Data5"
        }
      }
    },
    "SingleWebhook": {
      "title": "SingleWebhook",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Data7"
        }
      }
    },
    "webhooks_create": {
      "title": "webhooks_create",
      "type": "object",
      "properties": {
        "url": {
          "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered.",
          "type": "string"
        },
        "webhookEvent": {
          "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "source": {
          "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
          "example": "custom",
          "type": "string",
          "default": "custom"
        }
      },
      "required": [
        "url",
        "webhookEvent"
      ]
    },
    "webhooks_patch": {
      "title": "webhooks_patch",
      "type": "object",
      "properties": {
        "url": {
          "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered.",
          "type": "string"
        },
        "webhookEvent": {
          "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
          "type": "boolean"
        },
        "source": {
          "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
          "type": "string"
        }
      }
    },
    "ListWebhooks": {
      "title": "ListWebhooks",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Data7"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "Addition": {
      "title": "Addition",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Addition.",
          "example": "Superannuation",
          "type": "string"
        },
        "type": {
          "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "example": 9.5,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      }
    },
    "Addition3": {
      "title": "Addition3",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Addition.",
          "type": "string"
        },
        "type": {
          "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "defaultRemunerationComponent": {
          "$ref": "#/definitions/DefaultRemunerationComponent2"
        }
      },
      "required": [
        "name",
        "type",
        "value"
      ]
    },
    "AdditionsToTotal": {
      "title": "AdditionsToTotal",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Total Addition.",
          "example": "Superannuation",
          "type": "string"
        },
        "type": {
          "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "example": 9.5,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      }
    },
    "AdditionsToTotal3": {
      "title": "AdditionsToTotal3",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Addition.",
          "type": "string"
        },
        "type": {
          "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "defaultRemunerationComponent": {
          "$ref": "#/definitions/DefaultRemunerationComponent2"
        }
      },
      "required": [
        "name",
        "type",
        "value"
      ]
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "addressType": {
          "description": "The type of address.",
          "example": "Home",
          "type": "string"
        },
        "fullAddress": {
          "description": "The full address.",
          "example": "Queen Street, Brisbane QLD",
          "type": "string"
        },
        "country": {
          "description": "The country of the address.",
          "example": "Australia",
          "type": "string"
        },
        "postcode": {
          "description": "The postal code for the address.",
          "example": 4000,
          "type": "string"
        },
        "state": {
          "description": "The state of the address.",
          "example": "Queensland",
          "type": "string"
        },
        "street": {
          "description": "The street that the address is on.",
          "example": "Queen Street",
          "type": "string"
        },
        "suburb": {
          "description": "The suburb of the address.",
          "example": "Brisbane",
          "type": "string"
        }
      }
    },
    "Address2": {
      "title": "Address2",
      "type": "object",
      "properties": {
        "addressType": {
          "description": "Enum: `Home`, `Postal`.\nThe type of address.",
          "type": "string"
        },
        "fullAddress": {
          "description": "The full readable address, minus the postcode and country",
          "type": "string"
        },
        "country": {
          "description": "The country the address is in.",
          "type": "string"
        },
        "postcode": {
          "description": "The postcode of the address.",
          "type": "string"
        },
        "state": {
          "description": "The state the address is in. This is australia-specific and may not always be provided.",
          "type": "string"
        },
        "street": {
          "description": "The street the address is on. This is australia-specific and may not always be provided.",
          "type": "string"
        },
        "suburb": {
          "description": "The suburb the address is in. This is australia-specific and may not always be provided.",
          "type": "string"
        }
      }
    },
    "BadRequest": {
      "title": "BadRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "description": "HTTP Status Code for the error.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "List of errors identified by the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Breakdown": {
      "title": "Breakdown",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Addition.",
          "example": "Superannuation",
          "type": "string"
        },
        "type": {
          "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "example": 9.5,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      }
    },
    "Breakdown3": {
      "title": "Breakdown3",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Breakdowns.",
          "type": "string"
        },
        "type": {
          "description": "How this breakdown is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this breakdown. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "defaultRemunerationComponent": {
          "$ref": "#/definitions/DefaultRemunerationComponent4"
        }
      },
      "required": [
        "name",
        "type",
        "value"
      ]
    },
    "BusinessEntity": {
      "title": "BusinessEntity",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Entity](#tag/Business-Entities).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
          "example": "IntelliHR",
          "type": "string"
        },
        "legalName": {
          "description": "Legal name can be different from the name presented to a user. Usually used for administrative tasks.",
          "example": "IntelliHR Systems Limited",
          "type": "string"
        },
        "number": {
          "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
          "example": "00 000 000 000",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Business Entity](#tag/Business-Entities) in dropdowns.",
          "type": "boolean"
        }
      }
    },
    "BusinessUnit3": {
      "title": "BusinessUnit3",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Unit](#tag/Business-Units).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "identifier": {
          "description": "Optional identifier that can be used for administrative tasks.",
          "type": "string"
        },
        "name": {
          "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
          "example": "Engineering",
          "type": "string"
        },
        "notes": {
          "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
          "type": "string"
        },
        "parentId": {
          "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns.",
          "type": "boolean"
        }
      }
    },
    "BusinessEntity2": {
      "title": "BusinessEntity2",
      "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
          "example": "IntelliHR",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "BusinessEntity5": {
      "title": "BusinessEntity5",
      "description": "[Business Entity](#tag/Business-Entities) to whom this [Job](#tag/Jobs) belongs. This [Business Entity](#tag/Business-Entities) is specified as a search object, which will match the business entity which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Entity](#tag/Business-Entities) to whom this [Job](#tag/Jobs) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
          "example": "IntelliHR",
          "type": "string"
        },
        "legalName": {
          "description": "Legal name of [Business Entity](#tag/Business-Entities). Usually used for administrative tasks.",
          "example": "IntelliHR Systems Limited",
          "type": "string"
        },
        "number": {
          "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
          "example": "00 000 000 000",
          "type": "string"
        }
      }
    },
    "BusinessUnit4": {
      "title": "BusinessUnit4",
      "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
          "example": "Engineering",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "BusinessUnit7": {
      "title": "BusinessUnit7",
      "description": "[Business Unit](#tag/Business-Units) to whom this [Job](#tag/Jobs) belongs. This [Business Unit](#tag/Business-Units) is specified as a search object, which will match the business unit which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Business Unit](#tag/Business-Units) to whom this [Job](#tag/Jobs) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
          "example": "Engineering",
          "type": "string"
        }
      }
    },
    "Coordinator": {
      "title": "Coordinator",
      "description": "The [Coordinator](#tag/People) who did the [Training](#tag/Trainings). This data is optional and will be null when not stored.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Coordinator](#tag/People) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "displayName": {
          "description": "The name of the [Person](#tag/People) who coordinated the [Training](#tag/Trainings).",
          "example": "Batman (Bruce) Wayne",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1000,
          "type": "number",
          "minimum": 995,
          "format": "double"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "CoordinatorPerson": {
      "title": "CoordinatorPerson",
      "description": "The [Person](#tag/People) who coordinated the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "CustomFieldDefinition": {
      "title": "CustomFieldDefinition",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Custom Field Definition](#tag/Custom-Field-Definitions).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name would normally be shown to users of the system.",
          "example": "Custom Field",
          "type": "string"
        },
        "apiName": {
          "description": "The api name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.",
          "example": "custom_field",
          "type": "string"
        },
        "description": {
          "description": "The description of this [Custom Field Definition](#tag/Custom-Field-Definitions). This is used as a tooltip on the create and update pages.",
          "type": "string"
        },
        "modelType": {
          "description": "The model that this custom field relates to and can be attached to. Enum: `TRAINING`, `PERSON`.",
          "type": "string"
        },
        "type": {
          "description": "The type of data this field records. Enum: `SINGLE_SELECT`, `MULTI_SELECT`, `TEXT`, `NUMBER`, `PEOPLE_DROPDOWN`.",
          "type": "string"
        },
        "definitions": {
          "description": "This key's values change depending on the \"type\" key. It is used to store additional information pertinent to that key. For more information on custom field configurations, see our [knowledge base article on custom fields](https://intellihr.zendesk.com/hc/en-us/articles/360001367895-Adding-Custom-fields-to-the-Profile-tab)",
          "type": "object"
        }
      }
    },
    "CustomFields": {
      "title": "CustomFields",
      "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and will default to having null values.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Value"
        }
      }
    },
    "customFieldsRequest": {
      "title": "customFieldsRequest",
      "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and will default to having null values.",
      "properties": {
        "value": {
          "$ref": "#/definitions/Value5"
        }
      }
    },
    "customFieldsResponse": {
      "title": "customFieldsResponse",
      "description": "Custom fields will be keyed by their api_name. Custom fields will always appear on an object if defined, and will default to having null values.",
      "properties": {
        "definitionId": {
          "description": "The identifier string for the Custom Field Definition for this custom field.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The human readable name of the Custom Field Definition for this custom field",
          "type": "string"
        },
        "type": {
          "description": "The type of the Custom Field Definition for this custom field. Enum: `TEXT`, `NUMBER`, `SINGLE_SELECT`, `MULTI_SELECT`, `PEOPLE_DROPDOWN`.",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/CustomFieldValueObj"
        }
      }
    },
    "Data": {
      "title": "Data",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/Job"
        }
      }
    },
    "data1": {
      "title": "data1",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "displayName": {
          "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
          "example": "Batman (Bruce) Wayne",
          "type": "string"
        },
        "firstName": {
          "description": "The [Person's](#tags/people) First Name.",
          "type": "string"
        },
        "middleName": {
          "description": "The [Person's](#tags/people) Middle Name.",
          "type": "string"
        },
        "lastName": {
          "description": "The [Person's](#tags/people) Last Name.",
          "example": "Wayne",
          "type": "string"
        },
        "preferredName": {
          "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Date of Birth (YYYY-MM-DD).",
          "type": "string"
        },
        "gender": {
          "description": "Human readable string for the [Person's](#tags/people) gender, e.g. Male.",
          "example": "Male",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1,
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1000,
          "type": "number",
          "minimum": 995,
          "format": "double"
        },
        "title": {
          "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided.",
          "type": "string"
        },
        "emailAddresses": {
          "description": "An array of email addresses that belong to this Person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress"
          }
        },
        "emergencyContact": {
          "$ref": "#/definitions/EmergencyContact"
        },
        "employmentStatus": {
          "description": "The current status of this [Persons](#tags/people) within the organisation. Enum: `Current Staff`, `Exiting Staff`, `No Job Records`, `Past Staff`, `Returning Staff`, `Upcoming Staff`.",
          "example": "Current Staff",
          "type": "string"
        },
        "jobs": {
          "description": "An array of simple [Job](#tags/jobs) entries associated with this Person in reverse chronological order of start date.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job4"
          }
        },
        "workRights": {
          "$ref": "#/definitions/WorkRights"
        },
        "primaryEmailAddress": {
          "$ref": "#/definitions/PrimaryEmailAddress1"
        },
        "primaryPhoneNumber": {
          "$ref": "#/definitions/PrimaryPhoneNumber1"
        },
        "addresses": {
          "description": "An array of addresses that belong to this Person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "phoneNumbers": {
          "description": "An array of phone numbers that belong to this Person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        },
        "customFields": {
          "description": "The custom field values for this [Person](#tags/people)",
          "additionalProperties": {
            "$ref": "#/definitions/customFieldsResponse"
          }
        },
        "createdAt": {
          "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "updatedAt": {
          "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        }
      }
    },
    "Data3": {
      "title": "Data3",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "personId": {
          "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "presignedUploadUrl": {
          "description": "The presigned upload URL which enables you to upload a [Person Document](#tag/Person-Documents) to S3. This link will expire 20 minutes after creation. Instructions on how to upload an object with a presigned S3 URL can be found [here](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html)",
          "example": "https://<example-bucket-name>.s3.ap-southeast-2.amazonaws.com/<your-tenant>/...",
          "type": "string"
        }
      }
    },
    "Data4": {
      "title": "Data4",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "personId": {
          "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "uploadStatus": {
          "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
          "type": "string"
        }
      }
    },
    "Data5": {
      "title": "Data5",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
          "example": "Person Created Event",
          "type": "string"
        },
        "event": {
          "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
          "example": "person.created",
          "type": "string"
        },
        "examplePayload": {
          "description": "An example of the payload which will be sent to [Webhooks](#tag/Webhooks) that subscribe to this particular [Webhook Event](#tag/Webhook-Events).",
          "example": {
            "payload_key": "payload_value"
          },
          "type": "object"
        }
      }
    },
    "Data7": {
      "title": "Data7",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Webhook](#tag/Webhooks).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "url": {
          "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered.",
          "example": "http://example.com",
          "type": "string"
        },
        "webhookEvent": {
          "$ref": "#/definitions/WebhookEvent"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
          "example": true,
          "type": "boolean"
        },
        "source": {
          "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
          "example": "zapier",
          "type": "string"
        },
        "createdAt": {
          "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "updatedAt": {
          "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        }
      }
    },
    "Deduction": {
      "title": "Deduction",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Deduction.",
          "example": "salary sacrifice",
          "type": "string"
        },
        "type": {
          "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`.",
          "type": "string"
        },
        "value": {
          "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
          "example": 5000,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      }
    },
    "DefaultRemunerationComponent": {
      "title": "DefaultRemunerationComponent",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Default Remuneration Component](#tag/Default-Remuneration-Components).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Default Remuneration Component](#tag/Default-Remuneration-Components). This name would normally be shown to users of the system.",
          "example": "Superannuation",
          "type": "string"
        },
        "value": {
          "description": "The value of this remuneration component. For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly add to the total.",
          "example": 0.09,
          "type": "string"
        },
        "isInUse": {
          "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is used as any remuneration components.",
          "example": true,
          "type": "boolean"
        },
        "automaticallyAddToJobs": {
          "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is automatically added to newly created/updated jobs.",
          "example": false,
          "type": "boolean"
        },
        "isEnabled": {
          "description": "If this [Default Remuneration Component](#tag/Default-Remuneration-Components) is enabled for use in the system.",
          "example": true,
          "type": "boolean"
        },
        "currency": {
          "description": "The currency used for this [Default Remuneration Component](#tag/Default-Remuneration-Components). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "type": "string"
        },
        "type": {
          "description": "The type of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `AdditionToBase`, `AdditionToTotal`, `DeductionToBase`, `Breakdown`.",
          "example": "AdditionToTotal",
          "type": "string"
        },
        "valueType": {
          "description": "The type of the value of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `MultipleOfBase`, `FixedAmount`.",
          "example": "MultipleOfBase",
          "type": "string"
        }
      }
    },
    "DefaultRemunerationComponent2": {
      "title": "DefaultRemunerationComponent2",
      "description": "The default remuneration component this addition is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the default remuneration component.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name of the default remuneration component.",
          "type": "string"
        }
      }
    },
    "DefaultRemunerationComponent4": {
      "title": "DefaultRemunerationComponent4",
      "description": "The default remuneration component this breakdown is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the default remuneration component.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name of the default remuneration component.",
          "type": "string"
        }
      }
    },
    "EmailAddress": {
      "title": "EmailAddress",
      "type": "object",
      "properties": {
        "email": {
          "description": "The actual email address.",
          "type": "string"
        },
        "isPrimary": {
          "description": "If this is a primary email address.",
          "example": true,
          "type": "boolean"
        },
        "isPersonal": {
          "description": "If this is a personal email address.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "EmailAddress2": {
      "title": "EmailAddress2",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address associated with this person.",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this email is personal or a work email.",
          "type": "boolean"
        },
        "isPrimary": {
          "description": "Denotes whether this email is the primary contact email.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "EmergencyContact": {
      "title": "EmergencyContact",
      "description": "The details for this [Person's](#tags/people) emergency contact.",
      "example": {
        "name": "John Doe",
        "relationship": "Sibling",
        "phone": "0451 234 234",
        "email": "johndoe@example.com"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the emergency contact.",
          "type": "string"
        },
        "relationship": {
          "description": "The relationship this emergency contact has with the [Person](#tags/people).",
          "type": "string"
        },
        "phone": {
          "description": "Phone number of the emergency contact.",
          "type": "string"
        },
        "email": {
          "description": "Email of the emergency contact.",
          "type": "string"
        }
      }
    },
    "EmploymentCondition": {
      "title": "EmploymentCondition",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
          "example": "Professional Employees Award 2010",
          "type": "string"
        },
        "awardName": {
          "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Employment Condition](#tag/Employment-Conditions) in dropdowns.",
          "type": "boolean"
        }
      }
    },
    "EmploymentCondition2": {
      "title": "EmploymentCondition2",
      "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
          "example": "Professional Employees Award 2010",
          "type": "string"
        },
        "awardName": {
          "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "EmploymentCondition5": {
      "title": "EmploymentCondition5",
      "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n             This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
          "example": "Professional Employees Award 2010",
          "type": "string"
        },
        "awardName": {
          "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
          "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
          "type": "string"
        }
      }
    },
    "Error": {
      "title": "Error",
      "type": "object",
      "properties": {
        "code": {
          "description": "HTTP Status Code for the error.",
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "description": "A description of the problem encountered by the server.",
          "type": "string"
        }
      }
    },
    "filters": {
      "title": "filters",
      "type": "object",
      "properties": {
        "modelType": {
          "description": "The model that this custom field relates to and can be attached to. Enum: `TRAINING`, `PERSON`.\n\nExample filter: `filters[modelType][eq]=TRAINING`\n\nThis filter supports the equality `[eq]` operation",
          "example": "TRAINING",
          "type": "string"
        }
      }
    },
    "filters1": {
      "title": "filters1",
      "type": "object",
      "properties": {
        "personId": {
          "description": "The identifier string for the [Person](#tags/People).\n\nExample filter: `filters[personId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\nThis filter supports the equality `[eq]` operation",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "personName": {
          "description": "The name for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs.\n\nExample filter: `filters[personName][eq]=Batman`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Batman",
          "type": "string"
        },
        "primaryEmail": {
          "description": "The email address flagged as primary for the [Person](#tags/People)to whom the [Job](#tags/Jobs) belongs.\n\nExample filter: `filters[primaryEmail][eq]=bruce.wayne@example.com`\n\nThis filter supports the equality `[eq]` operation",
          "example": "bruce.wayne@example.com",
          "type": "string"
        },
        "employeeNumber": {
          "description": "The employee number for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs.\n\nExample filter: `filters[employeeNumber][eq]=00001`\n\nThis filter supports the equality `[eq]` operation",
          "example": 1,
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "The autogenerated number that uniquely identifies [Person](#tags/People) in intelliHR to whom the [Job](#tags/Jobs) belongs.\n\nExample filter: `filters[autoIncrementIntellihrId][eq]=1000`\n\nThis filter supports the equality `[eq]` operation",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "jobId": {
          "description": "The identifier string for the [Job](#tag/Jobs).\n\nExample filter: `filters[jobId][eq]=1000`\n\nThis filter supports the equality `[eq]` operation",
          "example": 1000,
          "type": "string"
        },
        "jobName": {
          "description": "The position title for the [Job](#tag/Jobs).\n\nExample filter: `filters[jobName][eq]=Food%20Scientist`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Food%20Scientist",
          "type": "string"
        },
        "jobNameAsAt": {
          "description": "The date to filter jobName. This filter should be used in conjunction with jobName filter above. If not provided, it defaults to today.\n\nExample filter: `filters[jobNameAsAt][eq]=2020-10-08T22%3A30%3A00%2B00%3A00`\n\nThis filter supports the equality `[eq]` operation",
          "example": "2020-10-08T22%3A30%3A00%2B00%3A00",
          "type": "string"
        },
        "jobStatus": {
          "description": "The current status of this [Job](#tags/jobs) within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.\n\nExample filter: `filters[jobStatus][eq]=Current%20Job`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Current%20Job",
          "type": "string"
        }
      }
    },
    "filters2": {
      "title": "filters2",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The identifier string for the [Job](#tags/jobs).\n\nExample filter: `filters[jobId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\nThis filter supports the equality `[eq]` operation",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "primaryEmailAddress": {
          "description": "This Person's primary email address.\n\nExample filter: `filters[primaryEmailAddress][eq]=bruce.wayne@batman.org`\n\nThis filter supports the equality `[eq]` operation",
          "example": "bruce.wayne@batman.org",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.\n\nExample filter: `filters[employeeNumber][eq]=00001`\n\nThis filter supports the equality `[eq]` operation",
          "example": 1,
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.\n\nExample filter: `filters[autoIncrementIntellihrId][eq]=1000`\n\nThis filter supports the equality `[eq]` operation",
          "example": 1000,
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of a [Person](#tags/people) in the system. This filter checks for an exact string match with any part of a [Persons](#tags/people) name. This filter is performed case insensitively and regardless of name order (e.g. `<last_name> <first_name>`). If multiple [People](#tags/people) match the `<filter_value>`, they will all be returned.\n\nExample filter: `filters[name][eq]=Batman%20(Bruce)%20Wayne`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Batman%20(Bruce)%20Wayne",
          "type": "string"
        }
      }
    },
    "filters3": {
      "title": "filters3",
      "type": "object",
      "properties": {
        "name": {
          "description": "User friendly name given to this [Training](#tag/Trainings). Filtering is done case insensitively\n\nExample filter: `filters[name][eq]=Accounting%20Compliance%20101`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Accounting%20Compliance%20101",
          "type": "string"
        },
        "providerId": {
          "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).\n\nExample filter: `filters[providerId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\nThis filter supports the equality `[eq]` operation",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "providerName": {
          "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).\n\nExample filter: `filters[providerName][eq]=HR%20Training%20Team`\n\nThis filter supports the equality `[eq]` operation",
          "example": "HR%20Training%20Team",
          "type": "string"
        },
        "typeId": {
          "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).\n\nExample filter: `filters[typeId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\nThis filter supports the equality `[eq]` operation",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "typeName": {
          "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).\n\nExample filter: `filters[typeName][eq]=Soft%20Skills`\n\nThis filter supports the equality `[eq]` operation",
          "example": "Soft%20Skills",
          "type": "string"
        }
      }
    },
    "Forbidden": {
      "title": "Forbidden",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "description": "HTTP Status Code for the error.",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "object"
        }
      }
    },
    "InternalServerError": {
      "title": "InternalServerError",
      "description": "Unknown server error",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the error.",
          "type": "string"
        },
        "message": {
          "description": "A brief information about what might have happened.",
          "type": "string"
        },
        "code": {
          "description": "HTTP Status Code for the error",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "object"
        }
      }
    },
    "Job": {
      "title": "Job",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "person": {
          "$ref": "#/definitions/Person"
        },
        "recruitment": {
          "$ref": "#/definitions/Recruitment"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "payGrade": {
          "$ref": "#/definitions/PayGrade"
        },
        "businessUnit": {
          "$ref": "#/definitions/BusinessUnit4"
        },
        "businessEntity": {
          "$ref": "#/definitions/BusinessEntity2"
        },
        "supervisorJob": {
          "$ref": "#/definitions/SupervisorJob"
        },
        "supervisorPerson": {
          "$ref": "#/definitions/SupervisorPerson"
        },
        "remunerationSchedule": {
          "$ref": "#/definitions/RemunerationSchedule"
        },
        "name": {
          "description": "The name/position title of this [Job](#tag/Jobs).",
          "example": "Janitor",
          "type": "string"
        },
        "fte": {
          "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
          "example": 1,
          "type": "number"
        },
        "workClass": {
          "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
          "example": "Full-Time",
          "type": "string"
        },
        "workType": {
          "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
          "example": "Permanent",
          "type": "string"
        },
        "jobStatus": {
          "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
          "example": "Current Job",
          "type": "string"
        },
        "companyStartDate": {
          "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "companyEndDate": {
          "description": "The date this [Job](#tags/jobs) ended or will end within the organisation or null if there is no end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": "string"
        },
        "isEndDateConfirmed": {
          "description": "Whether the end date has been finalised within the intelliHR application.",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "turnoverType": {
          "description": "The type of turnover this end of job is classified as.",
          "type": "string"
        },
        "turnoverReason": {
          "description": "The name of the turnover reason.",
          "type": "string"
        },
        "createdAt": {
          "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        }
      }
    },
    "Job3": {
      "title": "Job3",
      "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name/position title of the [Job](#tag/Jobs).",
          "type": "string"
        }
      }
    },
    "Job4": {
      "title": "Job4",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Job](#tags/jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name/position title of this [Job](#tags/jobs).",
          "example": "Software Engineer",
          "type": "string"
        },
        "startDate": {
          "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": "string"
        },
        "endDate": {
          "description": "The date this [Job](#tags/jobs) ended or will end within the organisation or null if there is no end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": "string"
        },
        "jobStatus": {
          "description": "The current status of this [Job](#tags/jobs) within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
          "example": "Current Job",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Job7": {
      "title": "Job7",
      "description": "The [Job](#tag/Jobs) of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Job](#tag/Jobs) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Persons](#tag/People) [Job](#tag/Jobs) who did the [Training](#tag/Trainings).",
          "example": "Software Engineer",
          "type": "string"
        },
        "startDate": {
          "description": "The [Jobs](#tag/Jobs) effective start date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "endDate": {
          "description": "The [Jobs](#tag/Jobs) effective end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": "string"
        },
        "jobStatus": {
          "description": "The Status Schema. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
          "example": "Current Job",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Job8": {
      "title": "Job8",
      "description": "The [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for. This is optional if the person only has one active job in the system.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        }
      }
    },
    "Links": {
      "title": "Links",
      "description": "Links to other related resources.",
      "type": "object",
      "properties": {
        "self": {
          "description": "The current page URL",
          "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=3",
          "type": "string"
        },
        "first": {
          "description": "The first page URL",
          "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=1",
          "type": "string"
        },
        "prev": {
          "description": "The previous page URL",
          "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=2",
          "type": "string"
        },
        "next": {
          "description": "The next page URL",
          "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=4",
          "type": "string"
        },
        "last": {
          "description": "The last page URL",
          "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=5",
          "type": "string"
        }
      }
    },
    "Location": {
      "title": "Location",
      "description": "The geographical location of this [Job](#tag/Jobs).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
          "example": "Brisbane Office",
          "type": "string"
        },
        "address": {
          "description": "The address of this location.",
          "example": "1234 Queen Street, Brisbane City QLD 4000",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Location3": {
      "title": "Location3",
      "description": "[Location](#tag/Locations) to whom this [Job](#tag/Jobs) belongs. This [Location](#tag/Locations) is specified as a search object, which will match the location which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Location](#tag/Locations).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
          "example": "Brisbane Office",
          "type": "string"
        },
        "address": {
          "description": "The address of this location.",
          "example": "1234 Queen Street, Brisbane City QLD 4000",
          "type": "string"
        }
      }
    },
    "location5": {
      "title": "location5",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Location](#tag/Locations).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "parentId": {
          "description": "The identifier string for the parent [Location](#tag/Locations), or null if there is no parent (this is a top level location).",
          "type": "string"
        },
        "name": {
          "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
          "example": "Brisbane Office",
          "type": "string"
        },
        "address": {
          "description": "The address of this location.",
          "example": "1234 Queen Street, Brisbane City QLD 4000",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Location](#tag/Locations) in dropdowns.",
          "type": "boolean"
        }
      }
    },
    "Meta": {
      "title": "Meta",
      "description": "Contains miscellaneous meta information about the response.",
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Meta1": {
      "title": "Meta1",
      "description": "Contains miscellaneous meta information about the response.",
      "type": "object",
      "properties": {
        "asAt": {
          "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        }
      }
    },
    "Meta2": {
      "title": "Meta2",
      "description": "Contains miscellaneous meta information about the response.",
      "type": "object",
      "properties": {
        "asAt": {
          "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Meta8": {
      "title": "Meta8",
      "description": "Contains miscellaneous meta information about the response.",
      "type": "object",
      "properties": {
        "asAt": {
          "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Option": {
      "title": "Option",
      "type": "object",
      "properties": {
        "job": {
          "description": "Job data returned for the selected person.",
          "type": "object"
        },
        "person": {
          "description": "Person data returned for the selected person.",
          "type": "object"
        }
      }
    },
    "Pagination": {
      "title": "Pagination",
      "description": "Contains information related to the pagination of the response",
      "type": "object",
      "properties": {
        "total": {
          "description": "Total items count",
          "example": 50,
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "count": {
          "description": "Number of items for current page",
          "example": 10,
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "per_page": {
          "description": "Items per page limit",
          "example": 10,
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "current_page": {
          "description": "Current page",
          "example": 3,
          "type": "integer",
          "minimum": 1,
          "format": "int32"
        },
        "total_pages": {
          "description": "Total number of pages",
          "example": 5,
          "type": "integer",
          "minimum": 1,
          "format": "int32"
        }
      }
    },
    "PayGrade": {
      "title": "PayGrade",
      "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
          "example": "Founder",
          "type": "string"
        },
        "code": {
          "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
          "example": "L0",
          "type": "string",
          "default": "N/A"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "PayGrade3": {
      "title": "PayGrade3",
      "description": "[Pay Grade](#tag/Pay-Grades) to whom this [Job](#tag/Jobs) belongs. This [Pay Grade](#tag/Pay-Grades) is specified as a search object, which will match the pay grade which best fits the keys for this object.\n         Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "code": {
          "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
          "example": "L0",
          "type": "string"
        },
        "name": {
          "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
          "example": "Founder",
          "type": "string"
        }
      }
    },
    "payGrade5": {
      "title": "payGrade5",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "code": {
          "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
          "example": "L0",
          "type": "string"
        },
        "name": {
          "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
          "example": "Founder",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Pay Grade](#tag/Pay-Grades) in dropdowns.",
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "Person": {
      "title": "Person",
      "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "displayName": {
          "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
          "example": "Batman (Bruce) Wayne",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1,
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1000,
          "type": "number",
          "minimum": 995,
          "format": "double"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Person3": {
      "title": "Person3",
      "description": "[Person](#tag/People) to whom this [Job](#tag/Jobs) belongs. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "Person4": {
      "title": "Person4",
      "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "Person6": {
      "title": "Person6",
      "description": "[Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "Person7": {
      "title": "Person7",
      "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tag/People) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "displayName": {
          "description": "The name of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
          "example": "Batman (Bruce) Wayne",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1000,
          "type": "number",
          "minimum": 995,
          "format": "double"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Person8": {
      "title": "Person8",
      "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "PhoneNumber": {
      "title": "PhoneNumber",
      "type": "object",
      "properties": {
        "number": {
          "description": "The actual phone number.",
          "example": "0491 570 156",
          "type": "string"
        },
        "fullNumber": {
          "description": "The actual phone number with the area code (if registered).",
          "example": "+61 491 570 156",
          "type": "string"
        },
        "isPrimary": {
          "description": "If this is a primary phone number.",
          "example": true,
          "type": "boolean"
        },
        "isPersonal": {
          "description": "If this is a personal phone number.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "PhoneNumber2": {
      "title": "PhoneNumber2",
      "type": "object",
      "properties": {
        "number": {
          "description": "The phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this phone is personal or a work phone number.",
          "type": "boolean"
        },
        "isPrimary": {
          "description": "Denotes whether this phone is the primary contact phone number.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "PrimaryEmailAddress": {
      "title": "PrimaryEmailAddress",
      "description": "Information about this [Person's](#tags/people) primary email address, or null if they have no email information.",
      "example": {
        "email": "bruce.wayne@batman.org",
        "isPersonal": false
      },
      "type": "object",
      "properties": {
        "email": {
          "description": "The actual email address.",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this email is personal or a work email.",
          "type": "boolean"
        }
      }
    },
    "PrimaryEmailAddress1": {
      "title": "PrimaryEmailAddress1",
      "description": "Information about this Person's primary email address, or null if they have no email information.",
      "example": {
        "email": "bruce.wayne@batman.org",
        "isPersonal": false
      },
      "type": "object",
      "properties": {
        "email": {
          "description": "The actual email address.",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this email is personal or a work email.",
          "type": "boolean"
        }
      }
    },
    "PrimaryPhoneNumber": {
      "title": "PrimaryPhoneNumber",
      "description": "Information about this [Person's](#tags/people) primary phone number, or null if they have no phone information.",
      "example": {
        "phone": "0491 570 156",
        "isPersonal": false
      },
      "type": "object",
      "properties": {
        "number": {
          "description": "The actual phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this phone is personal or a work phone number.",
          "type": "boolean"
        }
      }
    },
    "PrimaryPhoneNumber1": {
      "title": "PrimaryPhoneNumber1",
      "description": "Information about this Person's primary phone number, or null if they have no phone numbers.",
      "example": {
        "number": "0491 570 156",
        "fullNumber": "+61 491 570 156",
        "isPersonal": false
      },
      "type": "object",
      "properties": {
        "number": {
          "description": "The actual phone number.",
          "type": "string"
        },
        "fullNumber": {
          "description": "The actual phone number with the area code (if registered).",
          "type": "string"
        },
        "isPersonal": {
          "description": "Denotes whether this phone number is a personal or work number.",
          "type": "boolean"
        }
      }
    },
    "Provider": {
      "title": "Provider",
      "description": "The [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
          "example": "HR Training Team",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/training-providers/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Provider1": {
      "title": "Provider1",
      "description": "A search object for [Training Provider](#tag/Training-Providers) for this [Training](#tag/Trainings). The provider can be specified via id or via name. The default [Training Provider](#tag/Training-Providers) will be used if none is provided.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
          "example": "HR Training Team",
          "type": "string"
        }
      }
    },
    "Recruitment": {
      "title": "Recruitment",
      "description": "The recruitment details stored for this [Job](#tag/Jobs).",
      "type": "object",
      "properties": {
        "cost": {
          "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
          "example": 500,
          "type": "number"
        },
        "currency": {
          "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "source": {
          "$ref": "#/definitions/Source"
        }
      }
    },
    "Recruitment3": {
      "title": "Recruitment3",
      "description": "The recruitment details for this [Job](#tag/Jobs).",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/Source3"
        },
        "cost": {
          "description": "The cost of the recruitment.",
          "example": 5000,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        }
      }
    },
    "recruitmentSource": {
      "title": "recruitmentSource",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name given to this recruitment source.",
          "example": "Direct",
          "type": "string"
        },
        "parentId": {
          "description": "The identifier string for the parent [Recruitment Source](#tag/Recruitment-Sources), or null if there is no parent (this is a top level recruitment source).",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Recruitment Source](#tag/Recruitment-Sources) in dropdowns.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "RemunerationSchedule": {
      "title": "RemunerationSchedule",
      "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
          "type": "string"
        },
        "baseAnnualSalary": {
          "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
          "example": 50000,
          "type": "number",
          "format": "double"
        },
        "baseHourlyRate": {
          "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
          "example": 24,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "hoursPerCycle": {
          "description": "How many hours worked per payCycle.",
          "example": 80,
          "type": "number",
          "format": "double"
        },
        "payCycle": {
          "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`.",
          "example": "Fortnightly",
          "type": "string"
        },
        "annualPackage": {
          "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
          "example": 60000,
          "type": "number",
          "format": "double"
        },
        "hourlyPackage": {
          "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
          "example": 28,
          "type": "number",
          "format": "double"
        },
        "currencyConversionOccurred": {
          "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
          "example": true,
          "type": "boolean"
        },
        "employmentCondition": {
          "$ref": "#/definitions/EmploymentCondition2"
        },
        "additions": {
          "description": "An array of Additions for this Remuneration Schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addition"
          }
        },
        "deductions": {
          "description": "An array of Deductions for this Remuneration Schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deduction"
          }
        },
        "additionsToTotal": {
          "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionsToTotal"
          }
        },
        "breakdowns": {
          "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Breakdown"
          }
        }
      }
    },
    "RemunerationSchedule3": {
      "title": "RemunerationSchedule3",
      "description": "remuneration schedule",
      "type": "object",
      "properties": {
        "type": {
          "description": "The method in which this remuneration schedule is paid. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
          "example": "Annual Salary",
          "type": "string"
        },
        "payCycle": {
          "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`.",
          "example": "Fortnightly",
          "type": "string"
        },
        "currency": {
          "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "employmentCondition": {
          "$ref": "#/definitions/EmploymentCondition5"
        },
        "hoursPerCycle": {
          "description": "How many hours worked per payCycle.",
          "example": 80,
          "type": "number",
          "format": "double"
        },
        "baseAnnualSalary": {
          "description": "The Base Salary paid yearly, this is only required if the Remuneration Schedule Type is \"Annual Salary\".",
          "example": 50000,
          "type": "number",
          "format": "double"
        },
        "baseHourlyRate": {
          "description": "The Base Rate paid hourly, this is only required if the Remuneration Schedule Type is \"Hourly Rate\".",
          "example": 24,
          "type": "number",
          "format": "double"
        },
        "additions": {
          "description": "An array of Additions for the base salary.",
          "example": [
            {
              "name": "Referral Bonus",
              "type": "FixedAmount",
              "value": 200,
              "defaultRemunerationComponent": {
                "name": "Referral Bonus"
              }
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addition3"
          }
        },
        "additionsToTotal": {
          "description": "an array of Additions for the total salary.",
          "example": [
            {
              "name": "Superannuation",
              "type": "MultipleOfBase",
              "value": 9.5,
              "defaultRemunerationComponent": {
                "name": "Superannuation"
              }
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionsToTotal3"
          }
        },
        "breakdowns": {
          "description": "an array of Breakdowns.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Breakdown3"
          }
        }
      },
      "required": [
        "payCycle",
        "hoursPerCycle"
      ]
    },
    "Source": {
      "title": "Source",
      "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
          "example": "Unknown",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Source3": {
      "title": "Source3",
      "description": "[Recruitment Source](#tag/Recruitment-Sources) to whom this [Job](#tag/Jobs) belongs. This [Recruitment Source](#tag/Recruitment-Sources) is specified as a search object, which will match the recruitment source which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name given to this recruitment source.",
          "example": "Direct",
          "type": "string"
        }
      }
    },
    "SupervisorJob": {
      "title": "SupervisorJob",
      "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "jobStatus": {
          "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
          "example": "Current Job",
          "type": "string"
        },
        "name": {
          "description": "The name/position title of the [Supervisor's Job](#tag/Jobs).",
          "example": "Janitor",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "SupervisorJob3": {
      "title": "SupervisorJob3",
      "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name/position title of the [Supervisor's Job](#tag/Jobs).",
          "example": "Janitor",
          "type": "string"
        }
      }
    },
    "SupervisorPerson": {
      "title": "SupervisorPerson",
      "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "displayName": {
          "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
          "example": "Batman (Bruce) Wayne",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1,
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "example": 1000,
          "type": "number",
          "minimum": 995,
          "format": "double"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "SupervisorPerson3": {
      "title": "SupervisorPerson3",
      "description": "The [Person](#tag/People) who supervises this [Job](#tag/Jobs). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
      "example": {
        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
        "name": "Bruce Wayne",
        "primaryEmailAddress": "bruce.wayne@example.com",
        "employeeNumber": 1,
        "autoIncrementIntellihrId": 1000
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "description": "The email address flagged as primary for the [Person](#tags/people) within the system.",
          "type": "string"
        },
        "employeeNumber": {
          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        },
        "autoIncrementIntellihrId": {
          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
          "type": "string"
        }
      }
    },
    "Training": {
      "title": "Training",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to this [Training](#tag/Trainings).",
          "example": "Accounting Compliance 101",
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/Person7"
        },
        "job": {
          "$ref": "#/definitions/Job7"
        },
        "coordinator": {
          "$ref": "#/definitions/Coordinator"
        },
        "hours": {
          "description": "How many hours were spent on this [Training](#tag/Trainings).",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for this [Training](#tag/Trainings. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
          "example": "AUD",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "cost": {
          "description": "The cost of this [Training](#tag/Trainings).",
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "completionDate": {
          "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "createdAt": {
          "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "updatedAt": {
          "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "example": "2015-03-01T22:30:00.000Z",
          "type": "string"
        },
        "customFields": {
          "description": "Custom Fields defined on this training with their values.",
          "additionalProperties": {
            "$ref": "#/definitions/customFieldsResponse"
          }
        }
      }
    },
    "trainingProviders": {
      "title": "trainingProviders",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Provider](#tag/Training-Providers).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Provider](#tag/Training-Providers).",
          "example": "HR Training Team",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates if this [Training Provider](#tag/Training-Providers) will be used as a default when creating a [Training](#tag/Trainings) record.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "trainingTypes": {
      "title": "trainingTypes",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Type](#tag/Training-Types).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Type](#tag/Training-Types).",
          "example": "Soft Skills",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates if this [Training Type](#tag/Training-Types) will be used as a default when creating a [Training](#tag/Trainings) record.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "The [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
          "example": "Soft Skills",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/training-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "Type1": {
      "title": "Type1",
      "description": "A search object for [Training Type](#tag/Training-Types) for this [Training](#tag/Trainings). The type can be specified via id or via name. The default [Training Type](#tag/Training-Types) will be used if none is provided.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
          "example": "Soft Skills",
          "type": "string"
        }
      }
    },
    "Value": {
      "title": "Value",
      "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
      "type": "object",
      "properties": {
        "label": {
          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required.",
          "type": "string"
        },
        "labels": {
          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "Value1": {
      "title": "Value1",
      "type": "object",
      "properties": {
        "labels": {
          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "Value2": {
      "title": "Value2",
      "type": "object",
      "properties": {
        "person": {
          "$ref": "#/definitions/Person4"
        },
        "job": {
          "$ref": "#/definitions/Job3"
        }
      }
    },
    "CustomFieldValueObj": {
      "title": "CustomFieldValueObj",
      "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
      "properties": {
        "id": {
          "description": "The identifier string for the Dropdown Option. For SINGLE_SELECT records, the value is an object with the id and label of the dropdown option.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "label": {
          "type": "string"
        },
        "ids": {
          "description": "For MULTI_SELECT records, the value is an object with an array of ids and array of labels for all selected options.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          },
          "minLength": 36,
          "maxLength": 36,
          "minItems": 1
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "options": {
          "description": "For PEOPLE_DROPDOWN records the value is an array of the person and job object for each selected person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "Value5": {
      "title": "Value5",
      "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
      "type": "object",
      "properties": {
        "label": {
          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required.",
          "type": "string"
        },
        "labels": {
          "description": "For MULTI_SELECT records, the value is stored an object with array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "Value31": {
      "title": "Value31",
      "type": "object",
      "properties": {
        "ids": {
          "description": "For MULTI_SELECT records, the value is an object with an array of ids and array of labels for all selected options.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 36,
            "maxLength": 36
          },
          "minLength": 36,
          "maxLength": 36,
          "minItems": 1
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "Value32": {
      "title": "Value32",
      "type": "object",
      "properties": {
        "options": {
          "description": "For PEOPLE_DROPDOWN records the value is an array of the person and job object for each selected person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "Value51": {
      "title": "Value51",
      "type": "object",
      "properties": {
        "labels": {
          "description": "For MULTI_SELECT records, the value is stored an object with array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "WebhookEvent": {
      "title": "WebhookEvent",
      "description": "The [Webhook Event](#tag/Webhook-Events) that triggered this [Webhook](#tag/Webhooks).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
          "example": "Person Created Event",
          "type": "string"
        },
        "event": {
          "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
          "example": "person.created",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/webhook-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "WorkClassesSchema": {
      "title": "WorkClassesSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Class](#tag/Work-Classes).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Work Class](#tag/Work-Classes). This name would normally be shown to users of the system.",
          "example": "Casual",
          "type": "string"
        },
        "workType": {
          "$ref": "#/definitions/WorkType2"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns.",
          "type": "boolean"
        }
      }
    },
    "WorkRight2": {
      "title": "WorkRight2",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Right](#tag/Work-Right).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "Name given to this [Work Right](#tag/Work-Right). This name would normally be shown to users of the system.",
          "example": "Australian Citizen",
          "type": "string"
        },
        "countryId": {
          "description": "The identifier string for the Country.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        },
        "country": {
          "description": "The name value of the assigned Country.",
          "example": "Australia",
          "type": "string"
        }
      }
    },
    "WorkClass": {
      "title": "WorkClass",
      "description": "[Work Class](#tag/Work-Classes) to whom this [Job](#tag/Jobs) belongs. This [Work Class](#tag/Work-Classes) is specified as a search object, which will match the work class which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Class](#tag/Work-Classes) to whom this [Job](#tag/Jobs) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Work Class](#tag/Work-Classes).",
          "example": "Casual",
          "type": "string"
        }
      }
    },
    "WorkRight": {
      "title": "WorkRight",
      "description": "[Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs. This [Work Right](#tag/Work-Rights) is specified as a search object, which will match the work right which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Work Right](#tag/Work-Rights).",
          "example": "Australian Citizen",
          "type": "string"
        }
      }
    },
    "WorkRights": {
      "title": "WorkRights",
      "description": "Show the working rights of the person",
      "type": "object",
      "properties": {
        "name": {
          "description": "The type of the working rights",
          "example": "Permanent Resident",
          "type": "string"
        },
        "country": {
          "description": "The country where the working rights are valid",
          "example": "New Zealand",
          "type": "string"
        },
        "expirationDate": {
          "description": "The date the working rights are expiring",
          "type": "string"
        }
      }
    },
    "WorkType": {
      "title": "WorkType",
      "description": "[Work Type](#tag/Work-Types) to whom this [Job](#tag/Jobs) belongs. This [Work Type](#tag/Work-Types) is specified as a search object, which will match the work type which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Type](#tag/Work-Types) to whom this [Job](#tag/Jobs) belongs.",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
          "example": "Permanent",
          "type": "string"
        }
      }
    },
    "WorkType2": {
      "title": "WorkType2",
      "description": "The parent [Work Type](#tag/Work-Types) of this [Work Class](#tag/Work-Classes).",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Type](#tag/Work-Type) of this [Work Class](#tag/Work-Classes).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
          "example": "Permanent",
          "type": "string"
        },
        "link": {
          "description": "Link on the public api to get more information on this piece of data.",
          "example": "https://api.intellihr.io/v1/work-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string"
        }
      }
    },
    "workType4": {
      "title": "workType4",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier string for the [Work Type](#tag/Work-Type).",
          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
          "type": "string",
          "minLength": 36,
          "maxLength": 36
        },
        "name": {
          "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
          "example": "Permanent",
          "type": "string"
        },
        "isEnabled": {
          "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns.",
          "type": "boolean"
        }
      }
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [
    {
      "name": "Business Entities",
      "description": "[Business Entities](#tag/Business-Entities) represent the legal entities which exist within the organisation. A [Business Entity](#tag/Business-Entities) can be used as a filter for automation logic (eg Pulse configuration) and as a dimension in the analytics tools. Every [Job](#tag/Jobs) in the system belongs to a [Business Entity](#tag/Business-Entities)."
    },
    {
      "name": "Business Units",
      "description": "The administrative units that exist within the organisation. Used to render the org chart business unit view. For example, \"Finance\", \"HR\", or \"Information Technology\". [Business Units](#tag/Business-Units) can be configured as text strings with parent -> child relationships. Every [Job](#tag/Jobs) in the system belongs to a [Business Unit](#tag/Business-Units)."
    },
    {
      "name": "Custom Field Definitions",
      "description": "Custom Field Definitions can be used to attach extra data fields to particular models in the system such as [Training](#tag/Trainings)."
    },
    {
      "name": "Default Remuneration Components",
      "description": "[Default Remuneration Components](#tag/Default-Remuneration-Components) are the organization-wide remuneration components for both additions and breakdowns."
    },
    {
      "name": "Employment Conditions",
      "description": "Employment conditions are the conditions under which someone is paid for their remuneration schedule. Every [Job](#tag/Jobs) in the system belongs to a [Employment Condition](#tag/Employment-Conditions) or the `No Employment Condition` Employment Condition."
    },
    {
      "name": "End Job",
      "description": "Set and finalise the end date of a job. Finalising a job changes it to a past job on the end date."
    },
    {
      "name": "Jobs",
      "description": "The Job object is the core data object for past, current and future roles that a Person holds in the organisation. A Person can have more than one Job at a point in time to represent secondment / role sharing.<br/> The data returned from this endpoint represents the data at this current time, which may change over time due to scheduled changes. This endpoint returns the [Job's](#tag/Jobs) Remuneration Schedule."
    },
    {
      "name": "Locations",
      "description": "Locations can be configured as text strings with parent -> child relationships. For example, `Australia` -> `Brisbane` -> `Spring Hill Head Office`. These locations are used for filtering in analytics. Every [Job](#tag/Jobs) in the system belongs to a [Location](#tag/Locations) or the `No Location` Location."
    },
    {
      "name": "Pay Grades",
      "description": "Pay Grades are optional attributes applied to a job to provide a salary range for analytical purposes. These are configurable for admins in the intelliHR application. Every [Job](#tag/Jobs) in the system belongs to a [Pay Grade](#tag/Pay-Grades) or the `No Pay Grade` Pay Grade."
    },
    {
      "name": "People",
      "description": "People represent the base objects in the intelliHR data model. All past, present and future employees should be created as a Person and then have a Job created which references that Person object. Contact information for the employee (eg emergency contact, phone numbers, email addresses, etc) is referenced to the Person object. While Jobs can have scheduled updates which will take effect in the future, People are always static in the system and will not change unless updated."
    },
    {
      "name": "Person Documents",
      "description": "[Person Document](#tag/Person-Documents) is an object which represents the document stored in the \"Documents\" tab in Person Profile in intelliHR system. You can upload a document through this API by following the steps below. <p>1. Create a presigned upload URL which enables you to upload a document to S3 by using [Create a presigned upload URL](#tag/Person-Documents/paths/~1person-documents/post) endpoint. <br/>2. Upload a document to the S3 presigned URL with HTTP PUT method. <br/>3. Mark the upload status successful with [Update a Document](#tag/Person-Documents/paths/~1person-documents~1{id}/patch) endpoint.</p>These steps can be automatically handled by [Zapier](https://zapier.com/apps/intellihr/integrations) \"Upload Person Document\" action."
    },
    {
      "name": "Recruitment Sources",
      "description": "Recruitment sources refer to the origin of this employee, such as a job board or a recruitment agency. These are configured as text strings in the intelliHR application and are used as filters for analytical purposes. [Recruitment Sources](#tag/Recruitment-Sources) can be configured as text strings with parent -> child relationships."
    },
    {
      "name": "Training Providers",
      "description": "[Training Providers](#tag/Training-Providers) are used in the system to document what/who provided the [Training](#tag/trainings)."
    },
    {
      "name": "Trainings",
      "description": "[Trainings](#tag/Trainings) are used in the system to store details about individual training events."
    },
    {
      "name": "Training Types",
      "description": "[Training Types](#tag/Training-Types) are used in the system to document the category of a [Training](#tag/Trainings) record."
    },
    {
      "name": "Work Classes",
      "description": "Work Classes are a sub-class of Work Types. For example, the `Permanent` Work Type has both `Full-Time` and `Part-Time` Work Classes. These are used for to configure automation and analytics filters. Every [Job](#tag/Jobs) in the system belongs to a [Work Class](#tag/Work-Classes)."
    },
    {
      "name": "Work Rights",
      "description": "[Work Rights](#tag/Work-Rights) are the organization-wide work rights."
    },
    {
      "name": "Work Types",
      "description": "Work Types represent the primary work classification for a job. It is one of the types `Permanent`, `Fixed Contract`, `Unpaid` or `Temporary/Casual`. This attribute is always used with the Work Class attribute which is a sub class of Work Type. Every [Job](#tag/Jobs) in the system belongs to a [Work Type](#tag/Work-Types)."
    },
    {
      "name": "Webhook Events",
      "description": "[Webhook Events](#tag/Webhook-Events) are hardcoded events which occur within the intelliHR platform which can be subscribed to using [Webhooks](#tag/Webhooks).\n\n  As an example, person.created is a [Webhook Event](#tag/Webhook-Events), which can trigger a [Webhook](#tag/Webhooks) when a [Person](#tag/People) is created within the platform."
    },
    {
      "name": "Webhooks",
      "description": "[Webhooks](#tag/Webhooks) are used in the system to allow developers and integration platforms (such as [Zapier](https://zapier.com/)) to subscribe to a [Webhook Event](#tag/Webhook-Events), such as a person.updated or person.created event.\n\n  When the [Webhook Event](#tag/Webhook-Events) is triggered, the system will send a payload to the endpoint specified when creating the [Webhook](#tag/Webhooks).\n\n  These [Webhooks](#tag/Webhooks) follow the [Rest Hook](https://resthooks.org/) pattern.\n\n  The payload of these [Webhooks](#tag/Webhooks) are in the following example structure:\n\n    {\n\n      \"id\": \"{webhookId}\",\n\n      \"event\": \"training.created\",\n\n      \"links\": {\n\n        \"self\": \"https://api.intellihr.io/trainings/{trainingId}\"\n\n      },\n\n      \"timestamp\": \"2019-09-25T05:51:35Z\"\n\n    }\n\n  "
    }
  ]
}