{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "HiveCPQ Product Configurator",
    "description": "HiveCPQ is a comprehensive Configure Price Quote (CPQ) solution that empowers sales teams to generate accurate quotes for complex products. Streamline your sales process by seamlessly integrating HiveCPQ to automate workflows, sync data, and optimize your operations using our connector. Maximize efficiency and deliver exceptional sales experiences with HiveCPQ's powerful connector.",
    "contact": {
      "name": "HiveCPQ Support",
      "url": "https://hivecpq.com/en/integrations",
      "email": "support@hivecpq.com"
    }
  },
  "host": "connect.hivecpq.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/manufacturers": {
      "get": {
        "summary": "Get manufacturers",
        "description": "Get all manufacturers to which you are connected.",
        "operationId": "GetManufacturers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetManufacturers"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Manufacturer"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies": {
      "get": {
        "summary": "Search companies",
        "description": "Search companies linked to a manufacturer.",
        "operationId": "SearchCompaniesOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "name",
            "x-ms-summary": "Company Name",
            "description": "Filter on the name of the companies.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeArchived",
            "x-ms-summary": "Archival Status",
            "description": "Filter on the archival status of the companies.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetCompanies"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "post": {
        "summary": "Add a new company",
        "description": "Add a new company to a manufacturer.",
        "operationId": "AddANewCompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostCompany"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies/{companyId}": {
      "get": {
        "summary": "Get a company",
        "description": "Get a specific company linked to a manufacturer.",
        "operationId": "GetASpecificCompanyForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetCompany"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "put": {
        "summary": "Update a company",
        "description": "Update a specific company of a manufacturer.",
        "operationId": "UpdateACompanyOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutCompany"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies/{companyId}/archive": {
      "post": {
        "summary": "Archive a company",
        "description": "Archive a company together with all of its contacts.",
        "operationId": "ArchiveACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies/{companyId}/unarchive": {
      "post": {
        "summary": "Unarchive a company",
        "description": "Unarchive a company without unarchiving its contacts.",
        "operationId": "UnarchiveACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies/{companyId}/defaultAddresses": {
      "get": {
        "summary": "Search default addresses of a company",
        "description": "Search the default invoice and delivery addresses of a company.",
        "operationId": "GetDefaultAddressesOfACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetDefaultAddresses"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "post": {
        "summary": "Add a new default address",
        "description": "Add a new default address to a company.",
        "operationId": "AddDefaultAddressToACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostDefaultAddress"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/companies/{companyId}/defaultAddresses/{defaultAddressId}": {
      "get": {
        "summary": "Get a default address of a company",
        "description": "Get a specific default address of a company.",
        "operationId": "GetADefaultAddressOfACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          },
          {
            "$ref": "#/parameters/pathDefaultAddressId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetDefaultAddress"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "put": {
        "summary": "Update a default address of a company",
        "description": "Update a specific default address of a company.",
        "operationId": "UpdateASingleDefaultAddressOfACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          },
          {
            "$ref": "#/parameters/pathDefaultAddressId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutDefaultAddress"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "delete": {
        "summary": "Delete a default address of a company",
        "description": "Delete a specific default address of a company",
        "operationId": "DeleteASingleDefaultAddressOfACompany",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCompanyId"
          },
          {
            "$ref": "#/parameters/pathDefaultAddressId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/contacts": {
      "get": {
        "summary": "Search manufacturer contacts",
        "description": "Search contacts linked to a manufacturer or its companies.",
        "operationId": "SearchManufacturerContacts",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryCompanyId"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetContacts"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      },
      "post": {
        "summary": "Add manufacturer contact",
        "description": "Add a new contact to a company of a manufacturer or its companies.",
        "operationId": "AddManufacturerContact",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostContact"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/contacts/{contactId}": {
      "get": {
        "summary": "Get a manufacturer contact",
        "description": "Get a specific contact of a manufacturer or its companies.",
        "operationId": "GetAManufacturerContact",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetContact"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      },
      "put": {
        "summary": "Update a manufacturer contact",
        "description": "Update a specific contact of a manufacturer or its companies.",
        "operationId": "UpdateAManufacturerContact",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutContact"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/contacts/{contactId}/archive": {
      "post": {
        "summary": "Archive a contact",
        "description": "Archive a specific contact and remove its invites.",
        "operationId": "ArchiveAContact",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/contacts/{contactId}/unarchive": {
      "post": {
        "summary": "Unarchive a contact",
        "description": "Unarchive a specific contact.",
        "operationId": "UnarchiveAContact",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/distributors/{distributorId}/accounts": {
      "get": {
        "summary": "Search distributor accounts",
        "description": "Search accounts in the address book of a distributor.",
        "operationId": "SearchTheAccountsInTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetDistributorAccounts"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "post": {
        "summary": "Add a distributor account",
        "description": "Add an account to the address book of a distributor.",
        "operationId": "AddAnAccountIntoTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostDistributorAccount"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/distributors/{distributorId}/accounts/{accountId}": {
      "put": {
        "summary": "Update distributor account",
        "description": "Update a specific account in the address book of a distributor.",
        "operationId": "EditAnAccountFromTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/pathAccountId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutDistributorAccount"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "delete": {
        "summary": "Delete a distributor account",
        "description": "Delete a specific account from the address book of a distributor. An account can only be removed if it is not used in any projects and has no contacts.",
        "operationId": "RemovesAnAccountFromTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/pathAccountId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/distributors/{distributorId}/contacts": {
      "get": {
        "summary": "Search distributor contacts",
        "description": "Search contacts in the address book of a distributor.",
        "operationId": "SearchContactsFromTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "accountId",
            "x-ms-summary": "Account ID",
            "description": "Filter on the account to which the contacts are connected.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetDistributorContacts"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      },
      "post": {
        "summary": "Add a distributor contact",
        "description": "Add a new contact to the address book of a distributor.",
        "operationId": "AddAContactsToTheAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostDistributorContact"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/distributors/{distributorId}/contacts/{contactId}": {
      "put": {
        "summary": "Update a distributor contact",
        "description": "Update a specific contact in the address book of a distributor.",
        "operationId": "UpdateAnExistingContactInTheAddressBookOfTheDistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutDistributorContact"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      },
      "delete": {
        "summary": "Delete a distributor contact",
        "description": "Delete a specific contact from the address book of a distributor.",
        "operationId": "RemoveAContactFromAddressBookOfADistributor",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathDistributorId"
          },
          {
            "$ref": "#/parameters/pathContactId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/invites": {
      "get": {
        "summary": "Search invites",
        "description": "Search invites of a manufacturer.",
        "operationId": "GetInvitesForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "in": "query",
            "name": "integratedContactSystemId",
            "x-ms-summary": "Contact Integrated System ID",
            "description": "Filter on the integrated system ID of the contact to which the invite is sent. This must be used together with the integrated system name filter.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "contactId",
            "x-ms-summary": "Contact ID",
            "description": "Filter on the contact to which the invite is sent.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "x-ms-summary": "Contact Status",
            "description": "Filter on the status of the invites.",
            "type": "string",
            "enum": [
              "PENDING",
              "CANCELLED",
              "CLAIMED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetInvites"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          }
        },
        "tags": [
          "Invite"
        ]
      },
      "post": {
        "summary": "Add an invite",
        "description": "Add an invite for a contact to join a company.",
        "operationId": "CreateInviteForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostInvite"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Invite"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/invites/{inviteId}/sendInviteEmail": {
      "post": {
        "summary": "Send invitation email",
        "description": "Send an invitation email using the HiveCPQ email system.",
        "operationId": "SendInvitationEmailUsingHivecpqsEmailSystem",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "path",
            "name": "inviteId",
            "x-ms-summary": "Invite ID",
            "description": "ID of the invite you want to access.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostSendInviteMail"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Invite"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions": {
      "get": {
        "summary": "Search container versions",
        "description": "Search container versions of a manufacturer.",
        "operationId": "GetVersions",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "in": "query",
            "name": "status",
            "x-ms-summary": "Container Version Status",
            "description": "Filter on the status of the container versions.",
            "type": "string",
            "enum": [
              "TOP",
              "ACTIVE",
              "REMOVED",
              "LEGACY"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "x-ms-summary": "Container Version Type",
            "description": "Filter on the type of the container versions.",
            "type": "string",
            "enum": [
              "MAJOR",
              "MINOR",
              "HOTFIX"
            ]
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetVersions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Versioning"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components": {
      "get": {
        "summary": "Search components",
        "description": "Search components in master data.",
        "operationId": "FindTheComponentsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "priceCatalogId",
            "x-ms-summary": "Price Catalog ID",
            "description": "Filter on the price catalog used in the price(s) of the components.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "featureIds",
            "x-ms-summary": "Feature IDs",
            "description": "Filter on the features linked to the components.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "articleCode",
            "x-ms-summary": "Article Code",
            "description": "Filter on the article code of the components.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "eanCode",
            "x-ms-summary": "EAN Code",
            "description": "Filter on the EAN code of the components.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "gtinCode",
            "x-ms-summary": "GTIN Code",
            "description": "Filter on the GTIN code of the components.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponents"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "post": {
        "summary": "Add a component",
        "description": "Add a component to master data.",
        "operationId": "AddAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostComponent"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}": {
      "get": {
        "summary": "Get a component",
        "description": "Get a specific component in master data.",
        "operationId": "GetAComponentBasedOnTheId",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponent"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "put": {
        "summary": "Update a component",
        "description": "Update a specific component in master data",
        "operationId": "UpdateTheComponentOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutComponent"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "delete": {
        "summary": "Delete a component",
        "description": "Delete a component from master data",
        "operationId": "DeleteAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/bulkDelete": {
      "post": {
        "summary": "Delete components in bulk",
        "description": "Delete multiple components in master data.",
        "operationId": "BulkDeleteComponents",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostBulkDeleteComponents"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/setPrices": {
      "post": {
        "summary": "Upsert component prices in bulk",
        "description": "Create or update multiple component prices in master data.",
        "operationId": "PostBulkUpsertComponentPrices",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostBulkUpsertComponentPrices"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responsePostBulkUpsertComponentPrices"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/tooltip": {
      "get": {
        "summary": "Get a component tooltip",
        "description": "Get a specific component tooltip in master data.",
        "operationId": "GetAComponentTooltip",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponentTooltip"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "put": {
        "summary": "Update a component tooltip",
        "description": "Update a specific component tooltip in master data.",
        "operationId": "UpdateAComponentTooltip",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutComponentTooltip"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responsePutComponentTooltip"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "delete": {
        "summary": "Delete a component tooltip",
        "description": "Delete a component tooltip from master data.",
        "operationId": "DeleteAComponentTooltip",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/tooltip/image": {
      "get": {
        "summary": "Get a component tooltip image",
        "description": "Get a specific component tooltip image from master data.",
        "operationId": "GetAComponentTooltipImage",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/headerAcceptApplicationOctetStream"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "put": {
        "summary": "Update a component tooltip image",
        "description": "Update a specific component tooltip image in master data.",
        "operationId": "UpdateAComponentTooltipImage",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/headerContentTypeMultipartFormData"
          },
          {
            "$ref": "#/parameters/bodyMultiPartFormDataFile"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "delete": {
        "summary": "Delete a component tooltip image",
        "description": "Delete a component tooltip image from master data.",
        "operationId": "DeleteAComponentTooltipImage",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/prices": {
      "get": {
        "summary": "Search component prices",
        "description": "Search prices of a component in master data.",
        "operationId": "GetThePricesOfAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponentPrices"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "post": {
        "summary": "Add a component price",
        "description": "Add a new price to a component in master data.",
        "operationId": "AddANewPriceToThisComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostComponentPrice"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/prices/{componentPriceId}": {
      "delete": {
        "summary": "Delete a component price",
        "description": "Delete a price from a component in master data.",
        "operationId": "RemovesAPriceFromAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "in": "path",
            "name": "componentPriceId",
            "x-ms-summary": "Component Price ID",
            "description": "The component price you want to access.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/attachments": {
      "get": {
        "summary": "Search component attachments",
        "description": "Search attachments of a component in master data.",
        "operationId": "GetAttachmentsOfAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "in": "query",
            "name": "isImage",
            "x-ms-summary": "Is An Image",
            "description": "Filter on whether the file is an image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponentAttachments"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "post": {
        "summary": "Add a component attachment",
        "description": "Add a new attachment to a component in master data.",
        "operationId": "AddANewAttachmentToAComponent",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/headerContentTypeMultipartFormData"
          },
          {
            "$ref": "#/parameters/bodyMultiPartFormDataFile"
          },
          {
            "in": "formData",
            "name": "isImage",
            "x-ms-summary": "Is An image",
            "description": "Indicate whether the uploaded file is an image or an info file.",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/attachments/{attachmentId}": {
      "delete": {
        "summary": "Delete a component attachment",
        "description": "Delete an attachment from a component in master data.",
        "operationId": "DeleteAnAttachmentFromAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/pathAttachmentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/properties": {
      "get": {
        "summary": "Search component property values",
        "description": "Search property values of a component in master data.",
        "operationId": "GetComponentPropertyValues",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComponentProperties"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "post": {
        "summary": "Set component property value",
        "description": "Set a single property value on a component in master data.",
        "operationId": "SetOrUpdateThePropertyValueForAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostSetPropertyValue"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/properties/setValues": {
      "post": {
        "summary": "Set component property values",
        "description": "Set multiple property values on a component in master data. Existing values are overwritten or deleted.",
        "operationId": "SetOrUpdateMultiplePropertyValues",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostSetPropertyValues"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/setFeatures": {
      "post": {
        "summary": "Link features to a component",
        "description": "Links one or more features to a component in master data. Existing links will be overwritten or deleted.",
        "operationId": "LinkFeaturesToAComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostSetComponentFeatures"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/copyToVersion": {
      "post": {
        "summary": "Copy a component to another version",
        "description": "Copy a component to another version.",
        "operationId": "CopyComponentToAnotherVersion",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/bodyRequestCopyToVersion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultCopiedToVersion"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/components/{componentId}/features/{featureId}": {
      "put": {
        "summary": "Link a feature to a component",
        "description": "Links one feature to a component in master data.",
        "operationId": "LinkFeatureToComponent",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      },
      "delete": {
        "summary": "Unlink a feature from a component",
        "description": "Unlinks a feature from a specific component in master data.",
        "operationId": "UnlinkFeatureToComponent",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathComponentId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Component"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/properties": {
      "get": {
        "summary": "Search properties",
        "description": "Search properties in master data.",
        "operationId": "GetThePropertiesOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProperties"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Property"
        ]
      },
      "post": {
        "summary": "Add a new property",
        "description": "Add a new property to master data.",
        "operationId": "AddANewProperty",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProperty"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Property"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/properties/{propertyId}": {
      "put": {
        "summary": "Update a property",
        "description": "Update a specific property in master data.",
        "operationId": "UpdateAProperty",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathPropertyId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutProperty"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Property"
        ]
      },
      "delete": {
        "summary": "Delete a property",
        "description": "Delete a specific property from master data",
        "operationId": "RemoveAProperty",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathPropertyId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Property"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/properties/{propertyId}/copyToVersion": {
      "post": {
        "summary": "Copy a property to another version",
        "description": "Copy a property to another version.",
        "operationId": "CopyPropertyToAnotherVersion",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathPropertyId"
          },
          {
            "$ref": "#/parameters/bodyRequestCopyToVersion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultCopiedToVersion"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Property"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups": {
      "get": {
        "summary": "Search feature groups",
        "description": "Search feature groups in master data.",
        "operationId": "SearchFeatureGroupsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetFeatureGroups"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "post": {
        "summary": "Add new feature group",
        "description": "Add a new feature group to master data.",
        "operationId": "AddNewFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostFeatureGroup"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/reOrder": {
      "post": {
        "summary": "Reorder the feature groups",
        "description": "Reorder the feature groups to change how they are displayed in the product store. All existing groups must be part of the request.",
        "operationId": "ReorderTheFeatureGroups",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostReOrderFeatureGroups"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}": {
      "get": {
        "summary": "Get a feature group",
        "description": "Get a specific feature group in master data.",
        "operationId": "GetSingleFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetFeatureGroup"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "put": {
        "summary": "Update a feature group",
        "description": "Update a specific feature group in master data.",
        "operationId": "UpdateAFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutFeatureGroup"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "delete": {
        "summary": "Delete a feature group",
        "description": "Delete a specific feature group from master data.",
        "operationId": "DeleteAFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/copyToVersion": {
      "post": {
        "summary": "Copy a feature group to another version",
        "description": "Copy a feature group to another version. Underlying features are not copied.",
        "operationId": "CopyFeatureGroupToAnotherVersion",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/bodyRequestCopyToVersion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultCopiedToVersion"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/features": {
      "get": {
        "summary": "Search features",
        "description": "Search features in a specific feature group in master data.",
        "operationId": "SearchTheFeaturesOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetFeatures"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "post": {
        "summary": "Add a feature to a feature group",
        "description": "Add a new feature to a specific feature group in master data.",
        "operationId": "AddNewFeatureToTheFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostFeature"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/features/reOrder": {
      "post": {
        "summary": "Reorder features in a feature group",
        "description": "Reorder the features in a specific feature group to change how they are displayed in the product store. All existing features in the group must be part of the request.",
        "operationId": "ReorderTheFeaturesWithinAFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostReOrderFeatures"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/features/{featureId}": {
      "get": {
        "summary": "Get a feature from a feature group",
        "description": "Get a feature in a specific feature group in master data.",
        "operationId": "RetrieveSingleFeatureOfAFeatureGroup",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetFeature"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "put": {
        "summary": "Update a feature",
        "description": "Update a feature in a specific feature group in master data.",
        "operationId": "UpdateASingleFeature",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutFeature"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      },
      "delete": {
        "summary": "Delete a feature",
        "description": "Delete a feature from a specific feature group in master data",
        "operationId": "RemoveAFeature",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/features/{featureId}/changeFeatureGroup": {
      "post": {
        "summary": "Change the feature group of a feature",
        "description": "Change the feature group of a specific feature in master data.",
        "operationId": "ChangeTheFeatureGroupOfAFeature",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostChangeFeatureGroup"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/featureGroups/{featureGroupId}/features/{featureId}/copyToVersion": {
      "post": {
        "summary": "Copy a feature to another version",
        "description": "Copy a feature to another version.",
        "operationId": "CopyFeatureToAnotherVersion",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathFeatureGroupId"
          },
          {
            "$ref": "#/parameters/pathFeatureId"
          },
          {
            "$ref": "#/parameters/bodyRequestCopyToVersion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultCopiedToVersion"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Feature"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/units": {
      "get": {
        "summary": "Search units",
        "description": "Search units in master data.",
        "operationId": "GetTheUnitsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "code",
            "x-ms-summary": "Unit Code",
            "description": "Filter on the code of the units.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetUnits"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      },
      "post": {
        "summary": "Add a unit",
        "description": "Add a new unit to master data.",
        "operationId": "AddANewUnit",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostUnit"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/units/{unitId}": {
      "get": {
        "summary": "Get a unit",
        "description": "Get a specific unit from master data.",
        "operationId": "GetAUnitOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathUnitId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetUnit"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      },
      "put": {
        "summary": "Update a unit",
        "description": "Update a specific unit in master data.",
        "operationId": "UpdateTheUnit",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathUnitId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutUnit"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      },
      "delete": {
        "summary": "Delete a unit",
        "description": "Delete a specific unit from master data.",
        "operationId": "RemoveTheUnit",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathUnitId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/containers/{name}/versions/{version}/units/{unitId}/copyToVersion": {
      "post": {
        "summary": "Copy a unit to another version",
        "description": "Copy a unit to another version.",
        "operationId": "CopyUnitToAnotherVersion",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathName"
          },
          {
            "$ref": "#/parameters/pathVersion"
          },
          {
            "$ref": "#/parameters/pathUnitId"
          },
          {
            "$ref": "#/parameters/bodyRequestCopyToVersion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultCopiedToVersion"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Unit"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/customObjects": {
      "get": {
        "summary": "Search custom object types",
        "description": "Search custom object types of a manufacturer.",
        "operationId": "GetCustomObjectTypesOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetCustomObjectTypes"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/customObjects/{customObjectType}": {
      "get": {
        "summary": "Search custom objects",
        "description": "Search custom objects of a specific type.",
        "operationId": "GetCustomObjectsFromATypeOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCustomObjectType"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetCustomObjects"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      },
      "post": {
        "summary": "Add a custom object",
        "description": "Add a new custom object of a specific type. This type will be created if it does not exist.",
        "operationId": "CreateASingleCustomObject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCustomObjectType"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "keyValues": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customObjectKeyValuePair"
                  },
                  "description": "Key value pairs to store inside of the new custom object"
                }
              },
              "required": [
                "keyValues"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/customObjects/{customObjectType}/{customObjectKey}": {
      "get": {
        "summary": "Get a custom object",
        "description": "Get a custom object of a specific type.",
        "operationId": "GetASpecificCustomObjectFromAmManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCustomObjectType"
          },
          {
            "$ref": "#/parameters/pathCustomObjectKey"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetCustomObject"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      },
      "put": {
        "summary": "Update a custom object",
        "description": "Update a specific custom object of a specific type.",
        "operationId": "UpdateASingleCustomObject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCustomObjectType"
          },
          {
            "$ref": "#/parameters/pathCustomObjectKey"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutCustomObjectKeyValues"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      },
      "delete": {
        "summary": "Delete a custom object",
        "description": "Delete a custom object of a specific type.",
        "operationId": "DeleteASingleCustomObject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathCustomObjectType"
          },
          {
            "$ref": "#/parameters/pathCustomObjectKey"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/resetCustomObjectUpdateTimestamp": {
      "post": {
        "summary": "Reset custom objects cache",
        "description": "Configurators may use caching when handling custom objects. Calling this endpoint will reset those caches.",
        "operationId": "ResetCustomObjectsCache",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "CustomObject"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects": {
      "get": {
        "summary": "Search projects",
        "description": "Search projects of a manufacturer.",
        "operationId": "GetTheProjectsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryUpdatedBefore"
          },
          {
            "$ref": "#/parameters/queryUpdatedSince"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjects"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          }
        },
        "tags": [
          "Project"
        ]
      },
      "post": {
        "summary": "Add a project",
        "description": "Add a new project for a company.",
        "operationId": "CreateANewProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProject"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}": {
      "get": {
        "summary": "Get a project",
        "description": "Get a specific project of a manufacturer.",
        "operationId": "GetProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProject"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      },
      "put": {
        "summary": "Update a project",
        "description": "Update a specific project of a manufacturer.",
        "operationId": "UpdateAnExistingProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutProject"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      },
      "delete": {
        "summary": "Delete a project",
        "description": "Delete a specific project of a manufacturer.",
        "operationId": "DeleteAnExistingProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/addProducts": {
      "post": {
        "summary": "Add products to a project",
        "description": "Add one or more products to a project of a manufacturer.",
        "operationId": "AddProductsToAProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectAddProducts"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "description": "List of IDs of all created project segment items.",
              "items": {
                "type": "string",
                "description": "ID of a project segment item."
              }
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/copy": {
      "post": {
        "summary": "Copy a project",
        "description": "Copies all data of a project to a new project.",
        "operationId": "DuplicateAProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectCopy"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/recalculate": {
      "post": {
        "summary": "Recalculate a project",
        "description": "Start an asynchronous recalculation of the project.",
        "operationId": "RecalculateAProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/outputDocuments/generateOutputDocumentAsPdf": {
      "post": {
        "summary": "Generate a PDF document for a project",
        "description": "Generate a PDF document for a specific project. The template ID is optional only if the document type is QUOTE and a default template has been configured.",
        "operationId": "GenerateTheQuoteCalculationOrOrderSummaryPdfForAProject",
        "produces": [
          "application/json",
          "application/octet-stream",
          "application/pdf"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "$ref": "#/parameters/headerAcceptWildcard"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectGenerateOutputDocument"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/outputDocuments/generateOutputDocumentAsWord": {
      "post": {
        "summary": "Generate a word document for a project",
        "description": "Generate a Microsoft word document for a specific project. The template ID is optional only if the document type is QUOTE and a default template has been configured.",
        "operationId": "GenerateTheQuoteCalculationOrOrderSummaryWordForAProject",
        "produces": [
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "$ref": "#/parameters/headerAcceptWildcard"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectGenerateOutputDocument"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projects/{projectId}/addConfiguration": {
      "post": {
        "summary": "Add a configuration to a project",
        "description": "Add a new V2 configuration to a project.",
        "operationId": "AddANewConfigurationToTheProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectAddConfiguration"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/updateProjectPrices": {
      "post": {
        "summary": "Refresh the prices in running projects",
        "description": "Refresh prices of all projects which have not yet reached step 2 in the order process with master data.",
        "operationId": "RefreshThePricesInRunningProjectsWithThoseFromMasterData",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectsUpdatePrices"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Project"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments": {
      "get": {
        "summary": "Search project segments",
        "description": "Search project segments of a manufacturer.",
        "operationId": "GetProjectSegmentsForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "companyBId",
            "x-ms-summary": "Company ID",
            "description": "Filter on the distributor company the project segments are created for.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "step",
            "x-ms-summary": "Step",
            "description": "Filter on the step in the order flow of the project segments.",
            "type": "string",
            "enum": [
              "QUOTATION",
              "STEP1",
              "STEP2",
              "STEP3",
              "STEP4",
              "ARCHIVED"
            ]
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjectSegments"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}": {
      "get": {
        "summary": "Get a project segment",
        "description": "Get a specific project segment of a manufacturer.",
        "operationId": "GetProjectSegment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjectSegment"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      },
      "put": {
        "summary": "Update a project segment",
        "description": "Update a specific project segment of a manufacturer.",
        "operationId": "UpdateTheProjectSegment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutProjectSegment"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/archive": {
      "post": {
        "summary": "Archive a project segment",
        "description": "Archive a specific project segment of a manufacturer.",
        "operationId": "ArchiveAProjectSegment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/unarchive": {
      "post": {
        "summary": "Unarchive a project segment",
        "description": "Unarchive a specifc project segment of a manufacturer.",
        "operationId": "UnarchiveAProjectSegment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/moveToStep1": {
      "post": {
        "summary": "Move a project segment to step 1",
        "description": "Move a specific project segment to step 1. This starts the order process.",
        "operationId": "MoveAProjectSegmentToStep1",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentMoveToStep1"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/moveToStep2": {
      "post": {
        "summary": "Move a project segment to step 2",
        "description": "Move a specific project segment to step 2. This creates an order for the project segment.",
        "operationId": "MoveAProjectSegmentToStep2",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentMoveToStep2"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/moveToStep3": {
      "post": {
        "summary": "Move a project segment to step 3",
        "description": "Move a specific project segment to step 3.",
        "operationId": "MoveAProjectSegmentToStep3",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentMoveToStep3"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/moveToStep4": {
      "post": {
        "summary": "Move a project segment to step 4",
        "description": "Move a specific project segment to step 4.",
        "operationId": "MoveAProjectSegmentToStep4",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentMoveToStep4"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/cancelToStep2": {
      "post": {
        "summary": "Cancel order process of a project segment",
        "description": "Cancel the order process and move a project segment back to step 2.",
        "operationId": "CancelTheOrderProcessAndMoveASegmentBackToStep2",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/settings": {
      "post": {
        "summary": "Change the settings of a project segment",
        "description": "Change the settings of a project segment. Settings are only available if a segment configurator is configured.",
        "operationId": "ChangeTheSettingsOfAProjectSegment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentSettings"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/addConfiguration": {
      "post": {
        "summary": "Add a configuration to a segment",
        "description": "Add a V1 configuration to a specific project segment.",
        "operationId": "AddAConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentAddConfiguration"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/attachments": {
      "get": {
        "summary": "Search attachments of a project segment",
        "description": "Search attachments of a specific project segment.",
        "operationId": "SearchProjectSegmentsAttachments",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "in": "query",
            "name": "isDistributorFile",
            "x-ms-summary": "Is A Distributor File",
            "description": "Filter on whether the file is owned by the manufacturer or distributor.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjectSegmentAttachments"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      },
      "post": {
        "summary": "Add an attachment to a project segment",
        "description": "Add an attachment to a specific project segment.",
        "operationId": "AddProjectSegmentsAttachment",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "$ref": "#/parameters/headerContentTypeMultipartFormData"
          },
          {
            "$ref": "#/parameters/bodyMultiPartFormDataFile"
          },
          {
            "in": "formData",
            "name": "isDistributorFile",
            "x-ms-summary": "Is A Distributor file",
            "description": "Indicate whether the uploaded file is owned by the distributor or manufacturer.",
            "type": "boolean",
            "required": false,
            "default": false
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegments/{projectSegmentId}/attachments/{attachmentId}": {
      "delete": {
        "summary": "Delete an attachment of a project segment",
        "description": "Delete an attachment of a specific project segment.",
        "operationId": "DeleteProjectSegmentsAttachment",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentId"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "x-ms-summary": "Project Segment attachment ID",
            "description": "ID of the project segment attachment you want to access.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegment"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegmentItems": {
      "get": {
        "summary": "Search project segment items",
        "description": "Search project segment items of a specific manufacturer.",
        "operationId": "GetProjectSegmentItemsFromAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "$ref": "#/parameters/queryUpdatedSince"
          },
          {
            "in": "query",
            "name": "projectSegmentId",
            "x-ms-summary": "Project Segment ID",
            "description": "Filter on the project segment of the items.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjectSegmentItems"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegmentItem"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegmentItems/{projectSegmentItemId}": {
      "get": {
        "summary": "Get project segment item",
        "description": "Get a specific project segment item of a manufacturer.",
        "operationId": "GetProjectSegmentItem",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetProjectSegmentItem"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegmentItem"
        ]
      },
      "put": {
        "summary": "Update a project segment item",
        "description": "Update a specific project segment item of a manufacturer.",
        "operationId": "PutProjectSegmentItem",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentItemId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutProjectSegmentItem"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegmentItem"
        ]
      },
      "delete": {
        "summary": "Delete a project segment item",
        "description": "Delete a specific project segment item from a project.",
        "operationId": "DeleteProjectSegmentItem",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentItemId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegmentItem"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/projectSegmentItems/{projectSegmentItemId}/copyToProject": {
      "post": {
        "summary": "Copy project segment item to another project",
        "description": "Copies a project segment item to another project. If the item has a configuration attached it will automatically be upgraded to the newest version.",
        "operationId": "PostProjectSegmentItemsCopyToProject",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathProjectSegmentItemId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostProjectSegmentItemCopyToProject"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "ProjectSegmentItem"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/configurations": {
      "post": {
        "summary": "Add a standalone configuration",
        "description": "Create a standalone configuration by launching a configuration check for a V2 configurator",
        "operationId": "CreateAConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostConfiguration"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Configuration"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/configurations/{configurationId}": {
      "get": {
        "summary": "Get a configuration",
        "description": "Get a specific configuration of a manufacturer.",
        "operationId": "GetASpecificConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathConfigurationId"
          },
          {
            "in": "query",
            "name": "uniqueLabel",
            "x-ms-summary": "Unique Label",
            "description": "Filter on the unique label of the configuration nodes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "propertyCode",
            "x-ms-summary": "Property Code",
            "description": "Property code(s) for which to return a component property value for each node.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includeOptionalNodes",
            "x-ms-summary": "Include Optional Nodes",
            "description": "Filter or include optional configuration nodes.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "includeComponentData",
            "x-ms-summary": "Include Component Data",
            "description": "Includes additional component data for each node.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "outputMode",
            "x-ms-summary": "Output Mode",
            "description": "Control the output structure of the configuration.",
            "type": "string",
            "enum": [
              "DEFAULT",
              "BOM_ONLY",
              "FULL_CONFIGURATION"
            ],
            "default": "DEFAULT"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetConfiguration"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Configuration"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/configurations/{configurationId}/renderImage": {
      "post": {
        "summary": "Render a configuration screenshot",
        "description": "Render a screenshot of a configuration.",
        "operationId": "RenderAConfigurationScreenshot",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathConfigurationId"
          },
          {
            "$ref": "#/parameters/headerAcceptWildcard"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Configuration"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/configurations/{configurationId}/checkConfiguration": {
      "post": {
        "summary": "Update configuration",
        "description": "Update the values of the nodes in a configuration.",
        "operationId": "AdjustConfigurationValues",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathConfigurationId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostCheckConfiguration"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Configuration"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/configurations/{configurationId}/nodes/{uniqueLabel}/file": {
      "get": {
        "summary": "Get file from a configuration",
        "description": "Get the file attached to a file node in the configuration.",
        "operationId": "GetAFileFromAConfiguration",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathConfigurationId"
          },
          {
            "in": "path",
            "name": "uniqueLabel",
            "x-ms-summary": "File Node Unique Label",
            "description": "The unique label of the file node.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/headerAcceptWildcard"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Configuration"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/integratedSystemLinks": {
      "get": {
        "summary": "Search integrated system links",
        "description": "Search integrated system links of a manufacturer. An Integrated System link stores a link between a Hive entity and an external system entity.",
        "operationId": "GetTheIntegratedSystemLinkOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsInRequired"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemNameRequired"
          },
          {
            "in": "query",
            "name": "resourceType",
            "x-ms-summary": "Resource Type",
            "description": "Filter on the resource type of the integrated system links.",
            "type": "string",
            "required": true,
            "enum": [
              "PROJECT",
              "PROJECT_SEGMENT",
              "PROJECT_SEGMENT_ITEM",
              "CONFIGURATION",
              "CONTACT",
              "COMPANY",
              "COMPANY_DEFAULT_ADDRESS",
              "COMPONENT",
              "CATEGORY",
              "PROPERTY",
              "DISTRIBUTOR_CONTACT",
              "DISTRIBUTOR_ACCOUNT",
              "FEATURE",
              "FEATURE_GROUP",
              "PRICE_CATALOG",
              "UNIT",
              "COMPLAINT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetIntegratedSystemLinks"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Common"
        ]
      },
      "post": {
        "summary": "Add integrated system link",
        "description": "Add a new integrated system link for a resource.",
        "operationId": "AddIntegratedSystemLink",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostIntegratedSystemLink"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "schema": {
              "type": "object",
              "properties": {
                "integratedSystemName": {
                  "type": "string",
                  "description": "integratedSystemName"
                },
                "integratedSystemId": {
                  "type": "string",
                  "description": "integratedSystemId"
                },
                "resourceType": {
                  "$ref": "#/definitions/enumSystemLinkResourceType"
                },
                "hiveId": {
                  "type": "string",
                  "description": "hiveId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Common"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/integratedSystemLinks/{integratedSystemLinkId}": {
      "put": {
        "summary": "Update a integrated system link",
        "description": "Update a specific integrated system link of a manufacturer.",
        "operationId": "UpdateTheIntegratedSystemLink",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathIntegratedSystemLinkId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutIntegratedSystemLink"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "409": {
            "$ref": "#/responses/defaultConflict"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Common"
        ]
      },
      "delete": {
        "summary": "Delete an integrated system link",
        "description": "Delete a specific integrated system link.",
        "operationId": "RemovesTheIntegratedSystemLink",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathIntegratedSystemLinkId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Common"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks": {
      "get": {
        "summary": "Search webhooks",
        "description": "Search webhooks configured for a manufacturer.",
        "operationId": "SearchTheWebhooksConfiguredForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhooks"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "post": {
        "summary": "Add a webhook",
        "description": "Add a new webhook for a manufacturer.",
        "operationId": "AddANewWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostWebhook"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}": {
      "get": {
        "summary": "Get a webhook",
        "description": "Get a specific webhook of a manufacturer.",
        "operationId": "GetSingleWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhook"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "put": {
        "summary": "Update a webhook",
        "description": "Update a webhook of a manufacturer.",
        "operationId": "PutAWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutWebhook"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "delete": {
        "summary": "Delete a webhook",
        "description": "Delete a specific webhook of a manufacturer.",
        "operationId": "RemoveWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}/headers": {
      "get": {
        "summary": "Search webhook headers",
        "description": "Search headers of a specific webhook.",
        "operationId": "GetTheHeadersOfASingleWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhookHeaders"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "post": {
        "summary": "Add webhook header",
        "description": "Add a new header to a specific webhook.",
        "operationId": "AddWebhookHeader",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostWebhookHeader"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}/headers/{headerId}": {
      "delete": {
        "summary": "Delete the header of a webhook",
        "description": "Delete the header of a specific webhook.",
        "operationId": "RemoveTheHeaderOfAWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "$ref": "#/parameters/pathWebhookHeaderId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}/eventSubscriptions": {
      "get": {
        "summary": "Search event subscriptions",
        "description": "Search event subscriptions to which you are subscribed.",
        "operationId": "GetEventSubscriptions",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhookEventSubscriptions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "post": {
        "summary": "Subscribe to events",
        "description": "Subscribe to events of a manufacturer. Existing subscriptions will be overwritten or deleted.",
        "operationId": "SetWebhookEventSubscriptions",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostWebhookSubscriptions"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}/triggers": {
      "get": {
        "summary": "Search webhook triggers",
        "description": "Search triggers of a specific webhook.",
        "operationId": "GetTheTriggersForAWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhookTriggers"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "post": {
        "summary": "Add a webhook trigger",
        "description": "Add a new trigger to a specific webhook.",
        "operationId": "AddWebhookTrigger",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostWebhookTrigger"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/webhooks/{webhookId}/triggers/{webhookTriggerId}": {
      "get": {
        "summary": "Get a webhook trigger",
        "description": "Get a specific trigger of a webhook.",
        "operationId": "GetASpecificWebhookTrigger",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "$ref": "#/parameters/pathWebhookTriggerId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetWebhookTrigger"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "put": {
        "summary": "Update a webhook trigger",
        "description": "Update a specific trigger of a webhook.",
        "operationId": "UpdateAWebhookTrigger",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "$ref": "#/parameters/pathWebhookTriggerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutWebhookTrigger"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      },
      "delete": {
        "summary": "Delete a webhook trigger",
        "description": "Delete a specific trigger of a webhook.",
        "operationId": "RemovesAWebhookTrigger",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathWebhookId"
          },
          {
            "$ref": "#/parameters/pathWebhookTriggerId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/priceCatalogs": {
      "get": {
        "summary": "Search price catalogs",
        "description": "Search price catalogs of a manufacturer.",
        "operationId": "GetThePriceCatalogsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "name",
            "x-ms-summary": "Price Catalog Name",
            "description": "Filter on the name of the price catalogs.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetPriceCatalogs"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "PriceCatalog"
        ]
      },
      "post": {
        "summary": "Add a price catalog",
        "description": "Add a price catalog for a manufacturer.",
        "operationId": "AddAPriceCatalogForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostPriceCatalog"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "PriceCatalog"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/priceCatalogs/{priceCatalogId}": {
      "get": {
        "summary": "Get a price catalog",
        "description": "Get a specific price catalog of a manufacturer.",
        "operationId": "GetASpecificPriceCatalogOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathPriceCatalogId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetPriceCatalog"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "PriceCatalog"
        ]
      },
      "put": {
        "summary": "Update a price catalog",
        "description": "Update a specific price catalog of a manufacturer.",
        "operationId": "UpdateASpecificPriceCatalogOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathPriceCatalogId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutPriceCatalog"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "PriceCatalog"
        ]
      },
      "delete": {
        "summary": "Delete a price catalog",
        "description": "Delete a specific price catalog.",
        "operationId": "RemovesThePriceCatalog",
        "parameters": [
          {
            "$ref": "#/parameters/headerContentTypeApplicationJson"
          },
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathPriceCatalogId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "PriceCatalog"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints": {
      "get": {
        "summary": "Search complaints",
        "description": "Search complaints of a manufacturer",
        "operationId": "FindTheComplaintsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryIdsIn"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemName"
          },
          {
            "$ref": "#/parameters/queryIntegratedSystemIdsIn"
          },
          {
            "in": "query",
            "name": "status",
            "x-ms-summary": "Complaint Status",
            "description": "Filter on the status of the complaints.",
            "type": "string",
            "enum": [
              "NEW",
              "OPEN",
              "CLOSED"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "x-ms-summary": "Complaint Type",
            "description": "Filter on the type of the complaints.",
            "type": "string",
            "enum": [
              "REQUEST_WARRANTY",
              "DEIVERY_FAILURE",
              "TECHNICAL_FAULT"
            ]
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComplaints"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "post": {
        "summary": "Add a complaint",
        "description": "Add a new complaint for a manufacturer.",
        "operationId": "AddANewComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostComplaint"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints/{complaintId}": {
      "get": {
        "summary": "Get a complaint",
        "description": "Get a specific complaint of a manufacturer.",
        "operationId": "GetASpecificComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComplaint"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "put": {
        "summary": "Update a complaint",
        "description": "Update a specific complaint of a manufacturer.",
        "operationId": "UpdateTheComplaintOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPutComplaint"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "delete": {
        "summary": "Delete a complaint",
        "description": "Delete a specific complaint of a manufacturer.",
        "operationId": "RemoveAComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints/{complaintId}/comments": {
      "get": {
        "summary": "Search complaint comments",
        "description": "Search comments of a specific complaint.",
        "operationId": "GetTheCommentsOfAComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComplaintComments"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "post": {
        "summary": "Add a complaint comment",
        "description": "Add a new comment to a specific complaint.",
        "operationId": "AddANewCommentToTheComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostComplaintComment"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints/{complaintId}/replaceComments": {
      "post": {
        "summary": "Replace complaint comments",
        "description": "Replace all comments of a specific complaint.",
        "operationId": "ReplacesAllCommentsInAComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/requestPostComplaintReplaceComments"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints/{complaintId}/attachments": {
      "get": {
        "summary": "Search complaint attachments",
        "description": "Search attachments of a specific complaint.",
        "operationId": "GetTheAttachmentsOfAComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetComplaintAttachments"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "post": {
        "summary": "Add a complaint attachment",
        "description": "Add a new attachment to a specific complaint.",
        "operationId": "AddAnAttachmentOfAComplaint",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "$ref": "#/parameters/headerContentTypeMultipartFormData"
          },
          {
            "$ref": "#/parameters/bodyMultiPartFormDataFile"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/defaultCreated"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/complaints/{complaintId}/attachments/{attachmentId}": {
      "get": {
        "summary": "Get a complaint attachment",
        "description": "Get an attachment of a specific complaint.",
        "operationId": "GetTheAttachmentOfAComplaint",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "$ref": "#/parameters/pathAttachmentId"
          },
          {
            "$ref": "#/parameters/headerAcceptApplicationOctetStream"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/defaultFile"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      },
      "delete": {
        "summary": "Removes the attachment from a complaint",
        "description": "Removes the attachment from a complaint",
        "operationId": "RemovesTheAttachmentFromAComplaint",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/pathComplaintId"
          },
          {
            "$ref": "#/parameters/pathAttachmentId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/defaultNoContent"
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Complaint"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/userAccounts/{userAccountId}": {
      "get": {
        "summary": "Get a user account",
        "description": "Get a specific user account connected to the given manufacturer.",
        "operationId": "GetUseraccountDetails",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "path",
            "name": "userAccountId",
            "x-ms-summary": "User Account ID",
            "description": "ID of the user account you want to access.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetUserAccount"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "UserAccount"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/outputDocumentTemplates": {
      "get": {
        "summary": "Search output document templates",
        "description": "Search output document templates of a manufacturer.",
        "operationId": "GetTheOutputDocumentTemplatesForAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetOutputDocumentTemplates"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "OutputDocument"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/roles": {
      "get": {
        "summary": "Search roles",
        "description": "Search roles the manufacturer has defined for its own contacts and those of its distributors.",
        "operationId": "GetTheRolesOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "query",
            "name": "defaultRoleForManufacturerCompany",
            "x-ms-summary": "Only Default Manufacturer Roles",
            "description": "Filter the roles to those used as default for users of your manufacturer company.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "defaultRoleForDistributorCompanies",
            "x-ms-summary": "Only Default Distributor Roles",
            "description": "Filter the roles to those used as default for users of your distributor companies.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "name",
            "x-ms-summary": "Role Name",
            "description": "Filter on the name of the roles.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryCompanyId"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetRoles"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Security"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/permissions": {
      "get": {
        "summary": "Search permissions",
        "description": "Search permissions of a manufacturer.",
        "operationId": "SearchThePermissionsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "query",
            "name": "code",
            "x-ms-summary": "Permission Code",
            "description": "Filter on the code of the permissions.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "roleId",
            "x-ms-summary": "Role ID",
            "description": "Filter on the role to which the permissions are connected.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetPermissions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Security"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/events": {
      "get": {
        "summary": "Search events",
        "description": "Search platform events of a manufacturer.",
        "operationId": "SearchTheEventsOfAManufacturerUsingAPollApiCall",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "query",
            "name": "eventType",
            "x-ms-summary": "Event Type",
            "description": "Filter on the type of the events.",
            "type": "string",
            "enum": [
              "LOGIN",
              "INVITE_SENT",
              "INVITE_CLAIMED",
              "PROJECT_CREATED",
              "PROJECT_SEGMENT_ITEM_CREATED",
              "PROJECT_SEGMENT_ITEM_COPIED",
              "PROJECT_SEGMENT_MOVEDTOSTEP3",
              "PROJECT_SEGMENT_MOVEDTOSTEP4",
              "PROJECT_SEGMENT_ARCHIVED",
              "PROJECT_SEGMENT_UNARCHIVED",
              "ITEM_CONFIG_UPDATED_IN_STEP_3_OR_4",
              "PROJECT_SEGMENT_ITEM_UPDATED",
              "PROJECT_SEGMENT_ITEM_DELETED",
              "PROJECT_SEGMENT_RECALCULATION_REQUESTED",
              "PROJECT_SEGMENT_RECALCULATE_FINISHED",
              "PROJECT_SEGMENT_CREATED",
              "PROJECT_ADDRESSES_UPDATED",
              "PROJECT_DETAILS_UPDATED",
              "PROJECT_SEGMENT_MOVED_TO_QUOTATION",
              "PROJECT_SEGMENT_UPDATED",
              "PROJECT_SEGMENT_FOLLOW_TAB_UPDATED",
              "PROJECT_SEGMENT_ITEM_UPGRADED",
              "PROJECT_SEGMENT_MOVEDTOSTEP1",
              "PROJECT_SEGMENT_MOVEDTOSTEP2",
              "PROJECT_COPIED"
            ]
          },
          {
            "in": "query",
            "name": "eventGroup",
            "x-ms-summary": "Event Type Group",
            "description": "Filter on the group of the event types.",
            "type": "string",
            "enum": [
              "USER_ACCOUNT",
              "INVITE",
              "PROJECT",
              "PROJECT_SEGMENT",
              "PROJECT_SEGMENT_ITEM"
            ]
          },
          {
            "in": "query",
            "name": "dateOccurredAfter",
            "x-ms-summary": "Events That Happened After",
            "description": "Filter events which happened after the specified date and time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "targetIntegrationName",
            "x-ms-summary": "Event Type",
            "description": "Filter events related to the external system integrating with Hive.",
            "type": "string",
            "maxLength": 100
          },
          {
            "$ref": "#/parameters/queryPageIn"
          },
          {
            "$ref": "#/parameters/queryPageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetEvents"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Webhook"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/pluginTokens/{pluginTokenId}": {
      "get": {
        "summary": "Get plugin token information",
        "description": "Get information about the user who is currently using a plugin from within HiveCPQ.",
        "operationId": "GetAPluginToken",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "in": "path",
            "name": "pluginTokenId",
            "x-ms-summary": "Plugin Token ID",
            "description": "The plugin token generated by a Hive Plugin from which you want to retrieve user data.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetPluginToken"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "Plugin"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/deliveryConditions": {
      "get": {
        "summary": "Search delivery conditions",
        "description": "Search delivery conditions of a manufacturer.",
        "operationId": "GetTheDeliveryConditionsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetSalesConditions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "SalesConditions"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/paymentConditions": {
      "get": {
        "summary": "Search payment conditions",
        "description": "Search payment conditions of a manufacturer.",
        "operationId": "GetThePaymentConditionsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetSalesConditions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "SalesConditions"
        ]
      }
    },
    "/manufacturers/{manufacturerId}/taxConditions": {
      "get": {
        "summary": "Search tax conditions",
        "description": "Search tax conditions of a manufacturer.",
        "operationId": "GetTheTaxConditionsOfAManufacturer",
        "parameters": [
          {
            "$ref": "#/parameters/pathManufacturerId"
          },
          {
            "$ref": "#/parameters/queryLanguage"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/responseGetSalesConditions"
            }
          },
          "400": {
            "$ref": "#/responses/defaultBadRequest"
          },
          "401": {
            "$ref": "#/responses/defaultNotAuthorized"
          },
          "403": {
            "$ref": "#/responses/defaultForbidden"
          },
          "404": {
            "$ref": "#/responses/defaultNotFound"
          },
          "500": {
            "$ref": "#/responses/defaultServerError"
          }
        },
        "tags": [
          "SalesConditions"
        ]
      }
    }
  },
  "definitions": {
    "createdAt": {
      "type": "string",
      "description": "Timestamp of object creation."
    },
    "updatedAt": {
      "type": "string",
      "description": "Timestamp of the latest update."
    },
    "linkId": {
      "type": "string",
      "description": "ID of the linked resource."
    },
    "linkName": {
      "type": "string",
      "description": "Translated name of the linked resource."
    },
    "linkHref": {
      "type": "string",
      "description": "A URL to the resource."
    },
    "externalLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "integratedSystemName": {
          "type": "string",
          "description": "Name of the external system."
        },
        "integratedSystemId": {
          "type": "string",
          "description": "ID of the resource as represented in the external system."
        },
        "createdAt": {
          "$ref": "#/definitions/createdAt"
        },
        "updatedAt": {
          "$ref": "#/definitions/updatedAt"
        }
      },
      "description": "An external link allowing integrators to link a resource in an external system to a resource in HiveCPQ."
    },
    "externalLinks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/externalLink"
      },
      "description": "All integrated system links attached to this resource."
    },
    "roleLinks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/linkId"
          },
          "name": {
            "$ref": "#/definitions/linkName"
          },
          "href": {
            "$ref": "#/definitions/linkHref"
          }
        }
      },
      "description": "All roles linked to this resource."
    },
    "unitLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "code": {
          "type": "string",
          "description": "Unique code of the unit."
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a unit."
    },
    "priceCatalogLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        },
        "name": {
          "type": "string",
          "description": "The unique name of the catalog."
        }
      },
      "description": "A link to a price catalog."
    },
    "categoryLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "name": {
          "$ref": "#/definitions/linkName"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a category."
    },
    "componentLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "code": {
          "type": "string",
          "description": "The article code of the component."
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a component."
    },
    "featureLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "name": {
          "$ref": "#/definitions/linkName"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      }
    },
    "contactLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        },
        "fullName": {
          "type": "string",
          "description": "Name of the contact."
        }
      },
      "description": "A link to a contact."
    },
    "userAccountLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        },
        "fullName": {
          "type": "string",
          "description": "Name of the contact."
        }
      },
      "description": "A link to a user account."
    },
    "companyLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "name": {
          "$ref": "#/definitions/linkName"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a company."
    },
    "projectLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "name": {
          "$ref": "#/definitions/linkName"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a project."
    },
    "componentExtensions": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "description": "A collection of feature codes.",
          "items": {
            "type": "string",
            "description": "A unique feature code."
          }
        },
        "propertyValues": {
          "type": "array",
          "description": "The collection of property values which need to be set.",
          "items": {
            "$ref": "#/definitions/requestPostSetPropertyValue"
          }
        }
      },
      "description": "Manage relations between a component and other Hive resources. Not including the extensions or underlying properties will not cause existing relations to be removed, this needs to be specified explicitly with an empty list."
    },
    "projectSegmentLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        },
        "orderStatus": {
          "type": "string",
          "description": "The step in the order flow.",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ]
        }
      },
      "description": "A link to a project segment."
    },
    "projectSegmentLinks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/projectSegmentLink"
      },
      "description": "Links to multiple project segments."
    },
    "projectSegmentItemLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "name": {
          "type": "string",
          "description": "Name of the project segment item."
        },
        "articleCode": {
          "type": "string",
          "description": "Code of the product store article."
        },
        "ConfiguratorCode": {
          "type": "string",
          "description": "Code of the configurable item configurator."
        },
        "type": {
          "$ref": "#/definitions/enumProjectSegmentItemType"
        }
      }
    },
    "shippingScheduleLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "type": {
          "type": "string",
          "enum": [
            "UPON_REQUEST",
            "SHIPPING_WEEK"
          ]
        },
        "week": {
          "type": "number"
        },
        "year": {
          "type": "number"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a shipping schedule."
    },
    "configuratorLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "name": {
          "$ref": "#/definitions/linkName"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a configurator."
    },
    "configurationLink": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/linkId"
        },
        "href": {
          "$ref": "#/definitions/linkHref"
        }
      },
      "description": "A link to a configuration."
    },
    "configurationV2Input": {
      "type": "object",
      "properties": {
        "uniqueLabel": {
          "type": "string",
          "description": "The unique identifier of the node."
        },
        "value": {
          "type": "string",
          "description": "The textual representation of the node value."
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity of items represented by this node used to calculate the total node price."
        },
        "optional": {
          "type": "boolean",
          "description": "Mark the node as optional.",
          "default": null
        }
      },
      "description": "The standard format of inputs for V2 configurators."
    },
    "address": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "Address line 1."
        },
        "addressLine2": {
          "type": "string",
          "description": "Address line 2."
        },
        "city": {
          "type": "string",
          "description": "The city."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code."
        },
        "countryIso": {
          "type": "string",
          "minimum": 2,
          "maximum": 2,
          "description": "The country code in ISO 3166-2 format."
        },
        "stateIso": {
          "type": "string",
          "description": "The area code in ISO 3166-2 format."
        }
      },
      "description": "The standard address format."
    },
    "requestAddressWithRequiredFieldsForDefaultAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "Address line 1."
        },
        "addressLine2": {
          "type": "string",
          "description": "Address line 2."
        },
        "city": {
          "type": "string",
          "description": "The city."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code."
        },
        "countryIso": {
          "type": "string",
          "minimum": 2,
          "maximum": 2,
          "description": "The country code in ISO 3166-2 format."
        },
        "stateIso": {
          "type": "string",
          "description": "The area code in ISO 3166-2 format."
        }
      },
      "required": [
        "addressLine1",
        "city",
        "postalCode",
        "countryIso"
      ],
      "description": "The standard address format."
    },
    "companyContact": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Contact e-mail address."
        },
        "companyName": {
          "type": "string",
          "description": "Name of the company."
        },
        "contactPhone": {
          "type": "string",
          "description": "Contact phone number."
        },
        "contactName": {
          "type": "string",
          "description": "Name of the contact person."
        },
        "companyVatNumber": {
          "type": "string",
          "description": "VAT number of the company."
        },
        "address": {
          "$ref": "#/definitions/address"
        }
      }
    },
    "defaultObjectCreatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the created object."
        }
      }
    },
    "defaultObjectCopiedToVersionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the copied object in the target version."
        }
      }
    },
    "customObjectKeyValuePair": {
      "type": "object",
      "description": "This represents a key value pair used to store or pass data with custom objects.",
      "properties": {
        "key": {
          "type": "string",
          "description": "A unique key which will be used to identify a value inside of a single custom object."
        },
        "value": {
          "description": "A textual representation of the value to be saved for the key."
        },
        "dataType": {
          "$ref": "#/definitions/enumCustomObjectValueDataType"
        }
      },
      "required": [
        "key"
      ]
    },
    "enumBulkResponseStatus": {
      "type": "string",
      "description": "Status of the bulk item.",
      "enum": [
        "CREATED",
        "UPDATED",
        "FAILED"
      ]
    },
    "enumCompanyType": {
      "type": "string",
      "description": "Type of a company.",
      "enum": [
        "MANUFACTURER",
        "DISTRIBUTOR",
        "SUB_DISTRIBUTOR",
        "CUSTOMER"
      ]
    },
    "enumConfigurationNodeStatus": {
      "type": "string",
      "description": "Status of a node.",
      "enum": [
        "VALID",
        "INVALID"
      ]
    },
    "enumConfigurationNodeDatatype": {
      "type": "string",
      "description": "Data type of the node value.",
      "enum": [
        "STRING",
        "BOOLEAN",
        "INTEGER",
        "DECIMAL",
        "JSON"
      ]
    },
    "enumProjectSegmentOrderStatus": {
      "type": "string",
      "enum": [
        "QUOTATION",
        "STEP1",
        "STEP2",
        "STEP3",
        "STEP4",
        "ORDERED_BY_SUB_DISTRIBUTOR"
      ],
      "description": "Status of the order in the order flow."
    },
    "enumProjectSegmentStatus": {
      "type": "string",
      "enum": [
        "RUNNING",
        "SOLD",
        "LOST",
        "CANCELLED"
      ],
      "description": "Status of the segment. It will default to RUNNING if the project is still in step 0 of the order process."
    },
    "enumProjectSegmentItemType": {
      "type": "string",
      "description": "Type of the project segment item.",
      "enum": [
        "CONFIGURATOR",
        "PRODUCT"
      ]
    },
    "enumComponentPropertyType": {
      "type": "string",
      "description": "Type of the property",
      "enum": [
        "DECIMAL",
        "NUMBER",
        "BOOLEAN",
        "STRING",
        "ARRAY"
      ]
    },
    "enumComponentPropertyArrayType": {
      "type": "string",
      "description": "Type of the array property.",
      "enum": [
        "DECIMAL",
        "NUMBER",
        "BOOLEAN",
        "STRING"
      ]
    },
    "enumConfigurationStatus": {
      "type": "string",
      "description": "Status of the configuration.",
      "enum": [
        "VALID",
        "RUNNING",
        "REMOVED",
        "ERROR",
        "UPGRADE",
        "ACCEPT_UPGRADE"
      ]
    },
    "enumCustomObjectValueDataType": {
      "type": "string",
      "description": "The data types which can be used for custom object values.",
      "enum": [
        "KEY",
        "STRING",
        "DATE",
        "DATETIME",
        "BOOLEAN",
        "NUMBER"
      ]
    },
    "enumOutputDocumentTemplateType": {
      "type": "string",
      "description": "Type of the output document template.",
      "enum": [
        "QUOTE",
        "ORDER",
        "CALCULATION"
      ]
    },
    "enumSystemLinkResourceType": {
      "type": "string",
      "description": "The types of resources for which integrated system links can be created.",
      "enum": [
        "PROJECT",
        "PROJECT_SEGMENT",
        "PROJECT_SEGMENT_ITEM",
        "CONTACT",
        "COMPANY",
        "COMPANY_DEFAULT_ADDRESS",
        "CONFIGURATION",
        "COMPONENT",
        "CATEGORY",
        "PROPERTY",
        "DISTRIBUTOR_CONTACT",
        "DISTRIBUTOR_ACCOUNT",
        "FEATURE",
        "FEATURE_GROUP",
        "PRICE_CATALOG",
        "UNIT",
        "COMPLAINT"
      ]
    },
    "enumWebhookEventSubscription": {
      "type": "string",
      "description": "The events to which a webhook can subscribe.",
      "enum": [
        "PROJECT_CREATED",
        "PROJECT_COPIED",
        "PROJECT_DETAILS_UPDATED",
        "PROJECT_ADDRESSES_UPDATED",
        "PROJECT_SEGMENT_CREATED",
        "PROJECT_SEGMENT_UPDATED",
        "PROJECT_SEGMENT_FOLLOW_TAB_UPDATED",
        "PROJECT_SEGMENT_MOVED_TO_QUOTATION",
        "PROJECT_SEGMENT_MOVEDTOSTEP1",
        "PROJECT_SEGMENT_MOVEDTOSTEP2",
        "PROJECT_SEGMENT_MOVEDTOSTEP3",
        "PROJECT_SEGMENT_MOVEDTOSTEP4",
        "PROJECT_SEGMENT_ARCHIVED",
        "PROJECT_SEGMENT_UNARCHIVED",
        "PROJECT_SEGMENT_RECALCULATION_REQUESTED",
        "PROJECT_SEGMENT_RECALCULATE_FINISHED",
        "PROJECT_SEGMENT_ITEM_CREATED",
        "PROJECT_SEGMENT_ITEM_COPIED",
        "PROJECT_SEGMENT_ITEM_UPDATED",
        "PROJECT_SEGMENT_ITEM_DELETED",
        "PROJECT_SEGMENT_ITEM_UPGRADED",
        "ITEM_CONFIG_UPDATED_IN_STEP_3_OR_4",
        "INVITE_SENT",
        "INVITE_CLAIMED",
        "LOGIN"
      ]
    },
    "enumEventGroup": {
      "type": "string",
      "description": "The event group of an event.",
      "enum": [
        "PROJECT",
        "PROJECT_SEGMENT",
        "PROJECT_SEGMENT_ITEM",
        "INVITE",
        "USER_ACCOUNT",
        "MANUAL"
      ]
    },
    "enumWebhookTriggerLocation": {
      "type": "string",
      "description": "The location of the webhook trigger in the UI of HiveCPQ.",
      "enum": [
        "PROJECT",
        "PROJECT_SEGMENT",
        "PROJECT_SEGMENT_ITEM",
        "EXPERIENCE_CONFIGURATOR"
      ]
    },
    "enumWebhookTriggerType": {
      "type": "string",
      "description": "The type of the webhook trigger.",
      "enum": [
        "SYNCHRONOUS",
        "ASYNCHRONOUS",
        "FILE_DOWNLOAD",
        "OPEN_URL"
      ]
    },
    "enumComplaintStatus": {
      "type": "string",
      "description": "The status of a complaint.",
      "enum": [
        "NEW",
        "OPEN",
        "CLOSED"
      ]
    },
    "enumComplaintType": {
      "type": "string",
      "description": "The type of a complaint.",
      "enum": [
        "REQUEST_WARRANTY",
        "DELIVERY_FAILURE",
        "TECHNICAL_FAULT"
      ]
    },
    "enumContainerVersionStatus": {
      "type": "string",
      "description": "Status of the version",
      "enum": [
        "TOP",
        "ACTIVE",
        "REMOVED",
        "LEGACY"
      ]
    },
    "enumContainerVersionType": {
      "type": "string",
      "description": "Type of the version.",
      "enum": [
        "MAJOR",
        "MINOR",
        "HOTFIX"
      ]
    },
    "enumDefaultAddressType": {
      "type": "string",
      "description": "The default address type.",
      "enum": [
        "INVOICE",
        "DELIVERY"
      ]
    },
    "enumInviteStatus": {
      "type": "string",
      "description": "The status of an invite.",
      "enum": [
        "PENDING",
        "CLAIMED",
        "CANCELLED"
      ]
    },
    "requestTranslations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "The language code in ISO 639-1 format."
          },
          "translation": {
            "type": "string",
            "description": "The translated text."
          }
        },
        "required": [
          "languageCode",
          "translation"
        ],
        "description": "Translations to be saved."
      }
    },
    "requestSalesConditions": {
      "type": "object",
      "properties": {
        "vatCondition": {
          "type": "string",
          "description": "The VAT condition code. Available codes are defined inside your HiveCPQ environment."
        },
        "deliveryCondition": {
          "type": "string",
          "description": "The delivery condition code. Available codes are defined inside your HiveCPQ environment."
        },
        "paymentCondition": {
          "type": "string",
          "description": "The payment condition code. Available codes are defined inside your HiveCPQ environment."
        }
      },
      "description": "The sales conditions."
    },
    "requestMoveToStep1And2Info": {
      "type": "object",
      "properties": {
        "customerPoRef": {
          "type": "string",
          "description": "Purchase order reference."
        },
        "orderRemark": {
          "type": "string",
          "description": "Remark on the order."
        },
        "shippingDateRequested": {
          "type": "string",
          "format": "date-time",
          "description": "The requested date in ISO-8601 format."
        }
      },
      "required": [
        "customerPoRef",
        "orderRemark",
        "shippingDateRequested"
      ],
      "description": "info about the order."
    },
    "requestBasicIntegratedSystemLink": {
      "type": "object",
      "description": "A system link which will be added directly after creation of the resource that is being added",
      "properties": {
        "integratedSystemName": {
          "type": "string",
          "description": "Name of the external system."
        },
        "integratedSystemId": {
          "type": "string",
          "description": "ID of the integrated resource."
        }
      }
    },
    "distributorAccountInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The company name."
        },
        "description": {
          "type": "string",
          "description": "Additional info about the company."
        },
        "vatNumber": {
          "type": "string",
          "description": "VAT number of the company."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the company."
        },
        "email": {
          "type": "string",
          "description": "E-mail address of the company."
        },
        "websiteUrl": {
          "type": "string",
          "description": "URL to the website of the company."
        }
      },
      "description": "General info about the distributor account."
    },
    "distributorContactInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the contact."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the contact."
        },
        "email": {
          "type": "string",
          "description": "E-mail address of the contact."
        },
        "salutation": {
          "type": "string",
          "description": "Salutation of the contact."
        },
        "function": {
          "type": "string",
          "description": "Job title of the contact."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact."
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the contact"
        },
        "preferredLanguageIso": {
          "type": "string",
          "minLength": 2,
          "maxLength": 5,
          "description": "Default language of the contact in ISO 639-1 format."
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "description": "General info about the contact."
    },
    "distributorContactSalesConditions": {
      "type": "object",
      "properties": {
        "vatNumber": {
          "type": "string",
          "description": "VAT number for the contact."
        },
        "vatCondition": {
          "type": "string",
          "description": "The default VAT condition code for this contact. Available codes are defined inside your HiveCPQ environment."
        },
        "deliveryCondition": {
          "type": "string",
          "description": "The default delivery condition code for this contact. Available codes are defined inside your HiveCPQ environment."
        },
        "paymentCondition": {
          "type": "string",
          "description": "The default payment condition code for for this contact. Available codes are defined inside your HiveCPQ environment."
        }
      },
      "description": "Sales conditions of the contact."
    },
    "requestCompanyInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the company."
        },
        "description": {
          "type": "string",
          "description": "Additional info about the company."
        },
        "vatNumber": {
          "type": "string",
          "description": "VAT number of the company."
        },
        "email": {
          "type": "string",
          "description": "E-mail address of the company.",
          "format": "email"
        },
        "telephone": {
          "type": "string",
          "description": "Phone number of the company."
        },
        "websiteUrl": {
          "type": "string",
          "description": "URL to the website of the company."
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The default language for the company in ISO 639-1 format."
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "externalSystemId1": {
          "type": "string",
          "description": "An ID used to identify the company in an external system. It is usually recommended to use a system link instead."
        },
        "externalSystemId2": {
          "type": "string",
          "description": "An ID used to identify the company in an external system. It is usually recommended to use a system link instead."
        }
      },
      "description": "The general info about a company.",
      "required": [
        "name"
      ]
    },
    "requestCompanyAdvanced": {
      "type": "object",
      "properties": {
        "salesRepresentativeContactId": {
          "type": "string",
          "description": "ID of a contact who functions as sales representative."
        },
        "techSupportManagerContactId": {
          "type": "string",
          "description": "ID of a contact who functions as technical support manager."
        },
        "orderProcessingManagerContactId": {
          "type": "string",
          "description": "ID of a contact who functions as order processing manager."
        },
        "shippingManagerContactId": {
          "type": "string",
          "description": "ID of a contact who functions as shipping support manager."
        }
      },
      "description": "The advanced info about a company."
    },
    "requestCompanySalesConditions": {
      "type": "object",
      "properties": {
        "vatConditionCode": {
          "type": "string",
          "description": "The default VAT condition code to use in projects of this company. Available codes are defined inside your HiveCPQ environment."
        },
        "deliveryConditionCode": {
          "type": "string",
          "description": "The default delivery condition code to use in projects of this company. Available codes are defined inside your HiveCPQ environment."
        },
        "paymentConditionCode": {
          "type": "string",
          "description": "The default payment condition code to use in projects of this company. Available codes are defined inside your HiveCPQ environment."
        },
        "baseDiscount": {
          "type": "number",
          "format": "float",
          "description": "The default discount to use for configurations in projects of this company."
        },
        "orderCurrency": {
          "type": "string",
          "description": "Default order currency of the company."
        },
        "administrationFee": {
          "type": "object",
          "properties": {
            "fee": {
              "type": "number",
              "format": "float",
              "minimum": 0,
              "maximum": 1000000000,
              "exclusiveMinimum": true,
              "description": "The fee applied if a project for this company does not reach the fee threshold."
            },
            "threshold": {
              "type": "number",
              "format": "float",
              "minimum": 0,
              "maximum": 1000000000,
              "exclusiveMinimum": true,
              "description": "The minimum price below which a fee will be applied."
            }
          },
          "description": "Administration fee applied to projects of this company."
        }
      },
      "description": "The conditions and defaults applied to projects of this company."
    },
    "requestCompanyProductStore": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Allow this company to access the product store",
          "default": false
        },
        "priceCatalogId": {
          "type": "string",
          "description": "ID of the price catalog used for this company."
        },
        "storeDiscountPercentage": {
          "type": "number",
          "format": "float",
          "description": "The discount percentage applied to product store items in a project of this company.",
          "minimum": -100,
          "maximum": 100
        }
      },
      "description": "Product store settings of this company."
    },
    "requestCompanyDefaultProjectSettings": {
      "type": "object",
      "properties": {
        "defaultVatConditionCode": {
          "type": "string",
          "description": "The default VAT condition code to use in projects for this company. Available codes are defined inside your HiveCPQ environment."
        },
        "defaultPaymentConditionCode": {
          "type": "string",
          "description": "The default payment condition code to use in projects for this company. Available codes are defined inside your HiveCPQ environment."
        },
        "salesPricingStrategy": {
          "type": "string",
          "description": "The default pricing strategy to use in projects for this company.",
          "enum": [
            "MARKUP",
            "LIST_PRICE_DISCOUNT"
          ]
        }
      },
      "description": "The default project settings of the company."
    },
    "requestPostCopyToVersion": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Version number (e.g. 1.0.0) you want to copy data to. Providing 'top' accesses the highest available version."
        }
      },
      "required": [
        "targetVersion"
      ]
    },
    "requestPostSetComponentFeatures": {
      "type": "object",
      "properties": {
        "featureCodes": {
          "type": "array",
          "description": "A collection of feature codes.",
          "items": {
            "type": "string",
            "description": "A unique feature code."
          }
        }
      },
      "required": [
        "featureCodes"
      ]
    },
    "requestPostUnit": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 200,
          "description": "The unique code of the unit."
        },
        "names": {
          "$ref": "#/definitions/requestTranslations"
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "code",
        "names"
      ]
    },
    "requestPutUnit": {
      "type": "object",
      "properties": {
        "names": {
          "$ref": "#/definitions/requestTranslations"
        }
      },
      "required": [
        "names"
      ]
    },
    "requestPostSetPropertyValue": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 150,
          "description": "The property code for which the new value should be set."
        },
        "value": {
          "type": "string",
          "maxLength": 500,
          "description": "The new value of the property if it is not of an array type."
        },
        "arrayValues": {
          "type": "array",
          "description": "The new collection of values of the property if it is an array type.",
          "items": {
            "type": "string",
            "maxLength": 500,
            "description": "An array value."
          }
        }
      },
      "required": [
        "code"
      ]
    },
    "requestPostSetPropertyValues": {
      "type": "object",
      "properties": {
        "propertyValues": {
          "type": "array",
          "description": "The collection of property values which need to be set.",
          "items": {
            "$ref": "#/definitions/requestPostSetPropertyValue"
          }
        }
      },
      "required": [
        "propertyValues"
      ]
    },
    "requestPostComponentPrice": {
      "type": "object",
      "properties": {
        "costPrice": {
          "type": "number",
          "format": "float",
          "description": "Cost price of the component."
        },
        "listPrice": {
          "type": "number",
          "format": "float",
          "description": "List price of the component."
        },
        "purchasePrice": {
          "type": "number",
          "format": "float",
          "description": "Purchase price of the component."
        },
        "subDistributorPurchasePrice": {
          "type": "number",
          "format": "float",
          "description": "Sub-distributor purchase price of the component."
        },
        "priceCatalogId": {
          "type": "string",
          "description": "Price catalog ID to which this price belongs."
        },
        "currency": {
          "type": "string",
          "description": "The currency in ISO 4217 format."
        },
        "unitId": {
          "type": "string",
          "description": "ID of the unit to be used with the price."
        }
      },
      "required": [
        "listPrice",
        "priceCatalogId",
        "currency",
        "unitId"
      ]
    },
    "requestPostBulkUpsertComponentPrices": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "string",
                "description": "A custom identifier of this item. It is not the component price ID."
              },
              "componentCode": {
                "type": "string",
                "description": "Code of the component to add the price(s) to."
              },
              "unitCode": {
                "type": "string",
                "description": "Code of the unit to use with the price."
              },
              "priceCatalogName": {
                "type": "string",
                "description": "Name of the price catalog to which the price belongs."
              },
              "costPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost price of the component."
              },
              "listPrice": {
                "type": "number",
                "format": "float",
                "description": "List price of the component."
              },
              "purchasePrice": {
                "type": "number",
                "format": "float",
                "description": "Purchase price of the component."
              },
              "subDistributorPurchasePrice": {
                "type": "number",
                "format": "float",
                "description": "Sub-distributor purchase price of the component."
              },
              "currency": {
                "type": "string",
                "description": "The currency in ISO 4217 format."
              }
            }
          }
        }
      }
    },
    "requestPostComponent": {
      "type": "object",
      "properties": {
        "articleCode": {
          "type": "string",
          "maxLength": 200,
          "description": "The unique article code."
        },
        "names": {
          "$ref": "#/definitions/requestTranslations"
        },
        "eanCode": {
          "type": "string",
          "maxLength": 14,
          "description": "The European Article Number."
        },
        "gtinCode": {
          "type": "string",
          "maxLength": 14,
          "description": "The Global Trade Item Number."
        },
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        },
        "productGroup": {
          "type": "string",
          "maxLength": 50,
          "description": "The group to which your component belongs."
        },
        "extensions": {
          "$ref": "#/definitions/componentExtensions"
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "articleCode",
        "names"
      ]
    },
    "requestPutComponent": {
      "type": "object",
      "properties": {
        "articleCode": {
          "type": "string",
          "maxLength": 200,
          "description": "The unique article code."
        },
        "names": {
          "$ref": "#/definitions/requestTranslations"
        },
        "eanCode": {
          "type": "string",
          "maxLength": 14,
          "description": "The European Article Number."
        },
        "gtinCode": {
          "type": "string",
          "maxLength": 14,
          "description": "The Global Trade Item Number."
        },
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        },
        "productGroup": {
          "type": "string",
          "maxLength": 50,
          "description": "The group to which your component belongs."
        },
        "extensions": {
          "$ref": "#/definitions/componentExtensions"
        }
      },
      "required": [
        "articleCode",
        "names"
      ]
    },
    "requestPutComponentTooltip": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable displaying the tooltip."
        },
        "titles": {
          "$ref": "#/definitions/requestTranslations"
        },
        "details": {
          "$ref": "#/definitions/requestTranslations"
        }
      }
    },
    "requestPostBulkDeleteComponents": {
      "type": "object",
      "properties": {
        "idsNotIn": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "ID of a component which should not be deleted."
          },
          "description": "A list of component IDs which should not be deleted. It cannot be used together with idsIn."
        },
        "idsIn": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "ID of a component which should be deleted."
          },
          "description": "A list of component IDs which should be deleted. It cannot be used together with idsNotIn."
        }
      }
    },
    "requestPostProperty": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 150,
          "description": "Unique code for the property."
        },
        "type": {
          "$ref": "#/definitions/enumComponentPropertyType"
        },
        "arrayType": {
          "$ref": "#/definitions/enumComponentPropertyArrayType"
        },
        "info": {
          "type": "string",
          "maxLength": 250,
          "description": "General info about the property."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "code",
        "type"
      ]
    },
    "requestPutProperty": {
      "type": "object",
      "properties": {
        "info": {
          "type": "string",
          "maxLength": 250,
          "description": "General info about the property."
        }
      }
    },
    "requestPostFeature": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 200,
          "description": "Unique code for the feature."
        },
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        },
        "serialSearchFunction": {
          "type": "string",
          "maxLength": 100,
          "description": "A JavaScript function which determines the visibility in the product store."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "code",
        "descriptions"
      ]
    },
    "requestPutFeature": {
      "type": "object",
      "properties": {
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        },
        "serialSearchFunction": {
          "type": "string",
          "maxLength": 100,
          "description": "A JavaScript function which determines the visibility in the product store."
        }
      },
      "required": [
        "descriptions"
      ]
    },
    "requestPostChangeFeatureGroup": {
      "type": "object",
      "properties": {
        "newFeatureGroupId": {
          "type": "string",
          "description": "ID of the new feature group."
        }
      },
      "required": [
        "newFeatureGroupId"
      ]
    },
    "requestPostReOrderFeatures": {
      "type": "object",
      "properties": {
        "featureIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of all feature IDs in the specified feature group in the desired sequence."
        }
      },
      "required": [
        "featureIds"
      ]
    },
    "requestPostFeatureGroup": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 200,
          "description": "Unique code for the feature group."
        },
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "code",
        "descriptions"
      ]
    },
    "requestPutFeatureGroup": {
      "type": "object",
      "properties": {
        "descriptions": {
          "$ref": "#/definitions/requestTranslations"
        }
      },
      "required": [
        "descriptions"
      ]
    },
    "requestPostReOrderFeatureGroups": {
      "type": "object",
      "properties": {
        "featureGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of all feature group IDs in the desired sequence."
        }
      },
      "required": [
        "featureGroupIds"
      ]
    },
    "requestPostPriceCatalog": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50,
          "description": "Unique name for the price catalog."
        },
        "defaultPriceCatalog": {
          "type": "boolean",
          "description": "Set the price catalog as default."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "name"
      ]
    },
    "requestPutPriceCatalog": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50,
          "description": "Unique name for the price catalog."
        },
        "defaultPriceCatalog": {
          "type": "boolean",
          "description": "Set the price catalog as default."
        }
      },
      "required": [
        "name"
      ]
    },
    "requestPostInvite": {
      "type": "object",
      "properties": {
        "forContact": {
          "type": "object",
          "properties": {
            "contactId": {
              "type": "string",
              "description": "ID of the contact."
            },
            "integratedSystemName": {
              "type": "string",
              "description": "Name of an external system where the contact is known. This must be used together with integratedSystemId."
            },
            "integratedSystemId": {
              "type": "string",
              "description": "ID of the contact in the external system. This must be used together with integratedSystemName."
            }
          },
          "description": "The contact to invite."
        },
        "fromContact": {
          "type": "object",
          "properties": {
            "contactId": {
              "type": "string",
              "description": "ID of the contact."
            },
            "integratedSystemName": {
              "type": "string",
              "description": "Name of an external system where the contact is known. This must be used together with integratedSystemId."
            },
            "integratedSystemId": {
              "type": "string",
              "description": "ID of the contact in the external system. This must be used together with integratedSystemName."
            }
          },
          "description": "The contact sending the invite."
        },
        "enableSSO": {
          "type": "boolean",
          "default": false,
          "description": "Enable Single-Sign-On for this contact."
        }
      },
      "required": [
        "fromContact",
        "forContact"
      ]
    },
    "requestPostSendInviteMail": {
      "type": "object",
      "properties": {
        "invitationText": {
          "type": "string",
          "description": "Text which will be shown in the invitation e-mail."
        },
        "toEmail": {
          "type": "string",
          "description": "The e-mail address to which the invite should be sent.",
          "format": "email"
        }
      },
      "required": [
        "invitationText",
        "toEmail"
      ]
    },
    "requestPostContact": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string",
          "description": "ID of the company in which the contact should be created."
        },
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "ID of a role."
          },
          "minItems": 1,
          "description": "IDs of all roles which should be assigned to the contact."
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The default language of the contact in ISO 639-1 format."
        },
        "functionTitle": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "salutation": {
          "type": "string"
        },
        "externalSystemId": {
          "type": "string",
          "description": "An ID which can identify the contact in an external system. It is usually recommended to use a system link instead."
        },
        "avatarUrl": {
          "type": "string",
          "description": "A publicly accessible URL to an image which will be used as the avatar."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "companyId",
        "roleIds"
      ]
    },
    "requestPutContact": {
      "type": "object",
      "properties": {
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "ID of a role."
          },
          "minItems": 1,
          "description": "IDs of all roles which should be given to the contact."
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The default language of the contact in ISO 639-1 format."
        },
        "functionTitle": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "salutation": {
          "type": "string"
        },
        "externalSystemId": {
          "type": "string",
          "description": "An ID used to identify the contact in an external system. It is usually recommended to use a system link instead."
        },
        "avatarUrl": {
          "type": "string",
          "description": "A publicly accessible URL to an image which will be used as the avatar."
        }
      },
      "required": [
        "roleIds"
      ]
    },
    "requestPostCompany": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/requestCompanyInfo"
        },
        "advanced": {
          "$ref": "#/definitions/requestCompanyAdvanced"
        },
        "salesConditions": {
          "$ref": "#/definitions/requestCompanySalesConditions"
        },
        "productStore": {
          "$ref": "#/definitions/requestCompanyProductStore"
        },
        "defaultProjectSettings": {
          "$ref": "#/definitions/requestCompanyDefaultProjectSettings"
        },
        "subDistributorSettings": {
          "type": "object",
          "description": "Settings which will turn the company into a sub-distributor.",
          "properties": {
            "distributorId": {
              "type": "string",
              "description": "ID of the distributor company to which this sub-distributor will be linked."
            },
            "orderEmails": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A sub-distributor e-mail.",
                "format": "email"
              },
              "description": "All sub-distributor e-mails which will receive order e-mails."
            }
          },
          "required": [
            "distributorId"
          ]
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPutCompany": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/requestCompanyInfo"
        },
        "advanced": {
          "$ref": "#/definitions/requestCompanyAdvanced"
        },
        "salesConditions": {
          "$ref": "#/definitions/requestCompanySalesConditions"
        },
        "productStore": {
          "$ref": "#/definitions/requestCompanyProductStore"
        },
        "defaultProjectSettings": {
          "$ref": "#/definitions/requestCompanyDefaultProjectSettings"
        },
        "subDistributorSettings": {
          "type": "object",
          "description": "The sub-distributor settings.",
          "properties": {
            "orderEmails": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A sub-distributor e-mail.",
                "format": "email"
              },
              "description": "E-mail address which will be used to send out order e-mails to sub-distributors."
            }
          }
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPostDefaultAddress": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "Name of the default delivery or invoice company."
        },
        "type": {
          "$ref": "#/definitions/enumDefaultAddressType"
        },
        "address": {
          "$ref": "#/definitions/requestAddressWithRequiredFieldsForDefaultAddress"
        },
        "contactPerson": {
          "type": "string",
          "description": "Name of a contact at the default delivery or invoice company."
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of a contact at the default delivery or invoice company."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Contact e-mail of the default delivery or invoice company."
        },
        "vatNumber": {
          "type": "string",
          "description": "VAT number to be used for the default invoice company."
        },
        "canChangeAddress": {
          "type": "boolean",
          "default": false,
          "description": "Allow the distributor to modify their default delivery and invoice addresses."
        },
        "canChangeAddressOnPlaceOrder": {
          "type": "boolean",
          "default": false,
          "description": "Allow the distributor to modify their default delivery and invoice addresses during the order process."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "companyName",
        "type",
        "address",
        "contactPerson",
        "contactPhone",
        "email"
      ]
    },
    "requestPutDefaultAddress": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "Name of the default delivery or invoice company."
        },
        "type": {
          "$ref": "#/definitions/enumDefaultAddressType"
        },
        "address": {
          "$ref": "#/definitions/requestAddressWithRequiredFieldsForDefaultAddress"
        },
        "contactPerson": {
          "type": "string",
          "description": "Name of a contact at the default delivery or invoice company."
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of a contact at the default delivery or invoice company."
        },
        "email": {
          "type": "string",
          "description": "Contact e-mail of the default delivery or invoice company.",
          "format": "email"
        },
        "vatNumber": {
          "type": "string",
          "description": "VAT number to be used for the default invoice company."
        },
        "canChangeAddress": {
          "type": "boolean",
          "default": false,
          "description": "Allow the distributor to modify their default delivery and invoice addresses."
        },
        "canChangeAddressOnPlaceOrder": {
          "type": "boolean",
          "default": false,
          "description": "Allow the distributor to modify their default delivery and invoice addresses during the order process."
        }
      },
      "required": [
        "companyName",
        "type",
        "address",
        "contactPerson",
        "contactPhone",
        "email"
      ]
    },
    "requestPutCustomObjectKeyValues": {
      "type": "object",
      "properties": {
        "keyValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customObjectKeyValuePair"
          },
          "description": "Key value pairs to store inside the custom object."
        }
      },
      "required": [
        "keyValues"
      ]
    },
    "requestPutProject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the project."
        },
        "sellToCustomerReference": {
          "type": "string",
          "description": "A reference for the end customer."
        },
        "sellTo": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "The end customer."
        },
        "invoice": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Invoice company and contact."
        },
        "delivery": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Delivery company and contact."
        },
        "installation": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Installation company and contact."
        },
        "salesConditions": {
          "type": "object",
          "properties": {
            "taxCondition": {
              "type": "string",
              "description": "The VAT condition code of the project. Available codes are defined inside your HiveCPQ environment."
            },
            "deliveryCondition": {
              "type": "string",
              "description": "The delivery condition code of the project. Available codes are defined inside your HiveCPQ environment."
            },
            "paymentCondition": {
              "type": "string",
              "description": "The payment condition code of the project. Available codes are defined inside your HiveCPQ environment."
            }
          },
          "description": "Information about the sales conditions of the project."
        }
      }
    },
    "requestPostProject": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string",
          "description": "ID of the distributor to which the project belongs."
        },
        "name": {
          "type": "string",
          "description": "Name of the project."
        },
        "sellToCustomerReference": {
          "type": "string",
          "description": "A reference for the end customer."
        },
        "sellTo": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "The end customer."
        },
        "invoice": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Invoice company and contact."
        },
        "delivery": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Delivery company and contact."
        },
        "installation": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "ID of an account in the address book."
            },
            "contactId": {
              "type": "string",
              "description": "ID of a contact in the given account."
            }
          },
          "description": "Installation company and contact."
        },
        "salesConditions": {
          "type": "object",
          "properties": {
            "taxCondition": {
              "type": "string",
              "description": "The VAT condition code of the project. Available codes are defined inside your HiveCPQ environment."
            },
            "deliveryCondition": {
              "type": "string",
              "description": "The delivery condition code of the project. Available codes are defined inside your HiveCPQ environment."
            },
            "paymentCondition": {
              "type": "string",
              "description": "The payment condition code of the project. Available codes are defined inside your HiveCPQ environment."
            }
          },
          "description": "Information about the sales conditions of the project."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "companyId"
      ]
    },
    "requestPostProjectAddProducts": {
      "type": "array",
      "items": {
        "type": "object",
        "minItems": 1,
        "properties": {
          "articleCode": {
            "type": "string",
            "description": "The article code of the product that should be added."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of this product to be added."
          },
          "serialNumber": {
            "type": "string",
            "description": "A serial number to identify the product in external systems."
          },
          "serialMatched": {
            "type": "boolean",
            "description": "Match the serial number with the product when using product histories."
          },
          "mainCategoryName": {
            "type": "string",
            "description": "Code of the main category in which to find the product."
          },
          "integratedSystemLink": {
            "$ref": "#/definitions/requestBasicIntegratedSystemLink"
          }
        },
        "required": [
          "articleCode",
          "quantity"
        ]
      }
    },
    "requestPostProjectAddConfiguration": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of this configuration to be added."
        },
        "configuratorId": {
          "type": "string",
          "description": "ID of a V2 configurator."
        },
        "name": {
          "type": "string",
          "description": "Name of the configuration."
        },
        "initialValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationV2Input"
          },
          "description": "The input values to initialize the configuration."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "configuratorId"
      ]
    },
    "requestPostProjectGenerateOutputDocument": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/enumOutputDocumentTemplateType"
        },
        "outputDocumentTemplateId": {
          "type": "string",
          "description": "ID of an output document template."
        },
        "language": {
          "type": "string",
          "description": "The ISO 639-1 language code the document should be generated in."
        }
      },
      "required": [
        "language"
      ]
    },
    "requestPostProjectCopy": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "Name of the new project."
        },
        "distributorId": {
          "type": "string",
          "description": "Distributor for the new project. Distributor of the original project will be used if not provided."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "projectName"
      ]
    },
    "requestPutProjectSegment": {
      "type": "object",
      "properties": {
        "order": {
          "type": "object",
          "properties": {
            "orderRemark": {
              "type": "string",
              "description": "Remark on the order."
            },
            "orderRemarkFromManufacturer": {
              "type": "string",
              "description": "Remark of the manufacturer on the order."
            },
            "shippingDateRequested": {
              "type": "string",
              "format": "date-time",
              "description": "The requested date in ISO-8601 format."
            },
            "shippingDateConfirmed": {
              "type": "string",
              "format": "date-time",
              "description": "The confirmed date in ISO-8601 format."
            },
            "customerPoRef": {
              "type": "string",
              "description": "Purchase order reference."
            },
            "manufacturerSoRef": {
              "type": "string",
              "description": "Sales order reference."
            },
            "manufacturerReference": {
              "type": "string",
              "description": "Reference for the manufacturer."
            },
            "delivery": {
              "$ref": "#/definitions/companyContact"
            },
            "sellTo": {
              "$ref": "#/definitions/companyContact"
            },
            "invoice": {
              "$ref": "#/definitions/companyContact"
            },
            "installation": {
              "$ref": "#/definitions/companyContact"
            },
            "salesCondition": {
              "$ref": "#/definitions/requestSalesConditions"
            },
            "orderSenderContactId": {
              "type": "string",
              "description": "Contact ID of the sender."
            },
            "orderReceiverContactId": {
              "type": "string",
              "description": "Contact ID of the receiver."
            }
          },
          "description": "Order information."
        },
        "companyASalesManagerId": {
          "type": "string",
          "description": "Contact ID of the manufacturer sales manager."
        },
        "companyBSalesManagerId": {
          "type": "string",
          "description": "Contact ID of the distributor sales manager."
        },
        "status": {
          "$ref": "#/definitions/enumProjectSegmentStatus"
        },
        "nextFollowUpDate": {
          "type": "string",
          "format": "date-time",
          "description": "The next follow up date."
        },
        "estimatedSalesDate": {
          "type": "string",
          "format": "date-time",
          "description": "The estimated sales date."
        },
        "freeTextNote": {
          "type": "string",
          "description": "A free note on the segment."
        },
        "saleProbability": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100,
          "description": "The sales probability"
        },
        "externalOrderStatus": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "An external status of the order."
            },
            "statusUrl": {
              "type": "string",
              "description": "A URL users may use to check on the external order status or view shipment info about their order."
            },
            "statusText": {
              "type": "string",
              "description": "Custom text to be displayed for the shipment info."
            }
          },
          "description": "An order status often used to display external shipping information. Visible in step 4 of the order process."
        },
        "orderGroup": {
          "type": "string",
          "description": "The order group."
        }
      }
    },
    "requestPostProjectSegmentMoveToStep1": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/requestMoveToStep1And2Info"
        },
        "condition": {
          "$ref": "#/definitions/requestSalesConditions"
        },
        "delivery": {
          "$ref": "#/definitions/companyContact"
        },
        "sellTo": {
          "$ref": "#/definitions/companyContact"
        },
        "installation": {
          "$ref": "#/definitions/companyContact"
        },
        "invoice": {
          "$ref": "#/definitions/companyContact"
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPostProjectSegmentMoveToStep2": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/requestMoveToStep1And2Info"
        },
        "condition": {
          "$ref": "#/definitions/requestSalesConditions"
        },
        "delivery": {
          "$ref": "#/definitions/companyContact"
        },
        "sellTo": {
          "$ref": "#/definitions/companyContact"
        },
        "installation": {
          "$ref": "#/definitions/companyContact"
        },
        "invoice": {
          "$ref": "#/definitions/companyContact"
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPostProjectSegmentMoveToStep3": {
      "type": "object",
      "properties": {
        "info": {
          "type": "object",
          "properties": {
            "orderRemarkSupplier": {
              "type": "string",
              "description": "Remark of the manufacturer on the order."
            },
            "supplierSoRef": {
              "type": "string",
              "description": "Sales order reference."
            },
            "shippingDateConfirmed": {
              "type": "string",
              "format": "date-time",
              "description": "The confirmed date in ISO-8601 format."
            }
          },
          "required": [
            "orderRemarkSupplier",
            "supplierSoRef"
          ],
          "description": "info"
        },
        "delivery": {
          "$ref": "#/definitions/companyContact"
        },
        "invoice": {
          "$ref": "#/definitions/companyContact"
        }
      },
      "required": [
        "info",
        "delivery",
        "invoice"
      ]
    },
    "requestPostProjectSegmentMoveToStep4": {
      "type": "object",
      "properties": {
        "info": {
          "type": "object",
          "properties": {
            "orderRemarkSupplier": {
              "type": "string",
              "description": "Remark of the manufacturer on the order."
            },
            "supplierSoRef": {
              "type": "string",
              "description": "Sales order reference."
            },
            "shippingDateConfirmed": {
              "type": "string",
              "format": "date-time",
              "description": "The confirmed date in ISO-8601 format."
            }
          },
          "required": [
            "orderRemarkSupplier",
            "supplierSoRef",
            "shippingDateConfirmed"
          ],
          "description": "info"
        },
        "delivery": {
          "$ref": "#/definitions/companyContact"
        },
        "invoice": {
          "$ref": "#/definitions/companyContact"
        }
      },
      "required": [
        "info",
        "delivery",
        "invoice"
      ]
    },
    "requestPostProjectSegmentSettings": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of keys and values used as input for a segment configurator."
        }
      }
    },
    "requestPostProjectSegmentAddConfiguration": {
      "type": "object",
      "properties": {
        "configuratorId": {
          "type": "string",
          "description": "ID of a V1 configurator."
        },
        "initialValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The input values used to initialize the configuration."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of the item."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "configuratorId"
      ]
    },
    "requestPutProjectSegmentItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A name for the configuration."
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "description": "The quantity of the item."
        },
        "externalSerialNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional identifiers which can be used to identify the configuration in external systems."
        }
      },
      "required": [
        "quantity"
      ]
    },
    "requestPostProjectSegmentItemCopyToProject": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "ID of the target project."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "projectId"
      ]
    },
    "requestPostIntegratedSystemLink": {
      "type": "object",
      "properties": {
        "integratedSystemName": {
          "type": "string",
          "description": "Name of the external system."
        },
        "integratedSystemId": {
          "type": "string",
          "description": "ID of the integrated resource."
        },
        "resourceType": {
          "$ref": "#/definitions/enumSystemLinkResourceType"
        },
        "hiveId": {
          "type": "string",
          "description": "ID of the HiveCPQ resource."
        }
      },
      "required": [
        "integratedSystemName",
        "integratedSystemId",
        "resourceType",
        "hiveId"
      ]
    },
    "requestPutIntegratedSystemLink": {
      "type": "object",
      "properties": {
        "integratedSystemName": {
          "type": "string",
          "description": "Name of the external system."
        },
        "integratedSystemId": {
          "type": "string",
          "description": "ID of the integrated resource."
        }
      },
      "required": [
        "integratedSystemName",
        "integratedSystemId"
      ]
    },
    "requestPostDistributorAccount": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/distributorAccountInfo"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPutDistributorAccount": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/distributorAccountInfo"
        },
        "address": {
          "$ref": "#/definitions/address"
        }
      }
    },
    "requestPutDistributorContact": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/distributorContactInfo"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "salesConditions": {
          "$ref": "#/definitions/distributorContactSalesConditions"
        }
      }
    },
    "requestPostDistributorContact": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/distributorContactInfo"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "salesConditions": {
          "$ref": "#/definitions/distributorContactSalesConditions"
        },
        "accountId": {
          "type": "string",
          "description": "ID of the distributor account to which the contact should be added."
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "info"
      ]
    },
    "requestPostWebhook": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 200,
          "description": "A unique code for the webhook."
        },
        "url": {
          "type": "string",
          "maxLength": 255,
          "description": "The callback URL of the webhook."
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Additional info about the webhook."
        },
        "eventSubscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enumWebhookEventSubscription"
          },
          "description": "Events to which the webhook should subscribe."
        }
      },
      "required": [
        "code",
        "url"
      ]
    },
    "requestPutWebhook": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "maxLength": 255,
          "description": "The callback URL of the webhook."
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Additional info about the webhook."
        }
      },
      "required": [
        "url"
      ]
    },
    "requestPostWebhookHeader": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "maxLength": 50,
          "description": "An HTTP header key which the webhook adds during a callback."
        },
        "value": {
          "type": "string",
          "maxLength": 255,
          "description": "An HTTP header value for the key which the webhook adds during a callback."
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "requestPostWebhookSubscriptions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/enumWebhookEventSubscription"
      },
      "description": "The platform events to which the webhook should react."
    },
    "requestPostWebhookTrigger": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "A unique code for the trigger."
        },
        "names": {
          "$ref": "#/definitions/requestTranslations"
        },
        "confirmations": {
          "$ref": "#/definitions/requestTranslations"
        },
        "confirmationRequired": {
          "type": "boolean",
          "description": "Enable or disable the confirmation modal when a user activates a webhook trigger."
        },
        "openInSameTab": {
          "type": "boolean",
          "description": "Enable opening the URL in the same browser tab when using the OPEN_URL type."
        },
        "location": {
          "$ref": "#/definitions/enumWebhookTriggerLocation"
        },
        "type": {
          "$ref": "#/definitions/enumWebhookTriggerType"
        },
        "permissionIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A permission ID."
          },
          "description": "A collection of permission IDs which have access to the trigger."
        }
      },
      "required": [
        "code",
        "names",
        "location",
        "type"
      ]
    },
    "requestPutWebhookTrigger": {
      "type": "object",
      "properties": {
        "names": {
          "$ref": "#/definitions/requestTranslations"
        },
        "confirmations": {
          "$ref": "#/definitions/requestTranslations"
        },
        "confirmationRequired": {
          "type": "boolean",
          "description": "Enable or disable the confirmation modal when a user activates a webhook trigger."
        },
        "openInSameTab": {
          "type": "boolean",
          "description": "Enable opening the URL in the same browser tab when using the OPEN_URL type."
        },
        "location": {
          "$ref": "#/definitions/enumWebhookTriggerLocation"
        },
        "type": {
          "$ref": "#/definitions/enumWebhookTriggerType"
        },
        "permissionIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A permission ID."
          },
          "description": "A collection of permission IDs which have access to the trigger."
        }
      },
      "required": [
        "names",
        "location",
        "type"
      ]
    },
    "requestPostComplaint": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the complaint."
        },
        "description": {
          "type": "string",
          "description": "The description of the complaint."
        },
        "companyId": {
          "type": "string",
          "description": "The ID of the company that opened the complaint."
        },
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "articleNumber": {
                "type": "string",
                "description": "The identifier of an article."
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "description": "The quantity of the article."
              }
            }
          },
          "description": "The articles for which the complaint is opened."
        },
        "type": {
          "$ref": "#/definitions/enumComplaintType"
        },
        "status": {
          "$ref": "#/definitions/enumComplaintStatus"
        },
        "orderReference": {
          "type": "string",
          "description": "Reference to an order."
        },
        "claimNumber": {
          "type": "string",
          "description": "Number or identifier of this claim."
        },
        "createdByContactId": {
          "type": "string",
          "description": "ID of the contact who created the complaint."
        },
        "createdAt": {
          "$ref": "#/definitions/createdAt"
        },
        "updatedByContactId": {
          "type": "string",
          "description": "ID of the contact who updated the complaint."
        },
        "updatedAt": {
          "$ref": "#/definitions/updatedAt"
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "title",
        "description",
        "type",
        "companyId",
        "orderReference",
        "claimNumber",
        "articles"
      ]
    },
    "requestPutComplaint": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the complaint."
        },
        "description": {
          "type": "string",
          "description": "The description of the complaint."
        },
        "companyId": {
          "type": "string",
          "description": "The ID of the company that opened the complaint."
        },
        "status": {
          "$ref": "#/definitions/enumComplaintStatus"
        },
        "type": {
          "$ref": "#/definitions/enumComplaintType"
        },
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "articleNumber": {
                "type": "string",
                "description": "The identifier of an article."
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "description": "The quantity of the article."
              }
            }
          },
          "description": "The articles for which the complaint is opened."
        },
        "orderReference": {
          "type": "string",
          "description": "Reference to an order."
        },
        "claimNumber": {
          "type": "string",
          "description": "Number or identifier of this claim."
        },
        "createdByContactId": {
          "type": "string",
          "description": "ID of the contact who created the complaint."
        },
        "createdAt": {
          "$ref": "#/definitions/createdAt"
        },
        "updatedByContactId": {
          "type": "string",
          "description": "ID of the contact who updated the complaint."
        },
        "updatedAt": {
          "$ref": "#/definitions/updatedAt"
        }
      },
      "required": [
        "title",
        "description",
        "status",
        "type",
        "companyId",
        "orderReference",
        "articles"
      ]
    },
    "requestPostComplaintComment": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of a user."
        },
        "createdByContactId": {
          "type": "string",
          "description": "ID of the contact who created the comment."
        },
        "createdAt": {
          "$ref": "#/definitions/createdAt"
        },
        "updatedByContactId": {
          "type": "string",
          "description": "ID of the contact who updated the comment."
        },
        "updatedAt": {
          "$ref": "#/definitions/updatedAt"
        }
      },
      "required": [
        "comment"
      ]
    },
    "requestPostComplaintReplaceComments": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requestPostComplaintComment"
          },
          "description": "A full replacement of all comments."
        }
      }
    },
    "requestPostProjectsUpdatePrices": {
      "type": "object",
      "properties": {
        "updateProductStorePrices": {
          "type": "boolean",
          "default": false,
          "description": "Refresh prices of items in the product store."
        },
        "projectRecalculationRequired": {
          "type": "boolean",
          "default": false,
          "description": "Require projects to be recalculated after the update."
        },
        "updateConfiguratorPrices": {
          "type": "boolean",
          "default": false,
          "description": "Update the prices of configurations."
        }
      }
    },
    "requestPostConfiguration": {
      "type": "object",
      "properties": {
        "configuratorId": {
          "type": "string",
          "description": "ID of a V2 configurator"
        },
        "versionId": {
          "type": "string",
          "description": "ID of the container version to which the master data in the configuration belongs."
        },
        "initialValues": {
          "type": "array",
          "description": "The input values used to initialize the configuration.",
          "items": {
            "$ref": "#/definitions/configurationV2Input"
          }
        },
        "integratedSystemLink": {
          "$ref": "#/definitions/requestBasicIntegratedSystemLink"
        }
      },
      "required": [
        "configuratorId",
        "initialValues"
      ]
    },
    "requestPostCheckConfiguration": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "description": "The input values used by the configuration.",
          "items": {
            "$ref": "#/definitions/configurationV2Input"
          }
        }
      },
      "required": [
        "values"
      ]
    },
    "responseTranslations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "The language code in ISO 639-1 format."
          },
          "translation": {
            "type": "string",
            "description": "The translated text."
          }
        }
      },
      "description": "A list of translations."
    },
    "responsePrice": {
      "type": "object",
      "properties": {
        "listPrice": {
          "type": "string",
          "description": "The list price."
        },
        "discount": {
          "type": "string",
          "description": "The discount."
        },
        "purchasePrice": {
          "type": "string",
          "description": "The purchase price."
        },
        "salesPrice": {
          "type": "string",
          "description": "The sales price."
        },
        "currency": {
          "type": "string",
          "description": "The currency in ISO 4217 format."
        },
        "unitCode": {
          "type": "string",
          "description": "The Unit."
        }
      },
      "description": "The pricing information."
    },
    "responseComponentProperty": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The property code."
        },
        "value": {
          "type": "string",
          "description": "Value of a property."
        },
        "arrayValues": {
          "type": "array",
          "description": "Values of an array property.",
          "items": {
            "type": "string"
          }
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        }
      }
    },
    "responseComponentPropertyWithoutAudit": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The property code."
        },
        "value": {
          "type": "string",
          "description": "Value of a property."
        },
        "arrayValues": {
          "type": "array",
          "description": "Values of an array property.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "responseConfigurationNode": {
      "type": "object",
      "properties": {
        "uniqueLabel": {
          "type": "string",
          "description": "Unique identifier of a node."
        },
        "componentCode": {
          "type": "string",
          "description": "The article code of the component linked to the node."
        },
        "datatype": {
          "$ref": "#/definitions/enumConfigurationNodeDatatype"
        },
        "type": {
          "type": "string",
          "description": "The node type."
        },
        "status": {
          "$ref": "#/definitions/enumConfigurationNodeStatus"
        },
        "value": {
          "type": "string",
          "description": "The textual representation of the node value."
        },
        "unit": {
          "type": "string",
          "description": "The unit code of the node."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of items represented by this node used to calculate the total node price."
        },
        "price": {
          "type": "object",
          "properties": {
            "listPrice": {
              "type": "number",
              "format": "float",
              "description": "List price of the node."
            },
            "purchasePrice": {
              "type": "number",
              "format": "float",
              "description": "Purchase price of the node."
            }
          },
          "description": "price"
        },
        "optional": {
          "type": "boolean",
          "description": "Is the node optional in the configuration?"
        },
        "component": {
          "$ref": "#/definitions/responseConfigurationNodeComponentData"
        },
        "selectedComponent": {
          "$ref": "#/definitions/responseConfigurationNodeComponentData"
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Child nodes of the parent node, the node structures are the same. Nested nodes are not available for the DEFAULT output mode."
        }
      }
    },
    "responseConfigurationNodeComponentData": {
      "type": "object",
      "description": "Additional data from the component used for the configuration node or the component data attached to the selected value of a node.",
      "properties": {
        "eanCode": {
          "type": "string",
          "description": "The European Article Number of the component."
        },
        "gtinCode": {
          "type": "string",
          "description": "The Global Trade Item Number of the component."
        },
        "unitCode": {
          "type": "string",
          "description": "The unit of the component."
        },
        "names": {
          "$ref": "#/definitions/responseTranslations"
        },
        "descriptions": {
          "$ref": "#/definitions/responseTranslations"
        },
        "propertyValues": {
          "description": "A list of component property values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseComponentPropertyWithoutAudit"
          }
        }
      }
    },
    "responseGetVersions": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the container version."
              },
              "version": {
                "type": "string",
                "description": "The version number."
              },
              "status": {
                "$ref": "#/definitions/enumContainerVersionStatus"
              },
              "type": {
                "$ref": "#/definitions/enumContainerVersionType"
              },
              "notes": {
                "type": "string",
                "description": "Additional info about the version."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of container versions."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetDefaultAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the default address."
        },
        "companyName": {
          "type": "string",
          "description": "Company name of the default address."
        },
        "type": {
          "$ref": "#/definitions/enumDefaultAddressType"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "email": {
          "type": "string",
          "description": "E-mail of the default address."
        },
        "contactPerson": {
          "type": "string",
          "description": "Contact person of the default address."
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the default address."
        },
        "vatNumber": {
          "type": "string",
          "description": "VAT number of the default address."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "canChangeAddress": {
          "type": "boolean",
          "description": "Is the distributor able to modify their default delivery and invoice addresses."
        },
        "canChangeAddressOnPlaceOrder": {
          "type": "boolean",
          "description": "Is the distributor able to set their own delivery and invoice addresses during the order process."
        }
      }
    },
    "responseGetDefaultAddresses": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetDefaultAddress"
          },
          "description": "A list of default addresses."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the company."
        },
        "type": {
          "$ref": "#/definitions/enumCompanyType"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "info": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the company."
            },
            "description": {
              "type": "string",
              "description": "Additional info about the company."
            },
            "vatNumber": {
              "type": "string",
              "description": "VAT number of the company."
            },
            "email": {
              "type": "string",
              "description": "E-mail address of the company."
            },
            "telephone": {
              "type": "string",
              "description": "Phone number of the company."
            },
            "websiteUrl": {
              "type": "string",
              "description": "URL to the website of the company."
            },
            "preferredLanguage": {
              "type": "string",
              "description": "The language of the company in ISO 639-1 format."
            },
            "address": {
              "$ref": "#/definitions/address"
            },
            "externalSystemId1": {
              "type": "string",
              "description": "An ID used to identify the company in an external system."
            },
            "externalSystemId2": {
              "type": "string",
              "description": "An ID used to identify the company in an external system."
            }
          },
          "description": "General info about the company."
        },
        "subDistributorSettings": {
          "type": "object",
          "description": "These settings are included for sub-distributor companies",
          "properties": {
            "distributor": {
              "$ref": "#/definitions/companyLink"
            },
            "orderEmails": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "An order email"
              },
              "description": "All sub-distributor e-mails which receive order e-mails."
            }
          }
        },
        "archived": {
          "type": "boolean",
          "description": "archived"
        }
      }
    },
    "responseGetCompanies": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetCompany"
          },
          "description": "A list of companies."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetInvites": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of an invite."
              },
              "status": {
                "$ref": "#/definitions/enumInviteStatus"
              },
              "toEmail": {
                "type": "string",
                "description": "The e-mail address to which the invite was sent."
              },
              "createdAt": {
                "$ref": "#/definitions/createdAt"
              },
              "claimedAt": {
                "type": "string",
                "description": "The date when the invite was claimed in ISO-8601 format."
              },
              "inviteUrl": {
                "type": "string",
                "description": "The URL where the invite can be claimed."
              },
              "fromContact": {
                "$ref": "#/definitions/contactLink"
              },
              "toContact": {
                "$ref": "#/definitions/contactLink"
              }
            }
          },
          "description": "A list of invites."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetContact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The contact ID."
        },
        "firstName": {
          "type": "string",
          "description": "First name of contact."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the contact."
        },
        "email": {
          "type": "string",
          "description": "E-mail address of the contact."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact."
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone number of the contact."
        },
        "preferredLanguage": {
          "type": "string",
          "description": "Language of the user in ISO 639-1 format."
        },
        "functionTitle": {
          "type": "string",
          "description": "The job title of the contact."
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "salutation": {
          "type": "string",
          "description": "Salutation of the contact."
        },
        "externalSystemId": {
          "type": "string",
          "description": "ID used to identify the contact in an external system"
        },
        "avatarUrl": {
          "type": "string",
          "description": "A URL to the avatar of the contact."
        },
        "company": {
          "$ref": "#/definitions/companyLink"
        },
        "archived": {
          "type": "boolean",
          "description": "Archival status of the contact."
        },
        "roles": {
          "$ref": "#/definitions/roleLinks"
        },
        "userAccount": {
          "$ref": "#/definitions/userAccountLink"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        }
      }
    },
    "responseGetContacts": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetContact"
          },
          "description": "A list of contacts."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComponentProperties": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseComponentProperty"
          },
          "description": "A list of property values."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComponentAttachments": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of an attachment."
              },
              "fileUrl": {
                "type": "string",
                "description": "Publicly accessible URL of an attachment."
              },
              "fileName": {
                "type": "string",
                "description": "File name of the attachment."
              }
            }
          },
          "description": "A list of component attachments."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComponentPrices": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of a component price."
              },
              "priceCatalog": {
                "$ref": "#/definitions/priceCatalogLink"
              },
              "unit": {
                "$ref": "#/definitions/unitLink"
              },
              "costPrice": {
                "type": "number",
                "format": "float",
                "description": "The cost price."
              },
              "listPrice": {
                "type": "number",
                "format": "float",
                "description": "The list price."
              },
              "purchasePrice": {
                "type": "number",
                "format": "float",
                "description": "The purchase price."
              },
              "subDistributorPurchasePrice": {
                "type": "number",
                "format": "float",
                "description": "The sub-distributor purchase price."
              },
              "currency": {
                "type": "string",
                "description": "The currency in ISO 4217 format."
              }
            }
          },
          "description": "A list of component prices."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responsePostBulkUpsertComponentPrices": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "description": "A list of result items.",
          "items": {
            "type": "object",
            "description": "A result with information about the corresponding items of the initial request.",
            "properties": {
              "itemId": {
                "type": "string",
                "description": "The custom identifier of this item."
              },
              "status": {
                "$ref": "#/definitions/enumBulkResponseStatus"
              },
              "message": {
                "type": "string",
                "description": "Message with additional information if the item failed to be handled."
              }
            }
          }
        },
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of successfully handled items."
        }
      }
    },
    "responseGetComponentTooltip": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of a component tooltip."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable displaying the tooltip."
        },
        "titles": {
          "$ref": "#/definitions/responseTranslations"
        },
        "details": {
          "$ref": "#/definitions/responseTranslations"
        }
      }
    },
    "responsePutComponentTooltip": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the tooltip."
        }
      }
    },
    "responseGetComponent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the component."
        },
        "articleCode": {
          "type": "string",
          "description": "Unique article code of the component."
        },
        "eanCode": {
          "type": "string",
          "description": "The European Article Number of the component."
        },
        "gtinCode": {
          "type": "string",
          "description": "The Global Trade Item Number of the component."
        },
        "scriptPrice": {
          "type": "string",
          "description": "An optional pricing script."
        },
        "unitCode": {
          "$ref": "#/definitions/unitLink"
        },
        "productGroup": {
          "type": "string",
          "description": "Group of the component."
        },
        "showOnlyForSerialNumber": {
          "type": "boolean",
          "description": "Indicates if the component can only be accessed in the product store through serial number searches."
        },
        "minimumQuantity": {
          "type": "integer",
          "description": "The minimum quantity which needs to be used when adding this component to a project."
        },
        "name": {
          "$ref": "#/definitions/responseTranslations"
        },
        "description": {
          "$ref": "#/definitions/responseTranslations"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "priceCatalogs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The currency in ISO 4217 format."
              },
              "unitCode": {
                "type": "string",
                "description": "The unique code of a unit."
              },
              "costPrice": {
                "type": "number",
                "format": "float",
                "description": "The cost price."
              },
              "listPrice": {
                "type": "number",
                "format": "float",
                "description": "The list price."
              },
              "purchasePrice": {
                "type": "number",
                "format": "float",
                "description": "The purchase price."
              },
              "subDistributorPurchasePrice": {
                "type": "number",
                "format": "float",
                "description": "The sub-distributor purchase price."
              },
              "price": {
                "type": "number",
                "format": "float",
                "title": "price (deprecated)",
                "description": "The list price. (Deprecated, use listPrice instead)"
              },
              "id": {
                "type": "string",
                "description": "ID of the price catalog."
              },
              "href": {
                "$ref": "#/definitions/linkHref"
              },
              "name": {
                "type": "string",
                "description": "Unique name of the price catalog."
              }
            }
          },
          "description": "The prices linked to the component."
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryLink"
          },
          "description": "A list of categories linked to the component."
        },
        "explodedViews": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "$ref": "#/definitions/categoryLink"
              },
              "explodedViewArea": {
                "type": "string",
                "description": "The exploded view area."
              }
            }
          },
          "description": "A list of exploded views linked to the component."
        },
        "configurable": {
          "type": "object",
          "properties": {
            "configurator": {
              "$ref": "#/definitions/configuratorLink"
            },
            "parameters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The identifier of a configurator input value."
                  },
                  "value": {
                    "type": "string",
                    "description": "The configurator input value."
                  }
                },
                "description": "The input values for the configurator."
              },
              "description": "Information about the component if it has been configured as a configurable product."
            }
          },
          "description": "configurable"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/featureLink"
          },
          "description": "A list of features linked to the component."
        }
      }
    },
    "responseGetComponents": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the component."
              },
              "name": {
                "type": "string",
                "description": "Translated name of the component."
              },
              "description": {
                "type": "string",
                "description": "Translated description of the component."
              },
              "articleCode": {
                "type": "string",
                "description": "Unique article code of the component."
              },
              "eanCode": {
                "type": "string",
                "description": "The European Article Number of the component."
              },
              "gtinCode": {
                "type": "string",
                "description": "The Global Trade Item Number of the component."
              },
              "unitCode": {
                "$ref": "#/definitions/unitLink"
              },
              "productGroup": {
                "type": "string",
                "description": "Group of the component."
              },
              "showOnlyForSerialNumber": {
                "type": "boolean",
                "description": "Indicates if the component can only be accessed in the product store through serial number searches."
              },
              "minimumQuantity": {
                "type": "integer",
                "description": "The minimum quantity which needs to be used when adding this component to a project."
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              },
              "configurable": {
                "type": "boolean",
                "description": "Indicates if a configurator is linked."
              }
            }
          },
          "description": "A list of components."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetProperties": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the property."
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "code": {
                "type": "string",
                "description": "Unique code of the property."
              },
              "type": {
                "$ref": "#/definitions/enumComponentPropertyType"
              },
              "arrayType": {
                "$ref": "#/definitions/enumComponentPropertyArrayType"
              },
              "info": {
                "type": "string",
                "description": "Additional info about the property."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of properties."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetFeature": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the feature."
        },
        "code": {
          "type": "string",
          "description": "Unique code of the feature."
        },
        "descriptions": {
          "$ref": "#/definitions/responseTranslations"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "serialSearchFunction": {
          "type": "string",
          "description": "The JavaScript function which determines component visibility in the product store."
        }
      }
    },
    "responseGetFeatures": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the feature."
              },
              "code": {
                "type": "string",
                "description": "Unique code of the feature."
              },
              "description": {
                "type": "string",
                "description": "Translated description of the feature."
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "serialSearchFunction": {
                "type": "string",
                "description": "The JavaScript function which determines component visibility in the product store."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of features."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetFeatureGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the feature group."
        },
        "code": {
          "type": "string",
          "description": "Unique code of the feature group."
        },
        "descriptions": {
          "$ref": "#/definitions/responseTranslations"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        }
      }
    },
    "responseGetFeatureGroups": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the feature group."
              },
              "code": {
                "type": "string",
                "description": "Unique code of the feature group."
              },
              "description": {
                "type": "string",
                "description": "Translated description of the feature group."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              }
            }
          },
          "description": "A list of feature groups."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the unit."
        },
        "code": {
          "type": "string",
          "description": "Unique code of the unit."
        },
        "names": {
          "$ref": "#/definitions/responseTranslations"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        }
      }
    },
    "responseGetUnits": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the unit."
              },
              "code": {
                "type": "string",
                "description": "Unique code of the unit."
              },
              "name": {
                "type": "string",
                "description": "Translated name of the unit."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              }
            }
          },
          "description": "A list of units."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetCustomObjectTypes": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "A custom object type.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Name of the custom object type."
              },
              "href": {
                "type": "string",
                "description": "A URL to this type."
              }
            }
          },
          "description": "A list of custom object types."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetCustomObject": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The ID of a customer object."
        },
        "href": {
          "type": "string",
          "description": "A URL to retrieve the custom object."
        },
        "keyValues": {
          "type": "array",
          "description": "A list of keys and values of the custom object.",
          "items": {
            "$ref": "#/definitions/customObjectKeyValuePair"
          }
        }
      }
    },
    "responseGetCustomObjects": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetCustomObject"
          },
          "description": "A list of custom objects."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the project."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "projectSegments": {
          "$ref": "#/definitions/projectSegmentLinks"
        },
        "name": {
          "type": "string",
          "description": "Name of the project."
        },
        "sellToCustomerReference": {
          "type": "string",
          "description": "The customer reference."
        },
        "sellTo": {
          "type": "object",
          "properties": {
            "company": {
              "$ref": "#/definitions/companyLink"
            },
            "contact": {
              "$ref": "#/definitions/contactLink"
            }
          },
          "description": "General information about the end customer to which the project is sold."
        },
        "invoice": {
          "type": "object",
          "properties": {
            "company": {
              "$ref": "#/definitions/companyLink"
            },
            "contact": {
              "$ref": "#/definitions/contactLink"
            }
          },
          "description": "General information about the invoicing."
        },
        "delivery": {
          "type": "object",
          "properties": {
            "company": {
              "$ref": "#/definitions/companyLink"
            },
            "contact": {
              "$ref": "#/definitions/contactLink"
            }
          },
          "description": "General information about the delivery."
        },
        "installation": {
          "type": "object",
          "properties": {
            "company": {
              "$ref": "#/definitions/companyLink"
            },
            "contact": {
              "$ref": "#/definitions/contactLink"
            }
          },
          "description": "General information about the installation."
        },
        "salesConditions": {
          "type": "object",
          "properties": {
            "vatCondition": {
              "type": "string",
              "description": "The VAT condition code of the project."
            },
            "vatPercentage": {
              "type": "string",
              "description": "The VAT percentage of the project."
            },
            "deliveryCondition": {
              "type": "string",
              "description": "The delivery condition code of the project."
            },
            "paymentCondition": {
              "type": "string",
              "description": "The payment condition code of the project."
            }
          },
          "description": "General information about the sales conditions"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        }
      }
    },
    "responseGetProjects": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetProject"
          },
          "description": "A list of projects."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetProjectSegment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the project segment."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "projectSegmentItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/projectSegmentItemLink"
          },
          "description": "projectSegmentItems"
        },
        "project": {
          "$ref": "#/definitions/projectLink"
        },
        "order": {
          "type": "object",
          "properties": {
            "orderStatus": {
              "$ref": "#/definitions/enumProjectSegmentOrderStatus"
            },
            "moveToStep1At": {
              "type": "string",
              "description": "Timestamp when the project was last moved to step 1."
            },
            "moveToStep2At": {
              "type": "string",
              "description": "Timestamp when the project was last moved to step 2."
            },
            "moveToStep3At": {
              "type": "string",
              "description": "Timestamp when the project was last moved to step 3."
            },
            "moveToStep4At": {
              "type": "string",
              "description": "Timestamp when the project was last moved to step 4."
            },
            "orderRemark": {
              "type": "string",
              "description": "Remark on the order."
            },
            "orderRemarkFromManufacturer": {
              "type": "string",
              "description": "Remark of the manufacturer on the order."
            },
            "shippingDateRequested": {
              "type": "string",
              "description": "The requested date in ISO-8601 format."
            },
            "shippingDateConfirmed": {
              "type": "string",
              "description": "The confirmed date in ISO-8601 format."
            },
            "customerPoRef": {
              "type": "string",
              "description": "The purchase order reference of the customer."
            },
            "manufacturerSoRef": {
              "type": "string",
              "description": "The sales order reference of the manufacturer."
            },
            "manufacturerReference": {
              "type": "string",
              "description": "Reference for the manufacturer."
            },
            "delivery": {
              "$ref": "#/definitions/companyContact"
            },
            "invoice": {
              "$ref": "#/definitions/companyContact"
            },
            "sellTo": {
              "$ref": "#/definitions/companyContact"
            },
            "installation": {
              "$ref": "#/definitions/companyContact"
            },
            "salesCondition": {
              "type": "object",
              "properties": {
                "vatCondition": {
                  "type": "string",
                  "description": "The VAT condition code of the order."
                },
                "vatPercentage": {
                  "type": "string",
                  "description": "The VAT percentage of the order."
                },
                "deliveryCondition": {
                  "type": "string",
                  "description": "The delivery condition code of the order."
                },
                "paymentCondition": {
                  "type": "string",
                  "description": "The payment condition code of the order."
                }
              },
              "description": "Information about the sales conditions of the order."
            },
            "orderSenderContact": {
              "$ref": "#/definitions/contactLink"
            },
            "orderReceiverContact": {
              "$ref": "#/definitions/contactLink"
            }
          },
          "description": "order"
        },
        "price": {
          "$ref": "#/definitions/responsePrice"
        },
        "companyRelation": {
          "type": "object",
          "properties": {
            "companyAId": {
              "type": "string",
              "description": "The manufacturer ID."
            },
            "companyBId": {
              "type": "string",
              "description": "The distributor ID."
            }
          },
          "description": "The relation between the manufacturer and distributor of the order."
        },
        "companyASalesManager": {
          "$ref": "#/definitions/contactLink"
        },
        "companyBSalesManager": {
          "$ref": "#/definitions/contactLink"
        },
        "status": {
          "$ref": "#/definitions/enumProjectSegmentStatus"
        },
        "nextFollowUpDate": {
          "type": "string",
          "description": "The next follow up date in ISO-8601 format."
        },
        "estimatedSalesDate": {
          "type": "string",
          "description": "The estimated sales date in ISO-8601 format."
        },
        "freeTextNote": {
          "type": "string",
          "description": "A note on the segment."
        },
        "saleProbability": {
          "type": "integer",
          "description": "The sale probability."
        },
        "externalOrderStatus": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "An external status of the order."
            },
            "statusUrl": {
              "type": "string",
              "description": "A URL users may use to check on the external order status or view shipment info about their order."
            },
            "statusText": {
              "type": "string",
              "description": "Custom text displayed for the shipment info."
            }
          },
          "description": "The external shipping information."
        },
        "orderGroup": {
          "type": "string",
          "description": "The order group."
        },
        "configurationStatus": {
          "$ref": "#/definitions/enumConfigurationStatus"
        },
        "configuration": {
          "$ref": "#/definitions/configurationLink"
        },
        "subDistributor": {
          "$ref": "#/definitions/companyLink"
        }
      }
    },
    "responseGetProjectSegments": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetProjectSegment"
          },
          "description": "A list of segments."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetProjectSegmentAttachments": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the project segment attachment."
              },
              "fileName": {
                "type": "string",
                "description": "File name of the project segment attachment."
              },
              "fileUrl": {
                "type": "string",
                "description": "Publicly accessible URL of the project segment attachment."
              },
              "distributorFile": {
                "type": "boolean",
                "description": "Is the project segment attachment owned by the distributor."
              }
            }
          },
          "description": "A list of project segment attachments."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetProjectSegmentItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the project segment item."
        },
        "name": {
          "type": "string",
          "description": "Name of the project segment item."
        },
        "type": {
          "$ref": "#/definitions/enumProjectSegmentItemType"
        },
        "configurationStatus": {
          "$ref": "#/definitions/enumConfigurationStatus"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of this item used to calculate the total price."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "price": {
          "$ref": "#/definitions/responsePrice"
        },
        "externalSerialNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identifiers of the item in an external system."
        },
        "component": {
          "$ref": "#/definitions/componentLink"
        },
        "productGroup": {
          "type": "string",
          "description": "Group of the item."
        },
        "project": {
          "$ref": "#/definitions/projectLink"
        },
        "orderSerialNumberMatched": {
          "type": "boolean",
          "description": "Is the order serial number matched?"
        },
        "projectSegment": {
          "$ref": "#/definitions/projectSegmentLink"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "shippingSchedule": {
          "$ref": "#/definitions/shippingScheduleLink"
        },
        "configuration": {
          "$ref": "#/definitions/configurationLink"
        }
      }
    },
    "responseGetProjectSegmentItems": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetProjectSegmentItem"
          },
          "description": "A list of project segment items."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetIntegratedSystemLinks": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the integrated system link."
              },
              "integratedSystemName": {
                "type": "string",
                "description": "Name of the external system."
              },
              "integratedSystemId": {
                "type": "string",
                "description": "ID of the resource in the external system."
              },
              "hiveId": {
                "type": "string",
                "description": "ID of the HiveCPQ resource."
              },
              "createdAt": {
                "$ref": "#/definitions/createdAt"
              },
              "updatedAt": {
                "$ref": "#/definitions/updatedAt"
              }
            }
          },
          "description": "A list of integrated system links."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetDistributorAccounts": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the distributor account."
              },
              "info": {
                "$ref": "#/definitions/distributorAccountInfo"
              },
              "address": {
                "$ref": "#/definitions/address"
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of distributor accounts."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetDistributorContacts": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the distributor contact."
              },
              "info": {
                "$ref": "#/definitions/distributorContactInfo"
              },
              "address": {
                "$ref": "#/definitions/address"
              },
              "salesConditions": {
                "$ref": "#/definitions/distributorContactSalesConditions"
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of distributor contacts."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetWebhookHeaders": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the webhook header."
              },
              "key": {
                "type": "string",
                "description": "Key used in an HTTP header during a webhook callback."
              },
              "value": {
                "type": "string",
                "description": "Value used for the key in an HTTP header during a webhook callback."
              }
            }
          },
          "description": "A list of webhooks headers."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetWebhookEventSubscriptions": {
      "type": "object",
      "properties": {
        "eventSubscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enumWebhookEventSubscription"
          },
          "description": "A list of platform events to which the webhook is subscribed."
        }
      }
    },
    "responseGetWebhookTrigger": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the trigger."
        },
        "code": {
          "type": "string",
          "description": "Unique code of the trigger."
        },
        "names": {
          "$ref": "#/definitions/responseTranslations"
        },
        "confirmations": {
          "$ref": "#/definitions/responseTranslations"
        },
        "confirmationRequired": {
          "type": "boolean",
          "description": "Indicates if a confirmation modal will be shown when a webhook trigger is activated."
        },
        "openInSameTab": {
          "type": "boolean",
          "description": "Indicates if webhook triggers of the OPEN_URL type open the URL in the same or a different browser tab."
        },
        "location": {
          "$ref": "#/definitions/enumWebhookTriggerLocation"
        },
        "type": {
          "$ref": "#/definitions/enumWebhookTriggerType"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The permission ID."
              },
              "code": {
                "type": "string",
                "description": "The unique code of the permission."
              }
            }
          },
          "description": "A list of permission with access to the trigger."
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        }
      }
    },
    "responseGetWebhookTriggers": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the trigger."
              },
              "code": {
                "type": "string",
                "description": "Unique code of the trigger."
              },
              "name": {
                "type": "string",
                "description": "The translated name of the trigger."
              },
              "confirmation": {
                "type": "string",
                "description": "The translated confirmation text of the trigger."
              },
              "confirmationRequired": {
                "type": "boolean",
                "description": "Indicates if a confirmation modal will be shown when a webhook trigger is activated."
              },
              "location": {
                "$ref": "#/definitions/enumWebhookTriggerLocation"
              },
              "type": {
                "$ref": "#/definitions/enumWebhookTriggerType"
              },
              "openInSameTab": {
                "type": "boolean",
                "description": "Indicates if webhook triggers of the OPEN_URL type open the URL in the same or a different browser tab."
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The permission ID."
                    },
                    "code": {
                      "type": "string",
                      "description": "Unique code of the permission."
                    }
                  }
                },
                "description": "A list of permissions with access to the trigger."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of webhook triggers."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetWebhook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the webhook."
        },
        "code": {
          "type": "string",
          "description": "Unique code of the webhook."
        },
        "url": {
          "type": "string",
          "description": "Callback URL of the webhook."
        },
        "description": {
          "type": "string",
          "description": "Additional info about the webhook."
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        }
      }
    },
    "responseGetWebhooks": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetWebhook"
          },
          "description": "A list of webhooks."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetPriceCatalog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the price catalog."
        },
        "name": {
          "type": "string",
          "description": "Unique name of the price catalog."
        },
        "defaultPriceCatalog": {
          "type": "boolean",
          "description": "Indicates if this is the default price catalog."
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        }
      }
    },
    "responseGetPriceCatalogs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetPriceCatalog"
          },
          "description": "A list of price catalogs."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComplaintComments": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the complaint comment."
              },
              "comment": {
                "type": "string",
                "description": "Content of the complaint comment."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              }
            }
          },
          "description": "A list of complaint comments."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComplaintAttachments": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the complaint attachment."
              },
              "fileName": {
                "type": "string",
                "description": "File name of the complaint attachment."
              },
              "contentType": {
                "type": "string",
                "description": "Content-Type of the complaint attachment."
              }
            }
          },
          "description": "A list of complaint attachments."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetComplaint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the complaint."
        },
        "title": {
          "type": "string",
          "description": "Title of the complaint."
        },
        "description": {
          "type": "string",
          "description": "Additional info about the complaint."
        },
        "status": {
          "$ref": "#/definitions/enumComplaintStatus"
        },
        "type": {
          "$ref": "#/definitions/enumComplaintType"
        },
        "company": {
          "$ref": "#/definitions/companyLink"
        },
        "orderReference": {
          "type": "string",
          "description": "Order reference of the complaint"
        },
        "claimNumber": {
          "type": "string",
          "description": "Claim number of the complaint."
        },
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "articleNumber": {
                "type": "string",
                "description": "The identifier of an article."
              },
              "quantity": {
                "type": "integer",
                "format": "int32",
                "description": "The quantity of the article."
              }
            }
          },
          "description": "The articles of the complaint."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        },
        "audit": {
          "$ref": "#/definitions/responseAudit"
        }
      }
    },
    "responseGetComplaints": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseGetComplaint"
          },
          "description": "A list of complaints."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetUserAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user account."
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/contactLink"
          },
          "description": "A list of contacts connected to the user account."
        },
        "lastActiveAt": {
          "type": "string",
          "description": "Last login timestamp of the user account in ISO-8601 format."
        }
      }
    },
    "responseGetRoles": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the role."
              },
              "name": {
                "type": "string",
                "description": "Unique name of the role."
              },
              "description": {
                "type": "string",
                "description": "Additional information about the role."
              },
              "roleType": {
                "type": "string",
                "enum": [
                  "SYSTEM",
                  "CUSTOM"
                ],
                "description": "Type of the role"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "PUBLIC",
                  "RESTRICTED"
                ],
                "description": "Visibility of the role."
              },
              "defaultRoleForManufacturerCompany": {
                "type": "boolean",
                "description": "Is the role configured as default for new manufacturer users?"
              },
              "defaultRoleForDistributorCompanies": {
                "type": "boolean",
                "description": "Is the role configured as default for new distributor users?"
              },
              "companyId": {
                "type": "string",
                "description": "ID of the company which owns the role."
              }
            }
          },
          "description": "A list of roles."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetPermissions": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the permission."
              },
              "code": {
                "type": "string",
                "description": "Unique code of the permission."
              }
            }
          },
          "description": "A list of permissions."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetSalesConditions": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Unique condition code."
              },
              "name": {
                "type": "string",
                "description": "Translated name of the condition. "
              }
            }
          },
          "description": "A list of sales conditions."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetOutputDocumentTemplates": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the template."
              },
              "name": {
                "type": "string",
                "description": "Name of the template."
              },
              "languageCodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Language code in ISO 639-1 format."
                },
                "description": "The available language codes for this template in ISO 639-1 format."
              },
              "audit": {
                "$ref": "#/definitions/responseAudit"
              },
              "type": {
                "$ref": "#/definitions/enumOutputDocumentTemplateType"
              }
            }
          },
          "description": "A list of output document templates."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetEvents": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "eventId": {
                "type": "string",
                "description": "ID of the event."
              },
              "eventType": {
                "$ref": "#/definitions/enumWebhookEventSubscription"
              },
              "eventGroup": {
                "$ref": "#/definitions/enumEventGroup"
              },
              "translationLabel": {
                "type": "string",
                "description": "The translation label of the event."
              },
              "data": {
                "type": "object",
                "additionalProperties": true,
                "description": "Data of the event"
              },
              "userAccountId": {
                "type": "string",
                "description": "ID of the user account that initiated the event."
              },
              "translationParams": {
                "type": "string",
                "description": "Parameters used to translate the event label."
              },
              "occurrenceTimestamp": {
                "type": "string",
                "description": "The timestamp when the event happened."
              },
              "removalTimestamp": {
                "type": "string",
                "description": "The timestamp when the event will be removed."
              },
              "distributorIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "ID of a distributor."
                },
                "description": "IDs of distributors."
              }
            }
          },
          "description": "List of platform events."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetPluginToken": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "ID of the contact."
              },
              "email": {
                "type": "string",
                "description": "E-mail of the contact."
              },
              "companyId": {
                "type": "string",
                "description": "ID of the company the contact is a part of."
              },
              "companyName": {
                "type": "string",
                "description": "Name of the company the contact is a part of."
              },
              "externalLinks": {
                "$ref": "#/definitions/externalLinks"
              },
              "userAccount": {
                "$ref": "#/definitions/userAccountLink"
              }
            }
          },
          "description": "A list of contacts."
        }
      }
    },
    "responseGetManufacturers": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the manufacturer."
              },
              "name": {
                "type": "string",
                "description": "Name of the manufacturer."
              }
            }
          },
          "description": "A list of manufacturers."
        },
        "total": {
          "$ref": "#/definitions/responseTotalCount"
        }
      }
    },
    "responseGetConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the configuration"
        },
        "configurationStatus": {
          "$ref": "#/definitions/enumConfigurationStatus"
        },
        "configurator": {
          "$ref": "#/definitions/configuratorLink"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseConfigurationNode"
          },
          "description": "A collection of configuration nodes."
        },
        "price": {
          "type": "object",
          "properties": {
            "purchasePrice": {
              "type": "number",
              "format": "float",
              "description": "Purchase price of the configuration."
            },
            "listPrice": {
              "type": "number",
              "format": "float",
              "description": "List price of the configuration."
            },
            "currency": {
              "type": "string",
              "description": "Currency of the configuration in ISO 4217 format."
            },
            "numberOfDecimals": {
              "type": "integer",
              "description": "The decimal precision of the prices."
            }
          },
          "description": "Pricing information of the configuration."
        },
        "externalLinks": {
          "$ref": "#/definitions/externalLinks"
        }
      }
    },
    "responseHiveError": {
      "type": "object",
      "properties": {
        "hiveError": {
          "type": "string",
          "description": "The error that occurred."
        },
        "user": {
          "type": "string",
          "description": "The user who experienced the error."
        },
        "severity": {
          "type": "string",
          "description": "The severity of the error."
        },
        "errorCode": {
          "type": "number",
          "description": "An error code for troubleshooting."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "responseAudit": {
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/contactLink"
        },
        "createdAt": {
          "$ref": "#/definitions/createdAt"
        },
        "updatedBy": {
          "$ref": "#/definitions/contactLink"
        },
        "updatedAt": {
          "$ref": "#/definitions/updatedAt"
        }
      },
      "description": "The audit information."
    },
    "responseTotalCount": {
      "type": "integer",
      "format": "int32",
      "description": "The total number of results."
    }
  },
  "parameters": {
    "headerContentTypeApplicationJson": {
      "in": "header",
      "name": "Content-Type",
      "x-ms-summary": "Content-Type Header",
      "x-ms-visibility": "internal",
      "description": "The data format of the action input.",
      "type": "string",
      "default": "application/json",
      "required": true
    },
    "headerContentTypeMultipartFormData": {
      "in": "header",
      "name": "Content-Type",
      "x-ms-summary": "Content-Type Header",
      "x-ms-visibility": "internal",
      "description": "The data format of the action input.",
      "type": "string",
      "default": "multipart/form-data",
      "required": true
    },
    "headerAcceptWildcard": {
      "in": "header",
      "name": "Accept",
      "x-ms-summary": "Accept header",
      "x-ms-visibility": "internal",
      "description": "The expected data format of the action output.",
      "type": "string",
      "default": "*/*",
      "required": true
    },
    "headerAcceptApplicationOctetStream": {
      "in": "header",
      "name": "Accept",
      "x-ms-summary": "Accept Header",
      "x-ms-visibility": "internal",
      "description": "The expected data format of the action output.",
      "type": "string",
      "default": "application/octet-stream",
      "required": true
    },
    "pathManufacturerId": {
      "in": "path",
      "name": "manufacturerId",
      "x-ms-summary": "Manufacturer ID",
      "description": "ID of the manufacturer company to which you are connecting.",
      "type": "string",
      "required": true
    },
    "pathConfigurationId": {
      "in": "path",
      "name": "configurationId",
      "x-ms-summary": "Configuration ID",
      "description": "ID of the configuration you want to access.",
      "type": "string",
      "required": true
    },
    "pathProjectSegmentItemId": {
      "in": "path",
      "name": "projectSegmentItemId",
      "x-ms-summary": "Project Segment Item ID",
      "description": "ID of the project segment item you want to access.",
      "type": "string",
      "required": true
    },
    "pathCompanyId": {
      "in": "path",
      "name": "companyId",
      "x-ms-summary": "Company ID",
      "description": "ID of the company you want to access.",
      "type": "string",
      "required": true
    },
    "pathAccountId": {
      "in": "path",
      "name": "accountId",
      "x-ms-summary": "Account ID",
      "description": "ID of the account you want to access.",
      "type": "string",
      "required": true
    },
    "pathDistributorId": {
      "in": "path",
      "name": "distributorId",
      "x-ms-summary": "Distributor ID",
      "description": "ID of the distributor you want to access.",
      "type": "string",
      "required": true
    },
    "pathDefaultAddressId": {
      "in": "path",
      "name": "defaultAddressId",
      "x-ms-summary": "Default Address ID",
      "description": "ID of the default address you want to access.",
      "type": "string",
      "required": true
    },
    "pathContactId": {
      "in": "path",
      "name": "contactId",
      "x-ms-summary": "Contact ID",
      "description": "ID of the contact you want to access.",
      "type": "string",
      "required": true
    },
    "pathName": {
      "in": "path",
      "name": "name",
      "x-ms-summary": "Container Name",
      "description": "Name of the container you want to access.",
      "type": "string",
      "default": "main",
      "required": true
    },
    "pathVersion": {
      "in": "path",
      "name": "version",
      "x-ms-summary": "Container Version",
      "description": "Number of the version (e.g. 1.0.0) you want to access. Providing 'top' accesses the highest available version.",
      "type": "string",
      "default": "top",
      "required": true
    },
    "pathComponentId": {
      "in": "path",
      "name": "componentId",
      "x-ms-summary": "Component ID",
      "description": "ID of the component you want to access.",
      "type": "string",
      "required": true
    },
    "pathPropertyId": {
      "in": "path",
      "name": "propertyId",
      "x-ms-summary": "Property ID",
      "description": "ID of the property you want to access.",
      "type": "string",
      "required": true
    },
    "pathFeatureGroupId": {
      "in": "path",
      "name": "featureGroupId",
      "x-ms-summary": "Feature Group ID",
      "description": "ID of the feature group you want to access.",
      "type": "string",
      "required": true
    },
    "pathFeatureId": {
      "in": "path",
      "name": "featureId",
      "x-ms-summary": "Feature ID",
      "description": "ID of the feature you want to access.",
      "type": "string",
      "required": true
    },
    "pathUnitId": {
      "in": "path",
      "name": "unitId",
      "x-ms-summary": "Unit ID",
      "description": "ID of the unit you want to access.",
      "type": "string",
      "required": true
    },
    "pathPriceCatalogId": {
      "in": "path",
      "name": "priceCatalogId",
      "x-ms-summary": "Price Catalog ID",
      "description": "ID of the catalog you want to access.",
      "type": "string",
      "required": true
    },
    "pathCustomObjectType": {
      "in": "path",
      "name": "customObjectType",
      "x-ms-summary": "Custom Object Type",
      "description": "Name of the custom object type you want to access.",
      "type": "string",
      "required": true
    },
    "pathCustomObjectKey": {
      "in": "path",
      "name": "customObjectKey",
      "x-ms-summary": "Custom Object ID",
      "description": "ID of the custom object you want to access.",
      "type": "string",
      "required": true
    },
    "pathProjectId": {
      "in": "path",
      "name": "projectId",
      "x-ms-summary": "Project ID",
      "description": "ID of the project you want to access.",
      "type": "string",
      "required": true
    },
    "pathProjectSegmentId": {
      "in": "path",
      "name": "projectSegmentId",
      "x-ms-summary": "Project Segment ID",
      "description": "ID of the project segment you want to access.",
      "type": "string",
      "required": true
    },
    "pathIntegratedSystemLinkId": {
      "in": "path",
      "name": "integratedSystemLinkId",
      "x-ms-summary": "Integrated System Link ID",
      "description": "ID of the integrated system link you want to access.",
      "type": "string",
      "required": true
    },
    "pathWebhookId": {
      "in": "path",
      "name": "webhookId",
      "x-ms-summary": "Webhook ID",
      "description": "ID of the webhook you want to access.",
      "type": "string",
      "required": true
    },
    "pathWebhookHeaderId": {
      "in": "path",
      "name": "headerId",
      "x-ms-summary": "Webhook Header ID",
      "description": "ID of the webhook header you want to access.",
      "type": "string",
      "required": true
    },
    "pathWebhookTriggerId": {
      "in": "path",
      "name": "webhookTriggerId",
      "x-ms-summary": "Webhook Trigger ID",
      "description": "ID of the webhook trigger you want to access.",
      "type": "string",
      "required": true
    },
    "pathComplaintId": {
      "in": "path",
      "name": "complaintId",
      "x-ms-summary": "Complaint ID",
      "description": "ID of the complaint you want to access.",
      "type": "string",
      "required": true
    },
    "pathAttachmentId": {
      "in": "path",
      "name": "attachmentId",
      "x-ms-summary": "Attachment ID",
      "description": "ID of the attachment you want to access.",
      "type": "string",
      "required": true
    },
    "queryIdsIn": {
      "in": "query",
      "name": "idsIn",
      "x-ms-summary": "By IDs",
      "description": "Filter on the IDs of the items.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "queryIntegratedSystemIdsIn": {
      "in": "query",
      "name": "integratedSystemIdsIn",
      "x-ms-summary": "Integrated System IDs",
      "description": "Filter on the integrated system ID of the items. This must be used together with the integrated system name filter.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "queryIntegratedSystemName": {
      "in": "query",
      "name": "integratedSystemName",
      "x-ms-summary": "Integrated System Name",
      "description": "Filter on the integrated system name of the items.",
      "type": "string"
    },
    "queryIntegratedSystemIdsInRequired": {
      "in": "query",
      "name": "integratedSystemIdsIn",
      "x-ms-summary": "Integrated System IDs",
      "description": "Filter on the integrated system ID of the items. This must be used together with the integrated system name filter.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true
    },
    "queryIntegratedSystemNameRequired": {
      "in": "query",
      "name": "integratedSystemName",
      "x-ms-summary": "Integrated System Name",
      "description": "Filter on the integrated system name of the items.",
      "type": "string",
      "required": true
    },
    "queryPageIn": {
      "in": "query",
      "name": "page",
      "x-ms-summary": "Page Number",
      "description": "View a page of the collection.",
      "type": "integer",
      "default": 0
    },
    "queryPageSize": {
      "in": "query",
      "name": "pageSize",
      "x-ms-summary": "Page Size",
      "description": "Control the size of the returned page.",
      "type": "integer",
      "default": 10
    },
    "queryCompanyId": {
      "name": "companyId",
      "in": "query",
      "x-ms-summary": "Company ID",
      "description": "Filter on the company of the items.",
      "type": "string"
    },
    "queryUpdatedBefore": {
      "in": "query",
      "name": "updatedBefore",
      "x-ms-summary": "Updated Before",
      "description": "Retrieve all results which were updated before the specified time.",
      "type": "string",
      "format": "date-time"
    },
    "queryUpdatedSince": {
      "in": "query",
      "name": "updatedSince",
      "x-ms-summary": "Last Updated Since",
      "description": "Retrieve all results which were last updated no sooner than the specified time.",
      "type": "string",
      "format": "date-time"
    },
    "queryLanguage": {
      "name": "language",
      "in": "query",
      "x-ms-summary": "Language",
      "description": "Specify the ISO 639-1 language code in which translated fields should be returned. If not provided, the language of the user is used.",
      "type": "string"
    },
    "bodyMultiPartFormDataFile": {
      "in": "formData",
      "name": "file",
      "x-ms-summary": "File",
      "description": "The file to upload.",
      "type": "file",
      "required": true
    },
    "bodyRequestCopyToVersion": {
      "name": "body",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/requestPostCopyToVersion"
      },
      "required": true
    }
  },
  "responses": {
    "defaultCreated": {
      "description": "Created",
      "schema": {
        "$ref": "#/definitions/defaultObjectCreatedResponse"
      }
    },
    "defaultCopiedToVersion": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/defaultObjectCopiedToVersionResponse"
      }
    },
    "defaultNoContent": {
      "description": "No Content"
    },
    "defaultBadRequest": {
      "description": "Bad request"
    },
    "defaultNotAuthorized": {
      "description": "Not Authorized",
      "schema": {
        "$ref": "#/definitions/responseHiveError"
      }
    },
    "defaultForbidden": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/responseHiveError"
      }
    },
    "defaultNotFound": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/responseHiveError"
      }
    },
    "defaultConflict": {
      "description": "Conflict",
      "schema": {
        "$ref": "#/definitions/responseHiveError"
      }
    },
    "defaultFile": {
      "description": "OK",
      "schema": {
        "type": "file"
      }
    },
    "defaultServerError": {
      "description": "Server Error"
    }
  },
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://ebusinesscloud.eu.auth0.com/authorize",
      "tokenUrl": "https://ebusinesscloud.eu.auth0.com/oauth/token",
      "scopes": {
        "offline_access": "offline_access",
        "openId": "openId",
        "profile": "profile"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "offline_access",
        "openId",
        "profile"
      ]
    }
  ],
  "tags": [
    {
      "name": "Common"
    },
    {
      "name": "Manufacturer"
    },
    {
      "name": "Company"
    },
    {
      "name": "Invite"
    },
    {
      "name": "Contact"
    },
    {
      "name": "Versioning"
    },
    {
      "name": "Component"
    },
    {
      "name": "Property"
    },
    {
      "name": "Feature"
    },
    {
      "name": "Unit"
    },
    {
      "name": "PriceCatalog"
    },
    {
      "name": "CustomObject"
    },
    {
      "name": "Project"
    },
    {
      "name": "ProjectSegment"
    },
    {
      "name": "ProjectSegmentItem"
    },
    {
      "name": "Configuration"
    },
    {
      "name": "OutputDocument"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Plugin"
    },
    {
      "name": "Complaint"
    },
    {
      "name": "UserAccount"
    },
    {
      "name": "Security"
    },
    {
      "name": "SalesConditions"
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://hivecpq.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://hivecpq.com/en/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Sales and CRM"
    }
  ]
}
